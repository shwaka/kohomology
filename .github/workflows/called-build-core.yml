name: called-build-core

on:
  workflow_call:
    inputs:
      JAVA_VERSION:
        required: true
        type: string
        description: the version of Java
      JAVA_DISTRIBUTION:
        required: true
        type: string
        description: the distribution of Java
    outputs:
      CACHE_KEY_GRADLE:
        value: ${{ jobs.main.outputs.CACHE_KEY_GRADLE }}
        description: the cache key for ~/.gradle/caches
      # CACHE_RESTORE_KEYS_GRADLE:
      #   value: ${{ jobs.main.outputs.CACHE_RESTORE_KEYS_GRADLE }}
      #   description: the cache restore-keys for ~/.gradle/caches
      CACHE_KEY_M2:
        value: ${{ jobs.main.outputs.CACHE_KEY_M2 }}
        description: the cache key for ~/.m2/repository
      CACHE_KEY_GRADLE_BUILD:
        value: ${{ jobs.main.outputs.CACHE_KEY_GRADLE_BUILD }}
        description: the cache key for kohomology/.gradle, kohomology/build

jobs:
  main:
    runs-on: ubuntu-24.04
    outputs:
      CACHE_KEY_GRADLE: ${{ steps.setup-cache-key.outputs.CACHE_KEY_GRADLE }}
      # CACHE_RESTORE_KEYS_GRADLE: ${{ steps.setup-cache-key.outputs.CACHE_RESTORE_KEYS_GRADLE }}
      CACHE_KEY_M2: ${{ steps.setup-cache-key.outputs.CACHE_KEY_M2 }}
      CACHE_KEY_GRADLE_BUILD: ${{ steps.setup-cache-key.outputs.CACHE_KEY_GRADLE_BUILD }}
    defaults:
      run:
        working-directory: kohomology
    steps:
      - uses: actions/checkout@v3
      - name: Setup cache key
        id: setup-cache-key
        run: |
          {
          echo "CACHE_KEY_GRADLE=${{ runner.os }}-gradle-jvm-${{ hashFiles('**/*.gradle.kts') }}"
          # CACHE_RESTORE_KEYS_GRADLE should be used only in build-core
          # since other called workflows should read cache from build-core in the same run.
          echo "CACHE_RESTORE_KEYS_GRADLE=${{ runner.os }}-gradle-jvm-"
          # Add ${{ github.sha }} to ensure that the result will be always saved to the cache
          # https://qiita.com/yuki0n0/items/d52e1fbbed08bc263101
          echo "CACHE_KEY_M2=${{ runner.os }}-kohomology-maven-local-${{ github.sha }}"
          echo "CACHE_KEY_GRADLE_BUILD=${{ runner.os }}-gradle-build-${{ github.sha }}"
          } >> "$GITHUB_OUTPUT"
      - name: "Cache: ~/.gradle/caches"
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ steps.setup-cache-key.outputs.CACHE_KEY_GRADLE }}
          restore-keys: ${{ steps.setup-cache-key.outputs.CACHE_RESTORE_KEYS_GRADLE }}
      - name: "Save cache: ~/.m2/repository"
        uses: actions/cache@v3
        # will be restored in 'benchmark-core' and 'build-website'
        with:
          path: ~/.m2/repository
          key: ${{ steps.setup-cache-key.outputs.CACHE_KEY_M2 }}
      - name: "Save cache: .gradle, build"
        uses: actions/cache@v3
        # will be restored in test-core
        with:
          path: |
            kohomology/.gradle
            kohomology/build
          key: ${{ steps.setup-cache-key.outputs.CACHE_KEY_GRADLE_BUILD }}
      - name: Set up JDK ${{ inputs.JAVA_VERSION }}
        uses: actions/setup-java@v3
        with:
          distribution: ${{ inputs.JAVA_DISTRIBUTION }}
          java-version: ${{ inputs.JAVA_VERSION }}
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Download dependencies # Not necessary, but useful to make the log clean
        run: ./gradlew dependencies --configuration jvmTestRuntimeClasspath --stacktrace
      - name: Compile with Gradle
        run: ./gradlew compileKotlinJvm
      - name: Install kohomology to MavenLocal
        # This publication will be saved by actions/cache.
        # Native publication is not used in later workflows.
        # Note that publish{Jvm,Js}PublicationToMavenLocal shouldn't be used here.
        # If they were used, then -jvm and -js would be required when writing dependency.
        run: ./gradlew publishToMavenLocal -Dkohomology.disableNative
