# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Test

on:
  push:
    branches: [ main ]
    paths: [ 'kohomology/**', '.github/workflows/gradle.yml' ]
  pull_request:
    branches: [ main ]
    paths: [ 'kohomology/**', '.github/workflows/gradle.yml' ]
  workflow_dispatch:

jobs:
  build-jvm:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: kohomology

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-jvm-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-jvm-
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Download dependencies # Not necessary, but useful to make the log clean
        run: ./gradlew dependencies --configuration jvmTestRuntimeClasspath --stacktrace
      - name: Compile with Gradle
        run: ./gradlew compileKotlinJvm
      - name: Test with Gradle
        run: ./gradlew jvmTest -Dkococo.debug
      - name: Jacoco Test Report
        run: ./gradlew jacocoTestReport
      - name: Upload to codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }} # "token not required for public repositories" らしい…？
        run: bash <(curl -s https://codecov.io/bash)
      - name: Check with ktlint
        run: ./gradlew kc # This will run ktlintCheck for ALL projects (see build.gradle.kts)
