name: Build # This will be shown in the badge in README.md
# name: Test, benchmark, and generate site

env:
  JDK_VERSION: 1.8
  NODE_VERSION: 16.x
  # 'env' cannot be used in 'runs-on'(?)
  SHARED_ARTIFACT_NAME: _internal_artifact
  SHARED_ARTIFACT_PATH: website/kohomology-js/build/js

on:
  push:
    branches: [ main ]
    paths: [ 'kohomology/**', 'profile/**', 'website/**', 'scripts/prepare-site.sh', '.github/workflows/main.yml' ]
  # pull_request: # See pull_request.yml for workflows on pull requests
  #   branches: [ main ]
  #   paths: [ 'kohomology/**', 'profile/**', '.github/workflows/gradle.yml' ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: kohomology
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-jvm-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle-jvm-
      - uses: actions/cache@v3
        # will be restored in 'benchmark' and 'generate-site'
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-kohomology-maven-local-${{ hashFiles('kohomology/*.gradle.kts', 'kohomology/src/**') }}
      - name: Set up JDK ${{ env.JDK_VERSION }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_VERSION }}
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Download dependencies # Not necessary, but useful to make the log clean
        run: ./gradlew dependencies --configuration jvmTestRuntimeClasspath --stacktrace
      - name: Compile with Gradle
        run: ./gradlew compileKotlinJvm
      - name: Test with Gradle
        run: ./gradlew jvmTest -Dkococo.debug
      - name: Jacoco Test Report
        run: ./gradlew jacocoTestReport
      - name: Upload to codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }} # "token not required for public repositories" らしい…？
        run: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov -t ${CODECOV_TOKEN}
      - name: Install kohomology to MavenLocal
        # saved by actions/cache
        run: ./gradlew publishToMavenLocal
        working-directory: kohomology

  benchmark:
    needs: test
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-jvm-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle-jvm-
      - uses: actions/cache@v3
        # restore mavenLocal repository from 'test'
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-kohomology-maven-local-${{ hashFiles('kohomology/*.gradle.kts', 'kohomology/src/**') }}
      - name: Set up JDK ${{ env.JDK_VERSION }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_VERSION }}
      - name: Run benchmark
        run: ./gradlew benchmark -DbenchmarkTarget=com.github.shwaka.kohomology.profile.KohomologyBenchmark
        working-directory: profile
      - name: Format benchmark result
        run: ./gradlew formatBenchmarkResult
        working-directory: profile
      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          tool: customSmallerIsBetter
          output-file-path: profile/build/kohomology/benchmark/output.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          gh-pages-branch: benchmark-data

  generate-site:
    needs: [ test, benchmark ]
    runs-on: ubuntu-20.04
    env:
      BENCHMARK_DATA_DIR: benchmark-data
    steps:
      - uses: actions/checkout@v3
        with:
          # Number of commits to fetch. 0 indicates all history for all branches and tags.
          fetch-depth: 0
      - uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-jvm-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle-jvm-
      - uses: actions/cache@v3
        # restore mavenLocal repository from 'test'
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-kohomology-maven-local-${{ hashFiles('kohomology/*.gradle.kts', 'kohomology/src/**') }}
      - uses: actions/cache@v3 # for lint-website
        # actions/upload-artifact も使ってみたけど，ファイルが多すぎるせいか5分くらいかかる
        with:
          # 以下が全て必要
          # - build/js/packages/kohomology-js
          # - build/js/packages-imported/kotlin/<version>
          # - build/js/packages-imported/kotlin-test/<version>
          # - build/js/packages-imported/kotlin-test-js-runner/<version>
          path: website/kohomology-js/build/js
          key: ${{ runner.os }}-kohomology-js-node-package-${{ hashFiles('website/kohomology-js/*.gradle.kts', 'website/kohomology-js/src') }}
      - name: Set up JDK ${{ env.JDK_VERSION }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_VERSION }}
      - name: Prepare benchmark data and dokka html
        run: ./scripts/prepare-site.sh
      - name: Assert samples are working
        run: ./scripts/run-sample.sh
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: website/package-lock.json
      - run: npm ci
        working-directory: website
      - name: Test components in website
        run: npm test
        working-directory: website
      - name: Build site
        run: npm run build
        working-directory: website
      - name: Upload
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: website/build

  lint-kotlin:
    needs: [ test ]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ env.JDK_VERSION }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_VERSION }}
      - name: ktlint
        run: ./gradlew ktlintCheck
        working-directory: kohomology

  lint-website:
    needs: [ generate-site ]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: website/package-lock.json
      - uses: actions/cache@v3 # restore from generate-site
        # actions/download-artifact も使ってみたけど，ファイルが多すぎるせいか5分くらいかかる
        with:
          # 以下が全て必要
          # - build/js/packages/kohomology-js
          # - build/js/packages-imported/kotlin/<version>
          # - build/js/packages-imported/kotlin-test/<version>
          # - build/js/packages-imported/kotlin-test-js-runner/<version>
          path: website/kohomology-js/build/js
          key: ${{ runner.os }}-kohomology-js-node-package-${{ hashFiles('website/kohomology-js/*.gradle.kts', 'website/kohomology-js/src') }}
      - run: npm ci
        working-directory: website
      - name: eslint
        run: npm run eslint
        working-directory: website
