name: Build # This will be shown in the badge in README.md
# name: Test, benchmark, and generate site

env:
  JAVA_DISTRIBUTION: zulu # default value in actions/setup-java@v1
  JAVA_VERSION: 8
  # NODE_VERSION: 16.x # node version is specified in package.json by using volta
  # 'env' cannot be used in 'runs-on'(?)
  SHARED_ARTIFACT_NAME: _internal_artifact
  SHARED_ARTIFACT_PATH: website/kohomology-js/build/js

on:
  push:
    branches: [ main ]
    paths: [ 'kohomology/**', 'profile/**', 'website/**', 'scripts/prepare-site.sh', '.github/workflows/main.yml' ]
  # pull_request: # See pull_request.yml for workflows on pull requests
  #   branches: [ main ]
  #   paths: [ 'kohomology/**', 'profile/**', '.github/workflows/gradle.yml' ]
  workflow_dispatch:

jobs:
  prepare-env:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: setup
        run: |
          echo "hash-gradle-kts=${{ hashFiles('**/*.gradle.kts') }}" >> "$GITHUB_OUTPUT"
    outputs:
      JAVA_DISTRIBUTION: ${{ env.JAVA_DISTRIBUTION }}
      JAVA_VERSION: ${{ env.JAVA_VERSION }}

  build-core:
    needs: [ prepare-env ]
    uses: ./.github/workflows/build-core.yml
    with:
      JAVA_DISTRIBUTION: ${{ needs.prepare-env.outputs.JAVA_DISTRIBUTION }}
      JAVA_VERSION: ${{ needs.prepare-env.outputs.JAVA_VERSION }}

  test-core:
    needs: [ prepare-env, build-core ]
    uses: ./.github/workflows/test-core.yml
    with:
      JAVA_DISTRIBUTION: ${{ needs.prepare-env.outputs.JAVA_DISTRIBUTION }}
      JAVA_VERSION: ${{ needs.prepare-env.outputs.JAVA_VERSION }}
      CACHE_KEY_GRADLE_BUILD: ${{ needs.build-core.outputs.CACHE_KEY_GRADLE_BUILD }}
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  benchmark-core:
    needs: [ prepare-env, build-core ]
    uses: ./.github/workflows/benchmark-core.yml
    with:
      JAVA_DISTRIBUTION: ${{ needs.prepare-env.outputs.JAVA_DISTRIBUTION }}
      JAVA_VERSION: ${{ needs.prepare-env.outputs.JAVA_VERSION }}
      CACHE_KEY_GRADLE: ${{ needs.build-core.outputs.CACHE_KEY_GRADLE }}
      CACHE_RESTORE_KEYS_GRADLE: ${{ needs.build-core.outputs.CACHE_RESTORE_KEYS_GRADLE }}
      CACHE_KEY_M2: ${{ needs.build-core.outputs.CACHE_KEY_M2 }}

  build-website:
    needs: [ prepare-env, build-core, test-core, benchmark-core ]
    uses: ./.github/workflows/build-website.yml
    with:
      JAVA_DISTRIBUTION: ${{ needs.prepare-env.outputs.JAVA_DISTRIBUTION }}
      JAVA_VERSION: ${{ needs.prepare-env.outputs.JAVA_VERSION }}
      CACHE_KEY_GRADLE: ${{ needs.build-core.outputs.CACHE_KEY_GRADLE }}
      CACHE_RESTORE_KEYS_GRADLE: ${{ needs.build-core.outputs.CACHE_RESTORE_KEYS_GRADLE }}
      CACHE_KEY_M2: ${{ needs.build-core.outputs.CACHE_KEY_M2 }}

  lint-core:
    needs: [ prepare-env, build-core ]
    uses: ./.github/workflows/build-core.yml
    with:
      JAVA_DISTRIBUTION: ${{ needs.prepare-env.outputs.JAVA_DISTRIBUTION }}
      JAVA_VERSION: ${{ needs.prepare-env.outputs.JAVA_VERSION }}

  lint-website:
    needs: [ build-website ]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      # - name: Use Node.js
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: ${{ env.NODE_VERSION }}
      #     cache: 'npm'
      #     cache-dependency-path: website/package-lock.json
      - uses: volta-cli/action@v3
      - name: "Read cache: website/kohomology-js/build/js"
        uses: actions/cache@v3 # restore from build-website
        # actions/download-artifact も使ってみたけど，ファイルが多すぎるせいか5分くらいかかる
        with:
          # 以下が全て必要
          # - build/js/packages/kohomology-js
          # - build/js/packages-imported/kotlin/<version>
          # - build/js/packages-imported/kotlin-test/<version>
          # - build/js/packages-imported/kotlin-test-js-runner/<version>
          path: website/kohomology-js/build/js
          key: ${{ runner.os }}-kohomology-js-node-package-${{ github.sha }}
      - run: npm ci
        working-directory: website
      - name: eslint
        run: npm run eslint
        working-directory: website
