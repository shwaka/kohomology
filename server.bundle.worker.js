/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 617:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
  if (true)
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(72), __webpack_require__(887), __webpack_require__(639), __webpack_require__(683), __webpack_require__(15)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  else {}
}(this, function (_, kotlin_kotlin, kotlin_com_github_shwaka_kohomology_kohomology, kotlin_com_github_h0tk3y_betterParse_better_parse, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var protoOf = kotlin_kotlin.$_$.h8;
  var hashCode = kotlin_kotlin.$_$.i7;
  var THROW_CCE = kotlin_kotlin.$_$.oa;
  var equals = kotlin_kotlin.$_$.e7;
  var classMeta = kotlin_kotlin.$_$.c7;
  var VOID = kotlin_kotlin.$_$.mb;
  var setMetadataFor = kotlin_kotlin.$_$.i8;
  var Exception_init_$Create$ = kotlin_kotlin.$_$.b1;
  var collectionSizeOrDefault = kotlin_kotlin.$_$.f4;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.k;
  var ArrayList_init_$Create$_0 = kotlin_kotlin.$_$.l;
  var noWhenBranchMatchedException = kotlin_kotlin.$_$.cb;
  var ZeroGVector = kotlin_com_github_shwaka_kohomology_kohomology.$_$.g;
  var GVector = kotlin_com_github_shwaka_kohomology_kohomology.$_$.d;
  var Unit_getInstance = kotlin_kotlin.$_$.l3;
  var Companion_getInstance = kotlin_com_github_shwaka_kohomology_kohomology.$_$.w;
  var Companion_getInstance_0 = kotlin_com_github_shwaka_kohomology_kohomology.$_$.v;
  var Companion_getInstance_1 = kotlin_com_github_shwaka_kohomology_kohomology.$_$.r;
  var PrintType_TEX_getInstance = kotlin_com_github_shwaka_kohomology_kohomology.$_$.o;
  var Printer_init_$Create$ = kotlin_com_github_shwaka_kohomology_kohomology.$_$.p;
  var plus = kotlin_kotlin.$_$.w5;
  var Companion_getInstance_2 = kotlin_com_github_shwaka_kohomology_kohomology.$_$.s;
  var get_SparseMatrixSpaceOverRational = kotlin_com_github_shwaka_kohomology_kohomology.$_$.m;
  var lazy = kotlin_kotlin.$_$.bb;
  var joinToString = kotlin_kotlin.$_$.l5;
  var QuotDGAlgebra = kotlin_com_github_shwaka_kohomology_kohomology.$_$.f;
  var isInterface = kotlin_kotlin.$_$.s7;
  var FreeDGAlgebra = kotlin_com_github_shwaka_kohomology_kohomology.$_$.j;
  var DGAlgebra = kotlin_com_github_shwaka_kohomology_kohomology.$_$.c;
  var IntDegreeGroup_getInstance = kotlin_com_github_shwaka_kohomology_kohomology.$_$.q;
  var Companion_getInstance_3 = kotlin_com_github_shwaka_kohomology_kohomology.$_$.u;
  var IntDegreeGroup = kotlin_com_github_shwaka_kohomology_kohomology.$_$.b;
  var emptyList = kotlin_kotlin.$_$.b5;
  var dropLast = kotlin_kotlin.$_$.y4;
  var last = kotlin_kotlin.$_$.o5;
  var listOf = kotlin_kotlin.$_$.p5;
  var ParseException = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.o;
  var AugmentedDegreeGroup = kotlin_com_github_shwaka_kohomology_kohomology.$_$.a;
  var ShowShift_BAR_getInstance = kotlin_com_github_shwaka_kohomology_kohomology.$_$.n;
  var CopiedNamePrintConfig = kotlin_com_github_shwaka_kohomology_kohomology.$_$.l;
  var getKClass = kotlin_kotlin.$_$.e;
  var toString = kotlin_kotlin.$_$.m8;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.e1;
  var KProperty1 = kotlin_kotlin.$_$.v8;
  var getPropertyCallableRef = kotlin_kotlin.$_$.g7;
  var charSequenceGet = kotlin_kotlin.$_$.z6;
  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.o1;
  var Char = kotlin_kotlin.$_$.ea;
  var drop = kotlin_kotlin.$_$.b9;
  var dropLast_0 = kotlin_kotlin.$_$.a9;
  var objectMeta = kotlin_kotlin.$_$.g8;
  var NoMatchingToken = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.n;
  var Collection = kotlin_kotlin.$_$.o3;
  var AlternativesFailure = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.m;
  var prependIndent = kotlin_kotlin.$_$.f9;
  var Default_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.a;
  var List = kotlin_kotlin.$_$.t3;
  var PrimitiveClasses_getInstance = kotlin_kotlin.$_$.e3;
  var arrayOf = kotlin_kotlin.$_$.xa;
  var createKType = kotlin_kotlin.$_$.b;
  var createInvariantKTypeProjection = kotlin_kotlin.$_$.a;
  var serializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.b2;
  var KSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.v1;
  var Enum = kotlin_kotlin.$_$.ha;
  var first = kotlin_kotlin.$_$.e5;
  var mutableListOf = kotlin_kotlin.$_$.u5;
  var copyToArray = kotlin_kotlin.$_$.v4;
  var getStringHashCode = kotlin_kotlin.$_$.h7;
  var Exception = kotlin_kotlin.$_$.ia;
  var jsonToGeneratorList = kotlin_com_github_shwaka_kohomology_kohomology.$_$.k;
  var StringIndeterminateName = kotlin_com_github_shwaka_kohomology_kohomology.$_$.i;
  var IllegalArgumentException = kotlin_kotlin.$_$.ja;
  var Indeterminate = kotlin_com_github_shwaka_kohomology_kohomology.$_$.h;
  var Companion_getInstance_4 = kotlin_com_github_shwaka_kohomology_kohomology.$_$.t;
  var trimIndent = kotlin_kotlin.$_$.da;
  var InvalidIdentifierException = kotlin_com_github_shwaka_kohomology_kohomology.$_$.e;
  //endregion
  //region block: pre-declaration
  setMetadataFor(Left, 'Left', classMeta);
  setMetadataFor(Right, 'Right', classMeta);
  setMetadataFor(FreeDGAWrapper, 'FreeDGAWrapper', classMeta);
  setMetadataFor(ParenParser, 'ParenParser', objectMeta);
  setMetadataFor(MessageOptionsKt, 'MessageOptionsKt', classMeta);
  setMetadataFor(MessageOptionsInternal, 'MessageOptionsInternal', classMeta);
  setMetadataFor(StyledMessageKt, 'StyledMessageKt', classMeta);
  setMetadataFor(MessageType, 'MessageType', classMeta, Enum);
  setMetadataFor(StyledMessageInternal, 'StyledMessageInternal', classMeta);
  setMetadataFor(StyledStringListBuilder, 'StyledStringListBuilder', objectMeta);
  setMetadataFor(StyledStringKt, 'StyledStringKt', classMeta);
  setMetadataFor(StringType, 'StringType', classMeta, Enum);
  setMetadataFor(StyledStringInternal, 'StyledStringInternal', classMeta);
  setMetadataFor(ValidationResult, 'ValidationResult', classMeta);
  setMetadataFor(ValidationResultType, 'ValidationResultType', classMeta, Enum);
  setMetadataFor(ValidationResultInternal, 'ValidationResultInternal', classMeta);
  setMetadataFor(Success, 'Success', classMeta, ValidationResultInternal);
  setMetadataFor(Error_0, 'Error', classMeta, ValidationResultInternal);
  //endregion
  function Left(value) {
    this.h2v_1 = value;
  }
  protoOf(Left).toString = function () {
    return 'Left(value=' + this.h2v_1 + ')';
  };
  protoOf(Left).hashCode = function () {
    return this.h2v_1 == null ? 0 : hashCode(this.h2v_1);
  };
  protoOf(Left).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Left))
      return false;
    var tmp0_other_with_cast = other instanceof Left ? other : THROW_CCE();
    if (!equals(this.h2v_1, tmp0_other_with_cast.h2v_1))
      return false;
    return true;
  };
  function Right(value) {
    this.i2v_1 = value;
  }
  protoOf(Right).toString = function () {
    return 'Right(value=' + this.i2v_1 + ')';
  };
  protoOf(Right).hashCode = function () {
    return this.i2v_1 == null ? 0 : hashCode(this.i2v_1);
  };
  protoOf(Right).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Right))
      return false;
    var tmp0_other_with_cast = other instanceof Right ? other : THROW_CCE();
    if (!equals(this.i2v_1, tmp0_other_with_cast.i2v_1))
      return false;
    return true;
  };
  function _get_freeLoopSpace__mpio85($this) {
    // Inline function 'kotlin.getValue' call
    freeLoopSpace$factory();
    return $this.k2v_1.w();
  }
  function _get_cyclicModel__pgehsx($this) {
    // Inline function 'kotlin.getValue' call
    cyclicModel$factory();
    return $this.l2v_1.w();
  }
  function _get_derivationLieAlgebra__ahlx7w($this) {
    // Inline function 'kotlin.getValue' call
    derivationLieAlgebra$factory();
    return $this.m2v_1.w();
  }
  function getDGVectorSpace($this, name) {
    var tmp;
    switch (name) {
      case 'self':
        tmp = $this.j2v_1;
        break;
      case 'freeLoopSpace':
        tmp = _get_freeLoopSpace__mpio85($this);
        break;
      case 'cyclic':
        tmp = _get_cyclicModel__pgehsx($this);
        break;
      case 'derivation':
        tmp = _get_derivationLieAlgebra__ahlx7w($this);
        break;
      case 'idealQuot':
        var tmp1_elvis_lhs = $this.o2v_1;
        var tmp_0;
        if (tmp1_elvis_lhs == null) {
          throw Exception_init_$Create$('ideal is not set');
        } else {
          tmp_0 = tmp1_elvis_lhs;
        }

        tmp = tmp_0;
        break;
      default:
        throw Exception_init_$Create$('Invalid name: ' + name);
    }
    return tmp;
  }
  function createIdeal($this, idealJson) {
    // Inline function 'kotlin.collections.mapNotNull' call
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = jsonToIdealGenerators(idealJson);
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'FreeDGAWrapper.createIdeal.<anonymous>' call
      tmp$ret$0 = $this.j2v_1.x26(item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    // Inline function 'kotlin.collections.mapNotNullTo' call
    var tmp0_mapNotNullTo = ArrayList_init_$Create$_0();
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator_0 = tmp0_mapTo.f();
    while (tmp0_iterator_0.g()) {
      var element = tmp0_iterator_0.h();
      // Inline function 'kotlin.collections.mapNotNullTo.<anonymous>' call
      // Inline function 'FreeDGAWrapper.createIdeal.<anonymous>' call
      var tmp;
      if (element instanceof GVector) {
        tmp = element;
      } else {
        if (element instanceof ZeroGVector) {
          tmp = null;
        } else {
          noWhenBranchMatchedException();
        }
      }
      var tmp0_safe_receiver = tmp;
      if (tmp0_safe_receiver == null)
        null;
      else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        tmp0_mapNotNullTo.a(tmp0_safe_receiver);
      }
    }
    var generators = tmp0_mapNotNullTo;
    return $this.j2v_1.p1g(generators);
  }
  function FreeDGAWrapper$freeLoopSpace$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance().w2o(this$0.j2v_1);
    };
  }
  function FreeDGAWrapper$cyclicModel$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_0().k2n(this$0.j2v_1);
    };
  }
  function FreeDGAWrapper$derivationLieAlgebra$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_1().l24(this$0.j2v_1);
    };
  }
  function FreeDGAWrapper$idealInfo$lambda($prefix) {
    return function ($this$styledMessage) {
      return $this$styledMessage.p2v($prefix + '0');
    };
  }
  function FreeDGAWrapper$idealInfo$lambda_0($prefix, $generatorString) {
    return function ($this$styledMessage) {
      return $this$styledMessage.p2v($prefix + '(' + $generatorString + ')');
    };
  }
  function FreeDGAWrapper$computeCohomologyDim$lambda($degree, $dim) {
    return function ($this$styledMessage) {
      return $this$styledMessage.p2v('\\mathrm{dim}H^{' + $degree + '} = ' + $dim);
    };
  }
  function FreeDGAWrapper$computeCohomologyClass$lambda($targetName) {
    return function ($this$styledMessage) {
      return $this$styledMessage.q2v('Cannot compute class for ' + $targetName);
    };
  }
  function FreeDGAWrapper$computeMinimalModel$lambda($this$styledMessage) {
    return $this$styledMessage.q2v('Minimal model of free loop space is currently not supported.');
  }
  function FreeDGAWrapper$computeMinimalModel$lambda_0($this$styledMessage) {
    return $this$styledMessage.q2v('Minimal model can be computed only for DGAs.');
  }
  function FreeDGAWrapper$computeMinimalModel$lambda_1($this$styledMessage) {
    return $this$styledMessage.q2v("Internal error! This can't happen!");
  }
  function FreeDGAWrapper$computeMinimalModel$lambda_2($reportProgress) {
    return function (progress) {
      $reportProgress(progress.v2b_1, progress.w2b_1, progress.x2b_1);
      return Unit_getInstance();
    };
  }
  function FreeDGAWrapper$computeMinimalModel$lambda_3($targetDGVectorSpace) {
    return function ($this$styledMessage) {
      var p = Printer_init_$Create$(PrintType_TEX_getInstance());
      return plus(plus($this$styledMessage.q2v('The minimal model of '), $this$styledMessage.p2v(p.t26($targetDGVectorSpace))), $this$styledMessage.q2v(' is'));
    };
  }
  function FreeDGAWrapper(json) {
    this.j2v_1 = Companion_getInstance_2().j27(get_SparseMatrixSpaceOverRational(), json);
    var tmp = this;
    tmp.k2v_1 = lazy(FreeDGAWrapper$freeLoopSpace$delegate$lambda(this));
    var tmp_0 = this;
    tmp_0.l2v_1 = lazy(FreeDGAWrapper$cyclicModel$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.m2v_1 = lazy(FreeDGAWrapper$derivationLieAlgebra$delegate$lambda(this));
    this.n2v_1 = null;
    this.o2v_1 = null;
  }
  protoOf(FreeDGAWrapper).tryParseIdealGeneratorString = function (generatorString) {
    this.j2v_1.x26(generatorString);
  };
  protoOf(FreeDGAWrapper).setIdeal = function (idealJson) {
    var dgIdeal = createIdeal(this, idealJson);
    this.n2v_1 = dgIdeal;
    this.o2v_1 = this.j2v_1.w1g(dgIdeal);
  };
  protoOf(FreeDGAWrapper).tryCreateIdeal = function (idealJson) {
    createIdeal(this, idealJson);
  };
  protoOf(FreeDGAWrapper).dgaInfo = function () {
    return getDGAInfo(this.j2v_1, 'V');
  };
  protoOf(FreeDGAWrapper).idealInfo = function () {
    var tmp0_elvis_lhs = this.n2v_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw Exception_init_$Create$('Ideal is not set');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var dgIdeal = tmp;
    var prefix = 'I = ';
    if (dgIdeal.r1l().p()) {
      var tmp_0 = MessageType_SUCCESS_getInstance();
      return styledMessage(tmp_0, FreeDGAWrapper$idealInfo$lambda(prefix)).u2v();
    }
    var generatorString = joinToString(dgIdeal.r1l(), ', ');
    var tmp_1 = MessageType_SUCCESS_getInstance();
    return styledMessage(tmp_1, FreeDGAWrapper$idealInfo$lambda_0(prefix, generatorString)).u2v();
  };
  protoOf(FreeDGAWrapper).computationHeader = function (targetName, minDegree, maxDegree) {
    var targetDGVectorSpace = getDGVectorSpace(this, targetName);
    return computationHeader(targetDGVectorSpace, minDegree, maxDegree).u2v();
  };
  protoOf(FreeDGAWrapper).computeCohomology = function (targetName, degree) {
    var targetDGVectorSpace = getDGVectorSpace(this, targetName);
    return computeCohomology(targetDGVectorSpace, degree).u2v();
  };
  protoOf(FreeDGAWrapper).computeCohomologyDim = function (targetName, degree) {
    var targetDGVectorSpace = getDGVectorSpace(this, targetName);
    var dim = getBasis(targetDGVectorSpace, degree).i();
    var tmp = MessageType_SUCCESS_getInstance();
    return styledMessage(tmp, FreeDGAWrapper$computeCohomologyDim$lambda(degree, dim)).u2v();
  };
  protoOf(FreeDGAWrapper).computeCohomologyClass = function (targetName, cocycleString, showBasis) {
    var targetDGVectorSpace = getDGVectorSpace(this, targetName);
    var tmp;
    if (isInterface(targetDGVectorSpace, FreeDGAlgebra)) {
      tmp = computeCohomologyClass(targetDGVectorSpace, cocycleString, showBasis).u2v();
    } else {
      if (isInterface(targetDGVectorSpace, QuotDGAlgebra)) {
        if (!isInterface(targetDGVectorSpace, QuotDGAlgebra))
          THROW_CCE();
        tmp = computeCohomologyClassInQuotient(this.j2v_1, targetDGVectorSpace, cocycleString, showBasis).u2v();
      } else {
        var tmp_0 = MessageType_ERROR_getInstance();
        tmp = styledMessage(tmp_0, FreeDGAWrapper$computeCohomologyClass$lambda(targetName)).u2v();
      }
    }
    return tmp;
  };
  protoOf(FreeDGAWrapper).computeMinimalModel = function (targetName, isomorphismUpTo, reportProgress) {
    if (targetName === 'freeLoopSpace') {
      // Inline function 'kotlin.arrayOf' call
      var tmp = MessageType_ERROR_getInstance();
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      return [styledMessage(tmp, FreeDGAWrapper$computeMinimalModel$lambda).u2v()];
    }
    var targetDGVectorSpace = getDGVectorSpace(this, targetName);
    if (!isInterface(targetDGVectorSpace, DGAlgebra)) {
      // Inline function 'kotlin.arrayOf' call
      var tmp_0 = MessageType_ERROR_getInstance();
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      return [styledMessage(tmp_0, FreeDGAWrapper$computeMinimalModel$lambda_0).u2v()];
    }
    if (!equals(targetDGVectorSpace.c1h(), IntDegreeGroup_getInstance())) {
      // Inline function 'kotlin.arrayOf' call
      var tmp_1 = MessageType_ERROR_getInstance();
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      return [styledMessage(tmp_1, FreeDGAWrapper$computeMinimalModel$lambda_1).u2v()];
    }
    if (!isInterface(targetDGVectorSpace, DGAlgebra))
      THROW_CCE();
    var tmp_2 = Companion_getInstance_3();
    var minimalModel = tmp_2.o22(targetDGVectorSpace, isomorphismUpTo, FreeDGAWrapper$computeMinimalModel$lambda_2(reportProgress));
    // Inline function 'kotlin.collections.plus' call
    // Inline function 'kotlin.arrayOf' call
    var tmp_3 = MessageType_SUCCESS_getInstance();
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp4_plus = [styledMessage(tmp_3, FreeDGAWrapper$computeMinimalModel$lambda_3(targetDGVectorSpace)).u2v()];
    var tmp5_plus = getDGAInfo(minimalModel.x22(), 'W');
    // Inline function 'kotlin.js.asDynamic' call
    return tmp4_plus.concat(tmp5_plus);
  };
  function getBasis(dgVectorSpace, degree) {
    var tmp;
    var tmp_0 = dgVectorSpace.c1h();
    if (tmp_0 instanceof IntDegreeGroup) {
      tmp = dgVectorSpace.m1g().c1m(degree);
    } else {
      tmp = dgVectorSpace.m1g().i1p(degree);
    }
    return tmp;
  }
  function joinToStyledMathString(_this__u8e3s4, separator, transform) {
    if (_this__u8e3s4.p()) {
      return emptyList();
    }
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = dropLast(_this__u8e3s4, 1);
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'joinToStyledMathString.<anonymous>' call
      tmp$ret$0 = new StyledStringInternal(StringType_MATH_getInstance(), transform(item) + separator);
      tmp0_mapTo.a(tmp$ret$0);
    }
    return plus(tmp0_mapTo, listOf(new StyledStringInternal(StringType_MATH_getInstance(), transform(last(_this__u8e3s4)))));
  }
  function computeCohomologyInternal(dgVectorSpace, degree) {
    var tmp = PrintType_TEX_getInstance();
    var p = Printer_init_$Create$(tmp, VOID, VOID, VOID, computeCohomologyInternal$lambda);
    var basis = getBasis(dgVectorSpace, degree);
    var tmp_0 = MessageType_SUCCESS_getInstance();
    return styledMessage(tmp_0, computeCohomologyInternal$lambda_0(basis, degree, p));
  }
  function computeCohomology(dgVectorSpace, degree) {
    return computeCohomologyInternal(dgVectorSpace, degree);
  }
  function computationHeader(dgVectorSpace, minDegree, maxDegree) {
    var tmp;
    if (isInterface(dgVectorSpace, FreeDGAlgebra)) {
      tmp = new MessageOptionsInternal(dgVectorSpace.o27());
    } else {
      tmp = new MessageOptionsInternal();
    }
    var options = tmp;
    var tmp_0 = MessageType_SUCCESS_getInstance();
    return styledMessage(tmp_0, computationHeader$lambda(dgVectorSpace, minDegree, maxDegree)).v2v(options);
  }
  function getCocycle(freeDGAlgebra, cocycleString) {
    var tmp;
    try {
      tmp = new Right(freeDGAlgebra.x26(cocycleString));
    } catch ($p) {
      var tmp_0;
      if ($p instanceof ParseException) {
        var e = $p;
        var tmp_1 = MessageType_ERROR_getInstance();
        var message = styledMessage(tmp_1, getCocycle$lambda(freeDGAlgebra, e));
        tmp_0 = new Left(message);
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function computeCohomologyClass(freeDGAlgebra, cocycleString, showBasis) {
    var cocycleOrMessage = getCocycle(freeDGAlgebra, cocycleString);
    var tmp;
    if (cocycleOrMessage instanceof Left) {
      tmp = cocycleOrMessage.h2v_1;
    } else {
      if (cocycleOrMessage instanceof Right) {
        var cocycle = cocycleOrMessage.i2v_1;
        var tmp_0;
        if (cocycle instanceof ZeroGVector) {
          var tmp_1 = MessageType_SUCCESS_getInstance();
          tmp_0 = styledMessage(tmp_1, computeCohomologyClass$lambda);
        } else {
          if (cocycle instanceof GVector) {
            tmp_0 = computeCohomologyClass_0(freeDGAlgebra, cocycle, showBasis);
          } else {
            noWhenBranchMatchedException();
          }
        }
        tmp = tmp_0;
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp;
  }
  function computeCohomologyClassInQuotient(freeDGAlgebra, quotDGAlgebra, cocycleString, showBasis) {
    var cocycleOrMessage = getCocycle(freeDGAlgebra, cocycleString);
    var tmp;
    if (cocycleOrMessage instanceof Left) {
      tmp = cocycleOrMessage.h2v_1;
    } else {
      if (cocycleOrMessage instanceof Right) {
        var cocycle = cocycleOrMessage.i2v_1;
        var tmp_0;
        if (cocycle instanceof ZeroGVector) {
          var tmp_1 = MessageType_SUCCESS_getInstance();
          tmp_0 = styledMessage(tmp_1, computeCohomologyClassInQuotient$lambda);
        } else {
          if (cocycle instanceof GVector) {
            var proj = quotDGAlgebra.y1n();
            var quotCocycle = proj.s1g(cocycle);
            tmp_0 = computeCohomologyClass_0(quotDGAlgebra, quotCocycle, showBasis);
          } else {
            noWhenBranchMatchedException();
          }
        }
        tmp = tmp_0;
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp;
  }
  function computeCohomologyClass_0(dgAlgebra, cocycle, showBasis) {
    var degreeGroup = dgAlgebra.c1h();
    if (!isInterface(degreeGroup, AugmentedDegreeGroup)) {
      var tmp = MessageType_ERROR_getInstance();
      return styledMessage(tmp, computeCohomologyClass$lambda_0);
    }
    var tmp_0 = PrintType_TEX_getInstance();
    var p = Printer_init_$Create$(tmp_0, VOID, VOID, VOID, computeCohomologyClass$lambda_1);
    // Inline function 'kotlin.run' call
    var tmp0_run = dgAlgebra.g1g();
    // Inline function 'kotlin.contracts.contract' call
    if (tmp0_run.r1g().s1g(cocycle).e1q()) {
      var tmp_1 = MessageType_ERROR_getInstance();
      return styledMessage(tmp_1, computeCohomologyClass$lambda_2(p, cocycle, tmp0_run));
    }
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'computeCohomologyClass.<anonymous>.<anonymous>' call
    var degree = degreeGroup.g1g().e1g(cocycle.a1o_1);
    var tmp_2 = MessageType_SUCCESS_getInstance();
    return styledMessage(tmp_2, computeCohomologyClass$lambda_3(showBasis, dgAlgebra, degree, p, cocycle, tmp0_run));
  }
  function getDGAInfo(freeDGAlgebra, generatingVectorSpaceName) {
    var dgaJson = freeDGAlgebra.o27();
    var p = Printer_init_$Create$(PrintType_TEX_getInstance());
    // Inline function 'kotlin.arrayOf' call
    var tmp = MessageType_SUCCESS_getInstance();
    var tmp_0 = styledMessage(tmp, getDGAInfo$lambda(generatingVectorSpaceName, freeDGAlgebra, p)).v2v(new MessageOptionsInternal(dgaJson)).u2v();
    var tmp_1 = MessageType_SUCCESS_getInstance();
    var tmp_2 = styledMessage(tmp_1, getDGAInfo$lambda_0(freeDGAlgebra, p)).u2v();
    var tmp_3 = MessageType_SUCCESS_getInstance();
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    return [tmp_0, tmp_2, styledMessage(tmp_3, getDGAInfo$lambda_1(freeDGAlgebra, p)).u2v()];
  }
  function computeCohomologyInternal$lambda($this$$receiver) {
    // Inline function 'com.github.shwaka.kohomology.util.EntriesBuilder.register' call
    var tmp0_register = new CopiedNamePrintConfig(ShowShift_BAR_getInstance());
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!$this$$receiver.k27_1.o2(getKClass(CopiedNamePrintConfig))) {
      // Inline function 'com.github.shwaka.kohomology.util.EntriesBuilder.register.<anonymous>' call
      var message = 'Already registered: ' + getKClass(CopiedNamePrintConfig);
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.collections.set' call
    var tmp1_set = $this$$receiver.k27_1;
    var tmp2_set = getKClass(CopiedNamePrintConfig);
    tmp1_set.z3(tmp2_set, tmp0_register);
    return Unit_getInstance();
  }
  function computeCohomologyInternal$lambda$lambda($p) {
    return function (it) {
      return $p.t26(it);
    };
  }
  function computeCohomologyInternal$lambda_0($basis, $degree, $p) {
    return function ($this$styledMessage) {
      var tmp;
      if ($basis.p()) {
        tmp = $this$styledMessage.p2v('0');
      } else {
        var tmp_0 = $this$styledMessage.p2v('\\mathbb{Q}\\{');
        tmp = plus(plus(tmp_0, joinToStyledMathString($basis, ',\\ ', computeCohomologyInternal$lambda$lambda($p))), $this$styledMessage.p2v('\\}'));
      }
      var vectorSpace = tmp;
      return plus($this$styledMessage.p2v('H^{' + $degree + '} =\\ '), vectorSpace);
    };
  }
  function computationHeader$lambda$lambda($this$$receiver) {
    // Inline function 'com.github.shwaka.kohomology.util.EntriesBuilder.register' call
    var tmp0_register = new CopiedNamePrintConfig(ShowShift_BAR_getInstance());
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!$this$$receiver.k27_1.o2(getKClass(CopiedNamePrintConfig))) {
      // Inline function 'com.github.shwaka.kohomology.util.EntriesBuilder.register.<anonymous>' call
      var message = 'Already registered: ' + getKClass(CopiedNamePrintConfig);
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.collections.set' call
    var tmp1_set = $this$$receiver.k27_1;
    var tmp2_set = getKClass(CopiedNamePrintConfig);
    tmp1_set.z3(tmp2_set, tmp0_register);
    return Unit_getInstance();
  }
  function computationHeader$lambda($dgVectorSpace, $minDegree, $maxDegree) {
    return function ($this$styledMessage) {
      var tmp = PrintType_TEX_getInstance();
      var p = Printer_init_$Create$(tmp, VOID, VOID, VOID, computationHeader$lambda$lambda);
      var dgVectorSpaceWithoutParen = ParenParser_getInstance().y2v(p.t26($dgVectorSpace));
      var printed = $this$styledMessage.p2v('H^n(' + dgVectorSpaceWithoutParen + ')');
      return plus(plus(plus($this$styledMessage.q2v('Computing '), printed), $this$styledMessage.q2v(' for ')), $this$styledMessage.p2v('' + $minDegree + ' \\leq n \\leq ' + $maxDegree));
    };
  }
  function getCocycle$lambda$lambda(it) {
    return it.x3_1;
  }
  function getCocycle$lambda($freeDGAlgebra, $e) {
    return function ($this$styledMessage) {
      var tmp = $freeDGAlgebra.q27();
      var generatorsString = joinToString(tmp, ', ', VOID, VOID, VOID, VOID, getCocycle$lambda$lambda);
      return plus(plus($this$styledMessage.q2v('[Error] Parse failed.\n'), $this$styledMessage.q2v('Note: Current generators are ' + generatorsString + '\n')), $this$styledMessage.q2v('' + $e.th_1 + '\n'));
    };
  }
  function computeCohomologyClass$lambda($this$styledMessage) {
    return $this$styledMessage.q2v('The cocycle is zero.');
  }
  function computeCohomologyClassInQuotient$lambda($this$styledMessage) {
    return $this$styledMessage.q2v('The cocycle is zero.');
  }
  function computeCohomologyClass$lambda_0($this$styledMessage) {
    return $this$styledMessage.q2v('Internal error: degreeGroup is not AugmentedDegreeGroup.');
  }
  function computeCohomologyClass$lambda_1($this$$receiver) {
    // Inline function 'com.github.shwaka.kohomology.util.EntriesBuilder.register' call
    var tmp0_register = new CopiedNamePrintConfig(ShowShift_BAR_getInstance());
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!$this$$receiver.k27_1.o2(getKClass(CopiedNamePrintConfig))) {
      // Inline function 'com.github.shwaka.kohomology.util.EntriesBuilder.register.<anonymous>' call
      var message = 'Already registered: ' + getKClass(CopiedNamePrintConfig);
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.collections.set' call
    var tmp1_set = $this$$receiver.k27_1;
    var tmp2_set = getKClass(CopiedNamePrintConfig);
    tmp1_set.z3(tmp2_set, tmp0_register);
    return Unit_getInstance();
  }
  function computeCohomologyClass$lambda_2($p, $cocycle, $tmp0_run) {
    return function ($this$styledMessage) {
      return plus(plus($this$styledMessage.p2v($p.t26($cocycle)), $this$styledMessage.q2v(' is not a cocycle: ')), $this$styledMessage.p2v('d(' + $p.t26($cocycle) + ') = ' + $p.t26($tmp0_run.r1g().s1g($cocycle))));
    };
  }
  function computeCohomologyClass$lambda_3($showBasis, $dgAlgebra, $degree, $p, $cocycle, $tmp0_run) {
    return function ($this$styledMessage) {
      var tmp;
      if ($showBasis) {
        tmp = computeCohomologyInternal($dgAlgebra, $degree).s2v_1;
      } else {
        tmp = $this$styledMessage.p2v('H^' + $degree);
      }
      var cohomologyString = tmp;
      return plus($this$styledMessage.p2v('[' + $p.t26($cocycle) + '] = ' + $p.t26($tmp0_run.d1j($cocycle)) + ' \\in '), cohomologyString);
    };
  }
  function getDGAInfo$lambda$lambda($p) {
    return function (it) {
      return $p.t26(it);
    };
  }
  function getDGAInfo$lambda($generatingVectorSpaceName, $freeDGAlgebra, $p) {
    return function ($this$styledMessage) {
      var tmp = plus($this$styledMessage.p2v('(\\Lambda ' + $generatingVectorSpaceName + ', d) = '), $this$styledMessage.p2v('(\\Lambda('));
      var tmp_0 = $freeDGAlgebra.h26();
      return plus(plus(tmp, joinToStyledMathString(tmp_0, ',\\ ', getDGAInfo$lambda$lambda($p))), $this$styledMessage.p2v('), d)'));
    };
  }
  function getDGAInfo$lambda$lambda_0($p) {
    return function (it) {
      return '\\deg{' + $p.t26(it.o26_1) + '} = ' + it.p26_1;
    };
  }
  function getDGAInfo$lambda_0($freeDGAlgebra, $p) {
    return function ($this$styledMessage) {
      var tmp = $freeDGAlgebra.h26();
      return joinToStyledMathString(tmp, ',\\ ', getDGAInfo$lambda$lambda_0($p));
    };
  }
  function getDGAInfo$lambda$lambda_1($p, $tmp0_run) {
    return function (it) {
      return 'd' + $p.t26(it) + ' = ' + $p.t26($tmp0_run.r1g().s1g(it));
    };
  }
  function getDGAInfo$lambda_1($freeDGAlgebra, $p) {
    return function ($this$styledMessage) {
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = $freeDGAlgebra.g1g();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'getDGAInfo.<anonymous>.<anonymous>' call
      var tmp = $freeDGAlgebra.r1l();
      tmp$ret$0 = joinToStyledMathString(tmp, ',\\ ', getDGAInfo$lambda$lambda_1($p, tmp0_run));
      tmp$ret$1 = tmp$ret$0;
      return tmp$ret$1;
    };
  }
  function freeLoopSpace$factory() {
    return getPropertyCallableRef('freeLoopSpace', 1, KProperty1, function (receiver) {
      return _get_freeLoopSpace__mpio85(receiver);
    }, null);
  }
  function cyclicModel$factory() {
    return getPropertyCallableRef('cyclicModel', 1, KProperty1, function (receiver) {
      return _get_cyclicModel__pgehsx(receiver);
    }, null);
  }
  function derivationLieAlgebra$factory() {
    return getPropertyCallableRef('derivationLieAlgebra', 1, KProperty1, function (receiver) {
      return _get_derivationLieAlgebra__ahlx7w(receiver);
    }, null);
  }
  function findParenClose($this, text, start) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(charSequenceGet(text, start) === _Char___init__impl__6a9atx(40))) {
      // Inline function 'ParenParser.findParenClose.<anonymous>' call
      var message = '' + start + '-th char of "' + text + '" must be (, but was ' + new Char(charSequenceGet(text, start));
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    var position = start;
    var depth = 0;
    while (position < text.length) {
      var tmp0_subject = charSequenceGet(text, position);
      if (tmp0_subject === _Char___init__impl__6a9atx(40)) {
        depth = depth + 1 | 0;
      } else if (tmp0_subject === _Char___init__impl__6a9atx(41)) {
        depth = depth - 1 | 0;
      }
      if (depth === 0) {
        return position;
      }
      position = position + 1 | 0;
    }
    return null;
  }
  function isSurroundedByParen($this, text) {
    var positionClose = findParenClose($this, text, 0);
    return positionClose === (text.length - 1 | 0);
  }
  function ParenParser() {
    ParenParser_instance = this;
    this.w2v_1 = _Char___init__impl__6a9atx(40);
    this.x2v_1 = _Char___init__impl__6a9atx(41);
  }
  protoOf(ParenParser).y2v = function (text) {
    var tmp;
    if (isSurroundedByParen(this, text)) {
      tmp = dropLast_0(drop(text, 1), 1);
    } else {
      tmp = text;
    }
    return tmp;
  };
  var ParenParser_instance;
  function ParenParser_getInstance() {
    if (ParenParser_instance == null)
      new ParenParser();
    return ParenParser_instance;
  }
  function isFailureAtTheBeginning(_this__u8e3s4) {
    var tmp;
    if (_this__u8e3s4 instanceof AlternativesFailure) {
      var tmp$ret$0;
      $l$block_0: {
        // Inline function 'kotlin.collections.all' call
        var tmp0_all = _this__u8e3s4.uh_1;
        var tmp_0;
        if (isInterface(tmp0_all, Collection)) {
          tmp_0 = tmp0_all.p();
        } else {
          tmp_0 = false;
        }
        if (tmp_0) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
        var tmp0_iterator = tmp0_all.f();
        while (tmp0_iterator.g()) {
          var element = tmp0_iterator.h();
          // Inline function 'isFailureAtTheBeginning.<anonymous>' call
          if (!isFailureAtTheBeginning(element)) {
            tmp$ret$0 = false;
            break $l$block_0;
          }
        }
        tmp$ret$0 = true;
      }
      tmp = tmp$ret$0;
    } else {
      if (_this__u8e3s4 instanceof NoMatchingToken) {
        tmp = _this__u8e3s4.qh_1.ch_1 === 0;
      } else {
        tmp = false;
      }
    }
    return tmp;
  }
  function isFailureAtTheBeginning_0(_this__u8e3s4) {
    return isFailureAtTheBeginning(_this__u8e3s4.th_1);
  }
  function format(_this__u8e3s4) {
    var tmp;
    if (_this__u8e3s4 instanceof AlternativesFailure) {
      tmp = 'AlternativesFailure(errors=[\n' + joinToString(_this__u8e3s4.uh_1, ',\n', VOID, VOID, VOID, VOID, format$lambda) + '\n])';
    } else {
      tmp = _this__u8e3s4.toString();
    }
    return tmp;
  }
  function format_0(_this__u8e3s4) {
    return format(_this__u8e3s4.th_1);
  }
  function format$lambda(it) {
    return prependIndent(format(it), '  ');
  }
  function jsonToIdealGenerators(json) {
    // Inline function 'kotlinx.serialization.decodeFromString' call
    var tmp0_decodeFromString = Default_getInstance();
    var tmp$ret$1;
    // Inline function 'kotlinx.serialization.serializer' call
    var tmp0_serializer = tmp0_decodeFromString.qu();
    // Inline function 'kotlinx.serialization.internal.cast' call
    var tmp0_cast = serializer(tmp0_serializer, createKType(getKClass(List), arrayOf([createInvariantKTypeProjection(createKType(PrimitiveClasses_getInstance().dc(), arrayOf([]), false))]), false));
    tmp$ret$1 = isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE();
    return tmp0_decodeFromString.t17(tmp$ret$1, json);
  }
  function MessageOptionsKt(dgaJson, plainString) {
    this.dgaJson = dgaJson;
    this.plainString = plainString;
  }
  protoOf(MessageOptionsKt).z2v = function () {
    return this.dgaJson;
  };
  protoOf(MessageOptionsKt).a2w = function () {
    return this.plainString;
  };
  function MessageOptionsInternal(dgaJson) {
    dgaJson = dgaJson === VOID ? null : dgaJson;
    this.b2w_1 = dgaJson;
  }
  protoOf(MessageOptionsInternal).c2w = function (plainString) {
    return new MessageOptionsKt(this.b2w_1, plainString);
  };
  function StyledMessageKt(messageType, strings, plainString, options) {
    this.messageType = messageType;
    this.strings = strings;
    this.plainString = plainString;
    this.options = options;
  }
  protoOf(StyledMessageKt).d2w = function () {
    return this.messageType;
  };
  protoOf(StyledMessageKt).e2w = function () {
    return this.strings;
  };
  protoOf(StyledMessageKt).a2w = function () {
    return this.plainString;
  };
  protoOf(StyledMessageKt).f2w = function () {
    return this.options;
  };
  var MessageType_SUCCESS_instance;
  var MessageType_ERROR_instance;
  var MessageType_entriesInitialized;
  function MessageType_initEntries() {
    if (MessageType_entriesInitialized)
      return Unit_getInstance();
    MessageType_entriesInitialized = true;
    MessageType_SUCCESS_instance = new MessageType('SUCCESS', 0, 'success');
    MessageType_ERROR_instance = new MessageType('ERROR', 1, 'error');
  }
  function MessageType(name, ordinal, typeName) {
    Enum.call(this, name, ordinal);
    this.i2w_1 = typeName;
  }
  function getPlainString($this) {
    if ($this.s2v_1.p()) {
      return '';
    }
    var space = new StyledStringInternal(StringType_TEXT_getInstance(), ' ');
    var stringsWithSpaces = mutableListOf([first($this.s2v_1)]);
    var inductionVariable = 1;
    var last = $this.s2v_1.i();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if ($this.s2v_1.l(i - 1 | 0).j2w_1.equals(StringType_MATH_getInstance()) ? $this.s2v_1.l(i).j2w_1.equals(StringType_MATH_getInstance()) : false) {
          stringsWithSpaces.a(space);
        }
        stringsWithSpaces.a($this.s2v_1.l(i));
      }
       while (inductionVariable < last);
    return joinToString(stringsWithSpaces, '', VOID, VOID, VOID, VOID, StyledMessageInternal$getPlainString$lambda);
  }
  function StyledMessageInternal$getPlainString$lambda(styledString) {
    var tmp;
    switch (styledString.j2w_1.m1_1) {
      case 0:
        tmp = styledString.k2w_1;
        break;
      case 1:
        tmp = '$' + styledString.k2w_1 + '$';
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function StyledMessageInternal(messageType, strings, options) {
    options = options === VOID ? new MessageOptionsInternal() : options;
    this.r2v_1 = messageType;
    this.s2v_1 = strings;
    this.t2v_1 = options;
  }
  protoOf(StyledMessageInternal).u2v = function () {
    // Inline function 'kotlin.collections.toTypedArray' call
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = this.s2v_1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'styled.StyledMessageInternal.export.<anonymous>' call
      tmp$ret$0 = item.u2v();
      tmp0_mapTo.a(tmp$ret$0);
    }
    var strings = copyToArray(tmp0_mapTo);
    var plainString = getPlainString(this);
    return new StyledMessageKt(this.r2v_1.i2w_1, strings, plainString, this.t2v_1.c2w(plainString));
  };
  protoOf(StyledMessageInternal).v2v = function (newOptions) {
    return new StyledMessageInternal(this.r2v_1, this.s2v_1, newOptions);
  };
  function StyledStringListBuilder() {
    StyledStringListBuilder_instance = this;
  }
  protoOf(StyledStringListBuilder).q2v = function (_this__u8e3s4) {
    return listOf(new StyledStringInternal(StringType_TEXT_getInstance(), _this__u8e3s4));
  };
  protoOf(StyledStringListBuilder).p2v = function (_this__u8e3s4) {
    return listOf(new StyledStringInternal(StringType_MATH_getInstance(), _this__u8e3s4));
  };
  var StyledStringListBuilder_instance;
  function StyledStringListBuilder_getInstance() {
    if (StyledStringListBuilder_instance == null)
      new StyledStringListBuilder();
    return StyledStringListBuilder_instance;
  }
  function styledMessage(messageType, block) {
    return new StyledMessageInternal(messageType, block(StyledStringListBuilder_getInstance()));
  }
  function MessageType_SUCCESS_getInstance() {
    MessageType_initEntries();
    return MessageType_SUCCESS_instance;
  }
  function MessageType_ERROR_getInstance() {
    MessageType_initEntries();
    return MessageType_ERROR_instance;
  }
  function StyledStringKt(stringType, content) {
    this.stringType = stringType;
    this.content = content;
  }
  protoOf(StyledStringKt).l2w = function () {
    return this.stringType;
  };
  protoOf(StyledStringKt).m19 = function () {
    return this.content;
  };
  var StringType_TEXT_instance;
  var StringType_MATH_instance;
  var StringType_entriesInitialized;
  function StringType_initEntries() {
    if (StringType_entriesInitialized)
      return Unit_getInstance();
    StringType_entriesInitialized = true;
    StringType_TEXT_instance = new StringType('TEXT', 0, 'text');
    StringType_MATH_instance = new StringType('MATH', 1, 'math');
  }
  function StringType(name, ordinal, typeName) {
    Enum.call(this, name, ordinal);
    this.o2w_1 = typeName;
  }
  function StyledStringInternal(stringType, content) {
    this.j2w_1 = stringType;
    this.k2w_1 = content;
  }
  protoOf(StyledStringInternal).u2v = function () {
    return new StyledStringKt(this.j2w_1.o2w_1, this.k2w_1);
  };
  function StringType_TEXT_getInstance() {
    StringType_initEntries();
    return StringType_TEXT_instance;
  }
  function StringType_MATH_getInstance() {
    StringType_initEntries();
    return StringType_MATH_instance;
  }
  function ValidationResult(type, message) {
    this.type = type;
    this.message = message;
  }
  protoOf(ValidationResult).p2w = function () {
    return this.type;
  };
  protoOf(ValidationResult).m5 = function () {
    return this.message;
  };
  protoOf(ValidationResult).j3 = function () {
    return this.type;
  };
  protoOf(ValidationResult).k3 = function () {
    return this.message;
  };
  protoOf(ValidationResult).q2w = function (type, message) {
    return new ValidationResult(type, message);
  };
  protoOf(ValidationResult).copy = function (type, message, $super) {
    type = type === VOID ? this.type : type;
    message = message === VOID ? this.message : message;
    return this.q2w(type, message);
  };
  protoOf(ValidationResult).toString = function () {
    return 'ValidationResult(type=' + this.type + ', message=' + this.message + ')';
  };
  protoOf(ValidationResult).hashCode = function () {
    var result = getStringHashCode(this.type);
    result = imul(result, 31) + getStringHashCode(this.message) | 0;
    return result;
  };
  protoOf(ValidationResult).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof ValidationResult))
      return false;
    var tmp0_other_with_cast = other instanceof ValidationResult ? other : THROW_CCE();
    if (!(this.type === tmp0_other_with_cast.type))
      return false;
    if (!(this.message === tmp0_other_with_cast.message))
      return false;
    return true;
  };
  function validateJson(json) {
    try {
      new FreeDGAWrapper(json);
      return (new Success()).u2v();
    } catch ($p) {
      if ($p instanceof Exception) {
        var e = $p;
        var tmp0_elvis_lhs = e.message;
        var message = tmp0_elvis_lhs == null ? e.toString() : tmp0_elvis_lhs;
        return (new Error_0(message)).u2v();
      } else {
        throw $p;
      }
    }
  }
  function validateDifferentialValueOfTheLast(generatorsJson) {
    var generatorList = jsonToGeneratorList(generatorsJson);
    var previousGeneratorList = dropLast(generatorList, 1);
    var currentGenerator = last(generatorList);
    var tmp0_safe_receiver = assertDegreeOfDifferentialValue(previousGeneratorList, currentGenerator);
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return tmp0_safe_receiver.u2v();
    }
    var tmp1_safe_receiver = assertSquareOfDifferentialIsZero(previousGeneratorList, currentGenerator);
    if (tmp1_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return tmp1_safe_receiver.u2v();
    }
    return (new Success()).u2v();
  }
  function validateGeneratorName(generatorName) {
    var tmp;
    try {
      new StringIndeterminateName(generatorName);
      tmp = (new Success()).u2v();
    } catch ($p) {
      var tmp_0;
      if ($p instanceof IllegalArgumentException) {
        var e = $p;
        var tmp0_elvis_lhs = e.message;
        tmp_0 = (new Error_0(tmp0_elvis_lhs == null ? e.toString() : tmp0_elvis_lhs)).u2v();
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function validateIdealGeneratorString(freeDGAWrapper, generatorString) {
    var tmp;
    try {
      freeDGAWrapper.tryParseIdealGeneratorString(generatorString);
      tmp = (new Success()).u2v();
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Exception) {
        var e = $p;
        var tmp0_elvis_lhs = e.message;
        tmp_0 = (new Error_0(tmp0_elvis_lhs == null ? e.toString() : tmp0_elvis_lhs)).u2v();
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function validateIdealJson(freeDGAWrapper, idealJson) {
    var tmp;
    try {
      freeDGAWrapper.tryCreateIdeal(idealJson);
      tmp = (new Success()).u2v();
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Exception) {
        var e = $p;
        var tmp0_elvis_lhs = e.message;
        tmp_0 = (new Error_0(tmp0_elvis_lhs == null ? e.toString() : tmp0_elvis_lhs)).u2v();
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  var ValidationResultType_SUCCESS_instance;
  var ValidationResultType_ERROR_instance;
  var ValidationResultType_entriesInitialized;
  function ValidationResultType_initEntries() {
    if (ValidationResultType_entriesInitialized)
      return Unit_getInstance();
    ValidationResultType_entriesInitialized = true;
    ValidationResultType_SUCCESS_instance = new ValidationResultType('SUCCESS', 0, 'success');
    ValidationResultType_ERROR_instance = new ValidationResultType('ERROR', 1, 'error');
  }
  function ValidationResultType(name, ordinal, typeName) {
    Enum.call(this, name, ordinal);
    this.v2w_1 = typeName;
  }
  function Success() {
    ValidationResultInternal.call(this, ValidationResultType_SUCCESS_getInstance(), '');
  }
  function Error_0(message) {
    ValidationResultInternal.call(this, ValidationResultType_ERROR_getInstance(), message);
  }
  function ValidationResultInternal(type, message) {
    this.r2w_1 = type;
    this.s2w_1 = message;
  }
  protoOf(ValidationResultInternal).u2v = function () {
    return new ValidationResult(this.r2w_1.v2w_1, this.s2w_1);
  };
  function getErrorMessageForPreviousGenerators(generatorList) {
    var generatorsString = joinToString(generatorList, ', ', VOID, VOID, VOID, VOID, getErrorMessageForPreviousGenerators$lambda);
    return 'Please fix errors for generators (' + generatorsString + ') above this.';
  }
  function assertDegreeOfDifferentialValue(generatorList, currentGenerator) {
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(generatorList, 10));
    var tmp0_iterator = generatorList.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'assertDegreeOfDifferentialValue.<anonymous>' call
      tmp$ret$0 = Indeterminate(item.u26_1, item.v26_1);
      tmp0_mapTo.a(tmp$ret$0);
    }
    var indeterminateList = tmp0_mapTo;
    var tmp;
    try {
      tmp = Companion_getInstance_4().z29(get_SparseMatrixSpaceOverRational(), indeterminateList);
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Exception) {
        var e = $p;
        var message = getErrorMessageForPreviousGenerators(generatorList);
        return new Error_0(message);
      } else {
        throw $p;
      }
    }
    var freeGAlgebra = tmp;
    var differentialValue = currentGenerator.w26_1;
    var tmp_1;
    try {
      tmp_1 = freeGAlgebra.x26(differentialValue);
    } catch ($p) {
      var tmp_2;
      if ($p instanceof ParseException) {
        var e_0 = $p;
        var tmp_3;
        if (isFailureAtTheBeginning_0(e_0)) {
          tmp_3 = 'Failed to parse the value "' + differentialValue + '" of the differential. ' + 'No matching token at the beginning.';
        } else {
          tmp_3 = 'Failed to parse the value "' + differentialValue + '" of the differential ' + ('with the following error message:\n' + format_0(e_0));
        }
        var message_0 = tmp_3;
        return new Error_0(message_0);
      } else {
        if ($p instanceof InvalidIdentifierException) {
          var e_1 = $p;
          var message_1 = trimIndent('\n            Invalid generator name: ' + e_1.c1q_1 + '\n            Valid names are: ' + joinToString(e_1.d1q_1, ', ') + '\n            Note: The generator "' + e_1.c1q_1 + '" must be defined ABOVE this.\n        ');
          return new Error_0(message_1);
        } else {
          if ($p instanceof Exception) {
            var e_2 = $p;
            var tmp0_elvis_lhs = e_2.message;
            var message_2 = tmp0_elvis_lhs == null ? e_2.toString() : tmp0_elvis_lhs;
            return new Error_0(message_2);
          } else {
            throw $p;
          }
        }
      }
    }
    var gVector = tmp_1;
    var expectedDegree = currentGenerator.v26_1.c20_1 + 1 | 0;
    var tmp_4;
    if (gVector instanceof GVector) {
      tmp_4 = !(gVector.a1o_1.c20_1 === expectedDegree);
    } else {
      tmp_4 = false;
    }
    if (tmp_4) {
      var name = currentGenerator.u26_1;
      var message_3 = 'The degree of d(' + name + ') is expected to be deg(' + name + ')+1=' + expectedDegree + ', ' + ('but the given value ' + differentialValue + ' has degree ' + gVector.a1o_1.c20_1 + '.');
      return new Error_0(message_3);
    }
    return null;
  }
  function assertSquareOfDifferentialIsZero(generatorList, currentGenerator) {
    var differentialValue = currentGenerator.w26_1;
    var tmp;
    try {
      tmp = Companion_getInstance_2().i27(get_SparseMatrixSpaceOverRational(), generatorList);
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Exception) {
        var e = $p;
        var message = getErrorMessageForPreviousGenerators(generatorList);
        return new Error_0(message);
      } else {
        throw $p;
      }
    }
    var freeDGAlgebra = tmp;
    // Inline function 'kotlin.run' call
    var tmp0_run = freeDGAlgebra.g1g();
    // Inline function 'kotlin.contracts.contract' call
    var gVector = freeDGAlgebra.x26(differentialValue);
    var tmp_1;
    if (gVector instanceof ZeroGVector) {
      tmp_1 = null;
    } else {
      if (gVector instanceof GVector) {
        var gVectorWhichShouldBeZero = tmp0_run.r1g().s1g(gVector);
        var tmp_2;
        switch (gVectorWhichShouldBeZero.tj()) {
          case true:
            tmp_2 = null;
            break;
          case false:
            tmp_2 = new Error_0('d(d(' + currentGenerator.u26_1 + ')) must be zero, but was ' + gVectorWhichShouldBeZero);
            break;
          default:
            noWhenBranchMatchedException();
            break;
        }
        tmp_1 = tmp_2;
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp_1;
  }
  function getErrorMessageForPreviousGenerators$lambda(it) {
    return it.u26_1;
  }
  function ValidationResultType_SUCCESS_getInstance() {
    ValidationResultType_initEntries();
    return ValidationResultType_SUCCESS_instance;
  }
  function ValidationResultType_ERROR_getInstance() {
    ValidationResultType_initEntries();
    return ValidationResultType_ERROR_instance;
  }
  //region block: exports
  function $jsExportAll$(_) {
    _.FreeDGAWrapper = FreeDGAWrapper;
    var $styled = _.styled || (_.styled = {});
    $styled.MessageOptionsKt = MessageOptionsKt;
    var $styled = _.styled || (_.styled = {});
    $styled.StyledMessageKt = StyledMessageKt;
    var $styled = _.styled || (_.styled = {});
    $styled.StyledStringKt = StyledStringKt;
    _.ValidationResult = ValidationResult;
    _.validateJson = validateJson;
    _.validateDifferentialValueOfTheLast = validateDifferentialValueOfTheLast;
    _.validateGeneratorName = validateGeneratorName;
    _.validateIdealGeneratorString = validateIdealGeneratorString;
    _.validateIdealJson = validateIdealJson;
  }
  $jsExportAll$(_);
  //endregion
  return _;
}));

//# sourceMappingURL=kohomology-js.js.map


/***/ }),

/***/ 887:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
  if (true)
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(72), __webpack_require__(639), __webpack_require__(683), __webpack_require__(15), __webpack_require__(474), __webpack_require__(11)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  else {}
}(this, function (_, kotlin_kotlin, kotlin_com_github_h0tk3y_betterParse_better_parse, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core, kotlin_com_github_shwaka_parautil_parautil_parallel, kotlin_com_ionspin_kotlin_bignum) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var Exception_init_$Create$ = kotlin_kotlin.$_$.b1;
  var numberRangeToNumber = kotlin_kotlin.$_$.a8;
  var collectionSizeOrDefault = kotlin_kotlin.$_$.f4;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.k;
  var Pair = kotlin_kotlin.$_$.ma;
  var ArrayList_init_$Create$_0 = kotlin_kotlin.$_$.l;
  var equals = kotlin_kotlin.$_$.e7;
  var flatten = kotlin_kotlin.$_$.g5;
  var protoOf = kotlin_kotlin.$_$.h8;
  var NoSuchElementException_init_$Create$ = kotlin_kotlin.$_$.i1;
  var compareTo = kotlin_kotlin.$_$.d7;
  var objectMeta = kotlin_kotlin.$_$.g8;
  var VOID = kotlin_kotlin.$_$.mb;
  var setMetadataFor = kotlin_kotlin.$_$.i8;
  var THROW_CCE = kotlin_kotlin.$_$.oa;
  var classMeta = kotlin_kotlin.$_$.c7;
  var toString = kotlin_kotlin.$_$.m8;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.e1;
  var interfaceMeta = kotlin_kotlin.$_$.j7;
  var lazy = kotlin_kotlin.$_$.bb;
  var KProperty1 = kotlin_kotlin.$_$.v8;
  var getPropertyCallableRef = kotlin_kotlin.$_$.g7;
  var isInterface = kotlin_kotlin.$_$.s7;
  var Exception = kotlin_kotlin.$_$.ia;
  var joinToString = kotlin_kotlin.$_$.l5;
  var trimIndent = kotlin_kotlin.$_$.da;
  var Exception_init_$Init$ = kotlin_kotlin.$_$.a1;
  var captureStack = kotlin_kotlin.$_$.w6;
  var ArithmeticException_init_$Create$ = kotlin_kotlin.$_$.z;
  var parseToEnd = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.h;
  var noWhenBranchMatchedException = kotlin_kotlin.$_$.cb;
  var objectCreate = kotlin_kotlin.$_$.f8;
  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.t;
  var UnsupportedOperationException_init_$Create$ = kotlin_kotlin.$_$.n1;
  var Collection = kotlin_kotlin.$_$.o3;
  var toList = kotlin_kotlin.$_$.j6;
  var getKClassFromExpression = kotlin_kotlin.$_$.d;
  var hashCode = kotlin_kotlin.$_$.i7;
  var NotImplementedError = kotlin_kotlin.$_$.la;
  var any = kotlin_kotlin.$_$.b4;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.g1;
  var listOf = kotlin_kotlin.$_$.p5;
  var toList_0 = kotlin_kotlin.$_$.i6;
  var plus = kotlin_kotlin.$_$.w5;
  var get_indices = kotlin_kotlin.$_$.i5;
  var contentEquals = kotlin_kotlin.$_$.h4;
  var contentHashCode = kotlin_kotlin.$_$.i4;
  var emptyList = kotlin_kotlin.$_$.b5;
  var Unit_getInstance = kotlin_kotlin.$_$.l3;
  var get_indices_0 = kotlin_kotlin.$_$.k5;
  var sum = kotlin_kotlin.$_$.c6;
  var toIntArray = kotlin_kotlin.$_$.h6;
  var drop = kotlin_kotlin.$_$.z4;
  var getStringHashCode = kotlin_kotlin.$_$.h7;
  var Token = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.k;
  var charSequenceGet = kotlin_kotlin.$_$.z6;
  var get_category = kotlin_kotlin.$_$.x8;
  var charSequenceLength = kotlin_kotlin.$_$.a7;
  var toInt = kotlin_kotlin.$_$.s9;
  var TokenMatch = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.j;
  var Tuple2 = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.p;
  var Grammar = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.g;
  var literalToken = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.l;
  var use = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.f;
  var or = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.d;
  var skip = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.e;
  var parser = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.i;
  var listOf_0 = kotlin_kotlin.$_$.q5;
  var AndCombinator = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.a;
  var map = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.c;
  var SeparatedCombinator = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.b;
  var KProperty0 = kotlin_kotlin.$_$.u8;
  var Regex_init_$Create$ = kotlin_kotlin.$_$.x;
  var RuntimeException = kotlin_kotlin.$_$.na;
  var RuntimeException_init_$Init$ = kotlin_kotlin.$_$.l1;
  var emptyMap = kotlin_kotlin.$_$.c5;
  var until = kotlin_kotlin.$_$.s8;
  var getKClass = kotlin_kotlin.$_$.e;
  var zip = kotlin_kotlin.$_$.r6;
  var checkIndexOverflow = kotlin_kotlin.$_$.e4;
  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.o1;
  var replaceFirst = kotlin_kotlin.$_$.h9;
  var replace = kotlin_kotlin.$_$.i9;
  var Default_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.a;
  var ListSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.l;
  var PluginGeneratedSerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.q1;
  var StringSerializer_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.k;
  var IntSerializer_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.j;
  var UnknownFieldException_init_$Create$ = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.c;
  var typeParametersSerializers = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.m1;
  var GeneratedSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.n1;
  var throwMissingFieldException = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.s1;
  var JsonTransformingSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.d;
  var to = kotlin_kotlin.$_$.fb;
  var mapOf = kotlin_kotlin.$_$.t5;
  var JsonObject = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.c;
  var JsonArray = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.b;
  var Enum = kotlin_kotlin.$_$.ha;
  var slice = kotlin_kotlin.$_$.y5;
  var NoSuchElementException_init_$Create$_0 = kotlin_kotlin.$_$.j1;
  var distinct = kotlin_kotlin.$_$.x4;
  var pmap = kotlin_com_github_shwaka_parautil_parautil_parallel.$_$.a;
  var toList_1 = kotlin_kotlin.$_$.k6;
  var sorted = kotlin_kotlin.$_$.b6;
  var sortedWith = kotlin_kotlin.$_$.a6;
  var withIndex = kotlin_kotlin.$_$.q6;
  var toMap = kotlin_kotlin.$_$.m6;
  var Comparator = kotlin_kotlin.$_$.ga;
  var compareValues = kotlin_kotlin.$_$.s6;
  var count = kotlin_kotlin.$_$.w4;
  var mapOf_0 = kotlin_kotlin.$_$.s5;
  var mapCapacity = kotlin_kotlin.$_$.r5;
  var LinkedHashMap_init_$Create$_0 = kotlin_kotlin.$_$.s;
  var filterNotNull = kotlin_kotlin.$_$.d5;
  var toMutableMap = kotlin_kotlin.$_$.n6;
  var plus_0 = kotlin_kotlin.$_$.v5;
  var IndexOutOfBoundsException_init_$Create$ = kotlin_kotlin.$_$.h1;
  var first = kotlin_kotlin.$_$.f5;
  var last = kotlin_kotlin.$_$.o5;
  var dropLast = kotlin_kotlin.$_$.y4;
  var takeLast = kotlin_kotlin.$_$.d6;
  var take = kotlin_kotlin.$_$.e6;
  var BigInteger_init_$Create$ = kotlin_com_ionspin_kotlin_bignum.$_$.a;
  var Companion_getInstance = kotlin_com_ionspin_kotlin_bignum.$_$.b;
  var Char = kotlin_kotlin.$_$.ea;
  var removePrefix = kotlin_kotlin.$_$.g9;
  var CharCategory_LOWERCASE_LETTER_getInstance = kotlin_kotlin.$_$.h;
  var CharCategory_UPPERCASE_LETTER_getInstance = kotlin_kotlin.$_$.j;
  var CharCategory_OTHER_LETTER_getInstance = kotlin_kotlin.$_$.i;
  var CharCategory_DECIMAL_DIGIT_NUMBER_getInstance = kotlin_kotlin.$_$.g;
  var CharCategory_CONNECTOR_PUNCTUATION_getInstance = kotlin_kotlin.$_$.f;
  var toString_0 = kotlin_kotlin.$_$.eb;
  var addAll = kotlin_kotlin.$_$.a4;
  var eachCount = kotlin_kotlin.$_$.a5;
  //endregion
  //region block: pre-declaration
  setMetadataFor(Companion, 'Companion', objectMeta);
  setMetadataFor(Boundedness, 'Boundedness', classMeta);
  setMetadataFor(Companion_0, 'Companion', objectMeta);
  function get_field() {
    return this.b1h().j1h();
  }
  function fromVector(vector, degree) {
    return new GVector(vector, degree, this);
  }
  function fromBasisName(basisName, degree) {
    var vector = this.g1h(degree).l1t(basisName);
    return this.k1h(vector, degree);
  }
  function getBasis(degree) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = this.g1h(degree).m1t();
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.GVectorSpace.getBasis.<anonymous>' call
      tmp$ret$0 = this.k1h(item, degree);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function getBasisForAugmentedDegree(augmentedDegree) {
    var tmp0_elvis_lhs = this.f1h();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw new NotImplementedError('GVectorSpace.getBasisForAugmentedDegree() cannot be called since the property listDegreesForAugmentedDegree is null');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var listDegreesForAugmentedDegree = tmp;
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = listDegreesForAugmentedDegree(augmentedDegree);
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.GVectorSpace.getBasisForAugmentedDegree.<anonymous>' call
      tmp$ret$0 = this.n1h(item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    return flatten(tmp$ret$2);
  }
  function getZero(degree) {
    var vector = this.g1h(degree).n1t();
    return this.k1h(vector, degree);
  }
  function convertToGVector(gVectorOrZero, degree) {
    var tmp0_subject = gVectorOrZero;
    var tmp;
    if (tmp0_subject instanceof ZeroGVector) {
      tmp = this.o1h(degree);
    } else {
      if (tmp0_subject instanceof GVector) {
        tmp = gVectorOrZero;
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp;
  }
  function get(degree) {
    return this.g1h(this.c1h().bi(degree));
  }
  function fromVector_0(vector, degree) {
    return this.k1h(vector, this.c1h().bi(degree));
  }
  function getBasis_0(degree) {
    return this.n1h(this.c1h().bi(degree));
  }
  function getZero_0(degree) {
    return this.o1h(this.c1h().bi(degree));
  }
  function contains(gVector) {
    return equals(gVector.b1o_1.h1h(), this.h1h());
  }
  function contains_0(gVector) {
    return equals(gVector.k1t_1.h1h(), this.h1h());
  }
  function add(a, b) {
    if (!this.r1h(a))
      throw new IllegalContextException('The gVector ' + a + ' does not match the context');
    if (!this.r1h(b))
      throw new IllegalContextException('The gVector ' + b + ' does not match the context');
    if (!equals(a.a1o_1, b.a1o_1))
      throw ArithmeticException_init_$Create$('Cannot add two graded vectors of different degrees: ' + ('deg(' + a + ')=' + a.a1o_1 + ' and deg(' + b + ')=' + b.a1o_1));
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = a.z1n_1.r1r_1.g1g();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.dg.GVectorSpace.add.<anonymous>' call
    tmp$ret$0 = tmp0_run.o1t(a.z1n_1, b.z1n_1);
    tmp$ret$1 = tmp$ret$0;
    var vector = tmp$ret$1;
    return this.k1h(vector, a.a1o_1);
  }
  function subtract(a, b) {
    if (!this.r1h(a))
      throw new IllegalContextException('The gVector ' + a + ' does not match the context');
    if (!this.r1h(b))
      throw new IllegalContextException('The gVector ' + b + ' does not match the context');
    if (!equals(a.a1o_1, b.a1o_1))
      throw ArithmeticException_init_$Create$('Cannot subtract a graded vector from another one with a different degree: ' + ('deg(' + a + ')=' + a.a1o_1 + ' and deg(' + b + ')=' + b.a1o_1));
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = a.z1n_1.r1r_1.g1g();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.dg.GVectorSpace.subtract.<anonymous>' call
    tmp$ret$0 = tmp0_run.p1t(a.z1n_1, b.z1n_1);
    tmp$ret$1 = tmp$ret$0;
    var vector = tmp$ret$1;
    return this.k1h(vector, a.a1o_1);
  }
  function multiply(scalar, gVector) {
    if (!this.r1h(gVector))
      throw new IllegalContextException('The gVector ' + gVector + ' does not match the context');
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = gVector.z1n_1.r1r_1.g1g();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.dg.GVectorSpace.multiply.<anonymous>' call
    tmp$ret$0 = tmp0_run.q1t(scalar, gVector.z1n_1);
    tmp$ret$1 = tmp$ret$0;
    var vector = tmp$ret$1;
    return this.k1h(vector, gVector.a1o_1);
  }
  function divideByGVector(a, b) {
    if (!this.r1h(a))
      throw new IllegalContextException('The gVector ' + a + ' does not match the context');
    if (!this.r1h(b))
      throw new IllegalContextException('The gVector ' + b + ' does not match the context');
    if (!equals(a.a1o_1, b.a1o_1))
      throw ArithmeticException_init_$Create$('Cannot divide a graded vector by another one with a different degree: ' + ('deg(' + a + ')=' + a.a1o_1 + ' and deg(' + b + ')=' + b.a1o_1));
    if (b.tj())
      throw ArithmeticException_init_$Create$('Division by zero gVector');
    return this.g1h(a.a1o_1).r1t(a.z1n_1, b.z1n_1);
  }
  setMetadataFor(GVectorSpace, 'GVectorSpace', interfaceMeta);
  function multiply_0(a, b) {
    return this.n1g().p1r(a, b);
  }
  function multiply_1(a, b) {
    var tmp0_subject = a;
    var tmp;
    if (tmp0_subject instanceof ZeroGVector) {
      tmp = this.z1h();
    } else {
      if (tmp0_subject instanceof GVector) {
        var tmp1_subject = b;
        var tmp_0;
        if (tmp1_subject instanceof ZeroGVector) {
          tmp_0 = this.z1h();
        } else {
          if (tmp1_subject instanceof GVector) {
            tmp_0 = this.w1h(a, b);
          } else {
            noWhenBranchMatchedException();
          }
        }
        tmp = tmp_0;
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp;
  }
  setMetadataFor(GMagma, 'GMagma', interfaceMeta, VOID, [GVectorSpace]);
  function cohomologyClassOf(cocycle) {
    return Companion_getInstance_11().q1i(this.m1g(), cocycle);
  }
  function cocycleRepresentativeOf(cohomologyClass) {
    var vector = cohomologyClass.z1n_1;
    var cohomologyOfTheDegree = this.m1g().g1h(cohomologyClass.a1o_1);
    var cocycle = cohomologyOfTheDegree.l1o().q1o(vector);
    return this.k1h(cocycle, cohomologyClass.a1o_1);
  }
  setMetadataFor(DGVectorSpace, 'DGVectorSpace', interfaceMeta, VOID, [GVectorSpace]);
  function convertToScalar(gVector) {
    if (gVector.a1o_1.e1q()) {
      throw ArithmeticException_init_$Create$('Cannot convert ' + gVector + ' to a scalar since it has non-zero degree ' + gVector.a1o_1);
    }
    var tmp0_elvis_lhs = this.y1h(gVector, this.a1i());
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw ArithmeticException_init_$Create$('Cannot convert ' + gVector + ' to a scalar since it is not of a multiple of the unit');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function parse(generatorList, text) {
    var astNode = parseToEnd(GAlgebraElementASTGrammar_getInstance(), text);
    return getValueFromASTNode(this, generatorList, astNode);
  }
  function getIdeal(generatorList) {
    var generatingSubGVectorSpace = Companion_getInstance_31().f1q(this.y1g(), this, 'IdealGenerator(' + generatorList + ')', generatorList);
    var tmp;
    if (this.b1i()) {
      tmp = this.n1g().g1q(generatingSubGVectorSpace);
    } else {
      var rightIdeal = this.n1g().g1q(generatingSubGVectorSpace);
      tmp = this.n1g().g1q(VOID, rightIdeal);
    }
    var idealAsSubGVectorSpace = tmp;
    return Companion_getInstance_26().h1q(this, idealAsSubGVectorSpace, generatorList);
  }
  function getQuotientByIdeal(ideal) {
    var quotGVectorSpace = Companion_getInstance_29().i1q(this.y1g(), this, ideal);
    var multiplication = this.n1g().j1q(quotGVectorSpace, quotGVectorSpace, quotGVectorSpace);
    var unit = quotGVectorSpace.y1n().s1g(this.a1i());
    return Companion_getInstance_28().k1q(this.y1g(), quotGVectorSpace, multiplication, unit);
  }
  setMetadataFor(GAlgebra, 'GAlgebra', interfaceMeta, VOID, [GMagma]);
  function getDGIdeal(generatorList) {
    var idealWithoutD = this.q1g(generatorList);
    var tmp0_iterator = generatorList.f();
    while (tmp0_iterator.g()) {
      var gVector = tmp0_iterator.h();
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this.g1g();
      // Inline function 'kotlin.contracts.contract' call
      var tmp0_require = idealWithoutD.t1g(tmp0_run.r1g().s1g(gVector));
      // Inline function 'kotlin.contracts.contract' call
      var tmp;
      if (!tmp0_require) {
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.dg.DGAlgebra.getDGIdeal.<anonymous>.<anonymous>' call
        tmp$ret$0 = 'd(' + gVector + ')=' + tmp0_run.r1g().s1g(gVector) + ' must be contained in the ideal ' + idealWithoutD + 'to define dg ideal.';
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
      tmp$ret$1 = tmp;
    }
    var idealAsSubDGVectorSpace = Companion_getInstance_30().u1g(this, idealWithoutD);
    return Companion_getInstance_5().v1g(this, idealAsSubDGVectorSpace, generatorList);
  }
  function getQuotientByIdeal_0(ideal) {
    var quotGAlgebra = getQuotientByIdeal.call(this, ideal);
    return Companion_getInstance_27().x1g(this, quotGAlgebra);
  }
  setMetadataFor(DGAlgebra, 'DGAlgebra', interfaceMeta, VOID, [GMagma, DGVectorSpace, GAlgebra]);
  setMetadataFor(Companion_1, 'Companion', objectMeta);
  setMetadataFor(DGAlgebraImpl, 'DGAlgebraImpl', classMeta, VOID, [DGAlgebra, GVectorSpace]);
  function plus_1(_this__u8e3s4, other) {
    return this.j1h().k2k(_this__u8e3s4, other);
  }
  function minus(_this__u8e3s4, other) {
    return this.j1h().l2k(_this__u8e3s4, other);
  }
  function times(_this__u8e3s4, other) {
    return this.j1h().m2k(_this__u8e3s4, other);
  }
  function unaryMinus(_this__u8e3s4) {
    return this.j1h().n2k(_this__u8e3s4);
  }
  function div(_this__u8e3s4, other) {
    return this.j1h().o2k(_this__u8e3s4, other);
  }
  function div_0(_this__u8e3s4, other) {
    return this.j1h().o2k(this.j1h().bi(_this__u8e3s4), other);
  }
  function inv(_this__u8e3s4) {
    return this.j1h().o2k(this.b1j(), _this__u8e3s4);
  }
  function toScalar(_this__u8e3s4) {
    return this.j1h().bi(_this__u8e3s4);
  }
  function get_zero() {
    return this.j1h().c1j();
  }
  function get_one() {
    return this.j1h().b1j();
  }
  function sum_0(_this__u8e3s4) {
    var tmp$ret$1;
    // Inline function 'kotlin.collections.fold' call
    var tmp0_fold = this.c1j();
    var accumulator = tmp0_fold;
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.ScalarContext.sum.<anonymous>' call
      var tmp1_anonymous = accumulator;
      tmp$ret$0 = this.m1j(tmp1_anonymous, element);
      accumulator = tmp$ret$0;
    }
    tmp$ret$1 = accumulator;
    return tmp$ret$1;
  }
  setMetadataFor(ScalarContext, 'ScalarContext', interfaceMeta);
  function plus_2(_this__u8e3s4, other) {
    return this.b1h().d2j(_this__u8e3s4, other);
  }
  function minus_0(_this__u8e3s4, other) {
    return this.b1h().f2j(_this__u8e3s4, other);
  }
  function times_0(_this__u8e3s4, scalar) {
    return this.b1h().i2j(scalar, _this__u8e3s4);
  }
  function times_1(_this__u8e3s4, numVector) {
    return this.v1j(numVector, _this__u8e3s4);
  }
  function unaryMinus_0(_this__u8e3s4) {
    return this.b1h().m2j(_this__u8e3s4);
  }
  function get_0(_this__u8e3s4, ind) {
    return this.b1h().o2j(_this__u8e3s4, ind);
  }
  setMetadataFor(NumVectorContext, 'NumVectorContext', interfaceMeta, VOID, [ScalarContext]);
  function get_zeroGVector() {
    return this.a1j().z1h();
  }
  function plus_3(_this__u8e3s4, other) {
    return this.a1j().t1h(_this__u8e3s4, other);
  }
  function plus_4(_this__u8e3s4, other) {
    var tmp0_subject = other;
    var tmp;
    if (tmp0_subject instanceof ZeroGVector) {
      tmp = _this__u8e3s4;
    } else {
      if (tmp0_subject instanceof GVector) {
        var tmp1_subject = _this__u8e3s4;
        var tmp_0;
        if (tmp1_subject instanceof ZeroGVector) {
          tmp_0 = other;
        } else {
          if (tmp1_subject instanceof GVector) {
            tmp_0 = this.a1j().t1h(_this__u8e3s4, other);
          } else {
            noWhenBranchMatchedException();
          }
        }
        tmp = tmp_0;
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp;
  }
  function minus_1(_this__u8e3s4, other) {
    return this.a1j().u1h(_this__u8e3s4, other);
  }
  function minus_2(_this__u8e3s4, other) {
    var tmp0_subject = other;
    var tmp;
    if (tmp0_subject instanceof ZeroGVector) {
      tmp = _this__u8e3s4;
    } else {
      if (tmp0_subject instanceof GVector) {
        var tmp1_subject = _this__u8e3s4;
        var tmp_0;
        if (tmp1_subject instanceof ZeroGVector) {
          tmp_0 = this.a1j().v1h(this.a1j().j1h().bi(-1), other);
        } else {
          if (tmp1_subject instanceof GVector) {
            tmp_0 = this.a1j().u1h(_this__u8e3s4, other);
          } else {
            noWhenBranchMatchedException();
          }
        }
        tmp = tmp_0;
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp;
  }
  function times_2(_this__u8e3s4, scalar) {
    return this.a1j().v1h(scalar, _this__u8e3s4);
  }
  function times_3(_this__u8e3s4, gVector) {
    return this.a1j().v1h(_this__u8e3s4, gVector);
  }
  function times_4(_this__u8e3s4, gVector) {
    return this.a1j().v1h(this.d1k(_this__u8e3s4), gVector);
  }
  function times_5(_this__u8e3s4, scalar) {
    var tmp0_subject = _this__u8e3s4;
    var tmp;
    if (tmp0_subject instanceof ZeroGVector) {
      tmp = this.a1j().z1h();
    } else {
      if (tmp0_subject instanceof GVector) {
        tmp = this.a1j().v1h(scalar, _this__u8e3s4);
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp;
  }
  function times_6(_this__u8e3s4, sign) {
    var tmp0_subject = sign;
    var tmp0 = tmp0_subject.m1_1;
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = _this__u8e3s4;
        break;
      case 1:
        tmp = this.g1k(_this__u8e3s4);
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function times_7(_this__u8e3s4, gVector) {
    return this.y1j(gVector, _this__u8e3s4);
  }
  function unaryMinus_1(_this__u8e3s4) {
    return this.a1j().v1h(this.d1k(-1), _this__u8e3s4);
  }
  function unaryMinus_2(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4;
    var tmp;
    if (tmp0_subject instanceof ZeroGVector) {
      tmp = this.a1j().z1h();
    } else {
      if (tmp0_subject instanceof GVector) {
        tmp = this.g1k(_this__u8e3s4);
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp;
  }
  function sum_1(_this__u8e3s4, degree) {
    var tmp;
    if (any(_this__u8e3s4)) {
      var tmp$ret$1;
      // Inline function 'kotlin.collections.reduce' call
      var iterator = _this__u8e3s4.f();
      if (!iterator.g())
        throw UnsupportedOperationException_init_$Create$("Empty collection can't be reduced.");
      var accumulator = iterator.h();
      while (iterator.g()) {
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.dg.GVectorContext.sum.<anonymous>' call
        var tmp0_anonymous = accumulator;
        var tmp1_anonymous = iterator.h();
        tmp$ret$0 = this.o1j(tmp0_anonymous, tmp1_anonymous);
        accumulator = tmp$ret$0;
      }
      tmp$ret$1 = accumulator;
      tmp = tmp$ret$1;
    } else {
      if (degree == null)
        throw IllegalArgumentException_init_$Create$('degree cannot be null when an iterator of GVector is empty');
      return this.a1j().o1h(degree);
    }
    return tmp;
  }
  setMetadataFor(GVectorContext, 'GVectorContext', interfaceMeta, VOID, [NumVectorContext]);
  function times_8(_this__u8e3s4, other) {
    return this.z1i().w1h(_this__u8e3s4, other);
  }
  function times_9(_this__u8e3s4, other) {
    return this.z1i().x1h(_this__u8e3s4, other);
  }
  setMetadataFor(GMagmaContext, 'GMagmaContext', interfaceMeta, VOID, [GVectorContext]);
  function get_unit() {
    return this.i1k().a1i();
  }
  function pow(_this__u8e3s4, exponent) {
    var unit = this.i1k().a1i();
    var tmp;
    if (exponent === 0) {
      tmp = unit;
    } else if (exponent === 1) {
      tmp = _this__u8e3s4;
    } else if (exponent > 1) {
      var half = this.j1k(_this__u8e3s4, exponent / 2 | 0);
      var rem = (exponent % 2 | 0) === 1 ? _this__u8e3s4 : unit;
      tmp = this.x1j(this.x1j(half, half), rem);
    } else if (exponent < 0) {
      throw ArithmeticException_init_$Create$('Negative power in an algebra is not defined');
    } else {
      throw Exception_init_$Create$("This can't happen!");
    }
    return tmp;
  }
  function pow_0(_this__u8e3s4, exponent) {
    var tmp0_subject = _this__u8e3s4;
    var tmp;
    if (tmp0_subject instanceof GVector) {
      tmp = this.j1k(_this__u8e3s4, exponent);
    } else {
      if (tmp0_subject instanceof ZeroGVector) {
        var tmp_0;
        if (exponent === 0) {
          tmp_0 = this.i1k().a1i();
        } else if (exponent > 0) {
          tmp_0 = this.i1k().z1h();
        } else if (exponent < 0) {
          throw ArithmeticException_init_$Create$('Negative power in an algebra is not defined');
        } else {
          throw Exception_init_$Create$("This can't happen!");
        }
        tmp = tmp_0;
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp;
  }
  function toScalar_0(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4;
    var tmp;
    if (tmp0_subject instanceof GVector) {
      tmp = this.i1k().c1i(_this__u8e3s4);
    } else {
      if (tmp0_subject instanceof ZeroGVector) {
        tmp = this.c1j();
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp;
  }
  function product(_this__u8e3s4) {
    var tmp$ret$1;
    // Inline function 'kotlin.collections.fold' call
    var tmp0_fold = this.i1k().a1i();
    var accumulator = tmp0_fold;
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.GAlgebraContext.product.<anonymous>' call
      var tmp1_anonymous = accumulator;
      tmp$ret$0 = this.x1j(tmp1_anonymous, element);
      accumulator = tmp$ret$0;
    }
    tmp$ret$1 = accumulator;
    return tmp$ret$1;
  }
  setMetadataFor(GAlgebraContext, 'GAlgebraContext', interfaceMeta, VOID, [GMagmaContext]);
  function get_d() {
    return this.y1i().o1g();
  }
  function cohomologyClass(_this__u8e3s4) {
    return this.y1i().z1g(_this__u8e3s4);
  }
  setMetadataFor(DGVectorContext, 'DGVectorContext', interfaceMeta, VOID, [GVectorContext]);
  function times_10(_this__u8e3s4, other) {
    return this.x1i().w1h(_this__u8e3s4, other);
  }
  setMetadataFor(DGMagmaContext, 'DGMagmaContext', interfaceMeta, VOID, [DGVectorContext, GMagmaContext]);
  setMetadataFor(DGAlgebraContextImpl, 'DGAlgebraContextImpl', classMeta, VOID, [GAlgebraContext, DGMagmaContext]);
  setMetadataFor(Companion_2, 'Companion', objectMeta);
  function get_degreeGroup() {
    return this.s1k().c1h();
  }
  function invoke(gVector) {
    // Inline function 'kotlin.require' call
    var tmp0_require = this.s1k().r1h(gVector);
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.GLinearMap.invoke.<anonymous>' call
      tmp$ret$0 = 'Cannot evaluate ' + this + ' by ' + gVector + ' since it is not an element of ' + this.s1k() + ', but of ' + gVector.b1o_1;
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    var linearMap = this.g1h(gVector.a1o_1);
    // Inline function 'kotlin.require' call
    var tmp1_require = equals(gVector.z1n_1.r1r_1, linearMap.n1o_1);
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp1_require) {
      var tmp$ret$1;
      // Inline function 'com.github.shwaka.kohomology.dg.GLinearMap.invoke.<anonymous>' call
      tmp$ret$1 = 'Graded linear map contains a bug: getLinearMap returns incorrect linear map';
      var message_0 = tmp$ret$1;
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
    var newVector = linearMap.q1o(gVector.z1n_1);
    var tmp$ret$3;
    // Inline function 'kotlin.run' call
    var tmp2_run = this.c1h().g1g();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$2;
    // Inline function 'com.github.shwaka.kohomology.dg.GLinearMap.invoke.<anonymous>' call
    tmp$ret$2 = tmp2_run.i1g(gVector.a1o_1, this.u1k());
    tmp$ret$3 = tmp$ret$2;
    var newDegree = tmp$ret$3;
    return this.t1k().k1h(newVector, newDegree);
  }
  function findPreimage(gVector) {
    if (!this.t1k().r1h(gVector))
      throw IllegalArgumentException_init_$Create$('Invalid gVector is given: ' + gVector + ' is not an element of ' + this.t1k());
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.c1h().g1g();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.dg.GLinearMap.findPreimage.<anonymous>' call
    tmp$ret$0 = tmp0_run.l1r(gVector.a1o_1, this.u1k());
    tmp$ret$1 = tmp$ret$0;
    var sourceDegree = tmp$ret$1;
    var tmp0_safe_receiver = this.g1h(sourceDegree).p1s(gVector.z1n_1);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$3;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$2;
      // Inline function 'com.github.shwaka.kohomology.dg.GLinearMap.findPreimage.<anonymous>' call
      tmp$ret$2 = this.s1k().k1h(tmp0_safe_receiver, sourceDegree);
      tmp$ret$3 = tmp$ret$2;
      tmp = tmp$ret$3;
    }
    return tmp;
  }
  function kernel() {
    var tmp = Companion_getInstance_31();
    var tmp_0 = this.y1g();
    var tmp_1 = this.s1k();
    var tmp_2 = 'Ker(' + this.d1h() + ')';
    return tmp.w1r(tmp_0, tmp_1, tmp_2, VOID, GLinearMap$kernel$lambda(this));
  }
  function image() {
    var tmp = Companion_getInstance_31();
    var tmp_0 = this.y1g();
    var tmp_1 = this.t1k();
    var tmp_2 = 'Im(' + this.d1h() + ')';
    return tmp.w1r(tmp_0, tmp_1, tmp_2, VOID, GLinearMap$image$lambda(this));
  }
  function cokernel() {
    return Companion_getInstance_29().i1q(this.y1g(), this.t1k(), this.y1k(), VOID, 'Coker(' + this.d1h() + ')');
  }
  function induce(sourceSub, targetSub) {
    var gLinearMapDegree = this.u1k();
    var tmp = Companion_getInstance_21();
    var tmp_0 = this.u1k();
    var tmp_1 = this.y1g();
    var tmp_2 = this.d1h();
    return tmp.l1s(sourceSub, targetSub, tmp_0, tmp_1, tmp_2, GLinearMap$induce$lambda(this, gLinearMapDegree, sourceSub, targetSub));
  }
  function induce_0(sourceQuot, targetQuot) {
    var gLinearMapDegree = this.u1k();
    var tmp = Companion_getInstance_21();
    var tmp_0 = this.u1k();
    var tmp_1 = this.y1g();
    var tmp_2 = this.d1h();
    return tmp.l1s(sourceQuot, targetQuot, tmp_0, tmp_1, tmp_2, GLinearMap$induce$lambda_0(this, gLinearMapDegree, sourceQuot, targetQuot));
  }
  function induce_1(sourceSubQuot, targetSubQuot) {
    var gLinearMapDegree = this.u1k();
    var tmp = Companion_getInstance_21();
    var tmp_0 = this.u1k();
    var tmp_1 = this.y1g();
    var tmp_2 = this.d1h();
    return tmp.l1s(sourceSubQuot, targetSubQuot, tmp_0, tmp_1, tmp_2, GLinearMap$induce$lambda_1(this, gLinearMapDegree, sourceSubQuot, targetSubQuot));
  }
  setMetadataFor(GLinearMap, 'GLinearMap', interfaceMeta);
  setMetadataFor(DGAlgebraMapImpl, 'DGAlgebraMapImpl', classMeta, VOID, [GLinearMap]);
  setMetadataFor(Companion_3, 'Companion', objectMeta);
  function induce_2(sourceQuot) {
    return Companion_getInstance_13().o1p(sourceQuot, induce_0.call(this, sourceQuot, sourceQuot));
  }
  setMetadataFor(Derivation, 'Derivation', interfaceMeta, VOID, [GLinearMap]);
  setMetadataFor(DGDerivationImpl, 'DGDerivationImpl', classMeta, VOID, [Derivation, GLinearMap]);
  setMetadataFor(Companion_4, 'Companion', objectMeta);
  function get_1(degree) {
    return this.g1h(this.c1h().bi(degree));
  }
  function subspaceContains(gVector) {
    var subQuotVectorSpace = this.g1h(gVector.a1o_1);
    return subQuotVectorSpace.t1w(gVector.z1n_1);
  }
  setMetadataFor(SubGVectorSpace, 'SubGVectorSpace', interfaceMeta, VOID, [GVectorSpace]);
  setMetadataFor(DGIdealImpl, 'DGIdealImpl', classMeta, VOID, [SubGVectorSpace, DGVectorSpace]);
  setMetadataFor(Companion_5, 'Companion', objectMeta);
  setMetadataFor(Companion_6, 'Companion', objectMeta);
  setMetadataFor(DGLieAlgebraImpl, 'DGLieAlgebraImpl', classMeta, VOID, [GMagma, DGVectorSpace, GVectorSpace]);
  function ad(gVector) {
    var matrixSpace = this.u1m().y1g();
    var name = 'ad(' + gVector + ')';
    var tmp = Companion_getInstance_14();
    var tmp_0 = this.u1m();
    return tmp.r1p(tmp_0, gVector.a1o_1, matrixSpace, name, GLieAlgebraContext$ad$lambda(this, gVector));
  }
  setMetadataFor(GLieAlgebraContext, 'GLieAlgebraContext', interfaceMeta, VOID, [GMagmaContext]);
  setMetadataFor(DGLieAlgebraContextImpl, 'DGLieAlgebraContextImpl', classMeta, VOID, [DGMagmaContext, GLieAlgebraContext]);
  setMetadataFor(Companion_7, 'Companion', objectMeta);
  setMetadataFor(DGLinearMapImpl, 'DGLinearMapImpl', classMeta, VOID, [GLinearMap]);
  setMetadataFor(Companion_8, 'Companion', objectMeta);
  setMetadataFor(Companion_9, 'Companion', objectMeta);
  setMetadataFor(DGMagmaImpl, 'DGMagmaImpl', classMeta, VOID, [GMagma, DGVectorSpace, GVectorSpace]);
  setMetadataFor(DGMagmaContextImpl, 'DGMagmaContextImpl', classMeta, VOID, [DGMagmaContext]);
  setMetadataFor(Companion_10, 'Companion', objectMeta);
  setMetadataFor(Companion_11, 'Companion', objectMeta);
  setMetadataFor(DGVectorSpaceImpl, 'DGVectorSpaceImpl', classMeta, VOID, [DGVectorSpace, GVectorSpace]);
  function get_2(degree) {
    return this.g1h(this.c1h().bi(degree));
  }
  function subspaceContains_0(gVector) {
    var subQuotVectorSpace = this.g1h(gVector.a1o_1);
    return subQuotVectorSpace.t1w(gVector.z1n_1);
  }
  setMetadataFor(SubQuotGVectorSpace, 'SubQuotGVectorSpace', interfaceMeta, VOID, [GVectorSpace]);
  setMetadataFor(Cohomology, 'Cohomology', classMeta, VOID, [SubQuotGVectorSpace]);
  setMetadataFor(DGVectorContextImpl, 'DGVectorContextImpl', classMeta, VOID, [DGVectorContext, GVectorContext]);
  setMetadataFor(Companion_12, 'Companion', objectMeta);
  setMetadataFor(Companion_13, 'Companion', objectMeta);
  setMetadataFor(Companion_14, 'Companion', objectMeta);
  setMetadataFor(DerivationImpl, 'DerivationImpl', classMeta, VOID, [Derivation, GLinearMap]);
  setMetadataFor(LieDerivationImpl, 'LieDerivationImpl', classMeta, VOID, [GLinearMap]);
  setMetadataFor(MagmaDerivationImpl, 'MagmaDerivationImpl', classMeta, VOID, [GLinearMap]);
  setMetadataFor(InvalidIdentifierException, 'InvalidIdentifierException', classMeta, Exception);
  setMetadataFor(Companion_15, 'Companion', objectMeta);
  setMetadataFor(GAlgebraContextImpl, 'GAlgebraContextImpl', classMeta, VOID, [GAlgebraContext, GMagmaContext]);
  setMetadataFor(Companion_16, 'Companion', objectMeta);
  setMetadataFor(GAlgebraMapImpl, 'GAlgebraMapImpl', classMeta, VOID, [GLinearMap]);
  setMetadataFor(Companion_17, 'Companion', objectMeta);
  setMetadataFor(GBilinearMap, 'GBilinearMap', classMeta);
  setMetadataFor(Companion_18, 'Companion', objectMeta);
  setMetadataFor(Companion_19, 'Companion', objectMeta);
  setMetadataFor(GLieAlgebraImpl, 'GLieAlgebraImpl', classMeta, VOID, [GMagma, GVectorSpace]);
  setMetadataFor(GLieAlgebraContextImpl, 'GLieAlgebraContextImpl', classMeta, VOID, [GLieAlgebraContext, GMagmaContext]);
  setMetadataFor(Companion_20, 'Companion', objectMeta);
  setMetadataFor(GLinearMapImpl, 'GLinearMapImpl', classMeta, VOID, [GLinearMap]);
  setMetadataFor(Companion_21, 'Companion', objectMeta);
  setMetadataFor(GLinearMapWithDegreeChange, 'GLinearMapWithDegreeChange', classMeta);
  setMetadataFor(Companion_22, 'Companion', objectMeta);
  setMetadataFor(GMagmaContextImpl, 'GMagmaContextImpl', classMeta, VOID, [GMagmaContext, GVectorContext]);
  function isNotZero() {
    return !this.tj();
  }
  setMetadataFor(GVectorOrZero, 'GVectorOrZero', interfaceMeta);
  setMetadataFor(GVector, 'GVector', classMeta, VOID, [GVectorOrZero]);
  setMetadataFor(ZeroGVector, 'ZeroGVector', classMeta, VOID, [GVectorOrZero]);
  setMetadataFor(Companion_23, 'Companion', objectMeta);
  setMetadataFor(Companion_24, 'Companion', objectMeta);
  setMetadataFor(GVectorSpaceImpl, 'GVectorSpaceImpl', classMeta, VOID, [GVectorSpace]);
  setMetadataFor(GVectorContextImpl, 'GVectorContextImpl', classMeta, VOID, [GVectorContext, NumVectorContext]);
  setMetadataFor(Companion_25, 'Companion', objectMeta);
  setMetadataFor(IdealImpl, 'IdealImpl', classMeta, VOID, [SubGVectorSpace]);
  setMetadataFor(Companion_26, 'Companion', objectMeta);
  function get_3(degree) {
    return this.g1h(this.c1h().bi(degree));
  }
  setMetadataFor(QuotGVectorSpace, 'QuotGVectorSpace', interfaceMeta, VOID, [GVectorSpace]);
  setMetadataFor(QuotDGAlgebra, 'QuotDGAlgebra', interfaceMeta, VOID, [DGAlgebra, QuotGVectorSpace, GAlgebra, GMagma, DGVectorSpace]);
  setMetadataFor(QuotDGAlgebraImpl, 'QuotDGAlgebraImpl', classMeta, VOID, [QuotDGAlgebra, QuotGVectorSpace]);
  setMetadataFor(Companion_27, 'Companion', objectMeta);
  setMetadataFor(QuotGAlgebraImpl, 'QuotGAlgebraImpl', classMeta, VOID, [QuotGVectorSpace, GAlgebra, GMagma]);
  setMetadataFor(Companion_28, 'Companion', objectMeta);
  setMetadataFor(QuotGVectorSpaceImpl, 'QuotGVectorSpaceImpl', classMeta, VOID, [QuotGVectorSpace]);
  setMetadataFor(Companion_29, 'Companion', objectMeta);
  setMetadataFor(SubDGVectorSpaceImpl, 'SubDGVectorSpaceImpl', classMeta, VOID, [SubGVectorSpace, DGVectorSpace]);
  setMetadataFor(Companion_30, 'Companion', objectMeta);
  setMetadataFor(SubGVectorSpaceImpl, 'SubGVectorSpaceImpl', classMeta, VOID, [SubGVectorSpace]);
  setMetadataFor(WholeSubGVectorSpace, 'WholeSubGVectorSpace', classMeta, VOID, [SubGVectorSpace]);
  setMetadataFor(Companion_31, 'Companion', objectMeta);
  setMetadataFor(SubQuotGAlgebraImpl, 'SubQuotGAlgebraImpl', classMeta, VOID, [SubQuotGVectorSpace, GAlgebra, GMagma]);
  setMetadataFor(Companion_32, 'Companion', objectMeta);
  setMetadataFor(SubQuotGLieAlgebraImpl, 'SubQuotGLieAlgebraImpl', classMeta, VOID, [SubQuotGVectorSpace, GMagma]);
  setMetadataFor(Companion_33, 'Companion', objectMeta);
  setMetadataFor(SubQuotGMagmaImpl, 'SubQuotGMagmaImpl', classMeta, VOID, [GMagma, SubQuotGVectorSpace]);
  setMetadataFor(Companion_34, 'Companion', objectMeta);
  setMetadataFor(SubQuotGVectorSpaceImpl, 'SubQuotGVectorSpaceImpl', classMeta, VOID, [SubQuotGVectorSpace]);
  function isNotZero_0() {
    return !this.tj();
  }
  function isOdd() {
    return !this.j1z();
  }
  function koszulSign(other) {
    return Companion_getInstance_72().m1z(this.j1z() ? true : other.j1z());
  }
  setMetadataFor(Degree, 'Degree', interfaceMeta);
  function get_zero_0() {
    return this.bi(0);
  }
  setMetadataFor(DegreeGroup, 'DegreeGroup', interfaceMeta);
  setMetadataFor(AugmentedDegreeGroup, 'AugmentedDegreeGroup', interfaceMeta, VOID, [DegreeGroup]);
  setMetadataFor(DegreeContext, 'DegreeContext', classMeta, VOID, [DegreeGroup]);
  setMetadataFor(AugmentedDegreeContext, 'AugmentedDegreeContext', classMeta, DegreeContext);
  setMetadataFor(AugmentationDegreeMorphism, 'AugmentationDegreeMorphism', classMeta);
  setMetadataFor(IntDegree, 'IntDegree', classMeta, VOID, [Degree]);
  setMetadataFor(IntDegreeGroup, 'IntDegreeGroup', objectMeta, VOID, [AugmentedDegreeGroup]);
  setMetadataFor(MultiDegree, 'MultiDegree', classMeta, VOID, [Degree]);
  setMetadataFor(MultiDegreeGroup, 'MultiDegreeGroup', classMeta, VOID, [AugmentedDegreeGroup]);
  setMetadataFor(DegreeIndeterminate, 'DegreeIndeterminate', classMeta);
  setMetadataFor(MultiDegreeMorphism, 'MultiDegreeMorphism', classMeta);
  setMetadataFor(InclusionFromIntDegreeToMultiDegree, 'InclusionFromIntDegreeToMultiDegree', classMeta);
  setMetadataFor(ASTNode, 'ASTNode', interfaceMeta);
  setMetadataFor(Zero, 'Zero', objectMeta, VOID, [ASTNode]);
  setMetadataFor(Identifier, 'Identifier', classMeta, VOID, [ASTNode]);
  setMetadataFor(NatNumber, 'NatNumber', classMeta, VOID, [ASTNode]);
  setMetadataFor(UnaryMinus, 'UnaryMinus', classMeta, VOID, [ASTNode]);
  setMetadataFor(Power, 'Power', classMeta, VOID, [ASTNode]);
  setMetadataFor(Divide, 'Divide', classMeta, VOID, [ASTNode]);
  setMetadataFor(Multiply, 'Multiply', classMeta, VOID, [ASTNode]);
  setMetadataFor(Subtract, 'Subtract', classMeta, VOID, [ASTNode]);
  setMetadataFor(Sum, 'Sum', classMeta, VOID, [ASTNode]);
  setMetadataFor(CharCategoryToken, 'CharCategoryToken', classMeta, Token);
  setMetadataFor(GAlgebraElementASTGrammar, 'GAlgebraElementASTGrammar', objectMeta, Grammar);
  setMetadataFor(RegexToken, 'RegexToken', classMeta, Token);
  setMetadataFor(IllegalContextException, 'IllegalContextException', classMeta, RuntimeException);
  setMetadataFor(InvalidSizeException, 'InvalidSizeException', classMeta, RuntimeException);
  setMetadataFor(Companion_35, 'Companion', objectMeta);
  function toProgress(targetIsomorphismUpTo) {
    return new MinimalModelProgress(this.z22(), targetIsomorphismUpTo, this.x22().r1l().i());
  }
  setMetadataFor(MinimalModel, 'MinimalModel', interfaceMeta);
  setMetadataFor(CohomologicalMinimalModel, 'CohomologicalMinimalModel', classMeta, VOID, [MinimalModel]);
  setMetadataFor(AbstractNextMMCalculator, 'AbstractNextMMCalculator', classMeta);
  setMetadataFor(NextMMCalculator, 'NextMMCalculator', classMeta, AbstractNextMMCalculator);
  setMetadataFor(CohomologicalNextMMCalculator, 'CohomologicalNextMMCalculator', classMeta, NextMMCalculator);
  setMetadataFor(Companion_36, 'Companion', objectMeta);
  setMetadataFor(DerivationDGLieAlgebra, 'DerivationDGLieAlgebra', classMeta, VOID, [GMagma, DGVectorSpace]);
  setMetadataFor(DerivationDGLieAlgebraFactory, 'DerivationDGLieAlgebraFactory', classMeta);
  setMetadataFor(Companion_37, 'Companion', objectMeta);
  setMetadataFor(DerivationGLieAlgebra, 'DerivationGLieAlgebra', classMeta, VOID, [GMagma]);
  setMetadataFor(DerivationGLieAlgebraFactory, 'DerivationGLieAlgebraFactory', classMeta);
  setMetadataFor(Companion_38, 'Companion', objectMeta);
  function get_generatorList() {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = this.h26();
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.<get-generatorList>.<anonymous>' call
      var monomial = Companion_getInstance_51().e2a(this.c1h(), this.h26(), item);
      tmp$ret$0 = this.m1h(monomial, item.p26_1);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function getDerivation(valueList, derivationDegree) {
    if (!(valueList.i() === this.h26().i()))
      throw new InvalidSizeException('Invalid size of the list of values of a derivation: ' + ('' + this.h26().i() + ' is expected but ' + valueList.i() + ' is given'));
    var tmp0_iterator = zip(this.h26(), valueList).f();
    while (tmp0_iterator.g()) {
      var tmp1_loop_parameter = tmp0_iterator.h();
      var indeterminate = tmp1_loop_parameter.j3();
      var value = tmp1_loop_parameter.k3();
      var tmp2_subject = value;
      if (tmp2_subject instanceof GVector) {
        var tmp$ret$1;
        // Inline function 'kotlin.run' call
        var tmp0_run = this.c1h().g1g();
        // Inline function 'kotlin.contracts.contract' call
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getDerivation.<anonymous>' call
        tmp$ret$0 = tmp0_run.i1g(indeterminate.p26_1, derivationDegree);
        tmp$ret$1 = tmp$ret$0;
        var expectedValueDegree = tmp$ret$1;
        // Inline function 'kotlin.require' call
        var tmp1_require = this.r1h(value);
        // Inline function 'kotlin.contracts.contract' call
        if (!tmp1_require) {
          var tmp$ret$2;
          // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getDerivation.<anonymous>' call
          tmp$ret$2 = 'Cannot construct Derivation ' + ('since the given value ' + value + ' is not an element of ' + this + ', but of ' + value.a1j());
          var message = tmp$ret$2;
          throw IllegalArgumentException_init_$Create$(toString(message));
        }
        // Inline function 'kotlin.require' call
        var tmp2_require = equals(value.a1o_1, expectedValueDegree);
        // Inline function 'kotlin.contracts.contract' call
        if (!tmp2_require) {
          var tmp$ret$3;
          // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getDerivation.<anonymous>' call
          tmp$ret$3 = 'Illegal degree: the degree of the value of ' + indeterminate + ' must be ' + ('' + indeterminate.p26_1 + ' + ' + derivationDegree + ' = ' + expectedValueDegree + ', ') + ('but ' + value.a1o_1 + ' was given');
          var message_0 = tmp$ret$3;
          throw IllegalArgumentException_init_$Create$(toString(message_0));
        }
      } else {
        if (tmp2_subject instanceof ZeroGVector) {
          // Inline function 'kotlin.require' call
          var tmp3_require = this.s1h(value);
          // Inline function 'kotlin.contracts.contract' call
          if (!tmp3_require) {
            var tmp$ret$4;
            // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getDerivation.<anonymous>' call
            tmp$ret$4 = 'Cannot construct Derivation ' + ('since zeroGVector.gVectorSpace is not an element of ' + this + ', but of ' + value.a1j());
            var message_1 = tmp$ret$4;
            throw IllegalArgumentException_init_$Create$(toString(message_1));
          }
        }
      }
    }
    var tmp$ret$9;
    // Inline function 'kotlin.collections.mapIndexed' call
    var tmp$ret$8;
    // Inline function 'kotlin.collections.mapIndexedTo' call
    var tmp0_mapIndexedTo = ArrayList_init_$Create$(collectionSizeOrDefault(valueList, 10));
    var index = 0;
    var tmp0_iterator_0 = valueList.f();
    while (tmp0_iterator_0.g()) {
      var item = tmp0_iterator_0.h();
      var tmp$ret$7;
      // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getDerivation.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      var tmp4_anonymous = checkIndexOverflow(tmp1);
      var tmp$ret$6;
      // Inline function 'kotlin.run' call
      var tmp0_run_0 = this.c1h().g1g();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$5;
      // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getDerivation.<anonymous>.<anonymous>' call
      tmp$ret$5 = tmp0_run_0.i1g(this.h26().l(tmp4_anonymous).p26_1, derivationDegree);
      tmp$ret$6 = tmp$ret$5;
      var valueDegree = tmp$ret$6;
      tmp$ret$7 = this.q1h(item, valueDegree);
      tmp0_mapIndexedTo.a(tmp$ret$7);
    }
    tmp$ret$8 = tmp0_mapIndexedTo;
    tmp$ret$9 = tmp$ret$8;
    var gVectorValueList = tmp$ret$9;
    var name = 'Derivation(' + joinToString(valueList, ', ', VOID, VOID, VOID, VOID, FreeGAlgebra$getDerivation$lambda) + ')';
    var tmp = Companion_getInstance_13();
    var tmp_0 = this.y1g();
    return tmp.p1p(this, derivationDegree, tmp_0, name, FreeGAlgebra$getDerivation$lambda_0(this, derivationDegree, gVectorValueList));
  }
  function getDerivation_0(valueList, derivationDegree) {
    return this.q26(valueList, this.c1h().bi(derivationDegree));
  }
  function getGAlgebraMap(target, valueList) {
    if (!(valueList.i() === this.h26().i()))
      throw new InvalidSizeException('Invalid size of the list of values of an algebra map');
    var tmp0_iterator = zip(this.h26(), valueList).f();
    while (tmp0_iterator.g()) {
      var tmp1_loop_parameter = tmp0_iterator.h();
      var indeterminate = tmp1_loop_parameter.j3();
      var value = tmp1_loop_parameter.k3();
      var tmp2_subject = value;
      if (tmp2_subject instanceof GVector) {
        // Inline function 'kotlin.require' call
        var tmp0_require = target.r1h(value);
        // Inline function 'kotlin.contracts.contract' call
        if (!tmp0_require) {
          var tmp$ret$0;
          // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getGAlgebraMap.<anonymous>' call
          tmp$ret$0 = 'Cannot construct GAlgebraMap ' + ('since the given value ' + value + ' is not an element of ' + target + ', but of ' + value.a1j());
          var message = tmp$ret$0;
          throw IllegalArgumentException_init_$Create$(toString(message));
        }
        // Inline function 'kotlin.require' call
        var tmp1_require = equals(value.a1o_1, indeterminate.p26_1);
        // Inline function 'kotlin.contracts.contract' call
        if (!tmp1_require) {
          var tmp$ret$1;
          // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getGAlgebraMap.<anonymous>' call
          tmp$ret$1 = 'Illegal degree: the degree of the value of ' + indeterminate + ' must be ' + indeterminate.p26_1 + ('but ' + value.a1o_1 + ' was given');
          var message_0 = tmp$ret$1;
          throw IllegalArgumentException_init_$Create$(toString(message_0));
        }
      } else {
        if (tmp2_subject instanceof ZeroGVector) {
          // Inline function 'kotlin.require' call
          var tmp2_require = target.s1h(value);
          // Inline function 'kotlin.contracts.contract' call
          if (!tmp2_require) {
            var tmp$ret$2;
            // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getGAlgebraMap.<anonymous>' call
            tmp$ret$2 = 'Cannot construct GAlgebraMap ' + ('since zeroGVector.gVectorSpace is not an element of ' + target + ', but of ' + value.a1j());
            var message_1 = tmp$ret$2;
            throw IllegalArgumentException_init_$Create$(toString(message_1));
          }
        }
      }
    }
    var tmp$ret$5;
    // Inline function 'kotlin.collections.mapIndexed' call
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapIndexedTo' call
    var tmp0_mapIndexedTo = ArrayList_init_$Create$(collectionSizeOrDefault(valueList, 10));
    var index = 0;
    var tmp0_iterator_0 = valueList.f();
    while (tmp0_iterator_0.g()) {
      var item = tmp0_iterator_0.h();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getGAlgebraMap.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      var tmp3_anonymous = checkIndexOverflow(tmp1);
      var valueDegree = this.h26().l(tmp3_anonymous).p26_1;
      tmp$ret$3 = target.q1h(item, valueDegree);
      tmp0_mapIndexedTo.a(tmp$ret$3);
    }
    tmp$ret$4 = tmp0_mapIndexedTo;
    tmp$ret$5 = tmp$ret$4;
    var gVectorValueList = tmp$ret$5;
    var name = 'AlgebraMap(' + joinToString(valueList, ', ', VOID, VOID, VOID, VOID, FreeGAlgebra$getGAlgebraMap$lambda) + ')';
    var tmp = Companion_getInstance_17();
    var tmp_0 = this.y1g();
    return tmp.c1r(this, target, tmp_0, name, FreeGAlgebra$getGAlgebraMap$lambda_0(this, target, gVectorValueList));
  }
  function containsIndeterminate(indeterminateIndex, element) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.any' call
      var tmp0_any = element.z1n_1.g1t();
      if (tmp0_any.p()) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp$ret$1;
      // Inline function 'kotlin.collections.iterator' call
      tmp$ret$1 = tmp0_any.u().f();
      var tmp0_iterator = tmp$ret$1;
      while (tmp0_iterator.g()) {
        var element_0 = tmp0_iterator.h();
        var tmp$ret$3;
        // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.containsIndeterminate.<anonymous>' call
        var tmp$ret$2;
        // Inline function 'kotlin.collections.component1' call
        tmp$ret$2 = element_0.v();
        var monomial = tmp$ret$2;
        tmp$ret$3 = monomial.f2a(indeterminateIndex);
        if (tmp$ret$3) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    return tmp$ret$0;
  }
  function parse_0(text) {
    var generatorList = this.q27();
    return this.d1i(generatorList, text);
  }
  function getGeneratorsForParser() {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = zip(this.h26(), this.r1l());
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getGeneratorsForParser.<anonymous>' call
      var indeterminate = item.j3();
      var generator = item.k3();
      tmp$ret$0 = new Pair(indeterminate.o26_1.h1z().p27_1, generator);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function convertDegree(degreeMorphism) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = this.h26();
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.convertDegree.<anonymous>' call
      tmp$ret$0 = item.g2a(degreeMorphism);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var newIndeterminateList = tmp$ret$2;
    var newFreeGAlgebra = Companion_getInstance_41().y29(this.y1g(), degreeMorphism.t1k(), newIndeterminateList);
    var freeMonoidMorphism = new FreeGMonoidMorphismByDegreeChange(this.d28(), degreeMorphism);
    var tmp = Companion_getInstance_22();
    var tmp_0 = this.y1g();
    var tmp_1 = this.d1h() + ' (degree changed)';
    var gLinearMapWithDegreeChange = tmp.y1s(this, newFreeGAlgebra, degreeMorphism, tmp_0, tmp_1, FreeGAlgebra$convertDegree$lambda(freeMonoidMorphism));
    return new Pair(newFreeGAlgebra, gLinearMapWithDegreeChange);
  }
  setMetadataFor(FreeGAlgebra, 'FreeGAlgebra', interfaceMeta, VOID, [GAlgebra]);
  function getDGAlgebraMap(target, valueList) {
    var gAlgebraMap = this.l27(target, valueList);
    var tmp0_iterator = this.r1l().f();
    while (tmp0_iterator.g()) {
      var v = tmp0_iterator.h();
      var fdv = gAlgebraMap.s1g(this.o1g().s1g(v));
      var dfv = target.o1g().s1g(gAlgebraMap.s1g(v));
      if (!fdv.equals(dfv)) {
        throw IllegalArgumentException_init_$Create$('The given algebra map does not commute with the differential on the generator ' + v + ':\n' + ('f(d(' + v + ')) = ' + fdv + ', d(f(' + v + ')) = ' + dfv));
      }
    }
    return Companion_getInstance_3().n1k(this, target, gAlgebraMap);
  }
  function convertDegree_0(degreeMorphism) {
    var tmp0_container = convertDegree.call(this, degreeMorphism);
    var newFreeGAlgebra = tmp0_container.j3();
    var changeDegree = tmp0_container.k3();
    var tmp$ret$4;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = this.r1l();
    var tmp$ret$3;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$2;
      // Inline function 'com.github.shwaka.kohomology.free.FreeDGAlgebra.convertDegree.<anonymous>' call
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this.g1g();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.FreeDGAlgebra.convertDegree.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.r1g().s1g(item);
      tmp$ret$1 = tmp$ret$0;
      var dv = tmp$ret$1;
      tmp$ret$2 = changeDegree.f1t(dv);
      tmp0_mapTo.a(tmp$ret$2);
    }
    tmp$ret$3 = tmp0_mapTo;
    tmp$ret$4 = tmp$ret$3;
    var differentialValueList = tmp$ret$4;
    var differential = newFreeGAlgebra.b27(differentialValueList, 1);
    var newFreeDGAlgebra = Companion_getInstance_39().y26(newFreeGAlgebra, differential);
    return new Pair(newFreeDGAlgebra, changeDegree);
  }
  function toIntDegree() {
    var degreeMorphism = new AugmentationDegreeMorphism(this.c1h());
    return this.m27(degreeMorphism);
  }
  function toJson() {
    var intFreeDGA = this.n27().x3_1;
    var tmp = PrintType_CODE_getInstance();
    var printer = Printer_init_$Create$(PrintConfig_init_$Create$(tmp, VOID, VOID, VOID, FreeDGAlgebra$toJson$lambda));
    var tmp$ret$4;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = zip(intFreeDGA.h26(), intFreeDGA.r1l());
    var tmp$ret$3;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$2;
      // Inline function 'com.github.shwaka.kohomology.free.FreeDGAlgebra.toJson.<anonymous>' call
      var indeterminate = item.j3();
      var generator = item.k3();
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = intFreeDGA.g1g();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.FreeDGAlgebra.toJson.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.r1g().s1g(generator);
      tmp$ret$1 = tmp$ret$0;
      var differentialValue = tmp$ret$1;
      tmp$ret$2 = new GeneratorOfFreeDGA(indeterminate.o26_1.h1z().p27_1, indeterminate.p26_1, printer.t26(differentialValue));
      tmp0_mapTo.a(tmp$ret$2);
    }
    tmp$ret$3 = tmp0_mapTo;
    tmp$ret$4 = tmp$ret$3;
    var generatorList = tmp$ret$4;
    return generatorListToJson(generatorList);
  }
  setMetadataFor(FreeDGAlgebra, 'FreeDGAlgebra', interfaceMeta, VOID, [DGAlgebra, FreeGAlgebra]);
  setMetadataFor(Companion_39, 'Companion', objectMeta);
  setMetadataFor(FreeDGAlgebraImpl, 'FreeDGAlgebraImpl', classMeta, VOID, [FreeDGAlgebra, GVectorSpace]);
  function parse_1(text) {
    return this.i1k().x26(text);
  }
  setMetadataFor(FreeGAlgebraContext, 'FreeGAlgebraContext', interfaceMeta, VOID, [GAlgebraContext]);
  setMetadataFor(FreeDGAlgebraContextImpl, 'FreeDGAlgebraContextImpl', classMeta, VOID, [DGMagmaContext, GAlgebraContext, FreeGAlgebraContext]);
  setMetadataFor(Companion_40, 'Companion', objectMeta);
  setMetadataFor(Companion_41, 'Companion', objectMeta);
  setMetadataFor(Companion_42, 'Companion', objectMeta);
  setMetadataFor(FreeGAlgebraImpl, 'FreeGAlgebraImpl', classMeta, VOID, [FreeGAlgebra, GAlgebra]);
  setMetadataFor(FreeGAlgebraContextImpl, 'FreeGAlgebraContextImpl', classMeta, VOID, [FreeGAlgebraContext, GAlgebraContext]);
  setMetadataFor(Companion_43, 'Companion', objectMeta);
  setMetadataFor(GeneratorOfFreeDGA, 'GeneratorOfFreeDGA', classMeta);
  setMetadataFor(Companion_44, 'Companion', objectMeta);
  setMetadataFor($serializer, '$serializer', objectMeta, VOID, [GeneratedSerializer]);
  setMetadataFor(SerializableGenerator, 'SerializableGenerator', classMeta, VOID, VOID, VOID, {0: $serializer_getInstance});
  setMetadataFor(GeneratorSerializer, 'GeneratorSerializer', objectMeta, JsonTransformingSerializer);
  setMetadataFor(Companion_45, 'Companion', objectMeta);
  setMetadataFor(HomologicalMinimalModel, 'HomologicalMinimalModel', classMeta, VOID, [MinimalModel]);
  setMetadataFor(HomologicalNextMMCalculator, 'HomologicalNextMMCalculator', classMeta, NextMMCalculator);
  function toString_1(printConfig) {
    return toString(this);
  }
  setMetadataFor(IndeterminateName, 'IndeterminateName', interfaceMeta);
  setMetadataFor(MMIndeterminateName, 'MMIndeterminateName', classMeta, VOID, [IndeterminateName]);
  setMetadataFor(MMIndeterminateType, 'MMIndeterminateType', classMeta, Enum);
  setMetadataFor(Companion_46, 'Companion', objectMeta);
  setMetadataFor(MinimalModelProgress, 'MinimalModelProgress', classMeta);
  setMetadataFor(Companion_47, 'Companion', objectMeta);
  setMetadataFor(MonoidGAlgebraImpl, 'MonoidGAlgebraImpl', classMeta, VOID, [GAlgebra, GVectorSpace]);
  setMetadataFor(MonoidGAlgebraFactory, 'MonoidGAlgebraFactory', classMeta);
  setMetadataFor(Companion_48, 'Companion', objectMeta);
  function listDegreesForAugmentedDegree(augmentedDegree) {
    throw new NotImplementedError('Monoid.listDegreesForAugmentedDegree() is not implemented for a general monoid');
  }
  setMetadataFor(GMonoid, 'GMonoid', interfaceMeta);
  setMetadataFor(FreeGMonoid, 'FreeGMonoid', classMeta, VOID, [GMonoid]);
  setMetadataFor(MonomialSeparation, 'MonomialSeparation', classMeta);
  setMetadataFor(FreeGMonoidMorphismByDegreeChange, 'FreeGMonoidMorphismByDegreeChange', classMeta);
  function toString_2(printConfig) {
    return toString(this);
  }
  setMetadataFor(BasisName, 'BasisName', interfaceMeta);
  setMetadataFor(GMonoidElement, 'GMonoidElement', interfaceMeta, VOID, [BasisName]);
  setMetadataFor(SignedOrZero, 'SignedOrZero', classMeta);
  setMetadataFor(Zero_0, 'Zero', objectMeta, SignedOrZero);
  setMetadataFor(Signed, 'Signed', classMeta, SignedOrZero);
  setMetadataFor(StringIndeterminateName, 'StringIndeterminateName', classMeta, VOID, [IndeterminateName]);
  setMetadataFor(Indeterminate, 'Indeterminate', classMeta);
  setMetadataFor(Companion_49, 'Companion', objectMeta);
  setMetadataFor(IndeterminateList, 'IndeterminateList', classMeta);
  setMetadataFor(PositiveIndeterminateList, 'PositiveIndeterminateList', classMeta, IndeterminateList);
  setMetadataFor(NegativeIndeterminateList, 'NegativeIndeterminateList', classMeta, IndeterminateList);
  setMetadataFor(Companion_50, 'Companion', objectMeta);
  setMetadataFor(Monomial, 'Monomial', classMeta, VOID, [GMonoidElement]);
  setMetadataFor(MonomialListGeneratorAugmented, 'MonomialListGeneratorAugmented', classMeta);
  setMetadataFor(MonomialListGeneratorBasic, 'MonomialListGeneratorBasic', classMeta);
  setMetadataFor(Companion_51, 'Companion', objectMeta);
  setMetadataFor(Power_0, 'Power', classMeta);
  setMetadataFor(PartitionCalculator, 'PartitionCalculator', classMeta);
  setMetadataFor(sam$kotlin_Comparator$0, 'sam$kotlin_Comparator$0', classMeta, VOID, [Comparator]);
  setMetadataFor(RowEchelonForm, 'RowEchelonForm', classMeta);
  setMetadataFor(DecomposedSparseRowEchelonForm, 'DecomposedSparseRowEchelonForm', classMeta, RowEchelonForm);
  setMetadataFor(Companion_52, 'Companion', objectMeta);
  function getIdentity(dim) {
    var one = this.j1h().b1j();
    var tmp$ret$2;
    // Inline function 'kotlin.collections.List' call
    var tmp$ret$1;
    // Inline function 'kotlin.collections.MutableList' call
    var list = ArrayList_init_$Create$(dim);
    // Inline function 'kotlin.repeat' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    if (inductionVariable < dim)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.collections.MutableList.<anonymous>' call
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.linalg.MatrixSpace.getIdentity.<anonymous>' call
        tmp$ret$0 = to(index, mapOf_0(to(index, one)));
        list.a(tmp$ret$0);
      }
       while (inductionVariable < dim);
    tmp$ret$1 = list;
    tmp$ret$2 = tmp$ret$1;
    var rowMap = toMap(tmp$ret$2);
    return this.c2h(rowMap, dim, dim);
  }
  function fromRowList$default(rowList, colCount, $super) {
    colCount = colCount === VOID ? null : colCount;
    return $super === VOID ? this.k2i(rowList, colCount) : $super.k2i.call(this, rowList, colCount);
  }
  function fromColList(colList, rowCount) {
    var tmp;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.isNotEmpty' call
    tmp$ret$0 = !colList.p();
    if (tmp$ret$0) {
      tmp = colList.l(0).i();
    } else {
      if (!(rowCount == null)) {
        tmp = rowCount;
      } else {
        throw IllegalArgumentException_init_$Create$('Column list is empty and rowCount is not specified');
      }
    }
    var rowCountNonNull = tmp;
    var colCount = colList.i();
    var tmp$ret$6;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = until(0, rowCountNonNull);
    var tmp$ret$5;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.z_1;
    var last = tmp0_map.a1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$4;
        // Inline function 'com.github.shwaka.kohomology.linalg.MatrixSpace.fromColList.<anonymous>' call
        var tmp$ret$3;
        // Inline function 'kotlin.collections.map' call
        var tmp0_map_0 = until(0, colCount);
        var tmp$ret$2;
        // Inline function 'kotlin.collections.mapTo' call
        var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
        var inductionVariable_0 = tmp0_map_0.z_1;
        var last_0 = tmp0_map_0.a1_1;
        if (inductionVariable_0 <= last_0)
          do {
            var item_0 = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var tmp$ret$1;
            // Inline function 'com.github.shwaka.kohomology.linalg.MatrixSpace.fromColList.<anonymous>.<anonymous>' call
            tmp$ret$1 = colList.l(item_0).l(item);
            tmp0_mapTo_0.a(tmp$ret$1);
          }
           while (!(item_0 === last_0));
        tmp$ret$2 = tmp0_mapTo_0;
        tmp$ret$3 = tmp$ret$2;
        tmp$ret$4 = tmp$ret$3;
        tmp0_mapTo.a(tmp$ret$4);
      }
       while (!(item === last));
    tmp$ret$5 = tmp0_mapTo;
    tmp$ret$6 = tmp$ret$5;
    var rows = tmp$ret$6;
    return this.k2i(rows, colCount);
  }
  function fromColMap(colMap, rowCount, colCount) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp$ret$0 = LinkedHashMap_init_$Create$();
    var rowMap = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$1 = colMap.u().f();
    var tmp0_iterator = tmp$ret$1;
    while (tmp0_iterator.g()) {
      var tmp1_loop_parameter = tmp0_iterator.h();
      var tmp$ret$2;
      // Inline function 'kotlin.collections.component1' call
      tmp$ret$2 = tmp1_loop_parameter.v();
      var colInd = tmp$ret$2;
      var tmp$ret$3;
      // Inline function 'kotlin.collections.component2' call
      tmp$ret$3 = tmp1_loop_parameter.w();
      var col = tmp$ret$3;
      var tmp$ret$4;
      // Inline function 'kotlin.collections.iterator' call
      tmp$ret$4 = col.u().f();
      var tmp2_iterator = tmp$ret$4;
      while (tmp2_iterator.g()) {
        var tmp3_loop_parameter = tmp2_iterator.h();
        var tmp$ret$5;
        // Inline function 'kotlin.collections.component1' call
        tmp$ret$5 = tmp3_loop_parameter.v();
        var rowInd = tmp$ret$5;
        var tmp$ret$6;
        // Inline function 'kotlin.collections.component2' call
        tmp$ret$6 = tmp3_loop_parameter.w();
        var elm = tmp$ret$6;
        var tmp$ret$9;
        // Inline function 'kotlin.collections.getOrPut' call
        var value = rowMap.u2(rowInd);
        var tmp;
        if (value == null) {
          var tmp$ret$8;
          // Inline function 'com.github.shwaka.kohomology.linalg.MatrixSpace.fromColMap.<anonymous>' call
          var tmp$ret$7;
          // Inline function 'kotlin.collections.mutableMapOf' call
          tmp$ret$7 = LinkedHashMap_init_$Create$();
          tmp$ret$8 = tmp$ret$7;
          var answer = tmp$ret$8;
          rowMap.z3(rowInd, answer);
          tmp = answer;
        } else {
          tmp = value;
        }
        tmp$ret$9 = tmp;
        var row = tmp$ret$9;
        // Inline function 'kotlin.collections.set' call
        row.z3(colInd, elm);
      }
    }
    return this.c2h(rowMap, rowCount, colCount);
  }
  function fromNumVectorList(numVectors, dim) {
    if (numVectors.p() ? dim == null : false)
      throw IllegalArgumentException_init_$Create$('Vector list is empty and dim is not specified');
    var tmp0_elvis_lhs = dim;
    var dimNotNull = tmp0_elvis_lhs == null ? numVectors.l(0).p22() : tmp0_elvis_lhs;
    var tmp$ret$3;
    // Inline function 'kotlin.collections.mapIndexedNotNull' call
    var tmp$ret$2;
    // Inline function 'kotlin.collections.mapIndexedNotNullTo' call
    var tmp0_mapIndexedNotNullTo = ArrayList_init_$Create$_0();
    // Inline function 'kotlin.collections.forEachIndexed' call
    var index = 0;
    var tmp0_iterator = numVectors.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      // Inline function 'kotlin.collections.mapIndexedNotNullTo.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      var tmp0_anonymous = checkIndexOverflow(tmp1);
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.MatrixSpace.fromNumVectorList.<anonymous>' call
      tmp$ret$0 = item.tj() ? null : new Pair(tmp0_anonymous, item.s2j());
      var tmp0_safe_receiver = tmp$ret$0;
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$1;
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        tmp0_mapIndexedNotNullTo.a(tmp0_safe_receiver);
        tmp$ret$1 = Unit_getInstance();
      }
    }
    tmp$ret$2 = tmp0_mapIndexedNotNullTo;
    tmp$ret$3 = tmp$ret$2;
    var colMap = toMap(tmp$ret$3);
    return this.w2i(colMap, dimNotNull, numVectors.i());
  }
  setMetadataFor(MatrixSpace, 'MatrixSpace', interfaceMeta);
  setMetadataFor(DenseMatrixSpace, 'DenseMatrixSpace', classMeta, VOID, [MatrixSpace]);
  function toList_2() {
    var tmp$ret$5;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = until(0, this.x2i());
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.z_1;
    var last = tmp0_map.a1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$3;
        // Inline function 'com.github.shwaka.kohomology.linalg.Matrix.toList.<anonymous>' call
        var tmp$ret$2;
        // Inline function 'kotlin.collections.map' call
        var tmp0_map_0 = until(0, this.y2i());
        var tmp$ret$1;
        // Inline function 'kotlin.collections.mapTo' call
        var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
        var inductionVariable_0 = tmp0_map_0.z_1;
        var last_0 = tmp0_map_0.a1_1;
        if (inductionVariable_0 <= last_0)
          do {
            var item_0 = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var tmp$ret$0;
            // Inline function 'com.github.shwaka.kohomology.linalg.Matrix.toList.<anonymous>.<anonymous>' call
            tmp$ret$0 = this.i2i(item, item_0);
            tmp0_mapTo_0.a(tmp$ret$0);
          }
           while (!(item_0 === last_0));
        tmp$ret$1 = tmp0_mapTo_0;
        tmp$ret$2 = tmp$ret$1;
        tmp$ret$3 = tmp$ret$2;
        tmp0_mapTo.a(tmp$ret$3);
      }
       while (!(item === last));
    tmp$ret$4 = tmp0_mapTo;
    tmp$ret$5 = tmp$ret$4;
    return tmp$ret$5;
  }
  function toNumVectorList() {
    var tmp$ret$5;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = until(0, this.y2i());
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.z_1;
    var last = tmp0_map.a1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$3;
        // Inline function 'com.github.shwaka.kohomology.linalg.Matrix.toNumVectorList.<anonymous>' call
        var tmp = this.b1h();
        var tmp$ret$2;
        // Inline function 'kotlin.collections.map' call
        var tmp0_map_0 = until(0, this.x2i());
        var tmp$ret$1;
        // Inline function 'kotlin.collections.mapTo' call
        var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
        var inductionVariable_0 = tmp0_map_0.z_1;
        var last_0 = tmp0_map_0.a1_1;
        if (inductionVariable_0 <= last_0)
          do {
            var item_0 = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var tmp$ret$0;
            // Inline function 'com.github.shwaka.kohomology.linalg.Matrix.toNumVectorList.<anonymous>.<anonymous>' call
            tmp$ret$0 = this.i2i(item_0, item);
            tmp0_mapTo_0.a(tmp$ret$0);
          }
           while (!(item_0 === last_0));
        tmp$ret$1 = tmp0_mapTo_0;
        tmp$ret$2 = tmp$ret$1;
        tmp$ret$3 = tmp.c2i(tmp$ret$2);
        tmp0_mapTo.a(tmp$ret$3);
      }
       while (!(item === last));
    tmp$ret$4 = tmp0_mapTo;
    tmp$ret$5 = tmp$ret$4;
    return tmp$ret$5;
  }
  setMetadataFor(Matrix, 'Matrix', interfaceMeta);
  setMetadataFor(DenseMatrix, 'DenseMatrix', classMeta, VOID, [Matrix]);
  setMetadataFor(Companion_53, 'Companion', objectMeta);
  function getOneAtIndex(index, dim) {
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.j1h().g1g();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.linalg.NumVectorSpace.getOneAtIndex.<anonymous>' call
    tmp$ret$0 = mapOf_0(to(index, tmp0_run.b1j()));
    tmp$ret$1 = tmp$ret$0;
    var valueMap = tmp$ret$1;
    return this.p2j(valueMap, dim);
  }
  function fromReducedValueMap(valueMap, dim) {
    return this.p2j(valueMap, dim);
  }
  setMetadataFor(NumVectorSpace, 'NumVectorSpace', interfaceMeta);
  setMetadataFor(DenseNumVectorSpace, 'DenseNumVectorSpace', classMeta, VOID, [NumVectorSpace]);
  setMetadataFor(DenseNumVector, 'DenseNumVector', classMeta);
  setMetadataFor(RowEchelonFormData, 'RowEchelonFormData', classMeta);
  setMetadataFor(DenseRowEchelonForm, 'DenseRowEchelonForm', classMeta, RowEchelonForm);
  setMetadataFor(Companion_54, 'Companion', objectMeta);
  function toString_3(printType, withSign) {
    return this.f2q(PrintConfig_init_$Create$(printType), withSign);
  }
  function toString_4(printConfig) {
    return this.f2q(printConfig, true);
  }
  setMetadataFor(PrintableWithSign, 'PrintableWithSign', interfaceMeta);
  function isNotZero_1() {
    return !this.tj();
  }
  setMetadataFor(Scalar, 'Scalar', interfaceMeta, VOID, [PrintableWithSign]);
  function unaryMinusOf(scalar) {
    return this.m2k(scalar, this.bi(-1));
  }
  setMetadataFor(Field, 'Field', interfaceMeta);
  setMetadataFor(ScalarContextImpl, 'ScalarContextImpl', classMeta, VOID, [ScalarContext]);
  setMetadataFor(Companion_55, 'Companion', objectMeta);
  function times_11(_this__u8e3s4, numVector) {
    return this.y1g().d2i(_this__u8e3s4, numVector);
  }
  function get_rowEchelonForm(_this__u8e3s4) {
    return this.y1g().g2i(_this__u8e3s4);
  }
  function rowSlice(_this__u8e3s4, rowRange) {
    return this.y1g().p2i(_this__u8e3s4, rowRange);
  }
  function colSlice(_this__u8e3s4, colRange) {
    return this.y1g().r2i(_this__u8e3s4, colRange);
  }
  function join(_this__u8e3s4) {
    if (_this__u8e3s4.p())
      throw IllegalArgumentException_init_$Create$('Empty list of matrices cannot be reduced');
    var tmp$ret$1;
    // Inline function 'kotlin.collections.reduce' call
    var iterator = _this__u8e3s4.f();
    if (!iterator.g())
      throw UnsupportedOperationException_init_$Create$("Empty collection can't be reduced.");
    var accumulator = iterator.h();
    while (iterator.g()) {
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.MatrixContext.join.<anonymous>' call
      var tmp0_anonymous = accumulator;
      var tmp1_anonymous = iterator.h();
      tmp$ret$0 = this.y1g().n2i(tmp0_anonymous, tmp1_anonymous);
      accumulator = tmp$ret$0;
    }
    tmp$ret$1 = accumulator;
    return tmp$ret$1;
  }
  function transpose(_this__u8e3s4) {
    return this.y1g().j2i(_this__u8e3s4);
  }
  function computeKernelBasis(_this__u8e3s4) {
    var rowEchelonForm = this.t2k(_this__u8e3s4);
    var dim = _this__u8e3s4.y2i();
    var pivots = rowEchelonForm.i2h();
    var firstNonZeroIndex = pivots.p() ? _this__u8e3s4.y2i() : pivots.l(0);
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = until(0, firstNonZeroIndex);
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.z_1;
    var last = tmp0_map.a1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.linalg.MatrixContext.computeKernelBasis.<anonymous>' call
        tmp$ret$0 = _this__u8e3s4.b1h().q2j(item, dim);
        tmp0_mapTo.a(tmp$ret$0);
      }
       while (!(item === last));
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var trivialVectors = tmp$ret$2;
    var matrix = rowEchelonForm.h2h();
    var tmp$ret$8;
    // Inline function 'kotlin.collections.map' call
    var tmp1_map = get_indices_0(pivots);
    var tmp$ret$7;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
    var inductionVariable_0 = tmp1_map.z_1;
    var last_0 = tmp1_map.a1_1;
    if (inductionVariable_0 <= last_0)
      do {
        var item_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var tmp$ret$6;
        // Inline function 'com.github.shwaka.kohomology.linalg.MatrixContext.computeKernelBasis.<anonymous>' call
        var start = pivots.l(item_0) + 1 | 0;
        var limit = (item_0 + 1 | 0) < pivots.i() ? pivots.l(item_0 + 1 | 0) : dim;
        var tmp$ret$5;
        // Inline function 'kotlin.collections.map' call
        var tmp0_map_0 = until(start, limit);
        var tmp$ret$4;
        // Inline function 'kotlin.collections.mapTo' call
        var tmp0_mapTo_1 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
        var inductionVariable_1 = tmp0_map_0.z_1;
        var last_1 = tmp0_map_0.a1_1;
        if (inductionVariable_1 <= last_1)
          do {
            var item_1 = inductionVariable_1;
            inductionVariable_1 = inductionVariable_1 + 1 | 0;
            var tmp$ret$3;
            // Inline function 'com.github.shwaka.kohomology.linalg.MatrixContext.computeKernelBasis.<anonymous>.<anonymous>' call
            var numVector = _this__u8e3s4.b1h().q2j(item_1, dim);
            var inductionVariable_2 = item_0;
            if (0 <= inductionVariable_2)
              do {
                var q = inductionVariable_2;
                inductionVariable_2 = inductionVariable_2 + -1 | 0;
                numVector = this.j1j(numVector, this.v1j(_this__u8e3s4.b1h().q2j(pivots.l(q), dim), matrix.i2i(q, item_1)));
              }
               while (0 <= inductionVariable_2);
            tmp$ret$3 = numVector;
            tmp0_mapTo_1.a(tmp$ret$3);
          }
           while (!(item_1 === last_1));
        tmp$ret$4 = tmp0_mapTo_1;
        tmp$ret$5 = tmp$ret$4;
        tmp$ret$6 = tmp$ret$5;
        tmp0_mapTo_0.a(tmp$ret$6);
      }
       while (!(item_0 === last_0));
    tmp$ret$7 = tmp0_mapTo_0;
    tmp$ret$8 = tmp$ret$7;
    var vectorsForPivots = flatten(tmp$ret$8);
    return plus(trivialVectors, vectorsForPivots);
  }
  function findPreimage_0(_this__u8e3s4, numVector) {
    if (!(_this__u8e3s4.x2i() === numVector.p22()))
      throw new InvalidSizeException('Cannot consider preimage since numVector.dim != matrix.colCount');
    if (numVector.tj())
      return _this__u8e3s4.b1h().p1h(_this__u8e3s4.y2i());
    var pivots = this.t2k(_this__u8e3s4).i2h();
    var reducedTransformation = this.t2k(_this__u8e3s4).j2h();
    var transformedNumVector = this.v2k(reducedTransformation, numVector);
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.any' call
      var tmp0_any = until(pivots.i(), _this__u8e3s4.x2i());
      var tmp;
      if (isInterface(tmp0_any, Collection)) {
        tmp = tmp0_any.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var inductionVariable = tmp0_any.z_1;
      var last = tmp0_any.a1_1;
      if (inductionVariable <= last)
        do {
          var element = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp$ret$1;
          // Inline function 'com.github.shwaka.kohomology.linalg.MatrixContext.findPreimage.<anonymous>' call
          tmp$ret$1 = !equals(this.g1j(transformedNumVector, element), this.c1j());
          if (tmp$ret$1) {
            tmp$ret$0 = true;
            break $l$block_0;
          }
        }
         while (!(element === last));
      tmp$ret$0 = false;
    }
    if (tmp$ret$0)
      return null;
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapIndexed' call
    var tmp$ret$3;
    // Inline function 'kotlin.collections.mapIndexedTo' call
    var tmp0_mapIndexedTo = ArrayList_init_$Create$(collectionSizeOrDefault(pivots, 10));
    var index = 0;
    var tmp0_iterator = pivots.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$2;
      // Inline function 'com.github.shwaka.kohomology.linalg.MatrixContext.findPreimage.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      var tmp1_anonymous = checkIndexOverflow(tmp1);
      var value = this.g1j(transformedNumVector, tmp1_anonymous);
      tmp$ret$2 = new Pair(item, value);
      tmp0_mapIndexedTo.a(tmp$ret$2);
    }
    tmp$ret$3 = tmp0_mapIndexedTo;
    tmp$ret$4 = tmp$ret$3;
    var valueMap = toMap(tmp$ret$4);
    return _this__u8e3s4.b1h().p2j(valueMap, _this__u8e3s4.y2i());
  }
  setMetadataFor(MatrixContext, 'MatrixContext', interfaceMeta, VOID, [NumVectorContext]);
  setMetadataFor(MatrixContextImpl, 'MatrixContextImpl', classMeta, VOID, [MatrixContext, NumVectorContext]);
  setMetadataFor(Companion_56, 'Companion', objectMeta);
  setMetadataFor(NumVectorContextImpl, 'NumVectorContextImpl', classMeta, VOID, [NumVectorContext, ScalarContext]);
  setMetadataFor(Companion_57, 'Companion', objectMeta);
  setMetadataFor(AbstractSparseMatrixSpace, 'AbstractSparseMatrixSpace', classMeta, VOID, [MatrixSpace]);
  setMetadataFor(SparseMatrixSpace, 'SparseMatrixSpace', classMeta, AbstractSparseMatrixSpace);
  setMetadataFor(Companion_58, 'Companion', objectMeta);
  setMetadataFor(DecomposedSparseMatrixSpace, 'DecomposedSparseMatrixSpace', classMeta, AbstractSparseMatrixSpace);
  setMetadataFor(SparseMatrix, 'SparseMatrix', classMeta, VOID, [Matrix]);
  setMetadataFor(Companion_59, 'Companion', objectMeta);
  setMetadataFor(SparseNumVectorSpace, 'SparseNumVectorSpace', classMeta, VOID, [NumVectorSpace]);
  setMetadataFor(Companion_60, 'Companion', objectMeta);
  setMetadataFor(SparseNumVector, 'SparseNumVector', classMeta);
  setMetadataFor(SparseRowEchelonForm, 'SparseRowEchelonForm', classMeta, RowEchelonForm);
  setMetadataFor(InPlaceSparseRowEchelonFormCalculator, 'InPlaceSparseRowEchelonFormCalculator', classMeta);
  setMetadataFor(SparseRowEchelonFormData, 'SparseRowEchelonFormData', classMeta);
  setMetadataFor(Companion_61, 'Companion', objectMeta);
  setMetadataFor(CopiedName, 'CopiedName', classMeta, VOID, [IndeterminateName]);
  setMetadataFor(Companion_62, 'Companion', objectMeta);
  setMetadataFor(CopiedNamePrintConfig, 'CopiedNamePrintConfig', classMeta);
  setMetadataFor(ShowShift, 'ShowShift', classMeta, Enum);
  setMetadataFor(Companion_63, 'Companion', objectMeta);
  setMetadataFor(CyclicModel, 'CyclicModel', classMeta, VOID, [FreeDGAlgebra, DGAlgebra]);
  setMetadataFor(CyclicModelFactory, 'CyclicModelFactory', classMeta);
  setMetadataFor(Companion_64, 'Companion', objectMeta);
  setMetadataFor(FreeLoopSpace, 'FreeLoopSpace', classMeta, VOID, [FreeDGAlgebra, DGAlgebra]);
  setMetadataFor(FreeLoopSpaceFactory, 'FreeLoopSpaceFactory', classMeta);
  setMetadataFor(Companion_65, 'Companion', objectMeta);
  setMetadataFor(EndElementPrintConfig, 'EndElementPrintConfig', classMeta);
  setMetadataFor(Indexed, 'Indexed', classMeta);
  setMetadataFor(Companion_66, 'Companion', objectMeta);
  setMetadataFor(KotlinRational, 'KotlinRational', classMeta, VOID, [Scalar]);
  setMetadataFor(KotlinRationalField, 'KotlinRationalField', objectMeta, VOID, [Field]);
  setMetadataFor(Companion_67, 'Companion', objectMeta);
  setMetadataFor(Identifier_0, 'Identifier', classMeta);
  setMetadataFor(Companion_68, 'Companion', objectMeta);
  setMetadataFor(PartialIdentifier, 'PartialIdentifier', classMeta);
  setMetadataFor(Companion_69, 'Companion', objectMeta);
  setMetadataFor(PrintConfig, 'PrintConfig', classMeta);
  setMetadataFor(EntriesBuilder, 'EntriesBuilder', classMeta);
  setMetadataFor(PrintConfigDefaultRegistry, 'PrintConfigDefaultRegistry', objectMeta);
  setMetadataFor(PrintType, 'PrintType', classMeta, Enum);
  setMetadataFor(Printer, 'Printer', classMeta);
  setMetadataFor(Companion_70, 'Companion', objectMeta);
  setMetadataFor(InternalPrintConfig, 'InternalPrintConfig', classMeta);
  setMetadataFor(Companion_71, 'Companion', objectMeta);
  setMetadataFor(Sign, 'Sign', classMeta, Enum);
  setMetadataFor(StringTable, 'StringTable', classMeta);
  setMetadataFor(Paren, 'Paren', classMeta);
  setMetadataFor(UnionFind, 'UnionFind', classMeta);
  setMetadataFor(_no_name_provided__qut3iv, VOID, classMeta);
  function image_0(source1Sub, source2Sub) {
    var tmp$ret$5;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = source1Sub.n1r();
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.vectsp.BilinearMap.image.<anonymous>' call
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map_0 = source2Sub.n1r();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
      var tmp0_iterator_0 = tmp0_map_0.f();
      while (tmp0_iterator_0.g()) {
        var item_0 = tmp0_iterator_0.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.vectsp.BilinearMap.image.<anonymous>.<anonymous>' call
        tmp$ret$0 = this.u1r(item, item_0);
        tmp0_mapTo_0.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo_0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_mapTo.a(tmp$ret$3);
    }
    tmp$ret$4 = tmp0_mapTo;
    tmp$ret$5 = tmp$ret$4;
    var imageGenerator = flatten(tmp$ret$5);
    return Companion_getInstance_82().o1r(this.y1g(), this.t1k(), imageGenerator);
  }
  setMetadataFor(BilinearMap, 'BilinearMap', interfaceMeta);
  setMetadataFor(Companion_72, 'Companion', objectMeta);
  setMetadataFor(ValueBilinearMap, 'ValueBilinearMap', classMeta, VOID, [BilinearMap]);
  setMetadataFor(DirectSumBasis, 'DirectSumBasis', classMeta, VOID, [BasisName]);
  function get_dim() {
    return this.j1s().i();
  }
  function get_field_0() {
    return this.b1h().j1h();
  }
  function contains_1(vector) {
    return equals(vector.r1r_1, this);
  }
  function add_0(a, b) {
    if (!this.m2r(a))
      throw new IllegalContextException('The vector ' + a + ' is not contained in the vector space ' + this);
    if (!this.m2r(b))
      throw new IllegalContextException('The vector ' + b + ' is not contained in the vector space ' + this);
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.b1h().g1g();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.vectsp.VectorSpace.add.<anonymous>' call
    tmp$ret$0 = new Vector(tmp0_run.n1j(a.q1r_1, b.q1r_1), this);
    tmp$ret$1 = tmp$ret$0;
    return tmp$ret$1;
  }
  function subtract_0(a, b) {
    if (!this.m2r(a))
      throw new IllegalContextException('The vector ' + a + ' is not contained in the vector space ' + this);
    if (!this.m2r(b))
      throw new IllegalContextException('The vector ' + b + ' is not contained in the vector space ' + this);
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.b1h().g1g();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.vectsp.VectorSpace.subtract.<anonymous>' call
    tmp$ret$0 = new Vector(tmp0_run.j1j(a.q1r_1, b.q1r_1), this);
    tmp$ret$1 = tmp$ret$0;
    return tmp$ret$1;
  }
  function multiply_2(scalar, vector) {
    if (!this.j1h().h2j(scalar))
      throw new IllegalContextException('The scalar ' + scalar + ' does not match the context (' + this.j1h() + ')');
    if (!this.m2r(vector))
      throw new IllegalContextException('The vector ' + vector + ' is not contained in the vector space ' + this);
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.b1h().g1g();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.vectsp.VectorSpace.multiply.<anonymous>' call
    tmp$ret$0 = new Vector(tmp0_run.v1j(vector.q1r_1, scalar), vector.r1r_1);
    tmp$ret$1 = tmp$ret$0;
    return tmp$ret$1;
  }
  function divideByVector(a, b) {
    if (!this.m2r(a))
      throw new IllegalContextException('The vector ' + a + ' is not contained in the vector space ' + this);
    if (!this.m2r(b))
      throw new IllegalContextException('The vector ' + b + ' is not contained in the vector space ' + this);
    if (b.tj())
      throw ArithmeticException_init_$Create$('Division by zero vector');
    return this.b1h().k2j(a.q1r_1, b.q1r_1);
  }
  function fromNumVector(numVector) {
    return new Vector(numVector, this);
  }
  function fromCoeffList(coeffList) {
    var numVector = this.b1h().c2i(coeffList);
    return this.c2s(numVector);
  }
  function fromBasisName_0(basisName) {
    var index = this.x2r(basisName);
    var coeffMap = mapOf_0(to(index, this.j1h().b1j()));
    var numVector = this.b1h().r2j(coeffMap, this.p22());
    return this.c2s(numVector);
  }
  function get_zeroVector() {
    return new Vector(this.b1h().p1h(this.p22()), this);
  }
  function getBasis_1() {
    var zero = this.j1h().c1j();
    var one = this.j1h().b1j();
    var tmp$ret$5;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = until(0, this.p22());
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.z_1;
    var last = tmp0_map.a1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$3;
        // Inline function 'com.github.shwaka.kohomology.vectsp.VectorSpace.getBasis.<anonymous>' call
        var tmp$ret$2;
        // Inline function 'kotlin.collections.map' call
        var tmp0_map_0 = until(0, this.p22());
        var tmp$ret$1;
        // Inline function 'kotlin.collections.mapTo' call
        var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
        var inductionVariable_0 = tmp0_map_0.z_1;
        var last_0 = tmp0_map_0.a1_1;
        if (inductionVariable_0 <= last_0)
          do {
            var item_0 = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var tmp$ret$0;
            // Inline function 'com.github.shwaka.kohomology.vectsp.VectorSpace.getBasis.<anonymous>.<anonymous>' call
            tmp$ret$0 = item === item_0 ? one : zero;
            tmp0_mapTo_0.a(tmp$ret$0);
          }
           while (!(item_0 === last_0));
        tmp$ret$1 = tmp0_mapTo_0;
        tmp$ret$2 = tmp$ret$1;
        var coeff = tmp$ret$2;
        tmp$ret$3 = this.d2s(coeff);
        tmp0_mapTo.a(tmp$ret$3);
      }
       while (!(item === last));
    tmp$ret$4 = tmp0_mapTo;
    tmp$ret$5 = tmp$ret$4;
    return tmp$ret$5;
  }
  setMetadataFor(VectorSpace, 'VectorSpace', interfaceMeta);
  setMetadataFor(DirectSum, 'DirectSum', classMeta, VOID, [VectorSpace]);
  setMetadataFor(DirectSumFactory, 'DirectSumFactory', classMeta);
  setMetadataFor(Companion_73, 'Companion', objectMeta);
  setMetadataFor(LinearMap, 'LinearMap', classMeta);
  setMetadataFor(Companion_74, 'Companion', objectMeta);
  setMetadataFor(QuotBasis, 'QuotBasis', classMeta, VOID, [BasisName]);
  setMetadataFor(Companion_75, 'Companion', objectMeta);
  setMetadataFor(Companion_76, 'Companion', objectMeta);
  setMetadataFor(QuotFactory, 'QuotFactory', classMeta);
  setMetadataFor(QuotVectorSpaceImpl, 'QuotVectorSpaceImpl', classMeta, VOID, [VectorSpace]);
  setMetadataFor(Companion_77, 'Companion', objectMeta);
  setMetadataFor(SubQuotBasis, 'SubQuotBasis', classMeta, VOID, [BasisName]);
  setMetadataFor(Companion_78, 'Companion', objectMeta);
  setMetadataFor(SubQuotVectorSpace, 'SubQuotVectorSpace', classMeta, VOID, [VectorSpace]);
  setMetadataFor(Companion_79, 'Companion', objectMeta);
  setMetadataFor(SubQuotFactory, 'SubQuotFactory', classMeta);
  setMetadataFor(Companion_80, 'Companion', objectMeta);
  setMetadataFor(SubBasis, 'SubBasis', classMeta, VOID, [BasisName]);
  setMetadataFor(Companion_81, 'Companion', objectMeta);
  setMetadataFor(Companion_82, 'Companion', objectMeta);
  setMetadataFor(SubFactory, 'SubFactory', classMeta);
  setMetadataFor(SubVectorSpaceImpl, 'SubVectorSpaceImpl', classMeta, VOID, [VectorSpace]);
  setMetadataFor(WholeSubVectorSpace, 'WholeSubVectorSpace', classMeta, VOID, [VectorSpace]);
  setMetadataFor(Companion_83, 'Companion', objectMeta);
  setMetadataFor(sam$kotlin_Comparator$0_0, 'sam$kotlin_Comparator$0', classMeta, VOID, [Comparator]);
  setMetadataFor(Vector, 'Vector', classMeta);
  setMetadataFor(Companion_84, 'Companion', objectMeta);
  setMetadataFor(Companion_85, 'Companion', objectMeta);
  function plus_5(_this__u8e3s4, other) {
    return this.z2u().z2r(_this__u8e3s4, other);
  }
  function minus_3(_this__u8e3s4, other) {
    return this.z2u().a2s(_this__u8e3s4, other);
  }
  function times_12(_this__u8e3s4, scalar) {
    return this.z2u().b2s(scalar, _this__u8e3s4);
  }
  function times_13(_this__u8e3s4, vector) {
    return this.z2u().b2s(_this__u8e3s4, vector);
  }
  function unaryMinus_3(_this__u8e3s4) {
    return new Vector(this.f1k(_this__u8e3s4.q1r_1), _this__u8e3s4.r1r_1);
  }
  function sum_2(_this__u8e3s4) {
    var tmp$ret$1;
    // Inline function 'kotlin.collections.fold' call
    var tmp0_fold = this.z2u().n1t();
    var accumulator = tmp0_fold;
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.VectorContext.sum.<anonymous>' call
      var tmp1_anonymous = accumulator;
      tmp$ret$0 = this.o1t(tmp1_anonymous, element);
      accumulator = tmp$ret$0;
    }
    tmp$ret$1 = accumulator;
    return tmp$ret$1;
  }
  setMetadataFor(VectorContext, 'VectorContext', interfaceMeta, VOID, [NumVectorContext]);
  setMetadataFor(VectorSpaceImpl, 'VectorSpaceImpl', classMeta, VOID, [VectorSpace]);
  setMetadataFor(VectorContextImpl, 'VectorContextImpl', classMeta, VOID, [VectorContext, NumVectorContext]);
  //endregion
  function listIntPairsOfSum($this, sum, boundedness1, boundedness2) {
    var tmp;
    if (!(boundedness1.c1g_1 == null) ? !(boundedness2.c1g_1 == null) : false) {
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = numberRangeToNumber(boundedness1.c1g_1, sum - boundedness2.c1g_1 | 0);
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var inductionVariable = tmp0_map.z_1;
      var last = tmp0_map.a1_1;
      if (inductionVariable <= last)
        do {
          var item = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp$ret$0;
          // Inline function 'com.github.shwaka.kohomology.dg.Companion.listIntPairsOfSum.<anonymous>' call
          tmp$ret$0 = new Pair(item, sum - item | 0);
          tmp0_mapTo.a(tmp$ret$0);
        }
         while (!(item === last));
      tmp = tmp0_mapTo;
    } else if (!(boundedness1.b1g_1 == null) ? !(boundedness2.b1g_1 == null) : false) {
      // Inline function 'kotlin.collections.map' call
      var tmp1_map = numberRangeToNumber(sum - boundedness2.b1g_1 | 0, boundedness1.b1g_1);
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
      var inductionVariable_0 = tmp1_map.z_1;
      var last_0 = tmp1_map.a1_1;
      if (inductionVariable_0 <= last_0)
        do {
          var item_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          var tmp$ret$3;
          // Inline function 'com.github.shwaka.kohomology.dg.Companion.listIntPairsOfSum.<anonymous>' call
          tmp$ret$3 = new Pair(item_0, sum - item_0 | 0);
          tmp0_mapTo_0.a(tmp$ret$3);
        }
         while (!(item_0 === last_0));
      tmp = tmp0_mapTo_0;
    } else {
      throw Exception_init_$Create$('Incompatible Boundedness: ' + boundedness1 + ', ' + boundedness2);
    }
    return tmp;
  }
  function Companion() {
    Companion_instance = this;
  }
  protoOf(Companion).d1g = function (degreeGroup, degreeSum, boundedness1, boundedness2) {
    var intPairList = listIntPairsOfSum(this, degreeGroup.e1g(degreeSum), boundedness1, boundedness2);
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(intPairList, 10));
    var tmp0_iterator = intPairList.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      // Inline function 'com.github.shwaka.kohomology.dg.Companion.listDegreePairsOfSum.<anonymous>' call
      var int1 = item.j3();
      var int2 = item.k3();
      // Inline function 'kotlin.collections.filter' call
      var tmp0_filter = directProductOf(degreeGroup.f1g(int1), degreeGroup.f1g(int2));
      // Inline function 'kotlin.collections.filterTo' call
      var tmp0_filterTo = ArrayList_init_$Create$_0();
      var tmp0_iterator_0 = tmp0_filter.f();
      while (tmp0_iterator_0.g()) {
        var element = tmp0_iterator_0.h();
        // Inline function 'com.github.shwaka.kohomology.dg.Companion.listDegreePairsOfSum.<anonymous>.<anonymous>' call
        var degree1 = element.j3();
        var degree2 = element.k3();
        // Inline function 'kotlin.run' call
        var tmp0_run = degreeGroup.g1g();
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'com.github.shwaka.kohomology.dg.Companion.listDegreePairsOfSum.<anonymous>.<anonymous>.<anonymous>' call
        if (equals(tmp0_run.i1g(degree1, degree2), degreeSum)) {
          tmp0_filterTo.a(element);
        }
      }
      tmp0_mapTo.a(tmp0_filterTo);
    }
    return flatten(tmp0_mapTo);
  };
  protoOf(Companion).j1g = function (degreeGroup, degreeList) {
    if (degreeList.p()) {
      return new Boundedness(0, 0);
    }
    // Inline function 'kotlin.collections.maxOf' call
    var iterator = degreeList.f();
    if (!iterator.g())
      throw NoSuchElementException_init_$Create$();
    // Inline function 'com.github.shwaka.kohomology.dg.Companion.fromDegreeList.<anonymous>' call
    var tmp0_anonymous = iterator.h();
    var maxValue = degreeGroup.e1g(tmp0_anonymous);
    while (iterator.g()) {
      // Inline function 'com.github.shwaka.kohomology.dg.Companion.fromDegreeList.<anonymous>' call
      var tmp1_anonymous = iterator.h();
      var v = degreeGroup.e1g(tmp1_anonymous);
      if (compareTo(maxValue, v) < 0) {
        maxValue = v;
      }
    }
    var upperBound = maxValue;
    // Inline function 'kotlin.collections.minOf' call
    var iterator_0 = degreeList.f();
    if (!iterator_0.g())
      throw NoSuchElementException_init_$Create$();
    // Inline function 'com.github.shwaka.kohomology.dg.Companion.fromDegreeList.<anonymous>' call
    var tmp2_anonymous = iterator_0.h();
    var minValue = degreeGroup.e1g(tmp2_anonymous);
    while (iterator_0.g()) {
      // Inline function 'com.github.shwaka.kohomology.dg.Companion.fromDegreeList.<anonymous>' call
      var tmp3_anonymous = iterator_0.h();
      var v_0 = degreeGroup.e1g(tmp3_anonymous);
      if (compareTo(minValue, v_0) > 0) {
        minValue = v_0;
      }
    }
    var lowerBound = minValue;
    return new Boundedness(upperBound, lowerBound);
  };
  var Companion_instance;
  function Companion_getInstance_0() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function Boundedness(upperBound, lowerBound) {
    Companion_getInstance_0();
    upperBound = upperBound === VOID ? null : upperBound;
    lowerBound = lowerBound === VOID ? null : lowerBound;
    this.b1g_1 = upperBound;
    this.c1g_1 = lowerBound;
  }
  protoOf(Boundedness).toString = function () {
    return 'Boundedness(upperBound=' + this.b1g_1 + ', lowerBound=' + this.c1g_1 + ')';
  };
  protoOf(Boundedness).hashCode = function () {
    var result = this.b1g_1 == null ? 0 : this.b1g_1;
    result = imul(result, 31) + (this.c1g_1 == null ? 0 : this.c1g_1) | 0;
    return result;
  };
  protoOf(Boundedness).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Boundedness))
      return false;
    var tmp0_other_with_cast = other instanceof Boundedness ? other : THROW_CCE();
    if (!(this.b1g_1 == tmp0_other_with_cast.b1g_1))
      return false;
    if (!(this.c1g_1 == tmp0_other_with_cast.c1g_1))
      return false;
    return true;
  };
  function Companion_0() {
    Companion_instance_0 = this;
  }
  protoOf(Companion_0).k1g = function (gAlgebra, differential) {
    var dgMagma = Companion_getInstance_9().l1g(gAlgebra, differential);
    return new DGAlgebraImpl(gAlgebra, differential, dgMagma.m1g(), dgMagma.m1g().n1g());
  };
  var Companion_instance_0;
  function Companion_getInstance_1() {
    if (Companion_instance_0 == null)
      new Companion_0();
    return Companion_instance_0;
  }
  function DGAlgebra() {
  }
  function Companion_1() {
    Companion_instance_1 = this;
  }
  protoOf(Companion_1).f1i = function (dgAlgebra) {
    return new DGAlgebraContextImpl(dgAlgebra);
  };
  var Companion_instance_1;
  function Companion_getInstance_2() {
    if (Companion_instance_1 == null)
      new Companion_1();
    return Companion_instance_1;
  }
  function DGAlgebraImpl$cohomology$delegate$lambda(this$0) {
    return function () {
      var cohomologyUnit = Companion_getInstance_11().q1i(this$0.i1i_1, this$0.g1i_1.a1i());
      return Companion_getInstance_32().r1i(this$0.n1i_1, this$0.i1i_1, this$0.j1i_1, cohomologyUnit, this$0.m1i_1);
    };
  }
  function DGAlgebraImpl(underlyingGAlgebra, differential, cohomologyGVectorSpace, cohomologyMultiplication) {
    this.g1i_1 = underlyingGAlgebra;
    this.h1i_1 = differential;
    this.i1i_1 = cohomologyGVectorSpace;
    this.j1i_1 = cohomologyMultiplication;
    this.k1i_1 = Companion_getInstance_2().f1i(this);
    this.l1i_1 = this.g1i_1.a1i();
    this.m1i_1 = this.g1i_1.b1i();
    this.n1i_1 = this.g1i_1.y1g();
    this.o1i_1 = this.g1i_1.n1g();
    var tmp = this;
    tmp.p1i_1 = lazy(DGAlgebraImpl$cohomology$delegate$lambda(this));
  }
  protoOf(DGAlgebraImpl).o1g = function () {
    return this.h1i_1;
  };
  protoOf(DGAlgebraImpl).i1h = function () {
    return this.g1i_1.i1h();
  };
  protoOf(DGAlgebraImpl).c1h = function () {
    return this.g1i_1.c1h();
  };
  protoOf(DGAlgebraImpl).j1h = function () {
    return this.g1i_1.j1h();
  };
  protoOf(DGAlgebraImpl).e1h = function () {
    return this.g1i_1.e1h();
  };
  protoOf(DGAlgebraImpl).f1h = function () {
    return this.g1i_1.f1h();
  };
  protoOf(DGAlgebraImpl).d1h = function () {
    return this.g1i_1.d1h();
  };
  protoOf(DGAlgebraImpl).b1h = function () {
    return this.g1i_1.b1h();
  };
  protoOf(DGAlgebraImpl).h1h = function () {
    return this.g1i_1.h1h();
  };
  protoOf(DGAlgebraImpl).z1h = function () {
    return this.g1i_1.z1h();
  };
  protoOf(DGAlgebraImpl).t1h = function (a, b) {
    return this.g1i_1.t1h(a, b);
  };
  protoOf(DGAlgebraImpl).r1h = function (gVector) {
    return this.g1i_1.r1h(gVector);
  };
  protoOf(DGAlgebraImpl).s1h = function (gVector) {
    return this.g1i_1.s1h(gVector);
  };
  protoOf(DGAlgebraImpl).q1h = function (gVectorOrZero, degree) {
    return this.g1i_1.q1h(gVectorOrZero, degree);
  };
  protoOf(DGAlgebraImpl).y1h = function (a, b) {
    return this.g1i_1.y1h(a, b);
  };
  protoOf(DGAlgebraImpl).m1h = function (basisName, degree) {
    return this.g1i_1.m1h(basisName, degree);
  };
  protoOf(DGAlgebraImpl).k1h = function (vector, degree) {
    return this.g1i_1.k1h(vector, degree);
  };
  protoOf(DGAlgebraImpl).l1h = function (vector, degree) {
    return this.g1i_1.l1h(vector, degree);
  };
  protoOf(DGAlgebraImpl).g1h = function (degree) {
    return this.g1i_1.g1h(degree);
  };
  protoOf(DGAlgebraImpl).l = function (degree) {
    return this.g1i_1.l(degree);
  };
  protoOf(DGAlgebraImpl).n1h = function (degree) {
    return this.g1i_1.n1h(degree);
  };
  protoOf(DGAlgebraImpl).o1h = function (degree) {
    return this.g1i_1.o1h(degree);
  };
  protoOf(DGAlgebraImpl).p1h = function (degree) {
    return this.g1i_1.p1h(degree);
  };
  protoOf(DGAlgebraImpl).v1h = function (scalar, gVector) {
    return this.g1i_1.v1h(scalar, gVector);
  };
  protoOf(DGAlgebraImpl).u1h = function (a, b) {
    return this.g1i_1.u1h(a, b);
  };
  protoOf(DGAlgebraImpl).toString = function () {
    return this.g1i_1.toString();
  };
  protoOf(DGAlgebraImpl).s1i = function (printConfig) {
    return this.g1i_1.s1i(printConfig);
  };
  protoOf(DGAlgebraImpl).g1g = function () {
    return this.k1i_1;
  };
  protoOf(DGAlgebraImpl).a1i = function () {
    return this.l1i_1;
  };
  protoOf(DGAlgebraImpl).b1i = function () {
    return this.m1i_1;
  };
  protoOf(DGAlgebraImpl).y1g = function () {
    return this.n1i_1;
  };
  protoOf(DGAlgebraImpl).n1g = function () {
    return this.o1i_1;
  };
  protoOf(DGAlgebraImpl).m1g = function () {
    // Inline function 'kotlin.getValue' call
    cohomology$factory();
    return this.p1i_1.w();
  };
  function DGAlgebraContextImpl(dgAlgebra) {
    this.t1i_1 = dgAlgebra;
    this.u1i_1 = Companion_getInstance_10().w1i(dgAlgebra);
    this.v1i_1 = this.t1i_1;
  }
  protoOf(DGAlgebraContextImpl).r1g = function () {
    return this.u1i_1.r1g();
  };
  protoOf(DGAlgebraContextImpl).x1i = function () {
    return this.u1i_1.x1i();
  };
  protoOf(DGAlgebraContextImpl).y1i = function () {
    return this.u1i_1.y1i();
  };
  protoOf(DGAlgebraContextImpl).j1h = function () {
    return this.u1i_1.j1h();
  };
  protoOf(DGAlgebraContextImpl).z1i = function () {
    return this.u1i_1.z1i();
  };
  protoOf(DGAlgebraContextImpl).a1j = function () {
    return this.u1i_1.a1j();
  };
  protoOf(DGAlgebraContextImpl).b1h = function () {
    return this.u1i_1.b1h();
  };
  protoOf(DGAlgebraContextImpl).b1j = function () {
    return this.u1i_1.b1j();
  };
  protoOf(DGAlgebraContextImpl).c1j = function () {
    return this.u1i_1.c1j();
  };
  protoOf(DGAlgebraContextImpl).z1h = function () {
    return this.u1i_1.z1h();
  };
  protoOf(DGAlgebraContextImpl).d1j = function (_this__u8e3s4) {
    return this.u1i_1.d1j(_this__u8e3s4);
  };
  protoOf(DGAlgebraContextImpl).e1j = function (_this__u8e3s4, other) {
    return this.u1i_1.e1j(_this__u8e3s4, other);
  };
  protoOf(DGAlgebraContextImpl).f1j = function (_this__u8e3s4, other) {
    return this.u1i_1.f1j(_this__u8e3s4, other);
  };
  protoOf(DGAlgebraContextImpl).g1j = function (_this__u8e3s4, ind) {
    return this.u1i_1.g1j(_this__u8e3s4, ind);
  };
  protoOf(DGAlgebraContextImpl).h1j = function (_this__u8e3s4) {
    return this.u1i_1.h1j(_this__u8e3s4);
  };
  protoOf(DGAlgebraContextImpl).i1j = function (_this__u8e3s4, other) {
    return this.u1i_1.i1j(_this__u8e3s4, other);
  };
  protoOf(DGAlgebraContextImpl).j1j = function (_this__u8e3s4, other) {
    return this.u1i_1.j1j(_this__u8e3s4, other);
  };
  protoOf(DGAlgebraContextImpl).k1j = function (_this__u8e3s4, other) {
    return this.u1i_1.k1j(_this__u8e3s4, other);
  };
  protoOf(DGAlgebraContextImpl).l1j = function (_this__u8e3s4, other) {
    return this.u1i_1.l1j(_this__u8e3s4, other);
  };
  protoOf(DGAlgebraContextImpl).m1j = function (_this__u8e3s4, other) {
    return this.u1i_1.m1j(_this__u8e3s4, other);
  };
  protoOf(DGAlgebraContextImpl).n1j = function (_this__u8e3s4, other) {
    return this.u1i_1.n1j(_this__u8e3s4, other);
  };
  protoOf(DGAlgebraContextImpl).o1j = function (_this__u8e3s4, other) {
    return this.u1i_1.o1j(_this__u8e3s4, other);
  };
  protoOf(DGAlgebraContextImpl).p1j = function (_this__u8e3s4, other) {
    return this.u1i_1.p1j(_this__u8e3s4, other);
  };
  protoOf(DGAlgebraContextImpl).q1j = function (_this__u8e3s4) {
    return this.u1i_1.q1j(_this__u8e3s4);
  };
  protoOf(DGAlgebraContextImpl).r1j = function (_this__u8e3s4, degree) {
    return this.u1i_1.r1j(_this__u8e3s4, degree);
  };
  protoOf(DGAlgebraContextImpl).s1j = function (_this__u8e3s4, other) {
    return this.u1i_1.s1j(_this__u8e3s4, other);
  };
  protoOf(DGAlgebraContextImpl).t1j = function (_this__u8e3s4, numVector) {
    return this.u1i_1.t1j(_this__u8e3s4, numVector);
  };
  protoOf(DGAlgebraContextImpl).u1j = function (_this__u8e3s4, gVector) {
    return this.u1i_1.u1j(_this__u8e3s4, gVector);
  };
  protoOf(DGAlgebraContextImpl).v1j = function (_this__u8e3s4, scalar) {
    return this.u1i_1.v1j(_this__u8e3s4, scalar);
  };
  protoOf(DGAlgebraContextImpl).w1j = function (_this__u8e3s4, scalar) {
    return this.u1i_1.w1j(_this__u8e3s4, scalar);
  };
  protoOf(DGAlgebraContextImpl).x1j = function (_this__u8e3s4, other) {
    return this.u1i_1.x1j(_this__u8e3s4, other);
  };
  protoOf(DGAlgebraContextImpl).y1j = function (_this__u8e3s4, sign) {
    return this.u1i_1.y1j(_this__u8e3s4, sign);
  };
  protoOf(DGAlgebraContextImpl).z1j = function (_this__u8e3s4, scalar) {
    return this.u1i_1.z1j(_this__u8e3s4, scalar);
  };
  protoOf(DGAlgebraContextImpl).a1k = function (_this__u8e3s4, other) {
    return this.u1i_1.a1k(_this__u8e3s4, other);
  };
  protoOf(DGAlgebraContextImpl).b1k = function (_this__u8e3s4, gVector) {
    return this.u1i_1.b1k(_this__u8e3s4, gVector);
  };
  protoOf(DGAlgebraContextImpl).c1k = function (_this__u8e3s4, gVector) {
    return this.u1i_1.c1k(_this__u8e3s4, gVector);
  };
  protoOf(DGAlgebraContextImpl).d1k = function (_this__u8e3s4) {
    return this.u1i_1.d1k(_this__u8e3s4);
  };
  protoOf(DGAlgebraContextImpl).e1k = function (_this__u8e3s4) {
    return this.u1i_1.e1k(_this__u8e3s4);
  };
  protoOf(DGAlgebraContextImpl).f1k = function (_this__u8e3s4) {
    return this.u1i_1.f1k(_this__u8e3s4);
  };
  protoOf(DGAlgebraContextImpl).g1k = function (_this__u8e3s4) {
    return this.u1i_1.g1k(_this__u8e3s4);
  };
  protoOf(DGAlgebraContextImpl).h1k = function (_this__u8e3s4) {
    return this.u1i_1.h1k(_this__u8e3s4);
  };
  protoOf(DGAlgebraContextImpl).i1k = function () {
    return this.v1i_1;
  };
  function cohomology$factory() {
    return getPropertyCallableRef('cohomology', 1, KProperty1, function (receiver) {
      return receiver.m1g();
    }, null);
  }
  function Companion_2() {
    Companion_instance_2 = this;
  }
  protoOf(Companion_2).n1k = function (source, target, gLinearMap) {
    return new DGAlgebraMapImpl(source, target, gLinearMap);
  };
  var Companion_instance_2;
  function Companion_getInstance_3() {
    if (Companion_instance_2 == null)
      new Companion_2();
    return Companion_instance_2;
  }
  function DGAlgebraMapImpl(source, target, gLinearMap) {
    this.o1k_1 = source;
    this.p1k_1 = target;
    this.q1k_1 = Companion_getInstance_8().r1k(source, target, gLinearMap);
  }
  protoOf(DGAlgebraMapImpl).s1k = function () {
    return this.o1k_1;
  };
  protoOf(DGAlgebraMapImpl).t1k = function () {
    return this.p1k_1;
  };
  protoOf(DGAlgebraMapImpl).u1k = function () {
    return this.q1k_1.u1k();
  };
  protoOf(DGAlgebraMapImpl).c1h = function () {
    return this.q1k_1.c1h();
  };
  protoOf(DGAlgebraMapImpl).v1k = function () {
    return this.q1k_1.v1k();
  };
  protoOf(DGAlgebraMapImpl).y1g = function () {
    return this.q1k_1.y1g();
  };
  protoOf(DGAlgebraMapImpl).d1h = function () {
    return this.q1k_1.d1h();
  };
  protoOf(DGAlgebraMapImpl).w1k = function () {
    return this.q1k_1.w1k();
  };
  protoOf(DGAlgebraMapImpl).x1k = function (gVector) {
    return this.q1k_1.x1k(gVector);
  };
  protoOf(DGAlgebraMapImpl).g1h = function (degree) {
    return this.q1k_1.g1h(degree);
  };
  protoOf(DGAlgebraMapImpl).y1k = function () {
    return this.q1k_1.y1k();
  };
  protoOf(DGAlgebraMapImpl).z1k = function (sourceQuot, targetQuot) {
    return this.q1k_1.z1k(sourceQuot, targetQuot);
  };
  protoOf(DGAlgebraMapImpl).a1l = function (sourceSub, targetSub) {
    return this.q1k_1.a1l(sourceSub, targetSub);
  };
  protoOf(DGAlgebraMapImpl).b1l = function (sourceSubQuot, targetSubQuot) {
    return this.q1k_1.b1l(sourceSubQuot, targetSubQuot);
  };
  protoOf(DGAlgebraMapImpl).s1g = function (gVector) {
    return this.q1k_1.s1g(gVector);
  };
  protoOf(DGAlgebraMapImpl).c1l = function () {
    return this.q1k_1.c1l();
  };
  function Companion_3() {
    Companion_instance_3 = this;
  }
  protoOf(Companion_3).d1l = function (source, gLinearMap) {
    return new DGDerivationImpl(source, gLinearMap);
  };
  var Companion_instance_3;
  function Companion_getInstance_4() {
    if (Companion_instance_3 == null)
      new Companion_3();
    return Companion_instance_3;
  }
  function DGDerivationImpl(source, gLinearMap) {
    this.e1l_1 = source;
    this.f1l_1 = Companion_getInstance_8().r1k(source, source, gLinearMap);
    this.g1l_1 = this.e1l_1;
  }
  protoOf(DGDerivationImpl).s1k = function () {
    return this.e1l_1;
  };
  protoOf(DGDerivationImpl).u1k = function () {
    return this.f1l_1.u1k();
  };
  protoOf(DGDerivationImpl).c1h = function () {
    return this.f1l_1.c1h();
  };
  protoOf(DGDerivationImpl).v1k = function () {
    return this.f1l_1.v1k();
  };
  protoOf(DGDerivationImpl).y1g = function () {
    return this.f1l_1.y1g();
  };
  protoOf(DGDerivationImpl).d1h = function () {
    return this.f1l_1.d1h();
  };
  protoOf(DGDerivationImpl).w1k = function () {
    return this.f1l_1.w1k();
  };
  protoOf(DGDerivationImpl).h1l = function (gVector) {
    return this.f1l_1.x1k(gVector);
  };
  protoOf(DGDerivationImpl).x1k = function (gVector) {
    return this.h1l(gVector);
  };
  protoOf(DGDerivationImpl).g1h = function (degree) {
    return this.f1l_1.g1h(degree);
  };
  protoOf(DGDerivationImpl).y1k = function () {
    return this.f1l_1.y1k();
  };
  protoOf(DGDerivationImpl).i1l = function (sourceQuot, targetQuot) {
    return this.f1l_1.z1k(sourceQuot, targetQuot);
  };
  protoOf(DGDerivationImpl).z1k = function (sourceQuot, targetQuot) {
    return this.i1l(sourceQuot, targetQuot);
  };
  protoOf(DGDerivationImpl).j1l = function (sourceSub, targetSub) {
    return this.f1l_1.a1l(sourceSub, targetSub);
  };
  protoOf(DGDerivationImpl).a1l = function (sourceSub, targetSub) {
    return this.j1l(sourceSub, targetSub);
  };
  protoOf(DGDerivationImpl).k1l = function (sourceSubQuot, targetSubQuot) {
    return this.f1l_1.b1l(sourceSubQuot, targetSubQuot);
  };
  protoOf(DGDerivationImpl).b1l = function (sourceSubQuot, targetSubQuot) {
    return this.k1l(sourceSubQuot, targetSubQuot);
  };
  protoOf(DGDerivationImpl).l1l = function (gVector) {
    return this.f1l_1.s1g(gVector);
  };
  protoOf(DGDerivationImpl).s1g = function (gVector) {
    return this.l1l(gVector);
  };
  protoOf(DGDerivationImpl).c1l = function () {
    return this.f1l_1.c1l();
  };
  protoOf(DGDerivationImpl).t1k = function () {
    return this.g1l_1;
  };
  function Companion_4() {
    Companion_instance_4 = this;
  }
  protoOf(Companion_4).v1g = function (totalDGAlgebra, subDGVectorSpace, generatorList) {
    return new DGIdealImpl(totalDGAlgebra, subDGVectorSpace, generatorList);
  };
  var Companion_instance_4;
  function Companion_getInstance_5() {
    if (Companion_instance_4 == null)
      new Companion_4();
    return Companion_instance_4;
  }
  function DGIdealImpl(totalGVectorSpace, subDGVectorSpace, generatorList) {
    this.n1l_1 = totalGVectorSpace;
    this.o1l_1 = generatorList;
    this.p1l_1 = subDGVectorSpace;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!equals(this.n1l_1.h1h(), subDGVectorSpace.q1l().h1h())) {
      // Inline function 'com.github.shwaka.kohomology.dg.DGIdealImpl.<anonymous>' call
      var message = 'subGVectorSpace.totalGVectorSpace (' + subDGVectorSpace.q1l() + ')' + ('must be the same as totalGVectorSpace (' + this.n1l_1 + ')');
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
  }
  protoOf(DGIdealImpl).q1l = function () {
    return this.n1l_1;
  };
  protoOf(DGIdealImpl).r1l = function () {
    return this.o1l_1;
  };
  protoOf(DGIdealImpl).i1h = function () {
    return this.p1l_1.i1h();
  };
  protoOf(DGIdealImpl).m1g = function () {
    return this.p1l_1.m1g();
  };
  protoOf(DGIdealImpl).g1g = function () {
    return this.p1l_1.g1g();
  };
  protoOf(DGIdealImpl).c1h = function () {
    return this.p1l_1.c1h();
  };
  protoOf(DGIdealImpl).o1g = function () {
    return this.p1l_1.o1g();
  };
  protoOf(DGIdealImpl).j1h = function () {
    return this.p1l_1.j1h();
  };
  protoOf(DGIdealImpl).e1h = function () {
    return this.p1l_1.e1h();
  };
  protoOf(DGIdealImpl).s1l = function () {
    return this.p1l_1.s1l();
  };
  protoOf(DGIdealImpl).f1h = function () {
    return this.p1l_1.f1h();
  };
  protoOf(DGIdealImpl).y1g = function () {
    return this.p1l_1.y1g();
  };
  protoOf(DGIdealImpl).b1h = function () {
    return this.p1l_1.b1h();
  };
  protoOf(DGIdealImpl).h1h = function () {
    return this.p1l_1.h1h();
  };
  protoOf(DGIdealImpl).z1h = function () {
    return this.p1l_1.z1h();
  };
  protoOf(DGIdealImpl).t1l = function (a, b) {
    return this.p1l_1.t1h(a, b);
  };
  protoOf(DGIdealImpl).t1h = function (a, b) {
    return this.t1l(a, b);
  };
  protoOf(DGIdealImpl).u1l = function (cocycle) {
    return this.p1l_1.z1g(cocycle);
  };
  protoOf(DGIdealImpl).z1g = function (cocycle) {
    return this.u1l(cocycle);
  };
  protoOf(DGIdealImpl).v1l = function (gVector) {
    return this.p1l_1.r1h(gVector);
  };
  protoOf(DGIdealImpl).r1h = function (gVector) {
    return this.v1l(gVector);
  };
  protoOf(DGIdealImpl).w1l = function (gVector) {
    return this.p1l_1.s1h(gVector);
  };
  protoOf(DGIdealImpl).s1h = function (gVector) {
    return this.w1l(gVector);
  };
  protoOf(DGIdealImpl).x1l = function (gVectorOrZero, degree) {
    return this.p1l_1.q1h(gVectorOrZero, degree);
  };
  protoOf(DGIdealImpl).q1h = function (gVectorOrZero, degree) {
    return this.x1l(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(DGIdealImpl).y1l = function (a, b) {
    return this.p1l_1.y1h(a, b);
  };
  protoOf(DGIdealImpl).y1h = function (a, b) {
    return this.y1l(a, b);
  };
  protoOf(DGIdealImpl).z1l = function (basisName, degree) {
    return this.p1l_1.m1h(basisName, degree);
  };
  protoOf(DGIdealImpl).m1h = function (basisName, degree) {
    var tmp = basisName instanceof SubBasis ? basisName : THROW_CCE();
    return this.z1l(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(DGIdealImpl).a1m = function (vector, degree) {
    return this.p1l_1.k1h(vector, degree);
  };
  protoOf(DGIdealImpl).k1h = function (vector, degree) {
    return this.a1m(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(DGIdealImpl).b1m = function (vector, degree) {
    return this.p1l_1.l1h(vector, degree);
  };
  protoOf(DGIdealImpl).l1h = function (vector, degree) {
    return this.b1m(vector, degree);
  };
  protoOf(DGIdealImpl).g1h = function (degree) {
    return this.p1l_1.g1h(degree);
  };
  protoOf(DGIdealImpl).n1h = function (degree) {
    return this.p1l_1.n1h(degree);
  };
  protoOf(DGIdealImpl).c1m = function (degree) {
    return this.p1l_1.c1m(degree);
  };
  protoOf(DGIdealImpl).o1h = function (degree) {
    return this.p1l_1.o1h(degree);
  };
  protoOf(DGIdealImpl).p1h = function (degree) {
    return this.p1l_1.p1h(degree);
  };
  protoOf(DGIdealImpl).d1m = function (scalar, gVector) {
    return this.p1l_1.v1h(scalar, gVector);
  };
  protoOf(DGIdealImpl).v1h = function (scalar, gVector) {
    return this.d1m(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  protoOf(DGIdealImpl).t1g = function (gVector) {
    return this.p1l_1.t1g(gVector);
  };
  protoOf(DGIdealImpl).e1m = function (a, b) {
    return this.p1l_1.u1h(a, b);
  };
  protoOf(DGIdealImpl).u1h = function (a, b) {
    return this.e1m(a, b);
  };
  protoOf(DGIdealImpl).l = function (degree) {
    return get_1.call(this, degree);
  };
  protoOf(DGIdealImpl).d1h = function () {
    return this.toString();
  };
  protoOf(DGIdealImpl).toString = function () {
    return this.s1i(Companion_getInstance_70().f1m_1);
  };
  protoOf(DGIdealImpl).s1i = function (printConfig) {
    return idealToString('DGIdeal', this.o1l_1, printConfig);
  };
  function Companion_5() {
    Companion_instance_5 = this;
  }
  protoOf(Companion_5).g1m = function (gLieAlgebra, differential) {
    var dgMagma = Companion_getInstance_9().l1g(gLieAlgebra, differential);
    return new DGLieAlgebraImpl(gLieAlgebra, differential, dgMagma.m1g(), dgMagma.m1g().n1g());
  };
  var Companion_instance_5;
  function Companion_getInstance_6() {
    if (Companion_instance_5 == null)
      new Companion_5();
    return Companion_instance_5;
  }
  function Companion_6() {
    Companion_instance_6 = this;
  }
  protoOf(Companion_6).h1m = function (dgLieAlgebra) {
    return new DGLieAlgebraContextImpl(dgLieAlgebra);
  };
  var Companion_instance_6;
  function Companion_getInstance_7() {
    if (Companion_instance_6 == null)
      new Companion_6();
    return Companion_instance_6;
  }
  function DGLieAlgebraImpl$cohomology$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_33().q1m(this$0.n1m_1, this$0.k1m_1, this$0.l1m_1);
    };
  }
  function DGLieAlgebraImpl(underlyingGLieAlgebra, differential, cohomologyGVectorSpace, cohomologyMultiplication) {
    this.i1m_1 = underlyingGLieAlgebra;
    this.j1m_1 = differential;
    this.k1m_1 = cohomologyGVectorSpace;
    this.l1m_1 = cohomologyMultiplication;
    this.m1m_1 = Companion_getInstance_7().h1m(this);
    this.n1m_1 = this.i1m_1.y1g();
    this.o1m_1 = this.i1m_1.n1g();
    var tmp = this;
    tmp.p1m_1 = lazy(DGLieAlgebraImpl$cohomology$delegate$lambda(this));
  }
  protoOf(DGLieAlgebraImpl).o1g = function () {
    return this.j1m_1;
  };
  protoOf(DGLieAlgebraImpl).i1h = function () {
    return this.i1m_1.i1h();
  };
  protoOf(DGLieAlgebraImpl).c1h = function () {
    return this.i1m_1.c1h();
  };
  protoOf(DGLieAlgebraImpl).j1h = function () {
    return this.i1m_1.j1h();
  };
  protoOf(DGLieAlgebraImpl).e1h = function () {
    return this.i1m_1.e1h();
  };
  protoOf(DGLieAlgebraImpl).f1h = function () {
    return this.i1m_1.f1h();
  };
  protoOf(DGLieAlgebraImpl).d1h = function () {
    return this.i1m_1.d1h();
  };
  protoOf(DGLieAlgebraImpl).b1h = function () {
    return this.i1m_1.b1h();
  };
  protoOf(DGLieAlgebraImpl).h1h = function () {
    return this.i1m_1.h1h();
  };
  protoOf(DGLieAlgebraImpl).z1h = function () {
    return this.i1m_1.z1h();
  };
  protoOf(DGLieAlgebraImpl).t1h = function (a, b) {
    return this.i1m_1.t1h(a, b);
  };
  protoOf(DGLieAlgebraImpl).r1h = function (gVector) {
    return this.i1m_1.r1h(gVector);
  };
  protoOf(DGLieAlgebraImpl).s1h = function (gVector) {
    return this.i1m_1.s1h(gVector);
  };
  protoOf(DGLieAlgebraImpl).q1h = function (gVectorOrZero, degree) {
    return this.i1m_1.q1h(gVectorOrZero, degree);
  };
  protoOf(DGLieAlgebraImpl).y1h = function (a, b) {
    return this.i1m_1.y1h(a, b);
  };
  protoOf(DGLieAlgebraImpl).m1h = function (basisName, degree) {
    return this.i1m_1.m1h(basisName, degree);
  };
  protoOf(DGLieAlgebraImpl).k1h = function (vector, degree) {
    return this.i1m_1.k1h(vector, degree);
  };
  protoOf(DGLieAlgebraImpl).l1h = function (vector, degree) {
    return this.i1m_1.l1h(vector, degree);
  };
  protoOf(DGLieAlgebraImpl).g1h = function (degree) {
    return this.i1m_1.g1h(degree);
  };
  protoOf(DGLieAlgebraImpl).l = function (degree) {
    return this.i1m_1.l(degree);
  };
  protoOf(DGLieAlgebraImpl).n1h = function (degree) {
    return this.i1m_1.n1h(degree);
  };
  protoOf(DGLieAlgebraImpl).o1h = function (degree) {
    return this.i1m_1.o1h(degree);
  };
  protoOf(DGLieAlgebraImpl).p1h = function (degree) {
    return this.i1m_1.p1h(degree);
  };
  protoOf(DGLieAlgebraImpl).v1h = function (scalar, gVector) {
    return this.i1m_1.v1h(scalar, gVector);
  };
  protoOf(DGLieAlgebraImpl).u1h = function (a, b) {
    return this.i1m_1.u1h(a, b);
  };
  protoOf(DGLieAlgebraImpl).toString = function () {
    return this.i1m_1.toString();
  };
  protoOf(DGLieAlgebraImpl).s1i = function (printConfig) {
    return this.i1m_1.s1i(printConfig);
  };
  protoOf(DGLieAlgebraImpl).g1g = function () {
    return this.m1m_1;
  };
  protoOf(DGLieAlgebraImpl).y1g = function () {
    return this.n1m_1;
  };
  protoOf(DGLieAlgebraImpl).n1g = function () {
    return this.o1m_1;
  };
  protoOf(DGLieAlgebraImpl).m1g = function () {
    // Inline function 'kotlin.getValue' call
    cohomology$factory_0();
    return this.p1m_1.w();
  };
  function DGLieAlgebraContextImpl(dgLieAlgebra) {
    this.r1m_1 = dgLieAlgebra;
    this.s1m_1 = Companion_getInstance_10().w1i(dgLieAlgebra);
    this.t1m_1 = this.r1m_1;
  }
  protoOf(DGLieAlgebraContextImpl).r1g = function () {
    return this.s1m_1.r1g();
  };
  protoOf(DGLieAlgebraContextImpl).x1i = function () {
    return this.s1m_1.x1i();
  };
  protoOf(DGLieAlgebraContextImpl).y1i = function () {
    return this.s1m_1.y1i();
  };
  protoOf(DGLieAlgebraContextImpl).j1h = function () {
    return this.s1m_1.j1h();
  };
  protoOf(DGLieAlgebraContextImpl).z1i = function () {
    return this.s1m_1.z1i();
  };
  protoOf(DGLieAlgebraContextImpl).a1j = function () {
    return this.s1m_1.a1j();
  };
  protoOf(DGLieAlgebraContextImpl).b1h = function () {
    return this.s1m_1.b1h();
  };
  protoOf(DGLieAlgebraContextImpl).b1j = function () {
    return this.s1m_1.b1j();
  };
  protoOf(DGLieAlgebraContextImpl).c1j = function () {
    return this.s1m_1.c1j();
  };
  protoOf(DGLieAlgebraContextImpl).z1h = function () {
    return this.s1m_1.z1h();
  };
  protoOf(DGLieAlgebraContextImpl).d1j = function (_this__u8e3s4) {
    return this.s1m_1.d1j(_this__u8e3s4);
  };
  protoOf(DGLieAlgebraContextImpl).e1j = function (_this__u8e3s4, other) {
    return this.s1m_1.e1j(_this__u8e3s4, other);
  };
  protoOf(DGLieAlgebraContextImpl).f1j = function (_this__u8e3s4, other) {
    return this.s1m_1.f1j(_this__u8e3s4, other);
  };
  protoOf(DGLieAlgebraContextImpl).g1j = function (_this__u8e3s4, ind) {
    return this.s1m_1.g1j(_this__u8e3s4, ind);
  };
  protoOf(DGLieAlgebraContextImpl).h1j = function (_this__u8e3s4) {
    return this.s1m_1.h1j(_this__u8e3s4);
  };
  protoOf(DGLieAlgebraContextImpl).i1j = function (_this__u8e3s4, other) {
    return this.s1m_1.i1j(_this__u8e3s4, other);
  };
  protoOf(DGLieAlgebraContextImpl).j1j = function (_this__u8e3s4, other) {
    return this.s1m_1.j1j(_this__u8e3s4, other);
  };
  protoOf(DGLieAlgebraContextImpl).k1j = function (_this__u8e3s4, other) {
    return this.s1m_1.k1j(_this__u8e3s4, other);
  };
  protoOf(DGLieAlgebraContextImpl).l1j = function (_this__u8e3s4, other) {
    return this.s1m_1.l1j(_this__u8e3s4, other);
  };
  protoOf(DGLieAlgebraContextImpl).m1j = function (_this__u8e3s4, other) {
    return this.s1m_1.m1j(_this__u8e3s4, other);
  };
  protoOf(DGLieAlgebraContextImpl).n1j = function (_this__u8e3s4, other) {
    return this.s1m_1.n1j(_this__u8e3s4, other);
  };
  protoOf(DGLieAlgebraContextImpl).o1j = function (_this__u8e3s4, other) {
    return this.s1m_1.o1j(_this__u8e3s4, other);
  };
  protoOf(DGLieAlgebraContextImpl).p1j = function (_this__u8e3s4, other) {
    return this.s1m_1.p1j(_this__u8e3s4, other);
  };
  protoOf(DGLieAlgebraContextImpl).q1j = function (_this__u8e3s4) {
    return this.s1m_1.q1j(_this__u8e3s4);
  };
  protoOf(DGLieAlgebraContextImpl).r1j = function (_this__u8e3s4, degree) {
    return this.s1m_1.r1j(_this__u8e3s4, degree);
  };
  protoOf(DGLieAlgebraContextImpl).s1j = function (_this__u8e3s4, other) {
    return this.s1m_1.s1j(_this__u8e3s4, other);
  };
  protoOf(DGLieAlgebraContextImpl).t1j = function (_this__u8e3s4, numVector) {
    return this.s1m_1.t1j(_this__u8e3s4, numVector);
  };
  protoOf(DGLieAlgebraContextImpl).u1j = function (_this__u8e3s4, gVector) {
    return this.s1m_1.u1j(_this__u8e3s4, gVector);
  };
  protoOf(DGLieAlgebraContextImpl).v1j = function (_this__u8e3s4, scalar) {
    return this.s1m_1.v1j(_this__u8e3s4, scalar);
  };
  protoOf(DGLieAlgebraContextImpl).w1j = function (_this__u8e3s4, scalar) {
    return this.s1m_1.w1j(_this__u8e3s4, scalar);
  };
  protoOf(DGLieAlgebraContextImpl).x1j = function (_this__u8e3s4, other) {
    return this.s1m_1.x1j(_this__u8e3s4, other);
  };
  protoOf(DGLieAlgebraContextImpl).y1j = function (_this__u8e3s4, sign) {
    return this.s1m_1.y1j(_this__u8e3s4, sign);
  };
  protoOf(DGLieAlgebraContextImpl).z1j = function (_this__u8e3s4, scalar) {
    return this.s1m_1.z1j(_this__u8e3s4, scalar);
  };
  protoOf(DGLieAlgebraContextImpl).a1k = function (_this__u8e3s4, other) {
    return this.s1m_1.a1k(_this__u8e3s4, other);
  };
  protoOf(DGLieAlgebraContextImpl).b1k = function (_this__u8e3s4, gVector) {
    return this.s1m_1.b1k(_this__u8e3s4, gVector);
  };
  protoOf(DGLieAlgebraContextImpl).c1k = function (_this__u8e3s4, gVector) {
    return this.s1m_1.c1k(_this__u8e3s4, gVector);
  };
  protoOf(DGLieAlgebraContextImpl).d1k = function (_this__u8e3s4) {
    return this.s1m_1.d1k(_this__u8e3s4);
  };
  protoOf(DGLieAlgebraContextImpl).e1k = function (_this__u8e3s4) {
    return this.s1m_1.e1k(_this__u8e3s4);
  };
  protoOf(DGLieAlgebraContextImpl).f1k = function (_this__u8e3s4) {
    return this.s1m_1.f1k(_this__u8e3s4);
  };
  protoOf(DGLieAlgebraContextImpl).g1k = function (_this__u8e3s4) {
    return this.s1m_1.g1k(_this__u8e3s4);
  };
  protoOf(DGLieAlgebraContextImpl).h1k = function (_this__u8e3s4) {
    return this.s1m_1.h1k(_this__u8e3s4);
  };
  protoOf(DGLieAlgebraContextImpl).u1m = function () {
    return this.t1m_1;
  };
  function cohomology$factory_0() {
    return getPropertyCallableRef('cohomology', 1, KProperty1, function (receiver) {
      return receiver.m1g();
    }, null);
  }
  function Companion_7() {
    Companion_instance_7 = this;
  }
  protoOf(Companion_7).r1k = function (source, target, gLinearMap) {
    return new DGLinearMapImpl(source, target, gLinearMap);
  };
  var Companion_instance_7;
  function Companion_getInstance_8() {
    if (Companion_instance_7 == null)
      new Companion_7();
    return Companion_instance_7;
  }
  function DGLinearMapImpl$inducedMapOnCohomology$delegate$lambda(this$0) {
    return function () {
      return this$0.b1l(this$0.w1m_1.m1g(), this$0.x1m_1.m1g());
    };
  }
  function DGLinearMapImpl(source, target, gLinearMap) {
    this.w1m_1 = source;
    this.x1m_1 = target;
    this.y1m_1 = gLinearMap;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!equals(this.w1m_1.h1h(), gLinearMap.s1k().h1h())) {
      // Inline function 'com.github.shwaka.kohomology.dg.DGLinearMapImpl.<anonymous>' call
      var message = 'The source DGVectorSpace does not match to the source GVectorSpace of GLinearMap';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!equals(this.x1m_1.h1h(), gLinearMap.t1k().h1h())) {
      // Inline function 'com.github.shwaka.kohomology.dg.DGLinearMapImpl.<anonymous>' call
      var message_0 = 'The target DGVectorSpace does not match to the target GVectorSpace of GLinearMap';
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
    var tmp = this;
    tmp.z1m_1 = lazy(DGLinearMapImpl$inducedMapOnCohomology$delegate$lambda(this));
  }
  protoOf(DGLinearMapImpl).s1k = function () {
    return this.w1m_1;
  };
  protoOf(DGLinearMapImpl).t1k = function () {
    return this.x1m_1;
  };
  protoOf(DGLinearMapImpl).u1k = function () {
    return this.y1m_1.u1k();
  };
  protoOf(DGLinearMapImpl).c1h = function () {
    return this.y1m_1.c1h();
  };
  protoOf(DGLinearMapImpl).y1g = function () {
    return this.y1m_1.y1g();
  };
  protoOf(DGLinearMapImpl).d1h = function () {
    return this.y1m_1.d1h();
  };
  protoOf(DGLinearMapImpl).w1k = function () {
    return this.y1m_1.w1k();
  };
  protoOf(DGLinearMapImpl).x1k = function (gVector) {
    return this.y1m_1.x1k(gVector);
  };
  protoOf(DGLinearMapImpl).g1h = function (degree) {
    return this.y1m_1.g1h(degree);
  };
  protoOf(DGLinearMapImpl).y1k = function () {
    return this.y1m_1.y1k();
  };
  protoOf(DGLinearMapImpl).z1k = function (sourceQuot, targetQuot) {
    return this.y1m_1.z1k(sourceQuot, targetQuot);
  };
  protoOf(DGLinearMapImpl).a1l = function (sourceSub, targetSub) {
    return this.y1m_1.a1l(sourceSub, targetSub);
  };
  protoOf(DGLinearMapImpl).b1l = function (sourceSubQuot, targetSubQuot) {
    return this.y1m_1.b1l(sourceSubQuot, targetSubQuot);
  };
  protoOf(DGLinearMapImpl).s1g = function (gVector) {
    return this.y1m_1.s1g(gVector);
  };
  protoOf(DGLinearMapImpl).c1l = function () {
    return this.y1m_1.c1l();
  };
  protoOf(DGLinearMapImpl).v1k = function () {
    // Inline function 'kotlin.getValue' call
    inducedMapOnCohomology$factory();
    return this.z1m_1.w();
  };
  function inducedMapOnCohomology$factory() {
    return getPropertyCallableRef('inducedMapOnCohomology', 1, KProperty1, function (receiver) {
      return receiver.v1k();
    }, null);
  }
  function Companion_8() {
    Companion_instance_8 = this;
  }
  protoOf(Companion_8).l1g = function (gMagma, differential) {
    var dgVectorSpace = Companion_getInstance_11().a1n(gMagma, differential);
    return new DGMagmaImpl(gMagma, differential, gMagma.n1g(), dgVectorSpace.m1g());
  };
  var Companion_instance_8;
  function Companion_getInstance_9() {
    if (Companion_instance_8 == null)
      new Companion_8();
    return Companion_instance_8;
  }
  function Companion_9() {
    Companion_instance_9 = this;
  }
  protoOf(Companion_9).w1i = function (dgMagma) {
    return new DGMagmaContextImpl(dgMagma);
  };
  var Companion_instance_9;
  function Companion_getInstance_10() {
    if (Companion_instance_9 == null)
      new Companion_9();
    return Companion_instance_9;
  }
  function DGMagmaContext() {
  }
  function getCohomologyMultiplication($this) {
    return $this.c1n_1.r1n($this.d1n_1, $this.d1n_1, $this.d1n_1);
  }
  function DGMagmaImpl$cohomology$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_34().q1m(this$0.g1n_1, this$0.d1n_1, getCohomologyMultiplication(this$0));
    };
  }
  function DGMagmaImpl(gVectorSpace, differential, multiplication, cohomologyGVectorSpace) {
    this.b1n_1 = differential;
    this.c1n_1 = multiplication;
    this.d1n_1 = cohomologyGVectorSpace;
    this.e1n_1 = gVectorSpace;
    this.f1n_1 = Companion_getInstance_10().w1i(this);
    this.g1n_1 = this.b1n_1.y1g();
    var tmp = this;
    tmp.h1n_1 = lazy(DGMagmaImpl$cohomology$delegate$lambda(this));
  }
  protoOf(DGMagmaImpl).o1g = function () {
    return this.b1n_1;
  };
  protoOf(DGMagmaImpl).n1g = function () {
    return this.c1n_1;
  };
  protoOf(DGMagmaImpl).i1h = function () {
    return this.e1n_1.i1h();
  };
  protoOf(DGMagmaImpl).c1h = function () {
    return this.e1n_1.c1h();
  };
  protoOf(DGMagmaImpl).j1h = function () {
    return this.e1n_1.j1h();
  };
  protoOf(DGMagmaImpl).e1h = function () {
    return this.e1n_1.e1h();
  };
  protoOf(DGMagmaImpl).f1h = function () {
    return this.e1n_1.f1h();
  };
  protoOf(DGMagmaImpl).d1h = function () {
    return this.e1n_1.d1h();
  };
  protoOf(DGMagmaImpl).b1h = function () {
    return this.e1n_1.b1h();
  };
  protoOf(DGMagmaImpl).h1h = function () {
    return this.e1n_1.h1h();
  };
  protoOf(DGMagmaImpl).z1h = function () {
    return this.e1n_1.z1h();
  };
  protoOf(DGMagmaImpl).t1h = function (a, b) {
    return this.e1n_1.t1h(a, b);
  };
  protoOf(DGMagmaImpl).r1h = function (gVector) {
    return this.e1n_1.r1h(gVector);
  };
  protoOf(DGMagmaImpl).s1h = function (gVector) {
    return this.e1n_1.s1h(gVector);
  };
  protoOf(DGMagmaImpl).q1h = function (gVectorOrZero, degree) {
    return this.e1n_1.q1h(gVectorOrZero, degree);
  };
  protoOf(DGMagmaImpl).y1h = function (a, b) {
    return this.e1n_1.y1h(a, b);
  };
  protoOf(DGMagmaImpl).m1h = function (basisName, degree) {
    return this.e1n_1.m1h(basisName, degree);
  };
  protoOf(DGMagmaImpl).k1h = function (vector, degree) {
    return this.e1n_1.k1h(vector, degree);
  };
  protoOf(DGMagmaImpl).l1h = function (vector, degree) {
    return this.e1n_1.l1h(vector, degree);
  };
  protoOf(DGMagmaImpl).g1h = function (degree) {
    return this.e1n_1.g1h(degree);
  };
  protoOf(DGMagmaImpl).l = function (degree) {
    return this.e1n_1.l(degree);
  };
  protoOf(DGMagmaImpl).n1h = function (degree) {
    return this.e1n_1.n1h(degree);
  };
  protoOf(DGMagmaImpl).o1h = function (degree) {
    return this.e1n_1.o1h(degree);
  };
  protoOf(DGMagmaImpl).p1h = function (degree) {
    return this.e1n_1.p1h(degree);
  };
  protoOf(DGMagmaImpl).v1h = function (scalar, gVector) {
    return this.e1n_1.v1h(scalar, gVector);
  };
  protoOf(DGMagmaImpl).u1h = function (a, b) {
    return this.e1n_1.u1h(a, b);
  };
  protoOf(DGMagmaImpl).toString = function () {
    return this.e1n_1.toString();
  };
  protoOf(DGMagmaImpl).s1i = function (printConfig) {
    return this.e1n_1.s1i(printConfig);
  };
  protoOf(DGMagmaImpl).g1g = function () {
    return this.f1n_1;
  };
  protoOf(DGMagmaImpl).m1g = function () {
    // Inline function 'kotlin.getValue' call
    cohomology$factory_1();
    return this.h1n_1.w();
  };
  function DGMagmaContextImpl(dgMagma) {
    this.s1n_1 = dgMagma;
    this.t1n_1 = this.s1n_1;
    this.u1n_1 = this.s1n_1;
    this.v1n_1 = this.u1n_1;
    this.w1n_1 = this.u1n_1.b1h();
    this.x1n_1 = this.u1n_1.j1h();
  }
  protoOf(DGMagmaContextImpl).x1i = function () {
    return this.s1n_1;
  };
  protoOf(DGMagmaContextImpl).y1i = function () {
    return this.t1n_1;
  };
  protoOf(DGMagmaContextImpl).z1i = function () {
    return this.u1n_1;
  };
  protoOf(DGMagmaContextImpl).a1j = function () {
    return this.v1n_1;
  };
  protoOf(DGMagmaContextImpl).b1h = function () {
    return this.w1n_1;
  };
  protoOf(DGMagmaContextImpl).j1h = function () {
    return this.x1n_1;
  };
  function cohomology$factory_1() {
    return getPropertyCallableRef('cohomology', 1, KProperty1, function (receiver) {
      return receiver.m1g();
    }, null);
  }
  function getCohomology($this, gVectorSpace, differential) {
    return new Cohomology(gVectorSpace, differential);
  }
  function Companion_10() {
    Companion_instance_10 = this;
  }
  protoOf(Companion_10).a1n = function (gVectorSpace, differential) {
    var cohomology = getCohomology(Companion_getInstance_11(), gVectorSpace, differential);
    return new DGVectorSpaceImpl(gVectorSpace, differential, cohomology);
  };
  protoOf(Companion_10).q1i = function (cohomology, cocycle) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!cohomology.t1g(cocycle)) {
      // Inline function 'com.github.shwaka.kohomology.dg.Companion.getCohomologyClass.<anonymous>' call
      var message = '' + cocycle + ' is not a cocycle';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    return cohomology.y1n().s1g(cocycle);
  };
  var Companion_instance_10;
  function Companion_getInstance_11() {
    if (Companion_instance_10 == null)
      new Companion_10();
    return Companion_instance_10;
  }
  function DGVectorSpace() {
  }
  function Companion_11() {
    Companion_instance_11 = this;
  }
  protoOf(Companion_11).r1o = function (dgVectorSpace) {
    return new DGVectorContextImpl(dgVectorSpace);
  };
  var Companion_instance_11;
  function Companion_getInstance_12() {
    if (Companion_instance_11 == null)
      new Companion_11();
    return Companion_instance_11;
  }
  function DGVectorContext() {
  }
  function DGVectorSpaceImpl(gVectorSpace, differential, cohomology) {
    this.s1o_1 = differential;
    this.t1o_1 = cohomology;
    this.u1o_1 = gVectorSpace;
    this.v1o_1 = Companion_getInstance_12().r1o(this);
    this.w1o_1 = gVectorSpace.h1h();
  }
  protoOf(DGVectorSpaceImpl).o1g = function () {
    return this.s1o_1;
  };
  protoOf(DGVectorSpaceImpl).m1g = function () {
    return this.t1o_1;
  };
  protoOf(DGVectorSpaceImpl).i1h = function () {
    return this.u1o_1.i1h();
  };
  protoOf(DGVectorSpaceImpl).c1h = function () {
    return this.u1o_1.c1h();
  };
  protoOf(DGVectorSpaceImpl).j1h = function () {
    return this.u1o_1.j1h();
  };
  protoOf(DGVectorSpaceImpl).e1h = function () {
    return this.u1o_1.e1h();
  };
  protoOf(DGVectorSpaceImpl).f1h = function () {
    return this.u1o_1.f1h();
  };
  protoOf(DGVectorSpaceImpl).d1h = function () {
    return this.u1o_1.d1h();
  };
  protoOf(DGVectorSpaceImpl).b1h = function () {
    return this.u1o_1.b1h();
  };
  protoOf(DGVectorSpaceImpl).z1h = function () {
    return this.u1o_1.z1h();
  };
  protoOf(DGVectorSpaceImpl).t1h = function (a, b) {
    return this.u1o_1.t1h(a, b);
  };
  protoOf(DGVectorSpaceImpl).r1h = function (gVector) {
    return this.u1o_1.r1h(gVector);
  };
  protoOf(DGVectorSpaceImpl).s1h = function (gVector) {
    return this.u1o_1.s1h(gVector);
  };
  protoOf(DGVectorSpaceImpl).q1h = function (gVectorOrZero, degree) {
    return this.u1o_1.q1h(gVectorOrZero, degree);
  };
  protoOf(DGVectorSpaceImpl).y1h = function (a, b) {
    return this.u1o_1.y1h(a, b);
  };
  protoOf(DGVectorSpaceImpl).m1h = function (basisName, degree) {
    return this.u1o_1.m1h(basisName, degree);
  };
  protoOf(DGVectorSpaceImpl).k1h = function (vector, degree) {
    return this.u1o_1.k1h(vector, degree);
  };
  protoOf(DGVectorSpaceImpl).l1h = function (vector, degree) {
    return this.u1o_1.l1h(vector, degree);
  };
  protoOf(DGVectorSpaceImpl).g1h = function (degree) {
    return this.u1o_1.g1h(degree);
  };
  protoOf(DGVectorSpaceImpl).l = function (degree) {
    return this.u1o_1.l(degree);
  };
  protoOf(DGVectorSpaceImpl).n1h = function (degree) {
    return this.u1o_1.n1h(degree);
  };
  protoOf(DGVectorSpaceImpl).o1h = function (degree) {
    return this.u1o_1.o1h(degree);
  };
  protoOf(DGVectorSpaceImpl).p1h = function (degree) {
    return this.u1o_1.p1h(degree);
  };
  protoOf(DGVectorSpaceImpl).v1h = function (scalar, gVector) {
    return this.u1o_1.v1h(scalar, gVector);
  };
  protoOf(DGVectorSpaceImpl).u1h = function (a, b) {
    return this.u1o_1.u1h(a, b);
  };
  protoOf(DGVectorSpaceImpl).s1i = function (printConfig) {
    return this.u1o_1.s1i(printConfig);
  };
  protoOf(DGVectorSpaceImpl).g1g = function () {
    return this.v1o_1;
  };
  protoOf(DGVectorSpaceImpl).h1h = function () {
    return this.w1o_1;
  };
  protoOf(DGVectorSpaceImpl).toString = function () {
    var name = this.d1h();
    return '(' + name + ', d)';
  };
  function Cohomology(gVectorSpace, differential) {
    this.x1o_1 = gVectorSpace;
    this.y1o_1 = Companion_getInstance_35().z1o(differential.y1g(), gVectorSpace, differential.c1l(), differential.y1k(), VOID, 'H(' + gVectorSpace.d1h() + ')');
  }
  protoOf(Cohomology).i1h = function () {
    return this.y1o_1.i1h();
  };
  protoOf(Cohomology).g1g = function () {
    return this.y1o_1.g1g();
  };
  protoOf(Cohomology).c1h = function () {
    return this.y1o_1.c1h();
  };
  protoOf(Cohomology).j1h = function () {
    return this.y1o_1.j1h();
  };
  protoOf(Cohomology).e1h = function () {
    return this.y1o_1.e1h();
  };
  protoOf(Cohomology).f1h = function () {
    return this.y1o_1.f1h();
  };
  protoOf(Cohomology).d1h = function () {
    return this.y1o_1.d1h();
  };
  protoOf(Cohomology).b1h = function () {
    return this.y1o_1.b1h();
  };
  protoOf(Cohomology).y1n = function () {
    return this.y1o_1.y1n();
  };
  protoOf(Cohomology).h1h = function () {
    return this.y1o_1.h1h();
  };
  protoOf(Cohomology).z1h = function () {
    return this.y1o_1.z1h();
  };
  protoOf(Cohomology).a1p = function (a, b) {
    return this.y1o_1.t1h(a, b);
  };
  protoOf(Cohomology).t1h = function (a, b) {
    return this.a1p(a, b);
  };
  protoOf(Cohomology).b1p = function (gVector) {
    return this.y1o_1.r1h(gVector);
  };
  protoOf(Cohomology).r1h = function (gVector) {
    return this.b1p(gVector);
  };
  protoOf(Cohomology).c1p = function (gVector) {
    return this.y1o_1.s1h(gVector);
  };
  protoOf(Cohomology).s1h = function (gVector) {
    return this.c1p(gVector);
  };
  protoOf(Cohomology).d1p = function (gVectorOrZero, degree) {
    return this.y1o_1.q1h(gVectorOrZero, degree);
  };
  protoOf(Cohomology).q1h = function (gVectorOrZero, degree) {
    return this.d1p(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(Cohomology).e1p = function (a, b) {
    return this.y1o_1.y1h(a, b);
  };
  protoOf(Cohomology).y1h = function (a, b) {
    return this.e1p(a, b);
  };
  protoOf(Cohomology).f1p = function (basisName, degree) {
    return this.y1o_1.m1h(basisName, degree);
  };
  protoOf(Cohomology).m1h = function (basisName, degree) {
    var tmp = basisName instanceof SubQuotBasis ? basisName : THROW_CCE();
    return this.f1p(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(Cohomology).g1p = function (vector, degree) {
    return this.y1o_1.k1h(vector, degree);
  };
  protoOf(Cohomology).k1h = function (vector, degree) {
    return this.g1p(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(Cohomology).h1p = function (vector, degree) {
    return this.y1o_1.l1h(vector, degree);
  };
  protoOf(Cohomology).l1h = function (vector, degree) {
    return this.h1p(vector, degree);
  };
  protoOf(Cohomology).g1h = function (degree) {
    return this.y1o_1.g1h(degree);
  };
  protoOf(Cohomology).l = function (degree) {
    return this.y1o_1.l(degree);
  };
  protoOf(Cohomology).n1h = function (degree) {
    return this.y1o_1.n1h(degree);
  };
  protoOf(Cohomology).c1m = function (degree) {
    return this.y1o_1.c1m(degree);
  };
  protoOf(Cohomology).i1p = function (augmentedDegree) {
    return this.y1o_1.i1p(augmentedDegree);
  };
  protoOf(Cohomology).o1h = function (degree) {
    return this.y1o_1.o1h(degree);
  };
  protoOf(Cohomology).p1h = function (degree) {
    return this.y1o_1.p1h(degree);
  };
  protoOf(Cohomology).j1p = function (scalar, gVector) {
    return this.y1o_1.v1h(scalar, gVector);
  };
  protoOf(Cohomology).v1h = function (scalar, gVector) {
    return this.j1p(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  protoOf(Cohomology).t1g = function (gVector) {
    return this.y1o_1.t1g(gVector);
  };
  protoOf(Cohomology).k1p = function (a, b) {
    return this.y1o_1.u1h(a, b);
  };
  protoOf(Cohomology).u1h = function (a, b) {
    return this.k1p(a, b);
  };
  protoOf(Cohomology).toString = function () {
    return this.s1i(Companion_getInstance_70().f1m_1);
  };
  protoOf(Cohomology).s1i = function (printConfig) {
    return 'H(' + this.x1o_1.s1i(printConfig) + ')';
  };
  function DGVectorContextImpl(dgVectorSpace) {
    this.l1p_1 = dgVectorSpace;
    this.m1p_1 = Companion_getInstance_25().n1p(dgVectorSpace);
  }
  protoOf(DGVectorContextImpl).y1i = function () {
    return this.l1p_1;
  };
  protoOf(DGVectorContextImpl).j1h = function () {
    return this.m1p_1.j1h();
  };
  protoOf(DGVectorContextImpl).a1j = function () {
    return this.m1p_1.a1j();
  };
  protoOf(DGVectorContextImpl).b1h = function () {
    return this.m1p_1.b1h();
  };
  protoOf(DGVectorContextImpl).b1j = function () {
    return this.m1p_1.b1j();
  };
  protoOf(DGVectorContextImpl).c1j = function () {
    return this.m1p_1.c1j();
  };
  protoOf(DGVectorContextImpl).z1h = function () {
    return this.m1p_1.z1h();
  };
  protoOf(DGVectorContextImpl).e1j = function (_this__u8e3s4, other) {
    return this.m1p_1.e1j(_this__u8e3s4, other);
  };
  protoOf(DGVectorContextImpl).f1j = function (_this__u8e3s4, other) {
    return this.m1p_1.f1j(_this__u8e3s4, other);
  };
  protoOf(DGVectorContextImpl).g1j = function (_this__u8e3s4, ind) {
    return this.m1p_1.g1j(_this__u8e3s4, ind);
  };
  protoOf(DGVectorContextImpl).h1j = function (_this__u8e3s4) {
    return this.m1p_1.h1j(_this__u8e3s4);
  };
  protoOf(DGVectorContextImpl).i1j = function (_this__u8e3s4, other) {
    return this.m1p_1.i1j(_this__u8e3s4, other);
  };
  protoOf(DGVectorContextImpl).j1j = function (_this__u8e3s4, other) {
    return this.m1p_1.j1j(_this__u8e3s4, other);
  };
  protoOf(DGVectorContextImpl).k1j = function (_this__u8e3s4, other) {
    return this.m1p_1.k1j(_this__u8e3s4, other);
  };
  protoOf(DGVectorContextImpl).l1j = function (_this__u8e3s4, other) {
    return this.m1p_1.l1j(_this__u8e3s4, other);
  };
  protoOf(DGVectorContextImpl).m1j = function (_this__u8e3s4, other) {
    return this.m1p_1.m1j(_this__u8e3s4, other);
  };
  protoOf(DGVectorContextImpl).n1j = function (_this__u8e3s4, other) {
    return this.m1p_1.n1j(_this__u8e3s4, other);
  };
  protoOf(DGVectorContextImpl).o1j = function (_this__u8e3s4, other) {
    return this.m1p_1.o1j(_this__u8e3s4, other);
  };
  protoOf(DGVectorContextImpl).p1j = function (_this__u8e3s4, other) {
    return this.m1p_1.p1j(_this__u8e3s4, other);
  };
  protoOf(DGVectorContextImpl).q1j = function (_this__u8e3s4) {
    return this.m1p_1.q1j(_this__u8e3s4);
  };
  protoOf(DGVectorContextImpl).r1j = function (_this__u8e3s4, degree) {
    return this.m1p_1.r1j(_this__u8e3s4, degree);
  };
  protoOf(DGVectorContextImpl).s1j = function (_this__u8e3s4, other) {
    return this.m1p_1.s1j(_this__u8e3s4, other);
  };
  protoOf(DGVectorContextImpl).t1j = function (_this__u8e3s4, numVector) {
    return this.m1p_1.t1j(_this__u8e3s4, numVector);
  };
  protoOf(DGVectorContextImpl).u1j = function (_this__u8e3s4, gVector) {
    return this.m1p_1.u1j(_this__u8e3s4, gVector);
  };
  protoOf(DGVectorContextImpl).v1j = function (_this__u8e3s4, scalar) {
    return this.m1p_1.v1j(_this__u8e3s4, scalar);
  };
  protoOf(DGVectorContextImpl).w1j = function (_this__u8e3s4, scalar) {
    return this.m1p_1.w1j(_this__u8e3s4, scalar);
  };
  protoOf(DGVectorContextImpl).y1j = function (_this__u8e3s4, sign) {
    return this.m1p_1.y1j(_this__u8e3s4, sign);
  };
  protoOf(DGVectorContextImpl).z1j = function (_this__u8e3s4, scalar) {
    return this.m1p_1.z1j(_this__u8e3s4, scalar);
  };
  protoOf(DGVectorContextImpl).b1k = function (_this__u8e3s4, gVector) {
    return this.m1p_1.b1k(_this__u8e3s4, gVector);
  };
  protoOf(DGVectorContextImpl).c1k = function (_this__u8e3s4, gVector) {
    return this.m1p_1.c1k(_this__u8e3s4, gVector);
  };
  protoOf(DGVectorContextImpl).d1k = function (_this__u8e3s4) {
    return this.m1p_1.d1k(_this__u8e3s4);
  };
  protoOf(DGVectorContextImpl).e1k = function (_this__u8e3s4) {
    return this.m1p_1.e1k(_this__u8e3s4);
  };
  protoOf(DGVectorContextImpl).f1k = function (_this__u8e3s4) {
    return this.m1p_1.f1k(_this__u8e3s4);
  };
  protoOf(DGVectorContextImpl).g1k = function (_this__u8e3s4) {
    return this.m1p_1.g1k(_this__u8e3s4);
  };
  protoOf(DGVectorContextImpl).h1k = function (_this__u8e3s4) {
    return this.m1p_1.h1k(_this__u8e3s4);
  };
  function Companion_12() {
    Companion_instance_12 = this;
  }
  protoOf(Companion_12).o1p = function (source, gLinearMap) {
    return new DerivationImpl(source, gLinearMap);
  };
  protoOf(Companion_12).p1p = function (source, degree, matrixSpace, name, getGVectors) {
    var gLinearMap = Companion_getInstance_21().q1p(source, source, degree, matrixSpace, name, getGVectors);
    return new DerivationImpl(source, gLinearMap);
  };
  var Companion_instance_12;
  function Companion_getInstance_13() {
    if (Companion_instance_12 == null)
      new Companion_12();
    return Companion_instance_12;
  }
  function Derivation() {
  }
  function Companion_13() {
    Companion_instance_13 = this;
  }
  protoOf(Companion_13).r1p = function (source, degree, matrixSpace, name, getGVectors) {
    var gLinearMap = Companion_getInstance_21().q1p(source, source, degree, matrixSpace, name, getGVectors);
    return new LieDerivationImpl(source, gLinearMap);
  };
  var Companion_instance_13;
  function Companion_getInstance_14() {
    if (Companion_instance_13 == null)
      new Companion_13();
    return Companion_instance_13;
  }
  function Companion_14() {
    Companion_instance_14 = this;
  }
  protoOf(Companion_14).s1p = function (source, gLinearMap) {
    return new MagmaDerivationImpl(source, gLinearMap);
  };
  var Companion_instance_14;
  function Companion_getInstance_15() {
    if (Companion_instance_14 == null)
      new Companion_14();
    return Companion_instance_14;
  }
  function DerivationImpl(source, gLinearMap) {
    this.t1p_1 = source;
    this.u1p_1 = Companion_getInstance_15().s1p(source, gLinearMap);
    this.v1p_1 = this.t1p_1;
  }
  protoOf(DerivationImpl).s1k = function () {
    return this.t1p_1;
  };
  protoOf(DerivationImpl).u1k = function () {
    return this.u1p_1.u1k();
  };
  protoOf(DerivationImpl).c1h = function () {
    return this.u1p_1.c1h();
  };
  protoOf(DerivationImpl).y1g = function () {
    return this.u1p_1.y1g();
  };
  protoOf(DerivationImpl).d1h = function () {
    return this.u1p_1.d1h();
  };
  protoOf(DerivationImpl).w1k = function () {
    return this.u1p_1.w1k();
  };
  protoOf(DerivationImpl).h1l = function (gVector) {
    return this.u1p_1.x1k(gVector);
  };
  protoOf(DerivationImpl).x1k = function (gVector) {
    return this.h1l(gVector);
  };
  protoOf(DerivationImpl).g1h = function (degree) {
    return this.u1p_1.g1h(degree);
  };
  protoOf(DerivationImpl).y1k = function () {
    return this.u1p_1.y1k();
  };
  protoOf(DerivationImpl).i1l = function (sourceQuot, targetQuot) {
    return this.u1p_1.z1k(sourceQuot, targetQuot);
  };
  protoOf(DerivationImpl).z1k = function (sourceQuot, targetQuot) {
    return this.i1l(sourceQuot, targetQuot);
  };
  protoOf(DerivationImpl).j1l = function (sourceSub, targetSub) {
    return this.u1p_1.a1l(sourceSub, targetSub);
  };
  protoOf(DerivationImpl).a1l = function (sourceSub, targetSub) {
    return this.j1l(sourceSub, targetSub);
  };
  protoOf(DerivationImpl).k1l = function (sourceSubQuot, targetSubQuot) {
    return this.u1p_1.b1l(sourceSubQuot, targetSubQuot);
  };
  protoOf(DerivationImpl).b1l = function (sourceSubQuot, targetSubQuot) {
    return this.k1l(sourceSubQuot, targetSubQuot);
  };
  protoOf(DerivationImpl).l1l = function (gVector) {
    return this.u1p_1.s1g(gVector);
  };
  protoOf(DerivationImpl).s1g = function (gVector) {
    return this.l1l(gVector);
  };
  protoOf(DerivationImpl).c1l = function () {
    return this.u1p_1.c1l();
  };
  protoOf(DerivationImpl).t1k = function () {
    return this.v1p_1;
  };
  function LieDerivationImpl(source, gLinearMap) {
    this.w1p_1 = source;
    this.x1p_1 = Companion_getInstance_15().s1p(source, gLinearMap);
    this.y1p_1 = this.w1p_1;
  }
  protoOf(LieDerivationImpl).s1k = function () {
    return this.w1p_1;
  };
  protoOf(LieDerivationImpl).u1k = function () {
    return this.x1p_1.u1k();
  };
  protoOf(LieDerivationImpl).c1h = function () {
    return this.x1p_1.c1h();
  };
  protoOf(LieDerivationImpl).y1g = function () {
    return this.x1p_1.y1g();
  };
  protoOf(LieDerivationImpl).d1h = function () {
    return this.x1p_1.d1h();
  };
  protoOf(LieDerivationImpl).w1k = function () {
    return this.x1p_1.w1k();
  };
  protoOf(LieDerivationImpl).h1l = function (gVector) {
    return this.x1p_1.x1k(gVector);
  };
  protoOf(LieDerivationImpl).x1k = function (gVector) {
    return this.h1l(gVector);
  };
  protoOf(LieDerivationImpl).g1h = function (degree) {
    return this.x1p_1.g1h(degree);
  };
  protoOf(LieDerivationImpl).y1k = function () {
    return this.x1p_1.y1k();
  };
  protoOf(LieDerivationImpl).i1l = function (sourceQuot, targetQuot) {
    return this.x1p_1.z1k(sourceQuot, targetQuot);
  };
  protoOf(LieDerivationImpl).z1k = function (sourceQuot, targetQuot) {
    return this.i1l(sourceQuot, targetQuot);
  };
  protoOf(LieDerivationImpl).j1l = function (sourceSub, targetSub) {
    return this.x1p_1.a1l(sourceSub, targetSub);
  };
  protoOf(LieDerivationImpl).a1l = function (sourceSub, targetSub) {
    return this.j1l(sourceSub, targetSub);
  };
  protoOf(LieDerivationImpl).k1l = function (sourceSubQuot, targetSubQuot) {
    return this.x1p_1.b1l(sourceSubQuot, targetSubQuot);
  };
  protoOf(LieDerivationImpl).b1l = function (sourceSubQuot, targetSubQuot) {
    return this.k1l(sourceSubQuot, targetSubQuot);
  };
  protoOf(LieDerivationImpl).l1l = function (gVector) {
    return this.x1p_1.s1g(gVector);
  };
  protoOf(LieDerivationImpl).s1g = function (gVector) {
    return this.l1l(gVector);
  };
  protoOf(LieDerivationImpl).c1l = function () {
    return this.x1p_1.c1l();
  };
  protoOf(LieDerivationImpl).t1k = function () {
    return this.y1p_1;
  };
  function MagmaDerivationImpl(source, gLinearMap) {
    this.z1p_1 = source;
    this.a1q_1 = gLinearMap;
    this.b1q_1 = this.z1p_1;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!equals(gLinearMap.s1k(), this.z1p_1)) {
      // Inline function 'kotlin.require.<anonymous>' call
      var message = 'Failed requirement.';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!equals(gLinearMap.t1k(), this.z1p_1)) {
      // Inline function 'kotlin.require.<anonymous>' call
      var message_0 = 'Failed requirement.';
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
  }
  protoOf(MagmaDerivationImpl).s1k = function () {
    return this.z1p_1;
  };
  protoOf(MagmaDerivationImpl).u1k = function () {
    return this.a1q_1.u1k();
  };
  protoOf(MagmaDerivationImpl).c1h = function () {
    return this.a1q_1.c1h();
  };
  protoOf(MagmaDerivationImpl).y1g = function () {
    return this.a1q_1.y1g();
  };
  protoOf(MagmaDerivationImpl).d1h = function () {
    return this.a1q_1.d1h();
  };
  protoOf(MagmaDerivationImpl).w1k = function () {
    return this.a1q_1.w1k();
  };
  protoOf(MagmaDerivationImpl).h1l = function (gVector) {
    return this.a1q_1.x1k(gVector);
  };
  protoOf(MagmaDerivationImpl).x1k = function (gVector) {
    return this.h1l(gVector);
  };
  protoOf(MagmaDerivationImpl).g1h = function (degree) {
    return this.a1q_1.g1h(degree);
  };
  protoOf(MagmaDerivationImpl).y1k = function () {
    return this.a1q_1.y1k();
  };
  protoOf(MagmaDerivationImpl).i1l = function (sourceQuot, targetQuot) {
    return this.a1q_1.z1k(sourceQuot, targetQuot);
  };
  protoOf(MagmaDerivationImpl).z1k = function (sourceQuot, targetQuot) {
    return this.i1l(sourceQuot, targetQuot);
  };
  protoOf(MagmaDerivationImpl).j1l = function (sourceSub, targetSub) {
    return this.a1q_1.a1l(sourceSub, targetSub);
  };
  protoOf(MagmaDerivationImpl).a1l = function (sourceSub, targetSub) {
    return this.j1l(sourceSub, targetSub);
  };
  protoOf(MagmaDerivationImpl).k1l = function (sourceSubQuot, targetSubQuot) {
    return this.a1q_1.b1l(sourceSubQuot, targetSubQuot);
  };
  protoOf(MagmaDerivationImpl).b1l = function (sourceSubQuot, targetSubQuot) {
    return this.k1l(sourceSubQuot, targetSubQuot);
  };
  protoOf(MagmaDerivationImpl).l1l = function (gVector) {
    return this.a1q_1.s1g(gVector);
  };
  protoOf(MagmaDerivationImpl).s1g = function (gVector) {
    return this.l1l(gVector);
  };
  protoOf(MagmaDerivationImpl).c1l = function () {
    return this.a1q_1.c1l();
  };
  protoOf(MagmaDerivationImpl).t1k = function () {
    return this.b1q_1;
  };
  function InvalidIdentifierException(identifierName, validIdentifierNames) {
    Exception_init_$Init$(trimIndent('\n        Invalid generator name: ' + identifierName + '\n        Valid names are: ' + joinToString(validIdentifierNames, ', ') + '\n    '), this);
    captureStack(this, InvalidIdentifierException);
    this.c1q_1 = identifierName;
    this.d1q_1 = validIdentifierNames;
  }
  function GAlgebra() {
  }
  function Companion_15() {
    Companion_instance_15 = this;
  }
  protoOf(Companion_15).l1q = function (gAlgebra) {
    return new GAlgebraContextImpl(gAlgebra);
  };
  var Companion_instance_15;
  function Companion_getInstance_16() {
    if (Companion_instance_15 == null)
      new Companion_15();
    return Companion_instance_15;
  }
  function GAlgebraContext() {
  }
  function getValueFromASTNode(_this__u8e3s4, generatorList, astNode) {
    var tmp;
    if (astNode instanceof Zero) {
      tmp = _this__u8e3s4.z1h();
    } else {
      if (astNode instanceof Identifier) {
        // Inline function 'kotlin.collections.find' call
        var tmp$ret$1;
        $l$block: {
          // Inline function 'kotlin.collections.firstOrNull' call
          var tmp0_iterator = generatorList.f();
          while (tmp0_iterator.g()) {
            var element = tmp0_iterator.h();
            // Inline function 'com.github.shwaka.kohomology.dg.getValueFromASTNode.<anonymous>' call
            if (element.x3_1 === astNode.y1q_1) {
              tmp$ret$1 = element;
              break $l$block;
            }
          }
          tmp$ret$1 = null;
        }
        var tmp1_safe_receiver = tmp$ret$1;
        var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.y3_1;
        var tmp_0;
        if (tmp2_elvis_lhs == null) {
          // Inline function 'kotlin.collections.map' call
          // Inline function 'kotlin.collections.mapTo' call
          var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(generatorList, 10));
          var tmp0_iterator_0 = generatorList.f();
          while (tmp0_iterator_0.g()) {
            var item = tmp0_iterator_0.h();
            var tmp$ret$3;
            // Inline function 'com.github.shwaka.kohomology.dg.getValueFromASTNode.<anonymous>' call
            tmp$ret$3 = item.x3_1;
            tmp0_mapTo.a(tmp$ret$3);
          }
          throw new InvalidIdentifierException(astNode.y1q_1, tmp0_mapTo);
        } else {
          tmp_0 = tmp2_elvis_lhs;
        }
        tmp = tmp_0;
      } else {
        if (astNode instanceof NatNumber) {
          var tmp_1;
          if (astNode.x1q_1 === 0) {
            tmp_1 = _this__u8e3s4.z1h();
          } else {
            var scalar = _this__u8e3s4.j1h().bi(astNode.x1q_1);
            // Inline function 'kotlin.run' call
            var tmp0_run = _this__u8e3s4.g1g();
            // Inline function 'kotlin.contracts.contract' call
            // Inline function 'com.github.shwaka.kohomology.dg.getValueFromASTNode.<anonymous>' call
            tmp_1 = tmp0_run.u1j(scalar, tmp0_run.a1i());
          }
          tmp = tmp_1;
        } else {
          if (astNode instanceof Divide) {
            var numeratorValue = getValueFromASTNode(_this__u8e3s4, generatorList, astNode.v1q_1);
            var denominatorValue = getValueFromASTNode(_this__u8e3s4, generatorList, astNode.w1q_1);
            // Inline function 'kotlin.run' call
            var tmp1_run = _this__u8e3s4.g1g();
            // Inline function 'kotlin.contracts.contract' call
            // Inline function 'com.github.shwaka.kohomology.dg.getValueFromASTNode.<anonymous>' call
            tmp = tmp1_run.z1j(numeratorValue, tmp1_run.f1j(1, tmp1_run.l1k(denominatorValue)));
          } else {
            if (astNode instanceof UnaryMinus) {
              var valueWithoutMinus = getValueFromASTNode(_this__u8e3s4, generatorList, astNode.u1q_1);
              // Inline function 'kotlin.run' call
              // Inline function 'kotlin.contracts.contract' call
              // Inline function 'com.github.shwaka.kohomology.dg.getValueFromASTNode.<anonymous>' call
              tmp = _this__u8e3s4.g1g().h1k(valueWithoutMinus);
            } else {
              if (astNode instanceof Power) {
                var baseValue = getValueFromASTNode(_this__u8e3s4, generatorList, astNode.s1q_1);
                // Inline function 'kotlin.run' call
                // Inline function 'kotlin.contracts.contract' call
                // Inline function 'com.github.shwaka.kohomology.dg.getValueFromASTNode.<anonymous>' call
                tmp = _this__u8e3s4.g1g().k1k(baseValue, astNode.t1q_1);
              } else {
                if (astNode instanceof Multiply) {
                  var leftValue = getValueFromASTNode(_this__u8e3s4, generatorList, astNode.q1q_1);
                  var rightValue = getValueFromASTNode(_this__u8e3s4, generatorList, astNode.r1q_1);
                  // Inline function 'kotlin.run' call
                  // Inline function 'kotlin.contracts.contract' call
                  // Inline function 'com.github.shwaka.kohomology.dg.getValueFromASTNode.<anonymous>' call
                  tmp = _this__u8e3s4.g1g().a1k(leftValue, rightValue);
                } else {
                  if (astNode instanceof Subtract) {
                    var leftValue_0 = getValueFromASTNode(_this__u8e3s4, generatorList, astNode.o1q_1);
                    var rightValue_0 = getValueFromASTNode(_this__u8e3s4, generatorList, astNode.p1q_1);
                    // Inline function 'kotlin.run' call
                    // Inline function 'kotlin.contracts.contract' call
                    // Inline function 'com.github.shwaka.kohomology.dg.getValueFromASTNode.<anonymous>' call
                    tmp = _this__u8e3s4.g1g().l1j(leftValue_0, rightValue_0);
                  } else {
                    if (astNode instanceof Sum) {
                      var leftValue_1 = getValueFromASTNode(_this__u8e3s4, generatorList, astNode.m1q_1);
                      var rightValue_1 = getValueFromASTNode(_this__u8e3s4, generatorList, astNode.n1q_1);
                      // Inline function 'kotlin.run' call
                      // Inline function 'kotlin.contracts.contract' call
                      // Inline function 'com.github.shwaka.kohomology.dg.getValueFromASTNode.<anonymous>' call
                      tmp = _this__u8e3s4.g1g().p1j(leftValue_1, rightValue_1);
                    } else {
                      noWhenBranchMatchedException();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return tmp;
  }
  function GAlgebraContextImpl(gAlgebra) {
    this.z1q_1 = gAlgebra;
    this.a1r_1 = Companion_getInstance_23().b1r(gAlgebra);
  }
  protoOf(GAlgebraContextImpl).i1k = function () {
    return this.z1q_1;
  };
  protoOf(GAlgebraContextImpl).j1h = function () {
    return this.a1r_1.j1h();
  };
  protoOf(GAlgebraContextImpl).z1i = function () {
    return this.a1r_1.z1i();
  };
  protoOf(GAlgebraContextImpl).a1j = function () {
    return this.a1r_1.a1j();
  };
  protoOf(GAlgebraContextImpl).b1h = function () {
    return this.a1r_1.b1h();
  };
  protoOf(GAlgebraContextImpl).b1j = function () {
    return this.a1r_1.b1j();
  };
  protoOf(GAlgebraContextImpl).c1j = function () {
    return this.a1r_1.c1j();
  };
  protoOf(GAlgebraContextImpl).z1h = function () {
    return this.a1r_1.z1h();
  };
  protoOf(GAlgebraContextImpl).e1j = function (_this__u8e3s4, other) {
    return this.a1r_1.e1j(_this__u8e3s4, other);
  };
  protoOf(GAlgebraContextImpl).f1j = function (_this__u8e3s4, other) {
    return this.a1r_1.f1j(_this__u8e3s4, other);
  };
  protoOf(GAlgebraContextImpl).g1j = function (_this__u8e3s4, ind) {
    return this.a1r_1.g1j(_this__u8e3s4, ind);
  };
  protoOf(GAlgebraContextImpl).h1j = function (_this__u8e3s4) {
    return this.a1r_1.h1j(_this__u8e3s4);
  };
  protoOf(GAlgebraContextImpl).i1j = function (_this__u8e3s4, other) {
    return this.a1r_1.i1j(_this__u8e3s4, other);
  };
  protoOf(GAlgebraContextImpl).j1j = function (_this__u8e3s4, other) {
    return this.a1r_1.j1j(_this__u8e3s4, other);
  };
  protoOf(GAlgebraContextImpl).k1j = function (_this__u8e3s4, other) {
    return this.a1r_1.k1j(_this__u8e3s4, other);
  };
  protoOf(GAlgebraContextImpl).l1j = function (_this__u8e3s4, other) {
    return this.a1r_1.l1j(_this__u8e3s4, other);
  };
  protoOf(GAlgebraContextImpl).m1j = function (_this__u8e3s4, other) {
    return this.a1r_1.m1j(_this__u8e3s4, other);
  };
  protoOf(GAlgebraContextImpl).n1j = function (_this__u8e3s4, other) {
    return this.a1r_1.n1j(_this__u8e3s4, other);
  };
  protoOf(GAlgebraContextImpl).o1j = function (_this__u8e3s4, other) {
    return this.a1r_1.o1j(_this__u8e3s4, other);
  };
  protoOf(GAlgebraContextImpl).p1j = function (_this__u8e3s4, other) {
    return this.a1r_1.p1j(_this__u8e3s4, other);
  };
  protoOf(GAlgebraContextImpl).q1j = function (_this__u8e3s4) {
    return this.a1r_1.q1j(_this__u8e3s4);
  };
  protoOf(GAlgebraContextImpl).r1j = function (_this__u8e3s4, degree) {
    return this.a1r_1.r1j(_this__u8e3s4, degree);
  };
  protoOf(GAlgebraContextImpl).s1j = function (_this__u8e3s4, other) {
    return this.a1r_1.s1j(_this__u8e3s4, other);
  };
  protoOf(GAlgebraContextImpl).t1j = function (_this__u8e3s4, numVector) {
    return this.a1r_1.t1j(_this__u8e3s4, numVector);
  };
  protoOf(GAlgebraContextImpl).u1j = function (_this__u8e3s4, gVector) {
    return this.a1r_1.u1j(_this__u8e3s4, gVector);
  };
  protoOf(GAlgebraContextImpl).v1j = function (_this__u8e3s4, scalar) {
    return this.a1r_1.v1j(_this__u8e3s4, scalar);
  };
  protoOf(GAlgebraContextImpl).w1j = function (_this__u8e3s4, scalar) {
    return this.a1r_1.w1j(_this__u8e3s4, scalar);
  };
  protoOf(GAlgebraContextImpl).x1j = function (_this__u8e3s4, other) {
    return this.a1r_1.x1j(_this__u8e3s4, other);
  };
  protoOf(GAlgebraContextImpl).y1j = function (_this__u8e3s4, sign) {
    return this.a1r_1.y1j(_this__u8e3s4, sign);
  };
  protoOf(GAlgebraContextImpl).z1j = function (_this__u8e3s4, scalar) {
    return this.a1r_1.z1j(_this__u8e3s4, scalar);
  };
  protoOf(GAlgebraContextImpl).a1k = function (_this__u8e3s4, other) {
    return this.a1r_1.a1k(_this__u8e3s4, other);
  };
  protoOf(GAlgebraContextImpl).b1k = function (_this__u8e3s4, gVector) {
    return this.a1r_1.b1k(_this__u8e3s4, gVector);
  };
  protoOf(GAlgebraContextImpl).c1k = function (_this__u8e3s4, gVector) {
    return this.a1r_1.c1k(_this__u8e3s4, gVector);
  };
  protoOf(GAlgebraContextImpl).d1k = function (_this__u8e3s4) {
    return this.a1r_1.d1k(_this__u8e3s4);
  };
  protoOf(GAlgebraContextImpl).e1k = function (_this__u8e3s4) {
    return this.a1r_1.e1k(_this__u8e3s4);
  };
  protoOf(GAlgebraContextImpl).f1k = function (_this__u8e3s4) {
    return this.a1r_1.f1k(_this__u8e3s4);
  };
  protoOf(GAlgebraContextImpl).g1k = function (_this__u8e3s4) {
    return this.a1r_1.g1k(_this__u8e3s4);
  };
  protoOf(GAlgebraContextImpl).h1k = function (_this__u8e3s4) {
    return this.a1r_1.h1k(_this__u8e3s4);
  };
  function Companion_16() {
    Companion_instance_16 = this;
  }
  protoOf(Companion_16).c1r = function (source, target, matrixSpace, name, getGVectors) {
    var getLinearMap = Companion_getInstance_21().d1r(source, target, 0, matrixSpace, getGVectors);
    return new GAlgebraMapImpl(source, target, matrixSpace, name, getLinearMap);
  };
  var Companion_instance_16;
  function Companion_getInstance_17() {
    if (Companion_instance_16 == null)
      new Companion_16();
    return Companion_instance_16;
  }
  function GAlgebraMapImpl(source, target, matrixSpace, name, getLinearMap) {
    this.e1r_1 = source;
    this.f1r_1 = target;
    this.g1r_1 = Companion_getInstance_21().h1r(source, target, 0, matrixSpace, name, getLinearMap);
  }
  protoOf(GAlgebraMapImpl).s1k = function () {
    return this.e1r_1;
  };
  protoOf(GAlgebraMapImpl).t1k = function () {
    return this.f1r_1;
  };
  protoOf(GAlgebraMapImpl).u1k = function () {
    return this.g1r_1.u1k();
  };
  protoOf(GAlgebraMapImpl).c1h = function () {
    return this.g1r_1.c1h();
  };
  protoOf(GAlgebraMapImpl).y1g = function () {
    return this.g1r_1.y1g();
  };
  protoOf(GAlgebraMapImpl).d1h = function () {
    return this.g1r_1.d1h();
  };
  protoOf(GAlgebraMapImpl).w1k = function () {
    return this.g1r_1.w1k();
  };
  protoOf(GAlgebraMapImpl).x1k = function (gVector) {
    return this.g1r_1.x1k(gVector);
  };
  protoOf(GAlgebraMapImpl).g1h = function (degree) {
    return this.g1r_1.g1h(degree);
  };
  protoOf(GAlgebraMapImpl).y1k = function () {
    return this.g1r_1.y1k();
  };
  protoOf(GAlgebraMapImpl).z1k = function (sourceQuot, targetQuot) {
    return this.g1r_1.z1k(sourceQuot, targetQuot);
  };
  protoOf(GAlgebraMapImpl).a1l = function (sourceSub, targetSub) {
    return this.g1r_1.a1l(sourceSub, targetSub);
  };
  protoOf(GAlgebraMapImpl).b1l = function (sourceSubQuot, targetSubQuot) {
    return this.g1r_1.b1l(sourceSubQuot, targetSubQuot);
  };
  protoOf(GAlgebraMapImpl).s1g = function (gVector) {
    return this.g1r_1.s1g(gVector);
  };
  protoOf(GAlgebraMapImpl).c1l = function () {
    return this.g1r_1.c1l();
  };
  function GBilinearMap_init_$Init$(matrixSpace, source1, source2, target, degree, name, getBilinearMap, $this) {
    GBilinearMap.call($this, matrixSpace, source1, source2, target, source1.c1h().bi(degree), name, getBilinearMap);
    return $this;
  }
  function GBilinearMap_init_$Create$(matrixSpace, source1, source2, target, degree, name, getBilinearMap) {
    return GBilinearMap_init_$Init$(matrixSpace, source1, source2, target, degree, name, getBilinearMap, objectCreate(protoOf(GBilinearMap)));
  }
  function Companion_17() {
    Companion_instance_17 = this;
  }
  var Companion_instance_17;
  function Companion_getInstance_18() {
    if (Companion_instance_17 == null)
      new Companion_17();
    return Companion_instance_17;
  }
  function GBilinearMap$induce$lambda(this$0, $source1Quot, $source2Quot, $targetQuot) {
    return function (p, q) {
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.q1n_1.g1g();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.GBilinearMap.induce.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.i1g(p, q);
      tmp$ret$1 = tmp$ret$0;
      var pPlusQ = tmp$ret$1;
      return this$0.i1r(p, q).j1r($source1Quot.g1h(p), $source2Quot.g1h(q), $targetQuot.g1h(pPlusQ));
    };
  }
  function GBilinearMap$induce$lambda_0(this$0, $source1SubQuot, $source2SubQuot, $targetSubQuot) {
    return function (p, q) {
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.q1n_1.g1g();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.GBilinearMap.induce.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.i1g(p, q);
      tmp$ret$1 = tmp$ret$0;
      var pPlusQ = tmp$ret$1;
      return this$0.i1r(p, q).k1r($source1SubQuot.g1h(p), $source2SubQuot.g1h(q), $targetSubQuot.g1h(pPlusQ));
    };
  }
  function GBilinearMap$image$lambda(this$0, $source1Sub, $source2Sub) {
    return function (targetDegree) {
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.q1n_1.g1g();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.GBilinearMap.image.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.l1r(targetDegree, this$0.m1n_1);
      tmp$ret$1 = tmp$ret$0;
      var sourceDegree = tmp$ret$1;
      var degreePairList = Companion_getInstance_0().d1g(this$0.q1n_1, sourceDegree, $source1Sub.i1h(), $source2Sub.i1h());
      var tmp$ret$4;
      // Inline function 'kotlin.collections.map' call
      var tmp$ret$3;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(degreePairList, 10));
      var tmp0_iterator = degreePairList.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$2;
        // Inline function 'com.github.shwaka.kohomology.dg.GBilinearMap.image.<anonymous>.<anonymous>' call
        var p = item.j3();
        var q = item.k3();
        tmp$ret$2 = this$0.i1r(p, q).m1r($source1Sub.g1h(p), $source2Sub.g1h(q)).n1r();
        tmp0_mapTo.a(tmp$ret$2);
      }
      tmp$ret$3 = tmp0_mapTo;
      tmp$ret$4 = tmp$ret$3;
      var generator = flatten(tmp$ret$4);
      return Companion_getInstance_82().o1r(this$0.i1n_1, this$0.l1n_1.g1h(targetDegree), generator);
    };
  }
  function GBilinearMap(matrixSpace, source1, source2, target, degree, name, getBilinearMap) {
    Companion_getInstance_18();
    this.i1n_1 = matrixSpace;
    this.j1n_1 = source1;
    this.k1n_1 = source2;
    this.l1n_1 = target;
    this.m1n_1 = degree;
    this.n1n_1 = name;
    this.o1n_1 = getBilinearMap;
    var tmp = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp.p1n_1 = LinkedHashMap_init_$Create$();
    this.q1n_1 = this.j1n_1.c1h();
  }
  protoOf(GBilinearMap).i1r = function (p, q) {
    // Inline function 'kotlin.collections.getOrPut' call
    var tmp0_getOrPut = this.p1n_1;
    var tmp1_getOrPut = new Pair(p, q);
    var value = tmp0_getOrPut.u2(tmp1_getOrPut);
    var tmp;
    if (value == null) {
      // Inline function 'com.github.shwaka.kohomology.dg.GBilinearMap.get.<anonymous>' call
      var answer = this.o1n_1(p, q);
      tmp0_getOrPut.z3(tmp1_getOrPut, answer);
      tmp = answer;
    } else {
      tmp = value;
    }
    return tmp;
  };
  protoOf(GBilinearMap).p1r = function (gVector1, gVector2) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!equals(gVector1.b1o_1.h1h(), this.j1n_1.h1h())) {
      // Inline function 'com.github.shwaka.kohomology.dg.GBilinearMap.invoke.<anonymous>' call
      var message = 'Cannot compute the value of the bilinear map ' + this + '; ' + ('the first argument ' + gVector1 + ' should be an element of ' + this.j1n_1);
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!equals(gVector2.b1o_1.h1h(), this.k1n_1.h1h())) {
      // Inline function 'com.github.shwaka.kohomology.dg.GBilinearMap.invoke.<anonymous>' call
      var message_0 = 'Cannot compute the value of the bilinear map ' + this + '; ' + ('the second argument ' + gVector2 + ' should be an element of ' + this.k1n_1);
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
    var bilinearMap = this.i1r(gVector1.a1o_1, gVector2.a1o_1);
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!equals(gVector1.z1n_1.r1r_1, bilinearMap.s1r())) {
      // Inline function 'com.github.shwaka.kohomology.dg.GBilinearMap.invoke.<anonymous>' call
      var message_1 = 'Graded bilinear map contains a bug: ' + ('gVector1.vector is an element of ' + gVector1.z1n_1.r1r_1 + ', ') + ('but bilinearMap.source1 is ' + bilinearMap.s1r());
      throw IllegalArgumentException_init_$Create$(toString(message_1));
    }
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!equals(gVector2.z1n_1.r1r_1, bilinearMap.t1r())) {
      // Inline function 'com.github.shwaka.kohomology.dg.GBilinearMap.invoke.<anonymous>' call
      var message_2 = 'Graded bilinear map contains a bug: ' + ('gVector2.vector is an element of ' + gVector2.z1n_1.r1r_1 + ', ') + ('but bilinearMap.source2 is ' + bilinearMap.t1r());
      throw IllegalArgumentException_init_$Create$(toString(message_2));
    }
    var newVector = bilinearMap.u1r(gVector1.z1n_1, gVector2.z1n_1);
    // Inline function 'kotlin.run' call
    var tmp4_run = this.q1n_1.g1g();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.dg.GBilinearMap.invoke.<anonymous>' call
    var newDegree = tmp4_run.i1g(tmp4_run.i1g(gVector1.a1o_1, gVector2.a1o_1), this.m1n_1);
    return this.l1n_1.k1h(newVector, newDegree);
  };
  protoOf(GBilinearMap).j1q = function (source1Quot, source2Quot, targetQuot) {
    return new GBilinearMap(this.i1n_1, source1Quot, source2Quot, targetQuot, this.m1n_1, this.n1n_1, GBilinearMap$induce$lambda(this, source1Quot, source2Quot, targetQuot));
  };
  protoOf(GBilinearMap).r1n = function (source1SubQuot, source2SubQuot, targetSubQuot) {
    return new GBilinearMap(this.i1n_1, source1SubQuot, source2SubQuot, targetSubQuot, this.m1n_1, this.n1n_1, GBilinearMap$induce$lambda_0(this, source1SubQuot, source2SubQuot, targetSubQuot));
  };
  protoOf(GBilinearMap).v1r = function (source1Sub, source2Sub) {
    var tmp = this.q1n_1;
    if (!isInterface(tmp, AugmentedDegreeGroup)) {
      throw UnsupportedOperationException_init_$Create$('GBilinearMap.image can be computed only when its degreeGroup is an instance of AugmentedDegreeGroup');
    }
    var tmp_0 = Companion_getInstance_31();
    var tmp_1 = 'Im(' + this.n1n_1;
    return tmp_0.w1r(this.i1n_1, this.l1n_1, tmp_1, VOID, GBilinearMap$image$lambda(this, source1Sub, source2Sub));
  };
  protoOf(GBilinearMap).g1q = function (source1Sub, source2Sub, $super) {
    source1Sub = source1Sub === VOID ? asSubGVectorSpace(this.j1n_1, this.i1n_1) : source1Sub;
    source2Sub = source2Sub === VOID ? asSubGVectorSpace(this.k1n_1, this.i1n_1) : source2Sub;
    return $super === VOID ? this.v1r(source1Sub, source2Sub) : $super.v1r.call(this, source1Sub, source2Sub);
  };
  protoOf(GBilinearMap).toString = function () {
    return this.n1n_1;
  };
  function GLieAlgebra$Companion$invoke$lambda(it) {
    return Companion_getInstance_71().x1r(it);
  }
  function GLieAlgebra$Companion$invoke$lambda_0($getMultiplication) {
    return function (p, q) {
      return $getMultiplication(p, q);
    };
  }
  function Companion_18() {
    Companion_instance_18 = this;
  }
  protoOf(Companion_18).y1r = function (matrixSpace, degreeGroup, name, getVectorSpace, getMultiplication, getInternalPrintConfig, listDegreesForAugmentedDegree, boundedness) {
    var gVectorSpace = Companion_getInstance_24().z1r(matrixSpace.b1h(), degreeGroup, name, getInternalPrintConfig, listDegreesForAugmentedDegree, boundedness, getVectorSpace);
    var bilinearMapName = 'LieBracket(' + name + ')';
    var multiplication = GBilinearMap_init_$Create$(matrixSpace, gVectorSpace, gVectorSpace, gVectorSpace, 0, bilinearMapName, GLieAlgebra$Companion$invoke$lambda_0(getMultiplication));
    return new GLieAlgebraImpl(matrixSpace, gVectorSpace, multiplication);
  };
  protoOf(Companion_18).a1s = function (matrixSpace, degreeGroup, name, getVectorSpace, getMultiplication, getInternalPrintConfig, listDegreesForAugmentedDegree, boundedness, $super) {
    var tmp;
    if (getInternalPrintConfig === VOID) {
      tmp = GLieAlgebra$Companion$invoke$lambda;
    } else {
      tmp = getInternalPrintConfig;
    }
    getInternalPrintConfig = tmp;
    listDegreesForAugmentedDegree = listDegreesForAugmentedDegree === VOID ? null : listDegreesForAugmentedDegree;
    boundedness = boundedness === VOID ? new Boundedness() : boundedness;
    return $super === VOID ? this.y1r(matrixSpace, degreeGroup, name, getVectorSpace, getMultiplication, getInternalPrintConfig, listDegreesForAugmentedDegree, boundedness) : $super.y1r.call(this, matrixSpace, degreeGroup, name, getVectorSpace, getMultiplication, getInternalPrintConfig, listDegreesForAugmentedDegree, boundedness);
  };
  var Companion_instance_18;
  function Companion_getInstance_19() {
    if (Companion_instance_18 == null)
      new Companion_18();
    return Companion_instance_18;
  }
  function Companion_19() {
    Companion_instance_19 = this;
  }
  protoOf(Companion_19).b1s = function (gLieAlgebra) {
    return new GLieAlgebraContextImpl(gLieAlgebra);
  };
  var Companion_instance_19;
  function Companion_getInstance_20() {
    if (Companion_instance_19 == null)
      new Companion_19();
    return Companion_instance_19;
  }
  function GLieAlgebraContext$ad$lambda(this$0, $gVector) {
    return function (degree) {
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = this$0.u1m().n1h(degree);
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var tmp0_iterator = tmp0_map.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.dg.GLieAlgebraContext.ad.<anonymous>.<anonymous>' call
        tmp$ret$0 = this$0.x1j($gVector, item);
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      return tmp$ret$2;
    };
  }
  function GLieAlgebraContext() {
  }
  function GLieAlgebraImpl(matrixSpace, gVectorSpace, multiplication) {
    this.c1s_1 = matrixSpace;
    this.d1s_1 = multiplication;
    this.e1s_1 = gVectorSpace;
    this.f1s_1 = Companion_getInstance_20().b1s(this);
    this.g1s_1 = this;
  }
  protoOf(GLieAlgebraImpl).y1g = function () {
    return this.c1s_1;
  };
  protoOf(GLieAlgebraImpl).n1g = function () {
    return this.d1s_1;
  };
  protoOf(GLieAlgebraImpl).i1h = function () {
    return this.e1s_1.i1h();
  };
  protoOf(GLieAlgebraImpl).c1h = function () {
    return this.e1s_1.c1h();
  };
  protoOf(GLieAlgebraImpl).j1h = function () {
    return this.e1s_1.j1h();
  };
  protoOf(GLieAlgebraImpl).e1h = function () {
    return this.e1s_1.e1h();
  };
  protoOf(GLieAlgebraImpl).f1h = function () {
    return this.e1s_1.f1h();
  };
  protoOf(GLieAlgebraImpl).d1h = function () {
    return this.e1s_1.d1h();
  };
  protoOf(GLieAlgebraImpl).b1h = function () {
    return this.e1s_1.b1h();
  };
  protoOf(GLieAlgebraImpl).h1h = function () {
    return this.e1s_1.h1h();
  };
  protoOf(GLieAlgebraImpl).z1h = function () {
    return this.e1s_1.z1h();
  };
  protoOf(GLieAlgebraImpl).t1h = function (a, b) {
    return this.e1s_1.t1h(a, b);
  };
  protoOf(GLieAlgebraImpl).r1h = function (gVector) {
    return this.e1s_1.r1h(gVector);
  };
  protoOf(GLieAlgebraImpl).s1h = function (gVector) {
    return this.e1s_1.s1h(gVector);
  };
  protoOf(GLieAlgebraImpl).q1h = function (gVectorOrZero, degree) {
    return this.e1s_1.q1h(gVectorOrZero, degree);
  };
  protoOf(GLieAlgebraImpl).y1h = function (a, b) {
    return this.e1s_1.y1h(a, b);
  };
  protoOf(GLieAlgebraImpl).m1h = function (basisName, degree) {
    return this.e1s_1.m1h(basisName, degree);
  };
  protoOf(GLieAlgebraImpl).k1h = function (vector, degree) {
    return this.e1s_1.k1h(vector, degree);
  };
  protoOf(GLieAlgebraImpl).l1h = function (vector, degree) {
    return this.e1s_1.l1h(vector, degree);
  };
  protoOf(GLieAlgebraImpl).g1h = function (degree) {
    return this.e1s_1.g1h(degree);
  };
  protoOf(GLieAlgebraImpl).l = function (degree) {
    return this.e1s_1.l(degree);
  };
  protoOf(GLieAlgebraImpl).n1h = function (degree) {
    return this.e1s_1.n1h(degree);
  };
  protoOf(GLieAlgebraImpl).o1h = function (degree) {
    return this.e1s_1.o1h(degree);
  };
  protoOf(GLieAlgebraImpl).p1h = function (degree) {
    return this.e1s_1.p1h(degree);
  };
  protoOf(GLieAlgebraImpl).v1h = function (scalar, gVector) {
    return this.e1s_1.v1h(scalar, gVector);
  };
  protoOf(GLieAlgebraImpl).u1h = function (a, b) {
    return this.e1s_1.u1h(a, b);
  };
  protoOf(GLieAlgebraImpl).toString = function () {
    return this.e1s_1.toString();
  };
  protoOf(GLieAlgebraImpl).s1i = function (printConfig) {
    return this.e1s_1.s1i(printConfig);
  };
  protoOf(GLieAlgebraImpl).g1g = function () {
    return this.f1s_1;
  };
  function GLieAlgebraContextImpl(gLieAlgebra) {
    this.h1s_1 = gLieAlgebra;
    this.i1s_1 = Companion_getInstance_23().b1r(gLieAlgebra);
  }
  protoOf(GLieAlgebraContextImpl).u1m = function () {
    return this.h1s_1;
  };
  protoOf(GLieAlgebraContextImpl).j1h = function () {
    return this.i1s_1.j1h();
  };
  protoOf(GLieAlgebraContextImpl).z1i = function () {
    return this.i1s_1.z1i();
  };
  protoOf(GLieAlgebraContextImpl).a1j = function () {
    return this.i1s_1.a1j();
  };
  protoOf(GLieAlgebraContextImpl).b1h = function () {
    return this.i1s_1.b1h();
  };
  protoOf(GLieAlgebraContextImpl).b1j = function () {
    return this.i1s_1.b1j();
  };
  protoOf(GLieAlgebraContextImpl).c1j = function () {
    return this.i1s_1.c1j();
  };
  protoOf(GLieAlgebraContextImpl).z1h = function () {
    return this.i1s_1.z1h();
  };
  protoOf(GLieAlgebraContextImpl).e1j = function (_this__u8e3s4, other) {
    return this.i1s_1.e1j(_this__u8e3s4, other);
  };
  protoOf(GLieAlgebraContextImpl).f1j = function (_this__u8e3s4, other) {
    return this.i1s_1.f1j(_this__u8e3s4, other);
  };
  protoOf(GLieAlgebraContextImpl).g1j = function (_this__u8e3s4, ind) {
    return this.i1s_1.g1j(_this__u8e3s4, ind);
  };
  protoOf(GLieAlgebraContextImpl).h1j = function (_this__u8e3s4) {
    return this.i1s_1.h1j(_this__u8e3s4);
  };
  protoOf(GLieAlgebraContextImpl).i1j = function (_this__u8e3s4, other) {
    return this.i1s_1.i1j(_this__u8e3s4, other);
  };
  protoOf(GLieAlgebraContextImpl).j1j = function (_this__u8e3s4, other) {
    return this.i1s_1.j1j(_this__u8e3s4, other);
  };
  protoOf(GLieAlgebraContextImpl).k1j = function (_this__u8e3s4, other) {
    return this.i1s_1.k1j(_this__u8e3s4, other);
  };
  protoOf(GLieAlgebraContextImpl).l1j = function (_this__u8e3s4, other) {
    return this.i1s_1.l1j(_this__u8e3s4, other);
  };
  protoOf(GLieAlgebraContextImpl).m1j = function (_this__u8e3s4, other) {
    return this.i1s_1.m1j(_this__u8e3s4, other);
  };
  protoOf(GLieAlgebraContextImpl).n1j = function (_this__u8e3s4, other) {
    return this.i1s_1.n1j(_this__u8e3s4, other);
  };
  protoOf(GLieAlgebraContextImpl).o1j = function (_this__u8e3s4, other) {
    return this.i1s_1.o1j(_this__u8e3s4, other);
  };
  protoOf(GLieAlgebraContextImpl).p1j = function (_this__u8e3s4, other) {
    return this.i1s_1.p1j(_this__u8e3s4, other);
  };
  protoOf(GLieAlgebraContextImpl).q1j = function (_this__u8e3s4) {
    return this.i1s_1.q1j(_this__u8e3s4);
  };
  protoOf(GLieAlgebraContextImpl).r1j = function (_this__u8e3s4, degree) {
    return this.i1s_1.r1j(_this__u8e3s4, degree);
  };
  protoOf(GLieAlgebraContextImpl).s1j = function (_this__u8e3s4, other) {
    return this.i1s_1.s1j(_this__u8e3s4, other);
  };
  protoOf(GLieAlgebraContextImpl).t1j = function (_this__u8e3s4, numVector) {
    return this.i1s_1.t1j(_this__u8e3s4, numVector);
  };
  protoOf(GLieAlgebraContextImpl).u1j = function (_this__u8e3s4, gVector) {
    return this.i1s_1.u1j(_this__u8e3s4, gVector);
  };
  protoOf(GLieAlgebraContextImpl).v1j = function (_this__u8e3s4, scalar) {
    return this.i1s_1.v1j(_this__u8e3s4, scalar);
  };
  protoOf(GLieAlgebraContextImpl).w1j = function (_this__u8e3s4, scalar) {
    return this.i1s_1.w1j(_this__u8e3s4, scalar);
  };
  protoOf(GLieAlgebraContextImpl).x1j = function (_this__u8e3s4, other) {
    return this.i1s_1.x1j(_this__u8e3s4, other);
  };
  protoOf(GLieAlgebraContextImpl).y1j = function (_this__u8e3s4, sign) {
    return this.i1s_1.y1j(_this__u8e3s4, sign);
  };
  protoOf(GLieAlgebraContextImpl).z1j = function (_this__u8e3s4, scalar) {
    return this.i1s_1.z1j(_this__u8e3s4, scalar);
  };
  protoOf(GLieAlgebraContextImpl).a1k = function (_this__u8e3s4, other) {
    return this.i1s_1.a1k(_this__u8e3s4, other);
  };
  protoOf(GLieAlgebraContextImpl).b1k = function (_this__u8e3s4, gVector) {
    return this.i1s_1.b1k(_this__u8e3s4, gVector);
  };
  protoOf(GLieAlgebraContextImpl).c1k = function (_this__u8e3s4, gVector) {
    return this.i1s_1.c1k(_this__u8e3s4, gVector);
  };
  protoOf(GLieAlgebraContextImpl).d1k = function (_this__u8e3s4) {
    return this.i1s_1.d1k(_this__u8e3s4);
  };
  protoOf(GLieAlgebraContextImpl).e1k = function (_this__u8e3s4) {
    return this.i1s_1.e1k(_this__u8e3s4);
  };
  protoOf(GLieAlgebraContextImpl).f1k = function (_this__u8e3s4) {
    return this.i1s_1.f1k(_this__u8e3s4);
  };
  protoOf(GLieAlgebraContextImpl).g1k = function (_this__u8e3s4) {
    return this.i1s_1.g1k(_this__u8e3s4);
  };
  protoOf(GLieAlgebraContextImpl).h1k = function (_this__u8e3s4) {
    return this.i1s_1.h1k(_this__u8e3s4);
  };
  function createGetLinearMap($this, source, target, degree, matrixSpace, getGVectors) {
    if (!equals(source.c1h(), target.c1h()))
      throw IllegalArgumentException_init_$Create$('Cannot consider a linear map between graded vector spaces with different degree groups');
    return GLinearMap$Companion$createGetLinearMap$lambda(source, degree, target, getGVectors, matrixSpace);
  }
  function GLinearMap$Companion$createGetLinearMap$lambda($source, $degree, $target, $getGVectors, $matrixSpace) {
    return function (k) {
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = $source.c1h().g1g();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.Companion.createGetLinearMap.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.i1g(k, $degree);
      tmp$ret$1 = tmp$ret$0;
      var l = tmp$ret$1;
      var sourceVectorSpace = $source.g1h(k);
      var targetVectorSpace = $target.g1h(l);
      var gVectorValueList = $getGVectors(k);
      var tmp;
      var tmp$ret$2;
      $l$block_0: {
        // Inline function 'kotlin.collections.any' call
        var tmp_0;
        if (isInterface(gVectorValueList, Collection)) {
          tmp_0 = gVectorValueList.p();
        } else {
          tmp_0 = false;
        }
        if (tmp_0) {
          tmp$ret$2 = false;
          break $l$block_0;
        }
        var tmp0_iterator = gVectorValueList.f();
        while (tmp0_iterator.g()) {
          var element = tmp0_iterator.h();
          var tmp$ret$3;
          // Inline function 'com.github.shwaka.kohomology.dg.Companion.createGetLinearMap.<anonymous>.<anonymous>' call
          tmp$ret$3 = !$target.r1h(element);
          if (tmp$ret$3) {
            tmp$ret$2 = true;
            break $l$block_0;
          }
        }
        tmp$ret$2 = false;
      }
      if (tmp$ret$2) {
        throw new IllegalContextException('The value list contains an element not contained in ' + $target);
      }
      var tmp_1;
      var tmp$ret$4;
      $l$block_2: {
        // Inline function 'kotlin.collections.any' call
        var tmp_2;
        if (isInterface(gVectorValueList, Collection)) {
          tmp_2 = gVectorValueList.p();
        } else {
          tmp_2 = false;
        }
        if (tmp_2) {
          tmp$ret$4 = false;
          break $l$block_2;
        }
        var tmp0_iterator_0 = gVectorValueList.f();
        while (tmp0_iterator_0.g()) {
          var element_0 = tmp0_iterator_0.h();
          var tmp$ret$5;
          // Inline function 'com.github.shwaka.kohomology.dg.Companion.createGetLinearMap.<anonymous>.<anonymous>' call
          tmp$ret$5 = !equals(element_0.a1o_1, l);
          if (tmp$ret$5) {
            tmp$ret$4 = true;
            break $l$block_2;
          }
        }
        tmp$ret$4 = false;
      }
      if (tmp$ret$4) {
        throw IllegalArgumentException_init_$Create$('The value list contains an element with wrong degree');
      }
      var tmp_3;
      if (!(sourceVectorSpace.j1s().i() === gVectorValueList.i())) {
        throw new InvalidSizeException('The value list has incompatible size');
      }
      var tmp$ret$8;
      // Inline function 'kotlin.collections.map' call
      var tmp$ret$7;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(gVectorValueList, 10));
      var tmp0_iterator_1 = gVectorValueList.f();
      while (tmp0_iterator_1.g()) {
        var item = tmp0_iterator_1.h();
        var tmp$ret$6;
        // Inline function 'com.github.shwaka.kohomology.dg.Companion.createGetLinearMap.<anonymous>.<anonymous>' call
        tmp$ret$6 = item.z1n_1;
        tmp0_mapTo.a(tmp$ret$6);
      }
      tmp$ret$7 = tmp0_mapTo;
      tmp$ret$8 = tmp$ret$7;
      var valueList = tmp$ret$8;
      return Companion_getInstance_74().k1s(sourceVectorSpace, targetVectorSpace, $matrixSpace, valueList);
    };
  }
  function Companion_20() {
    Companion_instance_20 = this;
  }
  protoOf(Companion_20).l1s = function (source, target, degree, matrixSpace, name, getLinearMap) {
    return new GLinearMapImpl(source, target, degree, matrixSpace, name, getLinearMap);
  };
  protoOf(Companion_20).h1r = function (source, target, degree, matrixSpace, name, getLinearMap) {
    return new GLinearMapImpl(source, target, source.c1h().bi(degree), matrixSpace, name, getLinearMap);
  };
  protoOf(Companion_20).d1r = function (source, target, degree, matrixSpace, getGVectors) {
    return createGetLinearMap(this, source, target, source.c1h().bi(degree), matrixSpace, getGVectors);
  };
  protoOf(Companion_20).q1p = function (source, target, degree, matrixSpace, name, getGVectors) {
    var getLinearMap = createGetLinearMap(this, source, target, degree, matrixSpace, getGVectors);
    return Companion_getInstance_21().l1s(source, target, degree, matrixSpace, name, getLinearMap);
  };
  var Companion_instance_20;
  function Companion_getInstance_21() {
    if (Companion_instance_20 == null)
      new Companion_20();
    return Companion_instance_20;
  }
  function GLinearMap$kernel$lambda(this$0) {
    return function (degree) {
      return this$0.g1h(degree).c1l();
    };
  }
  function GLinearMap$image$lambda(this$0) {
    return function (degree) {
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.c1h().g1g();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.GLinearMap.image.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.l1r(degree, this$0.u1k());
      tmp$ret$1 = tmp$ret$0;
      var sourceDegree = tmp$ret$1;
      return this$0.g1h(sourceDegree).y1k();
    };
  }
  function GLinearMap$induce$lambda(this$0, $gLinearMapDegree, $sourceSub, $targetSub) {
    return function (degree) {
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.c1h().g1g();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.GLinearMap.induce.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.i1g(degree, $gLinearMapDegree);
      tmp$ret$1 = tmp$ret$0;
      var targetDegree = tmp$ret$1;
      return this$0.g1h(degree).m1s($sourceSub.g1h(degree), $targetSub.g1h(targetDegree));
    };
  }
  function GLinearMap$induce$lambda_0(this$0, $gLinearMapDegree, $sourceQuot, $targetQuot) {
    return function (degree) {
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.c1h().g1g();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.GLinearMap.induce.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.i1g(degree, $gLinearMapDegree);
      tmp$ret$1 = tmp$ret$0;
      var targetDegree = tmp$ret$1;
      return this$0.g1h(degree).n1s($sourceQuot.g1h(degree), $targetQuot.g1h(targetDegree));
    };
  }
  function GLinearMap$induce$lambda_1(this$0, $gLinearMapDegree, $sourceSubQuot, $targetSubQuot) {
    return function (degree) {
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.c1h().g1g();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.GLinearMap.induce.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.i1g(degree, $gLinearMapDegree);
      tmp$ret$1 = tmp$ret$0;
      var targetDegree = tmp$ret$1;
      return this$0.g1h(degree).o1s($sourceSubQuot.g1h(degree), $targetSubQuot.g1h(targetDegree));
    };
  }
  function GLinearMap() {
  }
  function GLinearMapImpl(source, target, degree, matrixSpace, name, getLinearMap) {
    this.q1s_1 = source;
    this.r1s_1 = target;
    this.s1s_1 = degree;
    this.t1s_1 = matrixSpace;
    this.u1s_1 = name;
    this.v1s_1 = getLinearMap;
    if (!equals(this.q1s_1.c1h(), this.r1s_1.c1h()))
      throw IllegalArgumentException_init_$Create$('Cannot consider a linear map between graded vector spaces with different degree groups');
    var tmp = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp.w1s_1 = LinkedHashMap_init_$Create$();
  }
  protoOf(GLinearMapImpl).s1k = function () {
    return this.q1s_1;
  };
  protoOf(GLinearMapImpl).t1k = function () {
    return this.r1s_1;
  };
  protoOf(GLinearMapImpl).u1k = function () {
    return this.s1s_1;
  };
  protoOf(GLinearMapImpl).y1g = function () {
    return this.t1s_1;
  };
  protoOf(GLinearMapImpl).d1h = function () {
    return this.u1s_1;
  };
  protoOf(GLinearMapImpl).g1h = function (degree) {
    // Inline function 'kotlin.collections.getOrPut' call
    var tmp0_getOrPut = this.w1s_1;
    var value = tmp0_getOrPut.u2(degree);
    var tmp;
    if (value == null) {
      // Inline function 'com.github.shwaka.kohomology.dg.GLinearMapImpl.get.<anonymous>' call
      var answer = this.v1s_1(degree);
      tmp0_getOrPut.z3(degree, answer);
      tmp = answer;
    } else {
      tmp = value;
    }
    return tmp;
  };
  protoOf(GLinearMapImpl).toString = function () {
    return this.u1s_1;
  };
  function GLinearMapWithDegreeChange$Companion$invoke$lambda($basisMap, $degreeMorphism, $target) {
    return function (basisName, degree) {
      var targetBasisName = $basisMap(basisName);
      var targetDegree = $degreeMorphism.x1s(degree);
      return $target.m1h(targetBasisName, targetDegree);
    };
  }
  function Companion_21() {
    Companion_instance_21 = this;
  }
  protoOf(Companion_21).y1s = function (source, target, degreeMorphism, matrixSpace, name, basisMap) {
    return new GLinearMapWithDegreeChange(source, target, degreeMorphism, matrixSpace, name, GLinearMapWithDegreeChange$Companion$invoke$lambda(basisMap, degreeMorphism, target));
  };
  var Companion_instance_21;
  function Companion_getInstance_22() {
    if (Companion_instance_21 == null)
      new Companion_21();
    return Companion_instance_21;
  }
  function GLinearMapWithDegreeChange(source, target, degreeMorphism, matrixSpace, name, getValueOnBasis) {
    Companion_getInstance_22();
    this.z1s_1 = source;
    this.a1t_1 = target;
    this.b1t_1 = degreeMorphism;
    this.c1t_1 = matrixSpace;
    this.d1t_1 = name;
    this.e1t_1 = getValueOnBasis;
  }
  protoOf(GLinearMapWithDegreeChange).f1t = function (gVector) {
    if (!this.z1s_1.r1h(gVector))
      throw new IllegalContextException('Invalid graded vector is given as an argument for a graded linear map with degree change');
    var targetDegree = this.b1t_1.x1s(gVector.a1o_1);
    // Inline function 'kotlin.run' call
    var tmp0_run = this.a1t_1.g1g();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.dg.GLinearMapWithDegreeChange.invoke.<anonymous>' call
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = toList(gVector.z1n_1.g1t());
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.GLinearMapWithDegreeChange.invoke.<anonymous>.<anonymous>' call
      var basisName = item.j3();
      var coeff = item.k3();
      tmp$ret$0 = tmp0_run.w1j(this.e1t_1(basisName, gVector.a1o_1), coeff);
      tmp0_mapTo.a(tmp$ret$0);
    }
    return tmp0_run.r1j(tmp0_mapTo, targetDegree);
  };
  protoOf(GLinearMapWithDegreeChange).toString = function () {
    return this.d1t_1;
  };
  function GMagma() {
  }
  function Companion_22() {
    Companion_instance_22 = this;
  }
  protoOf(Companion_22).b1r = function (gMagma) {
    return new GMagmaContextImpl(gMagma);
  };
  var Companion_instance_22;
  function Companion_getInstance_23() {
    if (Companion_instance_22 == null)
      new Companion_22();
    return Companion_instance_22;
  }
  function GMagmaContext() {
  }
  function GMagmaContextImpl(gMagma) {
    this.h1t_1 = gMagma;
    this.i1t_1 = Companion_getInstance_25().n1p(gMagma);
  }
  protoOf(GMagmaContextImpl).z1i = function () {
    return this.h1t_1;
  };
  protoOf(GMagmaContextImpl).j1h = function () {
    return this.i1t_1.j1h();
  };
  protoOf(GMagmaContextImpl).a1j = function () {
    return this.i1t_1.a1j();
  };
  protoOf(GMagmaContextImpl).b1h = function () {
    return this.i1t_1.b1h();
  };
  protoOf(GMagmaContextImpl).b1j = function () {
    return this.i1t_1.b1j();
  };
  protoOf(GMagmaContextImpl).c1j = function () {
    return this.i1t_1.c1j();
  };
  protoOf(GMagmaContextImpl).z1h = function () {
    return this.i1t_1.z1h();
  };
  protoOf(GMagmaContextImpl).e1j = function (_this__u8e3s4, other) {
    return this.i1t_1.e1j(_this__u8e3s4, other);
  };
  protoOf(GMagmaContextImpl).f1j = function (_this__u8e3s4, other) {
    return this.i1t_1.f1j(_this__u8e3s4, other);
  };
  protoOf(GMagmaContextImpl).g1j = function (_this__u8e3s4, ind) {
    return this.i1t_1.g1j(_this__u8e3s4, ind);
  };
  protoOf(GMagmaContextImpl).h1j = function (_this__u8e3s4) {
    return this.i1t_1.h1j(_this__u8e3s4);
  };
  protoOf(GMagmaContextImpl).i1j = function (_this__u8e3s4, other) {
    return this.i1t_1.i1j(_this__u8e3s4, other);
  };
  protoOf(GMagmaContextImpl).j1j = function (_this__u8e3s4, other) {
    return this.i1t_1.j1j(_this__u8e3s4, other);
  };
  protoOf(GMagmaContextImpl).k1j = function (_this__u8e3s4, other) {
    return this.i1t_1.k1j(_this__u8e3s4, other);
  };
  protoOf(GMagmaContextImpl).l1j = function (_this__u8e3s4, other) {
    return this.i1t_1.l1j(_this__u8e3s4, other);
  };
  protoOf(GMagmaContextImpl).m1j = function (_this__u8e3s4, other) {
    return this.i1t_1.m1j(_this__u8e3s4, other);
  };
  protoOf(GMagmaContextImpl).n1j = function (_this__u8e3s4, other) {
    return this.i1t_1.n1j(_this__u8e3s4, other);
  };
  protoOf(GMagmaContextImpl).o1j = function (_this__u8e3s4, other) {
    return this.i1t_1.o1j(_this__u8e3s4, other);
  };
  protoOf(GMagmaContextImpl).p1j = function (_this__u8e3s4, other) {
    return this.i1t_1.p1j(_this__u8e3s4, other);
  };
  protoOf(GMagmaContextImpl).q1j = function (_this__u8e3s4) {
    return this.i1t_1.q1j(_this__u8e3s4);
  };
  protoOf(GMagmaContextImpl).r1j = function (_this__u8e3s4, degree) {
    return this.i1t_1.r1j(_this__u8e3s4, degree);
  };
  protoOf(GMagmaContextImpl).s1j = function (_this__u8e3s4, other) {
    return this.i1t_1.s1j(_this__u8e3s4, other);
  };
  protoOf(GMagmaContextImpl).t1j = function (_this__u8e3s4, numVector) {
    return this.i1t_1.t1j(_this__u8e3s4, numVector);
  };
  protoOf(GMagmaContextImpl).u1j = function (_this__u8e3s4, gVector) {
    return this.i1t_1.u1j(_this__u8e3s4, gVector);
  };
  protoOf(GMagmaContextImpl).v1j = function (_this__u8e3s4, scalar) {
    return this.i1t_1.v1j(_this__u8e3s4, scalar);
  };
  protoOf(GMagmaContextImpl).w1j = function (_this__u8e3s4, scalar) {
    return this.i1t_1.w1j(_this__u8e3s4, scalar);
  };
  protoOf(GMagmaContextImpl).y1j = function (_this__u8e3s4, sign) {
    return this.i1t_1.y1j(_this__u8e3s4, sign);
  };
  protoOf(GMagmaContextImpl).z1j = function (_this__u8e3s4, scalar) {
    return this.i1t_1.z1j(_this__u8e3s4, scalar);
  };
  protoOf(GMagmaContextImpl).b1k = function (_this__u8e3s4, gVector) {
    return this.i1t_1.b1k(_this__u8e3s4, gVector);
  };
  protoOf(GMagmaContextImpl).c1k = function (_this__u8e3s4, gVector) {
    return this.i1t_1.c1k(_this__u8e3s4, gVector);
  };
  protoOf(GMagmaContextImpl).d1k = function (_this__u8e3s4) {
    return this.i1t_1.d1k(_this__u8e3s4);
  };
  protoOf(GMagmaContextImpl).e1k = function (_this__u8e3s4) {
    return this.i1t_1.e1k(_this__u8e3s4);
  };
  protoOf(GMagmaContextImpl).f1k = function (_this__u8e3s4) {
    return this.i1t_1.f1k(_this__u8e3s4);
  };
  protoOf(GMagmaContextImpl).g1k = function (_this__u8e3s4) {
    return this.i1t_1.g1k(_this__u8e3s4);
  };
  protoOf(GMagmaContextImpl).h1k = function (_this__u8e3s4) {
    return this.i1t_1.h1k(_this__u8e3s4);
  };
  function GVectorOrZero() {
  }
  function GVector(vector, degree, gVectorSpace) {
    this.z1n_1 = vector;
    this.a1o_1 = degree;
    this.b1o_1 = gVectorSpace;
  }
  protoOf(GVector).a1j = function () {
    return this.b1o_1;
  };
  protoOf(GVector).tj = function () {
    return this.z1n_1.tj();
  };
  protoOf(GVector).equals = function (other) {
    if (this === other)
      return true;
    if (other == null)
      return false;
    if (!getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (!(other instanceof GVector))
      THROW_CCE();
    if (!this.z1n_1.equals(other.z1n_1))
      return false;
    if (!equals(this.a1o_1, other.a1o_1))
      return false;
    if (!equals(this.b1o_1.h1h(), other.b1o_1.h1h()))
      return false;
    return true;
  };
  protoOf(GVector).hashCode = function () {
    var result = this.z1n_1.hashCode();
    result = imul(31, result) + hashCode(this.a1o_1) | 0;
    result = imul(31, result) + hashCode(this.b1o_1) | 0;
    return result;
  };
  protoOf(GVector).toString = function () {
    return this.s1i(PrintConfig_init_$Create$());
  };
  protoOf(GVector).s1i = function (printConfig) {
    var internalPrintConfig = this.b1o_1.e1h()(printConfig);
    return this.z1n_1.j1t(printConfig, internalPrintConfig);
  };
  function ZeroGVector(gVectorSpace) {
    this.k1t_1 = gVectorSpace;
  }
  protoOf(ZeroGVector).a1j = function () {
    return this.k1t_1;
  };
  protoOf(ZeroGVector).tj = function () {
    return true;
  };
  protoOf(ZeroGVector).toString = function () {
    return '0';
  };
  protoOf(ZeroGVector).hashCode = function () {
    return hashCode(this.k1t_1);
  };
  protoOf(ZeroGVector).equals = function (other) {
    if (this === other)
      return true;
    if (other == null)
      return false;
    if (!getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (!(other instanceof ZeroGVector))
      THROW_CCE();
    return equals(this.k1t_1.h1h(), other.k1t_1.h1h());
  };
  function Companion_23() {
    Companion_instance_23 = this;
  }
  protoOf(Companion_23).z1r = function (numVectorSpace, degreeGroup, name, getInternalPrintConfig, listDegreesForAugmentedDegree, boundedness, getVectorSpace) {
    return new GVectorSpaceImpl(numVectorSpace, degreeGroup, name, getInternalPrintConfig, listDegreesForAugmentedDegree, boundedness, getVectorSpace);
  };
  var Companion_instance_23;
  function Companion_getInstance_24() {
    if (Companion_instance_23 == null)
      new Companion_23();
    return Companion_instance_23;
  }
  function GVectorSpace() {
  }
  function Companion_24() {
    Companion_instance_24 = this;
  }
  protoOf(Companion_24).n1p = function (gVectorSpace) {
    return new GVectorContextImpl(gVectorSpace);
  };
  var Companion_instance_24;
  function Companion_getInstance_25() {
    if (Companion_instance_24 == null)
      new Companion_24();
    return Companion_instance_24;
  }
  function GVectorContext() {
  }
  function GVectorSpaceImpl(numVectorSpace, degreeGroup, name, getInternalPrintConfig, listDegreesForAugmentedDegree, boundedness, getVectorSpace) {
    this.s1t_1 = numVectorSpace;
    this.t1t_1 = degreeGroup;
    this.u1t_1 = name;
    this.v1t_1 = getInternalPrintConfig;
    this.w1t_1 = listDegreesForAugmentedDegree;
    this.x1t_1 = boundedness;
    this.y1t_1 = getVectorSpace;
    var tmp = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp.z1t_1 = LinkedHashMap_init_$Create$();
    this.a1u_1 = Companion_getInstance_25().n1p(this);
    this.b1u_1 = this;
    this.c1u_1 = new ZeroGVector(this);
  }
  protoOf(GVectorSpaceImpl).b1h = function () {
    return this.s1t_1;
  };
  protoOf(GVectorSpaceImpl).c1h = function () {
    return this.t1t_1;
  };
  protoOf(GVectorSpaceImpl).d1h = function () {
    return this.u1t_1;
  };
  protoOf(GVectorSpaceImpl).e1h = function () {
    return this.v1t_1;
  };
  protoOf(GVectorSpaceImpl).f1h = function () {
    return this.w1t_1;
  };
  protoOf(GVectorSpaceImpl).i1h = function () {
    return this.x1t_1;
  };
  protoOf(GVectorSpaceImpl).g1g = function () {
    return this.a1u_1;
  };
  protoOf(GVectorSpaceImpl).h1h = function () {
    return this.b1u_1;
  };
  protoOf(GVectorSpaceImpl).z1h = function () {
    return this.c1u_1;
  };
  protoOf(GVectorSpaceImpl).g1h = function (degree) {
    // Inline function 'kotlin.collections.getOrPut' call
    var tmp0_getOrPut = this.z1t_1;
    var value = tmp0_getOrPut.u2(degree);
    var tmp;
    if (value == null) {
      // Inline function 'com.github.shwaka.kohomology.dg.GVectorSpaceImpl.get.<anonymous>' call
      var answer = this.y1t_1(degree);
      tmp0_getOrPut.z3(degree, answer);
      tmp = answer;
    } else {
      tmp = value;
    }
    return tmp;
  };
  protoOf(GVectorSpaceImpl).toString = function () {
    return this.u1t_1;
  };
  protoOf(GVectorSpaceImpl).s1i = function (printConfig) {
    return this.u1t_1;
  };
  function GVectorContextImpl(gVectorSpace) {
    this.d1u_1 = gVectorSpace;
    this.e1u_1 = Companion_getInstance_57().f1u(gVectorSpace.b1h());
  }
  protoOf(GVectorContextImpl).a1j = function () {
    return this.d1u_1;
  };
  protoOf(GVectorContextImpl).j1h = function () {
    return this.e1u_1.j1h();
  };
  protoOf(GVectorContextImpl).b1h = function () {
    return this.e1u_1.b1h();
  };
  protoOf(GVectorContextImpl).b1j = function () {
    return this.e1u_1.b1j();
  };
  protoOf(GVectorContextImpl).c1j = function () {
    return this.e1u_1.c1j();
  };
  protoOf(GVectorContextImpl).e1j = function (_this__u8e3s4, other) {
    return this.e1u_1.e1j(_this__u8e3s4, other);
  };
  protoOf(GVectorContextImpl).f1j = function (_this__u8e3s4, other) {
    return this.e1u_1.f1j(_this__u8e3s4, other);
  };
  protoOf(GVectorContextImpl).g1j = function (_this__u8e3s4, ind) {
    return this.e1u_1.g1j(_this__u8e3s4, ind);
  };
  protoOf(GVectorContextImpl).h1j = function (_this__u8e3s4) {
    return this.e1u_1.h1j(_this__u8e3s4);
  };
  protoOf(GVectorContextImpl).i1j = function (_this__u8e3s4, other) {
    return this.e1u_1.i1j(_this__u8e3s4, other);
  };
  protoOf(GVectorContextImpl).j1j = function (_this__u8e3s4, other) {
    return this.e1u_1.j1j(_this__u8e3s4, other);
  };
  protoOf(GVectorContextImpl).m1j = function (_this__u8e3s4, other) {
    return this.e1u_1.m1j(_this__u8e3s4, other);
  };
  protoOf(GVectorContextImpl).n1j = function (_this__u8e3s4, other) {
    return this.e1u_1.n1j(_this__u8e3s4, other);
  };
  protoOf(GVectorContextImpl).q1j = function (_this__u8e3s4) {
    return this.e1u_1.q1j(_this__u8e3s4);
  };
  protoOf(GVectorContextImpl).s1j = function (_this__u8e3s4, other) {
    return this.e1u_1.s1j(_this__u8e3s4, other);
  };
  protoOf(GVectorContextImpl).t1j = function (_this__u8e3s4, numVector) {
    return this.e1u_1.t1j(_this__u8e3s4, numVector);
  };
  protoOf(GVectorContextImpl).v1j = function (_this__u8e3s4, scalar) {
    return this.e1u_1.v1j(_this__u8e3s4, scalar);
  };
  protoOf(GVectorContextImpl).d1k = function (_this__u8e3s4) {
    return this.e1u_1.d1k(_this__u8e3s4);
  };
  protoOf(GVectorContextImpl).e1k = function (_this__u8e3s4) {
    return this.e1u_1.e1k(_this__u8e3s4);
  };
  protoOf(GVectorContextImpl).f1k = function (_this__u8e3s4) {
    return this.e1u_1.f1k(_this__u8e3s4);
  };
  function Companion_25() {
    Companion_instance_25 = this;
  }
  protoOf(Companion_25).h1q = function (totalGAlgebra, subGVectorSpace, generatorList) {
    return new IdealImpl(totalGAlgebra, subGVectorSpace, generatorList);
  };
  var Companion_instance_25;
  function Companion_getInstance_26() {
    if (Companion_instance_25 == null)
      new Companion_25();
    return Companion_instance_25;
  }
  function idealToString(className, generatorList, printConfig) {
    var tmp;
    switch (printConfig.g1u_1.m1_1) {
      case 0:
        var generatorsString = joinToString(generatorList, ', ');
        tmp = className + '(' + generatorsString + ')';
        break;
      case 1:
        var generatorsString_0 = joinToString(generatorList, ', ', VOID, VOID, VOID, VOID, idealToString$lambda(printConfig));
        tmp = '\\mathrm{' + className + '}(' + generatorsString_0 + ')';
        break;
      case 2:
        throw UnsupportedOperationException_init_$Create$(className + ' does not support PrintType.CODE');
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function IdealImpl(totalGVectorSpace, subGVectorSpace, generatorList) {
    this.l1u_1 = totalGVectorSpace;
    this.m1u_1 = generatorList;
    this.n1u_1 = subGVectorSpace;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!equals(this.l1u_1.h1h(), subGVectorSpace.q1l().h1h())) {
      // Inline function 'com.github.shwaka.kohomology.dg.IdealImpl.<anonymous>' call
      var message = 'subGVectorSpace.totalGVectorSpace (' + subGVectorSpace.q1l() + ')' + ('must be the same as totalGVectorSpace (' + this.l1u_1 + ')');
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
  }
  protoOf(IdealImpl).q1l = function () {
    return this.l1u_1;
  };
  protoOf(IdealImpl).i1h = function () {
    return this.n1u_1.i1h();
  };
  protoOf(IdealImpl).g1g = function () {
    return this.n1u_1.g1g();
  };
  protoOf(IdealImpl).c1h = function () {
    return this.n1u_1.c1h();
  };
  protoOf(IdealImpl).j1h = function () {
    return this.n1u_1.j1h();
  };
  protoOf(IdealImpl).e1h = function () {
    return this.n1u_1.e1h();
  };
  protoOf(IdealImpl).s1l = function () {
    return this.n1u_1.s1l();
  };
  protoOf(IdealImpl).f1h = function () {
    return this.n1u_1.f1h();
  };
  protoOf(IdealImpl).y1g = function () {
    return this.n1u_1.y1g();
  };
  protoOf(IdealImpl).b1h = function () {
    return this.n1u_1.b1h();
  };
  protoOf(IdealImpl).h1h = function () {
    return this.n1u_1.h1h();
  };
  protoOf(IdealImpl).z1h = function () {
    return this.n1u_1.z1h();
  };
  protoOf(IdealImpl).t1l = function (a, b) {
    return this.n1u_1.t1h(a, b);
  };
  protoOf(IdealImpl).t1h = function (a, b) {
    return this.t1l(a, b);
  };
  protoOf(IdealImpl).v1l = function (gVector) {
    return this.n1u_1.r1h(gVector);
  };
  protoOf(IdealImpl).r1h = function (gVector) {
    return this.v1l(gVector);
  };
  protoOf(IdealImpl).w1l = function (gVector) {
    return this.n1u_1.s1h(gVector);
  };
  protoOf(IdealImpl).s1h = function (gVector) {
    return this.w1l(gVector);
  };
  protoOf(IdealImpl).x1l = function (gVectorOrZero, degree) {
    return this.n1u_1.q1h(gVectorOrZero, degree);
  };
  protoOf(IdealImpl).q1h = function (gVectorOrZero, degree) {
    return this.x1l(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(IdealImpl).y1l = function (a, b) {
    return this.n1u_1.y1h(a, b);
  };
  protoOf(IdealImpl).y1h = function (a, b) {
    return this.y1l(a, b);
  };
  protoOf(IdealImpl).z1l = function (basisName, degree) {
    return this.n1u_1.m1h(basisName, degree);
  };
  protoOf(IdealImpl).m1h = function (basisName, degree) {
    var tmp = basisName instanceof SubBasis ? basisName : THROW_CCE();
    return this.z1l(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(IdealImpl).a1m = function (vector, degree) {
    return this.n1u_1.k1h(vector, degree);
  };
  protoOf(IdealImpl).k1h = function (vector, degree) {
    return this.a1m(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(IdealImpl).b1m = function (vector, degree) {
    return this.n1u_1.l1h(vector, degree);
  };
  protoOf(IdealImpl).l1h = function (vector, degree) {
    return this.b1m(vector, degree);
  };
  protoOf(IdealImpl).g1h = function (degree) {
    return this.n1u_1.g1h(degree);
  };
  protoOf(IdealImpl).l = function (degree) {
    return this.n1u_1.l(degree);
  };
  protoOf(IdealImpl).n1h = function (degree) {
    return this.n1u_1.n1h(degree);
  };
  protoOf(IdealImpl).c1m = function (degree) {
    return this.n1u_1.c1m(degree);
  };
  protoOf(IdealImpl).o1h = function (degree) {
    return this.n1u_1.o1h(degree);
  };
  protoOf(IdealImpl).p1h = function (degree) {
    return this.n1u_1.p1h(degree);
  };
  protoOf(IdealImpl).d1m = function (scalar, gVector) {
    return this.n1u_1.v1h(scalar, gVector);
  };
  protoOf(IdealImpl).v1h = function (scalar, gVector) {
    return this.d1m(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  protoOf(IdealImpl).t1g = function (gVector) {
    return this.n1u_1.t1g(gVector);
  };
  protoOf(IdealImpl).e1m = function (a, b) {
    return this.n1u_1.u1h(a, b);
  };
  protoOf(IdealImpl).u1h = function (a, b) {
    return this.e1m(a, b);
  };
  protoOf(IdealImpl).d1h = function () {
    return this.toString();
  };
  protoOf(IdealImpl).toString = function () {
    return this.s1i(Companion_getInstance_70().f1m_1);
  };
  protoOf(IdealImpl).s1i = function (printConfig) {
    return idealToString('Ideal', this.m1u_1, printConfig);
  };
  function idealToString$lambda($printConfig) {
    return function (it) {
      return it.s1i($printConfig);
    };
  }
  function Companion_26() {
    Companion_instance_26 = this;
  }
  protoOf(Companion_26).x1g = function (totalDGAlgebra, quotGAlgebra) {
    return new QuotDGAlgebraImpl(totalDGAlgebra, quotGAlgebra);
  };
  var Companion_instance_26;
  function Companion_getInstance_27() {
    if (Companion_instance_26 == null)
      new Companion_26();
    return Companion_instance_26;
  }
  function QuotDGAlgebra() {
  }
  function QuotDGAlgebraImpl$cohomology$delegate$lambda(this$0) {
    return function () {
      var cohomologyUnit = Companion_getInstance_11().q1i(this$0.s1u_1, this$0.o1u_1.a1i());
      return Companion_getInstance_32().r1i(this$0.x1u_1, this$0.s1u_1, this$0.t1u_1, cohomologyUnit, this$0.w1u_1);
    };
  }
  function QuotDGAlgebraImpl$projection$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_8().r1k(this$0.p1u_1, this$0, this$0.o1u_1.y1n());
    };
  }
  function QuotDGAlgebraImpl(totalDGAlgebra, underlyingGAlgebra) {
    this.o1u_1 = underlyingGAlgebra;
    this.p1u_1 = totalDGAlgebra;
    this.q1u_1 = totalDGAlgebra.o1g().m1l(this.o1u_1);
    this.r1u_1 = Companion_getInstance_9().l1g(this.o1u_1, this.q1u_1);
    this.s1u_1 = this.r1u_1.m1g();
    this.t1u_1 = this.r1u_1.m1g().n1g();
    this.u1u_1 = Companion_getInstance_2().f1i(this);
    this.v1u_1 = this.o1u_1.a1i();
    this.w1u_1 = this.o1u_1.b1i();
    this.x1u_1 = this.o1u_1.y1g();
    this.y1u_1 = this.o1u_1.n1g();
    var tmp = this;
    tmp.z1u_1 = lazy(QuotDGAlgebraImpl$cohomology$delegate$lambda(this));
    var tmp_0 = this;
    tmp_0.a1v_1 = lazy(QuotDGAlgebraImpl$projection$delegate$lambda(this));
  }
  protoOf(QuotDGAlgebraImpl).i1h = function () {
    return this.o1u_1.i1h();
  };
  protoOf(QuotDGAlgebraImpl).c1h = function () {
    return this.o1u_1.c1h();
  };
  protoOf(QuotDGAlgebraImpl).j1h = function () {
    return this.o1u_1.j1h();
  };
  protoOf(QuotDGAlgebraImpl).e1h = function () {
    return this.o1u_1.e1h();
  };
  protoOf(QuotDGAlgebraImpl).f1h = function () {
    return this.o1u_1.f1h();
  };
  protoOf(QuotDGAlgebraImpl).d1h = function () {
    return this.o1u_1.d1h();
  };
  protoOf(QuotDGAlgebraImpl).b1h = function () {
    return this.o1u_1.b1h();
  };
  protoOf(QuotDGAlgebraImpl).l1o = function () {
    return this.o1u_1.l1o();
  };
  protoOf(QuotDGAlgebraImpl).h1h = function () {
    return this.o1u_1.h1h();
  };
  protoOf(QuotDGAlgebraImpl).z1h = function () {
    return this.o1u_1.z1h();
  };
  protoOf(QuotDGAlgebraImpl).b1v = function (a, b) {
    return this.o1u_1.t1h(a, b);
  };
  protoOf(QuotDGAlgebraImpl).t1h = function (a, b) {
    return this.b1v(a, b);
  };
  protoOf(QuotDGAlgebraImpl).c1v = function (gVector) {
    return this.o1u_1.r1h(gVector);
  };
  protoOf(QuotDGAlgebraImpl).r1h = function (gVector) {
    return this.c1v(gVector);
  };
  protoOf(QuotDGAlgebraImpl).d1v = function (gVector) {
    return this.o1u_1.s1h(gVector);
  };
  protoOf(QuotDGAlgebraImpl).s1h = function (gVector) {
    return this.d1v(gVector);
  };
  protoOf(QuotDGAlgebraImpl).e1v = function (gVectorOrZero, degree) {
    return this.o1u_1.q1h(gVectorOrZero, degree);
  };
  protoOf(QuotDGAlgebraImpl).q1h = function (gVectorOrZero, degree) {
    return this.e1v(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(QuotDGAlgebraImpl).f1v = function (a, b) {
    return this.o1u_1.y1h(a, b);
  };
  protoOf(QuotDGAlgebraImpl).y1h = function (a, b) {
    return this.f1v(a, b);
  };
  protoOf(QuotDGAlgebraImpl).g1v = function (basisName, degree) {
    return this.o1u_1.m1h(basisName, degree);
  };
  protoOf(QuotDGAlgebraImpl).m1h = function (basisName, degree) {
    var tmp = basisName instanceof QuotBasis ? basisName : THROW_CCE();
    return this.g1v(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(QuotDGAlgebraImpl).h1v = function (vector, degree) {
    return this.o1u_1.k1h(vector, degree);
  };
  protoOf(QuotDGAlgebraImpl).k1h = function (vector, degree) {
    return this.h1v(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(QuotDGAlgebraImpl).i1v = function (vector, degree) {
    return this.o1u_1.l1h(vector, degree);
  };
  protoOf(QuotDGAlgebraImpl).l1h = function (vector, degree) {
    return this.i1v(vector, degree);
  };
  protoOf(QuotDGAlgebraImpl).g1h = function (degree) {
    return this.o1u_1.g1h(degree);
  };
  protoOf(QuotDGAlgebraImpl).l = function (degree) {
    return this.o1u_1.l(degree);
  };
  protoOf(QuotDGAlgebraImpl).n1h = function (degree) {
    return this.o1u_1.n1h(degree);
  };
  protoOf(QuotDGAlgebraImpl).c1m = function (degree) {
    return this.o1u_1.c1m(degree);
  };
  protoOf(QuotDGAlgebraImpl).o1h = function (degree) {
    return this.o1u_1.o1h(degree);
  };
  protoOf(QuotDGAlgebraImpl).p1h = function (degree) {
    return this.o1u_1.p1h(degree);
  };
  protoOf(QuotDGAlgebraImpl).j1v = function (scalar, gVector) {
    return this.o1u_1.v1h(scalar, gVector);
  };
  protoOf(QuotDGAlgebraImpl).v1h = function (scalar, gVector) {
    return this.j1v(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  protoOf(QuotDGAlgebraImpl).k1v = function (a, b) {
    return this.o1u_1.u1h(a, b);
  };
  protoOf(QuotDGAlgebraImpl).u1h = function (a, b) {
    return this.k1v(a, b);
  };
  protoOf(QuotDGAlgebraImpl).toString = function () {
    return this.o1u_1.toString();
  };
  protoOf(QuotDGAlgebraImpl).s1i = function (printConfig) {
    return this.o1u_1.s1i(printConfig);
  };
  protoOf(QuotDGAlgebraImpl).o1g = function () {
    return this.q1u_1;
  };
  protoOf(QuotDGAlgebraImpl).g1g = function () {
    return this.u1u_1;
  };
  protoOf(QuotDGAlgebraImpl).a1i = function () {
    return this.v1u_1;
  };
  protoOf(QuotDGAlgebraImpl).b1i = function () {
    return this.w1u_1;
  };
  protoOf(QuotDGAlgebraImpl).y1g = function () {
    return this.x1u_1;
  };
  protoOf(QuotDGAlgebraImpl).n1g = function () {
    return this.y1u_1;
  };
  protoOf(QuotDGAlgebraImpl).m1g = function () {
    // Inline function 'kotlin.getValue' call
    cohomology$factory_2();
    return this.z1u_1.w();
  };
  protoOf(QuotDGAlgebraImpl).y1n = function () {
    // Inline function 'kotlin.getValue' call
    projection$factory();
    return this.a1v_1.w();
  };
  function cohomology$factory_2() {
    return getPropertyCallableRef('cohomology', 1, KProperty1, function (receiver) {
      return receiver.m1g();
    }, null);
  }
  function projection$factory() {
    return getPropertyCallableRef('projection', 1, KProperty1, function (receiver) {
      return receiver.y1n();
    }, null);
  }
  function Companion_27() {
    Companion_instance_27 = this;
  }
  protoOf(Companion_27).l1v = function (matrixSpace, quotGVectorSpace, multiplication, unit, isCommutative) {
    return new QuotGAlgebraImpl(matrixSpace, quotGVectorSpace, multiplication, unit, isCommutative);
  };
  protoOf(Companion_27).k1q = function (matrixSpace, quotGVectorSpace, multiplication, unit, isCommutative, $super) {
    isCommutative = isCommutative === VOID ? false : isCommutative;
    return $super === VOID ? this.l1v(matrixSpace, quotGVectorSpace, multiplication, unit, isCommutative) : $super.l1v.call(this, matrixSpace, quotGVectorSpace, multiplication, unit, isCommutative);
  };
  var Companion_instance_27;
  function Companion_getInstance_28() {
    if (Companion_instance_27 == null)
      new Companion_27();
    return Companion_instance_27;
  }
  function QuotGAlgebraImpl(matrixSpace, quotGVectorSpace, multiplication, unit, isCommutative) {
    this.m1v_1 = matrixSpace;
    this.n1v_1 = multiplication;
    this.o1v_1 = unit;
    this.p1v_1 = isCommutative;
    this.q1v_1 = quotGVectorSpace;
    this.r1v_1 = Companion_getInstance_16().l1q(this);
    this.s1v_1 = this;
  }
  protoOf(QuotGAlgebraImpl).y1g = function () {
    return this.m1v_1;
  };
  protoOf(QuotGAlgebraImpl).n1g = function () {
    return this.n1v_1;
  };
  protoOf(QuotGAlgebraImpl).a1i = function () {
    return this.o1v_1;
  };
  protoOf(QuotGAlgebraImpl).b1i = function () {
    return this.p1v_1;
  };
  protoOf(QuotGAlgebraImpl).i1h = function () {
    return this.q1v_1.i1h();
  };
  protoOf(QuotGAlgebraImpl).c1h = function () {
    return this.q1v_1.c1h();
  };
  protoOf(QuotGAlgebraImpl).j1h = function () {
    return this.q1v_1.j1h();
  };
  protoOf(QuotGAlgebraImpl).e1h = function () {
    return this.q1v_1.e1h();
  };
  protoOf(QuotGAlgebraImpl).f1h = function () {
    return this.q1v_1.f1h();
  };
  protoOf(QuotGAlgebraImpl).d1h = function () {
    return this.q1v_1.d1h();
  };
  protoOf(QuotGAlgebraImpl).b1h = function () {
    return this.q1v_1.b1h();
  };
  protoOf(QuotGAlgebraImpl).y1n = function () {
    return this.q1v_1.y1n();
  };
  protoOf(QuotGAlgebraImpl).l1o = function () {
    return this.q1v_1.l1o();
  };
  protoOf(QuotGAlgebraImpl).h1h = function () {
    return this.q1v_1.h1h();
  };
  protoOf(QuotGAlgebraImpl).z1h = function () {
    return this.q1v_1.z1h();
  };
  protoOf(QuotGAlgebraImpl).b1v = function (a, b) {
    return this.q1v_1.t1h(a, b);
  };
  protoOf(QuotGAlgebraImpl).t1h = function (a, b) {
    return this.b1v(a, b);
  };
  protoOf(QuotGAlgebraImpl).c1v = function (gVector) {
    return this.q1v_1.r1h(gVector);
  };
  protoOf(QuotGAlgebraImpl).r1h = function (gVector) {
    return this.c1v(gVector);
  };
  protoOf(QuotGAlgebraImpl).d1v = function (gVector) {
    return this.q1v_1.s1h(gVector);
  };
  protoOf(QuotGAlgebraImpl).s1h = function (gVector) {
    return this.d1v(gVector);
  };
  protoOf(QuotGAlgebraImpl).e1v = function (gVectorOrZero, degree) {
    return this.q1v_1.q1h(gVectorOrZero, degree);
  };
  protoOf(QuotGAlgebraImpl).q1h = function (gVectorOrZero, degree) {
    return this.e1v(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(QuotGAlgebraImpl).f1v = function (a, b) {
    return this.q1v_1.y1h(a, b);
  };
  protoOf(QuotGAlgebraImpl).y1h = function (a, b) {
    return this.f1v(a, b);
  };
  protoOf(QuotGAlgebraImpl).g1v = function (basisName, degree) {
    return this.q1v_1.m1h(basisName, degree);
  };
  protoOf(QuotGAlgebraImpl).m1h = function (basisName, degree) {
    var tmp = basisName instanceof QuotBasis ? basisName : THROW_CCE();
    return this.g1v(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(QuotGAlgebraImpl).h1v = function (vector, degree) {
    return this.q1v_1.k1h(vector, degree);
  };
  protoOf(QuotGAlgebraImpl).k1h = function (vector, degree) {
    return this.h1v(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(QuotGAlgebraImpl).i1v = function (vector, degree) {
    return this.q1v_1.l1h(vector, degree);
  };
  protoOf(QuotGAlgebraImpl).l1h = function (vector, degree) {
    return this.i1v(vector, degree);
  };
  protoOf(QuotGAlgebraImpl).g1h = function (degree) {
    return this.q1v_1.g1h(degree);
  };
  protoOf(QuotGAlgebraImpl).l = function (degree) {
    return this.q1v_1.l(degree);
  };
  protoOf(QuotGAlgebraImpl).n1h = function (degree) {
    return this.q1v_1.n1h(degree);
  };
  protoOf(QuotGAlgebraImpl).c1m = function (degree) {
    return this.q1v_1.c1m(degree);
  };
  protoOf(QuotGAlgebraImpl).o1h = function (degree) {
    return this.q1v_1.o1h(degree);
  };
  protoOf(QuotGAlgebraImpl).p1h = function (degree) {
    return this.q1v_1.p1h(degree);
  };
  protoOf(QuotGAlgebraImpl).j1v = function (scalar, gVector) {
    return this.q1v_1.v1h(scalar, gVector);
  };
  protoOf(QuotGAlgebraImpl).v1h = function (scalar, gVector) {
    return this.j1v(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  protoOf(QuotGAlgebraImpl).k1v = function (a, b) {
    return this.q1v_1.u1h(a, b);
  };
  protoOf(QuotGAlgebraImpl).u1h = function (a, b) {
    return this.k1v(a, b);
  };
  protoOf(QuotGAlgebraImpl).toString = function () {
    return this.q1v_1.toString();
  };
  protoOf(QuotGAlgebraImpl).s1i = function (printConfig) {
    return this.q1v_1.s1i(printConfig);
  };
  protoOf(QuotGAlgebraImpl).g1g = function () {
    return this.r1v_1;
  };
  function Companion_28() {
    Companion_instance_28 = this;
  }
  protoOf(Companion_28).t1v = function (matrixSpace, totalGVectorSpace, quotientGenerator, boundedness, name) {
    return new QuotGVectorSpaceImpl(matrixSpace, totalGVectorSpace, quotientGenerator, boundedness, name);
  };
  protoOf(Companion_28).i1q = function (matrixSpace, totalGVectorSpace, quotientGenerator, boundedness, name, $super) {
    boundedness = boundedness === VOID ? totalGVectorSpace.i1h() : boundedness;
    name = name === VOID ? totalGVectorSpace.d1h() + '/' + quotientGenerator.d1h() : name;
    return $super === VOID ? this.t1v(matrixSpace, totalGVectorSpace, quotientGenerator, boundedness, name) : $super.t1v.call(this, matrixSpace, totalGVectorSpace, quotientGenerator, boundedness, name);
  };
  var Companion_instance_28;
  function Companion_getInstance_29() {
    if (Companion_instance_28 == null)
      new Companion_28();
    return Companion_instance_28;
  }
  function QuotGVectorSpace() {
  }
  function QuotGVectorSpaceImpl$section$delegate$lambda$lambda(this$0) {
    return function (degree) {
      return this$0.g1h(degree).l1o();
    };
  }
  function QuotGVectorSpaceImpl$section$delegate$lambda(this$0) {
    return function () {
      var tmp = Companion_getInstance_21();
      var tmp_0 = this$0.a1w_1.c1j();
      return tmp.l1s(this$0, this$0.v1v_1, tmp_0, this$0.u1v_1, 'inclusion', QuotGVectorSpaceImpl$section$delegate$lambda$lambda(this$0));
    };
  }
  function QuotGVectorSpaceImpl$projection$delegate$lambda$lambda(this$0) {
    return function (degree) {
      return this$0.g1h(degree).y1n();
    };
  }
  function QuotGVectorSpaceImpl$projection$delegate$lambda(this$0) {
    return function () {
      var tmp = Companion_getInstance_21();
      var tmp_0 = this$0.a1w_1.c1j();
      return tmp.l1s(this$0.v1v_1, this$0, tmp_0, this$0.u1v_1, 'inclusion', QuotGVectorSpaceImpl$projection$delegate$lambda$lambda(this$0));
    };
  }
  function QuotGVectorSpaceImpl(matrixSpace, totalGVectorSpace, quotientGenerator, boundedness, name) {
    this.u1v_1 = matrixSpace;
    this.v1v_1 = totalGVectorSpace;
    this.w1v_1 = quotientGenerator;
    this.x1v_1 = boundedness;
    this.y1v_1 = name;
    this.z1v_1 = this.v1v_1.b1h();
    this.a1w_1 = this.v1v_1.c1h();
    this.b1w_1 = Companion_getInstance_75().j1w(this.v1v_1.e1h());
    this.c1w_1 = this.v1v_1.f1h();
    var tmp = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp.d1w_1 = LinkedHashMap_init_$Create$();
    this.e1w_1 = Companion_getInstance_25().n1p(this);
    this.f1w_1 = this;
    this.g1w_1 = new ZeroGVector(this);
    var tmp_0 = this;
    tmp_0.h1w_1 = lazy(QuotGVectorSpaceImpl$section$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.i1w_1 = lazy(QuotGVectorSpaceImpl$projection$delegate$lambda(this));
  }
  protoOf(QuotGVectorSpaceImpl).i1h = function () {
    return this.x1v_1;
  };
  protoOf(QuotGVectorSpaceImpl).d1h = function () {
    return this.y1v_1;
  };
  protoOf(QuotGVectorSpaceImpl).b1h = function () {
    return this.z1v_1;
  };
  protoOf(QuotGVectorSpaceImpl).c1h = function () {
    return this.a1w_1;
  };
  protoOf(QuotGVectorSpaceImpl).e1h = function () {
    return this.b1w_1;
  };
  protoOf(QuotGVectorSpaceImpl).f1h = function () {
    return this.c1w_1;
  };
  protoOf(QuotGVectorSpaceImpl).g1g = function () {
    return this.e1w_1;
  };
  protoOf(QuotGVectorSpaceImpl).h1h = function () {
    return this.f1w_1;
  };
  protoOf(QuotGVectorSpaceImpl).z1h = function () {
    return this.g1w_1;
  };
  protoOf(QuotGVectorSpaceImpl).l1o = function () {
    // Inline function 'kotlin.getValue' call
    section$factory();
    return this.h1w_1.w();
  };
  protoOf(QuotGVectorSpaceImpl).y1n = function () {
    // Inline function 'kotlin.getValue' call
    projection$factory_0();
    return this.i1w_1.w();
  };
  protoOf(QuotGVectorSpaceImpl).g1h = function (degree) {
    // Inline function 'kotlin.collections.getOrPut' call
    var tmp0_getOrPut = this.d1w_1;
    var value = tmp0_getOrPut.u2(degree);
    var tmp;
    if (value == null) {
      // Inline function 'com.github.shwaka.kohomology.dg.QuotGVectorSpaceImpl.get.<anonymous>' call
      var answer = Companion_getInstance_76().k1w(this.u1v_1, this.v1v_1.g1h(degree), this.w1v_1.g1h(degree));
      tmp0_getOrPut.z3(degree, answer);
      tmp = answer;
    } else {
      tmp = value;
    }
    return tmp;
  };
  protoOf(QuotGVectorSpaceImpl).l = function (degree) {
    return this.g1h(this.a1w_1.bi(degree));
  };
  protoOf(QuotGVectorSpaceImpl).toString = function () {
    return this.s1i(Companion_getInstance_70().f1m_1);
  };
  protoOf(QuotGVectorSpaceImpl).s1i = function (printConfig) {
    var total = this.v1v_1.s1i(printConfig);
    var quot = this.w1v_1.s1i(printConfig);
    return total + '/' + quot;
  };
  function section$factory() {
    return getPropertyCallableRef('section', 1, KProperty1, function (receiver) {
      return receiver.l1o();
    }, null);
  }
  function projection$factory_0() {
    return getPropertyCallableRef('projection', 1, KProperty1, function (receiver) {
      return receiver.y1n();
    }, null);
  }
  function Companion_29() {
    Companion_instance_29 = this;
  }
  protoOf(Companion_29).u1g = function (totalDGVectorSpace, subGVectorSpace) {
    return new SubDGVectorSpaceImpl(totalDGVectorSpace, subGVectorSpace);
  };
  var Companion_instance_29;
  function Companion_getInstance_30() {
    if (Companion_instance_29 == null)
      new Companion_29();
    return Companion_instance_29;
  }
  function SubDGVectorSpaceImpl$cohomology$delegate$lambda(this$0) {
    return function () {
      var dgVectorSpace = Companion_getInstance_11().a1n(this$0.l1w_1, this$0.n1w_1);
      return dgVectorSpace.m1g();
    };
  }
  function SubDGVectorSpaceImpl$inclusion$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_8().r1k(this$0, this$0.m1w_1, this$0.l1w_1.s1l());
    };
  }
  function SubDGVectorSpaceImpl(totalDGVectorSpace, underlyingGVectorSpace) {
    this.l1w_1 = underlyingGVectorSpace;
    this.m1w_1 = totalDGVectorSpace;
    this.n1w_1 = totalDGVectorSpace.o1g().a1l(this.l1w_1, this.l1w_1);
    this.o1w_1 = Companion_getInstance_12().r1o(this);
    this.p1w_1 = this.l1w_1.y1g();
    var tmp = this;
    tmp.q1w_1 = lazy(SubDGVectorSpaceImpl$cohomology$delegate$lambda(this));
    var tmp_0 = this;
    tmp_0.r1w_1 = lazy(SubDGVectorSpaceImpl$inclusion$delegate$lambda(this));
  }
  protoOf(SubDGVectorSpaceImpl).h1h = function () {
    return this.l1w_1;
  };
  protoOf(SubDGVectorSpaceImpl).i1h = function () {
    return this.l1w_1.i1h();
  };
  protoOf(SubDGVectorSpaceImpl).c1h = function () {
    return this.l1w_1.c1h();
  };
  protoOf(SubDGVectorSpaceImpl).j1h = function () {
    return this.l1w_1.j1h();
  };
  protoOf(SubDGVectorSpaceImpl).e1h = function () {
    return this.l1w_1.e1h();
  };
  protoOf(SubDGVectorSpaceImpl).f1h = function () {
    return this.l1w_1.f1h();
  };
  protoOf(SubDGVectorSpaceImpl).d1h = function () {
    return this.l1w_1.d1h();
  };
  protoOf(SubDGVectorSpaceImpl).b1h = function () {
    return this.l1w_1.b1h();
  };
  protoOf(SubDGVectorSpaceImpl).z1h = function () {
    return this.l1w_1.z1h();
  };
  protoOf(SubDGVectorSpaceImpl).t1l = function (a, b) {
    return this.l1w_1.t1h(a, b);
  };
  protoOf(SubDGVectorSpaceImpl).t1h = function (a, b) {
    return this.t1l(a, b);
  };
  protoOf(SubDGVectorSpaceImpl).v1l = function (gVector) {
    return this.l1w_1.r1h(gVector);
  };
  protoOf(SubDGVectorSpaceImpl).r1h = function (gVector) {
    return this.v1l(gVector);
  };
  protoOf(SubDGVectorSpaceImpl).w1l = function (gVector) {
    return this.l1w_1.s1h(gVector);
  };
  protoOf(SubDGVectorSpaceImpl).s1h = function (gVector) {
    return this.w1l(gVector);
  };
  protoOf(SubDGVectorSpaceImpl).x1l = function (gVectorOrZero, degree) {
    return this.l1w_1.q1h(gVectorOrZero, degree);
  };
  protoOf(SubDGVectorSpaceImpl).q1h = function (gVectorOrZero, degree) {
    return this.x1l(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(SubDGVectorSpaceImpl).y1l = function (a, b) {
    return this.l1w_1.y1h(a, b);
  };
  protoOf(SubDGVectorSpaceImpl).y1h = function (a, b) {
    return this.y1l(a, b);
  };
  protoOf(SubDGVectorSpaceImpl).z1l = function (basisName, degree) {
    return this.l1w_1.m1h(basisName, degree);
  };
  protoOf(SubDGVectorSpaceImpl).m1h = function (basisName, degree) {
    var tmp = basisName instanceof SubBasis ? basisName : THROW_CCE();
    return this.z1l(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(SubDGVectorSpaceImpl).a1m = function (vector, degree) {
    return this.l1w_1.k1h(vector, degree);
  };
  protoOf(SubDGVectorSpaceImpl).k1h = function (vector, degree) {
    return this.a1m(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(SubDGVectorSpaceImpl).b1m = function (vector, degree) {
    return this.l1w_1.l1h(vector, degree);
  };
  protoOf(SubDGVectorSpaceImpl).l1h = function (vector, degree) {
    return this.b1m(vector, degree);
  };
  protoOf(SubDGVectorSpaceImpl).g1h = function (degree) {
    return this.l1w_1.g1h(degree);
  };
  protoOf(SubDGVectorSpaceImpl).l = function (degree) {
    return this.l1w_1.l(degree);
  };
  protoOf(SubDGVectorSpaceImpl).n1h = function (degree) {
    return this.l1w_1.n1h(degree);
  };
  protoOf(SubDGVectorSpaceImpl).c1m = function (degree) {
    return this.l1w_1.c1m(degree);
  };
  protoOf(SubDGVectorSpaceImpl).o1h = function (degree) {
    return this.l1w_1.o1h(degree);
  };
  protoOf(SubDGVectorSpaceImpl).p1h = function (degree) {
    return this.l1w_1.p1h(degree);
  };
  protoOf(SubDGVectorSpaceImpl).d1m = function (scalar, gVector) {
    return this.l1w_1.v1h(scalar, gVector);
  };
  protoOf(SubDGVectorSpaceImpl).v1h = function (scalar, gVector) {
    return this.d1m(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  protoOf(SubDGVectorSpaceImpl).t1g = function (gVector) {
    return this.l1w_1.t1g(gVector);
  };
  protoOf(SubDGVectorSpaceImpl).e1m = function (a, b) {
    return this.l1w_1.u1h(a, b);
  };
  protoOf(SubDGVectorSpaceImpl).u1h = function (a, b) {
    return this.e1m(a, b);
  };
  protoOf(SubDGVectorSpaceImpl).toString = function () {
    return this.l1w_1.toString();
  };
  protoOf(SubDGVectorSpaceImpl).s1i = function (printConfig) {
    return this.l1w_1.s1i(printConfig);
  };
  protoOf(SubDGVectorSpaceImpl).q1l = function () {
    return this.m1w_1;
  };
  protoOf(SubDGVectorSpaceImpl).o1g = function () {
    return this.n1w_1;
  };
  protoOf(SubDGVectorSpaceImpl).g1g = function () {
    return this.o1w_1;
  };
  protoOf(SubDGVectorSpaceImpl).y1g = function () {
    return this.p1w_1;
  };
  protoOf(SubDGVectorSpaceImpl).m1g = function () {
    // Inline function 'kotlin.getValue' call
    cohomology$factory_3();
    return this.q1w_1.w();
  };
  protoOf(SubDGVectorSpaceImpl).s1l = function () {
    // Inline function 'kotlin.getValue' call
    inclusion$factory();
    return this.r1w_1.w();
  };
  function cohomology$factory_3() {
    return getPropertyCallableRef('cohomology', 1, KProperty1, function (receiver) {
      return receiver.m1g();
    }, null);
  }
  function inclusion$factory() {
    return getPropertyCallableRef('inclusion', 1, KProperty1, function (receiver) {
      return receiver.s1l();
    }, null);
  }
  function SubGVectorSpace$Companion$fromList$lambda($gVectorList, $matrixSpace, $totalGVectorSpace) {
    return function (degree) {
      var tmp$ret$5;
      // Inline function 'kotlin.collections.map' call
      var tmp$ret$2;
      // Inline function 'kotlin.collections.filter' call
      var tmp$ret$1;
      // Inline function 'kotlin.collections.filterTo' call
      var tmp0_filterTo = ArrayList_init_$Create$_0();
      var tmp0_iterator = $gVectorList.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.dg.Companion.fromList.<anonymous>.<anonymous>' call
        tmp$ret$0 = equals(element.a1o_1, degree);
        if (tmp$ret$0) {
          tmp0_filterTo.a(element);
        }
      }
      tmp$ret$1 = tmp0_filterTo;
      tmp$ret$2 = tmp$ret$1;
      var tmp0_map = tmp$ret$2;
      var tmp$ret$4;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var tmp0_iterator_0 = tmp0_map.f();
      while (tmp0_iterator_0.g()) {
        var item = tmp0_iterator_0.h();
        var tmp$ret$3;
        // Inline function 'com.github.shwaka.kohomology.dg.Companion.fromList.<anonymous>.<anonymous>' call
        tmp$ret$3 = item.z1n_1;
        tmp0_mapTo.a(tmp$ret$3);
      }
      tmp$ret$4 = tmp0_mapTo;
      tmp$ret$5 = tmp$ret$4;
      var vectorListForDegree = tmp$ret$5;
      return Companion_getInstance_82().o1r($matrixSpace, $totalGVectorSpace.g1h(degree), vectorListForDegree);
    };
  }
  function Companion_30() {
    Companion_instance_30 = this;
  }
  protoOf(Companion_30).s1w = function (matrixSpace, totalGVectorSpace, name, boundedness, getVectorSpace) {
    return new SubGVectorSpaceImpl(matrixSpace, totalGVectorSpace, name, boundedness, getVectorSpace);
  };
  protoOf(Companion_30).w1r = function (matrixSpace, totalGVectorSpace, name, boundedness, getVectorSpace, $super) {
    boundedness = boundedness === VOID ? totalGVectorSpace.i1h() : boundedness;
    return $super === VOID ? this.s1w(matrixSpace, totalGVectorSpace, name, boundedness, getVectorSpace) : $super.s1w.call(this, matrixSpace, totalGVectorSpace, name, boundedness, getVectorSpace);
  };
  protoOf(Companion_30).f1q = function (matrixSpace, totalGVectorSpace, name, gVectorList) {
    var degreeGroup = totalGVectorSpace.c1h();
    var tmp;
    if (isInterface(degreeGroup, AugmentedDegreeGroup)) {
      var tmp_0 = Companion_getInstance_0();
      // Inline function 'kotlin.collections.map' call
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(gVectorList, 10));
      var tmp0_iterator = gVectorList.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.dg.Companion.fromList.<anonymous>' call
        tmp$ret$0 = item.a1o_1;
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp = tmp_0.j1g(degreeGroup, tmp0_mapTo);
    } else {
      tmp = new Boundedness();
    }
    var boundedness = tmp;
    return new SubGVectorSpaceImpl(matrixSpace, totalGVectorSpace, name, boundedness, SubGVectorSpace$Companion$fromList$lambda(gVectorList, matrixSpace, totalGVectorSpace));
  };
  var Companion_instance_30;
  function Companion_getInstance_31() {
    if (Companion_instance_30 == null)
      new Companion_30();
    return Companion_instance_30;
  }
  function SubGVectorSpace() {
  }
  function asSubGVectorSpace(_this__u8e3s4, matrixSpace) {
    return new WholeSubGVectorSpace(matrixSpace, _this__u8e3s4);
  }
  function SubGVectorSpaceImpl$inclusion$delegate$lambda$lambda(this$0) {
    return function (degree) {
      return this$0.g1h(degree).s1l();
    };
  }
  function SubGVectorSpaceImpl$inclusion$delegate$lambda(this$0) {
    return function () {
      var tmp = Companion_getInstance_21();
      var tmp_0 = this$0.a1x_1.c1j();
      return tmp.l1s(this$0, this$0.v1w_1, tmp_0, this$0.u1w_1, 'inclusion', SubGVectorSpaceImpl$inclusion$delegate$lambda$lambda(this$0));
    };
  }
  function SubGVectorSpaceImpl$retraction$delegate$lambda$lambda(this$0) {
    return function (degree) {
      return this$0.g1h(degree).j1x();
    };
  }
  function SubGVectorSpaceImpl$retraction$delegate$lambda(this$0) {
    return function () {
      var tmp = Companion_getInstance_21();
      var tmp_0 = this$0.a1x_1.c1j();
      return tmp.l1s(this$0.v1w_1, this$0, tmp_0, this$0.u1w_1, 'inclusion', SubGVectorSpaceImpl$retraction$delegate$lambda$lambda(this$0));
    };
  }
  function SubGVectorSpaceImpl(matrixSpace, totalGVectorSpace, name, boundedness, getVectorSpace) {
    this.u1w_1 = matrixSpace;
    this.v1w_1 = totalGVectorSpace;
    this.w1w_1 = name;
    this.x1w_1 = boundedness;
    this.y1w_1 = getVectorSpace;
    this.z1w_1 = this.v1w_1.b1h();
    this.a1x_1 = this.v1w_1.c1h();
    this.b1x_1 = Companion_getInstance_81().j1w(this.v1w_1.e1h());
    this.c1x_1 = this.v1w_1.f1h();
    var tmp = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp.d1x_1 = LinkedHashMap_init_$Create$();
    this.e1x_1 = Companion_getInstance_25().n1p(this);
    this.f1x_1 = this;
    this.g1x_1 = new ZeroGVector(this);
    var tmp_0 = this;
    tmp_0.h1x_1 = lazy(SubGVectorSpaceImpl$inclusion$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.i1x_1 = lazy(SubGVectorSpaceImpl$retraction$delegate$lambda(this));
  }
  protoOf(SubGVectorSpaceImpl).y1g = function () {
    return this.u1w_1;
  };
  protoOf(SubGVectorSpaceImpl).q1l = function () {
    return this.v1w_1;
  };
  protoOf(SubGVectorSpaceImpl).d1h = function () {
    return this.w1w_1;
  };
  protoOf(SubGVectorSpaceImpl).i1h = function () {
    return this.x1w_1;
  };
  protoOf(SubGVectorSpaceImpl).b1h = function () {
    return this.z1w_1;
  };
  protoOf(SubGVectorSpaceImpl).c1h = function () {
    return this.a1x_1;
  };
  protoOf(SubGVectorSpaceImpl).e1h = function () {
    return this.b1x_1;
  };
  protoOf(SubGVectorSpaceImpl).f1h = function () {
    return this.c1x_1;
  };
  protoOf(SubGVectorSpaceImpl).g1g = function () {
    return this.e1x_1;
  };
  protoOf(SubGVectorSpaceImpl).h1h = function () {
    return this.f1x_1;
  };
  protoOf(SubGVectorSpaceImpl).z1h = function () {
    return this.g1x_1;
  };
  protoOf(SubGVectorSpaceImpl).s1l = function () {
    // Inline function 'kotlin.getValue' call
    inclusion$factory_0();
    return this.h1x_1.w();
  };
  protoOf(SubGVectorSpaceImpl).g1h = function (degree) {
    // Inline function 'kotlin.collections.getOrPut' call
    var tmp0_getOrPut = this.d1x_1;
    var value = tmp0_getOrPut.u2(degree);
    var tmp;
    if (value == null) {
      // Inline function 'com.github.shwaka.kohomology.dg.SubGVectorSpaceImpl.get.<anonymous>' call
      var answer = this.y1w_1(degree);
      tmp0_getOrPut.z3(degree, answer);
      tmp = answer;
    } else {
      tmp = value;
    }
    var result = tmp;
    if (!equals(result.k1x(), this.v1w_1.g1h(degree))) {
      throw IllegalStateException_init_$Create$('The vector space ' + result + ' must be contained in ' + this.v1w_1.g1h(degree));
    }
    return result;
  };
  protoOf(SubGVectorSpaceImpl).l = function (degree) {
    return this.g1h(this.a1x_1.bi(degree));
  };
  protoOf(SubGVectorSpaceImpl).toString = function () {
    return this.s1i(Companion_getInstance_70().f1m_1);
  };
  protoOf(SubGVectorSpaceImpl).s1i = function (printConfig) {
    return this.w1w_1;
  };
  function WholeSubGVectorSpace$inclusion$delegate$lambda$lambda(this$0) {
    return function (degree) {
      return this$0.g1h(degree).s1l();
    };
  }
  function WholeSubGVectorSpace$inclusion$delegate$lambda(this$0) {
    return function () {
      var tmp = Companion_getInstance_21();
      var tmp_0 = this$0.o1x_1.c1j();
      return tmp.l1s(this$0, this$0.m1x_1, tmp_0, this$0.l1x_1, 'inclusion', WholeSubGVectorSpace$inclusion$delegate$lambda$lambda(this$0));
    };
  }
  function WholeSubGVectorSpace$retraction$delegate$lambda$lambda(this$0) {
    return function (degree) {
      return this$0.g1h(degree).j1x();
    };
  }
  function WholeSubGVectorSpace$retraction$delegate$lambda(this$0) {
    return function () {
      var tmp = Companion_getInstance_21();
      var tmp_0 = this$0.o1x_1.c1j();
      return tmp.l1s(this$0.m1x_1, this$0, tmp_0, this$0.l1x_1, 'inclusion', WholeSubGVectorSpace$retraction$delegate$lambda$lambda(this$0));
    };
  }
  function WholeSubGVectorSpace(matrixSpace, totalGVectorSpace) {
    this.l1x_1 = matrixSpace;
    this.m1x_1 = totalGVectorSpace;
    this.n1x_1 = this.m1x_1.b1h();
    this.o1x_1 = this.m1x_1.c1h();
    this.p1x_1 = this.m1x_1.d1h();
    this.q1x_1 = Companion_getInstance_81().j1w(this.m1x_1.e1h());
    this.r1x_1 = this.m1x_1.f1h();
    this.s1x_1 = this.m1x_1.i1h();
    var tmp = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp.t1x_1 = LinkedHashMap_init_$Create$();
    this.u1x_1 = Companion_getInstance_25().n1p(this);
    this.v1x_1 = this;
    this.w1x_1 = new ZeroGVector(this);
    var tmp_0 = this;
    tmp_0.x1x_1 = lazy(WholeSubGVectorSpace$inclusion$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.y1x_1 = lazy(WholeSubGVectorSpace$retraction$delegate$lambda(this));
  }
  protoOf(WholeSubGVectorSpace).y1g = function () {
    return this.l1x_1;
  };
  protoOf(WholeSubGVectorSpace).q1l = function () {
    return this.m1x_1;
  };
  protoOf(WholeSubGVectorSpace).b1h = function () {
    return this.n1x_1;
  };
  protoOf(WholeSubGVectorSpace).c1h = function () {
    return this.o1x_1;
  };
  protoOf(WholeSubGVectorSpace).d1h = function () {
    return this.p1x_1;
  };
  protoOf(WholeSubGVectorSpace).e1h = function () {
    return this.q1x_1;
  };
  protoOf(WholeSubGVectorSpace).f1h = function () {
    return this.r1x_1;
  };
  protoOf(WholeSubGVectorSpace).i1h = function () {
    return this.s1x_1;
  };
  protoOf(WholeSubGVectorSpace).g1g = function () {
    return this.u1x_1;
  };
  protoOf(WholeSubGVectorSpace).h1h = function () {
    return this.v1x_1;
  };
  protoOf(WholeSubGVectorSpace).z1h = function () {
    return this.w1x_1;
  };
  protoOf(WholeSubGVectorSpace).s1l = function () {
    // Inline function 'kotlin.getValue' call
    inclusion$factory_1();
    return this.x1x_1.w();
  };
  protoOf(WholeSubGVectorSpace).g1h = function (degree) {
    // Inline function 'kotlin.collections.getOrPut' call
    var tmp0_getOrPut = this.t1x_1;
    var value = tmp0_getOrPut.u2(degree);
    var tmp;
    if (value == null) {
      // Inline function 'com.github.shwaka.kohomology.dg.WholeSubGVectorSpace.get.<anonymous>' call
      var answer = asSubVectorSpace(this.m1x_1.g1h(degree), this.l1x_1);
      tmp0_getOrPut.z3(degree, answer);
      tmp = answer;
    } else {
      tmp = value;
    }
    return tmp;
  };
  protoOf(WholeSubGVectorSpace).l = function (degree) {
    return this.g1h(this.o1x_1.bi(degree));
  };
  protoOf(WholeSubGVectorSpace).toString = function () {
    return this.s1i(Companion_getInstance_70().f1m_1);
  };
  protoOf(WholeSubGVectorSpace).s1i = function (printConfig) {
    var totalString = this.m1x_1.s1i(printConfig);
    return 'WholeSubGVectorSpace(' + totalString + ')';
  };
  function inclusion$factory_0() {
    return getPropertyCallableRef('inclusion', 1, KProperty1, function (receiver) {
      return receiver.s1l();
    }, null);
  }
  function inclusion$factory_1() {
    return getPropertyCallableRef('inclusion', 1, KProperty1, function (receiver) {
      return receiver.s1l();
    }, null);
  }
  function Companion_31() {
    Companion_instance_31 = this;
  }
  protoOf(Companion_31).r1i = function (matrixSpace, subQuotGVectorSpace, multiplication, unit, isCommutative) {
    return new SubQuotGAlgebraImpl(matrixSpace, subQuotGVectorSpace, multiplication, unit, isCommutative);
  };
  var Companion_instance_31;
  function Companion_getInstance_32() {
    if (Companion_instance_31 == null)
      new Companion_31();
    return Companion_instance_31;
  }
  function SubQuotGAlgebraImpl(matrixSpace, subQuotGVectorSpace, multiplication, unit, isCommutative) {
    this.z1x_1 = matrixSpace;
    this.a1y_1 = multiplication;
    this.b1y_1 = unit;
    this.c1y_1 = isCommutative;
    this.d1y_1 = subQuotGVectorSpace;
    this.e1y_1 = Companion_getInstance_16().l1q(this);
    this.f1y_1 = this;
  }
  protoOf(SubQuotGAlgebraImpl).y1g = function () {
    return this.z1x_1;
  };
  protoOf(SubQuotGAlgebraImpl).n1g = function () {
    return this.a1y_1;
  };
  protoOf(SubQuotGAlgebraImpl).a1i = function () {
    return this.b1y_1;
  };
  protoOf(SubQuotGAlgebraImpl).b1i = function () {
    return this.c1y_1;
  };
  protoOf(SubQuotGAlgebraImpl).i1h = function () {
    return this.d1y_1.i1h();
  };
  protoOf(SubQuotGAlgebraImpl).c1h = function () {
    return this.d1y_1.c1h();
  };
  protoOf(SubQuotGAlgebraImpl).j1h = function () {
    return this.d1y_1.j1h();
  };
  protoOf(SubQuotGAlgebraImpl).e1h = function () {
    return this.d1y_1.e1h();
  };
  protoOf(SubQuotGAlgebraImpl).f1h = function () {
    return this.d1y_1.f1h();
  };
  protoOf(SubQuotGAlgebraImpl).d1h = function () {
    return this.d1y_1.d1h();
  };
  protoOf(SubQuotGAlgebraImpl).b1h = function () {
    return this.d1y_1.b1h();
  };
  protoOf(SubQuotGAlgebraImpl).y1n = function () {
    return this.d1y_1.y1n();
  };
  protoOf(SubQuotGAlgebraImpl).h1h = function () {
    return this.d1y_1.h1h();
  };
  protoOf(SubQuotGAlgebraImpl).z1h = function () {
    return this.d1y_1.z1h();
  };
  protoOf(SubQuotGAlgebraImpl).a1p = function (a, b) {
    return this.d1y_1.t1h(a, b);
  };
  protoOf(SubQuotGAlgebraImpl).t1h = function (a, b) {
    return this.a1p(a, b);
  };
  protoOf(SubQuotGAlgebraImpl).b1p = function (gVector) {
    return this.d1y_1.r1h(gVector);
  };
  protoOf(SubQuotGAlgebraImpl).r1h = function (gVector) {
    return this.b1p(gVector);
  };
  protoOf(SubQuotGAlgebraImpl).c1p = function (gVector) {
    return this.d1y_1.s1h(gVector);
  };
  protoOf(SubQuotGAlgebraImpl).s1h = function (gVector) {
    return this.c1p(gVector);
  };
  protoOf(SubQuotGAlgebraImpl).d1p = function (gVectorOrZero, degree) {
    return this.d1y_1.q1h(gVectorOrZero, degree);
  };
  protoOf(SubQuotGAlgebraImpl).q1h = function (gVectorOrZero, degree) {
    return this.d1p(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(SubQuotGAlgebraImpl).e1p = function (a, b) {
    return this.d1y_1.y1h(a, b);
  };
  protoOf(SubQuotGAlgebraImpl).y1h = function (a, b) {
    return this.e1p(a, b);
  };
  protoOf(SubQuotGAlgebraImpl).f1p = function (basisName, degree) {
    return this.d1y_1.m1h(basisName, degree);
  };
  protoOf(SubQuotGAlgebraImpl).m1h = function (basisName, degree) {
    var tmp = basisName instanceof SubQuotBasis ? basisName : THROW_CCE();
    return this.f1p(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(SubQuotGAlgebraImpl).g1p = function (vector, degree) {
    return this.d1y_1.k1h(vector, degree);
  };
  protoOf(SubQuotGAlgebraImpl).k1h = function (vector, degree) {
    return this.g1p(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(SubQuotGAlgebraImpl).h1p = function (vector, degree) {
    return this.d1y_1.l1h(vector, degree);
  };
  protoOf(SubQuotGAlgebraImpl).l1h = function (vector, degree) {
    return this.h1p(vector, degree);
  };
  protoOf(SubQuotGAlgebraImpl).g1h = function (degree) {
    return this.d1y_1.g1h(degree);
  };
  protoOf(SubQuotGAlgebraImpl).l = function (degree) {
    return this.d1y_1.l(degree);
  };
  protoOf(SubQuotGAlgebraImpl).n1h = function (degree) {
    return this.d1y_1.n1h(degree);
  };
  protoOf(SubQuotGAlgebraImpl).c1m = function (degree) {
    return this.d1y_1.c1m(degree);
  };
  protoOf(SubQuotGAlgebraImpl).i1p = function (augmentedDegree) {
    return this.d1y_1.i1p(augmentedDegree);
  };
  protoOf(SubQuotGAlgebraImpl).o1h = function (degree) {
    return this.d1y_1.o1h(degree);
  };
  protoOf(SubQuotGAlgebraImpl).p1h = function (degree) {
    return this.d1y_1.p1h(degree);
  };
  protoOf(SubQuotGAlgebraImpl).j1p = function (scalar, gVector) {
    return this.d1y_1.v1h(scalar, gVector);
  };
  protoOf(SubQuotGAlgebraImpl).v1h = function (scalar, gVector) {
    return this.j1p(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  protoOf(SubQuotGAlgebraImpl).t1g = function (gVector) {
    return this.d1y_1.t1g(gVector);
  };
  protoOf(SubQuotGAlgebraImpl).k1p = function (a, b) {
    return this.d1y_1.u1h(a, b);
  };
  protoOf(SubQuotGAlgebraImpl).u1h = function (a, b) {
    return this.k1p(a, b);
  };
  protoOf(SubQuotGAlgebraImpl).toString = function () {
    return this.d1y_1.toString();
  };
  protoOf(SubQuotGAlgebraImpl).s1i = function (printConfig) {
    return this.d1y_1.s1i(printConfig);
  };
  protoOf(SubQuotGAlgebraImpl).g1g = function () {
    return this.e1y_1;
  };
  function Companion_32() {
    Companion_instance_32 = this;
  }
  protoOf(Companion_32).q1m = function (matrixSpace, subQuotGVectorSpace, multiplication) {
    return new SubQuotGLieAlgebraImpl(matrixSpace, subQuotGVectorSpace, multiplication);
  };
  var Companion_instance_32;
  function Companion_getInstance_33() {
    if (Companion_instance_32 == null)
      new Companion_32();
    return Companion_instance_32;
  }
  function SubQuotGLieAlgebraImpl(matrixSpace, subQuotGVectorSpace, multiplication) {
    this.g1y_1 = matrixSpace;
    this.h1y_1 = multiplication;
    this.i1y_1 = subQuotGVectorSpace;
    this.j1y_1 = Companion_getInstance_20().b1s(this);
    this.k1y_1 = this;
  }
  protoOf(SubQuotGLieAlgebraImpl).y1g = function () {
    return this.g1y_1;
  };
  protoOf(SubQuotGLieAlgebraImpl).n1g = function () {
    return this.h1y_1;
  };
  protoOf(SubQuotGLieAlgebraImpl).i1h = function () {
    return this.i1y_1.i1h();
  };
  protoOf(SubQuotGLieAlgebraImpl).c1h = function () {
    return this.i1y_1.c1h();
  };
  protoOf(SubQuotGLieAlgebraImpl).j1h = function () {
    return this.i1y_1.j1h();
  };
  protoOf(SubQuotGLieAlgebraImpl).e1h = function () {
    return this.i1y_1.e1h();
  };
  protoOf(SubQuotGLieAlgebraImpl).f1h = function () {
    return this.i1y_1.f1h();
  };
  protoOf(SubQuotGLieAlgebraImpl).d1h = function () {
    return this.i1y_1.d1h();
  };
  protoOf(SubQuotGLieAlgebraImpl).b1h = function () {
    return this.i1y_1.b1h();
  };
  protoOf(SubQuotGLieAlgebraImpl).y1n = function () {
    return this.i1y_1.y1n();
  };
  protoOf(SubQuotGLieAlgebraImpl).h1h = function () {
    return this.i1y_1.h1h();
  };
  protoOf(SubQuotGLieAlgebraImpl).z1h = function () {
    return this.i1y_1.z1h();
  };
  protoOf(SubQuotGLieAlgebraImpl).a1p = function (a, b) {
    return this.i1y_1.t1h(a, b);
  };
  protoOf(SubQuotGLieAlgebraImpl).t1h = function (a, b) {
    return this.a1p(a, b);
  };
  protoOf(SubQuotGLieAlgebraImpl).b1p = function (gVector) {
    return this.i1y_1.r1h(gVector);
  };
  protoOf(SubQuotGLieAlgebraImpl).r1h = function (gVector) {
    return this.b1p(gVector);
  };
  protoOf(SubQuotGLieAlgebraImpl).c1p = function (gVector) {
    return this.i1y_1.s1h(gVector);
  };
  protoOf(SubQuotGLieAlgebraImpl).s1h = function (gVector) {
    return this.c1p(gVector);
  };
  protoOf(SubQuotGLieAlgebraImpl).d1p = function (gVectorOrZero, degree) {
    return this.i1y_1.q1h(gVectorOrZero, degree);
  };
  protoOf(SubQuotGLieAlgebraImpl).q1h = function (gVectorOrZero, degree) {
    return this.d1p(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(SubQuotGLieAlgebraImpl).e1p = function (a, b) {
    return this.i1y_1.y1h(a, b);
  };
  protoOf(SubQuotGLieAlgebraImpl).y1h = function (a, b) {
    return this.e1p(a, b);
  };
  protoOf(SubQuotGLieAlgebraImpl).f1p = function (basisName, degree) {
    return this.i1y_1.m1h(basisName, degree);
  };
  protoOf(SubQuotGLieAlgebraImpl).m1h = function (basisName, degree) {
    var tmp = basisName instanceof SubQuotBasis ? basisName : THROW_CCE();
    return this.f1p(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(SubQuotGLieAlgebraImpl).g1p = function (vector, degree) {
    return this.i1y_1.k1h(vector, degree);
  };
  protoOf(SubQuotGLieAlgebraImpl).k1h = function (vector, degree) {
    return this.g1p(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(SubQuotGLieAlgebraImpl).h1p = function (vector, degree) {
    return this.i1y_1.l1h(vector, degree);
  };
  protoOf(SubQuotGLieAlgebraImpl).l1h = function (vector, degree) {
    return this.h1p(vector, degree);
  };
  protoOf(SubQuotGLieAlgebraImpl).g1h = function (degree) {
    return this.i1y_1.g1h(degree);
  };
  protoOf(SubQuotGLieAlgebraImpl).l = function (degree) {
    return this.i1y_1.l(degree);
  };
  protoOf(SubQuotGLieAlgebraImpl).n1h = function (degree) {
    return this.i1y_1.n1h(degree);
  };
  protoOf(SubQuotGLieAlgebraImpl).c1m = function (degree) {
    return this.i1y_1.c1m(degree);
  };
  protoOf(SubQuotGLieAlgebraImpl).i1p = function (augmentedDegree) {
    return this.i1y_1.i1p(augmentedDegree);
  };
  protoOf(SubQuotGLieAlgebraImpl).o1h = function (degree) {
    return this.i1y_1.o1h(degree);
  };
  protoOf(SubQuotGLieAlgebraImpl).p1h = function (degree) {
    return this.i1y_1.p1h(degree);
  };
  protoOf(SubQuotGLieAlgebraImpl).j1p = function (scalar, gVector) {
    return this.i1y_1.v1h(scalar, gVector);
  };
  protoOf(SubQuotGLieAlgebraImpl).v1h = function (scalar, gVector) {
    return this.j1p(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  protoOf(SubQuotGLieAlgebraImpl).t1g = function (gVector) {
    return this.i1y_1.t1g(gVector);
  };
  protoOf(SubQuotGLieAlgebraImpl).k1p = function (a, b) {
    return this.i1y_1.u1h(a, b);
  };
  protoOf(SubQuotGLieAlgebraImpl).u1h = function (a, b) {
    return this.k1p(a, b);
  };
  protoOf(SubQuotGLieAlgebraImpl).toString = function () {
    return this.i1y_1.toString();
  };
  protoOf(SubQuotGLieAlgebraImpl).s1i = function (printConfig) {
    return this.i1y_1.s1i(printConfig);
  };
  protoOf(SubQuotGLieAlgebraImpl).g1g = function () {
    return this.j1y_1;
  };
  function Companion_33() {
    Companion_instance_33 = this;
  }
  protoOf(Companion_33).q1m = function (matrixSpace, subQuotGVectorSpace, multiplication) {
    return new SubQuotGMagmaImpl(matrixSpace, subQuotGVectorSpace, multiplication);
  };
  var Companion_instance_33;
  function Companion_getInstance_34() {
    if (Companion_instance_33 == null)
      new Companion_33();
    return Companion_instance_33;
  }
  function SubQuotGMagmaImpl(matrixSpace, subQuotGVectorSpace, multiplication) {
    this.l1y_1 = matrixSpace;
    this.m1y_1 = multiplication;
    this.n1y_1 = subQuotGVectorSpace;
    this.o1y_1 = Companion_getInstance_23().b1r(this);
  }
  protoOf(SubQuotGMagmaImpl).n1g = function () {
    return this.m1y_1;
  };
  protoOf(SubQuotGMagmaImpl).i1h = function () {
    return this.n1y_1.i1h();
  };
  protoOf(SubQuotGMagmaImpl).c1h = function () {
    return this.n1y_1.c1h();
  };
  protoOf(SubQuotGMagmaImpl).j1h = function () {
    return this.n1y_1.j1h();
  };
  protoOf(SubQuotGMagmaImpl).e1h = function () {
    return this.n1y_1.e1h();
  };
  protoOf(SubQuotGMagmaImpl).f1h = function () {
    return this.n1y_1.f1h();
  };
  protoOf(SubQuotGMagmaImpl).d1h = function () {
    return this.n1y_1.d1h();
  };
  protoOf(SubQuotGMagmaImpl).b1h = function () {
    return this.n1y_1.b1h();
  };
  protoOf(SubQuotGMagmaImpl).y1n = function () {
    return this.n1y_1.y1n();
  };
  protoOf(SubQuotGMagmaImpl).h1h = function () {
    return this.n1y_1.h1h();
  };
  protoOf(SubQuotGMagmaImpl).z1h = function () {
    return this.n1y_1.z1h();
  };
  protoOf(SubQuotGMagmaImpl).a1p = function (a, b) {
    return this.n1y_1.t1h(a, b);
  };
  protoOf(SubQuotGMagmaImpl).t1h = function (a, b) {
    return this.a1p(a, b);
  };
  protoOf(SubQuotGMagmaImpl).b1p = function (gVector) {
    return this.n1y_1.r1h(gVector);
  };
  protoOf(SubQuotGMagmaImpl).r1h = function (gVector) {
    return this.b1p(gVector);
  };
  protoOf(SubQuotGMagmaImpl).c1p = function (gVector) {
    return this.n1y_1.s1h(gVector);
  };
  protoOf(SubQuotGMagmaImpl).s1h = function (gVector) {
    return this.c1p(gVector);
  };
  protoOf(SubQuotGMagmaImpl).d1p = function (gVectorOrZero, degree) {
    return this.n1y_1.q1h(gVectorOrZero, degree);
  };
  protoOf(SubQuotGMagmaImpl).q1h = function (gVectorOrZero, degree) {
    return this.d1p(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(SubQuotGMagmaImpl).e1p = function (a, b) {
    return this.n1y_1.y1h(a, b);
  };
  protoOf(SubQuotGMagmaImpl).y1h = function (a, b) {
    return this.e1p(a, b);
  };
  protoOf(SubQuotGMagmaImpl).f1p = function (basisName, degree) {
    return this.n1y_1.m1h(basisName, degree);
  };
  protoOf(SubQuotGMagmaImpl).m1h = function (basisName, degree) {
    var tmp = basisName instanceof SubQuotBasis ? basisName : THROW_CCE();
    return this.f1p(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(SubQuotGMagmaImpl).g1p = function (vector, degree) {
    return this.n1y_1.k1h(vector, degree);
  };
  protoOf(SubQuotGMagmaImpl).k1h = function (vector, degree) {
    return this.g1p(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(SubQuotGMagmaImpl).h1p = function (vector, degree) {
    return this.n1y_1.l1h(vector, degree);
  };
  protoOf(SubQuotGMagmaImpl).l1h = function (vector, degree) {
    return this.h1p(vector, degree);
  };
  protoOf(SubQuotGMagmaImpl).g1h = function (degree) {
    return this.n1y_1.g1h(degree);
  };
  protoOf(SubQuotGMagmaImpl).l = function (degree) {
    return this.n1y_1.l(degree);
  };
  protoOf(SubQuotGMagmaImpl).n1h = function (degree) {
    return this.n1y_1.n1h(degree);
  };
  protoOf(SubQuotGMagmaImpl).c1m = function (degree) {
    return this.n1y_1.c1m(degree);
  };
  protoOf(SubQuotGMagmaImpl).i1p = function (augmentedDegree) {
    return this.n1y_1.i1p(augmentedDegree);
  };
  protoOf(SubQuotGMagmaImpl).o1h = function (degree) {
    return this.n1y_1.o1h(degree);
  };
  protoOf(SubQuotGMagmaImpl).p1h = function (degree) {
    return this.n1y_1.p1h(degree);
  };
  protoOf(SubQuotGMagmaImpl).j1p = function (scalar, gVector) {
    return this.n1y_1.v1h(scalar, gVector);
  };
  protoOf(SubQuotGMagmaImpl).v1h = function (scalar, gVector) {
    return this.j1p(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  protoOf(SubQuotGMagmaImpl).t1g = function (gVector) {
    return this.n1y_1.t1g(gVector);
  };
  protoOf(SubQuotGMagmaImpl).k1p = function (a, b) {
    return this.n1y_1.u1h(a, b);
  };
  protoOf(SubQuotGMagmaImpl).u1h = function (a, b) {
    return this.k1p(a, b);
  };
  protoOf(SubQuotGMagmaImpl).toString = function () {
    return this.n1y_1.toString();
  };
  protoOf(SubQuotGMagmaImpl).s1i = function (printConfig) {
    return this.n1y_1.s1i(printConfig);
  };
  protoOf(SubQuotGMagmaImpl).g1g = function () {
    return this.o1y_1;
  };
  function Companion_34() {
    Companion_instance_34 = this;
  }
  protoOf(Companion_34).p1y = function (matrixSpace, totalGVectorSpace, subspaceGenerator, quotientGenerator, boundedness, name) {
    return new SubQuotGVectorSpaceImpl(matrixSpace, totalGVectorSpace, subspaceGenerator, quotientGenerator, name, boundedness);
  };
  protoOf(Companion_34).z1o = function (matrixSpace, totalGVectorSpace, subspaceGenerator, quotientGenerator, boundedness, name, $super) {
    boundedness = boundedness === VOID ? totalGVectorSpace.i1h() : boundedness;
    name = name === VOID ? subspaceGenerator.d1h() + '/' + quotientGenerator.d1h() : name;
    return $super === VOID ? this.p1y(matrixSpace, totalGVectorSpace, subspaceGenerator, quotientGenerator, boundedness, name) : $super.p1y.call(this, matrixSpace, totalGVectorSpace, subspaceGenerator, quotientGenerator, boundedness, name);
  };
  var Companion_instance_34;
  function Companion_getInstance_35() {
    if (Companion_instance_34 == null)
      new Companion_34();
    return Companion_instance_34;
  }
  function SubQuotGVectorSpace() {
  }
  function SubQuotGVectorSpaceImpl$projection$delegate$lambda$lambda(this$0) {
    return function (degree) {
      return this$0.g1h(degree).y1n();
    };
  }
  function SubQuotGVectorSpaceImpl$projection$delegate$lambda(this$0) {
    return function () {
      var tmp = Companion_getInstance_21();
      var tmp_0 = this$0.x1y_1.c1j();
      return tmp.l1s(this$0.r1y_1, this$0, tmp_0, this$0.q1y_1, 'projection', SubQuotGVectorSpaceImpl$projection$delegate$lambda$lambda(this$0));
    };
  }
  function SubQuotGVectorSpaceImpl$section$delegate$lambda$lambda(this$0) {
    return function (degree) {
      return this$0.g1h(degree).l1o();
    };
  }
  function SubQuotGVectorSpaceImpl$section$delegate$lambda(this$0) {
    return function () {
      var tmp = Companion_getInstance_21();
      var tmp_0 = this$0.x1y_1.c1j();
      return tmp.l1s(this$0, this$0.r1y_1, tmp_0, this$0.q1y_1, 'section', SubQuotGVectorSpaceImpl$section$delegate$lambda$lambda(this$0));
    };
  }
  function SubQuotGVectorSpaceImpl(matrixSpace, totalGVectorSpace, subspaceGenerator, quotientGenerator, name, boundedness) {
    this.q1y_1 = matrixSpace;
    this.r1y_1 = totalGVectorSpace;
    this.s1y_1 = subspaceGenerator;
    this.t1y_1 = quotientGenerator;
    this.u1y_1 = name;
    this.v1y_1 = boundedness;
    this.w1y_1 = this.r1y_1.b1h();
    this.x1y_1 = this.r1y_1.c1h();
    this.y1y_1 = Companion_getInstance_78().j1w(this.r1y_1.e1h());
    this.z1y_1 = this.r1y_1.f1h();
    var tmp = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp.a1z_1 = LinkedHashMap_init_$Create$();
    this.b1z_1 = Companion_getInstance_25().n1p(this);
    this.c1z_1 = this;
    this.d1z_1 = new ZeroGVector(this);
    var tmp_0 = this;
    tmp_0.e1z_1 = lazy(SubQuotGVectorSpaceImpl$projection$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.f1z_1 = lazy(SubQuotGVectorSpaceImpl$section$delegate$lambda(this));
  }
  protoOf(SubQuotGVectorSpaceImpl).d1h = function () {
    return this.u1y_1;
  };
  protoOf(SubQuotGVectorSpaceImpl).i1h = function () {
    return this.v1y_1;
  };
  protoOf(SubQuotGVectorSpaceImpl).b1h = function () {
    return this.w1y_1;
  };
  protoOf(SubQuotGVectorSpaceImpl).c1h = function () {
    return this.x1y_1;
  };
  protoOf(SubQuotGVectorSpaceImpl).e1h = function () {
    return this.y1y_1;
  };
  protoOf(SubQuotGVectorSpaceImpl).f1h = function () {
    return this.z1y_1;
  };
  protoOf(SubQuotGVectorSpaceImpl).g1g = function () {
    return this.b1z_1;
  };
  protoOf(SubQuotGVectorSpaceImpl).h1h = function () {
    return this.c1z_1;
  };
  protoOf(SubQuotGVectorSpaceImpl).z1h = function () {
    return this.d1z_1;
  };
  protoOf(SubQuotGVectorSpaceImpl).y1n = function () {
    // Inline function 'kotlin.getValue' call
    projection$factory_1();
    return this.e1z_1.w();
  };
  protoOf(SubQuotGVectorSpaceImpl).g1h = function (degree) {
    // Inline function 'kotlin.collections.getOrPut' call
    var tmp0_getOrPut = this.a1z_1;
    var value = tmp0_getOrPut.u2(degree);
    var tmp;
    if (value == null) {
      // Inline function 'com.github.shwaka.kohomology.dg.SubQuotGVectorSpaceImpl.get.<anonymous>' call
      var answer = Companion_getInstance_79().g1z(this.q1y_1, this.r1y_1.g1h(degree), this.s1y_1.g1h(degree), this.t1y_1.g1h(degree));
      tmp0_getOrPut.z3(degree, answer);
      tmp = answer;
    } else {
      tmp = value;
    }
    return tmp;
  };
  protoOf(SubQuotGVectorSpaceImpl).l = function (degree) {
    return this.g1h(this.x1y_1.bi(degree));
  };
  protoOf(SubQuotGVectorSpaceImpl).toString = function () {
    return this.s1i(Companion_getInstance_70().f1m_1);
  };
  protoOf(SubQuotGVectorSpaceImpl).s1i = function (printConfig) {
    var sub = this.s1y_1.s1i(printConfig);
    var quot = this.t1y_1.s1i(printConfig);
    return sub + '/' + quot;
  };
  function projection$factory_1() {
    return getPropertyCallableRef('projection', 1, KProperty1, function (receiver) {
      return receiver.y1n();
    }, null);
  }
  function Degree() {
  }
  function DegreeGroup() {
  }
  function AugmentedDegreeGroup() {
  }
  function AugmentedDegreeContext(group) {
    DegreeContext.call(this, group);
    this.r1z_1 = group;
  }
  protoOf(AugmentedDegreeContext).e1g = function (degree) {
    return this.r1z_1.e1g(degree);
  };
  protoOf(AugmentedDegreeContext).s1z = function (_this__u8e3s4) {
    return this.e1g(_this__u8e3s4);
  };
  function AugmentationDegreeMorphism(source) {
    this.z1z_1 = source;
    this.a20_1 = IntDegreeGroup_getInstance();
  }
  protoOf(AugmentationDegreeMorphism).t1k = function () {
    return this.a20_1;
  };
  protoOf(AugmentationDegreeMorphism).b20 = function (degree) {
    return new IntDegree(this.z1z_1.e1g(degree));
  };
  protoOf(AugmentationDegreeMorphism).x1s = function (degree) {
    return this.b20(isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  function DegreeContext(group) {
    this.h1g_1 = group;
  }
  protoOf(DegreeContext).g1g = function () {
    return this.h1g_1.g1g();
  };
  protoOf(DegreeContext).c1j = function () {
    return this.h1g_1.c1j();
  };
  protoOf(DegreeContext).n1z = function (degree1, degree2) {
    return this.h1g_1.n1z(degree1, degree2);
  };
  protoOf(DegreeContext).bi = function (n) {
    return this.h1g_1.bi(n);
  };
  protoOf(DegreeContext).p1z = function (degree, n) {
    return this.h1g_1.p1z(degree, n);
  };
  protoOf(DegreeContext).o1z = function (degree1, degree2) {
    return this.h1g_1.o1z(degree1, degree2);
  };
  protoOf(DegreeContext).t1z = function (_this__u8e3s4) {
    return this.bi(_this__u8e3s4);
  };
  protoOf(DegreeContext).i1g = function (_this__u8e3s4, other) {
    return this.n1z(_this__u8e3s4, other);
  };
  protoOf(DegreeContext).u1z = function (_this__u8e3s4, other) {
    return this.n1z(_this__u8e3s4, this.t1z(other));
  };
  protoOf(DegreeContext).l1r = function (_this__u8e3s4, other) {
    return this.o1z(_this__u8e3s4, other);
  };
  protoOf(DegreeContext).v1z = function (_this__u8e3s4, n) {
    return this.p1z(_this__u8e3s4, n);
  };
  protoOf(DegreeContext).w1z = function (_this__u8e3s4, degree) {
    return this.p1z(degree, _this__u8e3s4);
  };
  protoOf(DegreeContext).x1z = function (_this__u8e3s4) {
    return this.p1z(_this__u8e3s4, -1);
  };
  protoOf(DegreeContext).y1z = function (_this__u8e3s4) {
    // Inline function 'kotlin.collections.fold' call
    var accumulator = this.c1j();
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'com.github.shwaka.kohomology.dg.degree.DegreeContext.sum.<anonymous>' call
      var tmp1_anonymous = accumulator;
      accumulator = this.i1g(tmp1_anonymous, element);
    }
    return accumulator;
  };
  function IntDegree(value) {
    this.c20_1 = value;
  }
  protoOf(IntDegree).h1z = function () {
    return Companion_getInstance_69().bi(this.c20_1);
  };
  protoOf(IntDegree).j1z = function () {
    return (this.c20_1 % 2 | 0) === 0;
  };
  protoOf(IntDegree).tj = function () {
    return this.c20_1 === 0;
  };
  protoOf(IntDegree).i1z = function () {
    return this.c20_1 === 1;
  };
  protoOf(IntDegree).toString = function () {
    return this.c20_1.toString();
  };
  protoOf(IntDegree).hashCode = function () {
    return this.c20_1;
  };
  protoOf(IntDegree).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof IntDegree))
      return false;
    var tmp0_other_with_cast = other instanceof IntDegree ? other : THROW_CCE();
    if (!(this.c20_1 === tmp0_other_with_cast.c20_1))
      return false;
    return true;
  };
  function IntDegreeGroup$context$delegate$lambda(this$0) {
    return function () {
      return new AugmentedDegreeContext(this$0);
    };
  }
  function IntDegreeGroup() {
    IntDegreeGroup_instance = this;
    var tmp = this;
    tmp.e20_1 = lazy(IntDegreeGroup$context$delegate$lambda(this));
  }
  protoOf(IntDegreeGroup).g1g = function () {
    // Inline function 'kotlin.getValue' call
    context$factory();
    return this.e20_1.w();
  };
  protoOf(IntDegreeGroup).bi = function (n) {
    return new IntDegree(n);
  };
  protoOf(IntDegreeGroup).f20 = function (degree) {
    return degree.c20_1;
  };
  protoOf(IntDegreeGroup).e1g = function (degree) {
    return this.f20(degree instanceof IntDegree ? degree : THROW_CCE());
  };
  protoOf(IntDegreeGroup).g20 = function (degree1, degree2) {
    return new IntDegree(degree1.c20_1 + degree2.c20_1 | 0);
  };
  protoOf(IntDegreeGroup).n1z = function (degree1, degree2) {
    var tmp = degree1 instanceof IntDegree ? degree1 : THROW_CCE();
    return this.g20(tmp, degree2 instanceof IntDegree ? degree2 : THROW_CCE());
  };
  protoOf(IntDegreeGroup).h20 = function (degree1, degree2) {
    return new IntDegree(degree1.c20_1 - degree2.c20_1 | 0);
  };
  protoOf(IntDegreeGroup).o1z = function (degree1, degree2) {
    var tmp = degree1 instanceof IntDegree ? degree1 : THROW_CCE();
    return this.h20(tmp, degree2 instanceof IntDegree ? degree2 : THROW_CCE());
  };
  protoOf(IntDegreeGroup).i20 = function (degree, n) {
    return new IntDegree(imul(degree.c20_1, n));
  };
  protoOf(IntDegreeGroup).p1z = function (degree, n) {
    return this.i20(degree instanceof IntDegree ? degree : THROW_CCE(), n);
  };
  protoOf(IntDegreeGroup).f1g = function (augmentedDegree) {
    return listOf(new IntDegree(augmentedDegree));
  };
  var IntDegreeGroup_instance;
  function IntDegreeGroup_getInstance() {
    if (IntDegreeGroup_instance == null)
      new IntDegreeGroup();
    return IntDegreeGroup_instance;
  }
  function context$factory() {
    return getPropertyCallableRef('context', 1, KProperty1, function (receiver) {
      return receiver.g1g();
    }, null);
  }
  function MultiDegree$isEven$lambda(this$0) {
    return function (it) {
      return this$0.n20_1.j20_1.l(it).toString();
    };
  }
  function MultiDegree(group, constantTerm, coeffList) {
    this.n20_1 = group;
    this.o20_1 = constantTerm;
    this.p20_1 = coeffList;
  }
  protoOf(MultiDegree).h1z = function () {
    return Companion_getInstance_69().q20(plus(listOf(this.o20_1), toList_0(this.p20_1)));
  };
  protoOf(MultiDegree).j1z = function () {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.collections.filter' call
    var tmp0_filter = get_indices(this.p20_1);
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo = ArrayList_init_$Create$_0();
    var inductionVariable = tmp0_filter.z_1;
    var last = tmp0_filter.a1_1;
    if (inductionVariable <= last)
      do {
        var element = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegree.isEven.<anonymous>' call
        if (isOdd_0(this.p20_1[element])) {
          tmp0_filterTo.a(element);
        }
      }
       while (!(element === last));
    // Inline function 'kotlin.contracts.contract' call
    var tmp;
    // Inline function 'kotlin.collections.isNotEmpty' call
    if (!tmp0_filterTo.p()) {
      var oddIndeterminateString = joinToString(tmp0_filterTo, ', ', VOID, VOID, VOID, VOID, MultiDegree$isEven$lambda(this));
      throw ArithmeticException_init_$Create$('Cannot determine the parity of ' + this + ', since the coefficients of ' + oddIndeterminateString + ' are odd');
    }
    return isEven(this.o20_1);
  };
  protoOf(MultiDegree).tj = function () {
    var tmp;
    if (this.o20_1 === 0) {
      var tmp$ret$1;
      $l$block: {
        // Inline function 'kotlin.collections.all' call
        var indexedObject = this.p20_1;
        var inductionVariable = 0;
        var last = indexedObject.length;
        while (inductionVariable < last) {
          var element = indexedObject[inductionVariable];
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegree.isZero.<anonymous>' call
          if (!(element === 0)) {
            tmp$ret$1 = false;
            break $l$block;
          }
        }
        tmp$ret$1 = true;
      }
      tmp = tmp$ret$1;
    } else {
      tmp = false;
    }
    return tmp;
  };
  protoOf(MultiDegree).i1z = function () {
    var tmp;
    if (this.o20_1 === 1) {
      var tmp$ret$1;
      $l$block: {
        // Inline function 'kotlin.collections.all' call
        var indexedObject = this.p20_1;
        var inductionVariable = 0;
        var last = indexedObject.length;
        while (inductionVariable < last) {
          var element = indexedObject[inductionVariable];
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegree.isOne.<anonymous>' call
          if (!(element === 0)) {
            tmp$ret$1 = false;
            break $l$block;
          }
        }
        tmp$ret$1 = true;
      }
      tmp = tmp$ret$1;
    } else {
      tmp = false;
    }
    return tmp;
  };
  protoOf(MultiDegree).equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (!(other instanceof MultiDegree))
      THROW_CCE();
    if (!this.n20_1.equals(other.n20_1))
      return false;
    if (!(this.o20_1 === other.o20_1))
      return false;
    if (!contentEquals(this.p20_1, other.p20_1))
      return false;
    return true;
  };
  protoOf(MultiDegree).hashCode = function () {
    var result = this.n20_1.hashCode();
    result = imul(31, result) + this.o20_1 | 0;
    result = imul(31, result) + contentHashCode(this.p20_1) | 0;
    return result;
  };
  protoOf(MultiDegree).toString = function () {
    // Inline function 'kotlin.collections.isEmpty' call
    if (this.p20_1.length === 0) {
      return this.o20_1.toString();
    }
    var tmp;
    if (!(this.o20_1 === 0)) {
      tmp = listOf('' + this.o20_1);
    } else {
      tmp = emptyList();
    }
    var stringListForConstantTerm = tmp;
    // Inline function 'kotlin.collections.mapNotNull' call
    var tmp1_mapNotNull = get_indices(this.p20_1);
    // Inline function 'kotlin.collections.mapNotNullTo' call
    var tmp0_mapNotNullTo = ArrayList_init_$Create$_0();
    // Inline function 'kotlin.collections.forEach' call
    var inductionVariable = tmp1_mapNotNull.z_1;
    var last = tmp1_mapNotNull.a1_1;
    if (inductionVariable <= last)
      do {
        var element = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.collections.mapNotNullTo.<anonymous>' call
        var tmp$ret$1;
        // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegree.toString.<anonymous>' call
        var coeff = this.p20_1[element];
        switch (coeff) {
          case 0:
            tmp$ret$1 = null;
            break;
          case 1:
            tmp$ret$1 = this.n20_1.j20_1.l(element).r20_1;
            break;
          default:
            tmp$ret$1 = '' + coeff + this.n20_1.j20_1.l(element).r20_1;
            break;
        }
        var tmp0_safe_receiver = tmp$ret$1;
        if (tmp0_safe_receiver == null)
          null;
        else {
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          tmp0_mapNotNullTo.a(tmp0_safe_receiver);
        }
      }
       while (!(element === last));
    var stringListForCoeff = tmp0_mapNotNullTo;
    var stringList = plus(stringListForConstantTerm, stringListForCoeff);
    var tmp_0;
    if (stringList.p()) {
      tmp_0 = '0';
    } else {
      tmp_0 = joinToString(stringList, ' + ');
    }
    return tmp_0;
  };
  function oneAtIndex($this, index) {
    // Inline function 'kotlin.collections.List' call
    var tmp0_List = $this.l20_1;
    // Inline function 'kotlin.collections.MutableList' call
    var list = ArrayList_init_$Create$(tmp0_List);
    // Inline function 'kotlin.repeat' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    if (inductionVariable < tmp0_List)
      do {
        var index_0 = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.collections.MutableList.<anonymous>' call
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegreeGroup.oneAtIndex.<anonymous>' call
        tmp$ret$0 = index_0 === index ? 1 : 0;
        list.a(tmp$ret$0);
      }
       while (inductionVariable < tmp0_List);
    return $this.t20(list);
  }
  function listAllDegreesInternal($this, augmentedDegree, index) {
    if (index < 0 ? true : index > $this.l20_1)
      throw Exception_init_$Create$("This can't happen! (illegal index: " + index + ')');
    if (index === $this.l20_1) {
      return augmentedDegree === 0 ? listOf($this.c1j()) : emptyList();
    }
    var cacheKey = new Pair(augmentedDegree, index);
    // Inline function 'kotlin.collections.getOrPut' call
    var tmp0_getOrPut = $this.m20_1;
    var value = tmp0_getOrPut.u2(cacheKey);
    var tmp;
    if (value == null) {
      // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegreeGroup.listAllDegreesInternal.<anonymous>' call
      var newAugmentedDegree = augmentedDegree - $this.u20(oneAtIndex($this, index)) | 0;
      var tmp_0;
      if (newAugmentedDegree >= 0) {
        // Inline function 'kotlin.collections.map' call
        var tmp0_map = listAllDegreesInternal($this, newAugmentedDegree, index);
        // Inline function 'kotlin.collections.mapTo' call
        var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
        var tmp0_iterator = tmp0_map.f();
        while (tmp0_iterator.g()) {
          var item = tmp0_iterator.h();
          var tmp$ret$2;
          // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegreeGroup.listAllDegreesInternal.<anonymous>.<anonymous>' call
          // Inline function 'kotlin.run' call
          // Inline function 'kotlin.contracts.contract' call
          // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegreeGroup.listAllDegreesInternal.<anonymous>.<anonymous>.<anonymous>' call
          tmp$ret$2 = $this.g1g().i1g(item, oneAtIndex($this, index));
          tmp0_mapTo.a(tmp$ret$2);
        }
        tmp_0 = tmp0_mapTo;
      } else {
        tmp_0 = emptyList();
      }
      var listWithNonZeroAtIndex = tmp_0;
      var listWithZeroAtIndex = listAllDegreesInternal($this, augmentedDegree, index + 1 | 0);
      var answer = plus(listWithNonZeroAtIndex, listWithZeroAtIndex);
      tmp0_getOrPut.z3(cacheKey, answer);
      tmp = answer;
    } else {
      tmp = value;
    }
    return tmp;
  }
  function MultiDegreeGroup$context$delegate$lambda(this$0) {
    return function () {
      return new AugmentedDegreeContext(this$0);
    };
  }
  function MultiDegreeGroup(indeterminateList) {
    this.j20_1 = indeterminateList;
    var tmp = this;
    tmp.k20_1 = lazy(MultiDegreeGroup$context$delegate$lambda(this));
    this.l20_1 = this.j20_1.i() + 1 | 0;
    var tmp_0 = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp_0.m20_1 = LinkedHashMap_init_$Create$();
  }
  protoOf(MultiDegreeGroup).g1g = function () {
    // Inline function 'kotlin.getValue' call
    context$factory_0();
    return this.k20_1.w();
  };
  protoOf(MultiDegreeGroup).r1l = function () {
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = get_indices_0(this.j20_1);
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.z_1;
    var last = tmp0_map.a1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$3;
        // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegreeGroup.<get-generatorList>.<anonymous>' call
        // Inline function 'kotlin.collections.List' call
        var tmp0_List = this.j20_1.i();
        // Inline function 'kotlin.collections.MutableList' call
        var list = ArrayList_init_$Create$(tmp0_List);
        // Inline function 'kotlin.repeat' call
        // Inline function 'kotlin.contracts.contract' call
        var inductionVariable_0 = 0;
        if (inductionVariable_0 < tmp0_List)
          do {
            var index = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            // Inline function 'kotlin.collections.MutableList.<anonymous>' call
            var tmp$ret$0;
            // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegreeGroup.<get-generatorList>.<anonymous>.<anonymous>' call
            tmp$ret$0 = item === index ? 1 : 0;
            list.a(tmp$ret$0);
          }
           while (inductionVariable_0 < tmp0_List);
        var coeffList = list;
        tmp$ret$3 = this.v20(0, coeffList);
        tmp0_mapTo.a(tmp$ret$3);
      }
       while (!(item === last));
    return tmp0_mapTo;
  };
  protoOf(MultiDegreeGroup).bi = function (n) {
    var tmp = 0;
    var tmp_0 = this.j20_1.i();
    var tmp_1 = new Int32Array(tmp_0);
    while (tmp < tmp_0) {
      tmp_1[tmp] = 0;
      tmp = tmp + 1 | 0;
    }
    return new MultiDegree(this, n, tmp_1);
  };
  protoOf(MultiDegreeGroup).u20 = function (degree) {
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = get_indices(degree.p20_1);
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.z_1;
    var last = tmp0_map.a1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegreeGroup.augmentation.<anonymous>' call
        tmp$ret$0 = imul(degree.p20_1[item], this.j20_1.l(item).s20_1);
        tmp0_mapTo.a(tmp$ret$0);
      }
       while (!(item === last));
    return degree.o20_1 + sum(tmp0_mapTo) | 0;
  };
  protoOf(MultiDegreeGroup).e1g = function (degree) {
    return this.u20(degree instanceof MultiDegree ? degree : THROW_CCE());
  };
  protoOf(MultiDegreeGroup).w20 = function (degree1, degree2) {
    if (!degree1.n20_1.equals(this))
      throw new IllegalContextException('' + degree1 + ' is not an element of ' + this);
    if (!degree2.n20_1.equals(this))
      throw new IllegalContextException('' + degree2 + ' is not an element of ' + this);
    var tmp = 0;
    var tmp_0 = this.j20_1.i();
    var tmp_1 = new Int32Array(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      tmp_1[tmp_2] = degree1.p20_1[tmp_2] + degree2.p20_1[tmp_2] | 0;
      tmp = tmp + 1 | 0;
    }
    var coeffList = tmp_1;
    return new MultiDegree(this, degree1.o20_1 + degree2.o20_1 | 0, coeffList);
  };
  protoOf(MultiDegreeGroup).n1z = function (degree1, degree2) {
    var tmp = degree1 instanceof MultiDegree ? degree1 : THROW_CCE();
    return this.w20(tmp, degree2 instanceof MultiDegree ? degree2 : THROW_CCE());
  };
  protoOf(MultiDegreeGroup).x20 = function (degree1, degree2) {
    if (!degree1.n20_1.equals(this))
      throw new IllegalContextException('' + degree1 + ' is not an element of ' + this);
    if (!degree2.n20_1.equals(this))
      throw new IllegalContextException('' + degree2 + ' is not an element of ' + this);
    var tmp = 0;
    var tmp_0 = this.j20_1.i();
    var tmp_1 = new Int32Array(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      tmp_1[tmp_2] = degree1.p20_1[tmp_2] - degree2.p20_1[tmp_2] | 0;
      tmp = tmp + 1 | 0;
    }
    var coeffList = tmp_1;
    return new MultiDegree(this, degree1.o20_1 - degree2.o20_1 | 0, coeffList);
  };
  protoOf(MultiDegreeGroup).o1z = function (degree1, degree2) {
    var tmp = degree1 instanceof MultiDegree ? degree1 : THROW_CCE();
    return this.x20(tmp, degree2 instanceof MultiDegree ? degree2 : THROW_CCE());
  };
  protoOf(MultiDegreeGroup).y20 = function (degree, n) {
    if (!degree.n20_1.equals(this))
      throw new IllegalContextException('' + degree + ' is not an element of ' + this);
    var tmp = 0;
    var tmp_0 = this.j20_1.i();
    var tmp_1 = new Int32Array(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      tmp_1[tmp_2] = imul(degree.p20_1[tmp_2], n);
      tmp = tmp + 1 | 0;
    }
    var coeffList = tmp_1;
    return new MultiDegree(this, imul(degree.o20_1, n), coeffList);
  };
  protoOf(MultiDegreeGroup).p1z = function (degree, n) {
    return this.y20(degree instanceof MultiDegree ? degree : THROW_CCE(), n);
  };
  protoOf(MultiDegreeGroup).v20 = function (constantTerm, coeffList) {
    if (!(coeffList.i() === this.j20_1.i()))
      throw IllegalArgumentException_init_$Create$('The length of ' + coeffList + ' should be ' + this.j20_1.i() + ', but ' + coeffList.i() + ' was given');
    return new MultiDegree(this, constantTerm, toIntArray(coeffList));
  };
  protoOf(MultiDegreeGroup).t20 = function (coeffList) {
    if (!(coeffList.i() === (this.j20_1.i() + 1 | 0)))
      throw IllegalArgumentException_init_$Create$('The length of ' + coeffList + ' should be ' + (this.j20_1.i() + 1 | 0) + ', but ' + coeffList.i() + ' was given');
    return new MultiDegree(this, coeffList.l(0), toIntArray(drop(coeffList, 1)));
  };
  protoOf(MultiDegreeGroup).f1g = function (augmentedDegree) {
    return listAllDegreesInternal(this, augmentedDegree, 0);
  };
  protoOf(MultiDegreeGroup).z20 = function (degree) {
    return degree.n20_1.equals(this);
  };
  protoOf(MultiDegreeGroup).toString = function () {
    return 'MultiDegreeGroup(indeterminateList=' + this.j20_1 + ')';
  };
  protoOf(MultiDegreeGroup).hashCode = function () {
    return hashCode(this.j20_1);
  };
  protoOf(MultiDegreeGroup).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MultiDegreeGroup))
      return false;
    var tmp0_other_with_cast = other instanceof MultiDegreeGroup ? other : THROW_CCE();
    if (!equals(this.j20_1, tmp0_other_with_cast.j20_1))
      return false;
    return true;
  };
  function DegreeIndeterminate(name, defaultValue) {
    this.r20_1 = name;
    this.s20_1 = defaultValue;
  }
  protoOf(DegreeIndeterminate).toString = function () {
    return 'DegreeIndeterminate(name=' + this.r20_1 + ', defaultValue=' + this.s20_1 + ')';
  };
  protoOf(DegreeIndeterminate).hashCode = function () {
    var result = getStringHashCode(this.r20_1);
    result = imul(result, 31) + this.s20_1 | 0;
    return result;
  };
  protoOf(DegreeIndeterminate).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof DegreeIndeterminate))
      return false;
    var tmp0_other_with_cast = other instanceof DegreeIndeterminate ? other : THROW_CCE();
    if (!(this.r20_1 === tmp0_other_with_cast.r20_1))
      return false;
    if (!(this.s20_1 === tmp0_other_with_cast.s20_1))
      return false;
    return true;
  };
  function MultiDegreeMorphism(source, target, values) {
    this.a21_1 = source;
    this.b21_1 = target;
    this.c21_1 = values;
    if (!(this.c21_1.i() === this.a21_1.j20_1.i()))
      throw IllegalArgumentException_init_$Create$('values.size should be equal to source.indeterminateList.size');
  }
  protoOf(MultiDegreeMorphism).t1k = function () {
    return this.b21_1;
  };
  protoOf(MultiDegreeMorphism).d21 = function (degree) {
    if (!this.a21_1.z20(degree))
      throw IllegalArgumentException_init_$Create$('The degree ' + degree + ' is not an element of the group ' + this.a21_1);
    // Inline function 'kotlin.run' call
    var tmp0_run = this.b21_1.g1g();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegreeMorphism.invoke.<anonymous>' call
    var tmp = this.b21_1.bi(degree.o20_1);
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = get_indices(degree.p20_1);
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.z_1;
    var last = tmp0_map.a1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegreeMorphism.invoke.<anonymous>.<anonymous>' call
        tmp$ret$0 = tmp0_run.w1z(degree.p20_1[item], this.c21_1.l(item));
        tmp0_mapTo.a(tmp$ret$0);
      }
       while (!(item === last));
    return tmp0_run.i1g(tmp, tmp0_run.y1z(tmp0_mapTo));
  };
  protoOf(MultiDegreeMorphism).x1s = function (degree) {
    return this.d21(degree instanceof MultiDegree ? degree : THROW_CCE());
  };
  function InclusionFromIntDegreeToMultiDegree(target) {
    this.e21_1 = target;
    this.f21_1 = IntDegreeGroup_getInstance();
  }
  protoOf(InclusionFromIntDegreeToMultiDegree).t1k = function () {
    return this.e21_1;
  };
  protoOf(InclusionFromIntDegreeToMultiDegree).g21 = function (degree) {
    return this.e21_1.bi(degree.c20_1);
  };
  protoOf(InclusionFromIntDegreeToMultiDegree).x1s = function (degree) {
    return this.g21(degree instanceof IntDegree ? degree : THROW_CCE());
  };
  function context$factory_0() {
    return getPropertyCallableRef('context', 1, KProperty1, function (receiver) {
      return receiver.g1g();
    }, null);
  }
  function Zero() {
    Zero_instance = this;
  }
  var Zero_instance;
  function Zero_getInstance() {
    if (Zero_instance == null)
      new Zero();
    return Zero_instance;
  }
  function Identifier(name) {
    this.y1q_1 = name;
  }
  protoOf(Identifier).toString = function () {
    return 'Identifier(name=' + this.y1q_1 + ')';
  };
  protoOf(Identifier).hashCode = function () {
    return getStringHashCode(this.y1q_1);
  };
  protoOf(Identifier).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Identifier))
      return false;
    var tmp0_other_with_cast = other instanceof Identifier ? other : THROW_CCE();
    if (!(this.y1q_1 === tmp0_other_with_cast.y1q_1))
      return false;
    return true;
  };
  function NatNumber(value) {
    this.x1q_1 = value;
  }
  protoOf(NatNumber).toString = function () {
    return 'NatNumber(value=' + this.x1q_1 + ')';
  };
  protoOf(NatNumber).hashCode = function () {
    return this.x1q_1;
  };
  protoOf(NatNumber).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof NatNumber))
      return false;
    var tmp0_other_with_cast = other instanceof NatNumber ? other : THROW_CCE();
    if (!(this.x1q_1 === tmp0_other_with_cast.x1q_1))
      return false;
    return true;
  };
  function UnaryMinus(value) {
    this.u1q_1 = value;
  }
  protoOf(UnaryMinus).toString = function () {
    return 'UnaryMinus(value=' + this.u1q_1 + ')';
  };
  protoOf(UnaryMinus).hashCode = function () {
    return hashCode(this.u1q_1);
  };
  protoOf(UnaryMinus).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof UnaryMinus))
      return false;
    var tmp0_other_with_cast = other instanceof UnaryMinus ? other : THROW_CCE();
    if (!equals(this.u1q_1, tmp0_other_with_cast.u1q_1))
      return false;
    return true;
  };
  function Power(base, exponent) {
    this.s1q_1 = base;
    this.t1q_1 = exponent;
  }
  protoOf(Power).toString = function () {
    return 'Power(base=' + this.s1q_1 + ', exponent=' + this.t1q_1 + ')';
  };
  protoOf(Power).hashCode = function () {
    var result = hashCode(this.s1q_1);
    result = imul(result, 31) + this.t1q_1 | 0;
    return result;
  };
  protoOf(Power).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Power))
      return false;
    var tmp0_other_with_cast = other instanceof Power ? other : THROW_CCE();
    if (!equals(this.s1q_1, tmp0_other_with_cast.s1q_1))
      return false;
    if (!(this.t1q_1 === tmp0_other_with_cast.t1q_1))
      return false;
    return true;
  };
  function Divide(numerator, denominator) {
    this.v1q_1 = numerator;
    this.w1q_1 = denominator;
  }
  protoOf(Divide).toString = function () {
    return 'Divide(numerator=' + this.v1q_1 + ', denominator=' + this.w1q_1 + ')';
  };
  protoOf(Divide).hashCode = function () {
    var result = hashCode(this.v1q_1);
    result = imul(result, 31) + hashCode(this.w1q_1) | 0;
    return result;
  };
  protoOf(Divide).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Divide))
      return false;
    var tmp0_other_with_cast = other instanceof Divide ? other : THROW_CCE();
    if (!equals(this.v1q_1, tmp0_other_with_cast.v1q_1))
      return false;
    if (!equals(this.w1q_1, tmp0_other_with_cast.w1q_1))
      return false;
    return true;
  };
  function Multiply(left, right) {
    this.q1q_1 = left;
    this.r1q_1 = right;
  }
  protoOf(Multiply).toString = function () {
    return 'Multiply(left=' + this.q1q_1 + ', right=' + this.r1q_1 + ')';
  };
  protoOf(Multiply).hashCode = function () {
    var result = hashCode(this.q1q_1);
    result = imul(result, 31) + hashCode(this.r1q_1) | 0;
    return result;
  };
  protoOf(Multiply).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Multiply))
      return false;
    var tmp0_other_with_cast = other instanceof Multiply ? other : THROW_CCE();
    if (!equals(this.q1q_1, tmp0_other_with_cast.q1q_1))
      return false;
    if (!equals(this.r1q_1, tmp0_other_with_cast.r1q_1))
      return false;
    return true;
  };
  function Subtract(left, right) {
    this.o1q_1 = left;
    this.p1q_1 = right;
  }
  protoOf(Subtract).toString = function () {
    return 'Subtract(left=' + this.o1q_1 + ', right=' + this.p1q_1 + ')';
  };
  protoOf(Subtract).hashCode = function () {
    var result = hashCode(this.o1q_1);
    result = imul(result, 31) + hashCode(this.p1q_1) | 0;
    return result;
  };
  protoOf(Subtract).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Subtract))
      return false;
    var tmp0_other_with_cast = other instanceof Subtract ? other : THROW_CCE();
    if (!equals(this.o1q_1, tmp0_other_with_cast.o1q_1))
      return false;
    if (!equals(this.p1q_1, tmp0_other_with_cast.p1q_1))
      return false;
    return true;
  };
  function Sum(left, right) {
    this.m1q_1 = left;
    this.n1q_1 = right;
  }
  protoOf(Sum).toString = function () {
    return 'Sum(left=' + this.m1q_1 + ', right=' + this.n1q_1 + ')';
  };
  protoOf(Sum).hashCode = function () {
    var result = hashCode(this.m1q_1);
    result = imul(result, 31) + hashCode(this.n1q_1) | 0;
    return result;
  };
  protoOf(Sum).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Sum))
      return false;
    var tmp0_other_with_cast = other instanceof Sum ? other : THROW_CCE();
    if (!equals(this.m1q_1, tmp0_other_with_cast.m1q_1))
      return false;
    if (!equals(this.n1q_1, tmp0_other_with_cast.n1q_1))
      return false;
    return true;
  };
  function ASTNode() {
  }
  function CharCategoryToken(name, firstCharCategoryList, nonFirstCharCategoryList, ignored) {
    ignored = ignored === VOID ? false : ignored;
    Token.call(this, name, ignored);
    this.j21_1 = firstCharCategoryList;
    this.k21_1 = nonFirstCharCategoryList;
  }
  protoOf(CharCategoryToken).qg = function (input, fromIndex) {
    if (!this.j21_1.g1(get_category(charSequenceGet(input, fromIndex)))) {
      return 0;
    }
    var index = fromIndex + 1 | 0;
    while (index < charSequenceLength(input) ? this.k21_1.g1(get_category(charSequenceGet(input, index))) : false) {
      index = index + 1 | 0;
    }
    return index - fromIndex | 0;
  };
  protoOf(CharCategoryToken).toString = function () {
    var tmp0_elvis_lhs = this.xf_1;
    return (tmp0_elvis_lhs == null ? '' : tmp0_elvis_lhs) + ' (' + this.j21_1 + ', ' + this.k21_1 + ')' + (this.yf_1 ? ' [ignorable]' : '');
  };
  function charCategoryToken(firstCharCategoryList, nonFirstCharCategoryList) {
    return new CharCategoryToken(null, firstCharCategoryList, nonFirstCharCategoryList);
  }
  function _get_zero__dhgbs3($this) {
    return $this.cg($this.o21_1, $this, zero$factory_0());
  }
  function _get_id__ndc34g($this) {
    return $this.cg($this.p21_1, $this, id$factory_0());
  }
  function _get_nat__e6db4g($this) {
    return $this.cg($this.q21_1, $this, nat$factory_0());
  }
  function _get_lpar__d9xvsm($this) {
    return $this.cg($this.r21_1, $this, lpar$factory_0());
  }
  function _get_rpar__dd8ncs($this) {
    return $this.cg($this.s21_1, $this, rpar$factory_0());
  }
  function _get_mul__e6d2rx($this) {
    return $this.cg($this.t21_1, $this, mul$factory_0());
  }
  function _get_pow__e6evjt($this) {
    return $this.cg($this.u21_1, $this, pow$factory_0());
  }
  function _get_div__e6738g($this) {
    return $this.cg($this.v21_1, $this, div$factory_0());
  }
  function _get_minus__e92hlr($this) {
    return $this.cg($this.w21_1, $this, minus$factory_0());
  }
  function _get_plus__dc2x2p($this) {
    return $this.cg($this.x21_1, $this, plus$factory_0());
  }
  function _get_ws__ndcdv3($this) {
    return $this.cg($this.y21_1, $this, ws$factory_0());
  }
  function _get_idParser__4cqmtr($this) {
    return $this.ag($this.z21_1, $this, idParser$factory_0());
  }
  function _get_natParser__86xlm9($this) {
    return $this.ag($this.a22_1, $this, natParser$factory_0());
  }
  function _get_parenParser__kd1lns($this) {
    return $this.ag($this.b22_1, $this, parenParser$factory_0());
  }
  function _get_minusParser__naumde($this) {
    return $this.ag($this.c22_1, $this, minusParser$factory_0());
  }
  function _get_termParser__9ktxa8($this) {
    return $this.ag($this.d22_1, $this, termParser$factory_0());
  }
  function _get_powerParser__cj0rqr($this) {
    return $this.ag($this.e22_1, $this, powerParser$factory_0());
  }
  function _get_mulDivChain__rkka6b($this) {
    return $this.ag($this.f22_1, $this, mulDivChain$factory_1());
  }
  function _get_subSumChain__3rvi9x($this) {
    return $this.ag($this.g22_1, $this, subSumChain$factory_0());
  }
  function GAlgebraElementASTGrammar$idParser$delegate$lambda($this$null) {
    return new Identifier($this$null.ih());
  }
  function GAlgebraElementASTGrammar$idParser$delegate$lambda_0($this$null) {
    return Zero_getInstance();
  }
  function GAlgebraElementASTGrammar$natParser$delegate$lambda($this$null) {
    return new NatNumber(toInt($this$null.ih()));
  }
  function GAlgebraElementASTGrammar$parenParser$delegate$lambda(_name_for_destructuring_parameter_0__wldtmu) {
    // Inline function 'kotlin.collections.component1' call
    var b = _name_for_destructuring_parameter_0__wldtmu.l(0);
    return (!(b == null) ? isInterface(b, ASTNode) : false) ? b : THROW_CCE();
  }
  function GAlgebraElementASTGrammar$parenParser$delegate$lambda_0(_name_for_destructuring_parameter_0__wldtmu) {
    // Inline function 'kotlin.collections.component1' call
    var a = _name_for_destructuring_parameter_0__wldtmu.l(0);
    return (!(a == null) ? isInterface(a, ASTNode) : false) ? a : THROW_CCE();
  }
  function GAlgebraElementASTGrammar$minusParser$delegate$lambda(_name_for_destructuring_parameter_0__wldtmu) {
    // Inline function 'kotlin.collections.component1' call
    var b = _name_for_destructuring_parameter_0__wldtmu.l(0);
    return (!(b == null) ? isInterface(b, ASTNode) : false) ? b : THROW_CCE();
  }
  function GAlgebraElementASTGrammar$minusParser$delegate$lambda_0(it) {
    return new UnaryMinus(it);
  }
  function GAlgebraElementASTGrammar$minusParser$delegate$lambda_1(_name_for_destructuring_parameter_0__wldtmu) {
    // Inline function 'kotlin.collections.component1' call
    var b = _name_for_destructuring_parameter_0__wldtmu.l(0);
    return (!(b == null) ? isInterface(b, ASTNode) : false) ? b : THROW_CCE();
  }
  function GAlgebraElementASTGrammar$minusParser$delegate$lambda_2(it) {
    return new UnaryMinus(it);
  }
  function GAlgebraElementASTGrammar$powerParser$delegate$lambda(_name_for_destructuring_parameter_0__wldtmu) {
    // Inline function 'kotlin.collections.component1' call
    var a = _name_for_destructuring_parameter_0__wldtmu.l(0);
    return (!(a == null) ? isInterface(a, ASTNode) : false) ? a : THROW_CCE();
  }
  function GAlgebraElementASTGrammar$powerParser$delegate$lambda_0(_name_for_destructuring_parameter_0__wldtmu) {
    // Inline function 'kotlin.collections.component1' call
    var a1 = _name_for_destructuring_parameter_0__wldtmu.l(0);
    // Inline function 'kotlin.collections.component2' call
    var a2 = _name_for_destructuring_parameter_0__wldtmu.l(1);
    var tmp = (!(a1 == null) ? isInterface(a1, ASTNode) : false) ? a1 : THROW_CCE();
    return new Tuple2(tmp, a2 instanceof TokenMatch ? a2 : THROW_CCE());
  }
  function GAlgebraElementASTGrammar$powerParser$delegate$lambda_1(_name_for_destructuring_parameter_0__wldtmu) {
    var node = _name_for_destructuring_parameter_0__wldtmu.j3();
    var n = _name_for_destructuring_parameter_0__wldtmu.k3();
    return new Power(node, toInt(n.ih()));
  }
  function GAlgebraElementASTGrammar$mulDivChain$delegate$lambda($this$null) {
    return $this$null.zg_1;
  }
  function GAlgebraElementASTGrammar$mulDivChain$delegate$lambda_0(left, op, right) {
    var tmp;
    if (equals(op, _get_mul__e6d2rx(GAlgebraElementASTGrammar_getInstance()))) {
      tmp = new Multiply(left, right);
    } else if (equals(op, _get_div__e6738g(GAlgebraElementASTGrammar_getInstance()))) {
      tmp = new Divide(left, right);
    } else {
      throw Exception_init_$Create$("This can't happen!");
    }
    return tmp;
  }
  function GAlgebraElementASTGrammar$mulDivChain$delegate$lambda_1($tmp2_leftAssociative) {
    return function (it) {
      return it.mf($tmp2_leftAssociative);
    };
  }
  function GAlgebraElementASTGrammar$subSumChain$delegate$lambda($this$null) {
    return $this$null.zg_1;
  }
  function GAlgebraElementASTGrammar$subSumChain$delegate$lambda_0(left, op, right) {
    var tmp;
    if (equals(op, _get_plus__dc2x2p(GAlgebraElementASTGrammar_getInstance()))) {
      tmp = new Sum(left, right);
    } else if (equals(op, _get_minus__e92hlr(GAlgebraElementASTGrammar_getInstance()))) {
      tmp = new Subtract(left, right);
    } else {
      throw Exception_init_$Create$("This can't happen!");
    }
    return tmp;
  }
  function GAlgebraElementASTGrammar$subSumChain$delegate$lambda_1($tmp2_leftAssociative) {
    return function (it) {
      return it.mf($tmp2_leftAssociative);
    };
  }
  function GAlgebraElementASTGrammar() {
    GAlgebraElementASTGrammar_instance = this;
    Grammar.call(this);
    this.o21_1 = this.bg(literalToken('zero'), this, zero$factory());
    this.p21_1 = this.bg(charCategoryToken(Companion_getInstance_68().i22_1, Companion_getInstance_69().d20_1), this, id$factory());
    this.q21_1 = this.bg(regexToken('\\d+'), this, nat$factory());
    this.r21_1 = this.bg(literalToken('('), this, lpar$factory());
    this.s21_1 = this.bg(literalToken(')'), this, rpar$factory());
    this.t21_1 = this.bg(literalToken('*'), this, mul$factory());
    this.u21_1 = this.bg(literalToken('^'), this, pow$factory());
    this.v21_1 = this.bg(literalToken('/'), this, div$factory());
    this.w21_1 = this.bg(literalToken('-'), this, minus$factory());
    this.x21_1 = this.bg(literalToken('+'), this, plus$factory());
    this.y21_1 = this.bg(regexToken('\\s*', true), this, ws$factory());
    var tmp = this;
    var tmp_0 = _get_id__ndc34g(this);
    var tmp_1 = use(tmp_0, GAlgebraElementASTGrammar$idParser$delegate$lambda);
    var tmp_2 = _get_zero__dhgbs3(this);
    tmp.z21_1 = this.zf(or(tmp_1, use(tmp_2, GAlgebraElementASTGrammar$idParser$delegate$lambda_0)), this, idParser$factory());
    var tmp_3 = this;
    var tmp_4 = _get_nat__e6db4g(this);
    tmp_3.a22_1 = this.zf(use(tmp_4, GAlgebraElementASTGrammar$natParser$delegate$lambda), this, natParser$factory());
    var tmp_5 = this;
    var tmp$ret$1;
    // Inline function 'com.github.h0tk3y.betterParse.combinators.and' call
    // Inline function 'com.github.h0tk3y.betterParse.combinators.and' call
    var tmp0_and = skip(_get_lpar__d9xvsm(this));
    var tmp1_and = parser(rootParser$factory(this));
    var tmp_6 = listOf_0([tmp0_and, tmp1_and]);
    var tmp2_and = new AndCombinator(tmp_6, GAlgebraElementASTGrammar$parenParser$delegate$lambda);
    var tmp3_and = skip(_get_rpar__dd8ncs(this));
    var tmp_7 = listOf_0([tmp2_and, tmp3_and]);
    tmp$ret$1 = new AndCombinator(tmp_7, GAlgebraElementASTGrammar$parenParser$delegate$lambda_0);
    tmp_5.b22_1 = this.zf(tmp$ret$1, this, parenParser$factory());
    var tmp_8 = this;
    // Inline function 'com.github.h0tk3y.betterParse.combinators.and' call
    var tmp0_and_0 = skip(_get_minus__e92hlr(this));
    var tmp1_and_0 = _get_parenParser__kd1lns(this);
    var tmp_9 = listOf_0([tmp0_and_0, tmp1_and_0]);
    var tmp_10 = new AndCombinator(tmp_9, GAlgebraElementASTGrammar$minusParser$delegate$lambda);
    var tmp_11 = map(tmp_10, GAlgebraElementASTGrammar$minusParser$delegate$lambda_0);
    // Inline function 'com.github.h0tk3y.betterParse.combinators.and' call
    var tmp2_and_0 = skip(_get_minus__e92hlr(this));
    var tmp3_and_0 = parser(mulDivChain$factory(this));
    var tmp_12 = listOf_0([tmp2_and_0, tmp3_and_0]);
    var tmp_13 = new AndCombinator(tmp_12, GAlgebraElementASTGrammar$minusParser$delegate$lambda_1);
    tmp_8.c22_1 = this.zf(or(tmp_11, map(tmp_13, GAlgebraElementASTGrammar$minusParser$delegate$lambda_2)), this, minusParser$factory());
    this.d22_1 = this.zf(or(or(or(_get_natParser__86xlm9(this), _get_idParser__4cqmtr(this)), _get_minusParser__naumde(this)), _get_parenParser__kd1lns(this)), this, termParser$factory());
    var tmp_14 = this;
    // Inline function 'com.github.h0tk3y.betterParse.combinators.and' call
    // Inline function 'com.github.h0tk3y.betterParse.combinators.and' call
    var tmp0_and_1 = _get_termParser__9ktxa8(this);
    var tmp1_and_1 = skip(_get_pow__e6evjt(this));
    var tmp_15 = listOf_0([tmp0_and_1, tmp1_and_1]);
    var tmp2_and_1 = new AndCombinator(tmp_15, GAlgebraElementASTGrammar$powerParser$delegate$lambda);
    var tmp3_and_1 = _get_nat__e6db4g(this);
    var tmp_16 = plus(tmp2_and_1.bf_1, listOf(tmp3_and_1));
    var tmp_17 = new AndCombinator(tmp_16, GAlgebraElementASTGrammar$powerParser$delegate$lambda_0);
    tmp_14.e22_1 = this.zf(or(map(tmp_17, GAlgebraElementASTGrammar$powerParser$delegate$lambda_1), _get_termParser__9ktxa8(this)), this, powerParser$factory());
    var tmp_18 = this;
    var tmp$ret$7;
    // Inline function 'com.github.h0tk3y.betterParse.combinators.leftAssociative' call
    var tmp0_leftAssociative = _get_powerParser__cj0rqr(this);
    var tmp_19 = or(_get_mul__e6d2rx(this), _get_div__e6738g(this));
    var tmp1_leftAssociative = use(tmp_19, GAlgebraElementASTGrammar$mulDivChain$delegate$lambda);
    var tmp2_leftAssociative = GAlgebraElementASTGrammar$mulDivChain$delegate$lambda_0;
    // Inline function 'com.github.h0tk3y.betterParse.combinators.separated' call
    var tmp_20 = new SeparatedCombinator(tmp0_leftAssociative, tmp1_leftAssociative, false);
    tmp$ret$7 = map(tmp_20, GAlgebraElementASTGrammar$mulDivChain$delegate$lambda_1(tmp2_leftAssociative));
    tmp_18.f22_1 = this.zf(tmp$ret$7, this, mulDivChain$factory_0());
    var tmp_21 = this;
    var tmp$ret$9;
    // Inline function 'com.github.h0tk3y.betterParse.combinators.leftAssociative' call
    var tmp0_leftAssociative_0 = _get_mulDivChain__rkka6b(this);
    var tmp_22 = or(_get_plus__dc2x2p(this), _get_minus__e92hlr(this));
    var tmp1_leftAssociative_0 = use(tmp_22, GAlgebraElementASTGrammar$subSumChain$delegate$lambda);
    var tmp2_leftAssociative_0 = GAlgebraElementASTGrammar$subSumChain$delegate$lambda_0;
    // Inline function 'com.github.h0tk3y.betterParse.combinators.separated' call
    var tmp_23 = new SeparatedCombinator(tmp0_leftAssociative_0, tmp1_leftAssociative_0, false);
    tmp$ret$9 = map(tmp_23, GAlgebraElementASTGrammar$subSumChain$delegate$lambda_1(tmp2_leftAssociative_0));
    tmp_21.g22_1 = this.zf(tmp$ret$9, this, subSumChain$factory());
    this.h22_1 = this.zf(_get_subSumChain__3rvi9x(this), this, rootParser$factory_0());
  }
  protoOf(GAlgebraElementASTGrammar).tf = function () {
    return this.ag(this.h22_1, this, rootParser$factory_1());
  };
  var GAlgebraElementASTGrammar_instance;
  function GAlgebraElementASTGrammar_getInstance() {
    if (GAlgebraElementASTGrammar_instance == null)
      new GAlgebraElementASTGrammar();
    return GAlgebraElementASTGrammar_instance;
  }
  function zero$factory() {
    return getPropertyCallableRef('zero', 1, KProperty1, function (receiver) {
      return _get_zero__dhgbs3(receiver);
    }, null);
  }
  function id$factory() {
    return getPropertyCallableRef('id', 1, KProperty1, function (receiver) {
      return _get_id__ndc34g(receiver);
    }, null);
  }
  function nat$factory() {
    return getPropertyCallableRef('nat', 1, KProperty1, function (receiver) {
      return _get_nat__e6db4g(receiver);
    }, null);
  }
  function lpar$factory() {
    return getPropertyCallableRef('lpar', 1, KProperty1, function (receiver) {
      return _get_lpar__d9xvsm(receiver);
    }, null);
  }
  function rpar$factory() {
    return getPropertyCallableRef('rpar', 1, KProperty1, function (receiver) {
      return _get_rpar__dd8ncs(receiver);
    }, null);
  }
  function mul$factory() {
    return getPropertyCallableRef('mul', 1, KProperty1, function (receiver) {
      return _get_mul__e6d2rx(receiver);
    }, null);
  }
  function pow$factory() {
    return getPropertyCallableRef('pow', 1, KProperty1, function (receiver) {
      return _get_pow__e6evjt(receiver);
    }, null);
  }
  function div$factory() {
    return getPropertyCallableRef('div', 1, KProperty1, function (receiver) {
      return _get_div__e6738g(receiver);
    }, null);
  }
  function minus$factory() {
    return getPropertyCallableRef('minus', 1, KProperty1, function (receiver) {
      return _get_minus__e92hlr(receiver);
    }, null);
  }
  function plus$factory() {
    return getPropertyCallableRef('plus', 1, KProperty1, function (receiver) {
      return _get_plus__dc2x2p(receiver);
    }, null);
  }
  function ws$factory() {
    return getPropertyCallableRef('ws', 1, KProperty1, function (receiver) {
      return _get_ws__ndcdv3(receiver);
    }, null);
  }
  function idParser$factory() {
    return getPropertyCallableRef('idParser', 1, KProperty1, function (receiver) {
      return _get_idParser__4cqmtr(receiver);
    }, null);
  }
  function natParser$factory() {
    return getPropertyCallableRef('natParser', 1, KProperty1, function (receiver) {
      return _get_natParser__86xlm9(receiver);
    }, null);
  }
  function rootParser$factory($b0) {
    return getPropertyCallableRef('rootParser', 0, KProperty0, function () {
      return $b0.tf();
    }, null);
  }
  function parenParser$factory() {
    return getPropertyCallableRef('parenParser', 1, KProperty1, function (receiver) {
      return _get_parenParser__kd1lns(receiver);
    }, null);
  }
  function mulDivChain$factory($b0) {
    return getPropertyCallableRef('mulDivChain', 0, KProperty0, function () {
      return _get_mulDivChain__rkka6b($b0);
    }, null);
  }
  function minusParser$factory() {
    return getPropertyCallableRef('minusParser', 1, KProperty1, function (receiver) {
      return _get_minusParser__naumde(receiver);
    }, null);
  }
  function termParser$factory() {
    return getPropertyCallableRef('termParser', 1, KProperty1, function (receiver) {
      return _get_termParser__9ktxa8(receiver);
    }, null);
  }
  function powerParser$factory() {
    return getPropertyCallableRef('powerParser', 1, KProperty1, function (receiver) {
      return _get_powerParser__cj0rqr(receiver);
    }, null);
  }
  function mulDivChain$factory_0() {
    return getPropertyCallableRef('mulDivChain', 1, KProperty1, function (receiver) {
      return _get_mulDivChain__rkka6b(receiver);
    }, null);
  }
  function subSumChain$factory() {
    return getPropertyCallableRef('subSumChain', 1, KProperty1, function (receiver) {
      return _get_subSumChain__3rvi9x(receiver);
    }, null);
  }
  function rootParser$factory_0() {
    return getPropertyCallableRef('rootParser', 1, KProperty1, function (receiver) {
      return receiver.tf();
    }, null);
  }
  function zero$factory_0() {
    return getPropertyCallableRef('zero', 1, KProperty1, function (receiver) {
      return _get_zero__dhgbs3(receiver);
    }, null);
  }
  function id$factory_0() {
    return getPropertyCallableRef('id', 1, KProperty1, function (receiver) {
      return _get_id__ndc34g(receiver);
    }, null);
  }
  function nat$factory_0() {
    return getPropertyCallableRef('nat', 1, KProperty1, function (receiver) {
      return _get_nat__e6db4g(receiver);
    }, null);
  }
  function lpar$factory_0() {
    return getPropertyCallableRef('lpar', 1, KProperty1, function (receiver) {
      return _get_lpar__d9xvsm(receiver);
    }, null);
  }
  function rpar$factory_0() {
    return getPropertyCallableRef('rpar', 1, KProperty1, function (receiver) {
      return _get_rpar__dd8ncs(receiver);
    }, null);
  }
  function mul$factory_0() {
    return getPropertyCallableRef('mul', 1, KProperty1, function (receiver) {
      return _get_mul__e6d2rx(receiver);
    }, null);
  }
  function pow$factory_0() {
    return getPropertyCallableRef('pow', 1, KProperty1, function (receiver) {
      return _get_pow__e6evjt(receiver);
    }, null);
  }
  function div$factory_0() {
    return getPropertyCallableRef('div', 1, KProperty1, function (receiver) {
      return _get_div__e6738g(receiver);
    }, null);
  }
  function minus$factory_0() {
    return getPropertyCallableRef('minus', 1, KProperty1, function (receiver) {
      return _get_minus__e92hlr(receiver);
    }, null);
  }
  function plus$factory_0() {
    return getPropertyCallableRef('plus', 1, KProperty1, function (receiver) {
      return _get_plus__dc2x2p(receiver);
    }, null);
  }
  function ws$factory_0() {
    return getPropertyCallableRef('ws', 1, KProperty1, function (receiver) {
      return _get_ws__ndcdv3(receiver);
    }, null);
  }
  function idParser$factory_0() {
    return getPropertyCallableRef('idParser', 1, KProperty1, function (receiver) {
      return _get_idParser__4cqmtr(receiver);
    }, null);
  }
  function natParser$factory_0() {
    return getPropertyCallableRef('natParser', 1, KProperty1, function (receiver) {
      return _get_natParser__86xlm9(receiver);
    }, null);
  }
  function parenParser$factory_0() {
    return getPropertyCallableRef('parenParser', 1, KProperty1, function (receiver) {
      return _get_parenParser__kd1lns(receiver);
    }, null);
  }
  function minusParser$factory_0() {
    return getPropertyCallableRef('minusParser', 1, KProperty1, function (receiver) {
      return _get_minusParser__naumde(receiver);
    }, null);
  }
  function termParser$factory_0() {
    return getPropertyCallableRef('termParser', 1, KProperty1, function (receiver) {
      return _get_termParser__9ktxa8(receiver);
    }, null);
  }
  function powerParser$factory_0() {
    return getPropertyCallableRef('powerParser', 1, KProperty1, function (receiver) {
      return _get_powerParser__cj0rqr(receiver);
    }, null);
  }
  function mulDivChain$factory_1() {
    return getPropertyCallableRef('mulDivChain', 1, KProperty1, function (receiver) {
      return _get_mulDivChain__rkka6b(receiver);
    }, null);
  }
  function subSumChain$factory_0() {
    return getPropertyCallableRef('subSumChain', 1, KProperty1, function (receiver) {
      return _get_subSumChain__3rvi9x(receiver);
    }, null);
  }
  function rootParser$factory_1() {
    return getPropertyCallableRef('rootParser', 1, KProperty1, function (receiver) {
      return receiver.tf();
    }, null);
  }
  function RegexToken_init_$Init$(name, pattern, ignored, $this) {
    ignored = ignored === VOID ? false : ignored;
    RegexToken.call($this, name, Regex_init_$Create$(pattern), ignored);
    return $this;
  }
  function RegexToken_init_$Create$(name, pattern, ignored) {
    return RegexToken_init_$Init$(name, pattern, ignored, objectCreate(protoOf(RegexToken)));
  }
  function RegexToken(name, regex, ignored) {
    ignored = ignored === VOID ? false : ignored;
    Token.call(this, name, ignored);
    this.l22_1 = regex;
  }
  protoOf(RegexToken).qg = function (input, fromIndex) {
    var matchResult = this.l22_1.hd(input, fromIndex);
    if (!(matchResult == null) ? matchResult.vd().z_1 === fromIndex : false) {
      return (matchResult.vd().a1_1 - fromIndex | 0) + 1 | 0;
    }
    return 0;
  };
  protoOf(RegexToken).toString = function () {
    var tmp0_elvis_lhs = this.xf_1;
    return (tmp0_elvis_lhs == null ? '' : tmp0_elvis_lhs) + ' [' + this.l22_1.cd_1 + ']' + (this.yf_1 ? ' [ignorable]' : '');
  };
  function regexToken(pattern, ignore) {
    ignore = ignore === VOID ? false : ignore;
    return RegexToken_init_$Create$(null, pattern, ignore);
  }
  function IllegalContextException(message) {
    RuntimeException_init_$Init$(message, this);
    captureStack(this, IllegalContextException);
  }
  function InvalidSizeException(message) {
    RuntimeException_init_$Init$(message, this);
    captureStack(this, InvalidSizeException);
  }
  function getInitial($this, targetDGAlgebra) {
    var tmp = Companion_getInstance_39();
    var tmp_0 = targetDGAlgebra.y1g();
    var tmp_1 = emptyList();
    var freeDGAlgebra = tmp.m22(tmp_0, tmp_1, VOID, CohomologicalMinimalModel$Companion$getInitial$lambda);
    var dgAlgebraMap = freeDGAlgebra.n22(targetDGAlgebra, emptyList());
    return new CohomologicalMinimalModel(targetDGAlgebra, freeDGAlgebra, dgAlgebraMap, 1);
  }
  function CohomologicalMinimalModel$Companion$getInitial$lambda($this$fromMap, _anonymous_parameter_0__qggqh8) {
    return emptyMap();
  }
  function Companion_35() {
    Companion_instance_35 = this;
  }
  protoOf(Companion_35).o22 = function (targetDGAlgebra, isomorphismUpTo, reportProgress) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(targetDGAlgebra.i1h().c1g_1 === 0)) {
      // Inline function 'com.github.shwaka.kohomology.free.Companion.of.<anonymous>' call
      var message = 'targetDGAlgebra must be bounded below by 0';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(targetDGAlgebra.l(0).p22() === 1)) {
      // Inline function 'com.github.shwaka.kohomology.free.Companion.of.<anonymous>' call
      var message_0 = 'targetDGAlgebra[0].dim must be 1 (i.e. contains only the unit)';
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(targetDGAlgebra.m1g().l(1).p22() === 0)) {
      // Inline function 'com.github.shwaka.kohomology.free.Companion.of.<anonymous>' call
      var message_1 = 'The 1-st cohomology of targetDGAlgebra must be 0 (i.e. 1-connected)';
      throw IllegalArgumentException_init_$Create$(toString(message_1));
    }
    var minimalModel = getInitial(this, targetDGAlgebra);
    reportProgress(minimalModel.q22(isomorphismUpTo));
    while (minimalModel.u22_1 < isomorphismUpTo) {
      minimalModel = minimalModel.v22();
      reportProgress(minimalModel.q22(isomorphismUpTo));
    }
    return minimalModel;
  };
  var Companion_instance_35;
  function Companion_getInstance_36() {
    if (Companion_instance_35 == null)
      new Companion_35();
    return Companion_instance_35;
  }
  function CohomologicalMinimalModel(targetDGAlgebra, freeDGAlgebra, dgAlgebraMap, isomorphismUpTo) {
    Companion_getInstance_36();
    this.r22_1 = targetDGAlgebra;
    this.s22_1 = freeDGAlgebra;
    this.t22_1 = dgAlgebraMap;
    this.u22_1 = isomorphismUpTo;
  }
  protoOf(CohomologicalMinimalModel).w22 = function () {
    return this.r22_1;
  };
  protoOf(CohomologicalMinimalModel).x22 = function () {
    return this.s22_1;
  };
  protoOf(CohomologicalMinimalModel).y22 = function () {
    return this.t22_1;
  };
  protoOf(CohomologicalMinimalModel).z22 = function () {
    return this.u22_1;
  };
  protoOf(CohomologicalMinimalModel).v22 = function () {
    var calculator = new CohomologicalNextMMCalculator(this);
    return calculator.k23();
  };
  protoOf(CohomologicalMinimalModel).toString = function () {
    return 'CohomologicalMinimalModel(targetDGAlgebra=' + this.r22_1 + ', freeDGAlgebra=' + this.s22_1 + ', dgAlgebraMap=' + this.t22_1 + ', isomorphismUpTo=' + this.u22_1 + ')';
  };
  protoOf(CohomologicalMinimalModel).hashCode = function () {
    var result = hashCode(this.r22_1);
    result = imul(result, 31) + hashCode(this.s22_1) | 0;
    result = imul(result, 31) + hashCode(this.t22_1) | 0;
    result = imul(result, 31) + this.u22_1 | 0;
    return result;
  };
  protoOf(CohomologicalMinimalModel).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CohomologicalMinimalModel))
      return false;
    var tmp0_other_with_cast = other instanceof CohomologicalMinimalModel ? other : THROW_CCE();
    if (!equals(this.r22_1, tmp0_other_with_cast.r22_1))
      return false;
    if (!equals(this.s22_1, tmp0_other_with_cast.s22_1))
      return false;
    if (!equals(this.t22_1, tmp0_other_with_cast.t22_1))
      return false;
    if (!(this.u22_1 === tmp0_other_with_cast.u22_1))
      return false;
    return true;
  };
  function CohomologicalNextMMCalculator(minimalModel) {
    NextMMCalculator.call(this, minimalModel);
  }
  protoOf(CohomologicalNextMMCalculator).v23 = function () {
    return this.a23_1.z22() + 1 | 0;
  };
  protoOf(CohomologicalNextMMCalculator).w23 = function () {
    return this.a23_1.z22() + 1 | 0;
  };
  protoOf(CohomologicalNextMMCalculator).x23 = function (targetDGAlgebra, freeDGAlgebra, dgAlgebraMap, isomorphismUpTo) {
    return new CohomologicalMinimalModel(targetDGAlgebra, freeDGAlgebra, dgAlgebraMap, isomorphismUpTo);
  };
  protoOf(CohomologicalNextMMCalculator).y23 = function (targetDGAlgebra, freeDGAlgebra, dgAlgebraMap, isomorphismUpTo) {
    return this.x23(targetDGAlgebra, freeDGAlgebra, dgAlgebraMap, isomorphismUpTo);
  };
  function Companion_36() {
    Companion_instance_36 = this;
  }
  protoOf(Companion_36).l24 = function (freeDGAlgebra) {
    var factory = new DerivationDGLieAlgebraFactory(freeDGAlgebra);
    return new DerivationDGLieAlgebra(factory);
  };
  var Companion_instance_36;
  function Companion_getInstance_37() {
    if (Companion_instance_36 == null)
      new Companion_36();
    return Companion_instance_36;
  }
  function DerivationDGLieAlgebra(factory) {
    Companion_getInstance_37();
    this.m24_1 = factory;
    this.n24_1 = Companion_getInstance_6().g1m(factory.t24_1, factory.u24_1);
    this.o24_1 = this.m24_1.q24_1;
    this.p24_1 = this.m24_1.t24_1;
  }
  protoOf(DerivationDGLieAlgebra).i1h = function () {
    return this.n24_1.i1h();
  };
  protoOf(DerivationDGLieAlgebra).m1g = function () {
    return this.n24_1.m1g();
  };
  protoOf(DerivationDGLieAlgebra).g1g = function () {
    return this.n24_1.g1g();
  };
  protoOf(DerivationDGLieAlgebra).c1h = function () {
    return this.n24_1.c1h();
  };
  protoOf(DerivationDGLieAlgebra).o1g = function () {
    return this.n24_1.o1g();
  };
  protoOf(DerivationDGLieAlgebra).j1h = function () {
    return this.n24_1.j1h();
  };
  protoOf(DerivationDGLieAlgebra).e1h = function () {
    return this.n24_1.e1h();
  };
  protoOf(DerivationDGLieAlgebra).f1h = function () {
    return this.n24_1.f1h();
  };
  protoOf(DerivationDGLieAlgebra).y1g = function () {
    return this.n24_1.y1g();
  };
  protoOf(DerivationDGLieAlgebra).n1g = function () {
    return this.n24_1.n1g();
  };
  protoOf(DerivationDGLieAlgebra).d1h = function () {
    return this.n24_1.d1h();
  };
  protoOf(DerivationDGLieAlgebra).b1h = function () {
    return this.n24_1.b1h();
  };
  protoOf(DerivationDGLieAlgebra).h1h = function () {
    return this.n24_1.h1h();
  };
  protoOf(DerivationDGLieAlgebra).z1h = function () {
    return this.n24_1.z1h();
  };
  protoOf(DerivationDGLieAlgebra).v24 = function (a, b) {
    return this.n24_1.t1h(a, b);
  };
  protoOf(DerivationDGLieAlgebra).t1h = function (a, b) {
    return this.v24(a, b);
  };
  protoOf(DerivationDGLieAlgebra).w24 = function (cocycle) {
    return this.n24_1.z1g(cocycle);
  };
  protoOf(DerivationDGLieAlgebra).z1g = function (cocycle) {
    return this.w24(cocycle);
  };
  protoOf(DerivationDGLieAlgebra).x24 = function (gVector) {
    return this.n24_1.r1h(gVector);
  };
  protoOf(DerivationDGLieAlgebra).r1h = function (gVector) {
    return this.x24(gVector);
  };
  protoOf(DerivationDGLieAlgebra).y24 = function (gVector) {
    return this.n24_1.s1h(gVector);
  };
  protoOf(DerivationDGLieAlgebra).s1h = function (gVector) {
    return this.y24(gVector);
  };
  protoOf(DerivationDGLieAlgebra).z24 = function (gVectorOrZero, degree) {
    return this.n24_1.q1h(gVectorOrZero, degree);
  };
  protoOf(DerivationDGLieAlgebra).q1h = function (gVectorOrZero, degree) {
    return this.z24(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(DerivationDGLieAlgebra).a25 = function (a, b) {
    return this.n24_1.y1h(a, b);
  };
  protoOf(DerivationDGLieAlgebra).y1h = function (a, b) {
    return this.a25(a, b);
  };
  protoOf(DerivationDGLieAlgebra).b25 = function (basisName, degree) {
    return this.n24_1.m1h(basisName, degree);
  };
  protoOf(DerivationDGLieAlgebra).m1h = function (basisName, degree) {
    var tmp = basisName instanceof DirectSumBasis ? basisName : THROW_CCE();
    return this.b25(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(DerivationDGLieAlgebra).c25 = function (vector, degree) {
    return this.n24_1.k1h(vector, degree);
  };
  protoOf(DerivationDGLieAlgebra).k1h = function (vector, degree) {
    return this.c25(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(DerivationDGLieAlgebra).d25 = function (vector, degree) {
    return this.n24_1.l1h(vector, degree);
  };
  protoOf(DerivationDGLieAlgebra).l1h = function (vector, degree) {
    return this.d25(vector, degree);
  };
  protoOf(DerivationDGLieAlgebra).g1h = function (degree) {
    return this.n24_1.g1h(degree);
  };
  protoOf(DerivationDGLieAlgebra).l = function (degree) {
    return this.n24_1.l(degree);
  };
  protoOf(DerivationDGLieAlgebra).n1h = function (degree) {
    return this.n24_1.n1h(degree);
  };
  protoOf(DerivationDGLieAlgebra).o1h = function (degree) {
    return this.n24_1.o1h(degree);
  };
  protoOf(DerivationDGLieAlgebra).p1h = function (degree) {
    return this.n24_1.p1h(degree);
  };
  protoOf(DerivationDGLieAlgebra).e25 = function (scalar, gVector) {
    return this.n24_1.v1h(scalar, gVector);
  };
  protoOf(DerivationDGLieAlgebra).v1h = function (scalar, gVector) {
    return this.e25(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  protoOf(DerivationDGLieAlgebra).f25 = function (a, b) {
    return this.n24_1.w1h(a, b);
  };
  protoOf(DerivationDGLieAlgebra).w1h = function (a, b) {
    return this.f25(a, b);
  };
  protoOf(DerivationDGLieAlgebra).g25 = function (a, b) {
    return this.n24_1.x1h(a, b);
  };
  protoOf(DerivationDGLieAlgebra).x1h = function (a, b) {
    return this.g25(a, b);
  };
  protoOf(DerivationDGLieAlgebra).h25 = function (a, b) {
    return this.n24_1.u1h(a, b);
  };
  protoOf(DerivationDGLieAlgebra).u1h = function (a, b) {
    return this.h25(a, b);
  };
  protoOf(DerivationDGLieAlgebra).s1i = function (printConfig) {
    var gLieAlgebraString = this.p24_1.s1i(printConfig);
    return '(' + gLieAlgebraString + ', d)';
  };
  protoOf(DerivationDGLieAlgebra).toString = function () {
    return '(' + this.p24_1 + ', d)';
  };
  function DerivationDGLieAlgebraFactory(freeDGAlgebra) {
    this.q24_1 = freeDGAlgebra;
    this.r24_1 = this.q24_1.y1g();
    this.s24_1 = this.q24_1.c1h();
    this.t24_1 = Companion_getInstance_38().l25(this.q24_1);
    var tmp = this;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.t24_1.g1g();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.free.DerivationDGLieAlgebraFactory.differential.<anonymous>' call
    var differentialAsGVector = this.t24_1.m25(this.q24_1.o1g());
    tmp.u24_1 = tmp0_run.v1m(differentialAsGVector);
  }
  function Companion_37() {
    Companion_instance_37 = this;
  }
  protoOf(Companion_37).l25 = function (freeGAlgebra) {
    var factory = new DerivationGLieAlgebraFactory(freeGAlgebra);
    return new DerivationGLieAlgebra(factory);
  };
  var Companion_instance_37;
  function Companion_getInstance_38() {
    if (Companion_instance_37 == null)
      new Companion_37();
    return Companion_instance_37;
  }
  function DerivationGLieAlgebraFactory$getVectorSpace$ref($boundThis) {
    var l = function (p0) {
      return $boundThis.s25(p0);
    };
    l.callableName = 'getVectorSpace';
    return l;
  }
  function DerivationGLieAlgebraFactory$getMultiplication$ref($boundThis) {
    var l = function (p0, p1) {
      return $boundThis.t25(p0, p1);
    };
    l.callableName = 'getMultiplication';
    return l;
  }
  function DerivationGLieAlgebraFactory$getInternalPrintConfig$ref($boundThis) {
    var l = function (p0) {
      return $boundThis.u25(p0);
    };
    l.callableName = 'getInternalPrintConfig';
    return l;
  }
  function DerivationGLieAlgebra(factory) {
    Companion_getInstance_38();
    this.i25_1 = factory;
    var tmp = this;
    var tmp_0 = Companion_getInstance_19();
    var tmp_1 = DerivationGLieAlgebraFactory$getVectorSpace$ref(factory);
    var tmp_2 = DerivationGLieAlgebraFactory$getMultiplication$ref(factory);
    tmp.j25_1 = tmp_0.a1s(factory.o25_1, factory.p25_1, factory.q25_1, tmp_1, tmp_2, DerivationGLieAlgebraFactory$getInternalPrintConfig$ref(factory));
    this.k25_1 = this.i25_1.n25_1;
  }
  protoOf(DerivationGLieAlgebra).i1h = function () {
    return this.j25_1.i1h();
  };
  protoOf(DerivationGLieAlgebra).g1g = function () {
    return this.j25_1.g1g();
  };
  protoOf(DerivationGLieAlgebra).c1h = function () {
    return this.j25_1.c1h();
  };
  protoOf(DerivationGLieAlgebra).j1h = function () {
    return this.j25_1.j1h();
  };
  protoOf(DerivationGLieAlgebra).e1h = function () {
    return this.j25_1.e1h();
  };
  protoOf(DerivationGLieAlgebra).f1h = function () {
    return this.j25_1.f1h();
  };
  protoOf(DerivationGLieAlgebra).y1g = function () {
    return this.j25_1.y1g();
  };
  protoOf(DerivationGLieAlgebra).n1g = function () {
    return this.j25_1.n1g();
  };
  protoOf(DerivationGLieAlgebra).d1h = function () {
    return this.j25_1.d1h();
  };
  protoOf(DerivationGLieAlgebra).b1h = function () {
    return this.j25_1.b1h();
  };
  protoOf(DerivationGLieAlgebra).h1h = function () {
    return this.j25_1.h1h();
  };
  protoOf(DerivationGLieAlgebra).z1h = function () {
    return this.j25_1.z1h();
  };
  protoOf(DerivationGLieAlgebra).v24 = function (a, b) {
    return this.j25_1.t1h(a, b);
  };
  protoOf(DerivationGLieAlgebra).t1h = function (a, b) {
    return this.v24(a, b);
  };
  protoOf(DerivationGLieAlgebra).x24 = function (gVector) {
    return this.j25_1.r1h(gVector);
  };
  protoOf(DerivationGLieAlgebra).r1h = function (gVector) {
    return this.x24(gVector);
  };
  protoOf(DerivationGLieAlgebra).y24 = function (gVector) {
    return this.j25_1.s1h(gVector);
  };
  protoOf(DerivationGLieAlgebra).s1h = function (gVector) {
    return this.y24(gVector);
  };
  protoOf(DerivationGLieAlgebra).z24 = function (gVectorOrZero, degree) {
    return this.j25_1.q1h(gVectorOrZero, degree);
  };
  protoOf(DerivationGLieAlgebra).q1h = function (gVectorOrZero, degree) {
    return this.z24(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(DerivationGLieAlgebra).a25 = function (a, b) {
    return this.j25_1.y1h(a, b);
  };
  protoOf(DerivationGLieAlgebra).y1h = function (a, b) {
    return this.a25(a, b);
  };
  protoOf(DerivationGLieAlgebra).b25 = function (basisName, degree) {
    return this.j25_1.m1h(basisName, degree);
  };
  protoOf(DerivationGLieAlgebra).m1h = function (basisName, degree) {
    var tmp = basisName instanceof DirectSumBasis ? basisName : THROW_CCE();
    return this.b25(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(DerivationGLieAlgebra).c25 = function (vector, degree) {
    return this.j25_1.k1h(vector, degree);
  };
  protoOf(DerivationGLieAlgebra).k1h = function (vector, degree) {
    return this.c25(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(DerivationGLieAlgebra).d25 = function (vector, degree) {
    return this.j25_1.l1h(vector, degree);
  };
  protoOf(DerivationGLieAlgebra).l1h = function (vector, degree) {
    return this.d25(vector, degree);
  };
  protoOf(DerivationGLieAlgebra).g1h = function (degree) {
    return this.j25_1.g1h(degree);
  };
  protoOf(DerivationGLieAlgebra).l = function (degree) {
    return this.j25_1.l(degree);
  };
  protoOf(DerivationGLieAlgebra).n1h = function (degree) {
    return this.j25_1.n1h(degree);
  };
  protoOf(DerivationGLieAlgebra).o1h = function (degree) {
    return this.j25_1.o1h(degree);
  };
  protoOf(DerivationGLieAlgebra).p1h = function (degree) {
    return this.j25_1.p1h(degree);
  };
  protoOf(DerivationGLieAlgebra).e25 = function (scalar, gVector) {
    return this.j25_1.v1h(scalar, gVector);
  };
  protoOf(DerivationGLieAlgebra).v1h = function (scalar, gVector) {
    return this.e25(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  protoOf(DerivationGLieAlgebra).f25 = function (a, b) {
    return this.j25_1.w1h(a, b);
  };
  protoOf(DerivationGLieAlgebra).w1h = function (a, b) {
    return this.f25(a, b);
  };
  protoOf(DerivationGLieAlgebra).g25 = function (a, b) {
    return this.j25_1.x1h(a, b);
  };
  protoOf(DerivationGLieAlgebra).x1h = function (a, b) {
    return this.g25(a, b);
  };
  protoOf(DerivationGLieAlgebra).h25 = function (a, b) {
    return this.j25_1.u1h(a, b);
  };
  protoOf(DerivationGLieAlgebra).u1h = function (a, b) {
    return this.h25(a, b);
  };
  protoOf(DerivationGLieAlgebra).toString = function () {
    return this.j25_1.toString();
  };
  protoOf(DerivationGLieAlgebra).m25 = function (derivation) {
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = this.k25_1.r1l();
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.DerivationGLieAlgebra.derivationToGVector.<anonymous>' call
      tmp$ret$0 = derivation.s1g(item).z1n_1;
      tmp0_mapTo.a(tmp$ret$0);
    }
    var valueList = tmp0_mapTo;
    var vector = this.i25_1.s25(derivation.u1k()).f26(valueList);
    return this.c25(vector, derivation.u1k());
  };
  protoOf(DerivationGLieAlgebra).s1i = function (printConfig) {
    var tmp;
    switch (printConfig.g1u_1.m1_1) {
      case 0:
        tmp = 'Der';
        break;
      case 1:
        tmp = '\\mathrm{Der}';
        break;
      case 2:
        throw UnsupportedOperationException_init_$Create$('DerivationGLieAlgebra does not support PrintType.CODE');
      default:
        noWhenBranchMatchedException();
        break;
    }
    var der = tmp;
    return der + '(' + this.k25_1.g26().s1i(printConfig) + ')';
  };
  function generateGetValue($this, target) {
    return DerivationGLieAlgebraFactory$generateGetValue$lambda($this, target);
  }
  function toDerivation(_this__u8e3s4, $this) {
    var freeGAlgebra = $this.n25_1;
    var size = freeGAlgebra.h26().i();
    var basisDegree = _this__u8e3s4.j26_1.u1k();
    var index = _this__u8e3s4.i26_1;
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.free.DerivationGLieAlgebraFactory.toDerivation.<anonymous>' call
    var derivationDegree = freeGAlgebra.c1h().g1g().l1r(basisDegree, freeGAlgebra.h26().l(index).p26_1);
    // Inline function 'kotlin.collections.map' call
    var tmp1_map = until(0, size);
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
    var inductionVariable = tmp1_map.z_1;
    var last = tmp1_map.a1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$2;
        // Inline function 'com.github.shwaka.kohomology.free.DerivationGLieAlgebraFactory.toDerivation.<anonymous>' call
        var tmp;
        if (item === index) {
          tmp = freeGAlgebra.m1h(_this__u8e3s4.j26_1, basisDegree);
        } else {
          tmp = freeGAlgebra.z1h();
        }
        tmp$ret$2 = tmp;
        tmp0_mapTo.a(tmp$ret$2);
      }
       while (!(item === last));
    var valueList = tmp0_mapTo;
    return freeGAlgebra.q26(valueList, derivationDegree);
  }
  function DerivationGLieAlgebraFactory$getInternalPrintConfig$lambda($indeterminateList, $p) {
    return function (directSumBasis) {
      var from = $indeterminateList.l(directSumBasis.i26_1);
      var to = directSumBasis.j26_1;
      return '(' + $p.t26(from) + ', ' + $p.t26(to) + ')';
    };
  }
  function DerivationGLieAlgebraFactory$getInternalPrintConfig$ref_0($boundThis) {
    var l = function (p0) {
      return $boundThis.u25(p0);
    };
    l.callableName = 'getInternalPrintConfig';
    return l;
  }
  function DerivationGLieAlgebraFactory$generateGetValue$lambda(this$0, $target) {
    return function (derivationBasis1, derivationBasis2) {
      var derivation1 = toDerivation(derivationBasis1, this$0);
      var derivation2 = toDerivation(derivationBasis2, this$0);
      var sign = derivation1.u1k().l1z(derivation2.u1k());
      var tmp$ret$7;
      // Inline function 'kotlin.collections.map' call
      var tmp$ret$4;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.n25_1.g1g();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.free.DerivationGLieAlgebraFactory.generateGetValue.<anonymous>.<anonymous>' call
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = this$0.n25_1.r1l();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var tmp0_iterator = tmp0_map.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.free.DerivationGLieAlgebraFactory.generateGetValue.<anonymous>.<anonymous>.<anonymous>' call
        tmp$ret$0 = tmp0_run.k1j(derivation1.s1g(derivation2.s1g(item)), tmp0_run.b1k(sign, derivation2.s1g(derivation1.s1g(item))));
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp$ret$4 = tmp$ret$3;
      var tmp1_map = tmp$ret$4;
      var tmp$ret$6;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
      var tmp0_iterator_0 = tmp1_map.f();
      while (tmp0_iterator_0.g()) {
        var item_0 = tmp0_iterator_0.h();
        var tmp$ret$5;
        // Inline function 'com.github.shwaka.kohomology.free.DerivationGLieAlgebraFactory.generateGetValue.<anonymous>.<anonymous>' call
        tmp$ret$5 = item_0.z1n_1;
        tmp0_mapTo_0.a(tmp$ret$5);
      }
      tmp$ret$6 = tmp0_mapTo_0;
      tmp$ret$7 = tmp$ret$6;
      var valueList = tmp$ret$7;
      return $target.f26(valueList);
    };
  }
  function DerivationGLieAlgebraFactory(freeGAlgebra) {
    this.n25_1 = freeGAlgebra;
    this.o25_1 = this.n25_1.y1g();
    this.p25_1 = this.n25_1.c1h();
    this.q25_1 = 'Der(' + this.n25_1.d1h() + ')';
    var tmp = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp.r25_1 = LinkedHashMap_init_$Create$();
  }
  protoOf(DerivationGLieAlgebraFactory).u25 = function (printConfig) {
    var p = Printer_init_$Create$(printConfig);
    var indeterminateList = this.n25_1.h26();
    return new InternalPrintConfig(VOID, DerivationGLieAlgebraFactory$getInternalPrintConfig$lambda(indeterminateList, p));
  };
  protoOf(DerivationGLieAlgebraFactory).s25 = function (derivationDegree) {
    // Inline function 'kotlin.collections.getOrPut' call
    var tmp0_getOrPut = this.r25_1;
    var value = tmp0_getOrPut.u2(derivationDegree);
    var tmp;
    if (value == null) {
      // Inline function 'com.github.shwaka.kohomology.free.DerivationGLieAlgebraFactory.getVectorSpace.<anonymous>' call
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = this.n25_1.h26();
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var tmp0_iterator = tmp0_map.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.free.DerivationGLieAlgebraFactory.getVectorSpace.<anonymous>.<anonymous>' call
        tmp$ret$0 = item.p26_1;
        tmp0_mapTo.a(tmp$ret$0);
      }
      var generatorDegreeList = tmp0_mapTo;
      // Inline function 'kotlin.run' call
      var tmp1_run = this.p25_1.g1g();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'com.github.shwaka.kohomology.free.DerivationGLieAlgebraFactory.getVectorSpace.<anonymous>.<anonymous>' call
      // Inline function 'kotlin.collections.map' call
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(generatorDegreeList, 10));
      var tmp0_iterator_0 = generatorDegreeList.f();
      while (tmp0_iterator_0.g()) {
        var item_0 = tmp0_iterator_0.h();
        var tmp$ret$3;
        // Inline function 'com.github.shwaka.kohomology.free.DerivationGLieAlgebraFactory.getVectorSpace.<anonymous>.<anonymous>.<anonymous>' call
        tmp$ret$3 = this.n25_1.g1h(tmp1_run.i1g(item_0, derivationDegree));
        tmp0_mapTo_0.a(tmp$ret$3);
      }
      var vectorSpaceList = tmp0_mapTo_0;
      var tmp_0 = this.n25_1.y1g();
      var answer = DirectSum_init_$Create$(vectorSpaceList, tmp_0, DerivationGLieAlgebraFactory$getInternalPrintConfig$ref_0(this));
      tmp0_getOrPut.z3(derivationDegree, answer);
      tmp = answer;
    } else {
      tmp = value;
    }
    return tmp;
  };
  protoOf(DerivationGLieAlgebraFactory).t25 = function (derivationDegree1, derivationDegree2) {
    var source1 = this.s25(derivationDegree1);
    var source2 = this.s25(derivationDegree2);
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.free.DerivationGLieAlgebraFactory.getMultiplication.<anonymous>' call
    tmp$ret$1 = this.p25_1.g1g().i1g(derivationDegree1, derivationDegree2);
    var target = this.s25(tmp$ret$1);
    return ValueBilinearMap_init_$Create$(source1, source2, target, this.o25_1, generateGetValue(this, target));
  };
  function InternalPrintConfig$Companion$default$ref($boundThis) {
    var l = function (p0) {
      return $boundThis.x1r(p0);
    };
    l.callableName = 'default';
    return l;
  }
  function FreeDGAlgebra$Companion$fromMap$lambda($getDifferentialValueMap) {
    return function ($this$null, generatorList) {
      var valueMap = $getDifferentialValueMap($this$null, generatorList);
      var tmp$ret$4;
      // Inline function 'kotlin.collections.map' call
      var tmp$ret$3;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(generatorList, 10));
      var tmp0_iterator = generatorList.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$2;
        // Inline function 'com.github.shwaka.kohomology.free.Companion.fromMap.<anonymous>.<anonymous>' call
        var tmp$ret$1;
        // Inline function 'kotlin.collections.getOrElse' call
        var tmp0_elvis_lhs = valueMap.u2(item);
        var tmp;
        if (tmp0_elvis_lhs == null) {
          var tmp$ret$0;
          // Inline function 'com.github.shwaka.kohomology.free.Companion.fromMap.<anonymous>.<anonymous>.<anonymous>' call
          tmp$ret$0 = $this$null.z1h();
          tmp = tmp$ret$0;
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        tmp$ret$2 = tmp$ret$1;
        tmp0_mapTo.a(tmp$ret$2);
      }
      tmp$ret$3 = tmp0_mapTo;
      tmp$ret$4 = tmp$ret$3;
      return tmp$ret$4;
    };
  }
  function InternalPrintConfig$Companion$default$ref_0($boundThis) {
    var l = function (p0) {
      return $boundThis.x1r(p0);
    };
    l.callableName = 'default';
    return l;
  }
  function FreeDGAlgebra$Companion$fromList$lambda($generatorList) {
    return function ($this$null, it) {
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault($generatorList, 10));
      var tmp0_iterator = $generatorList.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.free.Companion.fromList.<anonymous>.<anonymous>' call
        tmp$ret$0 = $this$null.x26(item.w26_1);
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      return tmp$ret$2;
    };
  }
  function Companion_38() {
    Companion_instance_38 = this;
  }
  protoOf(Companion_38).y26 = function (gAlgebra, differential) {
    return new FreeDGAlgebraImpl(gAlgebra, differential);
  };
  protoOf(Companion_38).z26 = function (matrixSpace, degreeGroup, indeterminateList, getInternalPrintConfig, getDifferentialValueList) {
    var freeGAlgebra = Companion_getInstance_41().a27(matrixSpace, degreeGroup, indeterminateList, getInternalPrintConfig);
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.free.Companion.fromList.<anonymous>' call
    var valueList = getDifferentialValueList(freeGAlgebra.g1g(), freeGAlgebra.r1l());
    var differential = freeGAlgebra.b27(valueList, 1);
    var inductionVariable = 0;
    var last = valueList.i() - 1 | 0;
    if (inductionVariable <= last)
      $l$loop: do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var value = valueList.l(i);
        if (!(value instanceof GVector))
          continue $l$loop;
        var tmp$ret$2;
        $l$block_0: {
          // Inline function 'kotlin.collections.any' call
          var tmp1_any = until(i, valueList.i());
          var tmp;
          if (isInterface(tmp1_any, Collection)) {
            tmp = tmp1_any.p();
          } else {
            tmp = false;
          }
          if (tmp) {
            tmp$ret$2 = false;
            break $l$block_0;
          }
          var inductionVariable_0 = tmp1_any.z_1;
          var last_0 = tmp1_any.a1_1;
          if (inductionVariable_0 <= last_0)
            do {
              var element = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              // Inline function 'com.github.shwaka.kohomology.free.Companion.fromList.<anonymous>' call
              if (freeGAlgebra.c27(element, value)) {
                tmp$ret$2 = true;
                break $l$block_0;
              }
            }
             while (!(element === last_0));
          tmp$ret$2 = false;
        }
        if (tmp$ret$2) {
          throw IllegalArgumentException_init_$Create$('The generator list of a FreeDGAlgebra should be sorted along a Sullivan filtration');
        }
        var dValue = differential.s1g(value);
        if (dValue.e1q())
          throw IllegalArgumentException_init_$Create$('d(' + indeterminateList.l(i) + ') must be a cocycle, ' + ('but your input is ' + value + ' with d(d(' + indeterminateList.l(i) + ')) = d(' + value + ') = ' + dValue + ' (!= 0)'));
      }
       while (inductionVariable <= last);
    return new FreeDGAlgebraImpl(freeGAlgebra, differential);
  };
  protoOf(Companion_38).d27 = function (matrixSpace, degreeGroup, indeterminateList, getDifferentialValueList) {
    var tmp = Companion_getInstance_39();
    return tmp.z26(matrixSpace, degreeGroup, indeterminateList, InternalPrintConfig$Companion$default$ref(Companion_getInstance_71()), getDifferentialValueList);
  };
  protoOf(Companion_38).e27 = function (matrixSpace, degreeGroup, indeterminateList, getInternalPrintConfig, getDifferentialValueMap) {
    var getDifferentialValueList = FreeDGAlgebra$Companion$fromMap$lambda(getDifferentialValueMap);
    return Companion_getInstance_39().z26(matrixSpace, degreeGroup, indeterminateList, getInternalPrintConfig, getDifferentialValueList);
  };
  protoOf(Companion_38).f27 = function (matrixSpace, indeterminateList, getInternalPrintConfig, getDifferentialValueMap) {
    return Companion_getInstance_39().e27(matrixSpace, IntDegreeGroup_getInstance(), indeterminateList, getInternalPrintConfig, getDifferentialValueMap);
  };
  protoOf(Companion_38).m22 = function (matrixSpace, indeterminateList, getInternalPrintConfig, getDifferentialValueMap, $super) {
    var tmp;
    if (getInternalPrintConfig === VOID) {
      tmp = InternalPrintConfig$Companion$default$ref_0(Companion_getInstance_71());
    } else {
      tmp = getInternalPrintConfig;
    }
    getInternalPrintConfig = tmp;
    return $super === VOID ? this.f27(matrixSpace, indeterminateList, getInternalPrintConfig, getDifferentialValueMap) : $super.f27.call(this, matrixSpace, indeterminateList, getInternalPrintConfig, getDifferentialValueMap);
  };
  protoOf(Companion_38).g27 = function (matrixSpace, degreeGroup, generatorList) {
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(generatorList, 10));
    var tmp0_iterator = generatorList.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.Companion.fromList.<anonymous>' call
      tmp$ret$0 = item.h27();
      tmp0_mapTo.a(tmp$ret$0);
    }
    var indeterminateList = tmp0_mapTo;
    var getDifferentialValueList = FreeDGAlgebra$Companion$fromList$lambda(generatorList);
    return Companion_getInstance_39().d27(matrixSpace, degreeGroup, indeterminateList, getDifferentialValueList);
  };
  protoOf(Companion_38).i27 = function (matrixSpace, generatorList) {
    return Companion_getInstance_39().g27(matrixSpace, IntDegreeGroup_getInstance(), generatorList);
  };
  protoOf(Companion_38).j27 = function (matrixSpace, json) {
    var generatorList = jsonToGeneratorList(json);
    return Companion_getInstance_39().i27(matrixSpace, generatorList);
  };
  var Companion_instance_38;
  function Companion_getInstance_39() {
    if (Companion_instance_38 == null)
      new Companion_38();
    return Companion_instance_38;
  }
  function FreeDGAlgebra$toJson$lambda($this$$receiver) {
    // Inline function 'com.github.shwaka.kohomology.util.EntriesBuilder.register' call
    var tmp0_register = new CopiedNamePrintConfig(ShowShift_S_getInstance());
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!$this$$receiver.k27_1.o2(getKClass(CopiedNamePrintConfig))) {
      // Inline function 'com.github.shwaka.kohomology.util.EntriesBuilder.register.<anonymous>' call
      var message = 'Already registered: ' + getKClass(CopiedNamePrintConfig);
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.collections.set' call
    var tmp1_set = $this$$receiver.k27_1;
    var tmp2_set = getKClass(CopiedNamePrintConfig);
    tmp1_set.z3(tmp2_set, tmp0_register);
    return Unit_getInstance();
  }
  function FreeDGAlgebra() {
  }
  function Companion_39() {
    Companion_instance_39 = this;
  }
  protoOf(Companion_39).l24 = function (dgAlgebra) {
    return new FreeDGAlgebraContextImpl(dgAlgebra);
  };
  var Companion_instance_39;
  function Companion_getInstance_40() {
    if (Companion_instance_39 == null)
      new Companion_39();
    return Companion_instance_39;
  }
  function _get_dgAlgebra__ci9nm4($this) {
    // Inline function 'kotlin.getValue' call
    dgAlgebra$factory();
    return $this.b28_1.w();
  }
  function FreeDGAlgebraImpl$dgAlgebra$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_1().k1g(this$0.r27_1, this$0.s27_1);
    };
  }
  function FreeDGAlgebraImpl$cohomology$delegate$lambda(this$0) {
    return function () {
      return _get_dgAlgebra__ci9nm4(this$0).m1g();
    };
  }
  function FreeDGAlgebraImpl(underlyingGAlgebra, differential) {
    this.r27_1 = underlyingGAlgebra;
    this.s27_1 = differential;
    this.t27_1 = Companion_getInstance_40().l24(this);
    this.u27_1 = this.r27_1.a1i();
    this.v27_1 = true;
    this.w27_1 = this.r27_1.y1g();
    this.x27_1 = this.r27_1.n1g();
    this.y27_1 = this.r27_1.c1h();
    this.z27_1 = this.r27_1.h26();
    this.a28_1 = this.r27_1.d28();
    var tmp = this;
    tmp.b28_1 = lazy(FreeDGAlgebraImpl$dgAlgebra$delegate$lambda(this));
    var tmp_0 = this;
    tmp_0.c28_1 = lazy(FreeDGAlgebraImpl$cohomology$delegate$lambda(this));
  }
  protoOf(FreeDGAlgebraImpl).g26 = function () {
    return this.r27_1;
  };
  protoOf(FreeDGAlgebraImpl).o1g = function () {
    return this.s27_1;
  };
  protoOf(FreeDGAlgebraImpl).i1h = function () {
    return this.r27_1.i1h();
  };
  protoOf(FreeDGAlgebraImpl).j1h = function () {
    return this.r27_1.j1h();
  };
  protoOf(FreeDGAlgebraImpl).e1h = function () {
    return this.r27_1.e1h();
  };
  protoOf(FreeDGAlgebraImpl).f1h = function () {
    return this.r27_1.f1h();
  };
  protoOf(FreeDGAlgebraImpl).d1h = function () {
    return this.r27_1.d1h();
  };
  protoOf(FreeDGAlgebraImpl).b1h = function () {
    return this.r27_1.b1h();
  };
  protoOf(FreeDGAlgebraImpl).h1h = function () {
    return this.r27_1.h1h();
  };
  protoOf(FreeDGAlgebraImpl).z1h = function () {
    return this.r27_1.z1h();
  };
  protoOf(FreeDGAlgebraImpl).e28 = function (a, b) {
    return this.r27_1.t1h(a, b);
  };
  protoOf(FreeDGAlgebraImpl).t1h = function (a, b) {
    return this.e28(a, b);
  };
  protoOf(FreeDGAlgebraImpl).f28 = function (gVector) {
    return this.r27_1.r1h(gVector);
  };
  protoOf(FreeDGAlgebraImpl).r1h = function (gVector) {
    return this.f28(gVector);
  };
  protoOf(FreeDGAlgebraImpl).g28 = function (gVector) {
    return this.r27_1.s1h(gVector);
  };
  protoOf(FreeDGAlgebraImpl).s1h = function (gVector) {
    return this.g28(gVector);
  };
  protoOf(FreeDGAlgebraImpl).h28 = function (gVectorOrZero, degree) {
    return this.r27_1.q1h(gVectorOrZero, degree);
  };
  protoOf(FreeDGAlgebraImpl).q1h = function (gVectorOrZero, degree) {
    return this.h28(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(FreeDGAlgebraImpl).i28 = function (a, b) {
    return this.r27_1.y1h(a, b);
  };
  protoOf(FreeDGAlgebraImpl).y1h = function (a, b) {
    return this.i28(a, b);
  };
  protoOf(FreeDGAlgebraImpl).j28 = function (basisName, degree) {
    return this.r27_1.m1h(basisName, degree);
  };
  protoOf(FreeDGAlgebraImpl).m1h = function (basisName, degree) {
    var tmp = basisName instanceof Monomial ? basisName : THROW_CCE();
    return this.j28(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(FreeDGAlgebraImpl).k28 = function (vector, degree) {
    return this.r27_1.k1h(vector, degree);
  };
  protoOf(FreeDGAlgebraImpl).k1h = function (vector, degree) {
    return this.k28(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(FreeDGAlgebraImpl).l28 = function (vector, degree) {
    return this.r27_1.l1h(vector, degree);
  };
  protoOf(FreeDGAlgebraImpl).l1h = function (vector, degree) {
    return this.l28(vector, degree);
  };
  protoOf(FreeDGAlgebraImpl).g1h = function (degree) {
    return this.r27_1.g1h(degree);
  };
  protoOf(FreeDGAlgebraImpl).l = function (degree) {
    return this.r27_1.l(degree);
  };
  protoOf(FreeDGAlgebraImpl).n1h = function (degree) {
    return this.r27_1.n1h(degree);
  };
  protoOf(FreeDGAlgebraImpl).o1h = function (degree) {
    return this.r27_1.o1h(degree);
  };
  protoOf(FreeDGAlgebraImpl).p1h = function (degree) {
    return this.r27_1.p1h(degree);
  };
  protoOf(FreeDGAlgebraImpl).m28 = function (scalar, gVector) {
    return this.r27_1.v1h(scalar, gVector);
  };
  protoOf(FreeDGAlgebraImpl).v1h = function (scalar, gVector) {
    return this.m28(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  protoOf(FreeDGAlgebraImpl).n28 = function (a, b) {
    return this.r27_1.u1h(a, b);
  };
  protoOf(FreeDGAlgebraImpl).u1h = function (a, b) {
    return this.n28(a, b);
  };
  protoOf(FreeDGAlgebraImpl).g1g = function () {
    return this.t27_1;
  };
  protoOf(FreeDGAlgebraImpl).a1i = function () {
    return this.u27_1;
  };
  protoOf(FreeDGAlgebraImpl).b1i = function () {
    return this.v27_1;
  };
  protoOf(FreeDGAlgebraImpl).y1g = function () {
    return this.w27_1;
  };
  protoOf(FreeDGAlgebraImpl).n1g = function () {
    return this.x27_1;
  };
  protoOf(FreeDGAlgebraImpl).c1h = function () {
    return this.y27_1;
  };
  protoOf(FreeDGAlgebraImpl).h26 = function () {
    return this.z27_1;
  };
  protoOf(FreeDGAlgebraImpl).d28 = function () {
    return this.a28_1;
  };
  protoOf(FreeDGAlgebraImpl).m1g = function () {
    // Inline function 'kotlin.getValue' call
    cohomology$factory_4();
    return this.c28_1.w();
  };
  protoOf(FreeDGAlgebraImpl).toString = function () {
    return this.s1i(Companion_getInstance_70().f1m_1);
  };
  protoOf(FreeDGAlgebraImpl).s1i = function (printConfig) {
    return '(' + this.r27_1.s1i(printConfig) + ', d)';
  };
  function FreeDGAlgebraContextImpl(dgAlgebra) {
    this.o28_1 = dgAlgebra;
    this.p28_1 = Companion_getInstance_2().f1i(dgAlgebra);
    this.q28_1 = this.o28_1;
  }
  protoOf(FreeDGAlgebraContextImpl).r1g = function () {
    return this.p28_1.r1g();
  };
  protoOf(FreeDGAlgebraContextImpl).x1i = function () {
    return this.p28_1.x1i();
  };
  protoOf(FreeDGAlgebraContextImpl).y1i = function () {
    return this.p28_1.y1i();
  };
  protoOf(FreeDGAlgebraContextImpl).j1h = function () {
    return this.p28_1.j1h();
  };
  protoOf(FreeDGAlgebraContextImpl).z1i = function () {
    return this.p28_1.z1i();
  };
  protoOf(FreeDGAlgebraContextImpl).a1j = function () {
    return this.p28_1.a1j();
  };
  protoOf(FreeDGAlgebraContextImpl).b1h = function () {
    return this.p28_1.b1h();
  };
  protoOf(FreeDGAlgebraContextImpl).b1j = function () {
    return this.p28_1.b1j();
  };
  protoOf(FreeDGAlgebraContextImpl).a1i = function () {
    return this.p28_1.a1i();
  };
  protoOf(FreeDGAlgebraContextImpl).c1j = function () {
    return this.p28_1.c1j();
  };
  protoOf(FreeDGAlgebraContextImpl).z1h = function () {
    return this.p28_1.z1h();
  };
  protoOf(FreeDGAlgebraContextImpl).r28 = function (_this__u8e3s4) {
    return this.p28_1.d1j(_this__u8e3s4);
  };
  protoOf(FreeDGAlgebraContextImpl).d1j = function (_this__u8e3s4) {
    return this.r28(_this__u8e3s4);
  };
  protoOf(FreeDGAlgebraContextImpl).e1j = function (_this__u8e3s4, other) {
    return this.p28_1.e1j(_this__u8e3s4, other);
  };
  protoOf(FreeDGAlgebraContextImpl).f1j = function (_this__u8e3s4, other) {
    return this.p28_1.f1j(_this__u8e3s4, other);
  };
  protoOf(FreeDGAlgebraContextImpl).g1j = function (_this__u8e3s4, ind) {
    return this.p28_1.g1j(_this__u8e3s4, ind);
  };
  protoOf(FreeDGAlgebraContextImpl).h1j = function (_this__u8e3s4) {
    return this.p28_1.h1j(_this__u8e3s4);
  };
  protoOf(FreeDGAlgebraContextImpl).i1j = function (_this__u8e3s4, other) {
    return this.p28_1.i1j(_this__u8e3s4, other);
  };
  protoOf(FreeDGAlgebraContextImpl).j1j = function (_this__u8e3s4, other) {
    return this.p28_1.j1j(_this__u8e3s4, other);
  };
  protoOf(FreeDGAlgebraContextImpl).s28 = function (_this__u8e3s4, other) {
    return this.p28_1.k1j(_this__u8e3s4, other);
  };
  protoOf(FreeDGAlgebraContextImpl).k1j = function (_this__u8e3s4, other) {
    return this.s28(_this__u8e3s4, other);
  };
  protoOf(FreeDGAlgebraContextImpl).t28 = function (_this__u8e3s4, other) {
    return this.p28_1.l1j(_this__u8e3s4, other);
  };
  protoOf(FreeDGAlgebraContextImpl).l1j = function (_this__u8e3s4, other) {
    return this.t28(_this__u8e3s4, other);
  };
  protoOf(FreeDGAlgebraContextImpl).m1j = function (_this__u8e3s4, other) {
    return this.p28_1.m1j(_this__u8e3s4, other);
  };
  protoOf(FreeDGAlgebraContextImpl).n1j = function (_this__u8e3s4, other) {
    return this.p28_1.n1j(_this__u8e3s4, other);
  };
  protoOf(FreeDGAlgebraContextImpl).u28 = function (_this__u8e3s4, other) {
    return this.p28_1.o1j(_this__u8e3s4, other);
  };
  protoOf(FreeDGAlgebraContextImpl).o1j = function (_this__u8e3s4, other) {
    return this.u28(_this__u8e3s4, other);
  };
  protoOf(FreeDGAlgebraContextImpl).v28 = function (_this__u8e3s4, other) {
    return this.p28_1.p1j(_this__u8e3s4, other);
  };
  protoOf(FreeDGAlgebraContextImpl).p1j = function (_this__u8e3s4, other) {
    return this.v28(_this__u8e3s4, other);
  };
  protoOf(FreeDGAlgebraContextImpl).w28 = function (_this__u8e3s4, exponent) {
    return this.p28_1.j1k(_this__u8e3s4, exponent);
  };
  protoOf(FreeDGAlgebraContextImpl).j1k = function (_this__u8e3s4, exponent) {
    return this.w28(_this__u8e3s4, exponent);
  };
  protoOf(FreeDGAlgebraContextImpl).x28 = function (_this__u8e3s4, exponent) {
    return this.p28_1.k1k(_this__u8e3s4, exponent);
  };
  protoOf(FreeDGAlgebraContextImpl).k1k = function (_this__u8e3s4, exponent) {
    return this.x28(_this__u8e3s4, exponent);
  };
  protoOf(FreeDGAlgebraContextImpl).y28 = function (_this__u8e3s4) {
    return this.p28_1.m1k(_this__u8e3s4);
  };
  protoOf(FreeDGAlgebraContextImpl).m1k = function (_this__u8e3s4) {
    return this.y28(_this__u8e3s4);
  };
  protoOf(FreeDGAlgebraContextImpl).q1j = function (_this__u8e3s4) {
    return this.p28_1.q1j(_this__u8e3s4);
  };
  protoOf(FreeDGAlgebraContextImpl).z28 = function (_this__u8e3s4, degree) {
    return this.p28_1.r1j(_this__u8e3s4, degree);
  };
  protoOf(FreeDGAlgebraContextImpl).r1j = function (_this__u8e3s4, degree) {
    return this.z28(_this__u8e3s4, (degree == null ? true : isInterface(degree, Degree)) ? degree : THROW_CCE());
  };
  protoOf(FreeDGAlgebraContextImpl).s1j = function (_this__u8e3s4, other) {
    return this.p28_1.s1j(_this__u8e3s4, other);
  };
  protoOf(FreeDGAlgebraContextImpl).t1j = function (_this__u8e3s4, numVector) {
    return this.p28_1.t1j(_this__u8e3s4, numVector);
  };
  protoOf(FreeDGAlgebraContextImpl).a29 = function (_this__u8e3s4, gVector) {
    return this.p28_1.u1j(_this__u8e3s4, gVector);
  };
  protoOf(FreeDGAlgebraContextImpl).u1j = function (_this__u8e3s4, gVector) {
    return this.a29(isInterface(_this__u8e3s4, Scalar) ? _this__u8e3s4 : THROW_CCE(), gVector);
  };
  protoOf(FreeDGAlgebraContextImpl).v1j = function (_this__u8e3s4, scalar) {
    return this.p28_1.v1j(_this__u8e3s4, scalar);
  };
  protoOf(FreeDGAlgebraContextImpl).b29 = function (_this__u8e3s4, scalar) {
    return this.p28_1.w1j(_this__u8e3s4, scalar);
  };
  protoOf(FreeDGAlgebraContextImpl).w1j = function (_this__u8e3s4, scalar) {
    return this.b29(_this__u8e3s4, isInterface(scalar, Scalar) ? scalar : THROW_CCE());
  };
  protoOf(FreeDGAlgebraContextImpl).c29 = function (_this__u8e3s4, other) {
    return this.p28_1.x1j(_this__u8e3s4, other);
  };
  protoOf(FreeDGAlgebraContextImpl).x1j = function (_this__u8e3s4, other) {
    return this.c29(_this__u8e3s4, other);
  };
  protoOf(FreeDGAlgebraContextImpl).d29 = function (_this__u8e3s4, sign) {
    return this.p28_1.y1j(_this__u8e3s4, sign);
  };
  protoOf(FreeDGAlgebraContextImpl).y1j = function (_this__u8e3s4, sign) {
    return this.d29(_this__u8e3s4, sign);
  };
  protoOf(FreeDGAlgebraContextImpl).e29 = function (_this__u8e3s4, scalar) {
    return this.p28_1.z1j(_this__u8e3s4, scalar);
  };
  protoOf(FreeDGAlgebraContextImpl).z1j = function (_this__u8e3s4, scalar) {
    return this.e29(_this__u8e3s4, isInterface(scalar, Scalar) ? scalar : THROW_CCE());
  };
  protoOf(FreeDGAlgebraContextImpl).f29 = function (_this__u8e3s4, other) {
    return this.p28_1.a1k(_this__u8e3s4, other);
  };
  protoOf(FreeDGAlgebraContextImpl).a1k = function (_this__u8e3s4, other) {
    return this.f29(_this__u8e3s4, other);
  };
  protoOf(FreeDGAlgebraContextImpl).g29 = function (_this__u8e3s4, gVector) {
    return this.p28_1.b1k(_this__u8e3s4, gVector);
  };
  protoOf(FreeDGAlgebraContextImpl).b1k = function (_this__u8e3s4, gVector) {
    return this.g29(_this__u8e3s4, gVector);
  };
  protoOf(FreeDGAlgebraContextImpl).h29 = function (_this__u8e3s4, gVector) {
    return this.p28_1.c1k(_this__u8e3s4, gVector);
  };
  protoOf(FreeDGAlgebraContextImpl).c1k = function (_this__u8e3s4, gVector) {
    return this.h29(_this__u8e3s4, gVector);
  };
  protoOf(FreeDGAlgebraContextImpl).i29 = function (_this__u8e3s4) {
    return this.p28_1.l1k(_this__u8e3s4);
  };
  protoOf(FreeDGAlgebraContextImpl).l1k = function (_this__u8e3s4) {
    return this.i29(_this__u8e3s4);
  };
  protoOf(FreeDGAlgebraContextImpl).d1k = function (_this__u8e3s4) {
    return this.p28_1.d1k(_this__u8e3s4);
  };
  protoOf(FreeDGAlgebraContextImpl).e1k = function (_this__u8e3s4) {
    return this.p28_1.e1k(_this__u8e3s4);
  };
  protoOf(FreeDGAlgebraContextImpl).f1k = function (_this__u8e3s4) {
    return this.p28_1.f1k(_this__u8e3s4);
  };
  protoOf(FreeDGAlgebraContextImpl).j29 = function (_this__u8e3s4) {
    return this.p28_1.g1k(_this__u8e3s4);
  };
  protoOf(FreeDGAlgebraContextImpl).g1k = function (_this__u8e3s4) {
    return this.j29(_this__u8e3s4);
  };
  protoOf(FreeDGAlgebraContextImpl).k29 = function (_this__u8e3s4) {
    return this.p28_1.h1k(_this__u8e3s4);
  };
  protoOf(FreeDGAlgebraContextImpl).h1k = function (_this__u8e3s4) {
    return this.k29(_this__u8e3s4);
  };
  protoOf(FreeDGAlgebraContextImpl).i1k = function () {
    return this.q28_1;
  };
  function dgAlgebra$factory() {
    return getPropertyCallableRef('dgAlgebra', 1, KProperty1, function (receiver) {
      return _get_dgAlgebra__ci9nm4(receiver);
    }, null);
  }
  function cohomology$factory_4() {
    return getPropertyCallableRef('cohomology', 1, KProperty1, function (receiver) {
      return receiver.m1g();
    }, null);
  }
  function InternalPrintConfig$Companion$default$ref_1($boundThis) {
    var l = function (p0) {
      return $boundThis.x1r(p0);
    };
    l.callableName = 'default';
    return l;
  }
  function getDerivationValue($this, valueList, monomial, valueDegree) {
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = $this.d28().s29(monomial);
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$7;
      // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getDerivationValue.<anonymous>' call
      // Inline function 'kotlin.collections.map' call
      var tmp0_map_0 = get_indices_0($this.h26());
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
      var inductionVariable = tmp0_map_0.z_1;
      var last = tmp0_map_0.a1_1;
      if (inductionVariable <= last)
        do {
          var item_0 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp$ret$0;
          // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getDerivationValue.<anonymous>.<anonymous>' call
          tmp$ret$0 = item_0 === item.x29_1 ? item.v29_1 - 1 | 0 : 0;
          tmp0_mapTo_0.a(tmp$ret$0);
        }
         while (!(item_0 === last));
      var derivedSeparatedExponentList = tmp0_mapTo_0;
      var derivedSeparatedMonomial = Monomial_init_$Create$($this.c1h(), $this.h26(), derivedSeparatedExponentList);
      // Inline function 'kotlin.run' call
      var tmp1_run = $this.g1g();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getDerivationValue.<anonymous>.<anonymous>' call
      var derivedSeparatedGVector = tmp1_run.x1j(tmp1_run.c1k(item.v29_1, $this.m1h(derivedSeparatedMonomial, derivedSeparatedMonomial.u1k())), valueList.l(item.x29_1));
      var remainingGVector = $this.m1h(item.t29_1, item.t29_1.u1k());
      // Inline function 'kotlin.run' call
      var tmp2_run = $this.g1g();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getDerivationValue.<anonymous>.<anonymous>' call
      tmp$ret$7 = tmp2_run.y1j(tmp2_run.x1j(derivedSeparatedGVector, remainingGVector), item.w29_1);
      tmp0_mapTo.a(tmp$ret$7);
    }
    var terms = tmp0_mapTo;
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getDerivationValue.<anonymous>' call
    return $this.g1g().r1j(terms, valueDegree);
  }
  function getAlgebraMapValue($this, target, valueList, monomial) {
    // Inline function 'kotlin.run' call
    var tmp0_run = target.g1g();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getAlgebraMapValue.<anonymous>' call
    // Inline function 'kotlin.collections.mapIndexed' call
    var tmp0_mapIndexed = monomial.m26_1;
    // Inline function 'kotlin.collections.mapIndexedTo' call
    var tmp0_mapIndexedTo = ArrayList_init_$Create$(tmp0_mapIndexed.length);
    var index = 0;
    var inductionVariable = 0;
    var last = tmp0_mapIndexed.length;
    while (inductionVariable < last) {
      var item = tmp0_mapIndexed[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getAlgebraMapValue.<anonymous>.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      tmp$ret$0 = tmp0_run.j1k(valueList.l(tmp1), item);
      tmp0_mapIndexedTo.a(tmp$ret$0);
    }
    return tmp0_run.m1k(tmp0_mapIndexedTo);
  }
  function Companion_40() {
    Companion_instance_40 = this;
  }
  protoOf(Companion_40).a27 = function (matrixSpace, degreeGroup, indeterminateList, getInternalPrintConfig) {
    return new FreeGAlgebraImpl(matrixSpace, degreeGroup, indeterminateList, getInternalPrintConfig);
  };
  protoOf(Companion_40).y29 = function (matrixSpace, degreeGroup, indeterminateList, getInternalPrintConfig, $super) {
    var tmp;
    if (getInternalPrintConfig === VOID) {
      tmp = InternalPrintConfig$Companion$default$ref_1(Companion_getInstance_71());
    } else {
      tmp = getInternalPrintConfig;
    }
    getInternalPrintConfig = tmp;
    return $super === VOID ? this.a27(matrixSpace, degreeGroup, indeterminateList, getInternalPrintConfig) : $super.a27.call(this, matrixSpace, degreeGroup, indeterminateList, getInternalPrintConfig);
  };
  protoOf(Companion_40).z29 = function (matrixSpace, indeterminateList) {
    return Companion_getInstance_41().y29(matrixSpace, IntDegreeGroup_getInstance(), indeterminateList);
  };
  var Companion_instance_40;
  function Companion_getInstance_41() {
    if (Companion_instance_40 == null)
      new Companion_40();
    return Companion_instance_40;
  }
  function FreeGAlgebra$getDerivation$lambda(it) {
    return toString(it);
  }
  function FreeGAlgebra$getDerivation$lambda_0(this$0, $derivationDegree, $gVectorValueList) {
    return function (k) {
      var sourceVectorSpace = this$0.g1h(k);
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.c1h().g1g();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getDerivation.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.i1g(k, $derivationDegree);
      tmp$ret$1 = tmp$ret$0;
      var targetDegree = tmp$ret$1;
      var tmp$ret$4;
      // Inline function 'kotlin.collections.map' call
      var tmp1_map = sourceVectorSpace.j1s();
      var tmp$ret$3;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
      var tmp0_iterator = tmp1_map.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$2;
        // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getDerivation.<anonymous>.<anonymous>' call
        tmp$ret$2 = getDerivationValue(this$0, $gVectorValueList, item, targetDegree);
        tmp0_mapTo.a(tmp$ret$2);
      }
      tmp$ret$3 = tmp0_mapTo;
      tmp$ret$4 = tmp$ret$3;
      return tmp$ret$4;
    };
  }
  function FreeGAlgebra$getGAlgebraMap$lambda(it) {
    return toString(it);
  }
  function FreeGAlgebra$getGAlgebraMap$lambda_0(this$0, $target, $gVectorValueList) {
    return function (k) {
      var sourceVectorSpace = this$0.g1h(k);
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = sourceVectorSpace.j1s();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var tmp0_iterator = tmp0_map.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getGAlgebraMap.<anonymous>.<anonymous>' call
        var gVectorValue = getAlgebraMapValue(this$0, $target, $gVectorValueList, item);
        tmp$ret$0 = gVectorValue;
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      return tmp$ret$2;
    };
  }
  function FreeGAlgebra$convertDegree$lambda($freeMonoidMorphism) {
    return function (monomial) {
      return $freeMonoidMorphism.d2a(monomial);
    };
  }
  function FreeGAlgebra() {
  }
  function Companion_41() {
    Companion_instance_41 = this;
  }
  protoOf(Companion_41).l25 = function (gAlgebra) {
    return new FreeGAlgebraContextImpl(gAlgebra);
  };
  var Companion_instance_41;
  function Companion_getInstance_42() {
    if (Companion_instance_41 == null)
      new Companion_41();
    return Companion_instance_41;
  }
  function FreeGAlgebraContext() {
  }
  function getName($this, indeterminateList) {
    var indeterminateString = joinToString(indeterminateList, ', ', VOID, VOID, VOID, VOID, FreeGAlgebraImpl$Companion$getName$lambda);
    return '\u039B(' + indeterminateString + ')';
  }
  function FreeGAlgebraImpl$Companion$getName$lambda(it) {
    return it.toString();
  }
  function Companion_42() {
    Companion_instance_42 = this;
  }
  var Companion_instance_42;
  function Companion_getInstance_43() {
    if (Companion_instance_42 == null)
      new Companion_42();
    return Companion_instance_42;
  }
  function InternalPrintConfig$Companion$default$ref_2($boundThis) {
    var l = function (p0) {
      return $boundThis.x1r(p0);
    };
    l.callableName = 'default';
    return l;
  }
  function FreeGAlgebraImpl$toString$lambda($printConfig) {
    return function (it) {
      return it.s1i($printConfig);
    };
  }
  function FreeGAlgebraImpl(matrixSpace, degreeGroup, indeterminateList, getInternalPrintConfig) {
    Companion_getInstance_43();
    var tmp;
    if (getInternalPrintConfig === VOID) {
      tmp = InternalPrintConfig$Companion$default$ref_2(Companion_getInstance_71());
    } else {
      tmp = getInternalPrintConfig;
    }
    getInternalPrintConfig = tmp;
    this.h2a_1 = degreeGroup;
    this.i2a_1 = indeterminateList;
    this.j2a_1 = Companion_getInstance_48().m2a(matrixSpace, degreeGroup, new FreeGMonoid(degreeGroup, indeterminateList), getName(Companion_getInstance_43(), indeterminateList), getInternalPrintConfig);
    var duplicatedIndeterminateList = duplicates(this.i2a_1);
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!duplicatedIndeterminateList.p()) {
      // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebraImpl.<anonymous>' call
      var message = 'indeterminateList contains duplicates: ' + duplicatedIndeterminateList;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    this.k2a_1 = Companion_getInstance_42().l25(this);
    this.l2a_1 = this;
  }
  protoOf(FreeGAlgebraImpl).c1h = function () {
    return this.h2a_1;
  };
  protoOf(FreeGAlgebraImpl).h26 = function () {
    return this.i2a_1;
  };
  protoOf(FreeGAlgebraImpl).i1h = function () {
    return this.j2a_1.i1h();
  };
  protoOf(FreeGAlgebraImpl).j1h = function () {
    return this.j2a_1.j1h();
  };
  protoOf(FreeGAlgebraImpl).e1h = function () {
    return this.j2a_1.e1h();
  };
  protoOf(FreeGAlgebraImpl).b1i = function () {
    return this.j2a_1.b1i();
  };
  protoOf(FreeGAlgebraImpl).f1h = function () {
    return this.j2a_1.f1h();
  };
  protoOf(FreeGAlgebraImpl).y1g = function () {
    return this.j2a_1.y1g();
  };
  protoOf(FreeGAlgebraImpl).d28 = function () {
    return this.j2a_1.d28();
  };
  protoOf(FreeGAlgebraImpl).n1g = function () {
    return this.j2a_1.n1g();
  };
  protoOf(FreeGAlgebraImpl).d1h = function () {
    return this.j2a_1.d1h();
  };
  protoOf(FreeGAlgebraImpl).b1h = function () {
    return this.j2a_1.b1h();
  };
  protoOf(FreeGAlgebraImpl).h1h = function () {
    return this.j2a_1.h1h();
  };
  protoOf(FreeGAlgebraImpl).a1i = function () {
    return this.j2a_1.a1i();
  };
  protoOf(FreeGAlgebraImpl).z1h = function () {
    return this.j2a_1.z1h();
  };
  protoOf(FreeGAlgebraImpl).e28 = function (a, b) {
    return this.j2a_1.t1h(a, b);
  };
  protoOf(FreeGAlgebraImpl).t1h = function (a, b) {
    return this.e28(a, b);
  };
  protoOf(FreeGAlgebraImpl).f28 = function (gVector) {
    return this.j2a_1.r1h(gVector);
  };
  protoOf(FreeGAlgebraImpl).r1h = function (gVector) {
    return this.f28(gVector);
  };
  protoOf(FreeGAlgebraImpl).g28 = function (gVector) {
    return this.j2a_1.s1h(gVector);
  };
  protoOf(FreeGAlgebraImpl).s1h = function (gVector) {
    return this.g28(gVector);
  };
  protoOf(FreeGAlgebraImpl).h28 = function (gVectorOrZero, degree) {
    return this.j2a_1.q1h(gVectorOrZero, degree);
  };
  protoOf(FreeGAlgebraImpl).q1h = function (gVectorOrZero, degree) {
    return this.h28(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(FreeGAlgebraImpl).n2a = function (gVector) {
    return this.j2a_1.c1i(gVector);
  };
  protoOf(FreeGAlgebraImpl).c1i = function (gVector) {
    return this.n2a(gVector);
  };
  protoOf(FreeGAlgebraImpl).i28 = function (a, b) {
    return this.j2a_1.y1h(a, b);
  };
  protoOf(FreeGAlgebraImpl).y1h = function (a, b) {
    return this.i28(a, b);
  };
  protoOf(FreeGAlgebraImpl).j28 = function (basisName, degree) {
    return this.j2a_1.m1h(basisName, degree);
  };
  protoOf(FreeGAlgebraImpl).m1h = function (basisName, degree) {
    var tmp = basisName instanceof Monomial ? basisName : THROW_CCE();
    return this.j28(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(FreeGAlgebraImpl).k28 = function (vector, degree) {
    return this.j2a_1.k1h(vector, degree);
  };
  protoOf(FreeGAlgebraImpl).k1h = function (vector, degree) {
    return this.k28(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(FreeGAlgebraImpl).l28 = function (vector, degree) {
    return this.j2a_1.l1h(vector, degree);
  };
  protoOf(FreeGAlgebraImpl).l1h = function (vector, degree) {
    return this.l28(vector, degree);
  };
  protoOf(FreeGAlgebraImpl).g1h = function (degree) {
    return this.j2a_1.g1h(degree);
  };
  protoOf(FreeGAlgebraImpl).l = function (degree) {
    return this.j2a_1.l(degree);
  };
  protoOf(FreeGAlgebraImpl).n1h = function (degree) {
    return this.j2a_1.n1h(degree);
  };
  protoOf(FreeGAlgebraImpl).o2a = function (ideal) {
    return this.j2a_1.e1i(ideal);
  };
  protoOf(FreeGAlgebraImpl).e1i = function (ideal) {
    return this.o2a(ideal);
  };
  protoOf(FreeGAlgebraImpl).o1h = function (degree) {
    return this.j2a_1.o1h(degree);
  };
  protoOf(FreeGAlgebraImpl).p1h = function (degree) {
    return this.j2a_1.p1h(degree);
  };
  protoOf(FreeGAlgebraImpl).m28 = function (scalar, gVector) {
    return this.j2a_1.v1h(scalar, gVector);
  };
  protoOf(FreeGAlgebraImpl).v1h = function (scalar, gVector) {
    return this.m28(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  protoOf(FreeGAlgebraImpl).p2a = function (a, b) {
    return this.j2a_1.w1h(a, b);
  };
  protoOf(FreeGAlgebraImpl).w1h = function (a, b) {
    return this.p2a(a, b);
  };
  protoOf(FreeGAlgebraImpl).q2a = function (a, b) {
    return this.j2a_1.x1h(a, b);
  };
  protoOf(FreeGAlgebraImpl).x1h = function (a, b) {
    return this.q2a(a, b);
  };
  protoOf(FreeGAlgebraImpl).r2a = function (generatorList, text) {
    return this.j2a_1.d1i(generatorList, text);
  };
  protoOf(FreeGAlgebraImpl).d1i = function (generatorList, text) {
    return this.r2a(generatorList, text);
  };
  protoOf(FreeGAlgebraImpl).n28 = function (a, b) {
    return this.j2a_1.u1h(a, b);
  };
  protoOf(FreeGAlgebraImpl).u1h = function (a, b) {
    return this.n28(a, b);
  };
  protoOf(FreeGAlgebraImpl).toString = function () {
    return this.j2a_1.toString();
  };
  protoOf(FreeGAlgebraImpl).g1g = function () {
    return this.k2a_1;
  };
  protoOf(FreeGAlgebraImpl).g26 = function () {
    return this.l2a_1;
  };
  protoOf(FreeGAlgebraImpl).s1i = function (printConfig) {
    var indeterminateString = joinToString(this.i2a_1, ', ', VOID, VOID, VOID, VOID, FreeGAlgebraImpl$toString$lambda(printConfig));
    return '\u039B(' + indeterminateString + ')';
  };
  function FreeGAlgebraContextImpl(gAlgebra) {
    this.s2a_1 = gAlgebra;
    this.t2a_1 = Companion_getInstance_16().l1q(gAlgebra);
  }
  protoOf(FreeGAlgebraContextImpl).i1k = function () {
    return this.s2a_1;
  };
  protoOf(FreeGAlgebraContextImpl).j1h = function () {
    return this.t2a_1.j1h();
  };
  protoOf(FreeGAlgebraContextImpl).z1i = function () {
    return this.t2a_1.z1i();
  };
  protoOf(FreeGAlgebraContextImpl).a1j = function () {
    return this.t2a_1.a1j();
  };
  protoOf(FreeGAlgebraContextImpl).b1h = function () {
    return this.t2a_1.b1h();
  };
  protoOf(FreeGAlgebraContextImpl).b1j = function () {
    return this.t2a_1.b1j();
  };
  protoOf(FreeGAlgebraContextImpl).a1i = function () {
    return this.t2a_1.a1i();
  };
  protoOf(FreeGAlgebraContextImpl).c1j = function () {
    return this.t2a_1.c1j();
  };
  protoOf(FreeGAlgebraContextImpl).z1h = function () {
    return this.t2a_1.z1h();
  };
  protoOf(FreeGAlgebraContextImpl).e1j = function (_this__u8e3s4, other) {
    return this.t2a_1.e1j(_this__u8e3s4, other);
  };
  protoOf(FreeGAlgebraContextImpl).f1j = function (_this__u8e3s4, other) {
    return this.t2a_1.f1j(_this__u8e3s4, other);
  };
  protoOf(FreeGAlgebraContextImpl).g1j = function (_this__u8e3s4, ind) {
    return this.t2a_1.g1j(_this__u8e3s4, ind);
  };
  protoOf(FreeGAlgebraContextImpl).h1j = function (_this__u8e3s4) {
    return this.t2a_1.h1j(_this__u8e3s4);
  };
  protoOf(FreeGAlgebraContextImpl).i1j = function (_this__u8e3s4, other) {
    return this.t2a_1.i1j(_this__u8e3s4, other);
  };
  protoOf(FreeGAlgebraContextImpl).j1j = function (_this__u8e3s4, other) {
    return this.t2a_1.j1j(_this__u8e3s4, other);
  };
  protoOf(FreeGAlgebraContextImpl).s28 = function (_this__u8e3s4, other) {
    return this.t2a_1.k1j(_this__u8e3s4, other);
  };
  protoOf(FreeGAlgebraContextImpl).k1j = function (_this__u8e3s4, other) {
    return this.s28(_this__u8e3s4, other);
  };
  protoOf(FreeGAlgebraContextImpl).t28 = function (_this__u8e3s4, other) {
    return this.t2a_1.l1j(_this__u8e3s4, other);
  };
  protoOf(FreeGAlgebraContextImpl).l1j = function (_this__u8e3s4, other) {
    return this.t28(_this__u8e3s4, other);
  };
  protoOf(FreeGAlgebraContextImpl).m1j = function (_this__u8e3s4, other) {
    return this.t2a_1.m1j(_this__u8e3s4, other);
  };
  protoOf(FreeGAlgebraContextImpl).n1j = function (_this__u8e3s4, other) {
    return this.t2a_1.n1j(_this__u8e3s4, other);
  };
  protoOf(FreeGAlgebraContextImpl).u28 = function (_this__u8e3s4, other) {
    return this.t2a_1.o1j(_this__u8e3s4, other);
  };
  protoOf(FreeGAlgebraContextImpl).o1j = function (_this__u8e3s4, other) {
    return this.u28(_this__u8e3s4, other);
  };
  protoOf(FreeGAlgebraContextImpl).v28 = function (_this__u8e3s4, other) {
    return this.t2a_1.p1j(_this__u8e3s4, other);
  };
  protoOf(FreeGAlgebraContextImpl).p1j = function (_this__u8e3s4, other) {
    return this.v28(_this__u8e3s4, other);
  };
  protoOf(FreeGAlgebraContextImpl).w28 = function (_this__u8e3s4, exponent) {
    return this.t2a_1.j1k(_this__u8e3s4, exponent);
  };
  protoOf(FreeGAlgebraContextImpl).j1k = function (_this__u8e3s4, exponent) {
    return this.w28(_this__u8e3s4, exponent);
  };
  protoOf(FreeGAlgebraContextImpl).x28 = function (_this__u8e3s4, exponent) {
    return this.t2a_1.k1k(_this__u8e3s4, exponent);
  };
  protoOf(FreeGAlgebraContextImpl).k1k = function (_this__u8e3s4, exponent) {
    return this.x28(_this__u8e3s4, exponent);
  };
  protoOf(FreeGAlgebraContextImpl).y28 = function (_this__u8e3s4) {
    return this.t2a_1.m1k(_this__u8e3s4);
  };
  protoOf(FreeGAlgebraContextImpl).m1k = function (_this__u8e3s4) {
    return this.y28(_this__u8e3s4);
  };
  protoOf(FreeGAlgebraContextImpl).q1j = function (_this__u8e3s4) {
    return this.t2a_1.q1j(_this__u8e3s4);
  };
  protoOf(FreeGAlgebraContextImpl).z28 = function (_this__u8e3s4, degree) {
    return this.t2a_1.r1j(_this__u8e3s4, degree);
  };
  protoOf(FreeGAlgebraContextImpl).r1j = function (_this__u8e3s4, degree) {
    return this.z28(_this__u8e3s4, (degree == null ? true : isInterface(degree, Degree)) ? degree : THROW_CCE());
  };
  protoOf(FreeGAlgebraContextImpl).s1j = function (_this__u8e3s4, other) {
    return this.t2a_1.s1j(_this__u8e3s4, other);
  };
  protoOf(FreeGAlgebraContextImpl).t1j = function (_this__u8e3s4, numVector) {
    return this.t2a_1.t1j(_this__u8e3s4, numVector);
  };
  protoOf(FreeGAlgebraContextImpl).a29 = function (_this__u8e3s4, gVector) {
    return this.t2a_1.u1j(_this__u8e3s4, gVector);
  };
  protoOf(FreeGAlgebraContextImpl).u1j = function (_this__u8e3s4, gVector) {
    return this.a29(isInterface(_this__u8e3s4, Scalar) ? _this__u8e3s4 : THROW_CCE(), gVector);
  };
  protoOf(FreeGAlgebraContextImpl).v1j = function (_this__u8e3s4, scalar) {
    return this.t2a_1.v1j(_this__u8e3s4, scalar);
  };
  protoOf(FreeGAlgebraContextImpl).b29 = function (_this__u8e3s4, scalar) {
    return this.t2a_1.w1j(_this__u8e3s4, scalar);
  };
  protoOf(FreeGAlgebraContextImpl).w1j = function (_this__u8e3s4, scalar) {
    return this.b29(_this__u8e3s4, isInterface(scalar, Scalar) ? scalar : THROW_CCE());
  };
  protoOf(FreeGAlgebraContextImpl).c29 = function (_this__u8e3s4, other) {
    return this.t2a_1.x1j(_this__u8e3s4, other);
  };
  protoOf(FreeGAlgebraContextImpl).x1j = function (_this__u8e3s4, other) {
    return this.c29(_this__u8e3s4, other);
  };
  protoOf(FreeGAlgebraContextImpl).d29 = function (_this__u8e3s4, sign) {
    return this.t2a_1.y1j(_this__u8e3s4, sign);
  };
  protoOf(FreeGAlgebraContextImpl).y1j = function (_this__u8e3s4, sign) {
    return this.d29(_this__u8e3s4, sign);
  };
  protoOf(FreeGAlgebraContextImpl).e29 = function (_this__u8e3s4, scalar) {
    return this.t2a_1.z1j(_this__u8e3s4, scalar);
  };
  protoOf(FreeGAlgebraContextImpl).z1j = function (_this__u8e3s4, scalar) {
    return this.e29(_this__u8e3s4, isInterface(scalar, Scalar) ? scalar : THROW_CCE());
  };
  protoOf(FreeGAlgebraContextImpl).f29 = function (_this__u8e3s4, other) {
    return this.t2a_1.a1k(_this__u8e3s4, other);
  };
  protoOf(FreeGAlgebraContextImpl).a1k = function (_this__u8e3s4, other) {
    return this.f29(_this__u8e3s4, other);
  };
  protoOf(FreeGAlgebraContextImpl).g29 = function (_this__u8e3s4, gVector) {
    return this.t2a_1.b1k(_this__u8e3s4, gVector);
  };
  protoOf(FreeGAlgebraContextImpl).b1k = function (_this__u8e3s4, gVector) {
    return this.g29(_this__u8e3s4, gVector);
  };
  protoOf(FreeGAlgebraContextImpl).h29 = function (_this__u8e3s4, gVector) {
    return this.t2a_1.c1k(_this__u8e3s4, gVector);
  };
  protoOf(FreeGAlgebraContextImpl).c1k = function (_this__u8e3s4, gVector) {
    return this.h29(_this__u8e3s4, gVector);
  };
  protoOf(FreeGAlgebraContextImpl).i29 = function (_this__u8e3s4) {
    return this.t2a_1.l1k(_this__u8e3s4);
  };
  protoOf(FreeGAlgebraContextImpl).l1k = function (_this__u8e3s4) {
    return this.i29(_this__u8e3s4);
  };
  protoOf(FreeGAlgebraContextImpl).d1k = function (_this__u8e3s4) {
    return this.t2a_1.d1k(_this__u8e3s4);
  };
  protoOf(FreeGAlgebraContextImpl).e1k = function (_this__u8e3s4) {
    return this.t2a_1.e1k(_this__u8e3s4);
  };
  protoOf(FreeGAlgebraContextImpl).f1k = function (_this__u8e3s4) {
    return this.t2a_1.f1k(_this__u8e3s4);
  };
  protoOf(FreeGAlgebraContextImpl).j29 = function (_this__u8e3s4) {
    return this.t2a_1.g1k(_this__u8e3s4);
  };
  protoOf(FreeGAlgebraContextImpl).g1k = function (_this__u8e3s4) {
    return this.j29(_this__u8e3s4);
  };
  protoOf(FreeGAlgebraContextImpl).k29 = function (_this__u8e3s4) {
    return this.t2a_1.h1k(_this__u8e3s4);
  };
  protoOf(FreeGAlgebraContextImpl).h1k = function (_this__u8e3s4) {
    return this.k29(_this__u8e3s4);
  };
  function convertNameToTex($this, name) {
    // Inline function 'kotlin.text.count' call
    var count = 0;
    var inductionVariable = 0;
    var last = name.length;
    while (inductionVariable < last) {
      var element = charSequenceGet(name, inductionVariable);
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'com.github.shwaka.kohomology.free.Companion.convertNameToTex.<anonymous>' call
      if (element === _Char___init__impl__6a9atx(95)) {
        count = count + 1 | 0;
      }
    }
    var underscoreCount = count;
    if (underscoreCount <= 1) {
      return name;
    }
    return replace(replace(replaceFirst(name, '_', '{'), '_', ','), '{', '_{') + '}';
  }
  function Companion_43() {
    Companion_instance_43 = this;
  }
  var Companion_instance_43;
  function Companion_getInstance_44() {
    if (Companion_instance_43 == null)
      new Companion_43();
    return Companion_instance_43;
  }
  function GeneratorOfFreeDGA(name, degree, differentialValue) {
    Companion_getInstance_44();
    this.u26_1 = name;
    this.v26_1 = degree;
    this.w26_1 = differentialValue;
  }
  protoOf(GeneratorOfFreeDGA).h27 = function () {
    return Indeterminate_1(this.u26_1, convertNameToTex(Companion_getInstance_44(), this.u26_1), this.v26_1);
  };
  protoOf(GeneratorOfFreeDGA).toString = function () {
    return 'GeneratorOfFreeDGA(name=' + this.u26_1 + ', degree=' + this.v26_1 + ', differentialValue=' + this.w26_1 + ')';
  };
  protoOf(GeneratorOfFreeDGA).hashCode = function () {
    var result = getStringHashCode(this.u26_1);
    result = imul(result, 31) + hashCode(this.v26_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.w26_1) | 0;
    return result;
  };
  protoOf(GeneratorOfFreeDGA).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof GeneratorOfFreeDGA))
      return false;
    var tmp0_other_with_cast = other instanceof GeneratorOfFreeDGA ? other : THROW_CCE();
    if (!(this.u26_1 === tmp0_other_with_cast.u26_1))
      return false;
    if (!equals(this.v26_1, tmp0_other_with_cast.v26_1))
      return false;
    if (!(this.w26_1 === tmp0_other_with_cast.w26_1))
      return false;
    return true;
  };
  function jsonToGeneratorList(json) {
    var serializableGeneratorList = Default_getInstance().t17(ListSerializer(GeneratorSerializer_getInstance()), json);
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(serializableGeneratorList, 10));
    var tmp0_iterator = serializableGeneratorList.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.jsonToGeneratorList.<anonymous>' call
      tmp$ret$0 = item.x2a();
      tmp0_mapTo.a(tmp$ret$0);
    }
    return tmp0_mapTo;
  }
  function generatorListToJson(generatorList) {
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(generatorList, 10));
    var tmp0_iterator = generatorList.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.generatorListToJson.<anonymous>' call
      tmp$ret$0 = Companion_getInstance_45().y2a(item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    var serializableGeneratorList = tmp0_mapTo;
    return Default_getInstance().s17(ListSerializer(GeneratorSerializer_getInstance()), serializableGeneratorList);
  }
  function Companion_44() {
    Companion_instance_44 = this;
  }
  protoOf(Companion_44).y2a = function (generatorOfFreeDGA) {
    return new SerializableGenerator(generatorOfFreeDGA.u26_1, generatorOfFreeDGA.v26_1.c20_1, generatorOfFreeDGA.w26_1);
  };
  protoOf(Companion_44).z2a = function () {
    return $serializer_getInstance();
  };
  var Companion_instance_44;
  function Companion_getInstance_45() {
    if (Companion_instance_44 == null)
      new Companion_44();
    return Companion_instance_44;
  }
  function $serializer() {
    $serializer_instance = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.github.shwaka.kohomology.free.SerializableGenerator', this, 3);
    tmp0_serialDesc.l10('name', false);
    tmp0_serialDesc.l10('degree', false);
    tmp0_serialDesc.l10('differentialValue', false);
    this.a2b_1 = tmp0_serialDesc;
  }
  protoOf($serializer).as = function () {
    return this.a2b_1;
  };
  protoOf($serializer).n10 = function () {
    // Inline function 'kotlin.arrayOf' call
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    return [StringSerializer_getInstance(), IntSerializer_getInstance(), StringSerializer_getInstance()];
  };
  protoOf($serializer).cs = function (decoder) {
    var tmp0_desc = this.a2b_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = 0;
    var tmp6_local2 = null;
    var tmp7_input = decoder.du(tmp0_desc);
    if (tmp7_input.ru()) {
      tmp4_local0 = tmp7_input.nu(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp7_input.iu(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp7_input.nu(tmp0_desc, 2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp7_input.su(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp7_input.nu(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp7_input.iu(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp7_input.nu(tmp0_desc, 2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp7_input.eu(tmp0_desc);
    return SerializableGenerator_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
  };
  protoOf($serializer).b2b = function (encoder, value) {
    var tmp0_desc = this.a2b_1;
    var tmp1_output = encoder.du(tmp0_desc);
    tmp1_output.pv(tmp0_desc, 0, value.u2a_1);
    tmp1_output.kv(tmp0_desc, 1, value.v2a_1);
    tmp1_output.pv(tmp0_desc, 2, value.w2a_1);
    tmp1_output.eu(tmp0_desc);
  };
  protoOf($serializer).bs = function (encoder, value) {
    return this.b2b(encoder, value instanceof SerializableGenerator ? value : THROW_CCE());
  };
  var $serializer_instance;
  function $serializer_getInstance() {
    if ($serializer_instance == null)
      new $serializer();
    return $serializer_instance;
  }
  function SerializableGenerator_init_$Init$(seen1, name, degree, differentialValue, serializationConstructorMarker, $this) {
    if (!(7 === (7 & seen1))) {
      throwMissingFieldException(seen1, 7, $serializer_getInstance().a2b_1);
    }
    $this.u2a_1 = name;
    $this.v2a_1 = degree;
    $this.w2a_1 = differentialValue;
    return $this;
  }
  function SerializableGenerator_init_$Create$(seen1, name, degree, differentialValue, serializationConstructorMarker) {
    return SerializableGenerator_init_$Init$(seen1, name, degree, differentialValue, serializationConstructorMarker, objectCreate(protoOf(SerializableGenerator)));
  }
  function SerializableGenerator(name, degree, differentialValue) {
    Companion_getInstance_45();
    this.u2a_1 = name;
    this.v2a_1 = degree;
    this.w2a_1 = differentialValue;
  }
  protoOf(SerializableGenerator).x2a = function () {
    return new GeneratorOfFreeDGA(this.u2a_1, new IntDegree(this.v2a_1), this.w2a_1);
  };
  protoOf(SerializableGenerator).toString = function () {
    return 'SerializableGenerator(name=' + this.u2a_1 + ', degree=' + this.v2a_1 + ', differentialValue=' + this.w2a_1 + ')';
  };
  protoOf(SerializableGenerator).hashCode = function () {
    var result = getStringHashCode(this.u2a_1);
    result = imul(result, 31) + this.v2a_1 | 0;
    result = imul(result, 31) + getStringHashCode(this.w2a_1) | 0;
    return result;
  };
  protoOf(SerializableGenerator).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SerializableGenerator))
      return false;
    var tmp0_other_with_cast = other instanceof SerializableGenerator ? other : THROW_CCE();
    if (!(this.u2a_1 === tmp0_other_with_cast.u2a_1))
      return false;
    if (!(this.v2a_1 === tmp0_other_with_cast.v2a_1))
      return false;
    if (!(this.w2a_1 === tmp0_other_with_cast.w2a_1))
      return false;
    return true;
  };
  function GeneratorSerializer() {
    GeneratorSerializer_instance = this;
    JsonTransformingSerializer.call(this, Companion_getInstance_45().z2a());
  }
  protoOf(GeneratorSerializer).j1a = function (element) {
    var tmp;
    if (element instanceof JsonArray) {
      tmp = new JsonObject(mapOf([to('name', element.l(0)), to('degree', element.l(1)), to('differentialValue', element.l(2))]));
    } else {
      tmp = element;
    }
    return tmp;
  };
  protoOf(GeneratorSerializer).i1a = function (element) {
    var tmp;
    var tmp_0;
    var tmp_1;
    var tmp_2;
    if (element instanceof JsonObject) {
      tmp_2 = element.j19('name');
    } else {
      tmp_2 = false;
    }
    if (tmp_2) {
      tmp_1 = element.j19('degree');
    } else {
      tmp_1 = false;
    }
    if (tmp_1) {
      tmp_0 = element.j19('differentialValue');
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      var tmp0_elvis_lhs = element.k19('name');
      var tmp_3;
      if (tmp0_elvis_lhs == null) {
        throw Exception_init_$Create$("This can't happen!");
      } else {
        tmp_3 = tmp0_elvis_lhs;
      }
      var name = tmp_3;
      var tmp1_elvis_lhs = element.k19('degree');
      var tmp_4;
      if (tmp1_elvis_lhs == null) {
        throw Exception_init_$Create$("This can't happen!");
      } else {
        tmp_4 = tmp1_elvis_lhs;
      }
      var degree = tmp_4;
      var tmp2_elvis_lhs = element.k19('differentialValue');
      var tmp_5;
      if (tmp2_elvis_lhs == null) {
        throw Exception_init_$Create$("This can't happen!");
      } else {
        tmp_5 = tmp2_elvis_lhs;
      }
      var differentialValue = tmp_5;
      tmp = new JsonArray(listOf_0([name, degree, differentialValue]));
    } else {
      tmp = element;
    }
    return tmp;
  };
  var GeneratorSerializer_instance;
  function GeneratorSerializer_getInstance() {
    if (GeneratorSerializer_instance == null)
      new GeneratorSerializer();
    return GeneratorSerializer_instance;
  }
  function getInitial_0($this, targetDGAlgebra) {
    var tmp = Companion_getInstance_39();
    var tmp_0 = targetDGAlgebra.y1g();
    var tmp_1 = emptyList();
    var freeDGAlgebra = tmp.m22(tmp_0, tmp_1, VOID, HomologicalMinimalModel$Companion$getInitial$lambda);
    var dgAlgebraMap = freeDGAlgebra.n22(targetDGAlgebra, emptyList());
    return new HomologicalMinimalModel(targetDGAlgebra, freeDGAlgebra, dgAlgebraMap, 1);
  }
  function HomologicalMinimalModel$Companion$getInitial$lambda($this$fromMap, _anonymous_parameter_0__qggqh8) {
    return emptyMap();
  }
  function Companion_45() {
    Companion_instance_45 = this;
  }
  protoOf(Companion_45).o22 = function (targetDGAlgebra, isomorphismUpTo, reportProgress) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(targetDGAlgebra.i1h().b1g_1 === 0)) {
      // Inline function 'com.github.shwaka.kohomology.free.Companion.of.<anonymous>' call
      var message = 'targetDGAlgebra must be bounded above by 0';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(targetDGAlgebra.l(0).p22() === 1)) {
      // Inline function 'com.github.shwaka.kohomology.free.Companion.of.<anonymous>' call
      var message_0 = 'targetDGAlgebra[0].dim must be 1 (i.e. contains only the unit)';
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
    var minimalModel = getInitial_0(this, targetDGAlgebra);
    reportProgress(minimalModel.q22(isomorphismUpTo));
    while (minimalModel.g2b_1 > isomorphismUpTo) {
      minimalModel = minimalModel.v22();
      reportProgress(minimalModel.q22(isomorphismUpTo));
    }
    return minimalModel;
  };
  var Companion_instance_45;
  function Companion_getInstance_46() {
    if (Companion_instance_45 == null)
      new Companion_45();
    return Companion_instance_45;
  }
  function HomologicalMinimalModel(targetDGAlgebra, freeDGAlgebra, dgAlgebraMap, isomorphismUpTo) {
    Companion_getInstance_46();
    this.d2b_1 = targetDGAlgebra;
    this.e2b_1 = freeDGAlgebra;
    this.f2b_1 = dgAlgebraMap;
    this.g2b_1 = isomorphismUpTo;
  }
  protoOf(HomologicalMinimalModel).w22 = function () {
    return this.d2b_1;
  };
  protoOf(HomologicalMinimalModel).x22 = function () {
    return this.e2b_1;
  };
  protoOf(HomologicalMinimalModel).y22 = function () {
    return this.f2b_1;
  };
  protoOf(HomologicalMinimalModel).z22 = function () {
    return this.g2b_1;
  };
  protoOf(HomologicalMinimalModel).v22 = function () {
    var calculator = new HomologicalNextMMCalculator(this);
    return calculator.k23();
  };
  protoOf(HomologicalMinimalModel).toString = function () {
    return 'HomologicalMinimalModel(targetDGAlgebra=' + this.d2b_1 + ', freeDGAlgebra=' + this.e2b_1 + ', dgAlgebraMap=' + this.f2b_1 + ', isomorphismUpTo=' + this.g2b_1 + ')';
  };
  protoOf(HomologicalMinimalModel).hashCode = function () {
    var result = hashCode(this.d2b_1);
    result = imul(result, 31) + hashCode(this.e2b_1) | 0;
    result = imul(result, 31) + hashCode(this.f2b_1) | 0;
    result = imul(result, 31) + this.g2b_1 | 0;
    return result;
  };
  protoOf(HomologicalMinimalModel).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof HomologicalMinimalModel))
      return false;
    var tmp0_other_with_cast = other instanceof HomologicalMinimalModel ? other : THROW_CCE();
    if (!equals(this.d2b_1, tmp0_other_with_cast.d2b_1))
      return false;
    if (!equals(this.e2b_1, tmp0_other_with_cast.e2b_1))
      return false;
    if (!equals(this.f2b_1, tmp0_other_with_cast.f2b_1))
      return false;
    if (!(this.g2b_1 === tmp0_other_with_cast.g2b_1))
      return false;
    return true;
  };
  function HomologicalNextMMCalculator(minimalModel) {
    NextMMCalculator.call(this, minimalModel);
  }
  protoOf(HomologicalNextMMCalculator).v23 = function () {
    return this.a23_1.z22() - 1 | 0;
  };
  protoOf(HomologicalNextMMCalculator).w23 = function () {
    return this.a23_1.z22() - 2 | 0;
  };
  protoOf(HomologicalNextMMCalculator).x23 = function (targetDGAlgebra, freeDGAlgebra, dgAlgebraMap, isomorphismUpTo) {
    return new HomologicalMinimalModel(targetDGAlgebra, freeDGAlgebra, dgAlgebraMap, isomorphismUpTo);
  };
  protoOf(HomologicalNextMMCalculator).y23 = function (targetDGAlgebra, freeDGAlgebra, dgAlgebraMap, isomorphismUpTo) {
    return this.x23(targetDGAlgebra, freeDGAlgebra, dgAlgebraMap, isomorphismUpTo);
  };
  function MMIndeterminateName(degree, index, totalNumberInDegree, type) {
    this.r2b_1 = degree;
    this.s2b_1 = index;
    this.t2b_1 = totalNumberInDegree;
    this.u2b_1 = type;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(this.s2b_1 >= 0)) {
      // Inline function 'com.github.shwaka.kohomology.free.MMIndeterminateName.<anonymous>' call
      var message = 'index must be non-negative, but ' + this.s2b_1 + ' was given';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(this.s2b_1 < this.t2b_1)) {
      // Inline function 'com.github.shwaka.kohomology.free.MMIndeterminateName.<anonymous>' call
      var message_0 = 'index must be less than totalNumberInDegree, ' + ('but the given values were ' + this.s2b_1 + ' and ' + this.t2b_1);
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
  }
  protoOf(MMIndeterminateName).h1z = function () {
    var printConfig = PrintConfig_init_$Create$(PrintType_PLAIN_getInstance());
    return new Identifier_0(this.s1i(printConfig));
  };
  protoOf(MMIndeterminateName).s1i = function (printConfig) {
    var tmp;
    switch (this.u2b_1.m1_1) {
      case 0:
        tmp = 'v';
        break;
      case 1:
        tmp = 'w';
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    var char = tmp;
    var tmp_0;
    if (this.t2b_1 === 1) {
      var tmp_1;
      switch (printConfig.g1u_1.m1_1) {
        case 0:
        case 2:
          tmp_1 = char + '_' + this.r2b_1;
          break;
        case 1:
          tmp_1 = char + '_{' + this.r2b_1 + '}';
          break;
        default:
          noWhenBranchMatchedException();
          break;
      }
      tmp_0 = tmp_1;
    } else {
      var tmp_2;
      switch (printConfig.g1u_1.m1_1) {
        case 0:
        case 2:
          tmp_2 = char + '_' + this.r2b_1 + '_' + this.s2b_1;
          break;
        case 1:
          tmp_2 = char + '_{' + this.r2b_1 + ',' + this.s2b_1 + '}';
          break;
        default:
          noWhenBranchMatchedException();
          break;
      }
      tmp_0 = tmp_2;
    }
    return tmp_0;
  };
  protoOf(MMIndeterminateName).toString = function () {
    return this.s1i(Companion_getInstance_70().f1m_1);
  };
  protoOf(MMIndeterminateName).hashCode = function () {
    var result = this.r2b_1;
    result = imul(result, 31) + this.s2b_1 | 0;
    result = imul(result, 31) + this.t2b_1 | 0;
    result = imul(result, 31) + this.u2b_1.hashCode() | 0;
    return result;
  };
  protoOf(MMIndeterminateName).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MMIndeterminateName))
      return false;
    var tmp0_other_with_cast = other instanceof MMIndeterminateName ? other : THROW_CCE();
    if (!(this.r2b_1 === tmp0_other_with_cast.r2b_1))
      return false;
    if (!(this.s2b_1 === tmp0_other_with_cast.s2b_1))
      return false;
    if (!(this.t2b_1 === tmp0_other_with_cast.t2b_1))
      return false;
    if (!this.u2b_1.equals(tmp0_other_with_cast.u2b_1))
      return false;
    return true;
  };
  var MMIndeterminateType_COCYCLE_instance;
  var MMIndeterminateType_COCHAIN_instance;
  var MMIndeterminateType_entriesInitialized;
  function MMIndeterminateType_initEntries() {
    if (MMIndeterminateType_entriesInitialized)
      return Unit_getInstance();
    MMIndeterminateType_entriesInitialized = true;
    MMIndeterminateType_COCYCLE_instance = new MMIndeterminateType('COCYCLE', 0);
    MMIndeterminateType_COCHAIN_instance = new MMIndeterminateType('COCHAIN', 1);
  }
  function MMIndeterminateType(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function MMIndeterminateType_COCYCLE_getInstance() {
    MMIndeterminateType_initEntries();
    return MMIndeterminateType_COCYCLE_instance;
  }
  function MMIndeterminateType_COCHAIN_getInstance() {
    MMIndeterminateType_initEntries();
    return MMIndeterminateType_COCHAIN_instance;
  }
  function Companion_46() {
    Companion_instance_46 = this;
  }
  protoOf(Companion_46).o22 = function (targetDGAlgebra, isomorphismUpTo, reportProgress) {
    if (!(targetDGAlgebra.i1h().c1g_1 == null) ? targetDGAlgebra.i1h().c1g_1 === 0 : false) {
      return Companion_getInstance_36().o22(targetDGAlgebra, isomorphismUpTo, reportProgress);
    }
    if (!(targetDGAlgebra.i1h().b1g_1 == null) ? targetDGAlgebra.i1h().b1g_1 === 0 : false) {
      return Companion_getInstance_46().o22(targetDGAlgebra, isomorphismUpTo, reportProgress);
    }
    throw IllegalArgumentException_init_$Create$('Cannot compute minimal model of ' + targetDGAlgebra + ' ' + 'since it is not concentrated in non-positive or non-negative degrees');
  };
  var Companion_instance_46;
  function Companion_getInstance_47() {
    if (Companion_instance_46 == null)
      new Companion_46();
    return Companion_instance_46;
  }
  function MinimalModel() {
  }
  function MinimalModelProgress(currentIsomorphismUpTo, targetIsomorphismUpTo, currentNumberOfGenerators) {
    this.v2b_1 = currentIsomorphismUpTo;
    this.w2b_1 = targetIsomorphismUpTo;
    this.x2b_1 = currentNumberOfGenerators;
  }
  protoOf(MinimalModelProgress).toString = function () {
    return 'MinimalModelProgress(currentIsomorphismUpTo=' + this.v2b_1 + ', targetIsomorphismUpTo=' + this.w2b_1 + ', currentNumberOfGenerators=' + this.x2b_1 + ')';
  };
  protoOf(MinimalModelProgress).hashCode = function () {
    var result = this.v2b_1;
    result = imul(result, 31) + this.w2b_1 | 0;
    result = imul(result, 31) + this.x2b_1 | 0;
    return result;
  };
  protoOf(MinimalModelProgress).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MinimalModelProgress))
      return false;
    var tmp0_other_with_cast = other instanceof MinimalModelProgress ? other : THROW_CCE();
    if (!(this.v2b_1 === tmp0_other_with_cast.v2b_1))
      return false;
    if (!(this.w2b_1 === tmp0_other_with_cast.w2b_1))
      return false;
    if (!(this.x2b_1 === tmp0_other_with_cast.x2b_1))
      return false;
    return true;
  };
  function Companion_47() {
    Companion_instance_47 = this;
  }
  protoOf(Companion_47).m2a = function (matrixSpace, degreeGroup, monoid, name, getInternalPrintConfig) {
    return MonoidGAlgebraImpl_init_$Create$(matrixSpace, degreeGroup, monoid, name, getInternalPrintConfig);
  };
  var Companion_instance_47;
  function Companion_getInstance_48() {
    if (Companion_instance_47 == null)
      new Companion_47();
    return Companion_instance_47;
  }
  function MonoidGAlgebraImpl_init_$Init$(matrixSpace, degreeGroup, monoid, name, getInternalPrintConfig, $this) {
    var tmp;
    if (getInternalPrintConfig === VOID) {
      tmp = InternalPrintConfig$Companion$default$ref_3(Companion_getInstance_71());
    } else {
      tmp = getInternalPrintConfig;
    }
    getInternalPrintConfig = tmp;
    MonoidGAlgebraImpl.call($this, new MonoidGAlgebraFactory(matrixSpace, degreeGroup, monoid, name, getInternalPrintConfig));
    return $this;
  }
  function MonoidGAlgebraImpl_init_$Create$(matrixSpace, degreeGroup, monoid, name, getInternalPrintConfig) {
    return MonoidGAlgebraImpl_init_$Init$(matrixSpace, degreeGroup, monoid, name, getInternalPrintConfig, objectCreate(protoOf(MonoidGAlgebraImpl)));
  }
  function InternalPrintConfig$Companion$default$ref_3($boundThis) {
    var l = function (p0) {
      return $boundThis.x1r(p0);
    };
    l.callableName = 'default';
    return l;
  }
  function MonoidGAlgebraImpl(factory) {
    this.y2b_1 = factory.n2c_1;
    this.z2b_1 = factory.h2c_1;
    this.a2c_1 = factory.o2c_1;
    this.b2c_1 = factory.p2c_1;
    this.c2c_1 = factory.j2c_1.b1i();
    this.d2c_1 = factory.j2c_1;
    this.e2c_1 = Companion_getInstance_16().l1q(this);
    this.f2c_1 = factory.n2c_1;
    this.g2c_1 = this;
  }
  protoOf(MonoidGAlgebraImpl).i1h = function () {
    return this.y2b_1.i1h();
  };
  protoOf(MonoidGAlgebraImpl).c1h = function () {
    return this.y2b_1.c1h();
  };
  protoOf(MonoidGAlgebraImpl).j1h = function () {
    return this.y2b_1.j1h();
  };
  protoOf(MonoidGAlgebraImpl).e1h = function () {
    return this.y2b_1.e1h();
  };
  protoOf(MonoidGAlgebraImpl).f1h = function () {
    return this.y2b_1.f1h();
  };
  protoOf(MonoidGAlgebraImpl).d1h = function () {
    return this.y2b_1.d1h();
  };
  protoOf(MonoidGAlgebraImpl).b1h = function () {
    return this.y2b_1.b1h();
  };
  protoOf(MonoidGAlgebraImpl).z1h = function () {
    return this.y2b_1.z1h();
  };
  protoOf(MonoidGAlgebraImpl).q2c = function (a, b) {
    return this.y2b_1.t1h(a, b);
  };
  protoOf(MonoidGAlgebraImpl).t1h = function (a, b) {
    return this.q2c(a, b);
  };
  protoOf(MonoidGAlgebraImpl).r2c = function (gVector) {
    return this.y2b_1.r1h(gVector);
  };
  protoOf(MonoidGAlgebraImpl).r1h = function (gVector) {
    return this.r2c(gVector);
  };
  protoOf(MonoidGAlgebraImpl).s2c = function (gVector) {
    return this.y2b_1.s1h(gVector);
  };
  protoOf(MonoidGAlgebraImpl).s1h = function (gVector) {
    return this.s2c(gVector);
  };
  protoOf(MonoidGAlgebraImpl).t2c = function (gVectorOrZero, degree) {
    return this.y2b_1.q1h(gVectorOrZero, degree);
  };
  protoOf(MonoidGAlgebraImpl).q1h = function (gVectorOrZero, degree) {
    return this.t2c(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(MonoidGAlgebraImpl).u2c = function (a, b) {
    return this.y2b_1.y1h(a, b);
  };
  protoOf(MonoidGAlgebraImpl).y1h = function (a, b) {
    return this.u2c(a, b);
  };
  protoOf(MonoidGAlgebraImpl).v2c = function (basisName, degree) {
    return this.y2b_1.m1h(basisName, degree);
  };
  protoOf(MonoidGAlgebraImpl).m1h = function (basisName, degree) {
    var tmp = isInterface(basisName, GMonoidElement) ? basisName : THROW_CCE();
    return this.v2c(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(MonoidGAlgebraImpl).w2c = function (vector, degree) {
    return this.y2b_1.k1h(vector, degree);
  };
  protoOf(MonoidGAlgebraImpl).k1h = function (vector, degree) {
    return this.w2c(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(MonoidGAlgebraImpl).x2c = function (vector, degree) {
    return this.y2b_1.l1h(vector, degree);
  };
  protoOf(MonoidGAlgebraImpl).l1h = function (vector, degree) {
    return this.x2c(vector, degree);
  };
  protoOf(MonoidGAlgebraImpl).g1h = function (degree) {
    return this.y2b_1.g1h(degree);
  };
  protoOf(MonoidGAlgebraImpl).l = function (degree) {
    return this.y2b_1.l(degree);
  };
  protoOf(MonoidGAlgebraImpl).n1h = function (degree) {
    return this.y2b_1.n1h(degree);
  };
  protoOf(MonoidGAlgebraImpl).o1h = function (degree) {
    return this.y2b_1.o1h(degree);
  };
  protoOf(MonoidGAlgebraImpl).p1h = function (degree) {
    return this.y2b_1.p1h(degree);
  };
  protoOf(MonoidGAlgebraImpl).y2c = function (scalar, gVector) {
    return this.y2b_1.v1h(scalar, gVector);
  };
  protoOf(MonoidGAlgebraImpl).v1h = function (scalar, gVector) {
    return this.y2c(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  protoOf(MonoidGAlgebraImpl).z2c = function (a, b) {
    return this.y2b_1.u1h(a, b);
  };
  protoOf(MonoidGAlgebraImpl).u1h = function (a, b) {
    return this.z2c(a, b);
  };
  protoOf(MonoidGAlgebraImpl).toString = function () {
    return this.y2b_1.toString();
  };
  protoOf(MonoidGAlgebraImpl).s1i = function (printConfig) {
    return this.y2b_1.s1i(printConfig);
  };
  protoOf(MonoidGAlgebraImpl).y1g = function () {
    return this.z2b_1;
  };
  protoOf(MonoidGAlgebraImpl).n1g = function () {
    return this.a2c_1;
  };
  protoOf(MonoidGAlgebraImpl).a1i = function () {
    return this.b2c_1;
  };
  protoOf(MonoidGAlgebraImpl).b1i = function () {
    return this.c2c_1;
  };
  protoOf(MonoidGAlgebraImpl).d28 = function () {
    return this.d2c_1;
  };
  protoOf(MonoidGAlgebraImpl).g1g = function () {
    return this.e2c_1;
  };
  protoOf(MonoidGAlgebraImpl).h1h = function () {
    return this.f2c_1;
  };
  function getBasisNames($this, degree) {
    return $this.j2c_1.a2d(degree);
  }
  function getVectorSpace($this, degree) {
    // Inline function 'kotlin.collections.getOrPut' call
    var tmp0_getOrPut = $this.m2c_1;
    var value = tmp0_getOrPut.u2(degree);
    var tmp;
    if (value == null) {
      // Inline function 'com.github.shwaka.kohomology.free.MonoidGAlgebraFactory.getVectorSpace.<anonymous>' call
      var answer = Companion_getInstance_85().b2d($this.h2c_1.b1h(), getBasisNames($this, degree));
      tmp0_getOrPut.z3(degree, answer);
      tmp = answer;
    } else {
      tmp = value;
    }
    return tmp;
  }
  function getVectorSpace_0($this, degree) {
    return getVectorSpace($this, $this.i2c_1.bi(degree));
  }
  function getMultiplication($this, p, q) {
    var source1 = getVectorSpace($this, p);
    var source2 = getVectorSpace($this, q);
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.free.MonoidGAlgebraFactory.getMultiplication.<anonymous>' call
    tmp$ret$1 = $this.i2c_1.g1g().i1g(p, q);
    var target = getVectorSpace($this, tmp$ret$1);
    return ValueBilinearMap_init_$Create$(source1, source2, target, $this.h2c_1, generateGetValue_0($this, target));
  }
  function generateGetValue_0($this, target) {
    return MonoidGAlgebraFactory$generateGetValue$lambda($this, target);
  }
  function listDegreesForAugmentedDegree_0($this, augmentedDegree) {
    return $this.j2c_1.c2d(augmentedDegree);
  }
  function MonoidGAlgebraFactory$listDegreesForAugmentedDegree$ref($boundThis) {
    var l = function (p0) {
      return listDegreesForAugmentedDegree_0($boundThis, p0);
    };
    l.callableName = 'listDegreesForAugmentedDegree';
    return l;
  }
  function MonoidGAlgebraFactory$getVectorSpace$ref($boundThis) {
    var l = function (p0) {
      return getVectorSpace($boundThis, p0);
    };
    l.callableName = 'getVectorSpace';
    return l;
  }
  function MonoidGAlgebraFactory$multiplication$lambda(this$0) {
    return function (p, q) {
      return getMultiplication(this$0, p, q);
    };
  }
  function MonoidGAlgebraFactory$generateGetValue$lambda(this$0, $target) {
    return function (monoidElement1, monoidElement2) {
      var tmp$ret$3;
      // Inline function 'kotlin.let' call
      var tmp0_let = this$0.j2c_1.d2d(monoidElement1, monoidElement2);
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$2;
      // Inline function 'com.github.shwaka.kohomology.free.MonoidGAlgebraFactory.generateGetValue.<anonymous>.<anonymous>' call
      var tmp0_subject = tmp0_let;
      var tmp;
      if (tmp0_subject instanceof Zero_0) {
        tmp = $target.n1t();
      } else {
        if (tmp0_subject instanceof Signed) {
          var tmp1_container = tmp0_let;
          var monoidElement = tmp1_container.j3();
          var sign = tmp1_container.k3();
          var vectorWithoutSign = $target.l1t(monoidElement);
          var tmp2_subject = sign;
          var tmp0 = tmp2_subject.m1_1;
          var tmp_0;
          switch (tmp0) {
            case 0:
              tmp_0 = vectorWithoutSign;
              break;
            case 1:
              var tmp$ret$1;
              // Inline function 'kotlin.run' call
              var tmp0_run = $target.g1g();
              // Inline function 'kotlin.contracts.contract' call
              var tmp$ret$0;
              // Inline function 'com.github.shwaka.kohomology.free.MonoidGAlgebraFactory.generateGetValue.<anonymous>.<anonymous>.<anonymous>' call
              tmp$ret$0 = tmp0_run.g2d(vectorWithoutSign);
              tmp$ret$1 = tmp$ret$0;

              tmp_0 = tmp$ret$1;
              break;
            default:
              noWhenBranchMatchedException();
              break;
          }
          tmp = tmp_0;
        } else {
          noWhenBranchMatchedException();
        }
      }
      tmp$ret$2 = tmp;
      tmp$ret$3 = tmp$ret$2;
      return tmp$ret$3;
    };
  }
  function MonoidGAlgebraFactory(matrixSpace, degreeGroup, monoid, name, getInternalPrintConfig) {
    this.h2c_1 = matrixSpace;
    this.i2c_1 = degreeGroup;
    this.j2c_1 = monoid;
    this.k2c_1 = name;
    this.l2c_1 = getInternalPrintConfig;
    var tmp = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp.m2c_1 = LinkedHashMap_init_$Create$();
    var tmp_0 = this;
    var tmp_1 = Companion_getInstance_24();
    var tmp_2 = this.h2c_1.b1h();
    var tmp_3 = MonoidGAlgebraFactory$listDegreesForAugmentedDegree$ref(this);
    var tmp_4 = this.j2c_1.i1h();
    tmp_0.n2c_1 = tmp_1.z1r(tmp_2, this.i2c_1, this.k2c_1, this.l2c_1, tmp_3, tmp_4, MonoidGAlgebraFactory$getVectorSpace$ref(this));
    var tmp_5 = this;
    var tmp_6 = 'Multiplication(' + this.k2c_1 + ')';
    tmp_5.o2c_1 = GBilinearMap_init_$Create$(this.h2c_1, this.n2c_1, this.n2c_1, this.n2c_1, 0, tmp_6, MonoidGAlgebraFactory$multiplication$lambda(this));
    this.p2c_1 = this.n2c_1.l1h(getVectorSpace_0(this, 0).l1t(this.j2c_1.a1i()), 0);
  }
  function NextMMCalculator(minimalModel) {
    AbstractNextMMCalculator.call(this, minimalModel);
  }
  protoOf(NextMMCalculator).j24 = function (degree, index, totalNumberInDegree, type) {
    return new MMIndeterminateName(degree, index, totalNumberInDegree, type);
  };
  protoOf(NextMMCalculator).k24 = function (indeterminate) {
    return indeterminate;
  };
  protoOf(NextMMCalculator).h2d = function (indeterminate) {
    return this.k24(indeterminate);
  };
  function _get_cocyclesToHit__t6r0oe($this) {
    // Inline function 'kotlin.getValue' call
    cocyclesToHit$factory();
    return $this.c23_1.w();
  }
  function _get_cocyclesToKill__imudo9($this) {
    // Inline function 'kotlin.getValue' call
    cocyclesToKill$factory();
    return $this.d23_1.w();
  }
  function _get_nextIndeterminateList__u3rl4l($this) {
    // Inline function 'kotlin.getValue' call
    nextIndeterminateList$factory();
    return $this.e23_1.w();
  }
  function _get_nextFreeGAlgebra__9tj7cb($this) {
    // Inline function 'kotlin.getValue' call
    nextFreeGAlgebra$factory();
    return $this.f23_1.w();
  }
  function _get_inclusionToNext__jhd24n($this) {
    // Inline function 'kotlin.getValue' call
    inclusionToNext$factory();
    return $this.g23_1.w();
  }
  function _get_nextDifferential__sjy3r1($this) {
    // Inline function 'kotlin.getValue' call
    nextDifferential$factory();
    return $this.h23_1.w();
  }
  function _get_nextFreeDGAlgebra__za5qmj($this) {
    // Inline function 'kotlin.getValue' call
    nextFreeDGAlgebra$factory();
    return $this.i23_1.w();
  }
  function _get_nextDGAlgebraMap__94gpcv($this) {
    // Inline function 'kotlin.getValue' call
    nextDGAlgebraMap$factory();
    return $this.j23_1.w();
  }
  function AbstractNextMMCalculator$nextMinimalModel$delegate$lambda(this$0) {
    return function () {
      return this$0.y23(this$0.a23_1.w22(), _get_nextFreeDGAlgebra__za5qmj(this$0), _get_nextDGAlgebraMap__94gpcv(this$0), this$0.v23());
    };
  }
  function AbstractNextMMCalculator$cocyclesToHit$delegate$lambda(this$0) {
    return function () {
      var degree = this$0.w23();
      var targetDGAlgebra = this$0.a23_1.w22();
      var inducedMapOnCohomology = this$0.a23_1.y22().v1k();
      var cokernel = inducedMapOnCohomology.w1k();
      var section = cokernel.l1o();
      var tmp$ret$5;
      // Inline function 'kotlin.collections.map' call
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = cokernel.c1m(degree);
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var tmp0_iterator = tmp0_map.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.free.AbstractNextMMCalculator.cocyclesToHit$delegate.<anonymous>.<anonymous>' call
        tmp$ret$0 = section.s1g(item);
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      var tmp1_map = tmp$ret$2;
      var tmp$ret$4;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
      var tmp0_iterator_0 = tmp1_map.f();
      while (tmp0_iterator_0.g()) {
        var item_0 = tmp0_iterator_0.h();
        var tmp$ret$3;
        // Inline function 'com.github.shwaka.kohomology.free.AbstractNextMMCalculator.cocyclesToHit$delegate.<anonymous>.<anonymous>' call
        tmp$ret$3 = targetDGAlgebra.a1h(item_0);
        tmp0_mapTo_0.a(tmp$ret$3);
      }
      tmp$ret$4 = tmp0_mapTo_0;
      tmp$ret$5 = tmp$ret$4;
      return tmp$ret$5;
    };
  }
  function AbstractNextMMCalculator$cocyclesToKill$delegate$lambda(this$0) {
    return function () {
      var degree = this$0.w23();
      var inducedMapOnCohomology = this$0.a23_1.y22().v1k();
      var kernel = inducedMapOnCohomology.c1l();
      var incl = kernel.s1l();
      var tmp$ret$5;
      // Inline function 'kotlin.collections.map' call
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = kernel.c1m(degree + 1 | 0);
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var tmp0_iterator = tmp0_map.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.free.AbstractNextMMCalculator.cocyclesToKill$delegate.<anonymous>.<anonymous>' call
        tmp$ret$0 = incl.s1g(item);
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      var tmp1_map = tmp$ret$2;
      var tmp$ret$4;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
      var tmp0_iterator_0 = tmp1_map.f();
      while (tmp0_iterator_0.g()) {
        var item_0 = tmp0_iterator_0.h();
        var tmp$ret$3;
        // Inline function 'com.github.shwaka.kohomology.free.AbstractNextMMCalculator.cocyclesToKill$delegate.<anonymous>.<anonymous>' call
        tmp$ret$3 = this$0.a23_1.x22().a1h(item_0);
        tmp0_mapTo_0.a(tmp$ret$3);
      }
      tmp$ret$4 = tmp0_mapTo_0;
      tmp$ret$5 = tmp$ret$4;
      return tmp$ret$5;
    };
  }
  function AbstractNextMMCalculator$nextIndeterminateList$delegate$lambda(this$0) {
    return function () {
      var degree = this$0.w23();
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = this$0.a23_1.x22().h26();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var tmp0_iterator = tmp0_map.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        tmp$ret$0 = this$0.h2d(item);
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      var tmp = tmp$ret$2;
      var tmp$ret$5;
      // Inline function 'kotlin.collections.map' call
      var tmp1_map = until(0, _get_cocyclesToHit__t6r0oe(this$0).i());
      var tmp$ret$4;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
      var inductionVariable = tmp1_map.z_1;
      var last = tmp1_map.a1_1;
      if (inductionVariable <= last)
        do {
          var item_0 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp$ret$3;
          // Inline function 'com.github.shwaka.kohomology.free.AbstractNextMMCalculator.nextIndeterminateList$delegate.<anonymous>.<anonymous>' call
          var name = this$0.j24(degree, item_0, _get_cocyclesToHit__t6r0oe(this$0).i(), MMIndeterminateType_COCYCLE_getInstance());
          tmp$ret$3 = Indeterminate_2(name, degree);
          tmp0_mapTo_0.a(tmp$ret$3);
        }
         while (!(item_0 === last));
      tmp$ret$4 = tmp0_mapTo_0;
      tmp$ret$5 = tmp$ret$4;
      var tmp_0 = plus(tmp, tmp$ret$5);
      var tmp$ret$8;
      // Inline function 'kotlin.collections.map' call
      var tmp2_map = until(0, _get_cocyclesToKill__imudo9(this$0).i());
      var tmp$ret$7;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_1 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp2_map, 10));
      var inductionVariable_0 = tmp2_map.z_1;
      var last_0 = tmp2_map.a1_1;
      if (inductionVariable_0 <= last_0)
        do {
          var item_1 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          var tmp$ret$6;
          // Inline function 'com.github.shwaka.kohomology.free.AbstractNextMMCalculator.nextIndeterminateList$delegate.<anonymous>.<anonymous>' call
          var name_0 = this$0.j24(degree, item_1, _get_cocyclesToKill__imudo9(this$0).i(), MMIndeterminateType_COCHAIN_getInstance());
          tmp$ret$6 = Indeterminate_2(name_0, degree);
          tmp0_mapTo_1.a(tmp$ret$6);
        }
         while (!(item_1 === last_0));
      tmp$ret$7 = tmp0_mapTo_1;
      tmp$ret$8 = tmp$ret$7;
      return plus(tmp_0, tmp$ret$8);
    };
  }
  function AbstractNextMMCalculator$nextFreeGAlgebra$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_41().z29(this$0.a23_1.x22().y1g(), _get_nextIndeterminateList__u3rl4l(this$0));
    };
  }
  function AbstractNextMMCalculator$inclusionToNext$delegate$lambda(this$0) {
    return function () {
      var valueList = slice(_get_nextFreeGAlgebra__9tj7cb(this$0).r1l(), get_indices_0(this$0.a23_1.x22().r1l()));
      return this$0.a23_1.x22().l27(_get_nextFreeGAlgebra__9tj7cb(this$0), valueList);
    };
  }
  function AbstractNextMMCalculator$nextDifferential$delegate$lambda(this$0) {
    return function () {
      var degree = this$0.w23() + 1 | 0;
      var incl = _get_inclusionToNext__jhd24n(this$0);
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = this$0.a23_1.x22().r1l();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var tmp0_iterator = tmp0_map.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.free.AbstractNextMMCalculator.nextDifferential$delegate.<anonymous>.<anonymous>' call
        tmp$ret$0 = incl.s1g(this$0.a23_1.x22().o1g().s1g(item));
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      var tmp = tmp$ret$2;
      var tmp$ret$5;
      // Inline function 'kotlin.collections.List' call
      var tmp1_List = _get_cocyclesToHit__t6r0oe(this$0).i();
      var tmp$ret$4;
      // Inline function 'kotlin.collections.MutableList' call
      var list = ArrayList_init_$Create$(tmp1_List);
      // Inline function 'kotlin.repeat' call
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      if (inductionVariable < tmp1_List)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'kotlin.collections.MutableList.<anonymous>' call
          var tmp$ret$3;
          // Inline function 'com.github.shwaka.kohomology.free.AbstractNextMMCalculator.nextDifferential$delegate.<anonymous>.<anonymous>' call
          tmp$ret$3 = _get_nextFreeGAlgebra__9tj7cb(this$0).p1h(degree);
          list.a(tmp$ret$3);
        }
         while (inductionVariable < tmp1_List);
      tmp$ret$4 = list;
      tmp$ret$5 = tmp$ret$4;
      var tmp_0 = plus(tmp, tmp$ret$5);
      var tmp$ret$8;
      // Inline function 'kotlin.collections.map' call
      var tmp2_map = _get_cocyclesToKill__imudo9(this$0);
      var tmp$ret$7;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp2_map, 10));
      var tmp0_iterator_0 = tmp2_map.f();
      while (tmp0_iterator_0.g()) {
        var item_0 = tmp0_iterator_0.h();
        var tmp$ret$6;
        // Inline function 'com.github.shwaka.kohomology.free.AbstractNextMMCalculator.nextDifferential$delegate.<anonymous>.<anonymous>' call
        tmp$ret$6 = incl.s1g(item_0);
        tmp0_mapTo_0.a(tmp$ret$6);
      }
      tmp$ret$7 = tmp0_mapTo_0;
      tmp$ret$8 = tmp$ret$7;
      var differentialValueList = plus(tmp_0, tmp$ret$8);
      return _get_nextFreeGAlgebra__9tj7cb(this$0).b27(differentialValueList, 1);
    };
  }
  function AbstractNextMMCalculator$nextFreeDGAlgebra$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_39().y26(_get_nextFreeGAlgebra__9tj7cb(this$0), _get_nextDifferential__sjy3r1(this$0));
    };
  }
  function AbstractNextMMCalculator$nextDGAlgebraMap$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = this$0.a23_1.x22().r1l();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var tmp0_iterator = tmp0_map.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.free.AbstractNextMMCalculator.nextDGAlgebraMap$delegate.<anonymous>.<anonymous>' call
        tmp$ret$0 = this$0.a23_1.y22().s1g(item);
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      var tmp = plus(tmp$ret$2, _get_cocyclesToHit__t6r0oe(this$0));
      var tmp$ret$5;
      // Inline function 'kotlin.collections.map' call
      var tmp1_map = _get_cocyclesToKill__imudo9(this$0);
      var tmp$ret$4;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
      var tmp0_iterator_0 = tmp1_map.f();
      while (tmp0_iterator_0.g()) {
        var item_0 = tmp0_iterator_0.h();
        var tmp$ret$3;
        // Inline function 'com.github.shwaka.kohomology.free.AbstractNextMMCalculator.nextDGAlgebraMap$delegate.<anonymous>.<anonymous>' call
        var targetCoboundary = this$0.a23_1.y22().s1g(item_0);
        var tmp0_elvis_lhs = this$0.a23_1.w22().o1g().x1k(targetCoboundary);
        var tmp_0;
        if (tmp0_elvis_lhs == null) {
          throw IllegalStateException_init_$Create$("This can't happen! Failed to find preimage of d.");
        } else {
          tmp_0 = tmp0_elvis_lhs;
        }
        var boundingTargetCochain = tmp_0;
        tmp$ret$3 = boundingTargetCochain;
        tmp0_mapTo_0.a(tmp$ret$3);
      }
      tmp$ret$4 = tmp0_mapTo_0;
      tmp$ret$5 = tmp$ret$4;
      var dgAlgebraMapValueList = plus(tmp, tmp$ret$5);
      return _get_nextFreeDGAlgebra__za5qmj(this$0).n22(this$0.a23_1.w22(), dgAlgebraMapValueList);
    };
  }
  function AbstractNextMMCalculator(minimalModel) {
    this.a23_1 = minimalModel;
    var tmp = this;
    tmp.b23_1 = lazy(AbstractNextMMCalculator$nextMinimalModel$delegate$lambda(this));
    var tmp_0 = this;
    tmp_0.c23_1 = lazy(AbstractNextMMCalculator$cocyclesToHit$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.d23_1 = lazy(AbstractNextMMCalculator$cocyclesToKill$delegate$lambda(this));
    var tmp_2 = this;
    tmp_2.e23_1 = lazy(AbstractNextMMCalculator$nextIndeterminateList$delegate$lambda(this));
    var tmp_3 = this;
    tmp_3.f23_1 = lazy(AbstractNextMMCalculator$nextFreeGAlgebra$delegate$lambda(this));
    var tmp_4 = this;
    tmp_4.g23_1 = lazy(AbstractNextMMCalculator$inclusionToNext$delegate$lambda(this));
    var tmp_5 = this;
    tmp_5.h23_1 = lazy(AbstractNextMMCalculator$nextDifferential$delegate$lambda(this));
    var tmp_6 = this;
    tmp_6.i23_1 = lazy(AbstractNextMMCalculator$nextFreeDGAlgebra$delegate$lambda(this));
    var tmp_7 = this;
    tmp_7.j23_1 = lazy(AbstractNextMMCalculator$nextDGAlgebraMap$delegate$lambda(this));
  }
  protoOf(AbstractNextMMCalculator).k23 = function () {
    // Inline function 'kotlin.getValue' call
    nextMinimalModel$factory();
    return this.b23_1.w();
  };
  function nextMinimalModel$factory() {
    return getPropertyCallableRef('nextMinimalModel', 1, KProperty1, function (receiver) {
      return receiver.k23();
    }, null);
  }
  function cocyclesToHit$factory() {
    return getPropertyCallableRef('cocyclesToHit', 1, KProperty1, function (receiver) {
      return _get_cocyclesToHit__t6r0oe(receiver);
    }, null);
  }
  function cocyclesToKill$factory() {
    return getPropertyCallableRef('cocyclesToKill', 1, KProperty1, function (receiver) {
      return _get_cocyclesToKill__imudo9(receiver);
    }, null);
  }
  function nextIndeterminateList$factory() {
    return getPropertyCallableRef('nextIndeterminateList', 1, KProperty1, function (receiver) {
      return _get_nextIndeterminateList__u3rl4l(receiver);
    }, null);
  }
  function nextFreeGAlgebra$factory() {
    return getPropertyCallableRef('nextFreeGAlgebra', 1, KProperty1, function (receiver) {
      return _get_nextFreeGAlgebra__9tj7cb(receiver);
    }, null);
  }
  function inclusionToNext$factory() {
    return getPropertyCallableRef('inclusionToNext', 1, KProperty1, function (receiver) {
      return _get_inclusionToNext__jhd24n(receiver);
    }, null);
  }
  function nextDifferential$factory() {
    return getPropertyCallableRef('nextDifferential', 1, KProperty1, function (receiver) {
      return _get_nextDifferential__sjy3r1(receiver);
    }, null);
  }
  function nextFreeDGAlgebra$factory() {
    return getPropertyCallableRef('nextFreeDGAlgebra', 1, KProperty1, function (receiver) {
      return _get_nextFreeDGAlgebra__za5qmj(receiver);
    }, null);
  }
  function nextDGAlgebraMap$factory() {
    return getPropertyCallableRef('nextDGAlgebraMap', 1, KProperty1, function (receiver) {
      return _get_nextDGAlgebraMap__94gpcv(receiver);
    }, null);
  }
  function Companion_48() {
    Companion_instance_48 = this;
  }
  var Companion_instance_48;
  function Companion_getInstance_49() {
    if (Companion_instance_48 == null)
      new Companion_48();
    return Companion_instance_48;
  }
  function addExponentLists($this, exponentList1, exponentList2) {
    var tmp = 0;
    var tmp_0 = exponentList1.length;
    var tmp_1 = new Int32Array(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      tmp_1[tmp_2] = exponentList1[tmp_2] + exponentList2[tmp_2] | 0;
      tmp = tmp + 1 | 0;
    }
    return tmp_1;
  }
  function _get_monomialListGeneratorAugmented__d6rrne($this) {
    // Inline function 'kotlin.getValue' call
    monomialListGeneratorAugmented$factory();
    return $this.r29_1.w();
  }
  function separate($this, monomial, index) {
    var separatedExponent = monomial.m26_1[index];
    if (separatedExponent === 0)
      return null;
    var tmp = 0;
    var tmp_0 = monomial.m26_1.length;
    var tmp_1 = new Int32Array(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      tmp_1[tmp_2] = tmp_2 === index ? 0 : monomial.m26_1[tmp_2];
      tmp = tmp + 1 | 0;
    }
    var remainingExponentList = tmp_1;
    var remainingMonomial = new Monomial($this.l29_1, $this.m29_1, remainingExponentList);
    var separatedIndeterminate = $this.m29_1.l(index);
    var tmp_3 = 0;
    var tmp_4 = monomial.m26_1.length;
    var tmp_5 = new Int32Array(tmp_4);
    while (tmp_3 < tmp_4) {
      var tmp_6 = tmp_3;
      tmp_5[tmp_6] = tmp_6 === index ? monomial.m26_1[tmp_6] : 0;
      tmp_3 = tmp_3 + 1 | 0;
    }
    var separatedExponentList = tmp_5;
    var multipliedMonomialOrZero = $this.n2d(new Monomial($this.l29_1, $this.m29_1, separatedExponentList), remainingMonomial);
    var tmp_7;
    if (multipliedMonomialOrZero instanceof Signed) {
      tmp_7 = multipliedMonomialOrZero.f2d_1;
    } else {
      if (multipliedMonomialOrZero instanceof Zero_0) {
        throw Exception_init_$Create$("This can't happen!");
      } else {
        noWhenBranchMatchedException();
      }
    }
    var sign = tmp_7;
    return new MonomialSeparation(remainingMonomial, separatedIndeterminate, separatedExponent, sign, index);
  }
  function FreeGMonoid$indeterminateList$delegate$lambda(this$0) {
    return function () {
      return this$0.m29_1.o2d();
    };
  }
  function FreeGMonoid$boundedness$delegate$lambda(this$0) {
    return function () {
      var tmp;
      if (this$0.m29_1.q2d()) {
        tmp = this$0.m29_1.p2d();
      } else {
        tmp = null;
      }
      var bound = tmp;
      var tmp0_subject = this$0.m29_1;
      var tmp_0;
      if (tmp0_subject instanceof PositiveIndeterminateList) {
        tmp_0 = new Boundedness(bound, 0);
      } else {
        if (tmp0_subject instanceof NegativeIndeterminateList) {
          tmp_0 = new Boundedness(0, bound);
        } else {
          noWhenBranchMatchedException();
        }
      }
      return tmp_0;
    };
  }
  function FreeGMonoid$monomialListGeneratorAugmented$delegate$lambda(this$0) {
    return function () {
      return new MonomialListGeneratorAugmented(this$0.l29_1, this$0.m29_1);
    };
  }
  function FreeGMonoid(degreeGroup, indeterminateList) {
    Companion_getInstance_49();
    this.l29_1 = degreeGroup;
    this.m29_1 = Companion_getInstance_50().r2d(this.l29_1, indeterminateList);
    var tmp = this;
    tmp.n29_1 = lazy(FreeGMonoid$indeterminateList$delegate$lambda(this));
    this.o29_1 = Companion_getInstance_51().s2d(this.l29_1, this.m29_1);
    this.p29_1 = true;
    var tmp_0 = this;
    tmp_0.q29_1 = lazy(FreeGMonoid$boundedness$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.r29_1 = lazy(FreeGMonoid$monomialListGeneratorAugmented$delegate$lambda(this));
  }
  protoOf(FreeGMonoid).h26 = function () {
    // Inline function 'kotlin.getValue' call
    indeterminateList$factory();
    return this.n29_1.w();
  };
  protoOf(FreeGMonoid).a1i = function () {
    return this.o29_1;
  };
  protoOf(FreeGMonoid).b1i = function () {
    return this.p29_1;
  };
  protoOf(FreeGMonoid).i1h = function () {
    // Inline function 'kotlin.getValue' call
    boundedness$factory();
    return this.q29_1.w();
  };
  protoOf(FreeGMonoid).t2d = function (exponentList) {
    return new Monomial(this.l29_1, this.m29_1, exponentList);
  };
  protoOf(FreeGMonoid).n2d = function (monoidElement1, monoidElement2) {
    var size = this.m29_1.i();
    var exponentList = addExponentLists(this, monoidElement1.m26_1, monoidElement2.m26_1);
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (this.m29_1.l(i).p26_1.k1z() ? exponentList[i] >= 2 : false)
          return Zero_getInstance_0();
      }
       while (inductionVariable < size);
    var sign = Sign_PLUS_getInstance();
    var inductionVariable_0 = 0;
    if (inductionVariable_0 < size)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        if (this.m29_1.l(i_0).p26_1.k1z() ? monoidElement1.m26_1[i_0] === 1 : false) {
          var inductionVariable_1 = 0;
          if (inductionVariable_1 < i_0)
            do {
              var j = inductionVariable_1;
              inductionVariable_1 = inductionVariable_1 + 1 | 0;
              if (this.m29_1.l(j).p26_1.k1z() ? monoidElement2.m26_1[j] === 1 : false) {
                sign = sign.t4();
              }
            }
             while (inductionVariable_1 < i_0);
        }
      }
       while (inductionVariable_0 < size);
    var monomial = new Monomial(this.l29_1, this.m29_1, exponentList);
    return new Signed(monomial, sign);
  };
  protoOf(FreeGMonoid).d2d = function (monoidElement1, monoidElement2) {
    var tmp = monoidElement1 instanceof Monomial ? monoidElement1 : THROW_CCE();
    return this.n2d(tmp, monoidElement2 instanceof Monomial ? monoidElement2 : THROW_CCE());
  };
  protoOf(FreeGMonoid).a2d = function (degree) {
    return _get_monomialListGeneratorAugmented__d6rrne(this).a2e(degree);
  };
  protoOf(FreeGMonoid).c2d = function (augmentedDegree) {
    return _get_monomialListGeneratorAugmented__d6rrne(this).c2d(augmentedDegree);
  };
  protoOf(FreeGMonoid).s29 = function (monomial) {
    // Inline function 'kotlin.collections.mapNotNull' call
    var tmp0_mapNotNull = this.m29_1.k2d_1;
    // Inline function 'kotlin.collections.mapNotNullTo' call
    var tmp0_mapNotNullTo = ArrayList_init_$Create$_0();
    // Inline function 'kotlin.collections.forEach' call
    var inductionVariable = tmp0_mapNotNull.z_1;
    var last = tmp0_mapNotNull.a1_1;
    if (inductionVariable <= last)
      do {
        var element = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.collections.mapNotNullTo.<anonymous>' call
        // Inline function 'com.github.shwaka.kohomology.free.monoid.FreeGMonoid.allSeparations.<anonymous>' call
        var tmp0_safe_receiver = separate(this, monomial, element);
        if (tmp0_safe_receiver == null)
          null;
        else {
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          tmp0_mapNotNullTo.a(tmp0_safe_receiver);
        }
      }
       while (!(element === last));
    return tmp0_mapNotNullTo;
  };
  protoOf(FreeGMonoid).toString = function () {
    var indeterminateListString = this.m29_1.b2e(', ');
    return 'FreeGMonoid(' + indeterminateListString + ')';
  };
  function MonomialSeparation(remainingMonomial, separatedIndeterminate, separatedExponent, sign, index) {
    this.t29_1 = remainingMonomial;
    this.u29_1 = separatedIndeterminate;
    this.v29_1 = separatedExponent;
    this.w29_1 = sign;
    this.x29_1 = index;
    if (this.v29_1 <= 0)
      throw Exception_init_$Create$('separatedExponent must be positive');
  }
  protoOf(MonomialSeparation).toString = function () {
    return 'MonomialSeparation(remainingMonomial=' + this.t29_1 + ', separatedIndeterminate=' + this.u29_1 + ', separatedExponent=' + this.v29_1 + ', sign=' + this.w29_1 + ', index=' + this.x29_1 + ')';
  };
  protoOf(MonomialSeparation).hashCode = function () {
    var result = this.t29_1.hashCode();
    result = imul(result, 31) + this.u29_1.hashCode() | 0;
    result = imul(result, 31) + this.v29_1 | 0;
    result = imul(result, 31) + this.w29_1.hashCode() | 0;
    result = imul(result, 31) + this.x29_1 | 0;
    return result;
  };
  protoOf(MonomialSeparation).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MonomialSeparation))
      return false;
    var tmp0_other_with_cast = other instanceof MonomialSeparation ? other : THROW_CCE();
    if (!this.t29_1.equals(tmp0_other_with_cast.t29_1))
      return false;
    if (!this.u29_1.equals(tmp0_other_with_cast.u29_1))
      return false;
    if (!(this.v29_1 === tmp0_other_with_cast.v29_1))
      return false;
    if (!this.w29_1.equals(tmp0_other_with_cast.w29_1))
      return false;
    if (!(this.x29_1 === tmp0_other_with_cast.x29_1))
      return false;
    return true;
  };
  function FreeGMonoidMorphismByDegreeChange(source, degreeMorphism) {
    this.a2a_1 = source;
    this.b2a_1 = degreeMorphism;
    var tmp = this;
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.free.monoid.FreeGMonoidMorphismByDegreeChange.target.<anonymous>' call
    var targetDegreeGroup = this.b2a_1.t1k();
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = this.a2a_1.h26();
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.monoid.FreeGMonoidMorphismByDegreeChange.target.<anonymous>.<anonymous>' call
      tmp$ret$0 = item.g2a(this.b2a_1);
      tmp0_mapTo.a(tmp$ret$0);
    }
    var targetIndeterminateList = tmp0_mapTo;
    tmp.c2a_1 = new FreeGMonoid(targetDegreeGroup, targetIndeterminateList);
  }
  protoOf(FreeGMonoidMorphismByDegreeChange).d2a = function (monoidElement) {
    return this.c2a_1.t2d(monoidElement.m26_1);
  };
  function indeterminateList$factory() {
    return getPropertyCallableRef('indeterminateList', 1, KProperty1, function (receiver) {
      return receiver.h26();
    }, null);
  }
  function boundedness$factory() {
    return getPropertyCallableRef('boundedness', 1, KProperty1, function (receiver) {
      return receiver.i1h();
    }, null);
  }
  function monomialListGeneratorAugmented$factory() {
    return getPropertyCallableRef('monomialListGeneratorAugmented', 1, KProperty1, function (receiver) {
      return _get_monomialListGeneratorAugmented__d6rrne(receiver);
    }, null);
  }
  function GMonoidElement() {
  }
  function GMonoid() {
  }
  function SignedOrZero() {
  }
  function Zero_0() {
    Zero_instance_0 = this;
    SignedOrZero.call(this);
  }
  var Zero_instance_0;
  function Zero_getInstance_0() {
    if (Zero_instance_0 == null)
      new Zero_0();
    return Zero_instance_0;
  }
  function Signed(value, sign) {
    SignedOrZero.call(this);
    this.e2d_1 = value;
    this.f2d_1 = sign;
  }
  protoOf(Signed).j3 = function () {
    return this.e2d_1;
  };
  protoOf(Signed).k3 = function () {
    return this.f2d_1;
  };
  protoOf(Signed).toString = function () {
    return 'Signed(value=' + this.e2d_1 + ', sign=' + this.f2d_1 + ')';
  };
  protoOf(Signed).hashCode = function () {
    var result = this.e2d_1 == null ? 0 : hashCode(this.e2d_1);
    result = imul(result, 31) + this.f2d_1.hashCode() | 0;
    return result;
  };
  protoOf(Signed).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Signed))
      return false;
    var tmp0_other_with_cast = other instanceof Signed ? other : THROW_CCE();
    if (!equals(this.e2d_1, tmp0_other_with_cast.e2d_1))
      return false;
    if (!this.f2d_1.equals(tmp0_other_with_cast.f2d_1))
      return false;
    return true;
  };
  function StringIndeterminateName(name, tex) {
    tex = tex === VOID ? null : tex;
    this.c2e_1 = new Identifier_0(name);
    this.d2e_1 = this.c2e_1.p27_1;
    var tmp = this;
    tmp.e2e_1 = tex == null ? name : tex;
  }
  protoOf(StringIndeterminateName).h1z = function () {
    return this.c2e_1;
  };
  protoOf(StringIndeterminateName).toString = function () {
    return this.d2e_1;
  };
  protoOf(StringIndeterminateName).s1i = function (printConfig) {
    var tmp;
    switch (printConfig.g1u_1.m1_1) {
      case 0:
      case 2:
        tmp = this.d2e_1;
        break;
      case 1:
        tmp = this.e2e_1;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  protoOf(StringIndeterminateName).equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (!(other instanceof StringIndeterminateName))
      THROW_CCE();
    if (!(this.d2e_1 === other.d2e_1))
      return false;
    if (!(this.e2e_1 === other.e2e_1))
      return false;
    return true;
  };
  protoOf(StringIndeterminateName).hashCode = function () {
    var result = getStringHashCode(this.d2e_1);
    result = imul(31, result) + getStringHashCode(this.e2e_1) | 0;
    return result;
  };
  function IndeterminateName() {
  }
  function Indeterminate(name, degree) {
    this.o26_1 = name;
    this.p26_1 = degree;
  }
  protoOf(Indeterminate).toString = function () {
    return toString(this.o26_1);
  };
  protoOf(Indeterminate).s1i = function (printConfig) {
    return this.o26_1.s1i(printConfig);
  };
  protoOf(Indeterminate).g2a = function (degreeMorphism) {
    return new Indeterminate(this.o26_1, degreeMorphism.x1s(this.p26_1));
  };
  protoOf(Indeterminate).hashCode = function () {
    var result = hashCode(this.o26_1);
    result = imul(result, 31) + hashCode(this.p26_1) | 0;
    return result;
  };
  protoOf(Indeterminate).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Indeterminate))
      return false;
    var tmp0_other_with_cast = other instanceof Indeterminate ? other : THROW_CCE();
    if (!equals(this.o26_1, tmp0_other_with_cast.o26_1))
      return false;
    if (!equals(this.p26_1, tmp0_other_with_cast.p26_1))
      return false;
    return true;
  };
  function Indeterminate_0(name, degree) {
    return new Indeterminate(new StringIndeterminateName(name), degree);
  }
  function Indeterminate_1(name, tex, degree) {
    return new Indeterminate(new StringIndeterminateName(name, tex), degree);
  }
  function Indeterminate_2(name, degree) {
    return new Indeterminate(name, new IntDegree(degree));
  }
  function Companion_49() {
    Companion_instance_49 = this;
  }
  protoOf(Companion_49).r2d = function (degreeGroup, indeterminateList) {
    // Inline function 'kotlin.run' call
    var tmp0_run = degreeGroup.g1g();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.free.monoid.Companion.from.<anonymous>' call
    var tmp;
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.any' call
      var tmp_0;
      if (isInterface(indeterminateList, Collection)) {
        tmp_0 = indeterminateList.p();
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp0_iterator = indeterminateList.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        // Inline function 'com.github.shwaka.kohomology.free.monoid.Companion.from.<anonymous>.<anonymous>' call
        if (tmp0_run.s1z(element.p26_1) === 0) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    if (tmp$ret$0) {
      // Inline function 'kotlin.collections.filter' call
      // Inline function 'kotlin.collections.filterTo' call
      var tmp0_filterTo = ArrayList_init_$Create$_0();
      var tmp0_iterator_0 = indeterminateList.f();
      while (tmp0_iterator_0.g()) {
        var element_0 = tmp0_iterator_0.h();
        // Inline function 'com.github.shwaka.kohomology.free.monoid.Companion.from.<anonymous>.<anonymous>' call
        if (tmp0_run.s1z(element_0.p26_1) === 0) {
          tmp0_filterTo.a(element_0);
        }
      }
      var degree0IndeterminateList = tmp0_filterTo;
      throw IllegalArgumentException_init_$Create$('Cannot consider indeterminate of degree zero: ' + joinToString(degree0IndeterminateList, ', '));
    } else {
      var tmp$ret$5;
      $l$block_2: {
        // Inline function 'kotlin.collections.all' call
        var tmp_1;
        if (isInterface(indeterminateList, Collection)) {
          tmp_1 = indeterminateList.p();
        } else {
          tmp_1 = false;
        }
        if (tmp_1) {
          tmp$ret$5 = true;
          break $l$block_2;
        }
        var tmp0_iterator_1 = indeterminateList.f();
        while (tmp0_iterator_1.g()) {
          var element_1 = tmp0_iterator_1.h();
          // Inline function 'com.github.shwaka.kohomology.free.monoid.Companion.from.<anonymous>.<anonymous>' call
          if (!(tmp0_run.s1z(element_1.p26_1) > 0)) {
            tmp$ret$5 = false;
            break $l$block_2;
          }
        }
        tmp$ret$5 = true;
      }
      if (tmp$ret$5) {
        tmp = new PositiveIndeterminateList(degreeGroup, indeterminateList);
      } else {
        var tmp$ret$7;
        $l$block_4: {
          // Inline function 'kotlin.collections.all' call
          var tmp_2;
          if (isInterface(indeterminateList, Collection)) {
            tmp_2 = indeterminateList.p();
          } else {
            tmp_2 = false;
          }
          if (tmp_2) {
            tmp$ret$7 = true;
            break $l$block_4;
          }
          var tmp0_iterator_2 = indeterminateList.f();
          while (tmp0_iterator_2.g()) {
            var element_2 = tmp0_iterator_2.h();
            // Inline function 'com.github.shwaka.kohomology.free.monoid.Companion.from.<anonymous>.<anonymous>' call
            if (!(tmp0_run.s1z(element_2.p26_1) < 0)) {
              tmp$ret$7 = false;
              break $l$block_4;
            }
          }
          tmp$ret$7 = true;
        }
        if (tmp$ret$7) {
          tmp = new NegativeIndeterminateList(degreeGroup, indeterminateList);
        } else {
          // Inline function 'kotlin.collections.filter' call
          // Inline function 'kotlin.collections.filterTo' call
          var tmp0_filterTo_0 = ArrayList_init_$Create$_0();
          var tmp0_iterator_3 = indeterminateList.f();
          while (tmp0_iterator_3.g()) {
            var element_3 = tmp0_iterator_3.h();
            // Inline function 'com.github.shwaka.kohomology.free.monoid.Companion.from.<anonymous>.<anonymous>' call
            if (tmp0_run.s1z(element_3.p26_1) > 0) {
              tmp0_filterTo_0.a(element_3);
            }
          }
          var positiveIndeterminateList = tmp0_filterTo_0;
          // Inline function 'kotlin.collections.filter' call
          // Inline function 'kotlin.collections.filterTo' call
          var tmp0_filterTo_1 = ArrayList_init_$Create$_0();
          var tmp0_iterator_4 = indeterminateList.f();
          while (tmp0_iterator_4.g()) {
            var element_4 = tmp0_iterator_4.h();
            // Inline function 'com.github.shwaka.kohomology.free.monoid.Companion.from.<anonymous>.<anonymous>' call
            if (tmp0_run.s1z(element_4.p26_1) < 0) {
              tmp0_filterTo_1.a(element_4);
            }
          }
          var negativeIndeterminateList = tmp0_filterTo_1;
          throw IllegalArgumentException_init_$Create$('Cannot consider a list of indeterminate containing both positive and negative degrees.\n' + ('  positive: ' + joinToString(positiveIndeterminateList, ', ') + '}\n') + ('  negative: ' + joinToString(negativeIndeterminateList, ', ')));
        }
      }
    }
    return tmp;
  };
  var Companion_instance_49;
  function Companion_getInstance_50() {
    if (Companion_instance_49 == null)
      new Companion_49();
    return Companion_instance_49;
  }
  function IndeterminateList$isOddOnly$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$0;
      $l$block_0: {
        // Inline function 'kotlin.collections.all' call
        var tmp0_all = this$0.j2d_1;
        var tmp;
        if (isInterface(tmp0_all, Collection)) {
          tmp = tmp0_all.p();
        } else {
          tmp = false;
        }
        if (tmp) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
        var tmp0_iterator = tmp0_all.f();
        while (tmp0_iterator.g()) {
          var element = tmp0_iterator.h();
          var tmp$ret$1;
          // Inline function 'com.github.shwaka.kohomology.free.monoid.IndeterminateList.isOddOnly$delegate.<anonymous>.<anonymous>' call
          tmp$ret$1 = isOdd_0(this$0.i2d_1.e1g(element.p26_1));
          if (!tmp$ret$1) {
            tmp$ret$0 = false;
            break $l$block_0;
          }
        }
        tmp$ret$0 = true;
      }
      return tmp$ret$0;
    };
  }
  function IndeterminateList$degreeSumAsInt$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = this$0.j2d_1;
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var tmp0_iterator = tmp0_map.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.free.monoid.IndeterminateList.degreeSumAsInt$delegate.<anonymous>.<anonymous>' call
        tmp$ret$0 = this$0.i2d_1.e1g(item.p26_1);
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      return sum(tmp$ret$2);
    };
  }
  function IndeterminateList(degreeGroup, rawList) {
    Companion_getInstance_50();
    this.i2d_1 = degreeGroup;
    this.j2d_1 = rawList;
    this.k2d_1 = get_indices_0(this.j2d_1);
    var tmp = this;
    tmp.l2d_1 = lazy(IndeterminateList$isOddOnly$delegate$lambda(this));
    var tmp_0 = this;
    tmp_0.m2d_1 = lazy(IndeterminateList$degreeSumAsInt$delegate$lambda(this));
  }
  protoOf(IndeterminateList).o2d = function () {
    return this.j2d_1;
  };
  protoOf(IndeterminateList).i = function () {
    return this.j2d_1.i();
  };
  protoOf(IndeterminateList).f2e = function (list) {
    return zip(this.j2d_1, list);
  };
  protoOf(IndeterminateList).g2e = function (transform) {
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = this.j2d_1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      tmp0_mapTo.a(transform(item));
    }
    return tmp0_mapTo;
  };
  protoOf(IndeterminateList).h2e = function (transform) {
    // Inline function 'kotlin.collections.List' call
    var tmp0_List = this.i();
    // Inline function 'kotlin.collections.MutableList' call
    var list = ArrayList_init_$Create$(tmp0_List);
    // Inline function 'kotlin.repeat' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    if (inductionVariable < tmp0_List)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.collections.MutableList.<anonymous>' call
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.free.monoid.IndeterminateList.mapIndexed.<anonymous>' call
        tmp$ret$0 = transform(index, this.j2d_1.l(index));
        list.a(tmp$ret$0);
      }
       while (inductionVariable < tmp0_List);
    return list;
  };
  protoOf(IndeterminateList).l = function (index) {
    return this.j2d_1.l(index);
  };
  protoOf(IndeterminateList).i2e = function (separator, transform) {
    return joinToString(this.j2d_1, separator, VOID, VOID, VOID, VOID, transform);
  };
  protoOf(IndeterminateList).b2e = function (separator, transform, $super) {
    transform = transform === VOID ? null : transform;
    return $super === VOID ? this.i2e(separator, transform) : $super.i2e.call(this, separator, transform);
  };
  protoOf(IndeterminateList).q2d = function () {
    // Inline function 'kotlin.getValue' call
    isOddOnly$factory();
    return this.l2d_1.w();
  };
  protoOf(IndeterminateList).p2d = function () {
    // Inline function 'kotlin.getValue' call
    degreeSumAsInt$factory();
    return this.m2d_1.w();
  };
  protoOf(IndeterminateList).equals = function (other) {
    if (this === other)
      return true;
    if (other == null)
      return false;
    if (!getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (!(other instanceof IndeterminateList))
      THROW_CCE();
    if (!equals(this.j2d_1, other.j2d_1))
      return false;
    return true;
  };
  protoOf(IndeterminateList).hashCode = function () {
    return hashCode(this.j2d_1);
  };
  function PositiveIndeterminateList(degreeGroup, rawList) {
    IndeterminateList.call(this, degreeGroup, rawList);
    // Inline function 'kotlin.run' call
    var tmp0_run = this.i2d_1.g1g();
    // Inline function 'kotlin.contracts.contract' call
    var tmp0_iterator = rawList.f();
    while (tmp0_iterator.g()) {
      var indeterminate = tmp0_iterator.h();
      if (tmp0_run.s1z(indeterminate.p26_1) <= 0)
        throw IllegalArgumentException_init_$Create$('The degree of an indeterminate in PositiveIndeterminateList must be positive');
    }
  }
  protoOf(PositiveIndeterminateList).j2e = function (degree) {
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.free.monoid.PositiveIndeterminateList.isAllowedDegree.<anonymous>' call
    return this.i2d_1.g1g().s1z(degree) >= 0;
  };
  function NegativeIndeterminateList(degreeGroup, rawList) {
    IndeterminateList.call(this, degreeGroup, rawList);
    // Inline function 'kotlin.run' call
    var tmp0_run = this.i2d_1.g1g();
    // Inline function 'kotlin.contracts.contract' call
    var tmp0_iterator = rawList.f();
    while (tmp0_iterator.g()) {
      var indeterminate = tmp0_iterator.h();
      if (tmp0_run.s1z(indeterminate.p26_1) >= 0)
        throw IllegalArgumentException_init_$Create$('The degree of an indeterminate in NegativeIndeterminateList must be negative');
    }
  }
  protoOf(NegativeIndeterminateList).j2e = function (degree) {
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.free.monoid.NegativeIndeterminateList.isAllowedDegree.<anonymous>' call
    return this.i2d_1.g1g().s1z(degree) <= 0;
  };
  function isOddOnly$factory() {
    return getPropertyCallableRef('isOddOnly', 1, KProperty1, function (receiver) {
      return receiver.q2d();
    }, null);
  }
  function degreeSumAsInt$factory() {
    return getPropertyCallableRef('degreeSumAsInt', 1, KProperty1, function (receiver) {
      return receiver.p2d();
    }, null);
  }
  function Monomial_init_$Init$(degreeGroup, indeterminateList, exponentList, $this) {
    Monomial.call($this, degreeGroup, Companion_getInstance_50().r2d(degreeGroup, indeterminateList), toIntArray(exponentList));
    return $this;
  }
  function Monomial_init_$Create$(degreeGroup, indeterminateList, exponentList) {
    return Monomial_init_$Init$(degreeGroup, indeterminateList, exponentList, objectCreate(protoOf(Monomial)));
  }
  function Companion_50() {
    Companion_instance_50 = this;
  }
  protoOf(Companion_50).s2d = function (degreeGroup, indeterminateList) {
    var tmp = 0;
    var tmp_0 = indeterminateList.i();
    var tmp_1 = new Int32Array(tmp_0);
    while (tmp < tmp_0) {
      tmp_1[tmp] = 0;
      tmp = tmp + 1 | 0;
    }
    return new Monomial(degreeGroup, indeterminateList, tmp_1);
  };
  protoOf(Companion_50).e2a = function (degreeGroup, indeterminateList, indeterminate) {
    var index = indeterminateList.v1(indeterminate);
    if (index === -1)
      throw NoSuchElementException_init_$Create$_0('Indeterminate ' + indeterminate + ' is not contained in the indeterminate list ' + indeterminateList);
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(indeterminateList, 10));
    var tmp0_iterator = indeterminateList.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.monoid.Companion.fromIndeterminate.<anonymous>' call
      tmp$ret$0 = item.equals(indeterminate) ? 1 : 0;
      tmp0_mapTo.a(tmp$ret$0);
    }
    var exponentList = tmp0_mapTo;
    return Monomial_init_$Create$(degreeGroup, indeterminateList, exponentList);
  };
  var Companion_instance_50;
  function Companion_getInstance_51() {
    if (Companion_instance_50 == null)
      new Companion_50();
    return Companion_instance_50;
  }
  function toString_5($this, printType, indeterminateNameToString) {
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.filter' call
    var tmp0_filter = $this.l26_1.f2e(toList_0($this.m26_1));
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo = ArrayList_init_$Create$_0();
    var tmp0_iterator = tmp0_filter.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'com.github.shwaka.kohomology.free.monoid.Monomial.toString.<anonymous>' call
      var exponent = element.k3();
      if (!(exponent === 0)) {
        tmp0_filterTo.a(element);
      }
    }
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_filterTo, 10));
    var tmp0_iterator_0 = tmp0_filterTo.f();
    while (tmp0_iterator_0.g()) {
      var item = tmp0_iterator_0.h();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.free.monoid.Monomial.toString.<anonymous>' call
      var indeterminate = item.j3();
      var exponent_0 = item.k3();
      tmp$ret$3 = new Power_0(indeterminate.o26_1, exponent_0);
      tmp0_mapTo.a(tmp$ret$3);
    }
    var powerList = tmp0_mapTo;
    return monomialToString(powerList, printType, indeterminateNameToString);
  }
  function Monomial$degree$delegate$lambda$lambda($tmp0_run, this$0) {
    return function (i, indeterminate) {
      return $tmp0_run.v1z(indeterminate.p26_1, this$0.m26_1[i]);
    };
  }
  function Monomial$degree$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.k26_1.g1g();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.monoid.Monomial.degree$delegate.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.y1z(this$0.l26_1.h2e(Monomial$degree$delegate$lambda$lambda(tmp0_run, this$0)));
      tmp$ret$1 = tmp$ret$0;
      return tmp$ret$1;
    };
  }
  function Monomial$toString$lambda(it) {
    return toString(it);
  }
  function Monomial$toString$lambda_0($printConfig) {
    return function (it) {
      return it.s1i($printConfig);
    };
  }
  function Monomial(degreeGroup, indeterminateList, exponentList) {
    Companion_getInstance_51();
    this.k26_1 = degreeGroup;
    this.l26_1 = indeterminateList;
    this.m26_1 = exponentList;
    if (!(this.l26_1.i() === this.m26_1.length))
      throw new InvalidSizeException('Invalid size of the exponent list');
    var tmp = this;
    tmp.n26_1 = lazy(Monomial$degree$delegate$lambda(this));
  }
  protoOf(Monomial).u1k = function () {
    // Inline function 'kotlin.getValue' call
    degree$factory();
    return this.n26_1.w();
  };
  protoOf(Monomial).f2a = function (indeterminateIndex) {
    return this.m26_1[indeterminateIndex] > 0;
  };
  protoOf(Monomial).toString = function () {
    var tmp = PrintType_PLAIN_getInstance();
    return toString_5(this, tmp, Monomial$toString$lambda);
  };
  protoOf(Monomial).s1i = function (printConfig) {
    return toString_5(this, printConfig.g1u_1, Monomial$toString$lambda_0(printConfig));
  };
  protoOf(Monomial).equals = function (other) {
    if (this === other)
      return true;
    if (other == null)
      return false;
    if (!getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (!(other instanceof Monomial))
      THROW_CCE();
    if (!this.l26_1.equals(other.l26_1))
      return false;
    if (!contentEquals(this.m26_1, other.m26_1))
      return false;
    return true;
  };
  protoOf(Monomial).hashCode = function () {
    var result = this.l26_1.hashCode();
    result = imul(31, result) + contentHashCode(this.m26_1) | 0;
    return result;
  };
  function degree$factory() {
    return getPropertyCallableRef('degree', 1, KProperty1, function (receiver) {
      return receiver.u1k();
    }, null);
  }
  function listMonomialsForAugmentedDegree($this, augmentedDegree) {
    var elementListWithIntDegree = $this.z2d_1.a2e(new IntDegree(augmentedDegree));
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(elementListWithIntDegree, 10));
    var tmp0_iterator = elementListWithIntDegree.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.monoid.MonomialListGeneratorAugmented.listMonomialsForAugmentedDegree.<anonymous>' call
      tmp$ret$0 = new Monomial($this.x2d_1, $this.y2d_1, item.m26_1);
      tmp0_mapTo.a(tmp$ret$0);
    }
    return tmp0_mapTo;
  }
  function MonomialListGeneratorAugmented$generatorForAugmentedDegree$lambda(this$0) {
    return function (indeterminate) {
      return Indeterminate_2(indeterminate.o26_1, this$0.x2d_1.e1g(indeterminate.p26_1));
    };
  }
  function MonomialListGeneratorAugmented(degreeGroup, indeterminateListInternal) {
    this.x2d_1 = degreeGroup;
    this.y2d_1 = indeterminateListInternal;
    var tmp = this;
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.free.monoid.MonomialListGeneratorAugmented.generatorForAugmentedDegree.<anonymous>' call
    var indeterminateRawList = this.y2d_1.g2e(MonomialListGeneratorAugmented$generatorForAugmentedDegree$lambda(this));
    var indeterminateListWithAugDeg = Companion_getInstance_50().r2d(IntDegreeGroup_getInstance(), indeterminateRawList);
    tmp.z2d_1 = new MonomialListGeneratorBasic(IntDegreeGroup_getInstance(), indeterminateListWithAugDeg);
  }
  protoOf(MonomialListGeneratorAugmented).a2e = function (degree) {
    var augmentedDegree = this.x2d_1.e1g(degree);
    // Inline function 'kotlin.collections.filter' call
    var tmp0_filter = listMonomialsForAugmentedDegree(this, augmentedDegree);
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo = ArrayList_init_$Create$_0();
    var tmp0_iterator = tmp0_filter.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'com.github.shwaka.kohomology.free.monoid.MonomialListGeneratorAugmented.listMonomials.<anonymous>' call
      if (equals(element.u1k(), degree)) {
        tmp0_filterTo.a(element);
      }
    }
    return tmp0_filterTo;
  };
  protoOf(MonomialListGeneratorAugmented).c2d = function (augmentedDegree) {
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = listMonomialsForAugmentedDegree(this, augmentedDegree);
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.monoid.MonomialListGeneratorAugmented.listDegreesForAugmentedDegree.<anonymous>' call
      tmp$ret$0 = item.u1k();
      tmp0_mapTo.a(tmp$ret$0);
    }
    return distinct(tmp0_mapTo);
  };
  function IndeterminateList$isAllowedDegree$ref($boundThis) {
    var l = function (p0) {
      return $boundThis.j2e(p0);
    };
    l.callableName = 'isAllowedDegree';
    return l;
  }
  function MonomialListGeneratorBasic(degreeGroup, indeterminateListInternal) {
    this.u2e_1 = degreeGroup;
    this.v2e_1 = indeterminateListInternal;
    var tmp = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp.w2e_1 = LinkedHashMap_init_$Create$();
    this.x2e_1 = Companion_getInstance_51().s2d(this.u2e_1, this.v2e_1);
    var tmp_0 = this;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = this.h26();
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$1;
      // Inline function 'com.github.shwaka.kohomology.free.monoid.MonomialListGeneratorBasic.calculator.<anonymous>' call
      tmp$ret$1 = item.p26_1;
      tmp0_mapTo.a(tmp$ret$1);
    }
    var tmp_1 = tmp0_mapTo;
    tmp_0.y2e_1 = new PartitionCalculator(this.u2e_1, tmp_1, IndeterminateList$isAllowedDegree$ref(this.v2e_1));
  }
  protoOf(MonomialListGeneratorBasic).h26 = function () {
    return this.v2e_1.o2d();
  };
  protoOf(MonomialListGeneratorBasic).a2e = function (degree) {
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = this.y2e_1.f2f(degree);
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.monoid.MonomialListGeneratorBasic.listMonomials.<anonymous>' call
      tmp$ret$0 = new Monomial(this.u2e_1, this.v2e_1, item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    return tmp0_mapTo;
  };
  function Companion_51() {
    Companion_instance_51 = this;
  }
  var Companion_instance_51;
  function Companion_getInstance_52() {
    if (Companion_instance_51 == null)
      new Companion_51();
    return Companion_instance_51;
  }
  function Power_0(indeterminateName, exponent) {
    Companion_getInstance_52();
    this.g2f_1 = indeterminateName;
    this.h2f_1 = exponent;
  }
  protoOf(Power_0).i2f = function (printType, indeterminateNameToString) {
    var tmp;
    switch (this.h2f_1) {
      case 0:
        throw Exception_init_$Create$("This can't happen!");
      case 1:
        tmp = indeterminateNameToString(this.g2f_1);
        break;
      default:
        var tmp_0;
        switch (printType.m1_1) {
          case 0:
          case 2:
            tmp_0 = this.h2f_1.toString();
            break;
          case 1:
            tmp_0 = '{' + this.h2f_1 + '}';
            break;
          default:
            noWhenBranchMatchedException();
            break;
        }

        var exponentStr = tmp_0;
        tmp = indeterminateNameToString(this.g2f_1) + '^' + exponentStr;
        break;
    }
    return tmp;
  };
  protoOf(Power_0).k3 = function () {
    return this.h2f_1;
  };
  protoOf(Power_0).toString = function () {
    return 'Power(indeterminateName=' + this.g2f_1 + ', exponent=' + this.h2f_1 + ')';
  };
  protoOf(Power_0).hashCode = function () {
    var result = hashCode(this.g2f_1);
    result = imul(result, 31) + this.h2f_1 | 0;
    return result;
  };
  protoOf(Power_0).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Power_0))
      return false;
    var tmp0_other_with_cast = other instanceof Power_0 ? other : THROW_CCE();
    if (!equals(this.g2f_1, tmp0_other_with_cast.g2f_1))
      return false;
    if (!(this.h2f_1 === tmp0_other_with_cast.h2f_1))
      return false;
    return true;
  };
  function monomialToString(powerList, printType, indeterminateNameToString) {
    if (powerList.p())
      return '1';
    var tmp;
    switch (printType.m1_1) {
      case 0:
      case 1:
        tmp = '';
        break;
      case 2:
        tmp = ' * ';
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    var separator = tmp;
    // Inline function 'kotlin.collections.filter' call
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo = ArrayList_init_$Create$_0();
    var tmp0_iterator = powerList.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'com.github.shwaka.kohomology.free.monoid.monomialToString.<anonymous>' call
      var exponent = element.k3();
      if (!(exponent === 0)) {
        tmp0_filterTo.a(element);
      }
    }
    var tmp_0 = tmp0_filterTo;
    return joinToString(tmp_0, separator, VOID, VOID, VOID, VOID, monomialToString$lambda(printType, indeterminateNameToString));
  }
  function monomialToString$lambda($printType, $indeterminateNameToString) {
    return function (power) {
      return power.i2f($printType, $indeterminateNameToString);
    };
  }
  function getListInternal($this, degree, index) {
    if (index < 0 ? true : index > $this.a2f_1.i())
      throw Exception_init_$Create$("This can't happen! (illegal index: " + index + ')');
    if (index === $this.a2f_1.i()) {
      return degree.tj() ? listOf($this.d2f_1) : emptyList();
    }
    var cacheKey = new Pair(degree, index);
    // Inline function 'kotlin.collections.getOrPut' call
    var tmp0_getOrPut = $this.e2f_1;
    var value = tmp0_getOrPut.u2(cacheKey);
    var tmp;
    if (value == null) {
      // Inline function 'com.github.shwaka.kohomology.free.monoid.PartitionCalculator.getListInternal.<anonymous>' call
      // Inline function 'kotlin.run' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'com.github.shwaka.kohomology.free.monoid.PartitionCalculator.getListInternal.<anonymous>.<anonymous>' call
      var newDegree = $this.z2e_1.g1g().l1r(degree, $this.a2f_1.l(index));
      var tmp_0;
      if ($this.b2f_1(newDegree)) {
        // Inline function 'kotlin.collections.mapNotNull' call
        var tmp1_mapNotNull = getListInternal($this, newDegree, index);
        // Inline function 'kotlin.collections.mapNotNullTo' call
        var tmp0_mapNotNullTo = ArrayList_init_$Create$_0();
        // Inline function 'kotlin.collections.forEach' call
        var tmp0_iterator = tmp1_mapNotNull.f();
        while (tmp0_iterator.g()) {
          var element = tmp0_iterator.h();
          // Inline function 'kotlin.collections.mapNotNullTo.<anonymous>' call
          // Inline function 'com.github.shwaka.kohomology.free.monoid.PartitionCalculator.getListInternal.<anonymous>.<anonymous>' call
          var tmp0_safe_receiver = increaseAtIndex(element, $this, index);
          if (tmp0_safe_receiver == null)
            null;
          else {
            // Inline function 'kotlin.let' call
            // Inline function 'kotlin.contracts.contract' call
            tmp0_mapNotNullTo.a(tmp0_safe_receiver);
          }
        }
        tmp_0 = tmp0_mapNotNullTo;
      } else {
        tmp_0 = emptyList();
      }
      var listWithNonZeroAtIndex = tmp_0;
      var listWithZeroAtIndex = getListInternal($this, degree, index + 1 | 0);
      var answer = plus(listWithNonZeroAtIndex, listWithZeroAtIndex);
      tmp0_getOrPut.z3(cacheKey, answer);
      tmp = answer;
    } else {
      tmp = value;
    }
    return tmp;
  }
  function increaseAtIndex(_this__u8e3s4, $this, index) {
    if ((!$this.c2f_1 ? $this.a2f_1.l(index).k1z() : false) ? _this__u8e3s4[index] === 1 : false) {
      return null;
    }
    var tmp = 0;
    var tmp_0 = $this.a2f_1.i();
    var tmp_1 = new Int32Array(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      tmp_1[tmp_2] = tmp_2 === index ? _this__u8e3s4[tmp_2] + 1 | 0 : _this__u8e3s4[tmp_2];
      tmp = tmp + 1 | 0;
    }
    var newArray = tmp_1;
    return newArray;
  }
  function PartitionCalculator(degreeGroup, summandList, isAllowedDegree, allowMultipleOfOdd) {
    allowMultipleOfOdd = allowMultipleOfOdd === VOID ? false : allowMultipleOfOdd;
    this.z2e_1 = degreeGroup;
    this.a2f_1 = summandList;
    this.b2f_1 = isAllowedDegree;
    this.c2f_1 = allowMultipleOfOdd;
    var tmp = this;
    var tmp_0 = 0;
    var tmp_1 = this.a2f_1.i();
    var tmp_2 = new Int32Array(tmp_1);
    while (tmp_0 < tmp_1) {
      tmp_2[tmp_0] = 0;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp.d2f_1 = tmp_2;
    var tmp_3 = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp_3.e2f_1 = LinkedHashMap_init_$Create$();
  }
  protoOf(PartitionCalculator).f2f = function (degree) {
    if (!this.b2f_1(degree)) {
      return emptyList();
    }
    return getListInternal(this, degree, 0);
  };
  function _get_data__d5abxd($this) {
    // Inline function 'kotlin.getValue' call
    data$factory();
    return $this.w2f_1.w();
  }
  function _get_dataList__i79k6b($this) {
    // Inline function 'kotlin.getValue' call
    dataList$factory();
    return $this.x2f_1.w();
  }
  function computeData($this) {
    var dataList = _get_dataList__i79k6b($this);
    var pivots = computePivots($this, dataList);
    var rowMap = computeRowMapForRowEchelonForm($this, dataList, pivots);
    var exchangeCount = 0;
    return new SparseRowEchelonFormData(rowMap, pivots, exchangeCount);
  }
  function computeDataList($this) {
    var tmp = computeBlockList($this);
    return pmap(tmp, DecomposedSparseRowEchelonForm$computeDataList$lambda($this));
  }
  function computeBlockList($this) {
    var originalRowMap = $this.e2g_1.b2g_1;
    var rowIndices = sorted(toList_1(originalRowMap.v2()));
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.sortedBy' call
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(originalRowMap.i());
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = originalRowMap.u().f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.linalg.DecomposedSparseRowEchelonForm.computeBlockList.<anonymous>' call
      // Inline function 'kotlin.collections.component1' call
      var rowInd = item.v();
      // Inline function 'kotlin.collections.component2' call
      var row = item.w();
      tmp$ret$3 = new Pair(rowInd, sorted(toList_1(row.v2())));
      tmp0_mapTo.a(tmp$ret$3);
    }
    var tmp$ret$6;
    // Inline function 'kotlin.comparisons.compareBy' call
    var tmp = DecomposedSparseRowEchelonForm$computeBlockList$lambda;
    tmp$ret$6 = new sam$kotlin_Comparator$0(tmp);
    var tmp1_map = sortedWith(tmp0_mapTo, tmp$ret$6);
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
    var tmp0_iterator_0 = tmp1_map.f();
    while (tmp0_iterator_0.g()) {
      var item_0 = tmp0_iterator_0.h();
      // Inline function 'com.github.shwaka.kohomology.linalg.DecomposedSparseRowEchelonForm.computeBlockList.<anonymous>' call
      var rowKeys = item_0.k3();
      tmp0_mapTo_0.a(rowKeys);
    }
    var rowKeysList = tmp0_mapTo_0;
    var tmp_0 = withIndex(rowKeysList);
    var pairsToBeUnited = flatten(pmap(tmp_0, DecomposedSparseRowEchelonForm$computeBlockList$lambda_0(rowKeysList)));
    var unionFind = new UnionFind(rowKeysList.i());
    var tmp0_iterator_1 = pairsToBeUnited.f();
    while (tmp0_iterator_1.g()) {
      var tmp1_loop_parameter = tmp0_iterator_1.h();
      var i = tmp1_loop_parameter.j3();
      var j = tmp1_loop_parameter.k3();
      unionFind.p2g(i, j);
    }
    // Inline function 'kotlin.collections.map' call
    var tmp2_map = unionFind.q2g();
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_1 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp2_map, 10));
    var tmp0_iterator_2 = tmp2_map.f();
    while (tmp0_iterator_2.g()) {
      var item_1 = tmp0_iterator_2.h();
      var tmp$ret$14;
      // Inline function 'com.github.shwaka.kohomology.linalg.DecomposedSparseRowEchelonForm.computeBlockList.<anonymous>' call
      // Inline function 'kotlin.collections.map' call
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_2 = ArrayList_init_$Create$(collectionSizeOrDefault(item_1, 10));
      var tmp0_iterator_3 = item_1.f();
      while (tmp0_iterator_3.g()) {
        var item_2 = tmp0_iterator_3.h();
        var tmp$ret$11;
        // Inline function 'com.github.shwaka.kohomology.linalg.DecomposedSparseRowEchelonForm.computeBlockList.<anonymous>.<anonymous>' call
        var rowInd_0 = rowIndices.l(item_2);
        var tmp0_elvis_lhs = originalRowMap.u2(rowInd_0);
        var tmp_1;
        if (tmp0_elvis_lhs == null) {
          throw Exception_init_$Create$("This can't happen!");
        } else {
          tmp_1 = tmp0_elvis_lhs;
        }
        var row_0 = tmp_1;
        tmp$ret$11 = new Pair(rowInd_0, row_0);
        tmp0_mapTo_2.a(tmp$ret$11);
      }
      tmp$ret$14 = toMap(tmp0_mapTo_2);
      tmp0_mapTo_1.a(tmp$ret$14);
    }
    return tmp0_mapTo_1;
  }
  function computePivots($this, dataList) {
    var tmp$ret$1;
    // Inline function 'kotlin.collections.fold' call
    var accumulator = emptyList();
    var tmp0_iterator = dataList.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'com.github.shwaka.kohomology.linalg.DecomposedSparseRowEchelonForm.computePivots.<anonymous>' call
      var tmp1_anonymous = accumulator;
      accumulator = plus(tmp1_anonymous, element.s2g_1);
    }
    tmp$ret$1 = accumulator;
    return sorted(tmp$ret$1);
  }
  function computeRowMapForRowEchelonForm($this, dataList, pivots) {
    // Inline function 'kotlin.collections.mutableMapOf' call
    var rowMap = LinkedHashMap_init_$Create$();
    var tmp0_iterator = dataList.f();
    while (tmp0_iterator.g()) {
      var data = tmp0_iterator.h();
      // Inline function 'kotlin.collections.iterator' call
      var tmp1_iterator = data.r2g_1.u().f();
      while (tmp1_iterator.g()) {
        var tmp2_loop_parameter = tmp1_iterator.h();
        // Inline function 'kotlin.collections.component1' call
        var rowIndInBlock = tmp2_loop_parameter.v();
        // Inline function 'kotlin.collections.component2' call
        var row = tmp2_loop_parameter.w();
        var pivot = data.s2g_1.l(rowIndInBlock);
        var rowInd = pivots.v1(pivot);
        if (rowInd === -1)
          throw Exception_init_$Create$("This can't happen!");
        // Inline function 'kotlin.collections.set' call
        rowMap.z3(rowInd, row);
      }
    }
    return rowMap;
  }
  function computeReducedRowMapForRowEchelonForm($this, dataList, pivots) {
    // Inline function 'kotlin.collections.mutableMapOf' call
    var rowMap = LinkedHashMap_init_$Create$();
    var tmp0_iterator = dataList.f();
    while (tmp0_iterator.g()) {
      var data = tmp0_iterator.h();
      var reducedRowMapOfData = $this.v2f_1.u2g(data.r2g_1, data.s2g_1);
      // Inline function 'kotlin.collections.iterator' call
      var tmp1_iterator = reducedRowMapOfData.u().f();
      while (tmp1_iterator.g()) {
        var tmp2_loop_parameter = tmp1_iterator.h();
        // Inline function 'kotlin.collections.component1' call
        var rowIndInBlock = tmp2_loop_parameter.v();
        // Inline function 'kotlin.collections.component2' call
        var row = tmp2_loop_parameter.w();
        var pivot = data.s2g_1.l(rowIndInBlock);
        var rowInd = pivots.v1(pivot);
        if (rowInd === -1)
          throw Exception_init_$Create$("This can't happen!");
        // Inline function 'kotlin.collections.set' call
        rowMap.z3(rowInd, row);
      }
    }
    return rowMap;
  }
  function sam$kotlin_Comparator$0(function_0) {
    this.v2g_1 = function_0;
  }
  protoOf(sam$kotlin_Comparator$0).xd = function (a, b) {
    return this.v2g_1(a, b);
  };
  protoOf(sam$kotlin_Comparator$0).compare = function (a, b) {
    return this.xd(a, b);
  };
  function DecomposedSparseRowEchelonForm$data$delegate$lambda(this$0) {
    return function () {
      return computeData(this$0);
    };
  }
  function DecomposedSparseRowEchelonForm$dataList$delegate$lambda(this$0) {
    return function () {
      return computeDataList(this$0);
    };
  }
  function DecomposedSparseRowEchelonForm$computeDataList$lambda(this$0) {
    return function (block) {
      return this$0.v2f_1.w2g(block, this$0.u2f_1);
    };
  }
  function DecomposedSparseRowEchelonForm$computeBlockList$lambda(a, b) {
    // Inline function 'kotlin.comparisons.compareValuesBy' call
    // Inline function 'com.github.shwaka.kohomology.linalg.DecomposedSparseRowEchelonForm.computeBlockList.<anonymous>' call
    var rowInd = a.j3();
    var tmp = rowInd;
    // Inline function 'com.github.shwaka.kohomology.linalg.DecomposedSparseRowEchelonForm.computeBlockList.<anonymous>' call
    var rowInd_0 = b.j3();
    return compareValues(tmp, rowInd_0);
  }
  function DecomposedSparseRowEchelonForm$computeBlockList$lambda_0($rowKeysList) {
    return function (_name_for_destructuring_parameter_0__wldtmu) {
      var i = _name_for_destructuring_parameter_0__wldtmu.j3();
      var rowKeys1 = _name_for_destructuring_parameter_0__wldtmu.k3();
      var tmp$ret$0;
      // Inline function 'kotlin.collections.mutableListOf' call
      tmp$ret$0 = ArrayList_init_$Create$_0();
      var pairsToBeUnitedThreadLocal = tmp$ret$0;
      var inductionVariable = i + 1 | 0;
      var last = $rowKeysList.i();
      var tmp;
      if (inductionVariable < last) {
        do {
          var j = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var rowKeys2 = $rowKeysList.l(j);
          if (hasNonEmptyIntersection(rowKeys1, rowKeys2)) {
            pairsToBeUnitedThreadLocal.a(new Pair(i, j));
          }
        }
         while (inductionVariable < last);
        tmp = Unit_getInstance();
      }
      return pairsToBeUnitedThreadLocal;
    };
  }
  function DecomposedSparseRowEchelonForm(matrixSpace, originalMatrix) {
    RowEchelonForm.call(this, matrixSpace, originalMatrix);
    this.t2f_1 = originalMatrix.z2f_1;
    this.u2f_1 = originalMatrix.a2g_1;
    this.v2f_1 = matrixSpace.a2h();
    var tmp = this;
    tmp.w2f_1 = lazy(DecomposedSparseRowEchelonForm$data$delegate$lambda(this));
    var tmp_0 = this;
    tmp_0.x2f_1 = lazy(DecomposedSparseRowEchelonForm$dataList$delegate$lambda(this));
  }
  protoOf(DecomposedSparseRowEchelonForm).b2h = function () {
    return this.y1g().c2h(_get_data__d5abxd(this).r2g_1, this.t2f_1, this.u2f_1);
  };
  protoOf(DecomposedSparseRowEchelonForm).d2h = function () {
    return _get_data__d5abxd(this).s2g_1;
  };
  protoOf(DecomposedSparseRowEchelonForm).e2h = function () {
    throw new NotImplementedError('Computation of sign is not implemented for DecomposedSparseRowEchelonForm');
  };
  protoOf(DecomposedSparseRowEchelonForm).f2h = function () {
    var reducedRowMap = computeReducedRowMapForRowEchelonForm(this, _get_dataList__i79k6b(this), this.d2h());
    return this.y1g().c2h(reducedRowMap, this.t2f_1, this.u2f_1);
  };
  function data$factory() {
    return getPropertyCallableRef('data', 1, KProperty1, function (receiver) {
      return _get_data__d5abxd(receiver);
    }, null);
  }
  function dataList$factory() {
    return getPropertyCallableRef('dataList', 1, KProperty1, function (receiver) {
      return _get_dataList__i79k6b(receiver);
    }, null);
  }
  function Companion_52() {
    Companion_instance_52 = this;
    var tmp = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp.k2h_1 = LinkedHashMap_init_$Create$();
  }
  protoOf(Companion_52).l2h = function (numVectorSpace) {
    if (this.k2h_1.o2(numVectorSpace)) {
      var tmp = this.k2h_1.u2(numVectorSpace);
      return tmp instanceof DenseMatrixSpace ? tmp : THROW_CCE();
    } else {
      var matrixSpace = new DenseMatrixSpace(numVectorSpace);
      // Inline function 'kotlin.collections.set' call
      this.k2h_1.z3(numVectorSpace, matrixSpace);
      return matrixSpace;
    }
  };
  var Companion_instance_52;
  function Companion_getInstance_53() {
    if (Companion_instance_52 == null)
      new Companion_52();
    return Companion_instance_52;
  }
  function DenseMatrixSpace(numVectorSpace) {
    Companion_getInstance_53();
    this.m2h_1 = numVectorSpace;
    this.n2h_1 = this.m2h_1.p2h_1;
    this.o2h_1 = Companion_getInstance_56().r2h(this);
  }
  protoOf(DenseMatrixSpace).b1h = function () {
    return this.m2h_1;
  };
  protoOf(DenseMatrixSpace).j1h = function () {
    return this.n2h_1;
  };
  protoOf(DenseMatrixSpace).g1g = function () {
    return this.o2h_1;
  };
  protoOf(DenseMatrixSpace).s2h = function (matrix) {
    return equals(matrix.t2h_1, this.m2h_1);
  };
  protoOf(DenseMatrixSpace).y2h = function (matrix, numVector) {
    if (!this.s2h(matrix))
      throw new IllegalContextException('The denseMatrix ' + matrix + ' does not match the context (' + this + ')');
    if (!this.m2h_1.z2h(numVector))
      throw new IllegalContextException('The numVector ' + numVector + ' does not match the context (' + this.m2h_1 + ')');
    if (!(matrix.w2h_1 === numVector.p22()))
      throw new InvalidSizeException('Cannot multiply matrix and vector: matrix.colCount != vector.dim');
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = matrix.u2h_1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$5;
      // Inline function 'com.github.shwaka.kohomology.linalg.DenseMatrixSpace.multiply.<anonymous>' call
      // Inline function 'kotlin.run' call
      var tmp0_run = this.n2h_1.g1g();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'com.github.shwaka.kohomology.linalg.DenseMatrixSpace.multiply.<anonymous>.<anonymous>' call
      // Inline function 'kotlin.collections.map' call
      var tmp0_map_0 = zip(item, numVector.a2i_1);
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
      var tmp0_iterator_0 = tmp0_map_0.f();
      while (tmp0_iterator_0.g()) {
        var item_0 = tmp0_iterator_0.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.linalg.DenseMatrixSpace.multiply.<anonymous>.<anonymous>.<anonymous>' call
        tmp$ret$0 = tmp0_run.s1j(item_0.x3_1, item_0.y3_1);
        tmp0_mapTo_0.a(tmp$ret$0);
      }
      tmp$ret$5 = tmp0_run.q1j(tmp0_mapTo_0);
      tmp0_mapTo.a(tmp$ret$5);
    }
    var valueList = tmp0_mapTo;
    return this.m2h_1.c2i(valueList);
  };
  protoOf(DenseMatrixSpace).d2i = function (matrix, numVector) {
    var tmp = matrix instanceof DenseMatrix ? matrix : THROW_CCE();
    return this.y2h(tmp, numVector instanceof DenseNumVector ? numVector : THROW_CCE());
  };
  protoOf(DenseMatrixSpace).e2i = function (matrix) {
    var tmp0_safe_receiver = matrix.x2h_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return tmp0_safe_receiver;
    }
    var rowEchelonForm = new DenseRowEchelonForm(this, matrix);
    matrix.f2i(rowEchelonForm);
    return rowEchelonForm;
  };
  protoOf(DenseMatrixSpace).g2i = function (matrix) {
    return this.e2i(matrix instanceof DenseMatrix ? matrix : THROW_CCE());
  };
  protoOf(DenseMatrixSpace).h2i = function (matrix) {
    var rowCount = matrix.w2h_1;
    var colCount = matrix.v2h_1;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = until(0, rowCount);
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.z_1;
    var last = tmp0_map.a1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'com.github.shwaka.kohomology.linalg.DenseMatrixSpace.computeTranspose.<anonymous>' call
        // Inline function 'kotlin.collections.map' call
        var tmp0_map_0 = until(0, colCount);
        // Inline function 'kotlin.collections.mapTo' call
        var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
        var inductionVariable_0 = tmp0_map_0.z_1;
        var last_0 = tmp0_map_0.a1_1;
        if (inductionVariable_0 <= last_0)
          do {
            var item_0 = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var tmp$ret$0;
            // Inline function 'com.github.shwaka.kohomology.linalg.DenseMatrixSpace.computeTranspose.<anonymous>.<anonymous>' call
            tmp$ret$0 = matrix.i2i(item_0, item);
            tmp0_mapTo_0.a(tmp$ret$0);
          }
           while (!(item_0 === last_0));
        tmp0_mapTo.a(tmp0_mapTo_0);
      }
       while (!(item === last));
    var rowList = tmp0_mapTo;
    var tmp0_numVectorSpace = this.m2h_1;
    return new DenseMatrix(tmp0_numVectorSpace, rowList, rowCount, colCount);
  };
  protoOf(DenseMatrixSpace).j2i = function (matrix) {
    return this.h2i(matrix instanceof DenseMatrix ? matrix : THROW_CCE());
  };
  protoOf(DenseMatrixSpace).k2i = function (rowList, colCount) {
    var rowCount = rowList.i();
    var tmp;
    // Inline function 'kotlin.collections.isNotEmpty' call
    if (!rowList.p()) {
      tmp = rowList.l(0).i();
    } else {
      if (!(colCount == null)) {
        tmp = colCount;
      } else {
        throw IllegalArgumentException_init_$Create$('Row list is empty and colCount is not specified');
      }
    }
    var colCountNonNull = tmp;
    return new DenseMatrix(this.m2h_1, rowList, rowCount, colCountNonNull);
  };
  protoOf(DenseMatrixSpace).c2h = function (rowMap, rowCount, colCount) {
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = until(0, rowCount);
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.z_1;
    var last = tmp0_map.a1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$6;
        // Inline function 'com.github.shwaka.kohomology.linalg.DenseMatrixSpace.fromRowMap.<anonymous>' call
        var row = rowMap.u2(item);
        var tmp;
        if (row == null) {
          // Inline function 'kotlin.collections.List' call
          // Inline function 'kotlin.collections.MutableList' call
          var list = ArrayList_init_$Create$(colCount);
          // Inline function 'kotlin.repeat' call
          // Inline function 'kotlin.contracts.contract' call
          var inductionVariable_0 = 0;
          if (inductionVariable_0 < colCount)
            do {
              var index = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              // Inline function 'kotlin.collections.MutableList.<anonymous>' call
              var tmp$ret$0;
              // Inline function 'com.github.shwaka.kohomology.linalg.DenseMatrixSpace.fromRowMap.<anonymous>.<anonymous>' call
              tmp$ret$0 = this.n2h_1.c1j();
              list.a(tmp$ret$0);
            }
             while (inductionVariable_0 < colCount);
          tmp = list;
        } else {
          // Inline function 'kotlin.collections.map' call
          var tmp0_map_0 = until(0, colCount);
          // Inline function 'kotlin.collections.mapTo' call
          var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
          var inductionVariable_1 = tmp0_map_0.z_1;
          var last_0 = tmp0_map_0.a1_1;
          if (inductionVariable_1 <= last_0)
            do {
              var item_0 = inductionVariable_1;
              inductionVariable_1 = inductionVariable_1 + 1 | 0;
              var tmp$ret$3;
              // Inline function 'com.github.shwaka.kohomology.linalg.DenseMatrixSpace.fromRowMap.<anonymous>.<anonymous>' call
              var tmp0_elvis_lhs = row.u2(item_0);
              tmp$ret$3 = tmp0_elvis_lhs == null ? this.n2h_1.c1j() : tmp0_elvis_lhs;
              tmp0_mapTo_0.a(tmp$ret$3);
            }
             while (!(item_0 === last_0));
          tmp = tmp0_mapTo_0;
        }
        tmp$ret$6 = tmp;
        tmp0_mapTo.a(tmp$ret$6);
      }
       while (!(item === last));
    var rowList = tmp0_mapTo;
    return this.k2i(rowList, colCount);
  };
  protoOf(DenseMatrixSpace).m2i = function (matrix1, matrix2) {
    if (!(matrix1.v2h_1 === matrix2.v2h_1))
      throw new InvalidSizeException('Cannot join two matrices of different row counts');
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = zip(matrix1.u2h_1, matrix2.u2h_1);
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.DenseMatrixSpace.joinMatrices.<anonymous>' call
      var row1 = item.j3();
      var row2 = item.k3();
      tmp$ret$0 = plus(row1, row2);
      tmp0_mapTo.a(tmp$ret$0);
    }
    var rowList = tmp0_mapTo;
    var rowCount = matrix1.v2h_1;
    var colCount = matrix1.w2h_1 + matrix2.w2h_1 | 0;
    return new DenseMatrix(this.m2h_1, rowList, rowCount, colCount);
  };
  protoOf(DenseMatrixSpace).n2i = function (matrix1, matrix2) {
    var tmp = matrix1 instanceof DenseMatrix ? matrix1 : THROW_CCE();
    return this.m2i(tmp, matrix2 instanceof DenseMatrix ? matrix2 : THROW_CCE());
  };
  protoOf(DenseMatrixSpace).o2i = function (matrix, rowRange) {
    var rowList = slice(matrix.u2h_1, rowRange);
    return this.k2i(rowList, matrix.w2h_1);
  };
  protoOf(DenseMatrixSpace).p2i = function (matrix, rowRange) {
    return this.o2i(matrix instanceof DenseMatrix ? matrix : THROW_CCE(), rowRange);
  };
  protoOf(DenseMatrixSpace).q2i = function (matrix, colRange) {
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = matrix.u2h_1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.DenseMatrixSpace.computeColSlice.<anonymous>' call
      tmp$ret$0 = slice(item, colRange);
      tmp0_mapTo.a(tmp$ret$0);
    }
    var rowList = tmp0_mapTo;
    return this.k2i(rowList, count(colRange));
  };
  protoOf(DenseMatrixSpace).r2i = function (matrix, colRange) {
    return this.q2i(matrix instanceof DenseMatrix ? matrix : THROW_CCE(), colRange);
  };
  protoOf(DenseMatrixSpace).toString = function () {
    return 'DenseMatrixSpace(' + this.n2h_1 + ')';
  };
  protoOf(DenseMatrixSpace).s2i = function (numVectors, dim) {
    if (numVectors.p() ? dim == null : false)
      throw IllegalArgumentException_init_$Create$('Vector list is empty and dim is not specified');
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(numVectors, 10));
    var tmp0_iterator = numVectors.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.DenseMatrixSpace.fromNumVectorList.<anonymous>' call
      tmp$ret$0 = item.o2d();
      tmp0_mapTo.a(tmp$ret$0);
    }
    var colList = tmp0_mapTo;
    return this.t2i(colList, dim);
  };
  protoOf(DenseMatrixSpace).u2i = function (numVectors, dim) {
    return this.s2i(numVectors, dim);
  };
  function toStringTable($this) {
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = $this.u2h_1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      // Inline function 'com.github.shwaka.kohomology.linalg.DenseMatrix.toStringTable.<anonymous>' call
      // Inline function 'kotlin.collections.map' call
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(item, 10));
      var tmp0_iterator_0 = item.f();
      while (tmp0_iterator_0.g()) {
        var item_0 = tmp0_iterator_0.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.linalg.DenseMatrix.toStringTable.<anonymous>.<anonymous>' call
        tmp$ret$0 = toString(item_0);
        tmp0_mapTo_0.a(tmp$ret$0);
      }
      tmp0_mapTo.a(tmp0_mapTo_0);
    }
    return new StringTable(tmp0_mapTo);
  }
  function DenseMatrix(numVectorSpace, rowList, rowCount, colCount) {
    this.t2h_1 = numVectorSpace;
    this.u2h_1 = rowList;
    this.v2h_1 = rowCount;
    this.w2h_1 = colCount;
    this.x2h_1 = null;
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.any' call
      var tmp0_any = this.u2h_1;
      var tmp;
      if (isInterface(tmp0_any, Collection)) {
        tmp = tmp0_any.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_any.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        // Inline function 'com.github.shwaka.kohomology.linalg.DenseMatrix.<anonymous>' call
        if (!(element.i() === this.w2h_1)) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    if (tmp$ret$0)
      throw new InvalidSizeException('The length of each row must be equal to colCount');
  }
  protoOf(DenseMatrix).b1h = function () {
    return this.t2h_1;
  };
  protoOf(DenseMatrix).x2i = function () {
    return this.v2h_1;
  };
  protoOf(DenseMatrix).y2i = function () {
    return this.w2h_1;
  };
  protoOf(DenseMatrix).f2i = function (value) {
    if (!(this.x2h_1 == null))
      throw IllegalStateException_init_$Create$('Cannot assign rowEchelonForm twice');
    this.x2h_1 = value;
  };
  protoOf(DenseMatrix).toString = function () {
    return toStringTable(this).toString();
  };
  protoOf(DenseMatrix).i2i = function (rowInd, colInd) {
    return this.u2h_1.l(rowInd).l(colInd);
  };
  protoOf(DenseMatrix).hashCode = function () {
    var result = hashCode(this.t2h_1);
    result = imul(result, 31) + hashCode(this.u2h_1) | 0;
    result = imul(result, 31) + this.v2h_1 | 0;
    result = imul(result, 31) + this.w2h_1 | 0;
    return result;
  };
  protoOf(DenseMatrix).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof DenseMatrix))
      return false;
    var tmp0_other_with_cast = other instanceof DenseMatrix ? other : THROW_CCE();
    if (!equals(this.t2h_1, tmp0_other_with_cast.t2h_1))
      return false;
    if (!equals(this.u2h_1, tmp0_other_with_cast.u2h_1))
      return false;
    if (!(this.v2h_1 === tmp0_other_with_cast.v2h_1))
      return false;
    if (!(this.w2h_1 === tmp0_other_with_cast.w2h_1))
      return false;
    return true;
  };
  function Companion_53() {
    Companion_instance_53 = this;
    var tmp = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp.a2j_1 = LinkedHashMap_init_$Create$();
  }
  protoOf(Companion_53).b2j = function (field) {
    if (this.a2j_1.o2(field)) {
      var tmp = this.a2j_1.u2(field);
      return tmp instanceof DenseNumVectorSpace ? tmp : THROW_CCE();
    } else {
      var numVectorSpace = new DenseNumVectorSpace(field);
      // Inline function 'kotlin.collections.set' call
      this.a2j_1.z3(field, numVectorSpace);
      return numVectorSpace;
    }
  };
  var Companion_instance_53;
  function Companion_getInstance_54() {
    if (Companion_instance_53 == null)
      new Companion_53();
    return Companion_instance_53;
  }
  function DenseNumVectorSpace(field) {
    Companion_getInstance_54();
    this.p2h_1 = field;
    this.q2h_1 = Companion_getInstance_57().f1u(this);
  }
  protoOf(DenseNumVectorSpace).j1h = function () {
    return this.p2h_1;
  };
  protoOf(DenseNumVectorSpace).g1g = function () {
    return this.q2h_1;
  };
  protoOf(DenseNumVectorSpace).z2h = function (numVector) {
    return equals(numVector.b2i_1, this.p2h_1);
  };
  protoOf(DenseNumVectorSpace).c2j = function (a, b) {
    if (!this.z2h(a))
      throw new IllegalContextException('The denseNumVector ' + a + ' does not match the context (' + this + ')');
    if (!this.z2h(b))
      throw new IllegalContextException('The denseNumVector ' + b + ' does not match the context (' + this + ')');
    if (!(a.p22() === b.p22()))
      throw new InvalidSizeException('Cannot add numVectors of different dim');
    // Inline function 'kotlin.collections.mutableListOf' call
    var result = ArrayList_init_$Create$_0();
    // Inline function 'kotlin.run' call
    var tmp0_run = this.p2h_1.g1g();
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    var last = a.a2i_1.i() - 1 | 0;
    var tmp;
    if (inductionVariable <= last) {
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        result.a(tmp0_run.m1j(a.a2i_1.l(i), b.a2i_1.l(i)));
      }
       while (inductionVariable <= last);
      tmp = Unit_getInstance();
    }
    return new DenseNumVector(result, this.p2h_1);
  };
  protoOf(DenseNumVectorSpace).d2j = function (a, b) {
    var tmp = a instanceof DenseNumVector ? a : THROW_CCE();
    return this.c2j(tmp, b instanceof DenseNumVector ? b : THROW_CCE());
  };
  protoOf(DenseNumVectorSpace).e2j = function (a, b) {
    if (!this.z2h(a))
      throw new IllegalContextException('The denseNumVector ' + a + ' does not match the context (' + this + ')');
    if (!this.z2h(b))
      throw new IllegalContextException('The denseNumVector ' + b + ' does not match the context (' + this + ')');
    if (!(a.p22() === b.p22()))
      throw new InvalidSizeException('Cannot subtract numVectors of different dim');
    // Inline function 'kotlin.collections.mutableListOf' call
    var result = ArrayList_init_$Create$_0();
    // Inline function 'kotlin.run' call
    var tmp0_run = this.p2h_1.g1g();
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    var last = a.a2i_1.i() - 1 | 0;
    var tmp;
    if (inductionVariable <= last) {
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        result.a(tmp0_run.i1j(a.a2i_1.l(i), b.a2i_1.l(i)));
      }
       while (inductionVariable <= last);
      tmp = Unit_getInstance();
    }
    return new DenseNumVector(result, this.p2h_1);
  };
  protoOf(DenseNumVectorSpace).f2j = function (a, b) {
    var tmp = a instanceof DenseNumVector ? a : THROW_CCE();
    return this.e2j(tmp, b instanceof DenseNumVector ? b : THROW_CCE());
  };
  protoOf(DenseNumVectorSpace).g2j = function (scalar, numVector) {
    if (!this.z2h(numVector))
      throw new IllegalContextException('The denseNumVector ' + numVector + ' does not match the context (' + this + ')');
    if (!this.p2h_1.h2j(scalar))
      throw new IllegalContextException('The scalar ' + scalar + ' does not match the context (field = ' + this.p2h_1 + ')');
    // Inline function 'kotlin.run' call
    var tmp0_run = this.p2h_1.g1g();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.linalg.DenseNumVectorSpace.multiply.<anonymous>' call
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = numVector.a2i_1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.DenseNumVectorSpace.multiply.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.s1j(item, scalar);
      tmp0_mapTo.a(tmp$ret$0);
    }
    var valueList = tmp0_mapTo;
    return new DenseNumVector(valueList, this.p2h_1);
  };
  protoOf(DenseNumVectorSpace).i2j = function (scalar, numVector) {
    var tmp = isInterface(scalar, Scalar) ? scalar : THROW_CCE();
    return this.g2j(tmp, numVector instanceof DenseNumVector ? numVector : THROW_CCE());
  };
  protoOf(DenseNumVectorSpace).j2j = function (a, b) {
    if (!this.z2h(a))
      throw new IllegalContextException('The sparseNumVector ' + a + ' does not match the context (' + this + ')');
    if (!this.z2h(b))
      throw new IllegalContextException('The sparseNumVector ' + b + ' does not match the context (' + this + ')');
    if (!(a.p22() === b.p22()))
      throw new InvalidSizeException('Cannot divide numVectors of different dim');
    if (b.tj())
      throw ArithmeticException_init_$Create$('Division by zero numVector');
    // Inline function 'kotlin.collections.find' call
    var tmp0_find = withIndex(b.a2i_1);
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.collections.firstOrNull' call
      var tmp0_iterator = tmp0_find.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        // Inline function 'com.github.shwaka.kohomology.linalg.DenseNumVectorSpace.divideByNumVector.<anonymous>' call
        var scalar = element.k3();
        if (scalar.e1q()) {
          tmp$ret$1 = element;
          break $l$block;
        }
      }
      tmp$ret$1 = null;
    }
    var tmp0_safe_receiver = tmp$ret$1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.h3_1;
    var tmp;
    if (tmp1_elvis_lhs == null) {
      throw Exception_init_$Create$("This can't happen!");
    } else {
      tmp = tmp1_elvis_lhs;
    }
    var index = tmp;
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.linalg.DenseNumVectorSpace.divideByNumVector.<anonymous>' call
    var scalar_0 = this.p2h_1.g1g().e1j(a.a2i_1.l(index), b.a2i_1.l(index));
    var tmp_0;
    // Inline function 'kotlin.run' call
    var tmp2_run = this.q2h_1;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.linalg.DenseNumVectorSpace.divideByNumVector.<anonymous>' call
    if (a.equals(tmp2_run.t1j(scalar_0, b))) {
      tmp_0 = scalar_0;
    } else {
      tmp_0 = null;
    }
    return tmp_0;
  };
  protoOf(DenseNumVectorSpace).k2j = function (a, b) {
    var tmp = a instanceof DenseNumVector ? a : THROW_CCE();
    return this.j2j(tmp, b instanceof DenseNumVector ? b : THROW_CCE());
  };
  protoOf(DenseNumVectorSpace).l2j = function (numVector) {
    if (!this.z2h(numVector))
      throw new IllegalContextException('The denseNumVector ' + numVector + ' does not match the context (' + this + ')');
    // Inline function 'kotlin.run' call
    var tmp0_run = this.p2h_1.g1g();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.linalg.DenseNumVectorSpace.unaryMinusOf.<anonymous>' call
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = numVector.a2i_1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.DenseNumVectorSpace.unaryMinusOf.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.e1k(item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    var valueList = tmp0_mapTo;
    return new DenseNumVector(valueList, this.p2h_1);
  };
  protoOf(DenseNumVectorSpace).m2j = function (numVector) {
    return this.l2j(numVector instanceof DenseNumVector ? numVector : THROW_CCE());
  };
  protoOf(DenseNumVectorSpace).n2j = function (numVector, ind) {
    return numVector.a2i_1.l(ind);
  };
  protoOf(DenseNumVectorSpace).o2j = function (numVector, ind) {
    return this.n2j(numVector instanceof DenseNumVector ? numVector : THROW_CCE(), ind);
  };
  protoOf(DenseNumVectorSpace).c2i = function (valueList) {
    return new DenseNumVector(valueList, this.p2h_1);
  };
  protoOf(DenseNumVectorSpace).p2j = function (valueMap, dim) {
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = until(0, dim);
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.z_1;
    var last = tmp0_map.a1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.linalg.DenseNumVectorSpace.fromValueMap.<anonymous>' call
        var tmp0_elvis_lhs = valueMap.u2(item);
        tmp$ret$0 = tmp0_elvis_lhs == null ? this.p2h_1.c1j() : tmp0_elvis_lhs;
        tmp0_mapTo.a(tmp$ret$0);
      }
       while (!(item === last));
    var valueList = tmp0_mapTo;
    return new DenseNumVector(valueList, this.p2h_1);
  };
  protoOf(DenseNumVectorSpace).p1h = function (dim) {
    // Inline function 'kotlin.collections.List' call
    // Inline function 'kotlin.collections.MutableList' call
    var list = ArrayList_init_$Create$(dim);
    // Inline function 'kotlin.repeat' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    if (inductionVariable < dim)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.collections.MutableList.<anonymous>' call
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.linalg.DenseNumVectorSpace.getZero.<anonymous>' call
        tmp$ret$0 = this.p2h_1.c1j();
        list.a(tmp$ret$0);
      }
       while (inductionVariable < dim);
    var valueList = list;
    return this.c2i(valueList);
  };
  protoOf(DenseNumVectorSpace).toString = function () {
    return 'DenseNumVectorSpace(' + this.p2h_1 + ')';
  };
  function DenseNumVector(valueList, field) {
    this.a2i_1 = valueList;
    this.b2i_1 = field;
  }
  protoOf(DenseNumVector).p22 = function () {
    return this.a2i_1.i();
  };
  protoOf(DenseNumVector).tj = function () {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp0_all = this.a2i_1;
      var tmp;
      if (isInterface(tmp0_all, Collection)) {
        tmp = tmp0_all.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_all.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        // Inline function 'com.github.shwaka.kohomology.linalg.DenseNumVector.isZero.<anonymous>' call
        if (!element.tj()) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  protoOf(DenseNumVector).o2d = function () {
    return this.a2i_1;
  };
  protoOf(DenseNumVector).s2j = function () {
    // Inline function 'kotlin.collections.mapIndexedNotNull' call
    var tmp0_mapIndexedNotNull = this.a2i_1;
    // Inline function 'kotlin.collections.mapIndexedNotNullTo' call
    var tmp0_mapIndexedNotNullTo = ArrayList_init_$Create$_0();
    // Inline function 'kotlin.collections.forEachIndexed' call
    var index = 0;
    var tmp0_iterator = tmp0_mapIndexedNotNull.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      // Inline function 'kotlin.collections.mapIndexedNotNullTo.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      var tmp0_anonymous = checkIndexOverflow(tmp1);
      // Inline function 'com.github.shwaka.kohomology.linalg.DenseNumVector.toMap.<anonymous>' call
      var tmp0_safe_receiver = item.e1q() ? new Pair(tmp0_anonymous, item) : null;
      if (tmp0_safe_receiver == null)
        null;
      else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        tmp0_mapIndexedNotNullTo.a(tmp0_safe_receiver);
      }
    }
    return toMap(tmp0_mapIndexedNotNullTo);
  };
  protoOf(DenseNumVector).toString = function () {
    return 'DenseNumVector(valueList=' + this.a2i_1 + ', field=' + this.b2i_1 + ')';
  };
  protoOf(DenseNumVector).hashCode = function () {
    var result = hashCode(this.a2i_1);
    result = imul(result, 31) + hashCode(this.b2i_1) | 0;
    return result;
  };
  protoOf(DenseNumVector).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof DenseNumVector))
      return false;
    var tmp0_other_with_cast = other instanceof DenseNumVector ? other : THROW_CCE();
    if (!equals(this.a2i_1, tmp0_other_with_cast.a2i_1))
      return false;
    if (!equals(this.b2i_1, tmp0_other_with_cast.b2i_1))
      return false;
    return true;
  };
  function _get_data__d5abxd_0($this) {
    // Inline function 'kotlin.getValue' call
    data$factory_0();
    return $this.d2k_1.w();
  }
  function RowEchelonFormData(matrix, pivots, exchangeCount) {
    this.f2k_1 = matrix;
    this.g2k_1 = pivots;
    this.h2k_1 = exchangeCount;
  }
  protoOf(RowEchelonFormData).toString = function () {
    return 'RowEchelonFormData(matrix=' + this.f2k_1 + ', pivots=' + this.g2k_1 + ', exchangeCount=' + this.h2k_1 + ')';
  };
  protoOf(RowEchelonFormData).hashCode = function () {
    var result = hashCode(this.f2k_1);
    result = imul(result, 31) + hashCode(this.g2k_1) | 0;
    result = imul(result, 31) + this.h2k_1 | 0;
    return result;
  };
  protoOf(RowEchelonFormData).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof RowEchelonFormData))
      return false;
    var tmp0_other_with_cast = other instanceof RowEchelonFormData ? other : THROW_CCE();
    if (!equals(this.f2k_1, tmp0_other_with_cast.f2k_1))
      return false;
    if (!equals(this.g2k_1, tmp0_other_with_cast.g2k_1))
      return false;
    if (!(this.h2k_1 === tmp0_other_with_cast.h2k_1))
      return false;
    return true;
  };
  function rowEchelonForm(_this__u8e3s4, $this) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.listOf' call
    tmp$ret$0 = emptyList();
    return rowEchelonFormInternal(_this__u8e3s4, $this, 0, tmp$ret$0, 0);
  }
  function rowEchelonFormInternal(_this__u8e3s4, $this, currentColInd, pivots, exchangeCount) {
    if (_this__u8e3s4.p()) {
      return new RowEchelonFormData(_this__u8e3s4, emptyList(), 0);
    }
    if (currentColInd === _this__u8e3s4.l(0).i()) {
      return new RowEchelonFormData(_this__u8e3s4, pivots, exchangeCount);
    }
    var rowInd = findNonZero(_this__u8e3s4, $this, currentColInd, pivots.i());
    var tmp;
    if (rowInd == null) {
      tmp = rowEchelonFormInternal(_this__u8e3s4, $this, currentColInd + 1 | 0, pivots, exchangeCount);
    } else {
      var newMatrix = eliminateOtherRows(_this__u8e3s4, $this, rowInd, currentColInd);
      var newExchangeCount = exchangeCount;
      if (!(rowInd === pivots.i())) {
        newMatrix = exchangeRows(newMatrix, $this, rowInd, pivots.i());
        newExchangeCount = newExchangeCount + 1 | 0;
      }
      var newPivots = plus(pivots, listOf(currentColInd));
      tmp = rowEchelonFormInternal(newMatrix, $this, currentColInd + 1 | 0, newPivots, newExchangeCount);
    }
    return tmp;
  }
  function exchangeRows(_this__u8e3s4, $this, i1, i2) {
    if (i1 === i2)
      throw IllegalArgumentException_init_$Create$('Row numbers must be distinct');
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = get_indices_0(_this__u8e3s4);
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.z_1;
    var last = tmp0_map.a1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.linalg.DenseRowEchelonForm.exchangeRows.<anonymous>' call
        var tmp0_subject = item;
        tmp$ret$0 = tmp0_subject === i1 ? _this__u8e3s4.l(i2) : tmp0_subject === i2 ? _this__u8e3s4.l(i1) : _this__u8e3s4.l(item);
        tmp0_mapTo.a(tmp$ret$0);
      }
       while (!(item === last));
    return tmp0_mapTo;
  }
  function minus_4(_this__u8e3s4, $this, other) {
    // Inline function 'kotlin.run' call
    var tmp0_run = $this.e2k_1.g1g();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.linalg.DenseRowEchelonForm.minus.<anonymous>' call
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = zip(_this__u8e3s4, other);
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.DenseRowEchelonForm.minus.<anonymous>.<anonymous>' call
      var a = item.j3();
      var b = item.k3();
      tmp$ret$0 = tmp0_run.i1j(a, b);
      tmp0_mapTo.a(tmp$ret$0);
    }
    return tmp0_mapTo;
  }
  function times_14(_this__u8e3s4, $this, other) {
    // Inline function 'kotlin.run' call
    var tmp0_run = $this.e2k_1.g1g();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.linalg.DenseRowEchelonForm.times.<anonymous>' call
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(_this__u8e3s4, 10));
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.DenseRowEchelonForm.times.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.s1j(item, other);
      tmp0_mapTo.a(tmp$ret$0);
    }
    return tmp0_mapTo;
  }
  function eliminateOtherRows(_this__u8e3s4, $this, rowInd, colInd) {
    if (_this__u8e3s4.l(rowInd).l(colInd).tj())
      throw IllegalArgumentException_init_$Create$('Cannot eliminate since the element at (' + rowInd + ', ' + colInd + ') is zero');
    var scalarMatrix = _this__u8e3s4;
    // Inline function 'kotlin.run' call
    var tmp0_run = $this.e2k_1.g1g();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.linalg.DenseRowEchelonForm.eliminateOtherRows.<anonymous>' call
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = get_indices_0(scalarMatrix);
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.z_1;
    var last = tmp0_map.a1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.linalg.DenseRowEchelonForm.eliminateOtherRows.<anonymous>.<anonymous>' call
        tmp$ret$0 = item === rowInd ? scalarMatrix.l(rowInd) : minus_4(scalarMatrix.l(item), $this, times_14(scalarMatrix.l(rowInd), $this, tmp0_run.e1j(scalarMatrix.l(item).l(colInd), scalarMatrix.l(rowInd).l(colInd))));
        tmp0_mapTo.a(tmp$ret$0);
      }
       while (!(item === last));
    return tmp0_mapTo;
  }
  function findNonZero(_this__u8e3s4, $this, colInd, rowIndFrom) {
    var inductionVariable = rowIndFrom;
    var last = _this__u8e3s4.i();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (_this__u8e3s4.l(i).l(colInd).e1q())
          return i;
      }
       while (inductionVariable < last);
    return null;
  }
  function DenseRowEchelonForm$data$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.y1g().g1g();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.DenseRowEchelonForm.data$delegate.<anonymous>.<anonymous>' call
      tmp$ret$0 = rowEchelonForm(this$0.e2g_1.o2d(), this$0);
      tmp$ret$1 = tmp$ret$0;
      return tmp$ret$1;
    };
  }
  function DenseRowEchelonForm(matrixSpace, originalMatrix) {
    RowEchelonForm.call(this, matrixSpace, originalMatrix);
    var tmp = this;
    tmp.d2k_1 = lazy(DenseRowEchelonForm$data$delegate$lambda(this));
    this.e2k_1 = matrixSpace.n2h_1;
  }
  protoOf(DenseRowEchelonForm).b2h = function () {
    return this.y1g().l2i(_get_data__d5abxd_0(this).f2k_1);
  };
  protoOf(DenseRowEchelonForm).d2h = function () {
    return _get_data__d5abxd_0(this).g2k_1;
  };
  protoOf(DenseRowEchelonForm).e2h = function () {
    return Companion_getInstance_72().i2k(_get_data__d5abxd_0(this).h2k_1);
  };
  protoOf(DenseRowEchelonForm).f2h = function () {
    var rowCount = this.e2g_1.v2h_1;
    var rank = this.i2h().i();
    var rowEchelonMatrix = _get_data__d5abxd_0(this).f2k_1;
    var one = this.y1g().j1h().b1j();
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = until(0, rowCount);
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.z_1;
    var last = tmp0_map.a1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$2;
        // Inline function 'com.github.shwaka.kohomology.linalg.DenseRowEchelonForm.computeReducedRowEchelonForm.<anonymous>' call
        var a = item < rank ? rowEchelonMatrix.l(item).l(this.i2h().l(item)) : one;
        // Inline function 'kotlin.run' call
        var tmp0_run = this.e2k_1.g1g();
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'com.github.shwaka.kohomology.linalg.DenseRowEchelonForm.computeReducedRowEchelonForm.<anonymous>.<anonymous>' call
        tmp$ret$2 = times_14(rowEchelonMatrix.l(item), this, tmp0_run.h1j(a));
        tmp0_mapTo.a(tmp$ret$2);
      }
       while (!(item === last));
    var rawReducedMatrix = tmp0_mapTo;
    var inductionVariable_0 = 0;
    if (inductionVariable_0 < rank)
      do {
        var i = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        rawReducedMatrix = eliminateOtherRows(rawReducedMatrix, this, i, this.i2h().l(i));
      }
       while (inductionVariable_0 < rank);
    return this.y1g().k2i(rawReducedMatrix, this.e2g_1.w2h_1);
  };
  function data$factory_0() {
    return getPropertyCallableRef('data', 1, KProperty1, function (receiver) {
      return _get_data__d5abxd_0(receiver);
    }, null);
  }
  function Companion_54() {
    Companion_instance_54 = this;
  }
  protoOf(Companion_54).j2k = function (field) {
    return new ScalarContextImpl(field);
  };
  var Companion_instance_54;
  function Companion_getInstance_55() {
    if (Companion_instance_54 == null)
      new Companion_54();
    return Companion_instance_54;
  }
  function ScalarContext() {
  }
  function Scalar() {
  }
  function Field() {
  }
  function ScalarContextImpl(field) {
    this.r2k_1 = field;
  }
  protoOf(ScalarContextImpl).j1h = function () {
    return this.r2k_1;
  };
  function MatrixSpace() {
  }
  function _get_augmentedOriginalMatrix__gimylt($this) {
    // Inline function 'kotlin.getValue' call
    augmentedOriginalMatrix$factory();
    return $this.k2g_1.w();
  }
  function RowEchelonForm$matrix$delegate$lambda(this$0) {
    return function () {
      return this$0.b2h();
    };
  }
  function RowEchelonForm$reducedMatrix$delegate$lambda(this$0) {
    return function () {
      return this$0.f2h();
    };
  }
  function RowEchelonForm$pivots$delegate$lambda(this$0) {
    return function () {
      return this$0.d2h();
    };
  }
  function RowEchelonForm$sign$delegate$lambda(this$0) {
    return function () {
      return this$0.e2h();
    };
  }
  function RowEchelonForm$rank$delegate$lambda(this$0) {
    return function () {
      return this$0.i2h().i();
    };
  }
  function RowEchelonForm$augmentedOriginalMatrix$delegate$lambda(this$0) {
    return function () {
      var rowCount = this$0.e2g_1.x2i();
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.y1g().g1g();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.RowEchelonForm.augmentedOriginalMatrix$delegate.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.s2k(listOf_0([this$0.e2g_1, this$0.y1g().v2i(rowCount)]));
      tmp$ret$1 = tmp$ret$0;
      return tmp$ret$1;
    };
  }
  function RowEchelonForm$transformation$delegate$lambda(this$0) {
    return function () {
      var originalColCount = this$0.e2g_1.y2i();
      var augmentedColCount = _get_augmentedOriginalMatrix__gimylt(this$0).y2i();
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.y1g().g1g();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.RowEchelonForm.transformation$delegate.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.u2k(tmp0_run.t2k(_get_augmentedOriginalMatrix__gimylt(this$0)).g2h(), until(originalColCount, augmentedColCount));
      tmp$ret$1 = tmp$ret$0;
      return tmp$ret$1;
    };
  }
  function RowEchelonForm$reducedTransformation$delegate$lambda(this$0) {
    return function () {
      var originalColCount = this$0.e2g_1.y2i();
      var augmentedColCount = _get_augmentedOriginalMatrix__gimylt(this$0).y2i();
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.y1g().g1g();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.RowEchelonForm.reducedTransformation$delegate.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.u2k(tmp0_run.t2k(_get_augmentedOriginalMatrix__gimylt(this$0)).h2h(), until(originalColCount, augmentedColCount));
      tmp$ret$1 = tmp$ret$0;
      return tmp$ret$1;
    };
  }
  function RowEchelonForm(matrixSpace, originalMatrix) {
    this.d2g_1 = matrixSpace;
    this.e2g_1 = originalMatrix;
    var tmp = this;
    tmp.f2g_1 = lazy(RowEchelonForm$matrix$delegate$lambda(this));
    var tmp_0 = this;
    tmp_0.g2g_1 = lazy(RowEchelonForm$reducedMatrix$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.h2g_1 = lazy(RowEchelonForm$pivots$delegate$lambda(this));
    var tmp_2 = this;
    tmp_2.i2g_1 = lazy(RowEchelonForm$sign$delegate$lambda(this));
    var tmp_3 = this;
    tmp_3.j2g_1 = lazy(RowEchelonForm$rank$delegate$lambda(this));
    var tmp_4 = this;
    tmp_4.k2g_1 = lazy(RowEchelonForm$augmentedOriginalMatrix$delegate$lambda(this));
    var tmp_5 = this;
    tmp_5.l2g_1 = lazy(RowEchelonForm$transformation$delegate$lambda(this));
    var tmp_6 = this;
    tmp_6.m2g_1 = lazy(RowEchelonForm$reducedTransformation$delegate$lambda(this));
  }
  protoOf(RowEchelonForm).y1g = function () {
    return this.d2g_1;
  };
  protoOf(RowEchelonForm).g2h = function () {
    // Inline function 'kotlin.getValue' call
    matrix$factory();
    return this.f2g_1.w();
  };
  protoOf(RowEchelonForm).h2h = function () {
    // Inline function 'kotlin.getValue' call
    reducedMatrix$factory();
    return this.g2g_1.w();
  };
  protoOf(RowEchelonForm).i2h = function () {
    // Inline function 'kotlin.getValue' call
    pivots$factory();
    return this.h2g_1.w();
  };
  protoOf(RowEchelonForm).j2h = function () {
    // Inline function 'kotlin.getValue' call
    reducedTransformation$factory();
    return this.m2g_1.w();
  };
  function Companion_55() {
    Companion_instance_55 = this;
  }
  protoOf(Companion_55).r2h = function (matrixSpace) {
    return new MatrixContextImpl(matrixSpace);
  };
  var Companion_instance_55;
  function Companion_getInstance_56() {
    if (Companion_instance_55 == null)
      new Companion_55();
    return Companion_instance_55;
  }
  function MatrixContext() {
  }
  function Matrix() {
  }
  function MatrixContextImpl(matrixSpace) {
    this.a2l_1 = matrixSpace;
    this.b2l_1 = Companion_getInstance_57().f1u(matrixSpace.b1h());
  }
  protoOf(MatrixContextImpl).y1g = function () {
    return this.a2l_1;
  };
  protoOf(MatrixContextImpl).j1h = function () {
    return this.b2l_1.j1h();
  };
  protoOf(MatrixContextImpl).b1h = function () {
    return this.b2l_1.b1h();
  };
  protoOf(MatrixContextImpl).b1j = function () {
    return this.b2l_1.b1j();
  };
  protoOf(MatrixContextImpl).c1j = function () {
    return this.b2l_1.c1j();
  };
  protoOf(MatrixContextImpl).e1j = function (_this__u8e3s4, other) {
    return this.b2l_1.e1j(_this__u8e3s4, other);
  };
  protoOf(MatrixContextImpl).f1j = function (_this__u8e3s4, other) {
    return this.b2l_1.f1j(_this__u8e3s4, other);
  };
  protoOf(MatrixContextImpl).g1j = function (_this__u8e3s4, ind) {
    return this.b2l_1.g1j(_this__u8e3s4, ind);
  };
  protoOf(MatrixContextImpl).h1j = function (_this__u8e3s4) {
    return this.b2l_1.h1j(_this__u8e3s4);
  };
  protoOf(MatrixContextImpl).i1j = function (_this__u8e3s4, other) {
    return this.b2l_1.i1j(_this__u8e3s4, other);
  };
  protoOf(MatrixContextImpl).j1j = function (_this__u8e3s4, other) {
    return this.b2l_1.j1j(_this__u8e3s4, other);
  };
  protoOf(MatrixContextImpl).m1j = function (_this__u8e3s4, other) {
    return this.b2l_1.m1j(_this__u8e3s4, other);
  };
  protoOf(MatrixContextImpl).n1j = function (_this__u8e3s4, other) {
    return this.b2l_1.n1j(_this__u8e3s4, other);
  };
  protoOf(MatrixContextImpl).q1j = function (_this__u8e3s4) {
    return this.b2l_1.q1j(_this__u8e3s4);
  };
  protoOf(MatrixContextImpl).s1j = function (_this__u8e3s4, other) {
    return this.b2l_1.s1j(_this__u8e3s4, other);
  };
  protoOf(MatrixContextImpl).t1j = function (_this__u8e3s4, numVector) {
    return this.b2l_1.t1j(_this__u8e3s4, numVector);
  };
  protoOf(MatrixContextImpl).v1j = function (_this__u8e3s4, scalar) {
    return this.b2l_1.v1j(_this__u8e3s4, scalar);
  };
  protoOf(MatrixContextImpl).d1k = function (_this__u8e3s4) {
    return this.b2l_1.d1k(_this__u8e3s4);
  };
  protoOf(MatrixContextImpl).e1k = function (_this__u8e3s4) {
    return this.b2l_1.e1k(_this__u8e3s4);
  };
  protoOf(MatrixContextImpl).f1k = function (_this__u8e3s4) {
    return this.b2l_1.f1k(_this__u8e3s4);
  };
  function matrix$factory() {
    return getPropertyCallableRef('matrix', 1, KProperty1, function (receiver) {
      return receiver.g2h();
    }, null);
  }
  function reducedMatrix$factory() {
    return getPropertyCallableRef('reducedMatrix', 1, KProperty1, function (receiver) {
      return receiver.h2h();
    }, null);
  }
  function pivots$factory() {
    return getPropertyCallableRef('pivots', 1, KProperty1, function (receiver) {
      return receiver.i2h();
    }, null);
  }
  function augmentedOriginalMatrix$factory() {
    return getPropertyCallableRef('augmentedOriginalMatrix', 1, KProperty1, function (receiver) {
      return _get_augmentedOriginalMatrix__gimylt(receiver);
    }, null);
  }
  function reducedTransformation$factory() {
    return getPropertyCallableRef('reducedTransformation', 1, KProperty1, function (receiver) {
      return receiver.j2h();
    }, null);
  }
  function NumVectorSpace() {
  }
  function Companion_56() {
    Companion_instance_56 = this;
  }
  protoOf(Companion_56).f1u = function (numVectorSpace) {
    return new NumVectorContextImpl(numVectorSpace);
  };
  var Companion_instance_56;
  function Companion_getInstance_57() {
    if (Companion_instance_56 == null)
      new Companion_56();
    return Companion_instance_56;
  }
  function NumVectorContext() {
  }
  function NumVectorContextImpl(numVectorSpace) {
    this.c2l_1 = numVectorSpace;
    this.d2l_1 = Companion_getInstance_55().j2k(numVectorSpace.j1h());
  }
  protoOf(NumVectorContextImpl).b1h = function () {
    return this.c2l_1;
  };
  protoOf(NumVectorContextImpl).j1h = function () {
    return this.d2l_1.j1h();
  };
  protoOf(NumVectorContextImpl).b1j = function () {
    return this.d2l_1.b1j();
  };
  protoOf(NumVectorContextImpl).c1j = function () {
    return this.d2l_1.c1j();
  };
  protoOf(NumVectorContextImpl).e1j = function (_this__u8e3s4, other) {
    return this.d2l_1.e1j(_this__u8e3s4, other);
  };
  protoOf(NumVectorContextImpl).f1j = function (_this__u8e3s4, other) {
    return this.d2l_1.f1j(_this__u8e3s4, other);
  };
  protoOf(NumVectorContextImpl).h1j = function (_this__u8e3s4) {
    return this.d2l_1.h1j(_this__u8e3s4);
  };
  protoOf(NumVectorContextImpl).i1j = function (_this__u8e3s4, other) {
    return this.d2l_1.i1j(_this__u8e3s4, other);
  };
  protoOf(NumVectorContextImpl).m1j = function (_this__u8e3s4, other) {
    return this.d2l_1.m1j(_this__u8e3s4, other);
  };
  protoOf(NumVectorContextImpl).q1j = function (_this__u8e3s4) {
    return this.d2l_1.q1j(_this__u8e3s4);
  };
  protoOf(NumVectorContextImpl).s1j = function (_this__u8e3s4, other) {
    return this.d2l_1.s1j(_this__u8e3s4, other);
  };
  protoOf(NumVectorContextImpl).d1k = function (_this__u8e3s4) {
    return this.d2l_1.d1k(_this__u8e3s4);
  };
  protoOf(NumVectorContextImpl).e1k = function (_this__u8e3s4) {
    return this.d2l_1.e1k(_this__u8e3s4);
  };
  function Companion_57() {
    Companion_instance_57 = this;
    var tmp = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp.e2l_1 = LinkedHashMap_init_$Create$();
  }
  protoOf(Companion_57).f2l = function (numVectorSpace) {
    if (this.e2l_1.o2(numVectorSpace)) {
      var tmp = this.e2l_1.u2(numVectorSpace);
      return tmp instanceof SparseMatrixSpace ? tmp : THROW_CCE();
    } else {
      var matrixSpace = new SparseMatrixSpace(numVectorSpace);
      // Inline function 'kotlin.collections.set' call
      this.e2l_1.z3(numVectorSpace, matrixSpace);
      return matrixSpace;
    }
  };
  var Companion_instance_57;
  function Companion_getInstance_58() {
    if (Companion_instance_57 == null)
      new Companion_57();
    return Companion_instance_57;
  }
  function SparseMatrixSpace(numVectorSpace, sparseRowEchelonFormCalculator) {
    Companion_getInstance_58();
    sparseRowEchelonFormCalculator = sparseRowEchelonFormCalculator === VOID ? new InPlaceSparseRowEchelonFormCalculator(numVectorSpace.g2l_1) : sparseRowEchelonFormCalculator;
    AbstractSparseMatrixSpace.call(this, numVectorSpace);
    this.l2l_1 = sparseRowEchelonFormCalculator;
  }
  protoOf(SparseMatrixSpace).a2h = function () {
    return this.l2l_1;
  };
  protoOf(SparseMatrixSpace).m2l = function (matrix) {
    var tmp0_safe_receiver = matrix.c2g_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return tmp0_safe_receiver;
    }
    var rowEchelonForm = new SparseRowEchelonForm(this, matrix);
    matrix.n2l(rowEchelonForm);
    return rowEchelonForm;
  };
  protoOf(SparseMatrixSpace).g2i = function (matrix) {
    return this.m2l(matrix instanceof SparseMatrix ? matrix : THROW_CCE());
  };
  protoOf(SparseMatrixSpace).toString = function () {
    return 'SparseMatrixSpace(' + this.j1h() + ')';
  };
  function Companion_58() {
    Companion_instance_58 = this;
    var tmp = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp.u2l_1 = LinkedHashMap_init_$Create$();
  }
  protoOf(Companion_58).f2l = function (numVectorSpace) {
    if (this.u2l_1.o2(numVectorSpace)) {
      var tmp = this.u2l_1.u2(numVectorSpace);
      return tmp instanceof DecomposedSparseMatrixSpace ? tmp : THROW_CCE();
    } else {
      var matrixSpace = new DecomposedSparseMatrixSpace(numVectorSpace);
      // Inline function 'kotlin.collections.set' call
      this.u2l_1.z3(numVectorSpace, matrixSpace);
      return matrixSpace;
    }
  };
  var Companion_instance_58;
  function Companion_getInstance_59() {
    if (Companion_instance_58 == null)
      new Companion_58();
    return Companion_instance_58;
  }
  function DecomposedSparseMatrixSpace(numVectorSpace, sparseRowEchelonFormCalculator) {
    Companion_getInstance_59();
    sparseRowEchelonFormCalculator = sparseRowEchelonFormCalculator === VOID ? new InPlaceSparseRowEchelonFormCalculator(numVectorSpace.g2l_1) : sparseRowEchelonFormCalculator;
    AbstractSparseMatrixSpace.call(this, numVectorSpace);
    this.y2l_1 = sparseRowEchelonFormCalculator;
  }
  protoOf(DecomposedSparseMatrixSpace).a2h = function () {
    return this.y2l_1;
  };
  protoOf(DecomposedSparseMatrixSpace).m2l = function (matrix) {
    var tmp0_safe_receiver = matrix.c2g_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return tmp0_safe_receiver;
    }
    var rowEchelonForm = new DecomposedSparseRowEchelonForm(this, matrix);
    matrix.n2l(rowEchelonForm);
    return rowEchelonForm;
  };
  protoOf(DecomposedSparseMatrixSpace).g2i = function (matrix) {
    return this.m2l(matrix instanceof SparseMatrix ? matrix : THROW_CCE());
  };
  protoOf(DecomposedSparseMatrixSpace).toString = function () {
    return 'DecomposedSparseMatrixSpace(' + this.j1h() + ')';
  };
  function AbstractSparseMatrixSpace$field$delegate$lambda(this$0) {
    return function () {
      return this$0.b1h().g2l_1;
    };
  }
  function AbstractSparseMatrixSpace$context$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_56().r2h(this$0);
    };
  }
  function AbstractSparseMatrixSpace(numVectorSpace) {
    this.x2g_1 = numVectorSpace;
    var tmp = this;
    tmp.y2g_1 = lazy(AbstractSparseMatrixSpace$field$delegate$lambda(this));
    var tmp_0 = this;
    tmp_0.z2g_1 = lazy(AbstractSparseMatrixSpace$context$delegate$lambda(this));
  }
  protoOf(AbstractSparseMatrixSpace).b1h = function () {
    return this.x2g_1;
  };
  protoOf(AbstractSparseMatrixSpace).j1h = function () {
    // Inline function 'kotlin.getValue' call
    field$factory();
    return this.y2g_1.w();
  };
  protoOf(AbstractSparseMatrixSpace).g1g = function () {
    // Inline function 'kotlin.getValue' call
    context$factory_1();
    return this.z2g_1.w();
  };
  protoOf(AbstractSparseMatrixSpace).o2l = function (matrix) {
    return equals(matrix.y2f_1, this.b1h());
  };
  protoOf(AbstractSparseMatrixSpace).p2l = function (matrix, numVector) {
    if (!this.o2l(matrix))
      throw new IllegalContextException('The sparseMatrix ' + matrix + ' does not match the context (' + this + ')');
    if (!this.b1h().z2l(numVector))
      throw new IllegalContextException('The numVector ' + numVector + ' does not match the context (' + this.b1h() + ')');
    if (!(matrix.a2g_1 === numVector.c2m_1))
      throw new InvalidSizeException('Cannot multiply matrix and vector: matrix.colCount != vector.dim');
    // Inline function 'kotlin.run' call
    var tmp0_run = this.j1h().g1g();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.linalg.AbstractSparseMatrixSpace.multiply.<anonymous>' call
    // Inline function 'kotlin.collections.mapValues' call
    var tmp0_mapValues = matrix.b2g_1;
    // Inline function 'kotlin.collections.mapValuesTo' call
    var tmp0_mapValuesTo = LinkedHashMap_init_$Create$_0(mapCapacity(tmp0_mapValues.i()));
    // Inline function 'kotlin.collections.associateByTo' call
    var tmp0_iterator = tmp0_mapValues.u().f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
      var tmp = element.v();
      var tmp$ret$8;
      // Inline function 'com.github.shwaka.kohomology.linalg.AbstractSparseMatrixSpace.multiply.<anonymous>.<anonymous>' call
      // Inline function 'kotlin.collections.component2' call
      var row = element.w();
      // Inline function 'kotlin.collections.map' call
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(row.i());
      // Inline function 'kotlin.collections.iterator' call
      var tmp0_iterator_0 = row.u().f();
      while (tmp0_iterator_0.g()) {
        var item = tmp0_iterator_0.h();
        var tmp$ret$5;
        // Inline function 'com.github.shwaka.kohomology.linalg.AbstractSparseMatrixSpace.multiply.<anonymous>.<anonymous>.<anonymous>' call
        // Inline function 'kotlin.collections.component1' call
        var colInd = item.v();
        // Inline function 'kotlin.collections.component2' call
        var elm = item.w();
        var it = numVector.a2m_1.u2(colInd);
        tmp$ret$5 = (it == null ? true : equals(it, tmp0_run.c1j())) ? null : tmp0_run.s1j(elm, it);
        tmp0_mapTo.a(tmp$ret$5);
      }
      tmp$ret$8 = tmp0_run.q1j(filterNotNull(tmp0_mapTo));
      tmp0_mapValuesTo.z3(tmp, tmp$ret$8);
    }
    var valueMap = tmp0_mapValuesTo;
    return Companion_getInstance_61().d2m(valueMap, this.j1h(), matrix.z2f_1);
  };
  protoOf(AbstractSparseMatrixSpace).d2i = function (matrix, numVector) {
    var tmp = matrix instanceof SparseMatrix ? matrix : THROW_CCE();
    return this.p2l(tmp, numVector instanceof SparseNumVector ? numVector : THROW_CCE());
  };
  protoOf(AbstractSparseMatrixSpace).q2l = function (matrix) {
    var rowCount = matrix.a2g_1;
    var colCount = matrix.z2f_1;
    // Inline function 'kotlin.collections.mutableMapOf' call
    var rowMap = LinkedHashMap_init_$Create$();
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = matrix.b2g_1.u().f();
    while (tmp0_iterator.g()) {
      var tmp1_loop_parameter = tmp0_iterator.h();
      // Inline function 'kotlin.collections.component1' call
      var rowInd = tmp1_loop_parameter.v();
      // Inline function 'kotlin.collections.component2' call
      var row = tmp1_loop_parameter.w();
      // Inline function 'kotlin.collections.iterator' call
      var tmp2_iterator = row.u().f();
      while (tmp2_iterator.g()) {
        var tmp3_loop_parameter = tmp2_iterator.h();
        // Inline function 'kotlin.collections.component1' call
        var colInd = tmp3_loop_parameter.v();
        // Inline function 'kotlin.collections.component2' call
        var elm = tmp3_loop_parameter.w();
        // Inline function 'kotlin.collections.getOrPut' call
        var value = rowMap.u2(colInd);
        var tmp;
        if (value == null) {
          // Inline function 'com.github.shwaka.kohomology.linalg.AbstractSparseMatrixSpace.computeTranspose.<anonymous>' call
          // Inline function 'kotlin.collections.mutableMapOf' call
          var answer = LinkedHashMap_init_$Create$();
          rowMap.z3(colInd, answer);
          tmp = answer;
        } else {
          tmp = value;
        }
        var newRow = tmp;
        // Inline function 'kotlin.collections.set' call
        newRow.z3(rowInd, elm);
      }
    }
    return new SparseMatrix(this.b1h(), rowMap, rowCount, colCount);
  };
  protoOf(AbstractSparseMatrixSpace).j2i = function (matrix) {
    return this.q2l(matrix instanceof SparseMatrix ? matrix : THROW_CCE());
  };
  protoOf(AbstractSparseMatrixSpace).k2i = function (rowList, colCount) {
    var rowCount = rowList.i();
    var tmp;
    // Inline function 'kotlin.collections.isNotEmpty' call
    if (!rowList.p()) {
      tmp = rowList.l(0).i();
    } else {
      if (!(colCount == null)) {
        tmp = colCount;
      } else {
        throw IllegalArgumentException_init_$Create$('Row list is empty and colCount is not specified');
      }
    }
    var colCountNonNull = tmp;
    // Inline function 'kotlin.collections.mapIndexedNotNull' call
    // Inline function 'kotlin.collections.mapIndexedNotNullTo' call
    var tmp0_mapIndexedNotNullTo = ArrayList_init_$Create$_0();
    // Inline function 'kotlin.collections.forEachIndexed' call
    var index = 0;
    var tmp0_iterator = rowList.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      // Inline function 'kotlin.collections.mapIndexedNotNullTo.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      var tmp0_anonymous = checkIndexOverflow(tmp1);
      // Inline function 'com.github.shwaka.kohomology.linalg.AbstractSparseMatrixSpace.fromRowList.<anonymous>' call
      // Inline function 'kotlin.collections.mapIndexedNotNull' call
      // Inline function 'kotlin.collections.mapIndexedNotNullTo' call
      var tmp0_mapIndexedNotNullTo_0 = ArrayList_init_$Create$_0();
      // Inline function 'kotlin.collections.forEachIndexed' call
      var index_0 = 0;
      var tmp0_iterator_0 = item.f();
      while (tmp0_iterator_0.g()) {
        var item_0 = tmp0_iterator_0.h();
        // Inline function 'kotlin.collections.mapIndexedNotNullTo.<anonymous>' call
        var tmp1_0 = index_0;
        index_0 = tmp1_0 + 1 | 0;
        var tmp0_anonymous_0 = checkIndexOverflow(tmp1_0);
        // Inline function 'com.github.shwaka.kohomology.linalg.AbstractSparseMatrixSpace.fromRowList.<anonymous>.<anonymous>' call
        var tmp0_safe_receiver = item_0.tj() ? null : new Pair(tmp0_anonymous_0, item_0);
        if (tmp0_safe_receiver == null)
          null;
        else {
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          tmp0_mapIndexedNotNullTo_0.a(tmp0_safe_receiver);
        }
      }
      var newRow = toMap(tmp0_mapIndexedNotNullTo_0);
      var tmp0_safe_receiver_0 = newRow.p() ? null : new Pair(tmp0_anonymous, newRow);
      if (tmp0_safe_receiver_0 == null)
        null;
      else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        tmp0_mapIndexedNotNullTo.a(tmp0_safe_receiver_0);
      }
    }
    var rowMap = toMap(tmp0_mapIndexedNotNullTo);
    return new SparseMatrix(this.b1h(), rowMap, rowCount, colCountNonNull);
  };
  protoOf(AbstractSparseMatrixSpace).c2h = function (rowMap, rowCount, colCount) {
    return new SparseMatrix(this.b1h(), rowMap, rowCount, colCount);
  };
  protoOf(AbstractSparseMatrixSpace).r2l = function (matrix1, matrix2) {
    if (!(matrix1.z2f_1 === matrix2.z2f_1))
      throw new InvalidSizeException('Cannot join two matrices of different row counts');
    var rowMap = toMutableMap(matrix1.b2g_1);
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = matrix2.b2g_1.u().f();
    while (tmp0_iterator.g()) {
      var tmp1_loop_parameter = tmp0_iterator.h();
      // Inline function 'kotlin.collections.component1' call
      var rowInd2 = tmp1_loop_parameter.v();
      // Inline function 'kotlin.collections.component2' call
      var row2 = tmp1_loop_parameter.w();
      // Inline function 'kotlin.collections.getOrElse' call
      var tmp0_elvis_lhs = matrix1.b2g_1.u2(rowInd2);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        // Inline function 'com.github.shwaka.kohomology.linalg.AbstractSparseMatrixSpace.joinMatrices.<anonymous>' call
        // Inline function 'kotlin.collections.mapOf' call
        tmp = emptyMap();
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var row1 = tmp;
      // Inline function 'kotlin.collections.mapKeys' call
      // Inline function 'kotlin.collections.mapKeysTo' call
      var tmp0_mapKeysTo = LinkedHashMap_init_$Create$_0(mapCapacity(row2.i()));
      // Inline function 'kotlin.collections.associateByTo' call
      var tmp0_iterator_0 = row2.u().f();
      while (tmp0_iterator_0.g()) {
        var element = tmp0_iterator_0.h();
        // Inline function 'com.github.shwaka.kohomology.linalg.AbstractSparseMatrixSpace.joinMatrices.<anonymous>' call
        // Inline function 'kotlin.collections.component1' call
        var colInd = element.v();
        var tmp_0 = colInd + matrix1.a2g_1 | 0;
        var tmp$ret$8;
        // Inline function 'kotlin.collections.mapKeysTo.<anonymous>' call
        tmp$ret$8 = element.w();
        tmp0_mapKeysTo.z3(tmp_0, tmp$ret$8);
      }
      var newRow = plus_0(row1, tmp0_mapKeysTo);
      // Inline function 'kotlin.collections.set' call
      rowMap.z3(rowInd2, newRow);
    }
    var rowCount = matrix1.z2f_1;
    var colCount = matrix1.a2g_1 + matrix2.a2g_1 | 0;
    return new SparseMatrix(this.b1h(), rowMap, rowCount, colCount);
  };
  protoOf(AbstractSparseMatrixSpace).n2i = function (matrix1, matrix2) {
    var tmp = matrix1 instanceof SparseMatrix ? matrix1 : THROW_CCE();
    return this.r2l(tmp, matrix2 instanceof SparseMatrix ? matrix2 : THROW_CCE());
  };
  protoOf(AbstractSparseMatrixSpace).s2l = function (matrix, rowRange) {
    var rowCount = count(rowRange);
    var colCount = matrix.a2g_1;
    // Inline function 'kotlin.collections.mapKeys' call
    // Inline function 'kotlin.collections.filterKeys' call
    var tmp0_filterKeys = matrix.b2g_1;
    var result = LinkedHashMap_init_$Create$();
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = tmp0_filterKeys.u().f();
    while (tmp0_iterator.g()) {
      var entry = tmp0_iterator.h();
      // Inline function 'com.github.shwaka.kohomology.linalg.AbstractSparseMatrixSpace.computeRowSlice.<anonymous>' call
      var tmp1_anonymous = entry.v();
      var containsLower = rowRange.z_1;
      if (tmp1_anonymous <= rowRange.a1_1 ? containsLower <= tmp1_anonymous : false) {
        result.z3(entry.v(), entry.w());
      }
    }
    // Inline function 'kotlin.collections.mapKeysTo' call
    var tmp0_mapKeysTo = LinkedHashMap_init_$Create$_0(mapCapacity(result.i()));
    // Inline function 'kotlin.collections.associateByTo' call
    var tmp0_iterator_0 = result.u().f();
    while (tmp0_iterator_0.g()) {
      var element = tmp0_iterator_0.h();
      // Inline function 'com.github.shwaka.kohomology.linalg.AbstractSparseMatrixSpace.computeRowSlice.<anonymous>' call
      // Inline function 'kotlin.collections.component1' call
      var rowInd = element.v();
      var tmp = rowInd - rowRange.z_1 | 0;
      var tmp$ret$5;
      // Inline function 'kotlin.collections.mapKeysTo.<anonymous>' call
      tmp$ret$5 = element.w();
      tmp0_mapKeysTo.z3(tmp, tmp$ret$5);
    }
    var rowMap = tmp0_mapKeysTo;
    return new SparseMatrix(this.b1h(), rowMap, rowCount, colCount);
  };
  protoOf(AbstractSparseMatrixSpace).p2i = function (matrix, rowRange) {
    return this.s2l(matrix instanceof SparseMatrix ? matrix : THROW_CCE(), rowRange);
  };
  protoOf(AbstractSparseMatrixSpace).t2l = function (matrix, colRange) {
    var rowCount = matrix.z2f_1;
    var colCount = count(colRange);
    // Inline function 'kotlin.collections.filterValues' call
    // Inline function 'kotlin.collections.mapValues' call
    var tmp0_mapValues = matrix.b2g_1;
    // Inline function 'kotlin.collections.mapValuesTo' call
    var tmp0_mapValuesTo = LinkedHashMap_init_$Create$_0(mapCapacity(tmp0_mapValues.i()));
    // Inline function 'kotlin.collections.associateByTo' call
    var tmp0_iterator = tmp0_mapValues.u().f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
      var tmp = element.v();
      // Inline function 'com.github.shwaka.kohomology.linalg.AbstractSparseMatrixSpace.computeColSlice.<anonymous>' call
      // Inline function 'kotlin.collections.component2' call
      var row = element.w();
      // Inline function 'kotlin.collections.mapKeys' call
      // Inline function 'kotlin.collections.filterKeys' call
      var result = LinkedHashMap_init_$Create$();
      // Inline function 'kotlin.collections.iterator' call
      var tmp0_iterator_0 = row.u().f();
      while (tmp0_iterator_0.g()) {
        var entry = tmp0_iterator_0.h();
        // Inline function 'com.github.shwaka.kohomology.linalg.AbstractSparseMatrixSpace.computeColSlice.<anonymous>.<anonymous>' call
        var tmp0_anonymous = entry.v();
        var containsLower = colRange.z_1;
        if (tmp0_anonymous <= colRange.a1_1 ? containsLower <= tmp0_anonymous : false) {
          result.z3(entry.v(), entry.w());
        }
      }
      // Inline function 'kotlin.collections.mapKeysTo' call
      var tmp0_mapKeysTo = LinkedHashMap_init_$Create$_0(mapCapacity(result.i()));
      // Inline function 'kotlin.collections.associateByTo' call
      var tmp0_iterator_1 = result.u().f();
      while (tmp0_iterator_1.g()) {
        var element_0 = tmp0_iterator_1.h();
        // Inline function 'com.github.shwaka.kohomology.linalg.AbstractSparseMatrixSpace.computeColSlice.<anonymous>.<anonymous>' call
        // Inline function 'kotlin.collections.component1' call
        var colInd = element_0.v();
        var tmp_0 = colInd - colRange.z_1 | 0;
        var tmp$ret$7;
        // Inline function 'kotlin.collections.mapKeysTo.<anonymous>' call
        tmp$ret$7 = element_0.w();
        tmp0_mapKeysTo.z3(tmp_0, tmp$ret$7);
      }
      tmp0_mapValuesTo.z3(tmp, tmp0_mapKeysTo);
    }
    var result_0 = LinkedHashMap_init_$Create$();
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator_2 = tmp0_mapValuesTo.u().f();
    while (tmp0_iterator_2.g()) {
      var entry_0 = tmp0_iterator_2.h();
      // Inline function 'com.github.shwaka.kohomology.linalg.AbstractSparseMatrixSpace.computeColSlice.<anonymous>' call
      // Inline function 'kotlin.collections.isNotEmpty' call
      if (!entry_0.w().p()) {
        result_0.z3(entry_0.v(), entry_0.w());
      }
    }
    var rowMap = result_0;
    return new SparseMatrix(this.b1h(), rowMap, rowCount, colCount);
  };
  protoOf(AbstractSparseMatrixSpace).r2i = function (matrix, colRange) {
    return this.t2l(matrix instanceof SparseMatrix ? matrix : THROW_CCE(), colRange);
  };
  function toStringTable_0($this) {
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = until(0, $this.z2f_1);
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.z_1;
    var last = tmp0_map.a1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'com.github.shwaka.kohomology.linalg.SparseMatrix.toStringTable.<anonymous>' call
        // Inline function 'kotlin.collections.map' call
        var tmp0_map_0 = until(0, $this.a2g_1);
        // Inline function 'kotlin.collections.mapTo' call
        var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
        var inductionVariable_0 = tmp0_map_0.z_1;
        var last_0 = tmp0_map_0.a1_1;
        if (inductionVariable_0 <= last_0)
          do {
            var item_0 = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var tmp$ret$0;
            // Inline function 'com.github.shwaka.kohomology.linalg.SparseMatrix.toStringTable.<anonymous>.<anonymous>' call
            tmp$ret$0 = toString($this.i2i(item, item_0));
            tmp0_mapTo_0.a(tmp$ret$0);
          }
           while (!(item_0 === last_0));
        tmp0_mapTo.a(tmp0_mapTo_0);
      }
       while (!(item === last));
    var valueList = tmp0_mapTo;
    return new StringTable(valueList);
  }
  function SparseMatrix(numVectorSpace, rowMap, rowCount, colCount) {
    this.y2f_1 = numVectorSpace;
    this.z2f_1 = rowCount;
    this.a2g_1 = colCount;
    var tmp = this;
    // Inline function 'kotlin.collections.filterValues' call
    // Inline function 'kotlin.collections.mapValues' call
    // Inline function 'kotlin.collections.mapValuesTo' call
    var tmp0_mapValuesTo = LinkedHashMap_init_$Create$_0(mapCapacity(rowMap.i()));
    // Inline function 'kotlin.collections.associateByTo' call
    var tmp0_iterator = rowMap.u().f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
      var tmp_0 = element.v();
      // Inline function 'com.github.shwaka.kohomology.linalg.SparseMatrix.rowMap.<anonymous>' call
      // Inline function 'kotlin.collections.component2' call
      var row = element.w();
      // Inline function 'kotlin.collections.filterValues' call
      var result = LinkedHashMap_init_$Create$();
      // Inline function 'kotlin.collections.iterator' call
      var tmp0_iterator_0 = row.u().f();
      while (tmp0_iterator_0.g()) {
        var entry = tmp0_iterator_0.h();
        // Inline function 'com.github.shwaka.kohomology.linalg.SparseMatrix.rowMap.<anonymous>.<anonymous>' call
        if (entry.w().e1q()) {
          result.z3(entry.v(), entry.w());
        }
      }
      tmp0_mapValuesTo.z3(tmp_0, result);
    }
    var result_0 = LinkedHashMap_init_$Create$();
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator_1 = tmp0_mapValuesTo.u().f();
    while (tmp0_iterator_1.g()) {
      var entry_0 = tmp0_iterator_1.h();
      // Inline function 'com.github.shwaka.kohomology.linalg.SparseMatrix.rowMap.<anonymous>' call
      // Inline function 'kotlin.collections.isNotEmpty' call
      if (!entry_0.w().p()) {
        result_0.z3(entry_0.v(), entry_0.w());
      }
    }
    tmp.b2g_1 = result_0;
    this.c2g_1 = null;
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator_2 = this.b2g_1.u().f();
    while (tmp0_iterator_2.g()) {
      var tmp1_loop_parameter = tmp0_iterator_2.h();
      // Inline function 'kotlin.collections.component1' call
      var rowInd = tmp1_loop_parameter.v();
      // Inline function 'kotlin.collections.component2' call
      var row_0 = tmp1_loop_parameter.w();
      if (rowInd < 0)
        throw IllegalArgumentException_init_$Create$('The row index ' + rowInd + ' cannot be negative');
      if (rowInd >= this.z2f_1)
        throw IllegalArgumentException_init_$Create$('The row index ' + rowInd + ' cannot be larger than the rowCount (= ' + this.z2f_1 + ') for the matrix');
      // Inline function 'kotlin.collections.iterator' call
      var tmp2_iterator = row_0.u().f();
      while (tmp2_iterator.g()) {
        // Inline function 'kotlin.collections.component1' call
        var colInd = tmp2_iterator.h().v();
        if (colInd < 0)
          throw IllegalArgumentException_init_$Create$('The col index ' + colInd + ' cannot be negative');
        if (colInd >= this.a2g_1)
          throw IllegalArgumentException_init_$Create$('The col index ' + colInd + ' cannot be larger than the colCount (= ' + this.a2g_1 + ') for the matrix');
      }
    }
  }
  protoOf(SparseMatrix).b1h = function () {
    return this.y2f_1;
  };
  protoOf(SparseMatrix).x2i = function () {
    return this.z2f_1;
  };
  protoOf(SparseMatrix).y2i = function () {
    return this.a2g_1;
  };
  protoOf(SparseMatrix).n2l = function (value) {
    if (!(this.c2g_1 == null))
      throw IllegalStateException_init_$Create$('Cannot assign rowEchelonForm twice');
    this.c2g_1 = value;
  };
  protoOf(SparseMatrix).toString = function () {
    return toStringTable_0(this).toString();
  };
  protoOf(SparseMatrix).i2i = function (rowInd, colInd) {
    var tmp0_safe_receiver = this.b2g_1.u2(rowInd);
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'com.github.shwaka.kohomology.linalg.SparseMatrix.get.<anonymous>' call
      var tmp0_safe_receiver_0 = tmp0_safe_receiver.u2(colInd);
      var tmp;
      if (tmp0_safe_receiver_0 == null) {
        tmp = null;
      } else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        return tmp0_safe_receiver_0;
      }
    }
    if (rowInd < 0 ? true : colInd < 0)
      throw IndexOutOfBoundsException_init_$Create$('Index for matrix cannot be negative');
    if (rowInd >= this.z2f_1 ? true : colInd >= this.a2g_1)
      throw IndexOutOfBoundsException_init_$Create$('Given index (' + rowInd + ', ' + colInd + ') is not contained in the size (' + this.z2f_1 + ', ' + this.a2g_1 + ')');
    return this.y2f_1.g2l_1.c1j();
  };
  protoOf(SparseMatrix).equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (!(other instanceof SparseMatrix))
      THROW_CCE();
    if (!equals(this.y2f_1, other.y2f_1))
      return false;
    if (!(this.z2f_1 === other.z2f_1))
      return false;
    if (!(this.a2g_1 === other.a2g_1))
      return false;
    if (!equals(this.b2g_1, other.b2g_1))
      return false;
    return true;
  };
  protoOf(SparseMatrix).hashCode = function () {
    var result = hashCode(this.y2f_1);
    result = imul(31, result) + this.z2f_1 | 0;
    result = imul(31, result) + this.a2g_1 | 0;
    result = imul(31, result) + hashCode(this.b2g_1) | 0;
    return result;
  };
  function field$factory() {
    return getPropertyCallableRef('field', 1, KProperty1, function (receiver) {
      return receiver.j1h();
    }, null);
  }
  function context$factory_1() {
    return getPropertyCallableRef('context', 1, KProperty1, function (receiver) {
      return receiver.g1g();
    }, null);
  }
  function Companion_59() {
    Companion_instance_59 = this;
    var tmp = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp.e2m_1 = LinkedHashMap_init_$Create$();
  }
  protoOf(Companion_59).b2j = function (field) {
    if (this.e2m_1.o2(field)) {
      var tmp = this.e2m_1.u2(field);
      return tmp instanceof SparseNumVectorSpace ? tmp : THROW_CCE();
    } else {
      var numVectorSpace = new SparseNumVectorSpace(field);
      // Inline function 'kotlin.collections.set' call
      this.e2m_1.z3(field, numVectorSpace);
      return numVectorSpace;
    }
  };
  var Companion_instance_59;
  function Companion_getInstance_60() {
    if (Companion_instance_59 == null)
      new Companion_59();
    return Companion_instance_59;
  }
  function SparseNumVectorSpace(field) {
    Companion_getInstance_60();
    this.g2l_1 = field;
    this.h2l_1 = Companion_getInstance_57().f1u(this);
  }
  protoOf(SparseNumVectorSpace).j1h = function () {
    return this.g2l_1;
  };
  protoOf(SparseNumVectorSpace).g1g = function () {
    return this.h2l_1;
  };
  protoOf(SparseNumVectorSpace).z2l = function (numVector) {
    return equals(numVector.b2m_1, this.g2l_1);
  };
  protoOf(SparseNumVectorSpace).f2m = function (a, b) {
    if (!this.z2l(a))
      throw new IllegalContextException('The sparseNumVector ' + a + ' does not match the context (' + this + ')');
    if (!this.z2l(b))
      throw new IllegalContextException('The sparseNumVector ' + b + ' does not match the context (' + this + ')');
    if (!(a.c2m_1 === b.c2m_1))
      throw new InvalidSizeException('Cannot add numVectors of different dim');
    var valueMap = toMutableMap(a.a2m_1);
    // Inline function 'kotlin.run' call
    var tmp0_run = this.g2l_1.g1g();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = b.a2m_1.u().f();
    while (tmp0_iterator.g()) {
      var tmp1_loop_parameter = tmp0_iterator.h();
      // Inline function 'kotlin.collections.component1' call
      var i = tmp1_loop_parameter.v();
      // Inline function 'kotlin.collections.component2' call
      var value = tmp1_loop_parameter.w();
      // Inline function 'kotlin.collections.set' call
      var valueFromA = valueMap.u2(i);
      var tmp1_set = valueFromA == null ? value : tmp0_run.m1j(valueFromA, value);
      valueMap.z3(i, tmp1_set);
    }
    return Companion_getInstance_61().d2m(valueMap, this.g2l_1, a.c2m_1);
  };
  protoOf(SparseNumVectorSpace).d2j = function (a, b) {
    var tmp = a instanceof SparseNumVector ? a : THROW_CCE();
    return this.f2m(tmp, b instanceof SparseNumVector ? b : THROW_CCE());
  };
  protoOf(SparseNumVectorSpace).g2m = function (a, b) {
    if (!this.z2l(a))
      throw new IllegalContextException('The sparseNumVector ' + a + ' does not match the context (' + this + ')');
    if (!this.z2l(b))
      throw new IllegalContextException('The sparseNumVector ' + b + ' does not match the context (' + this + ')');
    if (!(a.c2m_1 === b.c2m_1))
      throw new InvalidSizeException('Cannot add numVectors of different dim');
    var valueMap = toMutableMap(a.a2m_1);
    // Inline function 'kotlin.run' call
    var tmp0_run = this.g2l_1.g1g();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = b.a2m_1.u().f();
    while (tmp0_iterator.g()) {
      var tmp1_loop_parameter = tmp0_iterator.h();
      // Inline function 'kotlin.collections.component1' call
      var i = tmp1_loop_parameter.v();
      // Inline function 'kotlin.collections.component2' call
      var value = tmp1_loop_parameter.w();
      // Inline function 'kotlin.collections.set' call
      var valueFromA = valueMap.u2(i);
      var tmp1_set = valueFromA == null ? tmp0_run.e1k(value) : tmp0_run.i1j(valueFromA, value);
      valueMap.z3(i, tmp1_set);
    }
    return Companion_getInstance_61().d2m(valueMap, this.g2l_1, a.c2m_1);
  };
  protoOf(SparseNumVectorSpace).f2j = function (a, b) {
    var tmp = a instanceof SparseNumVector ? a : THROW_CCE();
    return this.g2m(tmp, b instanceof SparseNumVector ? b : THROW_CCE());
  };
  protoOf(SparseNumVectorSpace).h2m = function (scalar, numVector) {
    if (!this.z2l(numVector))
      throw new IllegalContextException('The sparseNumVector ' + numVector + ' does not match the context (' + this + ')');
    if (!this.g2l_1.h2j(scalar))
      throw new IllegalContextException('The scalar ' + scalar + ' does not match the context (field = ' + this.g2l_1 + ')');
    if (scalar.tj()) {
      var tmp = Companion_getInstance_61();
      var tmp$ret$0;
      // Inline function 'kotlin.collections.mapOf' call
      tmp$ret$0 = emptyMap();
      return tmp.d2m(tmp$ret$0, this.g2l_1, numVector.c2m_1);
    }
    // Inline function 'kotlin.run' call
    var tmp0_run = this.g2l_1.g1g();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.linalg.SparseNumVectorSpace.multiply.<anonymous>' call
    // Inline function 'kotlin.collections.mapValues' call
    var tmp0_mapValues = numVector.a2m_1;
    // Inline function 'kotlin.collections.mapValuesTo' call
    var tmp0_mapValuesTo = LinkedHashMap_init_$Create$_0(mapCapacity(tmp0_mapValues.i()));
    // Inline function 'kotlin.collections.associateByTo' call
    var tmp0_iterator = tmp0_mapValues.u().f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
      var tmp_0 = element.v();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.linalg.SparseNumVectorSpace.multiply.<anonymous>.<anonymous>' call
      // Inline function 'kotlin.collections.component2' call
      var value = element.w();
      tmp$ret$3 = tmp0_run.s1j(scalar, value);
      tmp0_mapValuesTo.z3(tmp_0, tmp$ret$3);
    }
    var valueMap = tmp0_mapValuesTo;
    return Companion_getInstance_61().i2m(valueMap, this.g2l_1, numVector.c2m_1);
  };
  protoOf(SparseNumVectorSpace).i2j = function (scalar, numVector) {
    var tmp = isInterface(scalar, Scalar) ? scalar : THROW_CCE();
    return this.h2m(tmp, numVector instanceof SparseNumVector ? numVector : THROW_CCE());
  };
  protoOf(SparseNumVectorSpace).j2m = function (a, b) {
    if (!this.z2l(a))
      throw new IllegalContextException('The sparseNumVector ' + a + ' does not match the context (' + this + ')');
    if (!this.z2l(b))
      throw new IllegalContextException('The sparseNumVector ' + b + ' does not match the context (' + this + ')');
    if (!(a.c2m_1 === b.c2m_1))
      throw new InvalidSizeException('Cannot divide numVectors of different dim');
    if (b.tj())
      throw ArithmeticException_init_$Create$('Division by zero numVector');
    var index = first(b.a2m_1.v2());
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.linalg.SparseNumVectorSpace.divideByNumVector.<anonymous>' call
    var scalar = this.g2l_1.g1g().e1j(this.k2m(a, index), this.k2m(b, index));
    var tmp;
    // Inline function 'kotlin.run' call
    var tmp1_run = this.h2l_1;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.linalg.SparseNumVectorSpace.divideByNumVector.<anonymous>' call
    if (a.equals(tmp1_run.t1j(scalar, b))) {
      tmp = scalar;
    } else {
      tmp = null;
    }
    return tmp;
  };
  protoOf(SparseNumVectorSpace).k2j = function (a, b) {
    var tmp = a instanceof SparseNumVector ? a : THROW_CCE();
    return this.j2m(tmp, b instanceof SparseNumVector ? b : THROW_CCE());
  };
  protoOf(SparseNumVectorSpace).l2m = function (numVector) {
    if (!this.z2l(numVector))
      throw new IllegalContextException('The sparseNumVector ' + numVector + ' does not match the context (' + this + ')');
    // Inline function 'kotlin.run' call
    var tmp0_run = this.g2l_1.g1g();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.linalg.SparseNumVectorSpace.unaryMinusOf.<anonymous>' call
    // Inline function 'kotlin.collections.mapValues' call
    var tmp0_mapValues = numVector.a2m_1;
    // Inline function 'kotlin.collections.mapValuesTo' call
    var tmp0_mapValuesTo = LinkedHashMap_init_$Create$_0(mapCapacity(tmp0_mapValues.i()));
    // Inline function 'kotlin.collections.associateByTo' call
    var tmp0_iterator = tmp0_mapValues.u().f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
      var tmp = element.v();
      var tmp$ret$2;
      // Inline function 'com.github.shwaka.kohomology.linalg.SparseNumVectorSpace.unaryMinusOf.<anonymous>.<anonymous>' call
      // Inline function 'kotlin.collections.component2' call
      var value = element.w();
      tmp$ret$2 = tmp0_run.e1k(value);
      tmp0_mapValuesTo.z3(tmp, tmp$ret$2);
    }
    var valueMap = tmp0_mapValuesTo;
    return Companion_getInstance_61().i2m(valueMap, this.g2l_1, numVector.c2m_1);
  };
  protoOf(SparseNumVectorSpace).m2j = function (numVector) {
    return this.l2m(numVector instanceof SparseNumVector ? numVector : THROW_CCE());
  };
  protoOf(SparseNumVectorSpace).k2m = function (numVector, ind) {
    var tmp0_safe_receiver = numVector.a2m_1.u2(ind);
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return tmp0_safe_receiver;
    }
    return this.g2l_1.c1j();
  };
  protoOf(SparseNumVectorSpace).o2j = function (numVector, ind) {
    return this.k2m(numVector instanceof SparseNumVector ? numVector : THROW_CCE(), ind);
  };
  protoOf(SparseNumVectorSpace).c2i = function (valueList) {
    // Inline function 'kotlin.collections.mutableMapOf' call
    var valueMap = LinkedHashMap_init_$Create$();
    var iterator = valueList.f();
    var index = 0;
    while (iterator.g()) {
      var i = index;
      index = index + 1 | 0;
      var value = iterator.h();
      if (value.e1q()) {
        // Inline function 'kotlin.collections.set' call
        valueMap.z3(i, value);
      }
    }
    return Companion_getInstance_61().d2m(valueMap, this.g2l_1, valueList.i());
  };
  protoOf(SparseNumVectorSpace).p2j = function (valueMap, dim) {
    return Companion_getInstance_61().d2m(valueMap, this.g2l_1, dim);
  };
  protoOf(SparseNumVectorSpace).r2j = function (valueMap, dim) {
    // Inline function 'com.github.shwaka.kococo.debugOnly' call
    return Companion_getInstance_61().i2m(valueMap, this.g2l_1, dim);
  };
  protoOf(SparseNumVectorSpace).p1h = function (dim) {
    var tmp = Companion_getInstance_61();
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mapOf' call
    tmp$ret$0 = emptyMap();
    return tmp.d2m(tmp$ret$0, this.g2l_1, dim);
  };
  protoOf(SparseNumVectorSpace).toString = function () {
    return 'SparseNumVectorSpace(' + this.g2l_1 + ')';
  };
  function Companion_60() {
    Companion_instance_60 = this;
  }
  protoOf(Companion_60).d2m = function (valueMap, field, dim) {
    // Inline function 'kotlin.collections.filterValues' call
    var result = LinkedHashMap_init_$Create$();
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = valueMap.u().f();
    while (tmp0_iterator.g()) {
      var entry = tmp0_iterator.h();
      // Inline function 'com.github.shwaka.kohomology.linalg.Companion.invoke.<anonymous>' call
      if (entry.w().e1q()) {
        result.z3(entry.v(), entry.w());
      }
    }
    var filteredValueMap = result;
    return new SparseNumVector(filteredValueMap, field, dim);
  };
  protoOf(Companion_60).i2m = function (valueMap, field, dim) {
    return new SparseNumVector(valueMap, field, dim);
  };
  var Companion_instance_60;
  function Companion_getInstance_61() {
    if (Companion_instance_60 == null)
      new Companion_60();
    return Companion_instance_60;
  }
  function SparseNumVector(valueMap, field, dim) {
    Companion_getInstance_61();
    this.a2m_1 = valueMap;
    this.b2m_1 = field;
    this.c2m_1 = dim;
  }
  protoOf(SparseNumVector).p22 = function () {
    return this.c2m_1;
  };
  protoOf(SparseNumVector).tj = function () {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp0_all = this.a2m_1;
      if (tmp0_all.p()) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      // Inline function 'kotlin.collections.iterator' call
      var tmp0_iterator = tmp0_all.u().f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        // Inline function 'com.github.shwaka.kohomology.linalg.SparseNumVector.isZero.<anonymous>' call
        // Inline function 'kotlin.collections.component2' call
        var value = element.w();
        if (!value.tj()) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  protoOf(SparseNumVector).toString = function () {
    return 'SparseNumVector(valueMap=' + this.a2m_1 + ', field=' + this.b2m_1 + ', dim=' + this.c2m_1 + ')';
  };
  protoOf(SparseNumVector).equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (!(other instanceof SparseNumVector))
      THROW_CCE();
    if (!equals(this.a2m_1, other.a2m_1))
      return false;
    if (!equals(this.b2m_1, other.b2m_1))
      return false;
    if (!(this.c2m_1 === other.c2m_1))
      return false;
    return true;
  };
  protoOf(SparseNumVector).hashCode = function () {
    var result = hashCode(this.a2m_1);
    result = imul(31, result) + hashCode(this.b2m_1) | 0;
    result = imul(31, result) + this.c2m_1 | 0;
    return result;
  };
  protoOf(SparseNumVector).o2d = function () {
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = until(0, this.c2m_1);
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.z_1;
    var last = tmp0_map.a1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.linalg.SparseNumVector.toList.<anonymous>' call
        var tmp0_elvis_lhs = this.a2m_1.u2(item);
        tmp$ret$0 = tmp0_elvis_lhs == null ? this.b2m_1.c1j() : tmp0_elvis_lhs;
        tmp0_mapTo.a(tmp$ret$0);
      }
       while (!(item === last));
    return tmp0_mapTo;
  };
  protoOf(SparseNumVector).s2j = function () {
    return this.a2m_1;
  };
  function _get_data__d5abxd_1($this) {
    // Inline function 'kotlin.getValue' call
    data$factory_1();
    return $this.z2m_1.w();
  }
  function SparseRowEchelonForm$data$delegate$lambda(this$0) {
    return function () {
      return this$0.y2m_1.w2g(this$0.e2g_1.b2g_1, this$0.x2m_1);
    };
  }
  function SparseRowEchelonForm(matrixSpace, originalMatrix) {
    RowEchelonForm.call(this, matrixSpace, originalMatrix);
    this.w2m_1 = originalMatrix.z2f_1;
    this.x2m_1 = originalMatrix.a2g_1;
    this.y2m_1 = matrixSpace.a2h();
    var tmp = this;
    tmp.z2m_1 = lazy(SparseRowEchelonForm$data$delegate$lambda(this));
  }
  protoOf(SparseRowEchelonForm).b2h = function () {
    return this.y1g().c2h(_get_data__d5abxd_1(this).r2g_1, this.w2m_1, this.x2m_1);
  };
  protoOf(SparseRowEchelonForm).d2h = function () {
    return _get_data__d5abxd_1(this).s2g_1;
  };
  protoOf(SparseRowEchelonForm).e2h = function () {
    return Companion_getInstance_72().i2k(_get_data__d5abxd_1(this).t2g_1);
  };
  protoOf(SparseRowEchelonForm).f2h = function () {
    var reducedRowMap = this.y2m_1.u2g(_get_data__d5abxd_1(this).r2g_1, _get_data__d5abxd_1(this).s2g_1);
    return this.y1g().c2h(reducedRowMap, this.w2m_1, this.x2m_1);
  };
  function data$factory_1() {
    return getPropertyCallableRef('data', 1, KProperty1, function (receiver) {
      return _get_data__d5abxd_1(receiver);
    }, null);
  }
  function toMutableMapDeeply(_this__u8e3s4, $this) {
    // Inline function 'kotlin.collections.mapValues' call
    // Inline function 'kotlin.collections.mapValuesTo' call
    var tmp0_mapValuesTo = LinkedHashMap_init_$Create$_0(mapCapacity(_this__u8e3s4.i()));
    // Inline function 'kotlin.collections.associateByTo' call
    var tmp0_iterator = _this__u8e3s4.u().f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
      var tmp = element.v();
      var tmp$ret$2;
      // Inline function 'com.github.shwaka.kohomology.linalg.InPlaceSparseRowEchelonFormCalculator.toMutableMapDeeply.<anonymous>' call
      // Inline function 'kotlin.collections.component2' call
      var row = element.w();
      tmp$ret$2 = toMutableMap(row);
      tmp0_mapValuesTo.z3(tmp, tmp$ret$2);
    }
    return toMutableMap(tmp0_mapValuesTo);
  }
  function replace_0(_this__u8e3s4, $this, getNewValue) {
    // Inline function 'kotlin.collections.iterator' call
    var mapIterator = _this__u8e3s4.u().f();
    while (mapIterator.g()) {
      var mapEntry = mapIterator.h();
      var newValue = getNewValue(mapEntry.v(), mapEntry.w());
      mapEntry.m8(newValue);
    }
  }
  function subtract_1(_this__u8e3s4, $this, other, scalar) {
    // Inline function 'kotlin.run' call
    var tmp0_run = $this.a2n_1.g1g();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = other.u().f();
    while (tmp0_iterator.g()) {
      var tmp1_loop_parameter = tmp0_iterator.h();
      // Inline function 'kotlin.collections.component1' call
      var i = tmp1_loop_parameter.v();
      // Inline function 'kotlin.collections.component2' call
      var value = tmp1_loop_parameter.w();
      var valueFromThis = _this__u8e3s4.u2(i);
      if (valueFromThis == null) {
        // Inline function 'kotlin.collections.set' call
        var tmp0_set = tmp0_run.s1j(tmp0_run.e1k(value), scalar);
        _this__u8e3s4.z3(i, tmp0_set);
      } else {
        var newValue = tmp0_run.i1j(valueFromThis, tmp0_run.s1j(value, scalar));
        if (newValue.tj()) {
          _this__u8e3s4.s8(i);
        } else {
          // Inline function 'kotlin.collections.set' call
          _this__u8e3s4.z3(i, newValue);
        }
      }
    }
  }
  function multiply_3(_this__u8e3s4, $this, scalar) {
    if (scalar.tj()) {
      _this__u8e3s4.s7();
    } else {
      // Inline function 'kotlin.run' call
      var tmp0_run = $this.a2n_1.g1g();
      // Inline function 'kotlin.contracts.contract' call
      replace_0(_this__u8e3s4, $this, InPlaceSparseRowEchelonFormCalculator$multiply$lambda(tmp0_run, scalar));
    }
  }
  function eliminateOtherRows_0(_this__u8e3s4, $this, rowInd, colInd) {
    var tmp0_elvis_lhs = _this__u8e3s4.u2(rowInd);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalArgumentException_init_$Create$('Cannot eliminate since the row ' + rowInd + ' is zero');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var mainRow = tmp;
    var elm = mainRow.u2(colInd);
    if (elm == null ? true : elm.tj())
      throw IllegalArgumentException_init_$Create$('Cannot eliminate since the element at (' + rowInd + ', ' + colInd + ') is zero');
    // Inline function 'kotlin.run' call
    var tmp0_run = $this.a2n_1.g1g();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.iterator' call
    var mapIterator = _this__u8e3s4.u().f();
    while (mapIterator.g()) {
      var mapEntry = mapIterator.h();
      // Inline function 'kotlin.collections.component1' call
      var i = mapEntry.v();
      // Inline function 'kotlin.collections.component2' call
      var row = mapEntry.w();
      if (!(i === rowInd)) {
        var coeff = row.u2(colInd);
        if (!(coeff == null)) {
          subtract_1(row, $this, mainRow, tmp0_run.e1j(coeff, elm));
          if (row.p()) {
            mapIterator.t7();
          }
        }
      }
    }
  }
  function findNonZero_0(_this__u8e3s4, $this, colInd, rowIndFrom) {
    // Inline function 'kotlin.collections.filter' call
    var tmp0_filter = _this__u8e3s4.v2();
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo = ArrayList_init_$Create$_0();
    var tmp0_iterator = tmp0_filter.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'com.github.shwaka.kohomology.linalg.InPlaceSparseRowEchelonFormCalculator.findNonZero.<anonymous>' call
      if (element >= rowIndFrom) {
        tmp0_filterTo.a(element);
      }
    }
    var tmp0_iterator_0 = tmp0_filterTo.f();
    while (tmp0_iterator_0.g()) {
      var i = tmp0_iterator_0.h();
      var tmp1_safe_receiver = _this__u8e3s4.u2(i);
      if (tmp1_safe_receiver == null)
        null;
      else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'com.github.shwaka.kohomology.linalg.InPlaceSparseRowEchelonFormCalculator.findNonZero.<anonymous>' call
        var tmp0_safe_receiver = tmp1_safe_receiver.u2(colInd);
        var tmp;
        if (tmp0_safe_receiver == null) {
          tmp = null;
        } else {
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          var tmp_0;
          if (tmp0_safe_receiver.e1q()) {
            return i;
          }
          tmp = Unit_getInstance();
        }
      }
    }
    return null;
  }
  function InPlaceSparseRowEchelonFormCalculator$multiply$lambda($tmp0_run, $scalar) {
    return function (_anonymous_parameter_0__qggqh8, value) {
      return $tmp0_run.s1j(value, $scalar);
    };
  }
  function InPlaceSparseRowEchelonFormCalculator(field) {
    this.a2n_1 = field;
  }
  protoOf(InPlaceSparseRowEchelonFormCalculator).w2g = function (matrix, colCount) {
    var currentColInd = 0;
    // Inline function 'kotlin.collections.mutableListOf' call
    var pivots = ArrayList_init_$Create$_0();
    var exchangeCount = 0;
    var currentMatrix = toMutableMapDeeply(matrix, this);
    $l$loop: while (currentColInd < colCount) {
      var rowInd = findNonZero_0(currentMatrix, this, currentColInd, pivots.i());
      if (rowInd == null) {
        currentColInd = currentColInd + 1 | 0;
        continue $l$loop;
      } else {
        eliminateOtherRows_0(currentMatrix, this, rowInd, currentColInd);
        if (!(rowInd === pivots.i())) {
          exchange(currentMatrix, rowInd, pivots.i());
          exchangeCount = exchangeCount + 1 | 0;
        }
        pivots.a(currentColInd);
        currentColInd = currentColInd + 1 | 0;
      }
    }
    return new SparseRowEchelonFormData(currentMatrix, pivots, exchangeCount);
  };
  protoOf(InPlaceSparseRowEchelonFormCalculator).u2g = function (rowEchelonRowMap, pivots) {
    var rank = pivots.i();
    var reducedRowMap = toMutableMapDeeply(rowEchelonRowMap, this);
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = reducedRowMap.u().f();
    while (tmp0_iterator.g()) {
      var tmp1_loop_parameter = tmp0_iterator.h();
      // Inline function 'kotlin.collections.component1' call
      var i = tmp1_loop_parameter.v();
      // Inline function 'kotlin.collections.component2' call
      var row = tmp1_loop_parameter.w();
      var tmp2_elvis_lhs = row.u2(pivots.l(i));
      var tmp;
      if (tmp2_elvis_lhs == null) {
        throw Exception_init_$Create$("This can't happen!");
      } else {
        tmp = tmp2_elvis_lhs;
      }
      var elm = tmp;
      // Inline function 'kotlin.run' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'com.github.shwaka.kohomology.linalg.InPlaceSparseRowEchelonFormCalculator.reduce.<anonymous>' call
      var elmInv = this.a2n_1.g1g().h1j(elm);
      multiply_3(row, this, elmInv);
    }
    var inductionVariable = 0;
    if (inductionVariable < rank)
      do {
        var i_0 = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        eliminateOtherRows_0(reducedRowMap, this, i_0, pivots.l(i_0));
      }
       while (inductionVariable < rank);
    return reducedRowMap;
  };
  function SparseRowEchelonFormData(rowMap, pivots, exchangeCount) {
    this.r2g_1 = rowMap;
    this.s2g_1 = pivots;
    this.t2g_1 = exchangeCount;
  }
  protoOf(SparseRowEchelonFormData).toString = function () {
    return 'SparseRowEchelonFormData(rowMap=' + this.r2g_1 + ', pivots=' + this.s2g_1 + ', exchangeCount=' + this.t2g_1 + ')';
  };
  protoOf(SparseRowEchelonFormData).hashCode = function () {
    var result = hashCode(this.r2g_1);
    result = imul(result, 31) + hashCode(this.s2g_1) | 0;
    result = imul(result, 31) + this.t2g_1 | 0;
    return result;
  };
  protoOf(SparseRowEchelonFormData).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SparseRowEchelonFormData))
      return false;
    var tmp0_other_with_cast = other instanceof SparseRowEchelonFormData ? other : THROW_CCE();
    if (!equals(this.r2g_1, tmp0_other_with_cast.r2g_1))
      return false;
    if (!equals(this.s2g_1, tmp0_other_with_cast.s2g_1))
      return false;
    if (!(this.t2g_1 === tmp0_other_with_cast.t2g_1))
      return false;
    return true;
  };
  function getShiftString($this, shift, showShiftExponent) {
    if (shift.tj()) {
      return '';
    } else if (!showShiftExponent) {
      return 's';
    }
    var shiftIdentifierName = shift.h1z().b2n_1;
    return shiftIdentifierName === '1' ? 's' : 's_' + shiftIdentifierName;
  }
  function getIdentifier($this, original, shift, index, showShiftExponent) {
    var tmp1_elvis_lhs = index == null ? null : index.toString();
    var indexString = tmp1_elvis_lhs == null ? '' : tmp1_elvis_lhs;
    var shiftString = getShiftString($this, shift, showShiftExponent);
    var originalName = original.h1z().p27_1;
    return new Identifier_0(shiftString + originalName + indexString);
  }
  function CopiedName$Companion$getInternalPrintConfig$lambda($printConfig) {
    return function (coeff, withSign) {
      return coeff.q2k($printConfig.g1u_1, withSign);
    };
  }
  function CopiedName$Companion$getInternalPrintConfig$lambda_0($printConfig) {
    return function (monomial) {
      return monomial.s1i($printConfig);
    };
  }
  function toPlain($this, showShift) {
    var tmp0_safe_receiver = $this.e2n_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.toString();
    var indexString = tmp1_elvis_lhs == null ? '' : tmp1_elvis_lhs;
    var tmp;
    switch (showShift.m1_1) {
      case 0:
        tmp = $this.d2n_1.tj() ? '' : '_';
        break;
      case 1:
        tmp = $this.d2n_1.tj() ? '' : 's';
        break;
      case 2:
        var tmp_0;
        if ($this.d2n_1.tj()) {
          tmp_0 = '';
        } else if ($this.d2n_1.i1z()) {
          tmp_0 = 's';
        } else {
          var shiftStr = toString($this.d2n_1);
          var tmp_1;
          if (shiftStr.length === 1) {
            tmp_1 = 's^' + shiftStr;
          } else {
            tmp_1 = 's^{' + shiftStr + '}';
          }
          tmp_0 = tmp_1;
        }

        tmp = tmp_0;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    var shiftString = tmp;
    return shiftString + $this.c2n_1.s1i(PrintConfig_init_$Create$(PrintType_PLAIN_getInstance())) + indexString;
  }
  function toTex($this, showShift) {
    var tmp0_safe_receiver = $this.e2n_1;
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.toString();
    var tmp;
    if (tmp1_safe_receiver == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'com.github.shwaka.kohomology.model.CopiedName.toTex.<anonymous>' call
      tmp = '_{(' + tmp1_safe_receiver + ')}';
    }
    var tmp2_elvis_lhs = tmp;
    var indexString = tmp2_elvis_lhs == null ? '' : tmp2_elvis_lhs;
    var tmp_0;
    switch (showShift.m1_1) {
      case 0:
        tmp_0 = $this.d2n_1.tj() ? '' : '\\bar';
        break;
      case 1:
        tmp_0 = $this.d2n_1.tj() ? '' : 's';
        break;
      case 2:
        tmp_0 = $this.d2n_1.tj() ? '' : $this.d2n_1.i1z() ? 's' : 's^{' + $this.d2n_1 + '}';
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    var shiftString = tmp_0;
    return shiftString + '{' + $this.c2n_1.s1i(PrintConfig_init_$Create$(PrintType_TEX_getInstance())) + '}' + indexString;
  }
  function Companion_61() {
    Companion_instance_61 = this;
  }
  protoOf(Companion_61).g2n = function (printConfig) {
    var tmp = CopiedName$Companion$getInternalPrintConfig$lambda(printConfig);
    return new InternalPrintConfig(tmp, CopiedName$Companion$getInternalPrintConfig$lambda_0(printConfig));
  };
  var Companion_instance_61;
  function Companion_getInstance_62() {
    if (Companion_instance_61 == null)
      new Companion_61();
    return Companion_instance_61;
  }
  function CopiedName(original, shift, index, showShiftExponentInIdentifier) {
    Companion_getInstance_62();
    index = index === VOID ? null : index;
    showShiftExponentInIdentifier = showShiftExponentInIdentifier === VOID ? true : showShiftExponentInIdentifier;
    this.c2n_1 = original;
    this.d2n_1 = shift;
    this.e2n_1 = index;
    this.f2n_1 = getIdentifier(Companion_getInstance_62(), this.c2n_1, this.d2n_1, this.e2n_1, showShiftExponentInIdentifier);
  }
  protoOf(CopiedName).h1z = function () {
    return this.f2n_1;
  };
  protoOf(CopiedName).toString = function () {
    return toPlain(this, ShowShift_S_WITH_DEGREE_getInstance());
  };
  protoOf(CopiedName).s1i = function (printConfig) {
    var tmp$ret$0;
    $l$block: {
      // Inline function 'com.github.shwaka.kohomology.util.PrintConfig.get' call
      var tmp = printConfig.k1u_1.u2(getKClass(CopiedNamePrintConfig));
      var tmp0_safe_receiver = tmp instanceof CopiedNamePrintConfig ? tmp : null;
      if (tmp0_safe_receiver == null)
        null;
      else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        tmp$ret$0 = tmp0_safe_receiver;
        break $l$block;
      }
      // Inline function 'com.github.shwaka.kohomology.util.PrintConfigDefaultRegistry.getDefault' call
      var tmp0_getDefault = PrintConfigDefaultRegistry_getInstance();
      if (!tmp0_getDefault.h2n_1.o2(getKClass(CopiedNamePrintConfig))) {
        throw NoSuchElementException_init_$Create$_0('Default value not registered for ' + getKClass(CopiedNamePrintConfig));
      }
      var tmp_0 = tmp0_getDefault.h2n_1.u2(getKClass(CopiedNamePrintConfig));
      var tmp0_elvis_lhs = tmp_0 instanceof CopiedNamePrintConfig ? tmp_0 : null;
      var tmp_1;
      if (tmp0_elvis_lhs == null) {
        throw NoSuchElementException_init_$Create$_0('Failed to cast to ' + getKClass(CopiedNamePrintConfig));
      } else {
        tmp_1 = tmp0_elvis_lhs;
      }
      tmp$ret$0 = tmp_1;
    }
    var showShift = tmp$ret$0.i2n_1;
    var tmp_2;
    switch (printConfig.g1u_1.m1_1) {
      case 0:
      case 2:
        tmp_2 = toPlain(this, showShift);
        break;
      case 1:
        tmp_2 = toTex(this, showShift);
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp_2;
  };
  protoOf(CopiedName).equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (!(other instanceof CopiedName))
      THROW_CCE();
    if (!equals(this.c2n_1, other.c2n_1))
      return false;
    if (!equals(this.d2n_1, other.d2n_1))
      return false;
    if (!(this.e2n_1 == other.e2n_1))
      return false;
    return true;
  };
  protoOf(CopiedName).hashCode = function () {
    var result = hashCode(this.c2n_1);
    result = imul(31, result) + hashCode(this.d2n_1) | 0;
    var tmp = imul(31, result);
    var tmp0_elvis_lhs = this.e2n_1;
    result = tmp + (tmp0_elvis_lhs == null ? 0 : tmp0_elvis_lhs) | 0;
    return result;
  };
  function copy(_this__u8e3s4, degreeGroup, shift, index, showShiftExponentInIdentifier) {
    index = index === VOID ? null : index;
    showShiftExponentInIdentifier = showShiftExponentInIdentifier === VOID ? true : showShiftExponentInIdentifier;
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.model.copy.<anonymous>' call
    var newDegree = degreeGroup.g1g().l1r(_this__u8e3s4.p26_1, shift);
    return new Indeterminate(new CopiedName(_this__u8e3s4.o26_1, shift, index, showShiftExponentInIdentifier), newDegree);
  }
  function Companion_62() {
    Companion_instance_62 = this;
  }
  protoOf(Companion_62).j2n = function () {
    // Inline function 'com.github.shwaka.kohomology.util.PrintConfigDefaultRegistry.registerDefault' call
    var tmp0_registerDefault = PrintConfigDefaultRegistry_getInstance();
    var tmp1_registerDefault = new CopiedNamePrintConfig();
    // Inline function 'kotlin.collections.set' call
    var tmp0_set = tmp0_registerDefault.h2n_1;
    var tmp1_set = getKClass(CopiedNamePrintConfig);
    tmp0_set.z3(tmp1_set, tmp1_registerDefault);
  };
  var Companion_instance_62;
  function Companion_getInstance_63() {
    if (Companion_instance_62 == null)
      new Companion_62();
    return Companion_instance_62;
  }
  function CopiedNamePrintConfig(showShift) {
    Companion_getInstance_63();
    showShift = showShift === VOID ? ShowShift_S_WITH_DEGREE_getInstance() : showShift;
    this.i2n_1 = showShift;
  }
  protoOf(CopiedNamePrintConfig).toString = function () {
    return 'CopiedNamePrintConfig(showShift=' + this.i2n_1 + ')';
  };
  protoOf(CopiedNamePrintConfig).hashCode = function () {
    return this.i2n_1.hashCode();
  };
  protoOf(CopiedNamePrintConfig).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CopiedNamePrintConfig))
      return false;
    var tmp0_other_with_cast = other instanceof CopiedNamePrintConfig ? other : THROW_CCE();
    if (!this.i2n_1.equals(tmp0_other_with_cast.i2n_1))
      return false;
    return true;
  };
  var ShowShift_BAR_instance;
  var ShowShift_S_instance;
  var ShowShift_S_WITH_DEGREE_instance;
  var ShowShift_entriesInitialized;
  function ShowShift_initEntries() {
    if (ShowShift_entriesInitialized)
      return Unit_getInstance();
    ShowShift_entriesInitialized = true;
    ShowShift_BAR_instance = new ShowShift('BAR', 0);
    ShowShift_S_instance = new ShowShift('S', 1);
    ShowShift_S_WITH_DEGREE_instance = new ShowShift('S_WITH_DEGREE', 2);
  }
  function ShowShift(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function ShowShift_BAR_getInstance() {
    ShowShift_initEntries();
    return ShowShift_BAR_instance;
  }
  function ShowShift_S_getInstance() {
    ShowShift_initEntries();
    return ShowShift_S_instance;
  }
  function ShowShift_S_WITH_DEGREE_getInstance() {
    ShowShift_initEntries();
    return ShowShift_S_WITH_DEGREE_instance;
  }
  function Companion_63() {
    Companion_instance_63 = this;
  }
  protoOf(Companion_63).k2n = function (freeDGAlgebra) {
    return new CyclicModel(new CyclicModelFactory(freeDGAlgebra, new StringIndeterminateName('u')));
  };
  var Companion_instance_63;
  function Companion_getInstance_64() {
    if (Companion_instance_63 == null)
      new Companion_63();
    return Companion_instance_63;
  }
  function CyclicModel$inclusion$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_3().n1k(this$0.s2n_1.l2n_1, this$0, this$0.s2n_1.r2n_1);
    };
  }
  function CyclicModel(factory) {
    Companion_getInstance_64();
    this.s2n_1 = factory;
    this.t2n_1 = Companion_getInstance_1().k1g(factory.o2n_1, factory.p2n_1);
    this.u2n_1 = Companion_getInstance_40().l24(this);
    this.v2n_1 = this.s2n_1.l2n_1.c1h();
    this.w2n_1 = this.s2n_1.o2n_1;
    this.x2n_1 = this.s2n_1.o2n_1.h26();
    this.y2n_1 = this.s2n_1.o2n_1.d28();
    this.z2n_1 = this.s2n_1.q2n_1;
    var tmp = this;
    tmp.a2o_1 = lazy(CyclicModel$inclusion$delegate$lambda(this));
  }
  protoOf(CyclicModel).i1h = function () {
    return this.t2n_1.i1h();
  };
  protoOf(CyclicModel).m1g = function () {
    return this.t2n_1.m1g();
  };
  protoOf(CyclicModel).o1g = function () {
    return this.t2n_1.o1g();
  };
  protoOf(CyclicModel).j1h = function () {
    return this.t2n_1.j1h();
  };
  protoOf(CyclicModel).e1h = function () {
    return this.t2n_1.e1h();
  };
  protoOf(CyclicModel).b1i = function () {
    return this.t2n_1.b1i();
  };
  protoOf(CyclicModel).f1h = function () {
    return this.t2n_1.f1h();
  };
  protoOf(CyclicModel).y1g = function () {
    return this.t2n_1.y1g();
  };
  protoOf(CyclicModel).n1g = function () {
    return this.t2n_1.n1g();
  };
  protoOf(CyclicModel).d1h = function () {
    return this.t2n_1.d1h();
  };
  protoOf(CyclicModel).b1h = function () {
    return this.t2n_1.b1h();
  };
  protoOf(CyclicModel).h1h = function () {
    return this.t2n_1.h1h();
  };
  protoOf(CyclicModel).a1i = function () {
    return this.t2n_1.a1i();
  };
  protoOf(CyclicModel).z1h = function () {
    return this.t2n_1.z1h();
  };
  protoOf(CyclicModel).b2o = function (a, b) {
    return this.t2n_1.t1h(a, b);
  };
  protoOf(CyclicModel).t1h = function (a, b) {
    return this.b2o(a, b);
  };
  protoOf(CyclicModel).c2o = function (cohomologyClass) {
    return this.t2n_1.a1h(cohomologyClass);
  };
  protoOf(CyclicModel).a1h = function (cohomologyClass) {
    return this.c2o(cohomologyClass);
  };
  protoOf(CyclicModel).d2o = function (cocycle) {
    return this.t2n_1.z1g(cocycle);
  };
  protoOf(CyclicModel).z1g = function (cocycle) {
    return this.d2o(cocycle);
  };
  protoOf(CyclicModel).e2o = function (gVector) {
    return this.t2n_1.r1h(gVector);
  };
  protoOf(CyclicModel).r1h = function (gVector) {
    return this.e2o(gVector);
  };
  protoOf(CyclicModel).f2o = function (gVector) {
    return this.t2n_1.s1h(gVector);
  };
  protoOf(CyclicModel).s1h = function (gVector) {
    return this.f2o(gVector);
  };
  protoOf(CyclicModel).g2o = function (gVectorOrZero, degree) {
    return this.t2n_1.q1h(gVectorOrZero, degree);
  };
  protoOf(CyclicModel).q1h = function (gVectorOrZero, degree) {
    return this.g2o(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(CyclicModel).h2o = function (gVector) {
    return this.t2n_1.c1i(gVector);
  };
  protoOf(CyclicModel).c1i = function (gVector) {
    return this.h2o(gVector);
  };
  protoOf(CyclicModel).i2o = function (a, b) {
    return this.t2n_1.y1h(a, b);
  };
  protoOf(CyclicModel).y1h = function (a, b) {
    return this.i2o(a, b);
  };
  protoOf(CyclicModel).j2o = function (basisName, degree) {
    return this.t2n_1.m1h(basisName, degree);
  };
  protoOf(CyclicModel).m1h = function (basisName, degree) {
    var tmp = basisName instanceof Monomial ? basisName : THROW_CCE();
    return this.j2o(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(CyclicModel).k2o = function (vector, degree) {
    return this.t2n_1.k1h(vector, degree);
  };
  protoOf(CyclicModel).k1h = function (vector, degree) {
    return this.k2o(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(CyclicModel).l2o = function (vector, degree) {
    return this.t2n_1.l1h(vector, degree);
  };
  protoOf(CyclicModel).l1h = function (vector, degree) {
    return this.l2o(vector, degree);
  };
  protoOf(CyclicModel).g1h = function (degree) {
    return this.t2n_1.g1h(degree);
  };
  protoOf(CyclicModel).l = function (degree) {
    return this.t2n_1.l(degree);
  };
  protoOf(CyclicModel).n1h = function (degree) {
    return this.t2n_1.n1h(degree);
  };
  protoOf(CyclicModel).m2o = function (generatorList) {
    return this.t2n_1.p1g(generatorList);
  };
  protoOf(CyclicModel).p1g = function (generatorList) {
    return this.m2o(generatorList);
  };
  protoOf(CyclicModel).n2o = function (generatorList) {
    return this.t2n_1.q1g(generatorList);
  };
  protoOf(CyclicModel).q1g = function (generatorList) {
    return this.n2o(generatorList);
  };
  protoOf(CyclicModel).o2o = function (ideal) {
    return this.t2n_1.w1g(ideal);
  };
  protoOf(CyclicModel).w1g = function (ideal) {
    return this.o2o(ideal);
  };
  protoOf(CyclicModel).p2o = function (ideal) {
    return this.t2n_1.e1i(ideal);
  };
  protoOf(CyclicModel).e1i = function (ideal) {
    return this.p2o(ideal);
  };
  protoOf(CyclicModel).o1h = function (degree) {
    return this.t2n_1.o1h(degree);
  };
  protoOf(CyclicModel).p1h = function (degree) {
    return this.t2n_1.p1h(degree);
  };
  protoOf(CyclicModel).q2o = function (scalar, gVector) {
    return this.t2n_1.v1h(scalar, gVector);
  };
  protoOf(CyclicModel).v1h = function (scalar, gVector) {
    return this.q2o(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  protoOf(CyclicModel).r2o = function (a, b) {
    return this.t2n_1.w1h(a, b);
  };
  protoOf(CyclicModel).w1h = function (a, b) {
    return this.r2o(a, b);
  };
  protoOf(CyclicModel).s2o = function (a, b) {
    return this.t2n_1.x1h(a, b);
  };
  protoOf(CyclicModel).x1h = function (a, b) {
    return this.s2o(a, b);
  };
  protoOf(CyclicModel).t2o = function (generatorList, text) {
    return this.t2n_1.d1i(generatorList, text);
  };
  protoOf(CyclicModel).d1i = function (generatorList, text) {
    return this.t2o(generatorList, text);
  };
  protoOf(CyclicModel).u2o = function (a, b) {
    return this.t2n_1.u1h(a, b);
  };
  protoOf(CyclicModel).u1h = function (a, b) {
    return this.u2o(a, b);
  };
  protoOf(CyclicModel).g1g = function () {
    return this.u2n_1;
  };
  protoOf(CyclicModel).c1h = function () {
    return this.v2n_1;
  };
  protoOf(CyclicModel).g26 = function () {
    return this.w2n_1;
  };
  protoOf(CyclicModel).h26 = function () {
    return this.x2n_1;
  };
  protoOf(CyclicModel).d28 = function () {
    return this.y2n_1;
  };
  protoOf(CyclicModel).toString = function () {
    return this.s1i(Companion_getInstance_70().f1m_1);
  };
  protoOf(CyclicModel).s1i = function (printConfig) {
    return '(' + this.w2n_1.s1i(printConfig) + ', d)';
  };
  function CyclicModelFactory(freeDGAlgebra, periodicity) {
    this.l2n_1 = freeDGAlgebra;
    this.m2n_1 = periodicity;
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.any' call
      var tmp0_any = this.l2n_1.h26();
      var tmp;
      if (isInterface(tmp0_any, Collection)) {
        tmp = tmp0_any.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_any.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        // Inline function 'com.github.shwaka.kohomology.model.CyclicModelFactory.<anonymous>' call
        if (equals(element.o26_1, this.m2n_1)) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    if (tmp$ret$0) {
      throw IllegalArgumentException_init_$Create$('The free DGA ' + this.l2n_1 + " contains an indeterminate '" + this.m2n_1 + "', " + 'which is given as the generator for periodicity');
    }
    this.n2n_1 = this.l2n_1.y1g();
    var tmp_0 = this;
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.model.CyclicModelFactory.cyclicGAlgebra.<anonymous>' call
    var degreeGroup = this.l2n_1.c1h();
    var tmp_1 = listOf(copy(new Indeterminate(this.m2n_1, degreeGroup.bi(2)), degreeGroup, degreeGroup.c1j()));
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = this.l2n_1.h26();
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator_0 = tmp0_map.f();
    while (tmp0_iterator_0.g()) {
      var item = tmp0_iterator_0.h();
      var tmp$ret$2;
      // Inline function 'com.github.shwaka.kohomology.model.CyclicModelFactory.cyclicGAlgebra.<anonymous>.<anonymous>' call
      tmp$ret$2 = listOf_0([copy(item, degreeGroup, degreeGroup.bi(1)), copy(item, degreeGroup, degreeGroup.c1j())]);
      tmp0_mapTo.a(tmp$ret$2);
    }
    var loopSpaceIndeterminateList = plus(tmp_1, flatten(tmp0_mapTo));
    tmp_0.o2n_1 = Companion_getInstance_41().y29(this.n2n_1, degreeGroup, loopSpaceIndeterminateList);
    var n = this.l2n_1.h26().i();
    var cyclicGeneratorList = this.o2n_1.r1l();
    var tmp_2 = this;
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.model.CyclicModelFactory.<anonymous>' call
    var tmp_3 = listOf(this.o2n_1.z1h());
    // Inline function 'kotlin.collections.map' call
    var tmp0_map_0 = until(0, n);
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
    var inductionVariable = tmp0_map_0.z_1;
    var last = tmp0_map_0.a1_1;
    if (inductionVariable <= last)
      do {
        var item_0 = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$7;
        // Inline function 'com.github.shwaka.kohomology.model.CyclicModelFactory.<anonymous>.<anonymous>' call
        tmp$ret$7 = listOf_0([this.o2n_1.z1h(), cyclicGeneratorList.l(imul(2, item_0) + 1 | 0)]);
        tmp0_mapTo_0.a(tmp$ret$7);
      }
       while (!(item_0 === last));
    var suspensionValueList = plus(tmp_3, flatten(tmp0_mapTo_0));
    tmp_2.q2n_1 = this.o2n_1.b27(suspensionValueList, -1);
    var tmp_4 = this;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map_1 = until(0, n);
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_1 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_1, 10));
    var inductionVariable_0 = tmp0_map_1.z_1;
    var last_0 = tmp0_map_1.a1_1;
    if (inductionVariable_0 <= last_0)
      do {
        var item_1 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var tmp$ret$12;
        // Inline function 'com.github.shwaka.kohomology.model.CyclicModelFactory.<anonymous>' call
        tmp$ret$12 = cyclicGeneratorList.l(imul(2, item_1) + 2 | 0);
        tmp0_mapTo_1.a(tmp$ret$12);
      }
       while (!(item_1 === last_0));
    tmp_4.r2n_1 = this.l2n_1.l27(this.o2n_1, tmp0_mapTo_1);
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.model.CyclicModelFactory.<anonymous>' call
    var u = cyclicGeneratorList.l(0);
    var baseSpaceGeneratorList = this.l2n_1.r1l();
    var tmp_5 = listOf(this.o2n_1.z1h());
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_2 = ArrayList_init_$Create$(collectionSizeOrDefault(baseSpaceGeneratorList, 10));
    var tmp0_iterator_1 = baseSpaceGeneratorList.f();
    while (tmp0_iterator_1.g()) {
      var item_2 = tmp0_iterator_1.h();
      var tmp$ret$19;
      // Inline function 'com.github.shwaka.kohomology.model.CyclicModelFactory.<anonymous>.<anonymous>' call
      // Inline function 'kotlin.run' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'com.github.shwaka.kohomology.model.CyclicModelFactory.<anonymous>.<anonymous>.<anonymous>' call
      var dv = this.l2n_1.g1g().r1g().s1g(item_2);
      // Inline function 'kotlin.run' call
      var tmp1_run = this.o2n_1.g1g();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'com.github.shwaka.kohomology.model.CyclicModelFactory.<anonymous>.<anonymous>.<anonymous>' call
      tmp$ret$19 = listOf_0([tmp1_run.g1k(this.q2n_1.s1g(this.r2n_1.s1g(dv))), tmp1_run.o1j(this.r2n_1.s1g(dv), tmp1_run.x1j(u, this.q2n_1.s1g(this.r2n_1.s1g(item_2))))]);
      tmp0_mapTo_2.a(tmp$ret$19);
    }
    var differentialValueList = plus(tmp_5, flatten(tmp0_mapTo_2));
    this.p2n_1 = this.o2n_1.b27(differentialValueList, 1);
  }
  function withShiftDegreeForMultiDegree($this, freeDGAlgebra) {
    var degreeGroup = freeDGAlgebra.c1h();
    if (!(degreeGroup instanceof MultiDegreeGroup))
      throw new NotImplementedError('not supported!');
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.any' call
      var tmp0_any = degreeGroup.j20_1;
      var tmp;
      if (isInterface(tmp0_any, Collection)) {
        tmp = tmp0_any.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_any.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        // Inline function 'com.github.shwaka.kohomology.model.Companion.withShiftDegreeForMultiDegree.<anonymous>' call
        if (element.r20_1 === 'S') {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    if (tmp$ret$0)
      throw IllegalArgumentException_init_$Create$('indeterminateList cannot contain an indeterminate of name "S"');
    var newDegreeGroup = new MultiDegreeGroup(plus(degreeGroup.j20_1, listOf(new DegreeIndeterminate('S', 0))));
    // Inline function 'kotlin.run' call
    var tmp1_run = newDegreeGroup.g1g();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.model.Companion.withShiftDegreeForMultiDegree.<anonymous>' call
    var s = last(newDegreeGroup.r1l());
    var shiftDegree = tmp1_run.u1z(tmp1_run.w1z(-2, s), 1);
    var degreeMorphism = new MultiDegreeMorphism(degreeGroup, newDegreeGroup, dropLast(newDegreeGroup.r1l(), 1));
    var newFreeDGAlgebra = freeDGAlgebra.m27(degreeMorphism).j3();
    return FreeLoopSpace_init_$Create$(newFreeDGAlgebra, shiftDegree);
  }
  function withShiftDegreeForIntDegree($this, freeDGAlgebra) {
    var degreeGroup = freeDGAlgebra.c1h();
    if (!(degreeGroup instanceof IntDegreeGroup))
      throw new NotImplementedError('not supported!');
    var newDegreeGroup = new MultiDegreeGroup(listOf(new DegreeIndeterminate('S', 0)));
    // Inline function 'kotlin.run' call
    var tmp0_run = newDegreeGroup.g1g();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.model.Companion.withShiftDegreeForIntDegree.<anonymous>' call
    var s = last(newDegreeGroup.r1l());
    var shiftDegree = tmp0_run.u1z(tmp0_run.w1z(-2, s), 1);
    var degreeMorphism = new InclusionFromIntDegreeToMultiDegree(newDegreeGroup);
    var newFreeDGAlgebra = freeDGAlgebra.m27(degreeMorphism).j3();
    return FreeLoopSpace_init_$Create$(newFreeDGAlgebra, shiftDegree);
  }
  function FreeLoopSpace_init_$Init$(freeDGAlgebra, shiftDegree, $this) {
    shiftDegree = shiftDegree === VOID ? null : shiftDegree;
    FreeLoopSpace.call($this, new FreeLoopSpaceFactory(freeDGAlgebra, shiftDegree));
    return $this;
  }
  function FreeLoopSpace_init_$Create$(freeDGAlgebra, shiftDegree) {
    return FreeLoopSpace_init_$Init$(freeDGAlgebra, shiftDegree, objectCreate(protoOf(FreeLoopSpace)));
  }
  function Companion_64() {
    Companion_instance_64 = this;
    this.v2o_1 = 'S';
  }
  protoOf(Companion_64).w2o = function (freeDGAlgebra) {
    var tmp0_subject = freeDGAlgebra.c1h();
    var tmp;
    if (tmp0_subject instanceof IntDegreeGroup) {
      tmp = withShiftDegreeForIntDegree(this, isInterface(freeDGAlgebra, FreeDGAlgebra) ? freeDGAlgebra : THROW_CCE());
    } else {
      if (tmp0_subject instanceof MultiDegreeGroup) {
        tmp = withShiftDegreeForMultiDegree(this, isInterface(freeDGAlgebra, FreeDGAlgebra) ? freeDGAlgebra : THROW_CCE());
      } else {
        throw UnsupportedOperationException_init_$Create$('withShiftDegree is supported only for IntDegree and MultiDegree');
      }
    }
    return tmp;
  };
  var Companion_instance_64;
  function Companion_getInstance_65() {
    if (Companion_instance_64 == null)
      new Companion_64();
    return Companion_instance_64;
  }
  function FreeLoopSpace$inclusion$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_3().n1k(this$0.e2p_1.x2o_1, this$0, this$0.e2p_1.d2p_1);
    };
  }
  function FreeLoopSpace(factory) {
    Companion_getInstance_65();
    this.e2p_1 = factory;
    this.f2p_1 = Companion_getInstance_1().k1g(factory.a2p_1, factory.b2p_1);
    this.g2p_1 = Companion_getInstance_40().l24(this);
    this.h2p_1 = this.e2p_1.x2o_1.c1h();
    this.i2p_1 = this.e2p_1.a2p_1;
    this.j2p_1 = this.e2p_1.a2p_1.h26();
    this.k2p_1 = this.e2p_1.a2p_1.d28();
    this.l2p_1 = Companion_getInstance_4().d1l(this, this.e2p_1.c2p_1);
    var tmp = this;
    tmp.m2p_1 = lazy(FreeLoopSpace$inclusion$delegate$lambda(this));
    this.n2p_1 = this.e2p_1.z2o_1;
    this.o2p_1 = this.e2p_1.x2o_1;
  }
  protoOf(FreeLoopSpace).i1h = function () {
    return this.f2p_1.i1h();
  };
  protoOf(FreeLoopSpace).m1g = function () {
    return this.f2p_1.m1g();
  };
  protoOf(FreeLoopSpace).o1g = function () {
    return this.f2p_1.o1g();
  };
  protoOf(FreeLoopSpace).j1h = function () {
    return this.f2p_1.j1h();
  };
  protoOf(FreeLoopSpace).e1h = function () {
    return this.f2p_1.e1h();
  };
  protoOf(FreeLoopSpace).b1i = function () {
    return this.f2p_1.b1i();
  };
  protoOf(FreeLoopSpace).f1h = function () {
    return this.f2p_1.f1h();
  };
  protoOf(FreeLoopSpace).y1g = function () {
    return this.f2p_1.y1g();
  };
  protoOf(FreeLoopSpace).n1g = function () {
    return this.f2p_1.n1g();
  };
  protoOf(FreeLoopSpace).d1h = function () {
    return this.f2p_1.d1h();
  };
  protoOf(FreeLoopSpace).b1h = function () {
    return this.f2p_1.b1h();
  };
  protoOf(FreeLoopSpace).h1h = function () {
    return this.f2p_1.h1h();
  };
  protoOf(FreeLoopSpace).a1i = function () {
    return this.f2p_1.a1i();
  };
  protoOf(FreeLoopSpace).z1h = function () {
    return this.f2p_1.z1h();
  };
  protoOf(FreeLoopSpace).b2o = function (a, b) {
    return this.f2p_1.t1h(a, b);
  };
  protoOf(FreeLoopSpace).t1h = function (a, b) {
    return this.b2o(a, b);
  };
  protoOf(FreeLoopSpace).c2o = function (cohomologyClass) {
    return this.f2p_1.a1h(cohomologyClass);
  };
  protoOf(FreeLoopSpace).a1h = function (cohomologyClass) {
    return this.c2o(cohomologyClass);
  };
  protoOf(FreeLoopSpace).d2o = function (cocycle) {
    return this.f2p_1.z1g(cocycle);
  };
  protoOf(FreeLoopSpace).z1g = function (cocycle) {
    return this.d2o(cocycle);
  };
  protoOf(FreeLoopSpace).e2o = function (gVector) {
    return this.f2p_1.r1h(gVector);
  };
  protoOf(FreeLoopSpace).r1h = function (gVector) {
    return this.e2o(gVector);
  };
  protoOf(FreeLoopSpace).f2o = function (gVector) {
    return this.f2p_1.s1h(gVector);
  };
  protoOf(FreeLoopSpace).s1h = function (gVector) {
    return this.f2o(gVector);
  };
  protoOf(FreeLoopSpace).g2o = function (gVectorOrZero, degree) {
    return this.f2p_1.q1h(gVectorOrZero, degree);
  };
  protoOf(FreeLoopSpace).q1h = function (gVectorOrZero, degree) {
    return this.g2o(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(FreeLoopSpace).h2o = function (gVector) {
    return this.f2p_1.c1i(gVector);
  };
  protoOf(FreeLoopSpace).c1i = function (gVector) {
    return this.h2o(gVector);
  };
  protoOf(FreeLoopSpace).i2o = function (a, b) {
    return this.f2p_1.y1h(a, b);
  };
  protoOf(FreeLoopSpace).y1h = function (a, b) {
    return this.i2o(a, b);
  };
  protoOf(FreeLoopSpace).j2o = function (basisName, degree) {
    return this.f2p_1.m1h(basisName, degree);
  };
  protoOf(FreeLoopSpace).m1h = function (basisName, degree) {
    var tmp = basisName instanceof Monomial ? basisName : THROW_CCE();
    return this.j2o(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(FreeLoopSpace).k2o = function (vector, degree) {
    return this.f2p_1.k1h(vector, degree);
  };
  protoOf(FreeLoopSpace).k1h = function (vector, degree) {
    return this.k2o(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  protoOf(FreeLoopSpace).l2o = function (vector, degree) {
    return this.f2p_1.l1h(vector, degree);
  };
  protoOf(FreeLoopSpace).l1h = function (vector, degree) {
    return this.l2o(vector, degree);
  };
  protoOf(FreeLoopSpace).g1h = function (degree) {
    return this.f2p_1.g1h(degree);
  };
  protoOf(FreeLoopSpace).l = function (degree) {
    return this.f2p_1.l(degree);
  };
  protoOf(FreeLoopSpace).n1h = function (degree) {
    return this.f2p_1.n1h(degree);
  };
  protoOf(FreeLoopSpace).m2o = function (generatorList) {
    return this.f2p_1.p1g(generatorList);
  };
  protoOf(FreeLoopSpace).p1g = function (generatorList) {
    return this.m2o(generatorList);
  };
  protoOf(FreeLoopSpace).n2o = function (generatorList) {
    return this.f2p_1.q1g(generatorList);
  };
  protoOf(FreeLoopSpace).q1g = function (generatorList) {
    return this.n2o(generatorList);
  };
  protoOf(FreeLoopSpace).o2o = function (ideal) {
    return this.f2p_1.w1g(ideal);
  };
  protoOf(FreeLoopSpace).w1g = function (ideal) {
    return this.o2o(ideal);
  };
  protoOf(FreeLoopSpace).p2o = function (ideal) {
    return this.f2p_1.e1i(ideal);
  };
  protoOf(FreeLoopSpace).e1i = function (ideal) {
    return this.p2o(ideal);
  };
  protoOf(FreeLoopSpace).o1h = function (degree) {
    return this.f2p_1.o1h(degree);
  };
  protoOf(FreeLoopSpace).p1h = function (degree) {
    return this.f2p_1.p1h(degree);
  };
  protoOf(FreeLoopSpace).q2o = function (scalar, gVector) {
    return this.f2p_1.v1h(scalar, gVector);
  };
  protoOf(FreeLoopSpace).v1h = function (scalar, gVector) {
    return this.q2o(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  protoOf(FreeLoopSpace).r2o = function (a, b) {
    return this.f2p_1.w1h(a, b);
  };
  protoOf(FreeLoopSpace).w1h = function (a, b) {
    return this.r2o(a, b);
  };
  protoOf(FreeLoopSpace).s2o = function (a, b) {
    return this.f2p_1.x1h(a, b);
  };
  protoOf(FreeLoopSpace).x1h = function (a, b) {
    return this.s2o(a, b);
  };
  protoOf(FreeLoopSpace).t2o = function (generatorList, text) {
    return this.f2p_1.d1i(generatorList, text);
  };
  protoOf(FreeLoopSpace).d1i = function (generatorList, text) {
    return this.t2o(generatorList, text);
  };
  protoOf(FreeLoopSpace).u2o = function (a, b) {
    return this.f2p_1.u1h(a, b);
  };
  protoOf(FreeLoopSpace).u1h = function (a, b) {
    return this.u2o(a, b);
  };
  protoOf(FreeLoopSpace).g1g = function () {
    return this.g2p_1;
  };
  protoOf(FreeLoopSpace).c1h = function () {
    return this.h2p_1;
  };
  protoOf(FreeLoopSpace).g26 = function () {
    return this.i2p_1;
  };
  protoOf(FreeLoopSpace).h26 = function () {
    return this.j2p_1;
  };
  protoOf(FreeLoopSpace).d28 = function () {
    return this.k2p_1;
  };
  protoOf(FreeLoopSpace).toString = function () {
    return this.s1i(Companion_getInstance_70().f1m_1);
  };
  protoOf(FreeLoopSpace).s1i = function (printConfig) {
    return '(' + this.i2p_1.s1i(printConfig) + ', d)';
  };
  function CopiedName$Companion$getInternalPrintConfig$ref($boundThis) {
    var l = function (p0) {
      return $boundThis.g2n(p0);
    };
    l.callableName = 'getInternalPrintConfig';
    return l;
  }
  function FreeLoopSpaceFactory(freeDGAlgebra, shiftDegree) {
    this.x2o_1 = freeDGAlgebra;
    this.y2o_1 = this.x2o_1.y1g();
    var tmp = this;
    tmp.z2o_1 = shiftDegree == null ? this.x2o_1.c1h().bi(1) : shiftDegree;
    var tmp_0 = this;
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.model.FreeLoopSpaceFactory.loopSpaceGAlgebra.<anonymous>' call
    var degreeGroup = this.x2o_1.c1h();
    var shift = this.z2o_1;
    // Inline function 'kotlin.let' call
    var tmp0_let = this.x2o_1.h26();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.model.FreeLoopSpaceFactory.loopSpaceGAlgebra.<anonymous>.<anonymous>' call
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_let, 10));
    var tmp0_iterator = tmp0_let.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.model.FreeLoopSpaceFactory.loopSpaceGAlgebra.<anonymous>.<anonymous>.<anonymous>' call
      tmp$ret$0 = copy(item, degreeGroup, degreeGroup.c1j());
      tmp0_mapTo.a(tmp$ret$0);
    }
    var tmp_1 = tmp0_mapTo;
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_let, 10));
    var tmp0_iterator_0 = tmp0_let.f();
    while (tmp0_iterator_0.g()) {
      var item_0 = tmp0_iterator_0.h();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.model.FreeLoopSpaceFactory.loopSpaceGAlgebra.<anonymous>.<anonymous>.<anonymous>' call
      tmp$ret$3 = copy(item_0, degreeGroup, shift, VOID, false);
      tmp0_mapTo_0.a(tmp$ret$3);
    }
    var loopSpaceIndeterminateList = plus(tmp_1, tmp0_mapTo_0);
    var tmp_2 = Companion_getInstance_41();
    tmp_0.a2p_1 = tmp_2.a27(this.y2o_1, degreeGroup, loopSpaceIndeterminateList, CopiedName$Companion$getInternalPrintConfig$ref(Companion_getInstance_62()));
    var n = this.x2o_1.h26().i();
    var loopSpaceGeneratorList = this.a2p_1.r1l();
    var tmp_3 = this;
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.model.FreeLoopSpaceFactory.<anonymous>' call
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.model.FreeLoopSpaceFactory.<anonymous>.<anonymous>' call
    var suspensionDegree = this.x2o_1.c1h().g1g().x1z(this.z2o_1);
    var tmp_4 = takeLast(loopSpaceGeneratorList, n);
    // Inline function 'kotlin.collections.List' call
    // Inline function 'kotlin.collections.MutableList' call
    var list = ArrayList_init_$Create$(n);
    // Inline function 'kotlin.repeat' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    if (inductionVariable < n)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.collections.MutableList.<anonymous>' call
        var tmp$ret$12;
        // Inline function 'com.github.shwaka.kohomology.model.FreeLoopSpaceFactory.<anonymous>.<anonymous>' call
        tmp$ret$12 = this.a2p_1.z1h();
        list.a(tmp$ret$12);
      }
       while (inductionVariable < n);
    var suspensionValueList = plus(tmp_4, list);
    tmp_3.c2p_1 = this.a2p_1.q26(suspensionValueList, suspensionDegree);
    this.d2p_1 = this.x2o_1.l27(this.a2p_1, take(loopSpaceGeneratorList, n));
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.model.FreeLoopSpaceFactory.<anonymous>' call
    var baseSpaceGeneratorList = this.x2o_1.r1l();
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_1 = ArrayList_init_$Create$(collectionSizeOrDefault(baseSpaceGeneratorList, 10));
    var tmp0_iterator_1 = baseSpaceGeneratorList.f();
    while (tmp0_iterator_1.g()) {
      var item_1 = tmp0_iterator_1.h();
      var tmp$ret$19;
      // Inline function 'com.github.shwaka.kohomology.model.FreeLoopSpaceFactory.<anonymous>.<anonymous>' call
      // Inline function 'kotlin.run' call
      var tmp0_run = this.x2o_1.g1g();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'com.github.shwaka.kohomology.model.FreeLoopSpaceFactory.<anonymous>.<anonymous>.<anonymous>' call
      tmp$ret$19 = this.d2p_1.s1g(tmp0_run.r1g().s1g(item_1));
      tmp0_mapTo_1.a(tmp$ret$19);
    }
    var valueList1 = tmp0_mapTo_1;
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_2 = ArrayList_init_$Create$(collectionSizeOrDefault(baseSpaceGeneratorList, 10));
    var tmp0_iterator_2 = baseSpaceGeneratorList.f();
    while (tmp0_iterator_2.g()) {
      var item_2 = tmp0_iterator_2.h();
      var tmp$ret$26;
      // Inline function 'com.github.shwaka.kohomology.model.FreeLoopSpaceFactory.<anonymous>.<anonymous>' call
      // Inline function 'kotlin.run' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'com.github.shwaka.kohomology.model.FreeLoopSpaceFactory.<anonymous>.<anonymous>.<anonymous>' call
      var dv = this.x2o_1.g1g().r1g().s1g(item_2);
      // Inline function 'kotlin.run' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'com.github.shwaka.kohomology.model.FreeLoopSpaceFactory.<anonymous>.<anonymous>.<anonymous>' call
      tmp$ret$26 = this.a2p_1.g1g().g1k(this.c2p_1.s1g(this.d2p_1.s1g(dv)));
      tmp0_mapTo_2.a(tmp$ret$26);
    }
    var valueList2 = tmp0_mapTo_2;
    var differentialValueList = plus(valueList1, valueList2);
    this.b2p_1 = this.a2p_1.b27(differentialValueList, 1);
  }
  function Companion_65() {
    Companion_instance_65 = this;
  }
  protoOf(Companion_65).j2n = function () {
    // Inline function 'com.github.shwaka.kohomology.util.PrintConfigDefaultRegistry.registerDefault' call
    var tmp0_registerDefault = PrintConfigDefaultRegistry_getInstance();
    var tmp1_registerDefault = new EndElementPrintConfig();
    // Inline function 'kotlin.collections.set' call
    var tmp0_set = tmp0_registerDefault.h2n_1;
    var tmp1_set = getKClass(EndElementPrintConfig);
    tmp0_set.z3(tmp1_set, tmp1_registerDefault);
  };
  var Companion_instance_65;
  function Companion_getInstance_66() {
    if (Companion_instance_65 == null)
      new Companion_65();
    return Companion_instance_65;
  }
  function EndElementPrintConfig(format) {
    Companion_getInstance_66();
    format = format === VOID ? new Indexed() : format;
    this.p2p_1 = format;
  }
  protoOf(EndElementPrintConfig).toString = function () {
    return 'EndElementPrintConfig(format=' + this.p2p_1 + ')';
  };
  protoOf(EndElementPrintConfig).hashCode = function () {
    return hashCode(this.p2p_1);
  };
  protoOf(EndElementPrintConfig).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof EndElementPrintConfig))
      return false;
    var tmp0_other_with_cast = other instanceof EndElementPrintConfig ? other : THROW_CCE();
    if (!equals(this.p2p_1, tmp0_other_with_cast.p2p_1))
      return false;
    return true;
  };
  function Indexed(symbol) {
    symbol = symbol === VOID ? 'f' : symbol;
    this.q2p_1 = symbol;
  }
  protoOf(Indexed).toString = function () {
    return 'Indexed(symbol=' + this.q2p_1 + ')';
  };
  protoOf(Indexed).hashCode = function () {
    return getStringHashCode(this.q2p_1);
  };
  protoOf(Indexed).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Indexed))
      return false;
    var tmp0_other_with_cast = other instanceof Indexed ? other : THROW_CCE();
    if (!(this.q2p_1 === tmp0_other_with_cast.q2p_1))
      return false;
    return true;
  };
  function Companion_66() {
    Companion_instance_66 = this;
  }
  protoOf(Companion_66).r2p = function (numerator, denominator) {
    if (numerator.tj())
      return KotlinRationalField_getInstance().u2p_1;
    if (numerator.equals(denominator))
      return KotlinRationalField_getInstance().v2p_1;
    var red = reduce(numerator, denominator);
    return new KotlinRational(red.x3_1, red.y3_1);
  };
  protoOf(Companion_66).a2q = function (numerator, denominator) {
    return Companion_getInstance_67().r2p(BigInteger_init_$Create$(numerator), BigInteger_init_$Create$(denominator));
  };
  protoOf(Companion_66).b2q = function (numerator, denominator) {
    if (numerator.tj())
      return KotlinRationalField_getInstance().u2p_1;
    if (numerator.equals(denominator))
      return KotlinRationalField_getInstance().v2p_1;
    // Inline function 'com.github.shwaka.kococo.debugOnly' call
    return new KotlinRational(numerator, denominator);
  };
  protoOf(Companion_66).c2q = function (numerator, denominator) {
    // Inline function 'com.github.shwaka.kococo.debugOnly' call
    return new KotlinRational(BigInteger_init_$Create$(numerator), BigInteger_init_$Create$(denominator));
  };
  var Companion_instance_66;
  function Companion_getInstance_67() {
    if (Companion_instance_66 == null)
      new Companion_66();
    return Companion_instance_66;
  }
  function toStringWithoutSign($this) {
    var numeratorAbs = $this.d2q_1.sj();
    return $this.d2q_1.equals(Companion_getInstance().lj_1) ? '0' : $this.e2q_1.equals(Companion_getInstance().mj_1) ? numeratorAbs.toString() : '' + numeratorAbs + '/' + $this.e2q_1;
  }
  function toTexWithoutSign($this) {
    var numeratorAbs = $this.d2q_1.sj();
    return $this.d2q_1.equals(Companion_getInstance().lj_1) ? '0' : $this.e2q_1.equals(Companion_getInstance().mj_1) ? numeratorAbs.toString() : '\\frac{' + numeratorAbs + '}{' + $this.e2q_1 + '}';
  }
  function toTex_0($this) {
    var tmp;
    if ($this.d2q_1.equals(Companion_getInstance().lj_1)) {
      tmp = '0';
    } else if ($this.e2q_1.equals(Companion_getInstance().mj_1)) {
      tmp = $this.d2q_1.toString();
    } else {
      var sign = $this.d2q_1.mi() ? '-' : '';
      tmp = sign + '\\frac{' + $this.d2q_1.sj() + '}{' + $this.e2q_1 + '}';
    }
    return tmp;
  }
  function KotlinRational(numerator, denominator) {
    Companion_getInstance_67();
    this.d2q_1 = numerator;
    this.e2q_1 = denominator;
  }
  protoOf(KotlinRational).tj = function () {
    return this.d2q_1.tj();
  };
  protoOf(KotlinRational).p2k = function () {
    return this.d2q_1.ni() ? true : this.d2q_1.tj();
  };
  protoOf(KotlinRational).f2q = function (printConfig, withSign) {
    var tmp;
    switch (printConfig.g1u_1.m1_1) {
      case 0:
      case 2:
        tmp = withSign ? this.toString() : toStringWithoutSign(this);
        break;
      case 1:
        tmp = withSign ? toTex_0(this) : toTexWithoutSign(this);
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  protoOf(KotlinRational).toString = function () {
    return this.d2q_1.equals(Companion_getInstance().lj_1) ? '0' : this.e2q_1.equals(Companion_getInstance().mj_1) ? this.d2q_1.toString() : '' + this.d2q_1 + '/' + this.e2q_1;
  };
  protoOf(KotlinRational).equals = function (other) {
    if (this === other)
      return true;
    if (other == null)
      return false;
    if (!getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (!(other instanceof KotlinRational))
      THROW_CCE();
    if (!this.d2q_1.equals(other.d2q_1))
      return false;
    if (!this.e2q_1.equals(other.e2q_1))
      return false;
    return true;
  };
  protoOf(KotlinRational).hashCode = function () {
    var result = this.d2q_1.hashCode();
    result = imul(31, result) + this.e2q_1.hashCode() | 0;
    return result;
  };
  function KotlinRationalField() {
    KotlinRationalField_instance = this;
    this.s2p_1 = 0;
    this.t2p_1 = Companion_getInstance_55().j2k(this);
    this.u2p_1 = this.bi(0);
    this.v2p_1 = this.bi(1);
    this.w2p_1 = this.bi(2);
    this.x2p_1 = this.bi(3);
    this.y2p_1 = this.bi(4);
    this.z2p_1 = this.bi(5);
  }
  protoOf(KotlinRationalField).g1g = function () {
    return this.t2p_1;
  };
  protoOf(KotlinRationalField).g2q = function (scalar) {
    return true;
  };
  protoOf(KotlinRationalField).h2j = function (scalar) {
    return this.g2q(scalar instanceof KotlinRational ? scalar : THROW_CCE());
  };
  protoOf(KotlinRationalField).h2q = function (a, b) {
    var numerator = a.d2q_1.si(b.e2q_1).qi(b.d2q_1.si(a.e2q_1));
    var denominator = a.e2q_1.si(b.e2q_1);
    return Companion_getInstance_67().r2p(numerator, denominator);
  };
  protoOf(KotlinRationalField).k2k = function (a, b) {
    var tmp = a instanceof KotlinRational ? a : THROW_CCE();
    return this.h2q(tmp, b instanceof KotlinRational ? b : THROW_CCE());
  };
  protoOf(KotlinRationalField).i2q = function (a, b) {
    var numerator = a.d2q_1.si(b.e2q_1).ri(b.d2q_1.si(a.e2q_1));
    var denominator = a.e2q_1.si(b.e2q_1);
    return Companion_getInstance_67().r2p(numerator, denominator);
  };
  protoOf(KotlinRationalField).l2k = function (a, b) {
    var tmp = a instanceof KotlinRational ? a : THROW_CCE();
    return this.i2q(tmp, b instanceof KotlinRational ? b : THROW_CCE());
  };
  protoOf(KotlinRationalField).j2q = function (a, b) {
    return Companion_getInstance_67().r2p(a.d2q_1.si(b.d2q_1), a.e2q_1.si(b.e2q_1));
  };
  protoOf(KotlinRationalField).m2k = function (a, b) {
    var tmp = a instanceof KotlinRational ? a : THROW_CCE();
    return this.j2q(tmp, b instanceof KotlinRational ? b : THROW_CCE());
  };
  protoOf(KotlinRationalField).k2q = function (a, b) {
    if (b.equals(Companion_getInstance_67().a2q(0, 1))) {
      throw ArithmeticException_init_$Create$('division by zero (KotlinRational(0, 1))');
    }
    return Companion_getInstance_67().r2p(a.d2q_1.si(b.e2q_1), a.e2q_1.si(b.d2q_1));
  };
  protoOf(KotlinRationalField).o2k = function (a, b) {
    var tmp = a instanceof KotlinRational ? a : THROW_CCE();
    return this.k2q(tmp, b instanceof KotlinRational ? b : THROW_CCE());
  };
  protoOf(KotlinRationalField).l2q = function (scalar) {
    return Companion_getInstance_67().b2q(scalar.d2q_1.t4(), scalar.e2q_1);
  };
  protoOf(KotlinRationalField).n2k = function (scalar) {
    return this.l2q(scalar instanceof KotlinRational ? scalar : THROW_CCE());
  };
  protoOf(KotlinRationalField).bi = function (n) {
    return Companion_getInstance_67().c2q(n, 1);
  };
  protoOf(KotlinRationalField).c1j = function () {
    return this.u2p_1;
  };
  protoOf(KotlinRationalField).b1j = function () {
    return this.v2p_1;
  };
  protoOf(KotlinRationalField).toString = function () {
    return 'RationalField';
  };
  var KotlinRationalField_instance;
  function KotlinRationalField_getInstance() {
    if (KotlinRationalField_instance == null)
      new KotlinRationalField();
    return KotlinRationalField_instance;
  }
  function reduce(numerator, denominator) {
    if (numerator.equals(Companion_getInstance().lj_1))
      return new Pair(Companion_getInstance().lj_1, Companion_getInstance().mj_1);
    var g = gcd(numerator, denominator);
    var tmp;
    switch (denominator.li()) {
      case 1:
        tmp = numerator.ti(g);
        break;
      case -1:
        tmp = numerator.t4().ti(g);
        break;
      default:
        throw Exception_init_$Create$("This can't happen!");
    }
    var num = tmp;
    var den = denominator.sj().ti(g);
    return new Pair(num, den);
  }
  function gcd(a, b) {
    if (a.equals(Companion_getInstance().lj_1) ? true : b.equals(Companion_getInstance().lj_1)) {
      throw ArithmeticException_init_$Create$('gcd not defined for 0');
    }
    var aAbs = a.sj();
    var bAbs = b.sj();
    var tmp;
    if (aAbs.uj(bAbs) >= 0) {
      tmp = gcdInternal(aAbs, bAbs);
    } else {
      tmp = gcdInternal(bAbs, aAbs);
    }
    return tmp;
  }
  function gcdInternal(a, b) {
    var a_0 = a;
    var b_0 = b;
    $l$1: do {
      $l$0: do {
        if (b_0.equals(Companion_getInstance().lj_1))
          return a_0;
        var tmp0 = b_0;
        var tmp1 = a_0.ui(b_0);
        a_0 = tmp0;
        b_0 = tmp1;
        continue $l$0;
      }
       while (false);
    }
     while (true);
  }
  function get_DenseNumVectorSpaceOverRational() {
    _init_properties_Rational_kt__kogtyq();
    return DenseNumVectorSpaceOverRational;
  }
  var DenseNumVectorSpaceOverRational;
  function get_DenseMatrixSpaceOverRational() {
    _init_properties_Rational_kt__kogtyq();
    return DenseMatrixSpaceOverRational;
  }
  var DenseMatrixSpaceOverRational;
  function get_SparseNumVectorSpaceOverRational() {
    _init_properties_Rational_kt__kogtyq();
    return SparseNumVectorSpaceOverRational;
  }
  var SparseNumVectorSpaceOverRational;
  function get_SparseMatrixSpaceOverRational() {
    _init_properties_Rational_kt__kogtyq();
    return SparseMatrixSpaceOverRational;
  }
  var SparseMatrixSpaceOverRational;
  function get_DecomposedSparseMatrixSpaceOverRational() {
    _init_properties_Rational_kt__kogtyq();
    return DecomposedSparseMatrixSpaceOverRational;
  }
  var DecomposedSparseMatrixSpaceOverRational;
  var DenseNumVectorSpaceOverBigRational$delegate;
  var DenseMatrixSpaceOverBigRational$delegate;
  var SparseNumVectorSpaceOverBigRational$delegate;
  var SparseMatrixSpaceOverBigRational$delegate;
  var DecomposedSparseMatrixSpaceOverBigRational$delegate;
  function DenseNumVectorSpaceOverRational$factory() {
    return getPropertyCallableRef('DenseNumVectorSpaceOverRational', 0, KProperty0, function () {
      return get_DenseNumVectorSpaceOverRational();
    }, null);
  }
  function DenseMatrixSpaceOverRational$factory() {
    return getPropertyCallableRef('DenseMatrixSpaceOverRational', 0, KProperty0, function () {
      return get_DenseMatrixSpaceOverRational();
    }, null);
  }
  function SparseNumVectorSpaceOverRational$factory() {
    return getPropertyCallableRef('SparseNumVectorSpaceOverRational', 0, KProperty0, function () {
      return get_SparseNumVectorSpaceOverRational();
    }, null);
  }
  function SparseMatrixSpaceOverRational$factory() {
    return getPropertyCallableRef('SparseMatrixSpaceOverRational', 0, KProperty0, function () {
      return get_SparseMatrixSpaceOverRational();
    }, null);
  }
  function DecomposedSparseMatrixSpaceOverRational$factory() {
    return getPropertyCallableRef('DecomposedSparseMatrixSpaceOverRational', 0, KProperty0, function () {
      return get_DecomposedSparseMatrixSpaceOverRational();
    }, null);
  }
  var properties_initialized_Rational_kt_ue1234;
  function _init_properties_Rational_kt__kogtyq() {
    if (!properties_initialized_Rational_kt_ue1234) {
      properties_initialized_Rational_kt_ue1234 = true;
      DenseNumVectorSpaceOverRational = Companion_getInstance_54().b2j(KotlinRationalField_getInstance());
      DenseMatrixSpaceOverRational = Companion_getInstance_53().l2h(get_DenseNumVectorSpaceOverRational());
      SparseNumVectorSpaceOverRational = Companion_getInstance_60().b2j(KotlinRationalField_getInstance());
      SparseMatrixSpaceOverRational = Companion_getInstance_58().f2l(get_SparseNumVectorSpaceOverRational());
      DecomposedSparseMatrixSpaceOverRational = Companion_getInstance_59().f2l(get_SparseNumVectorSpaceOverRational());
      DenseNumVectorSpaceOverBigRational$delegate = DenseNumVectorSpaceOverRational$factory();
      DenseMatrixSpaceOverBigRational$delegate = DenseMatrixSpaceOverRational$factory();
      SparseNumVectorSpaceOverBigRational$delegate = SparseNumVectorSpaceOverRational$factory();
      SparseMatrixSpaceOverBigRational$delegate = SparseMatrixSpaceOverRational$factory();
      DecomposedSparseMatrixSpaceOverBigRational$delegate = DecomposedSparseMatrixSpaceOverRational$factory();
    }
  }
  function get_alphabeticalCategories() {
    _init_properties_Identifier_kt__cxfbbd();
    return alphabeticalCategories;
  }
  var alphabeticalCategories;
  function get_numericalCategories() {
    _init_properties_Identifier_kt__cxfbbd();
    return numericalCategories;
  }
  var numericalCategories;
  function get_punctuationCategories() {
    _init_properties_Identifier_kt__cxfbbd();
    return punctuationCategories;
  }
  var punctuationCategories;
  function Companion_67() {
    Companion_instance_67 = this;
    this.i22_1 = plus(get_alphabeticalCategories(), get_punctuationCategories());
  }
  protoOf(Companion_67).m2q = function (char) {
    return this.i22_1.g1(get_category(char));
  };
  protoOf(Companion_67).n2q = function (name) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.text.isNotEmpty' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(charSequenceLength(name) > 0)) {
      // Inline function 'com.github.shwaka.kohomology.util.Companion.validateName.<anonymous>' call
      var message = 'Identifier name (' + name + ') must be non-empty.';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!this.m2q(charSequenceGet(name, 0))) {
      // Inline function 'com.github.shwaka.kohomology.util.Companion.validateName.<anonymous>' call
      var message_0 = 'Identifier name (' + name + ') must start with ' + 'alphabets (including greeks) or underscore, ' + ('but it starts with "' + new Char(charSequenceGet(name, 0)) + '".');
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
    Companion_getInstance_69().o2q(name, getKClass(Identifier_0).eb());
  };
  var Companion_instance_67;
  function Companion_getInstance_68() {
    if (Companion_instance_67 == null)
      new Companion_67();
    return Companion_instance_67;
  }
  function Identifier_0(value) {
    Companion_getInstance_68();
    this.p27_1 = value;
    Companion_getInstance_68().n2q(this.p27_1);
  }
  protoOf(Identifier_0).toString = function () {
    return 'Identifier(value=' + this.p27_1 + ')';
  };
  protoOf(Identifier_0).hashCode = function () {
    return getStringHashCode(this.p27_1);
  };
  protoOf(Identifier_0).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Identifier_0))
      return false;
    var tmp0_other_with_cast = other instanceof Identifier_0 ? other : THROW_CCE();
    if (!(this.p27_1 === tmp0_other_with_cast.p27_1))
      return false;
    return true;
  };
  function PartialIdentifier$Companion$fromIntList$lambda(it) {
    return Companion_getInstance_69().bi(it).b2n_1;
  }
  function Companion_68() {
    Companion_instance_68 = this;
    this.d20_1 = plus(plus(get_alphabeticalCategories(), get_punctuationCategories()), get_numericalCategories());
  }
  protoOf(Companion_68).bi = function (int) {
    var tmp;
    if (int >= 0) {
      tmp = new PartialIdentifier(int.toString());
    } else {
      var withoutSign = removePrefix(int.toString(), '-');
      tmp = new PartialIdentifier('m' + withoutSign);
    }
    return tmp;
  };
  protoOf(Companion_68).q20 = function (intList) {
    var name = joinToString(intList, '_', VOID, VOID, VOID, VOID, PartialIdentifier$Companion$fromIntList$lambda);
    return new PartialIdentifier(name);
  };
  protoOf(Companion_68).p2q = function (char) {
    return this.d20_1.g1(get_category(char));
  };
  protoOf(Companion_68).o2q = function (name, className) {
    var inductionVariable = 0;
    var last = name.length;
    while (inductionVariable < last) {
      var c = charSequenceGet(name, inductionVariable);
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'kotlin.require' call
      // Inline function 'kotlin.contracts.contract' call
      if (!this.p2q(c)) {
        // Inline function 'com.github.shwaka.kohomology.util.Companion.validateName.<anonymous>' call
        var message = (className == null ? 'Identifier' : className) + ' name (' + name + ') can only contain ' + 'alphabets (including greeks), numbers or underscore, ' + ('but it contains "' + new Char(c) + '".');
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
  };
  protoOf(Companion_68).q2q = function (name, className, $super) {
    className = className === VOID ? getKClass(PartialIdentifier).eb() : className;
    var tmp;
    if ($super === VOID) {
      this.o2q(name, className);
      tmp = Unit_getInstance();
    } else {
      tmp = $super.o2q.call(this, name, className);
    }
    return tmp;
  };
  var Companion_instance_68;
  function Companion_getInstance_69() {
    if (Companion_instance_68 == null)
      new Companion_68();
    return Companion_instance_68;
  }
  function PartialIdentifier(value) {
    Companion_getInstance_69();
    this.b2n_1 = value;
    Companion_getInstance_69().q2q(this.b2n_1);
  }
  protoOf(PartialIdentifier).toString = function () {
    return 'PartialIdentifier(value=' + this.b2n_1 + ')';
  };
  protoOf(PartialIdentifier).hashCode = function () {
    return getStringHashCode(this.b2n_1);
  };
  protoOf(PartialIdentifier).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof PartialIdentifier))
      return false;
    var tmp0_other_with_cast = other instanceof PartialIdentifier ? other : THROW_CCE();
    if (!(this.b2n_1 === tmp0_other_with_cast.b2n_1))
      return false;
    return true;
  };
  var properties_initialized_Identifier_kt_ehem2z;
  function _init_properties_Identifier_kt__cxfbbd() {
    if (!properties_initialized_Identifier_kt_ehem2z) {
      properties_initialized_Identifier_kt_ehem2z = true;
      alphabeticalCategories = listOf_0([CharCategory_LOWERCASE_LETTER_getInstance(), CharCategory_UPPERCASE_LETTER_getInstance(), CharCategory_OTHER_LETTER_getInstance()]);
      numericalCategories = listOf(CharCategory_DECIMAL_DIGIT_NUMBER_getInstance());
      punctuationCategories = listOf(CharCategory_CONNECTOR_PUNCTUATION_getInstance());
    }
  }
  function isOdd_0(_this__u8e3s4) {
    return !((_this__u8e3s4 % 2 | 0) === 0);
  }
  function isEven(_this__u8e3s4) {
    return (_this__u8e3s4 % 2 | 0) === 0;
  }
  function PrintConfig_init_$Init$(printType, beforeSign, afterSign, afterCoeff, buildEntries, $this) {
    printType = printType === VOID ? PrintType_PLAIN_getInstance() : printType;
    beforeSign = beforeSign === VOID ? ' ' : beforeSign;
    afterSign = afterSign === VOID ? ' ' : afterSign;
    afterCoeff = afterCoeff === VOID ? ' ' : afterCoeff;
    var tmp;
    if (buildEntries === VOID) {
      tmp = PrintConfig$_init_$lambda_4ayq2s;
    } else {
      tmp = buildEntries;
    }
    buildEntries = tmp;
    // Inline function 'kotlin.apply' call
    var tmp0_apply = new EntriesBuilder();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.util.PrintConfig.<init>.<anonymous>' call
    buildEntries(tmp0_apply);
    PrintConfig.call($this, printType, beforeSign, afterSign, afterCoeff, tmp0_apply.k27_1);
    return $this;
  }
  function PrintConfig_init_$Create$(printType, beforeSign, afterSign, afterCoeff, buildEntries) {
    return PrintConfig_init_$Init$(printType, beforeSign, afterSign, afterCoeff, buildEntries, objectCreate(protoOf(PrintConfig)));
  }
  function Companion_69() {
    Companion_instance_69 = this;
    this.f1m_1 = PrintConfig_init_$Create$(PrintType_PLAIN_getInstance());
    Companion_getInstance_63().j2n();
    Companion_getInstance_66().j2n();
  }
  var Companion_instance_69;
  function Companion_getInstance_70() {
    if (Companion_instance_69 == null)
      new Companion_69();
    return Companion_instance_69;
  }
  function PrintConfig$_init_$lambda_4ayq2s($this$null) {
    return Unit_getInstance();
  }
  function PrintConfig(printType, beforeSign, afterSign, afterCoeff, entries) {
    Companion_getInstance_70();
    this.g1u_1 = printType;
    this.h1u_1 = beforeSign;
    this.i1u_1 = afterSign;
    this.j1u_1 = afterCoeff;
    this.k1u_1 = entries;
  }
  protoOf(PrintConfig).toString = function () {
    return 'PrintConfig(printType=' + this.g1u_1 + ', beforeSign=' + this.h1u_1 + ', afterSign=' + this.i1u_1 + ', afterCoeff=' + this.j1u_1 + ', entries=' + this.k1u_1 + ')';
  };
  protoOf(PrintConfig).hashCode = function () {
    var result = this.g1u_1.hashCode();
    result = imul(result, 31) + getStringHashCode(this.h1u_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.i1u_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.j1u_1) | 0;
    result = imul(result, 31) + hashCode(this.k1u_1) | 0;
    return result;
  };
  protoOf(PrintConfig).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof PrintConfig))
      return false;
    var tmp0_other_with_cast = other instanceof PrintConfig ? other : THROW_CCE();
    if (!this.g1u_1.equals(tmp0_other_with_cast.g1u_1))
      return false;
    if (!(this.h1u_1 === tmp0_other_with_cast.h1u_1))
      return false;
    if (!(this.i1u_1 === tmp0_other_with_cast.i1u_1))
      return false;
    if (!(this.j1u_1 === tmp0_other_with_cast.j1u_1))
      return false;
    if (!equals(this.k1u_1, tmp0_other_with_cast.k1u_1))
      return false;
    return true;
  };
  function EntriesBuilder() {
    var tmp = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp.k27_1 = LinkedHashMap_init_$Create$();
  }
  function PrintConfigDefaultRegistry() {
    PrintConfigDefaultRegistry_instance = this;
    var tmp = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp.h2n_1 = LinkedHashMap_init_$Create$();
  }
  var PrintConfigDefaultRegistry_instance;
  function PrintConfigDefaultRegistry_getInstance() {
    if (PrintConfigDefaultRegistry_instance == null)
      new PrintConfigDefaultRegistry();
    return PrintConfigDefaultRegistry_instance;
  }
  var PrintType_PLAIN_instance;
  var PrintType_TEX_instance;
  var PrintType_CODE_instance;
  var PrintType_entriesInitialized;
  function PrintType_initEntries() {
    if (PrintType_entriesInitialized)
      return Unit_getInstance();
    PrintType_entriesInitialized = true;
    PrintType_PLAIN_instance = new PrintType('PLAIN', 0);
    PrintType_TEX_instance = new PrintType('TEX', 1);
    PrintType_CODE_instance = new PrintType('CODE', 2);
  }
  function PrintType(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function PrintableWithSign() {
  }
  function Printer_init_$Init$(printConfig, $this) {
    Printer.call($this, printConfig, '');
    return $this;
  }
  function Printer_init_$Create$(printConfig) {
    return Printer_init_$Init$(printConfig, objectCreate(protoOf(Printer)));
  }
  function Printer_init_$Init$_0(printType, beforeSign, afterSign, afterCoeff, buildEntries, $this) {
    printType = printType === VOID ? PrintType_PLAIN_getInstance() : printType;
    beforeSign = beforeSign === VOID ? ' ' : beforeSign;
    afterSign = afterSign === VOID ? ' ' : afterSign;
    afterCoeff = afterCoeff === VOID ? ' ' : afterCoeff;
    var tmp;
    if (buildEntries === VOID) {
      tmp = Printer$_init_$lambda_1i90j5;
    } else {
      tmp = buildEntries;
    }
    buildEntries = tmp;
    // Inline function 'kotlin.apply' call
    var tmp0_apply = new EntriesBuilder();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.util.Printer.<init>.<anonymous>' call
    buildEntries(tmp0_apply);
    Printer_init_$Init$(new PrintConfig(printType, beforeSign, afterSign, afterCoeff, tmp0_apply.k27_1), $this);
    return $this;
  }
  function Printer_init_$Create$_0(printType, beforeSign, afterSign, afterCoeff, buildEntries) {
    return Printer_init_$Init$_0(printType, beforeSign, afterSign, afterCoeff, buildEntries, objectCreate(protoOf(Printer)));
  }
  function Printer$_init_$lambda_1i90j5($this$null) {
    return Unit_getInstance();
  }
  function Printer(printConfig, value) {
    this.r26_1 = printConfig;
    this.s26_1 = value;
  }
  protoOf(Printer).toString = function () {
    return this.s26_1;
  };
  protoOf(Printer).t26 = function (printable) {
    var tmp1_elvis_lhs = printable == null ? null : printable.s1i(this.r26_1);
    var stringFromPrintable = tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs;
    return this.s26_1 + stringFromPrintable;
  };
  function InternalPrintConfig$Companion$default$lambda($printConfig) {
    return function (coeff, withSign) {
      return coeff.f2q($printConfig, withSign);
    };
  }
  function InternalPrintConfig$Companion$default$lambda_0($printConfig) {
    return function (it) {
      return it.s1i($printConfig);
    };
  }
  function Companion_70() {
    Companion_instance_70 = this;
  }
  protoOf(Companion_70).x1r = function (printConfig) {
    var tmp = InternalPrintConfig$Companion$default$lambda(printConfig);
    return new InternalPrintConfig(tmp, InternalPrintConfig$Companion$default$lambda_0(printConfig));
  };
  var Companion_instance_70;
  function Companion_getInstance_71() {
    if (Companion_instance_70 == null)
      new Companion_70();
    return Companion_instance_70;
  }
  function InternalPrintConfig$_init_$lambda_u75kft(coeff, withSign) {
    return coeff.q2k(PrintType_PLAIN_getInstance(), withSign);
  }
  function InternalPrintConfig$_init_$lambda_u75kft_0(it) {
    return toString_0(it);
  }
  function InternalPrintConfig(coeffToString, basisToString, basisComparator) {
    Companion_getInstance_71();
    var tmp;
    if (coeffToString === VOID) {
      tmp = InternalPrintConfig$_init_$lambda_u75kft;
    } else {
      tmp = coeffToString;
    }
    coeffToString = tmp;
    var tmp_0;
    if (basisToString === VOID) {
      tmp_0 = InternalPrintConfig$_init_$lambda_u75kft_0;
    } else {
      tmp_0 = basisToString;
    }
    basisToString = tmp_0;
    basisComparator = basisComparator === VOID ? null : basisComparator;
    this.r2q_1 = coeffToString;
    this.s2q_1 = basisToString;
    this.t2q_1 = basisComparator;
  }
  protoOf(InternalPrintConfig).toString = function () {
    return 'InternalPrintConfig(coeffToString=' + this.r2q_1 + ', basisToString=' + this.s2q_1 + ', basisComparator=' + this.t2q_1 + ')';
  };
  protoOf(InternalPrintConfig).hashCode = function () {
    var result = hashCode(this.r2q_1);
    result = imul(result, 31) + hashCode(this.s2q_1) | 0;
    result = imul(result, 31) + (this.t2q_1 == null ? 0 : hashCode(this.t2q_1)) | 0;
    return result;
  };
  protoOf(InternalPrintConfig).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof InternalPrintConfig))
      return false;
    var tmp0_other_with_cast = other instanceof InternalPrintConfig ? other : THROW_CCE();
    if (!equals(this.r2q_1, tmp0_other_with_cast.r2q_1))
      return false;
    if (!equals(this.s2q_1, tmp0_other_with_cast.s2q_1))
      return false;
    if (!equals(this.t2q_1, tmp0_other_with_cast.t2q_1))
      return false;
    return true;
  };
  function PrintType_PLAIN_getInstance() {
    PrintType_initEntries();
    return PrintType_PLAIN_instance;
  }
  function PrintType_TEX_getInstance() {
    PrintType_initEntries();
    return PrintType_TEX_instance;
  }
  function PrintType_CODE_getInstance() {
    PrintType_initEntries();
    return PrintType_CODE_instance;
  }
  var Sign_PLUS_instance;
  var Sign_MINUS_instance;
  function Companion_71() {
    Companion_instance_71 = this;
  }
  protoOf(Companion_71).i2k = function (n) {
    var tmp;
    if (isEven(n)) {
      tmp = Sign_PLUS_getInstance();
    } else {
      tmp = Sign_MINUS_getInstance();
    }
    return tmp;
  };
  protoOf(Companion_71).m1z = function (even) {
    var tmp;
    if (even) {
      tmp = Sign_PLUS_getInstance();
    } else {
      tmp = Sign_MINUS_getInstance();
    }
    return tmp;
  };
  var Companion_instance_71;
  function Companion_getInstance_72() {
    Sign_initEntries();
    if (Companion_instance_71 == null)
      new Companion_71();
    return Companion_instance_71;
  }
  var Sign_entriesInitialized;
  function Sign_initEntries() {
    if (Sign_entriesInitialized)
      return Unit_getInstance();
    Sign_entriesInitialized = true;
    Sign_PLUS_instance = new Sign('PLUS', 0, 1);
    Sign_MINUS_instance = new Sign('MINUS', 1, -1);
    Companion_getInstance_72();
  }
  function Sign(name, ordinal, intValue) {
    Enum.call(this, name, ordinal);
    this.w2d_1 = intValue;
  }
  protoOf(Sign).t4 = function () {
    var tmp;
    switch (this.m1_1) {
      case 0:
        tmp = Sign_MINUS_getInstance();
        break;
      case 1:
        tmp = Sign_PLUS_getInstance();
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  function Sign_PLUS_getInstance() {
    Sign_initEntries();
    return Sign_PLUS_instance;
  }
  function Sign_MINUS_getInstance() {
    Sign_initEntries();
    return Sign_MINUS_instance;
  }
  function get_PrettyParen() {
    _init_properties_StringTable_kt__yly6lx();
    return PrettyParen;
  }
  var PrettyParen;
  function StringTable(data, paren) {
    paren = paren === VOID ? get_PrettyParen() : paren;
    this.u2q_1 = data;
    this.v2q_1 = paren;
  }
  protoOf(StringTable).toString = function () {
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = this.u2q_1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.util.StringTable.toString.<anonymous>' call
      tmp$ret$0 = toString(item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    var rowStringList = tmp0_mapTo;
    var joinedRowStrings = joinToString(rowStringList, this.v2q_1.e2r_1);
    return this.v2q_1.z2q_1 + ' ' + joinedRowStrings + ' ' + this.v2q_1.d2r_1;
  };
  function Paren(upperLeft, left, lowerLeft, leftOneRow, upperRight, right, lowerRight, rightOneRow, separator) {
    upperLeft = upperLeft === VOID ? '[' : upperLeft;
    left = left === VOID ? '[' : left;
    lowerLeft = lowerLeft === VOID ? '[' : lowerLeft;
    leftOneRow = leftOneRow === VOID ? '[' : leftOneRow;
    upperRight = upperRight === VOID ? ']' : upperRight;
    right = right === VOID ? ']' : right;
    lowerRight = lowerRight === VOID ? ']' : lowerRight;
    rightOneRow = rightOneRow === VOID ? ']' : rightOneRow;
    separator = separator === VOID ? ' ' : separator;
    this.w2q_1 = upperLeft;
    this.x2q_1 = left;
    this.y2q_1 = lowerLeft;
    this.z2q_1 = leftOneRow;
    this.a2r_1 = upperRight;
    this.b2r_1 = right;
    this.c2r_1 = lowerRight;
    this.d2r_1 = rightOneRow;
    this.e2r_1 = separator;
  }
  protoOf(Paren).toString = function () {
    return 'Paren(upperLeft=' + this.w2q_1 + ', left=' + this.x2q_1 + ', lowerLeft=' + this.y2q_1 + ', leftOneRow=' + this.z2q_1 + ', upperRight=' + this.a2r_1 + ', right=' + this.b2r_1 + ', lowerRight=' + this.c2r_1 + ', rightOneRow=' + this.d2r_1 + ', separator=' + this.e2r_1 + ')';
  };
  protoOf(Paren).hashCode = function () {
    var result = getStringHashCode(this.w2q_1);
    result = imul(result, 31) + getStringHashCode(this.x2q_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.y2q_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.z2q_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.a2r_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.b2r_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.c2r_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.d2r_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.e2r_1) | 0;
    return result;
  };
  protoOf(Paren).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Paren))
      return false;
    var tmp0_other_with_cast = other instanceof Paren ? other : THROW_CCE();
    if (!(this.w2q_1 === tmp0_other_with_cast.w2q_1))
      return false;
    if (!(this.x2q_1 === tmp0_other_with_cast.x2q_1))
      return false;
    if (!(this.y2q_1 === tmp0_other_with_cast.y2q_1))
      return false;
    if (!(this.z2q_1 === tmp0_other_with_cast.z2q_1))
      return false;
    if (!(this.a2r_1 === tmp0_other_with_cast.a2r_1))
      return false;
    if (!(this.b2r_1 === tmp0_other_with_cast.b2r_1))
      return false;
    if (!(this.c2r_1 === tmp0_other_with_cast.c2r_1))
      return false;
    if (!(this.d2r_1 === tmp0_other_with_cast.d2r_1))
      return false;
    if (!(this.e2r_1 === tmp0_other_with_cast.e2r_1))
      return false;
    return true;
  };
  var properties_initialized_StringTable_kt_23rfzn;
  function _init_properties_StringTable_kt__yly6lx() {
    if (!properties_initialized_StringTable_kt_23rfzn) {
      properties_initialized_StringTable_kt_23rfzn = true;
      PrettyParen = new Paren('\u23A1', '\u23A5', '\u23A3', VOID, '\u23A4', '\u23A5', '\u23A6');
    }
  }
  function groupsAsMap($this) {
    // Inline function 'kotlin.collections.groupBy' call
    var tmp0_groupBy = until(0, $this.n2g_1);
    // Inline function 'kotlin.collections.groupByTo' call
    var tmp0_groupByTo = LinkedHashMap_init_$Create$();
    var inductionVariable = tmp0_groupBy.z_1;
    var last = tmp0_groupBy.a1_1;
    if (inductionVariable <= last)
      do {
        var element = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'com.github.shwaka.kohomology.util.UnionFind.groupsAsMap.<anonymous>' call
        var key = $this.f2r(element);
        // Inline function 'kotlin.collections.getOrPut' call
        var value = tmp0_groupByTo.u2(key);
        var tmp;
        if (value == null) {
          // Inline function 'kotlin.collections.groupByTo.<anonymous>' call
          var answer = ArrayList_init_$Create$_0();
          tmp0_groupByTo.z3(key, answer);
          tmp = answer;
        } else {
          tmp = value;
        }
        var list = tmp;
        list.a(element);
      }
       while (!(element === last));
    return tmp0_groupByTo;
  }
  function UnionFind(size) {
    this.n2g_1 = size;
    var tmp = this;
    // Inline function 'kotlin.collections.MutableList' call
    var tmp0_MutableList = this.n2g_1;
    var list = ArrayList_init_$Create$(tmp0_MutableList);
    // Inline function 'kotlin.repeat' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    if (inductionVariable < tmp0_MutableList)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.collections.MutableList.<anonymous>' call
        // Inline function 'com.github.shwaka.kohomology.util.UnionFind.parent.<anonymous>' call
        list.a(index);
      }
       while (inductionVariable < tmp0_MutableList);
    tmp.o2g_1 = list;
  }
  protoOf(UnionFind).f2r = function (index) {
    var tmp;
    if (this.o2g_1.l(index) === index) {
      tmp = index;
    } else {
      // Inline function 'kotlin.also' call
      var tmp0_also = this.f2r(this.o2g_1.l(index));
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'com.github.shwaka.kohomology.util.UnionFind.rootOf.<anonymous>' call
      this.o2g_1.q7(index, tmp0_also);
      tmp = tmp0_also;
    }
    return tmp;
  };
  protoOf(UnionFind).p2g = function (index1, index2) {
    var root1 = this.f2r(index1);
    var root2 = this.f2r(index2);
    if (!(root1 === root2)) {
      this.o2g_1.q7(root1, root2);
    }
  };
  protoOf(UnionFind).q2g = function () {
    return toList_1(groupsAsMap(this).w2());
  };
  function directProductOf(collection1, collection2) {
    // Inline function 'kotlin.collections.flatMap' call
    // Inline function 'kotlin.collections.flatMapTo' call
    var tmp0_flatMapTo = ArrayList_init_$Create$_0();
    var tmp0_iterator = collection1.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'com.github.shwaka.kohomology.util.directProductOf.<anonymous>' call
      // Inline function 'kotlin.collections.map' call
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(collection2, 10));
      var tmp0_iterator_0 = collection2.f();
      while (tmp0_iterator_0.g()) {
        var item = tmp0_iterator_0.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.util.directProductOf.<anonymous>.<anonymous>' call
        tmp$ret$0 = new Pair(element, item);
        tmp0_mapTo.a(tmp$ret$0);
      }
      var list = tmp0_mapTo;
      addAll(tmp0_flatMapTo, list);
    }
    return tmp0_flatMapTo;
  }
  function duplicates(_this__u8e3s4) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.groupingBy' call
    tmp$ret$0 = new _no_name_provided__qut3iv(_this__u8e3s4);
    var counts = eachCount(tmp$ret$0);
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.filter' call
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo = LinkedHashMap_init_$Create$();
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = counts.u().f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'com.github.shwaka.kohomology.util.list.duplicates.<anonymous>' call
      if (element.w() > 1) {
        tmp0_filterTo.z3(element.v(), element.w());
      }
    }
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(tmp0_filterTo.i());
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator_0 = tmp0_filterTo.u().f();
    while (tmp0_iterator_0.g()) {
      var item = tmp0_iterator_0.h();
      var tmp$ret$6;
      // Inline function 'com.github.shwaka.kohomology.util.list.duplicates.<anonymous>' call
      tmp$ret$6 = item.v();
      tmp0_mapTo.a(tmp$ret$6);
    }
    return tmp0_mapTo;
  }
  function _no_name_provided__qut3iv($this_duplicates) {
    this.g2r_1 = $this_duplicates;
  }
  protoOf(_no_name_provided__qut3iv).ab = function () {
    return this.g2r_1.f();
  };
  protoOf(_no_name_provided__qut3iv).bb = function (element) {
    // Inline function 'com.github.shwaka.kohomology.util.list.duplicates.<anonymous>' call
    return element;
  };
  function hasNonEmptyIntersection(_this__u8e3s4, other) {
    return !hasEmptyIntersection(_this__u8e3s4, other);
  }
  function hasEmptyIntersection(_this__u8e3s4, other) {
    var i = 0;
    var j = 0;
    while (i < _this__u8e3s4.i() ? j < other.i() : false) {
      if (equals(_this__u8e3s4.l(i), other.l(j)))
        return false;
      else if (compareTo(_this__u8e3s4.l(i), other.l(j)) > 0) {
        j = j + 1 | 0;
      } else if (compareTo(_this__u8e3s4.l(i), other.l(j)) < 0) {
        i = i + 1 | 0;
      } else
        throw Exception_init_$Create$("This can't happen!");
    }
    return true;
  }
  function exchange(_this__u8e3s4, key1, key2) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!equals(key1, key2)) {
      // Inline function 'com.github.shwaka.kohomology.util.exchange.<anonymous>' call
      var message = 'key1 and key2 must be distinct, but both are ' + key1;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    var row1 = _this__u8e3s4.u2(key1);
    if (row1 == null) {
      var row2 = _this__u8e3s4.u2(key2);
      if (row2 == null)
        return Unit_getInstance();
      else {
        // Inline function 'kotlin.collections.set' call
        _this__u8e3s4.z3(key1, row2);
        _this__u8e3s4.s8(key2);
      }
    } else {
      var row2_0 = _this__u8e3s4.u2(key2);
      if (row2_0 == null) {
        // Inline function 'kotlin.collections.set' call
        _this__u8e3s4.z3(key2, row1);
        _this__u8e3s4.s8(key1);
      } else {
        // Inline function 'kotlin.collections.set' call
        _this__u8e3s4.z3(key1, row2_0);
        // Inline function 'kotlin.collections.set' call
        _this__u8e3s4.z3(key2, row1);
      }
    }
  }
  function BilinearMap() {
  }
  function getInducedMap($this, bilinearMap, source1Quot, source2Quot, targetQuot) {
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = source1Quot.m1t();
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.Companion.getInducedMap.<anonymous>' call
      tmp$ret$0 = source1Quot.l1o().q1o(item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    var basisLift1 = tmp0_mapTo;
    // Inline function 'kotlin.collections.map' call
    var tmp1_map = source2Quot.m1t();
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
    var tmp0_iterator_0 = tmp1_map.f();
    while (tmp0_iterator_0.g()) {
      var item_0 = tmp0_iterator_0.h();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.vectsp.Companion.getInducedMap.<anonymous>' call
      tmp$ret$3 = source2Quot.l1o().q1o(item_0);
      tmp0_mapTo_0.a(tmp$ret$3);
    }
    var basisLift2 = tmp0_mapTo_0;
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_1 = ArrayList_init_$Create$(collectionSizeOrDefault(basisLift1, 10));
    var tmp0_iterator_1 = basisLift1.f();
    while (tmp0_iterator_1.g()) {
      var item_1 = tmp0_iterator_1.h();
      // Inline function 'com.github.shwaka.kohomology.vectsp.Companion.getInducedMap.<anonymous>' call
      // Inline function 'kotlin.collections.map' call
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_2 = ArrayList_init_$Create$(collectionSizeOrDefault(basisLift2, 10));
      var tmp0_iterator_2 = basisLift2.f();
      while (tmp0_iterator_2.g()) {
        var item_2 = tmp0_iterator_2.h();
        var tmp$ret$6;
        // Inline function 'com.github.shwaka.kohomology.vectsp.Companion.getInducedMap.<anonymous>.<anonymous>' call
        tmp$ret$6 = targetQuot.y1n().q1o(bilinearMap.u1r(item_1, item_2));
        tmp0_mapTo_2.a(tmp$ret$6);
      }
      tmp0_mapTo_1.a(tmp0_mapTo_2);
    }
    var valueList = tmp0_mapTo_1;
    return new ValueBilinearMap(source1Quot, source2Quot, targetQuot, bilinearMap.y1g(), valueList);
  }
  function getInducedMap_0($this, bilinearMap, source1SubQuot, source2SubQuot, targetSubQuot) {
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = source1SubQuot.m1t();
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.Companion.getInducedMap.<anonymous>' call
      tmp$ret$0 = source1SubQuot.l1o().q1o(item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    var basisLift1 = tmp0_mapTo;
    // Inline function 'kotlin.collections.map' call
    var tmp1_map = source2SubQuot.m1t();
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
    var tmp0_iterator_0 = tmp1_map.f();
    while (tmp0_iterator_0.g()) {
      var item_0 = tmp0_iterator_0.h();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.vectsp.Companion.getInducedMap.<anonymous>' call
      tmp$ret$3 = source2SubQuot.l1o().q1o(item_0);
      tmp0_mapTo_0.a(tmp$ret$3);
    }
    var basisLift2 = tmp0_mapTo_0;
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_1 = ArrayList_init_$Create$(collectionSizeOrDefault(basisLift1, 10));
    var tmp0_iterator_1 = basisLift1.f();
    while (tmp0_iterator_1.g()) {
      var item_1 = tmp0_iterator_1.h();
      // Inline function 'com.github.shwaka.kohomology.vectsp.Companion.getInducedMap.<anonymous>' call
      // Inline function 'kotlin.collections.map' call
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_2 = ArrayList_init_$Create$(collectionSizeOrDefault(basisLift2, 10));
      var tmp0_iterator_2 = basisLift2.f();
      while (tmp0_iterator_2.g()) {
        var item_2 = tmp0_iterator_2.h();
        var tmp$ret$6;
        // Inline function 'com.github.shwaka.kohomology.vectsp.Companion.getInducedMap.<anonymous>.<anonymous>' call
        tmp$ret$6 = targetSubQuot.y1n().q1o(bilinearMap.u1r(item_1, item_2));
        tmp0_mapTo_2.a(tmp$ret$6);
      }
      tmp0_mapTo_1.a(tmp0_mapTo_2);
    }
    var valueList = tmp0_mapTo_1;
    return new ValueBilinearMap(source1SubQuot, source2SubQuot, targetSubQuot, bilinearMap.y1g(), valueList);
  }
  function ValueBilinearMap_init_$Init$(source1, source2, target, matrixSpace, getValue, $this) {
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = source1.j1s();
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      // Inline function 'com.github.shwaka.kohomology.vectsp.ValueBilinearMap.<init>.<anonymous>' call
      // Inline function 'kotlin.collections.map' call
      var tmp0_map_0 = source2.j1s();
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
      var tmp0_iterator_0 = tmp0_map_0.f();
      while (tmp0_iterator_0.g()) {
        var item_0 = tmp0_iterator_0.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.vectsp.ValueBilinearMap.<init>.<anonymous>.<anonymous>' call
        tmp$ret$0 = getValue(item, item_0);
        tmp0_mapTo_0.a(tmp$ret$0);
      }
      tmp0_mapTo.a(tmp0_mapTo_0);
    }
    ValueBilinearMap.call($this, source1, source2, target, matrixSpace, tmp0_mapTo);
    return $this;
  }
  function ValueBilinearMap_init_$Create$(source1, source2, target, matrixSpace, getValue) {
    return ValueBilinearMap_init_$Init$(source1, source2, target, matrixSpace, getValue, objectCreate(protoOf(ValueBilinearMap)));
  }
  function Companion_72() {
    Companion_instance_72 = this;
  }
  var Companion_instance_72;
  function Companion_getInstance_73() {
    if (Companion_instance_72 == null)
      new Companion_72();
    return Companion_instance_72;
  }
  function ValueBilinearMap(source1, source2, target, matrixSpace, values) {
    Companion_getInstance_73();
    this.h2r_1 = source1;
    this.i2r_1 = source2;
    this.j2r_1 = target;
    this.k2r_1 = matrixSpace;
    this.l2r_1 = values;
  }
  protoOf(ValueBilinearMap).s1r = function () {
    return this.h2r_1;
  };
  protoOf(ValueBilinearMap).t1r = function () {
    return this.i2r_1;
  };
  protoOf(ValueBilinearMap).t1k = function () {
    return this.j2r_1;
  };
  protoOf(ValueBilinearMap).y1g = function () {
    return this.k2r_1;
  };
  protoOf(ValueBilinearMap).u1r = function (vector1, vector2) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!this.h2r_1.m2r(vector1)) {
      // Inline function 'com.github.shwaka.kohomology.vectsp.ValueBilinearMap.invoke.<anonymous>' call
      var message = 'Invalid vector is given as an argument of BilinearMap: ' + vector1 + ' is not an element of ' + this.h2r_1;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!this.i2r_1.m2r(vector2)) {
      // Inline function 'com.github.shwaka.kohomology.vectsp.ValueBilinearMap.invoke.<anonymous>' call
      var message_0 = 'Invalid vector is given as an argument of BilinearMap: ' + vector2 + ' is not an element of ' + this.i2r_1;
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
    // Inline function 'kotlin.run' call
    var tmp2_run = this.j2r_1.g1g();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.vectsp.ValueBilinearMap.invoke.<anonymous>' call
    // Inline function 'kotlin.collections.mapValues' call
    var tmp0_mapValues = vector1.q1r_1.s2j();
    // Inline function 'kotlin.collections.mapValuesTo' call
    var tmp0_mapValuesTo = LinkedHashMap_init_$Create$_0(mapCapacity(tmp0_mapValues.i()));
    // Inline function 'kotlin.collections.associateByTo' call
    var tmp0_iterator = tmp0_mapValues.u().f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
      var tmp = element.v();
      var tmp$ret$12;
      // Inline function 'com.github.shwaka.kohomology.vectsp.ValueBilinearMap.invoke.<anonymous>.<anonymous>' call
      // Inline function 'kotlin.collections.component1' call
      var ind1 = element.v();
      // Inline function 'kotlin.collections.component2' call
      var coeff1 = element.w();
      // Inline function 'kotlin.collections.mapValues' call
      var tmp0_mapValues_0 = vector2.q1r_1.s2j();
      // Inline function 'kotlin.collections.mapValuesTo' call
      var tmp0_mapValuesTo_0 = LinkedHashMap_init_$Create$_0(mapCapacity(tmp0_mapValues_0.i()));
      // Inline function 'kotlin.collections.associateByTo' call
      var tmp0_iterator_0 = tmp0_mapValues_0.u().f();
      while (tmp0_iterator_0.g()) {
        var element_0 = tmp0_iterator_0.h();
        // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
        var tmp_0 = element_0.v();
        var tmp$ret$8;
        // Inline function 'com.github.shwaka.kohomology.vectsp.ValueBilinearMap.invoke.<anonymous>.<anonymous>.<anonymous>' call
        // Inline function 'kotlin.collections.component1' call
        var ind2 = element_0.v();
        // Inline function 'kotlin.collections.component2' call
        var coeff2 = element_0.w();
        tmp$ret$8 = tmp2_run.n2r(tmp2_run.n2r(this.l2r_1.l(ind1).l(ind2), coeff1), coeff2);
        tmp0_mapValuesTo_0.z3(tmp_0, tmp$ret$8);
      }
      tmp$ret$12 = tmp2_run.o2r(tmp0_mapValuesTo_0.w2());
      tmp0_mapValuesTo.z3(tmp, tmp$ret$12);
    }
    return tmp2_run.o2r(tmp0_mapValuesTo.w2());
  };
  protoOf(ValueBilinearMap).j1r = function (source1Quot, source2Quot, targetQuot) {
    return getInducedMap(Companion_getInstance_73(), this, source1Quot, source2Quot, targetQuot);
  };
  protoOf(ValueBilinearMap).k1r = function (source1SubQuot, source2SubQuot, targetSubQuot) {
    return getInducedMap_0(Companion_getInstance_73(), this, source1SubQuot, source2SubQuot, targetSubQuot);
  };
  function DirectSumBasis(index, basisName) {
    this.i26_1 = index;
    this.j26_1 = basisName;
  }
  protoOf(DirectSumBasis).toString = function () {
    return 'DirectSumBasis(index=' + this.i26_1 + ', basisName=' + this.j26_1 + ')';
  };
  protoOf(DirectSumBasis).hashCode = function () {
    var result = this.i26_1;
    result = imul(result, 31) + (this.j26_1 == null ? 0 : hashCode(this.j26_1)) | 0;
    return result;
  };
  protoOf(DirectSumBasis).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof DirectSumBasis))
      return false;
    var tmp0_other_with_cast = other instanceof DirectSumBasis ? other : THROW_CCE();
    if (!(this.i26_1 === tmp0_other_with_cast.i26_1))
      return false;
    if (!equals(this.j26_1, tmp0_other_with_cast.j26_1))
      return false;
    return true;
  };
  function _get_basisNameToIndex__26cf4t($this) {
    // Inline function 'kotlin.getValue' call
    basisNameToIndex$factory();
    return $this.z25_1.w();
  }
  function DirectSum_init_$Init$(vectorSpaceList, matrixSpace, getInternalPrintConfig, $this) {
    var tmp;
    if (getInternalPrintConfig === VOID) {
      tmp = DirectSum$_init_$lambda_z82hk9;
    } else {
      tmp = getInternalPrintConfig;
    }
    getInternalPrintConfig = tmp;
    DirectSum.call($this, new DirectSumFactory(vectorSpaceList, matrixSpace, getInternalPrintConfig));
    return $this;
  }
  function DirectSum_init_$Create$(vectorSpaceList, matrixSpace, getInternalPrintConfig) {
    return DirectSum_init_$Init$(vectorSpaceList, matrixSpace, getInternalPrintConfig, objectCreate(protoOf(DirectSum)));
  }
  function _get_inclusionList__tlg4i1($this) {
    // Inline function 'kotlin.getValue' call
    inclusionList$factory();
    return $this.d26_1.w();
  }
  function DirectSum$basisNameToIndex$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$2;
      // Inline function 'kotlin.collections.mapIndexed' call
      var tmp0_mapIndexed = this$0.w25_1;
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapIndexedTo' call
      var tmp0_mapIndexedTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_mapIndexed, 10));
      var index = 0;
      var tmp0_iterator = tmp0_mapIndexed.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.vectsp.DirectSum.basisNameToIndex$delegate.<anonymous>.<anonymous>' call
        var tmp1 = index;
        index = tmp1 + 1 | 0;
        var tmp1_anonymous = checkIndexOverflow(tmp1);
        tmp$ret$0 = new Pair(item, tmp1_anonymous);
        tmp0_mapIndexedTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapIndexedTo;
      tmp$ret$2 = tmp$ret$1;
      return toMap(tmp$ret$2);
    };
  }
  function DirectSum$_init_$lambda_z82hk9(printConfig) {
    return Companion_getInstance_71().x1r(printConfig);
  }
  function DirectSum$inclusionList$delegate$lambda(this$0) {
    return function () {
      var one = this$0.b26_1.j1h().b1j();
      var tmp$ret$8;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = until(0, this$0.c26_1);
      var tmp$ret$7;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var inductionVariable = tmp0_map.z_1;
      var last = tmp0_map.a1_1;
      if (inductionVariable <= last)
        do {
          var item = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp$ret$6;
          // Inline function 'com.github.shwaka.kohomology.vectsp.DirectSum.inclusionList$delegate.<anonymous>.<anonymous>' call
          var tmp$ret$2;
          // Inline function 'kotlin.collections.map' call
          var tmp0_map_0 = until(0, item);
          var tmp$ret$1;
          // Inline function 'kotlin.collections.mapTo' call
          var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
          var inductionVariable_0 = tmp0_map_0.z_1;
          var last_0 = tmp0_map_0.a1_1;
          if (inductionVariable_0 <= last_0)
            do {
              var item_0 = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              var tmp$ret$0;
              // Inline function 'com.github.shwaka.kohomology.vectsp.DirectSum.inclusionList$delegate.<anonymous>.<anonymous>.<anonymous>' call
              tmp$ret$0 = this$0.a26_1.l(item_0).p22();
              tmp0_mapTo_0.a(tmp$ret$0);
            }
             while (!(item_0 === last_0));
          tmp$ret$1 = tmp0_mapTo_0;
          tmp$ret$2 = tmp$ret$1;
          var accumulatedDim = sum(tmp$ret$2);
          var currentDim = this$0.a26_1.l(item).p22();
          var tmp$ret$5;
          // Inline function 'kotlin.collections.map' call
          var tmp1_map = until(0, currentDim);
          var tmp$ret$4;
          // Inline function 'kotlin.collections.mapTo' call
          var tmp0_mapTo_1 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
          var inductionVariable_1 = tmp1_map.z_1;
          var last_1 = tmp1_map.a1_1;
          if (inductionVariable_1 <= last_1)
            do {
              var item_1 = inductionVariable_1;
              inductionVariable_1 = inductionVariable_1 + 1 | 0;
              var tmp$ret$3;
              // Inline function 'com.github.shwaka.kohomology.vectsp.DirectSum.inclusionList$delegate.<anonymous>.<anonymous>.<anonymous>' call
              tmp$ret$3 = new Pair(accumulatedDim + item_1 | 0, mapOf_0(to(item_1, one)));
              tmp0_mapTo_1.a(tmp$ret$3);
            }
             while (!(item_1 === last_1));
          tmp$ret$4 = tmp0_mapTo_1;
          tmp$ret$5 = tmp$ret$4;
          var rowMap = toMap(tmp$ret$5);
          var matrix = this$0.b26_1.c2h(rowMap, this$0.p22(), currentDim);
          tmp$ret$6 = Companion_getInstance_74().p2r(this$0.a26_1.l(item), this$0, this$0.b26_1, matrix);
          tmp0_mapTo.a(tmp$ret$6);
        }
         while (!(item === last));
      tmp$ret$7 = tmp0_mapTo;
      tmp$ret$8 = tmp$ret$7;
      return tmp$ret$8;
    };
  }
  function DirectSum$projectionList$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$4;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = until(0, this$0.c26_1);
      var tmp$ret$3;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var inductionVariable = tmp0_map.z_1;
      var last = tmp0_map.a1_1;
      if (inductionVariable <= last)
        do {
          var item = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp$ret$2;
          // Inline function 'com.github.shwaka.kohomology.vectsp.DirectSum.projectionList$delegate.<anonymous>.<anonymous>' call
          var tmp$ret$1;
          // Inline function 'kotlin.run' call
          var tmp0_run = this$0.b26_1.g1g();
          // Inline function 'kotlin.contracts.contract' call
          var tmp$ret$0;
          // Inline function 'com.github.shwaka.kohomology.vectsp.DirectSum.projectionList$delegate.<anonymous>.<anonymous>.<anonymous>' call
          tmp$ret$0 = tmp0_run.x2k(_get_inclusionList__tlg4i1(this$0).l(item).p1o_1);
          tmp$ret$1 = tmp$ret$0;
          var matrix = tmp$ret$1;
          tmp$ret$2 = Companion_getInstance_74().p2r(this$0, this$0.a26_1.l(item), this$0.b26_1, matrix);
          tmp0_mapTo.a(tmp$ret$2);
        }
         while (!(item === last));
      tmp$ret$3 = tmp0_mapTo;
      tmp$ret$4 = tmp$ret$3;
      return tmp$ret$4;
    };
  }
  function DirectSum$toString$lambda(it) {
    return toString(it);
  }
  function DirectSum(factory) {
    this.v25_1 = factory.t2r_1;
    this.w25_1 = factory.u2r_1;
    this.x25_1 = factory.s2r_1;
    this.y25_1 = Companion_getInstance_86().v2r(this);
    var tmp = this;
    tmp.z25_1 = lazy(DirectSum$basisNameToIndex$delegate$lambda(this));
    this.a26_1 = factory.q2r_1;
    this.b26_1 = factory.r2r_1;
    this.c26_1 = this.a26_1.i();
    var tmp_0 = this;
    tmp_0.d26_1 = lazy(DirectSum$inclusionList$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.e26_1 = lazy(DirectSum$projectionList$delegate$lambda(this));
  }
  protoOf(DirectSum).b1h = function () {
    return this.v25_1;
  };
  protoOf(DirectSum).j1s = function () {
    return this.w25_1;
  };
  protoOf(DirectSum).e1h = function () {
    return this.x25_1;
  };
  protoOf(DirectSum).g1g = function () {
    return this.y25_1;
  };
  protoOf(DirectSum).w2r = function (basisName) {
    var tmp0_elvis_lhs = _get_basisNameToIndex__26cf4t(this).u2(basisName);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw NoSuchElementException_init_$Create$_0('' + basisName + ' is not a name of basis element of the vector space ' + this);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  protoOf(DirectSum).x2r = function (basisName) {
    return this.w2r(basisName instanceof DirectSumBasis ? basisName : THROW_CCE());
  };
  protoOf(DirectSum).y2r = function (index) {
    if (index < 0)
      throw IndexOutOfBoundsException_init_$Create$('index must be non-negative');
    if (index >= this.c26_1)
      throw IndexOutOfBoundsException_init_$Create$('index must be smaller than the number of vector spaces in the direct sum');
    return _get_inclusionList__tlg4i1(this).l(index);
  };
  protoOf(DirectSum).f26 = function (vectorList) {
    if (!(vectorList.i() === this.c26_1))
      throw IllegalArgumentException_init_$Create$('The size (' + vectorList.i() + ') of vectorList must be equal to the number (' + this.c26_1 + ') of vector spaces in the direct sum');
    // Inline function 'kotlin.collections.mapIndexed' call
    // Inline function 'kotlin.collections.mapIndexedTo' call
    var tmp0_mapIndexedTo = ArrayList_init_$Create$(collectionSizeOrDefault(vectorList, 10));
    var index = 0;
    var tmp0_iterator = vectorList.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.DirectSum.fromVectorList.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      var tmp0_anonymous = checkIndexOverflow(tmp1);
      tmp$ret$0 = this.y2r(tmp0_anonymous).q1o(item);
      tmp0_mapIndexedTo.a(tmp$ret$0);
    }
    var vectorListInDirectSum = tmp0_mapIndexedTo;
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.vectsp.DirectSum.fromVectorList.<anonymous>' call
    return this.y25_1.o2r(vectorListInDirectSum);
  };
  protoOf(DirectSum).toString = function () {
    return 'DirectSum(' + joinToString(this.a26_1, ', ', VOID, VOID, VOID, VOID, DirectSum$toString$lambda) + ')';
  };
  function DirectSumFactory(vectorSpaceList, matrixSpace, getInternalPrintConfig) {
    this.q2r_1 = vectorSpaceList;
    this.r2r_1 = matrixSpace;
    this.s2r_1 = getInternalPrintConfig;
    this.t2r_1 = this.r2r_1.b1h();
    var tmp = this;
    // Inline function 'kotlin.collections.mapIndexed' call
    var tmp0_mapIndexed = this.q2r_1;
    // Inline function 'kotlin.collections.mapIndexedTo' call
    var tmp0_mapIndexedTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_mapIndexed, 10));
    var index = 0;
    var tmp0_iterator = tmp0_mapIndexed.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      // Inline function 'com.github.shwaka.kohomology.vectsp.DirectSumFactory.basisNames.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      var tmp1_anonymous = checkIndexOverflow(tmp1);
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = item.j1s();
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var tmp0_iterator_0 = tmp0_map.f();
      while (tmp0_iterator_0.g()) {
        var item_0 = tmp0_iterator_0.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.vectsp.DirectSumFactory.basisNames.<anonymous>.<anonymous>' call
        tmp$ret$0 = new DirectSumBasis(tmp1_anonymous, item_0);
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp0_mapIndexedTo.a(tmp0_mapTo);
    }
    tmp.u2r_1 = flatten(tmp0_mapIndexedTo);
  }
  function basisNameToIndex$factory() {
    return getPropertyCallableRef('basisNameToIndex', 1, KProperty1, function (receiver) {
      return _get_basisNameToIndex__26cf4t(receiver);
    }, null);
  }
  function inclusionList$factory() {
    return getPropertyCallableRef('inclusionList', 1, KProperty1, function (receiver) {
      return _get_inclusionList__tlg4i1(receiver);
    }, null);
  }
  function Companion_73() {
    Companion_instance_73 = this;
  }
  protoOf(Companion_73).p2r = function (source, target, matrixSpace, matrix) {
    return new LinearMap(matrixSpace, source, target, matrix);
  };
  protoOf(Companion_73).k1s = function (source, target, matrixSpace, vectors) {
    if (!(vectors.i() === source.p22()))
      throw new InvalidSizeException('The number of vectors must be the same as the dimension of the source vector space');
    var tmp0_iterator = vectors.f();
    while (tmp0_iterator.g()) {
      var vector = tmp0_iterator.h();
      if (!equals(vector.r1r_1, target))
        throw IllegalArgumentException_init_$Create$('The vector space for each vector must be the same as the target vector space');
    }
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(vectors, 10));
    var tmp0_iterator_0 = vectors.f();
    while (tmp0_iterator_0.g()) {
      var item = tmp0_iterator_0.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.Companion.fromVectors.<anonymous>' call
      tmp$ret$0 = item.e2s();
      tmp0_mapTo.a(tmp$ret$0);
    }
    var numVectors = tmp0_mapTo;
    var matrix = matrixSpace.u2i(numVectors, target.p22());
    return new LinearMap(matrixSpace, source, target, matrix);
  };
  var Companion_instance_73;
  function Companion_getInstance_74() {
    if (Companion_instance_73 == null)
      new Companion_73();
    return Companion_instance_73;
  }
  function LinearMap(matrixSpace, source, target, matrix) {
    Companion_getInstance_74();
    this.m1o_1 = matrixSpace;
    this.n1o_1 = source;
    this.o1o_1 = target;
    this.p1o_1 = matrix;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(this.p1o_1.y2i() === this.n1o_1.p22())) {
      // Inline function 'com.github.shwaka.kohomology.vectsp.LinearMap.<anonymous>' call
      var message = 'The matrix has ' + this.p1o_1.y2i() + ' columns, ' + ('but the source vector space has dimension ' + this.n1o_1.p22() + '.');
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(this.p1o_1.x2i() === this.o1o_1.p22())) {
      // Inline function 'com.github.shwaka.kohomology.vectsp.LinearMap.<anonymous>' call
      var message_0 = 'The matrix has ' + this.p1o_1.x2i() + ' rows, ' + ('but the target vector space has dimension ' + this.o1o_1.p22() + '.');
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
  }
  protoOf(LinearMap).q1o = function (vector) {
    if (!this.n1o_1.m2r(vector))
      throw IllegalArgumentException_init_$Create$('Invalid vector is given as an argument of LinearMap: ' + vector + ' is not an element of ' + this.n1o_1);
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.vectsp.LinearMap.invoke.<anonymous>' call
    var numVector = this.m1o_1.g1g().v2k(this.p1o_1, vector.q1r_1);
    return this.o1o_1.c2s(numVector);
  };
  protoOf(LinearMap).equals = function (other) {
    if (this === other)
      return true;
    if (other == null)
      return false;
    if (!getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (!(other instanceof LinearMap))
      THROW_CCE();
    if (!equals(this.n1o_1, other.n1o_1))
      return false;
    if (!equals(this.o1o_1, other.o1o_1))
      return false;
    if (!equals(this.p1o_1, other.p1o_1))
      return false;
    return true;
  };
  protoOf(LinearMap).hashCode = function () {
    var result = hashCode(this.n1o_1);
    result = imul(31, result) + hashCode(this.o1o_1) | 0;
    result = imul(31, result) + hashCode(this.p1o_1) | 0;
    return result;
  };
  protoOf(LinearMap).f2s = function () {
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.vectsp.LinearMap.kernelBasis.<anonymous>' call
    var numVectorList = this.m1o_1.g1g().y2k(this.p1o_1);
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(numVectorList, 10));
    var tmp0_iterator = numVectorList.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$2;
      // Inline function 'com.github.shwaka.kohomology.vectsp.LinearMap.kernelBasis.<anonymous>' call
      tmp$ret$2 = this.n1o_1.c2s(item);
      tmp0_mapTo.a(tmp$ret$2);
    }
    return tmp0_mapTo;
  };
  protoOf(LinearMap).c1l = function () {
    return Companion_getInstance_82().o1r(this.m1o_1, this.n1o_1, this.f2s());
  };
  protoOf(LinearMap).g2s = function () {
    var numVectorList = this.p1o_1.z2i();
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(numVectorList, 10));
    var tmp0_iterator = numVectorList.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.LinearMap.imageGenerator.<anonymous>' call
      tmp$ret$0 = this.o1o_1.c2s(item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    return tmp0_mapTo;
  };
  protoOf(LinearMap).y1k = function () {
    return Companion_getInstance_82().o1r(this.m1o_1, this.o1o_1, this.g2s());
  };
  protoOf(LinearMap).p1s = function (vector) {
    if (!this.o1o_1.m2r(vector))
      throw IllegalArgumentException_init_$Create$('Invalid vector is given: ' + vector + ' is not an element of ' + this.o1o_1);
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.vectsp.LinearMap.findPreimage.<anonymous>' call
    var tmp0_safe_receiver = this.m1o_1.g1g().z2k(this.p1o_1, vector.q1r_1);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'com.github.shwaka.kohomology.vectsp.LinearMap.findPreimage.<anonymous>' call
      tmp = this.n1o_1.c2s(tmp0_safe_receiver);
    }
    return tmp;
  };
  protoOf(LinearMap).m1s = function (sourceSub, targetSub) {
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = sourceSub.m1t();
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.LinearMap.induce.<anonymous>' call
      tmp$ret$0 = sourceSub.s1l().q1o(item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    var basisLift = tmp0_mapTo;
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(basisLift, 10));
    var tmp0_iterator_0 = basisLift.f();
    while (tmp0_iterator_0.g()) {
      var item_0 = tmp0_iterator_0.h();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.vectsp.LinearMap.induce.<anonymous>' call
      tmp$ret$3 = targetSub.j1x().q1o(this.q1o(item_0));
      tmp0_mapTo_0.a(tmp$ret$3);
    }
    var vectors = tmp0_mapTo_0;
    return Companion_getInstance_74().k1s(sourceSub, targetSub, this.m1o_1, vectors);
  };
  protoOf(LinearMap).n1s = function (sourceQuot, targetQuot) {
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = sourceQuot.m1t();
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.LinearMap.induce.<anonymous>' call
      tmp$ret$0 = sourceQuot.l1o().q1o(item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    var basisLift = tmp0_mapTo;
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(basisLift, 10));
    var tmp0_iterator_0 = basisLift.f();
    while (tmp0_iterator_0.g()) {
      var item_0 = tmp0_iterator_0.h();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.vectsp.LinearMap.induce.<anonymous>' call
      tmp$ret$3 = targetQuot.y1n().q1o(this.q1o(item_0));
      tmp0_mapTo_0.a(tmp$ret$3);
    }
    var vectors = tmp0_mapTo_0;
    return Companion_getInstance_74().k1s(sourceQuot, targetQuot, this.m1o_1, vectors);
  };
  protoOf(LinearMap).o1s = function (sourceSubQuot, targetSubQuot) {
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = sourceSubQuot.m1t();
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.LinearMap.induce.<anonymous>' call
      tmp$ret$0 = sourceSubQuot.l1o().q1o(item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    var basisLift = tmp0_mapTo;
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(basisLift, 10));
    var tmp0_iterator_0 = basisLift.f();
    while (tmp0_iterator_0.g()) {
      var item_0 = tmp0_iterator_0.h();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.vectsp.LinearMap.induce.<anonymous>' call
      tmp$ret$3 = targetSubQuot.y1n().q1o(this.q1o(item_0));
      tmp0_mapTo_0.a(tmp$ret$3);
    }
    var vectors = tmp0_mapTo_0;
    return Companion_getInstance_74().k1s(sourceSubQuot, targetSubQuot, this.m1o_1, vectors);
  };
  function QuotBasis$Companion$convertGetInternalPrintConfig$lambda$lambda($printer) {
    return function (basisName) {
      return '[' + $printer.t26(basisName.h2s_1) + ']';
    };
  }
  function QuotBasis$Companion$convertGetInternalPrintConfig$lambda($getInternalPrintConfig) {
    return function (printConfig) {
      var internalPrintConfig = $getInternalPrintConfig(printConfig);
      var printer = Printer_init_$Create$(printConfig);
      return new InternalPrintConfig(internalPrintConfig.r2q_1, QuotBasis$Companion$convertGetInternalPrintConfig$lambda$lambda(printer), null);
    };
  }
  function Companion_74() {
    Companion_instance_74 = this;
  }
  protoOf(Companion_74).j1w = function (getInternalPrintConfig) {
    return QuotBasis$Companion$convertGetInternalPrintConfig$lambda(getInternalPrintConfig);
  };
  var Companion_instance_74;
  function Companion_getInstance_75() {
    if (Companion_instance_74 == null)
      new Companion_74();
    return Companion_instance_74;
  }
  function QuotBasis(vector) {
    Companion_getInstance_75();
    this.h2s_1 = vector;
  }
  protoOf(QuotBasis).toString = function () {
    return '[' + this.h2s_1 + ']';
  };
  protoOf(QuotBasis).hashCode = function () {
    return this.h2s_1.hashCode();
  };
  protoOf(QuotBasis).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof QuotBasis))
      return false;
    var tmp0_other_with_cast = other instanceof QuotBasis ? other : THROW_CCE();
    if (!this.h2s_1.equals(tmp0_other_with_cast.h2s_1))
      return false;
    return true;
  };
  function Companion_75() {
    Companion_instance_75 = this;
  }
  protoOf(Companion_75).k1w = function (matrixSpace, totalVectorSpace, quotientGenerator) {
    var factory = new QuotFactory(matrixSpace, totalVectorSpace, quotientGenerator.n1r());
    return new QuotVectorSpaceImpl(factory);
  };
  var Companion_instance_75;
  function Companion_getInstance_76() {
    if (Companion_instance_75 == null)
      new Companion_75();
    return Companion_instance_75;
  }
  function _get_rowEchelonForm__ymu65r($this) {
    // Inline function 'kotlin.getValue' call
    rowEchelonForm$factory();
    return $this.m2s_1.w();
  }
  function _get_quotientDim__c5gs2c($this) {
    // Inline function 'kotlin.getValue' call
    quotientDim$factory();
    return $this.n2s_1.w();
  }
  function _get_basisIndices__7ymdcu($this) {
    // Inline function 'kotlin.getValue' call
    basisIndices$factory();
    return $this.o2s_1.w();
  }
  function _get_transformationMatrix__anz1r3($this) {
    // Inline function 'kotlin.getValue' call
    transformationMatrix$factory();
    return $this.p2s_1.w();
  }
  function Companion_76() {
    Companion_instance_76 = this;
  }
  protoOf(Companion_76).q2s = function (_this__u8e3s4, vectors, dim) {
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(vectors, 10));
    var tmp0_iterator = vectors.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.Companion.fromVectors.<anonymous>' call
      tmp$ret$0 = item.e2s();
      tmp0_mapTo.a(tmp$ret$0);
    }
    var numVectorList = tmp0_mapTo;
    return _this__u8e3s4.u2i(numVectorList, dim);
  };
  var Companion_instance_76;
  function Companion_getInstance_77() {
    if (Companion_instance_76 == null)
      new Companion_76();
    return Companion_instance_76;
  }
  function QuotFactory$rowEchelonForm$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$3;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.i2s_1.g1g();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$2;
      // Inline function 'com.github.shwaka.kohomology.vectsp.QuotFactory.rowEchelonForm$delegate.<anonymous>.<anonymous>' call
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.QuotFactory.rowEchelonForm$delegate.<anonymous>.<anonymous>.<anonymous>' call
      var quotientMatrix = Companion_getInstance_77().q2s(tmp0_run.y1g(), this$0.k2s_1, this$0.j2s_1.p22());
      var id = tmp0_run.y1g().v2i(this$0.j2s_1.p22());
      tmp$ret$0 = tmp0_run.s2k(listOf_0([quotientMatrix, id]));
      tmp$ret$1 = tmp$ret$0;
      var joinedMatrix = tmp$ret$1;
      tmp$ret$2 = tmp0_run.t2k(joinedMatrix);
      tmp$ret$3 = tmp$ret$2;
      return tmp$ret$3;
    };
  }
  function QuotFactory$quotientDim$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$2;
      // Inline function 'kotlin.collections.filter' call
      var tmp0_filter = _get_rowEchelonForm__ymu65r(this$0).i2h();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.filterTo' call
      var tmp0_filterTo = ArrayList_init_$Create$_0();
      var tmp0_iterator = tmp0_filter.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.vectsp.QuotFactory.quotientDim$delegate.<anonymous>.<anonymous>' call
        tmp$ret$0 = element < this$0.k2s_1.i();
        if (tmp$ret$0) {
          tmp0_filterTo.a(element);
        }
      }
      tmp$ret$1 = tmp0_filterTo;
      tmp$ret$2 = tmp$ret$1;
      return tmp$ret$2.i();
    };
  }
  function QuotFactory$basisIndices$delegate$lambda(this$0) {
    return function () {
      return slice(_get_rowEchelonForm__ymu65r(this$0).i2h(), until(_get_quotientDim__c5gs2c(this$0), this$0.j2s_1.p22()));
    };
  }
  function QuotFactory$transformationMatrix$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.i2s_1.g1g();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.QuotFactory.transformationMatrix$delegate.<anonymous>.<anonymous>' call
      var size = _get_rowEchelonForm__ymu65r(this$0).h2h().y2i();
      var dim = this$0.j2s_1.p22();
      tmp$ret$0 = tmp0_run.u2k(_get_rowEchelonForm__ymu65r(this$0).h2h(), until(size - dim | 0, size));
      tmp$ret$1 = tmp$ret$0;
      return tmp$ret$1;
    };
  }
  function QuotFactory(matrixSpace, totalVectorSpace, quotientGenerator) {
    Companion_getInstance_77();
    this.i2s_1 = matrixSpace;
    this.j2s_1 = totalVectorSpace;
    this.k2s_1 = quotientGenerator;
    this.l2s_1 = this.i2s_1.b1h();
    var tmp = this;
    tmp.m2s_1 = lazy(QuotFactory$rowEchelonForm$delegate$lambda(this));
    var tmp_0 = this;
    tmp_0.n2s_1 = lazy(QuotFactory$quotientDim$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.o2s_1 = lazy(QuotFactory$basisIndices$delegate$lambda(this));
    var tmp_2 = this;
    tmp_2.p2s_1 = lazy(QuotFactory$transformationMatrix$delegate$lambda(this));
    var tmp0_iterator = this.k2s_1.f();
    while (tmp0_iterator.g()) {
      var vector = tmp0_iterator.h();
      // Inline function 'kotlin.require' call
      // Inline function 'kotlin.contracts.contract' call
      if (!this.j2s_1.m2r(vector)) {
        // Inline function 'com.github.shwaka.kohomology.vectsp.QuotFactory.<anonymous>' call
        var message = 'The vector ' + vector + ' is not contained in the vector space ' + this.j2s_1;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
  }
  protoOf(QuotFactory).r2s = function () {
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = _get_basisIndices__7ymdcu(this);
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.QuotFactory.getBasisNames.<anonymous>' call
      tmp$ret$0 = this.j2s_1.m1t().l(item - this.k2s_1.i() | 0);
      tmp0_mapTo.a(tmp$ret$0);
    }
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_mapTo, 10));
    var tmp0_iterator_0 = tmp0_mapTo.f();
    while (tmp0_iterator_0.g()) {
      var item_0 = tmp0_iterator_0.h();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.vectsp.QuotFactory.getBasisNames.<anonymous>' call
      tmp$ret$3 = new QuotBasis(item_0);
      tmp0_mapTo_0.a(tmp$ret$3);
    }
    return tmp0_mapTo_0;
  };
  protoOf(QuotFactory).s2s = function () {
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.vectsp.QuotFactory.getProjectionMatrix.<anonymous>' call
    return this.i2s_1.g1g().w2k(_get_transformationMatrix__anz1r3(this), until(_get_quotientDim__c5gs2c(this), this.j2s_1.p22()));
  };
  protoOf(QuotFactory).t2s = function () {
    var tmp = Companion_getInstance_77();
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = _get_basisIndices__7ymdcu(this);
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.QuotFactory.getSectionMatrix.<anonymous>' call
      tmp$ret$0 = this.j2s_1.m1t().l(item - this.k2s_1.i() | 0);
      tmp0_mapTo.a(tmp$ret$0);
    }
    return tmp.q2s(this.i2s_1, tmp0_mapTo, this.j2s_1.p22());
  };
  function _get_basisNameToIndex__26cf4t_0($this) {
    // Inline function 'kotlin.getValue' call
    basisNameToIndex$factory_0();
    return $this.a2t_1.w();
  }
  function QuotVectorSpaceImpl$basisNames$delegate$lambda(this$0) {
    return function () {
      return this$0.u2s_1.r2s();
    };
  }
  function QuotVectorSpaceImpl$basisNameToIndex$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$2;
      // Inline function 'kotlin.collections.mapIndexed' call
      var tmp0_mapIndexed = this$0.j1s();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapIndexedTo' call
      var tmp0_mapIndexedTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_mapIndexed, 10));
      var index = 0;
      var tmp0_iterator = tmp0_mapIndexed.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.vectsp.QuotVectorSpaceImpl.basisNameToIndex$delegate.<anonymous>.<anonymous>' call
        var tmp1 = index;
        index = tmp1 + 1 | 0;
        var tmp1_anonymous = checkIndexOverflow(tmp1);
        tmp$ret$0 = new Pair(item, tmp1_anonymous);
        tmp0_mapIndexedTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapIndexedTo;
      tmp$ret$2 = tmp$ret$1;
      return toMap(tmp$ret$2);
    };
  }
  function QuotVectorSpaceImpl$projection$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_74().p2r(this$0.u2s_1.j2s_1, this$0, this$0.u2s_1.i2s_1, this$0.u2s_1.s2s());
    };
  }
  function QuotVectorSpaceImpl$section$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_74().p2r(this$0, this$0.u2s_1.j2s_1, this$0.u2s_1.i2s_1, this$0.u2s_1.t2s());
    };
  }
  function QuotVectorSpaceImpl$toString$lambda(it) {
    return it.toString();
  }
  function QuotVectorSpaceImpl(factory) {
    this.u2s_1 = factory;
    this.v2s_1 = this.u2s_1.l2s_1;
    var tmp = this;
    tmp.w2s_1 = lazy(QuotVectorSpaceImpl$basisNames$delegate$lambda(this));
    this.x2s_1 = this.u2s_1.j2s_1;
    this.y2s_1 = Companion_getInstance_75().j1w(this.x2s_1.e1h());
    this.z2s_1 = Companion_getInstance_86().v2r(this);
    var tmp_0 = this;
    tmp_0.a2t_1 = lazy(QuotVectorSpaceImpl$basisNameToIndex$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.b2t_1 = lazy(QuotVectorSpaceImpl$projection$delegate$lambda(this));
    var tmp_2 = this;
    tmp_2.c2t_1 = lazy(QuotVectorSpaceImpl$section$delegate$lambda(this));
  }
  protoOf(QuotVectorSpaceImpl).b1h = function () {
    return this.v2s_1;
  };
  protoOf(QuotVectorSpaceImpl).j1s = function () {
    // Inline function 'kotlin.getValue' call
    basisNames$factory();
    return this.w2s_1.w();
  };
  protoOf(QuotVectorSpaceImpl).e1h = function () {
    return this.y2s_1;
  };
  protoOf(QuotVectorSpaceImpl).g1g = function () {
    return this.z2s_1;
  };
  protoOf(QuotVectorSpaceImpl).d2t = function (basisName) {
    var tmp0_elvis_lhs = _get_basisNameToIndex__26cf4t_0(this).u2(basisName);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw NoSuchElementException_init_$Create$_0('' + basisName + ' is not a name of basis element of the vector space ' + this);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  protoOf(QuotVectorSpaceImpl).x2r = function (basisName) {
    return this.d2t(basisName instanceof QuotBasis ? basisName : THROW_CCE());
  };
  protoOf(QuotVectorSpaceImpl).y1n = function () {
    // Inline function 'kotlin.getValue' call
    projection$factory_2();
    return this.b2t_1.w();
  };
  protoOf(QuotVectorSpaceImpl).l1o = function () {
    // Inline function 'kotlin.getValue' call
    section$factory_0();
    return this.c2t_1.w();
  };
  protoOf(QuotVectorSpaceImpl).toString = function () {
    var tmp = this.j1s();
    var basisNamesString = joinToString(tmp, ', ', VOID, VOID, VOID, VOID, QuotVectorSpaceImpl$toString$lambda);
    return 'QuotVectorSpace(' + basisNamesString + ')';
  };
  function rowEchelonForm$factory() {
    return getPropertyCallableRef('rowEchelonForm', 1, KProperty1, function (receiver) {
      return _get_rowEchelonForm__ymu65r(receiver);
    }, null);
  }
  function quotientDim$factory() {
    return getPropertyCallableRef('quotientDim', 1, KProperty1, function (receiver) {
      return _get_quotientDim__c5gs2c(receiver);
    }, null);
  }
  function basisIndices$factory() {
    return getPropertyCallableRef('basisIndices', 1, KProperty1, function (receiver) {
      return _get_basisIndices__7ymdcu(receiver);
    }, null);
  }
  function transformationMatrix$factory() {
    return getPropertyCallableRef('transformationMatrix', 1, KProperty1, function (receiver) {
      return _get_transformationMatrix__anz1r3(receiver);
    }, null);
  }
  function basisNames$factory() {
    return getPropertyCallableRef('basisNames', 1, KProperty1, function (receiver) {
      return receiver.j1s();
    }, null);
  }
  function basisNameToIndex$factory_0() {
    return getPropertyCallableRef('basisNameToIndex', 1, KProperty1, function (receiver) {
      return _get_basisNameToIndex__26cf4t_0(receiver);
    }, null);
  }
  function projection$factory_2() {
    return getPropertyCallableRef('projection', 1, KProperty1, function (receiver) {
      return receiver.y1n();
    }, null);
  }
  function section$factory_0() {
    return getPropertyCallableRef('section', 1, KProperty1, function (receiver) {
      return receiver.l1o();
    }, null);
  }
  function SubQuotBasis$Companion$convertGetInternalPrintConfig$lambda$lambda($printer) {
    return function (basisName) {
      return '[' + $printer.t26(basisName.e2t_1) + ']';
    };
  }
  function SubQuotBasis$Companion$convertGetInternalPrintConfig$lambda($getInternalPrintConfig) {
    return function (printConfig) {
      var internalPrintConfig = $getInternalPrintConfig(printConfig);
      var printer = Printer_init_$Create$(printConfig);
      return new InternalPrintConfig(internalPrintConfig.r2q_1, SubQuotBasis$Companion$convertGetInternalPrintConfig$lambda$lambda(printer), null);
    };
  }
  function Companion_77() {
    Companion_instance_77 = this;
  }
  protoOf(Companion_77).j1w = function (getInternalPrintConfig) {
    return SubQuotBasis$Companion$convertGetInternalPrintConfig$lambda(getInternalPrintConfig);
  };
  var Companion_instance_77;
  function Companion_getInstance_78() {
    if (Companion_instance_77 == null)
      new Companion_77();
    return Companion_instance_77;
  }
  function SubQuotBasis(vector) {
    Companion_getInstance_78();
    this.e2t_1 = vector;
  }
  protoOf(SubQuotBasis).toString = function () {
    return '[' + this.e2t_1 + ']';
  };
  protoOf(SubQuotBasis).hashCode = function () {
    return this.e2t_1.hashCode();
  };
  protoOf(SubQuotBasis).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SubQuotBasis))
      return false;
    var tmp0_other_with_cast = other instanceof SubQuotBasis ? other : THROW_CCE();
    if (!this.e2t_1.equals(tmp0_other_with_cast.e2t_1))
      return false;
    return true;
  };
  function _get_basisNameToIndex__26cf4t_1($this) {
    // Inline function 'kotlin.getValue' call
    basisNameToIndex$factory_1();
    return $this.i1o_1.w();
  }
  function Companion_78() {
    Companion_instance_78 = this;
  }
  protoOf(Companion_78).g1z = function (matrixSpace, totalVectorSpace, subspaceGenerator, quotientGenerator) {
    var factory = new SubQuotFactory(matrixSpace, totalVectorSpace, subspaceGenerator.n1r(), quotientGenerator.n1r());
    return new SubQuotVectorSpace(factory);
  };
  var Companion_instance_78;
  function Companion_getInstance_79() {
    if (Companion_instance_78 == null)
      new Companion_78();
    return Companion_instance_78;
  }
  function SubQuotVectorSpace$basisNameToIndex$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$2;
      // Inline function 'kotlin.collections.mapIndexed' call
      var tmp0_mapIndexed = this$0.e1o_1;
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapIndexedTo' call
      var tmp0_mapIndexedTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_mapIndexed, 10));
      var index = 0;
      var tmp0_iterator = tmp0_mapIndexed.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.vectsp.SubQuotVectorSpace.basisNameToIndex$delegate.<anonymous>.<anonymous>' call
        var tmp1 = index;
        index = tmp1 + 1 | 0;
        var tmp1_anonymous = checkIndexOverflow(tmp1);
        tmp$ret$0 = new Pair(item, tmp1_anonymous);
        tmp0_mapIndexedTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapIndexedTo;
      tmp$ret$2 = tmp$ret$1;
      return toMap(tmp$ret$2);
    };
  }
  function SubQuotVectorSpace$projection$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_74().p2r(this$0.c1o_1.g2t_1, this$0, this$0.c1o_1.f2t_1, this$0.c1o_1.m2t_1);
    };
  }
  function SubQuotVectorSpace$section$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_74().p2r(this$0, this$0.c1o_1.g2t_1, this$0.c1o_1.f2t_1, this$0.c1o_1.n2t_1);
    };
  }
  function SubQuotVectorSpace$toString$lambda(it) {
    return it.toString();
  }
  function SubQuotVectorSpace(factory) {
    Companion_getInstance_79();
    this.c1o_1 = factory;
    this.d1o_1 = this.c1o_1.j2t_1;
    this.e1o_1 = this.c1o_1.k2t_1;
    this.f1o_1 = Companion_getInstance_78().j1w(this.c1o_1.g2t_1.e1h());
    this.g1o_1 = Companion_getInstance_86().v2r(this);
    this.h1o_1 = this.c1o_1.g2t_1;
    var tmp = this;
    tmp.i1o_1 = lazy(SubQuotVectorSpace$basisNameToIndex$delegate$lambda(this));
    var tmp_0 = this;
    tmp_0.j1o_1 = lazy(SubQuotVectorSpace$projection$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.k1o_1 = lazy(SubQuotVectorSpace$section$delegate$lambda(this));
  }
  protoOf(SubQuotVectorSpace).b1h = function () {
    return this.d1o_1;
  };
  protoOf(SubQuotVectorSpace).j1s = function () {
    return this.e1o_1;
  };
  protoOf(SubQuotVectorSpace).e1h = function () {
    return this.f1o_1;
  };
  protoOf(SubQuotVectorSpace).g1g = function () {
    return this.g1o_1;
  };
  protoOf(SubQuotVectorSpace).q2t = function (basisName) {
    var tmp0_elvis_lhs = _get_basisNameToIndex__26cf4t_1(this).u2(basisName);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw NoSuchElementException_init_$Create$_0('' + basisName + ' is not a name of basis element of the vector space ' + this);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  protoOf(SubQuotVectorSpace).x2r = function (basisName) {
    return this.q2t(basisName instanceof SubQuotBasis ? basisName : THROW_CCE());
  };
  protoOf(SubQuotVectorSpace).y1n = function () {
    // Inline function 'kotlin.getValue' call
    projection$factory_3();
    return this.j1o_1.w();
  };
  protoOf(SubQuotVectorSpace).l1o = function () {
    // Inline function 'kotlin.getValue' call
    section$factory_1();
    return this.k1o_1.w();
  };
  protoOf(SubQuotVectorSpace).t1w = function (vector) {
    return this.c1o_1.t1w(vector);
  };
  protoOf(SubQuotVectorSpace).toString = function () {
    var basisNamesString = joinToString(this.e1o_1, ', ', VOID, VOID, VOID, VOID, SubQuotVectorSpace$toString$lambda);
    return 'SubQuotVectorSpace(' + basisNamesString + ')';
  };
  function Companion_79() {
    Companion_instance_79 = this;
  }
  protoOf(Companion_79).q2s = function (_this__u8e3s4, vectors, dim) {
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(vectors, 10));
    var tmp0_iterator = vectors.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.Companion.fromVectors.<anonymous>' call
      tmp$ret$0 = item.e2s();
      tmp0_mapTo.a(tmp$ret$0);
    }
    var numVectorList = tmp0_mapTo;
    return _this__u8e3s4.u2i(numVectorList, dim);
  };
  var Companion_instance_79;
  function Companion_getInstance_80() {
    if (Companion_instance_79 == null)
      new Companion_79();
    return Companion_instance_79;
  }
  function SubQuotFactory(matrixSpace, totalVectorSpace, subspaceGenerator, quotientGenerator) {
    Companion_getInstance_80();
    this.f2t_1 = matrixSpace;
    this.g2t_1 = totalVectorSpace;
    this.h2t_1 = subspaceGenerator;
    this.i2t_1 = quotientGenerator;
    this.j2t_1 = this.f2t_1.b1h();
    var tmp0_iterator = plus(this.h2t_1, this.i2t_1).f();
    while (tmp0_iterator.g()) {
      var vector = tmp0_iterator.h();
      // Inline function 'kotlin.require' call
      // Inline function 'kotlin.contracts.contract' call
      if (!this.g2t_1.m2r(vector)) {
        // Inline function 'com.github.shwaka.kohomology.vectsp.SubQuotFactory.<anonymous>' call
        var message = 'The vector ' + vector + ' is not contained in the vector space ' + this.g2t_1;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    // Inline function 'com.github.shwaka.kococo.debugOnly' call
    // Inline function 'kotlin.run' call
    var tmp1_run = this.f2t_1.g1g();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.vectsp.SubQuotFactory.<anonymous>' call
    var quotientMatrix = Companion_getInstance_80().q2s(tmp1_run.y1g(), this.i2t_1, this.g2t_1.p22());
    var subspaceMatrix = Companion_getInstance_80().q2s(tmp1_run.y1g(), this.h2t_1, this.g2t_1.p22());
    var id = tmp1_run.y1g().v2i(this.g2t_1.p22());
    var joinedMatrix = tmp1_run.s2k(listOf_0([quotientMatrix, subspaceMatrix, id]));
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.vectsp.SubQuotFactory.<anonymous>' call
    var rowEchelonForm = this.f2t_1.g1g().t2k(joinedMatrix);
    var tmp = this;
    // Inline function 'kotlin.collections.filter' call
    var tmp3_filter = rowEchelonForm.i2h();
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo = ArrayList_init_$Create$_0();
    var tmp0_iterator_0 = tmp3_filter.f();
    while (tmp0_iterator_0.g()) {
      var element = tmp0_iterator_0.h();
      // Inline function 'com.github.shwaka.kohomology.vectsp.SubQuotFactory.<anonymous>' call
      if (element < this.i2t_1.i()) {
        tmp0_filterTo.a(element);
      }
    }
    tmp.o2t_1 = tmp0_filterTo.i();
    var tmp_0 = this;
    // Inline function 'kotlin.collections.filter' call
    var tmp4_filter = rowEchelonForm.i2h();
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo_0 = ArrayList_init_$Create$_0();
    var tmp0_iterator_1 = tmp4_filter.f();
    while (tmp0_iterator_1.g()) {
      var element_0 = tmp0_iterator_1.h();
      // Inline function 'com.github.shwaka.kohomology.vectsp.SubQuotFactory.<anonymous>' call
      if (this.i2t_1.i() <= element_0 ? element_0 < (this.i2t_1.i() + this.h2t_1.i() | 0) : false) {
        tmp0_filterTo_0.a(element_0);
      }
    }
    tmp_0.p2t_1 = tmp0_filterTo_0.i();
    var basisIndices = slice(rowEchelonForm.i2h(), until(this.o2t_1, this.o2t_1 + this.p2t_1 | 0));
    var tmp_1 = this;
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(basisIndices, 10));
    var tmp0_iterator_2 = basisIndices.f();
    while (tmp0_iterator_2.g()) {
      var item = tmp0_iterator_2.h();
      var tmp$ret$11;
      // Inline function 'com.github.shwaka.kohomology.vectsp.SubQuotFactory.<anonymous>' call
      tmp$ret$11 = this.h2t_1.l(item - this.i2t_1.i() | 0);
      tmp0_mapTo.a(tmp$ret$11);
    }
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_mapTo, 10));
    var tmp0_iterator_3 = tmp0_mapTo.f();
    while (tmp0_iterator_3.g()) {
      var item_0 = tmp0_iterator_3.h();
      var tmp$ret$14;
      // Inline function 'com.github.shwaka.kohomology.vectsp.SubQuotFactory.<anonymous>' call
      tmp$ret$14 = new SubQuotBasis(item_0);
      tmp0_mapTo_0.a(tmp$ret$14);
    }
    tmp_1.k2t_1 = tmp0_mapTo_0;
    var tmp_2 = this;
    // Inline function 'kotlin.run' call
    var tmp6_run = this.f2t_1.g1g();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.vectsp.SubQuotFactory.<anonymous>' call
    var size = rowEchelonForm.h2h().y2i();
    var dim = this.g2t_1.p22();
    tmp_2.l2t_1 = tmp6_run.u2k(rowEchelonForm.h2h(), until(size - dim | 0, size));
    var tmp_3 = this;
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.vectsp.SubQuotFactory.<anonymous>' call
    tmp_3.m2t_1 = this.f2t_1.g1g().w2k(this.l2t_1, until(this.o2t_1, this.o2t_1 + this.p2t_1 | 0));
    var tmp_4 = this;
    var tmp_5 = Companion_getInstance_80();
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_1 = ArrayList_init_$Create$(collectionSizeOrDefault(basisIndices, 10));
    var tmp0_iterator_4 = basisIndices.f();
    while (tmp0_iterator_4.g()) {
      var item_1 = tmp0_iterator_4.h();
      var tmp$ret$21;
      // Inline function 'com.github.shwaka.kohomology.vectsp.SubQuotFactory.<anonymous>' call
      tmp$ret$21 = this.h2t_1.l(item_1 - this.i2t_1.i() | 0);
      tmp0_mapTo_1.a(tmp$ret$21);
    }
    tmp_4.n2t_1 = tmp_5.q2s(this.f2t_1, tmp0_mapTo_1, this.g2t_1.p22());
  }
  protoOf(SubQuotFactory).t1w = function (vector) {
    // Inline function 'kotlin.run' call
    var tmp0_run = this.f2t_1.g1g();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.vectsp.SubQuotFactory.subspaceContains.<anonymous>' call
    var numVector = tmp0_run.v2k(this.l2t_1, vector.q1r_1);
    var start = this.o2t_1 + this.p2t_1 | 0;
    var limit = this.g2t_1.p22();
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp0_all = until(start, limit);
      var tmp;
      if (isInterface(tmp0_all, Collection)) {
        tmp = tmp0_all.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var inductionVariable = tmp0_all.z_1;
      var last = tmp0_all.a1_1;
      if (inductionVariable <= last)
        do {
          var element = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'com.github.shwaka.kohomology.vectsp.SubQuotFactory.subspaceContains.<anonymous>.<anonymous>' call
          if (!tmp0_run.g1j(numVector, element).tj()) {
            tmp$ret$0 = false;
            break $l$block_0;
          }
        }
         while (!(element === last));
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  function basisNameToIndex$factory_1() {
    return getPropertyCallableRef('basisNameToIndex', 1, KProperty1, function (receiver) {
      return _get_basisNameToIndex__26cf4t_1(receiver);
    }, null);
  }
  function projection$factory_3() {
    return getPropertyCallableRef('projection', 1, KProperty1, function (receiver) {
      return receiver.y1n();
    }, null);
  }
  function section$factory_1() {
    return getPropertyCallableRef('section', 1, KProperty1, function (receiver) {
      return receiver.l1o();
    }, null);
  }
  function SubBasis$Companion$convertGetInternalPrintConfig$lambda$lambda($printer) {
    return function (basisName) {
      return '(' + $printer.t26(basisName.r2t_1) + ')';
    };
  }
  function SubBasis$Companion$convertGetInternalPrintConfig$lambda($getInternalPrintConfig) {
    return function (printConfig) {
      var internalPrintConfig = $getInternalPrintConfig(printConfig);
      var printer = Printer_init_$Create$(printConfig);
      return new InternalPrintConfig(internalPrintConfig.r2q_1, SubBasis$Companion$convertGetInternalPrintConfig$lambda$lambda(printer), null);
    };
  }
  function Companion_80() {
    Companion_instance_80 = this;
  }
  protoOf(Companion_80).j1w = function (getInternalPrintConfig) {
    return SubBasis$Companion$convertGetInternalPrintConfig$lambda(getInternalPrintConfig);
  };
  var Companion_instance_80;
  function Companion_getInstance_81() {
    if (Companion_instance_80 == null)
      new Companion_80();
    return Companion_instance_80;
  }
  function SubBasis(vector) {
    Companion_getInstance_81();
    this.r2t_1 = vector;
  }
  protoOf(SubBasis).toString = function () {
    return '(' + this.r2t_1 + ')';
  };
  protoOf(SubBasis).hashCode = function () {
    return this.r2t_1.hashCode();
  };
  protoOf(SubBasis).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SubBasis))
      return false;
    var tmp0_other_with_cast = other instanceof SubBasis ? other : THROW_CCE();
    if (!this.r2t_1.equals(tmp0_other_with_cast.r2t_1))
      return false;
    return true;
  };
  function Companion_81() {
    Companion_instance_81 = this;
  }
  protoOf(Companion_81).o1r = function (matrixSpace, totalVectorSpace, generator) {
    var factory = new SubFactory(matrixSpace, totalVectorSpace, generator);
    return new SubVectorSpaceImpl(factory);
  };
  var Companion_instance_81;
  function Companion_getInstance_82() {
    if (Companion_instance_81 == null)
      new Companion_81();
    return Companion_instance_81;
  }
  function asSubVectorSpace(_this__u8e3s4, matrixSpace) {
    return new WholeSubVectorSpace(matrixSpace, _this__u8e3s4);
  }
  function _get_rowEchelonForm__ymu65r_0($this) {
    // Inline function 'kotlin.getValue' call
    rowEchelonForm$factory_0();
    return $this.w2t_1.w();
  }
  function _get_basisIndices__7ymdcu_0($this) {
    // Inline function 'kotlin.getValue' call
    basisIndices$factory_0();
    return $this.y2t_1.w();
  }
  function _get_transformationMatrix__anz1r3_0($this) {
    // Inline function 'kotlin.getValue' call
    transformationMatrix$factory_0();
    return $this.z2t_1.w();
  }
  function Companion_82() {
    Companion_instance_82 = this;
  }
  protoOf(Companion_82).q2s = function (_this__u8e3s4, vectors, dim) {
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(vectors, 10));
    var tmp0_iterator = vectors.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.Companion.fromVectors.<anonymous>' call
      tmp$ret$0 = item.e2s();
      tmp0_mapTo.a(tmp$ret$0);
    }
    var numVectorList = tmp0_mapTo;
    return _this__u8e3s4.u2i(numVectorList, dim);
  };
  var Companion_instance_82;
  function Companion_getInstance_83() {
    if (Companion_instance_82 == null)
      new Companion_82();
    return Companion_instance_82;
  }
  function SubFactory$rowEchelonForm$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$3;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.s2t_1.g1g();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$2;
      // Inline function 'com.github.shwaka.kohomology.vectsp.SubFactory.rowEchelonForm$delegate.<anonymous>.<anonymous>' call
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.SubFactory.rowEchelonForm$delegate.<anonymous>.<anonymous>.<anonymous>' call
      var subspaceMatrix = Companion_getInstance_83().q2s(tmp0_run.y1g(), this$0.u2t_1, this$0.t2t_1.p22());
      var id = tmp0_run.y1g().v2i(this$0.t2t_1.p22());
      tmp$ret$0 = tmp0_run.s2k(listOf_0([subspaceMatrix, id]));
      tmp$ret$1 = tmp$ret$0;
      var joinedMatrix = tmp$ret$1;
      tmp$ret$2 = tmp0_run.t2k(joinedMatrix);
      tmp$ret$3 = tmp$ret$2;
      return tmp$ret$3;
    };
  }
  function SubFactory$dim$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$2;
      // Inline function 'kotlin.collections.filter' call
      var tmp0_filter = _get_rowEchelonForm__ymu65r_0(this$0).i2h();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.filterTo' call
      var tmp0_filterTo = ArrayList_init_$Create$_0();
      var tmp0_iterator = tmp0_filter.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.vectsp.SubFactory.dim$delegate.<anonymous>.<anonymous>' call
        tmp$ret$0 = element < this$0.u2t_1.i();
        if (tmp$ret$0) {
          tmp0_filterTo.a(element);
        }
      }
      tmp$ret$1 = tmp0_filterTo;
      tmp$ret$2 = tmp$ret$1;
      return tmp$ret$2.i();
    };
  }
  function SubFactory$basisIndices$delegate$lambda(this$0) {
    return function () {
      return slice(_get_rowEchelonForm__ymu65r_0(this$0).i2h(), until(0, this$0.p22()));
    };
  }
  function SubFactory$transformationMatrix$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.s2t_1.g1g();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.SubFactory.transformationMatrix$delegate.<anonymous>.<anonymous>' call
      var size = _get_rowEchelonForm__ymu65r_0(this$0).h2h().y2i();
      var dim = this$0.t2t_1.p22();
      tmp$ret$0 = tmp0_run.u2k(_get_rowEchelonForm__ymu65r_0(this$0).h2h(), until(size - dim | 0, size));
      tmp$ret$1 = tmp$ret$0;
      return tmp$ret$1;
    };
  }
  function SubFactory(matrixSpace, totalVectorSpace, generator) {
    Companion_getInstance_83();
    this.s2t_1 = matrixSpace;
    this.t2t_1 = totalVectorSpace;
    this.u2t_1 = generator;
    this.v2t_1 = this.s2t_1.b1h();
    var tmp = this;
    tmp.w2t_1 = lazy(SubFactory$rowEchelonForm$delegate$lambda(this));
    var tmp_0 = this;
    tmp_0.x2t_1 = lazy(SubFactory$dim$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.y2t_1 = lazy(SubFactory$basisIndices$delegate$lambda(this));
    var tmp_2 = this;
    tmp_2.z2t_1 = lazy(SubFactory$transformationMatrix$delegate$lambda(this));
    var tmp0_iterator = this.u2t_1.f();
    while (tmp0_iterator.g()) {
      var vector = tmp0_iterator.h();
      // Inline function 'kotlin.require' call
      // Inline function 'kotlin.contracts.contract' call
      if (!this.t2t_1.m2r(vector)) {
        // Inline function 'com.github.shwaka.kohomology.vectsp.SubFactory.<anonymous>' call
        var message = 'The vector ' + vector + ' is not contained in the vector space ' + this.t2t_1;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
  }
  protoOf(SubFactory).p22 = function () {
    // Inline function 'kotlin.getValue' call
    dim$factory();
    return this.x2t_1.w();
  };
  protoOf(SubFactory).r2s = function () {
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = _get_basisIndices__7ymdcu_0(this);
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.SubFactory.getBasisNames.<anonymous>' call
      tmp$ret$0 = this.u2t_1.l(item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_mapTo, 10));
    var tmp0_iterator_0 = tmp0_mapTo.f();
    while (tmp0_iterator_0.g()) {
      var item_0 = tmp0_iterator_0.h();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.vectsp.SubFactory.getBasisNames.<anonymous>' call
      tmp$ret$3 = new SubBasis(item_0);
      tmp0_mapTo_0.a(tmp$ret$3);
    }
    return tmp0_mapTo_0;
  };
  protoOf(SubFactory).a2u = function () {
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = _get_basisIndices__7ymdcu_0(this);
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.SubFactory.getInclusionMatrix.<anonymous>' call
      tmp$ret$0 = this.u2t_1.l(item).e2s();
      tmp0_mapTo.a(tmp$ret$0);
    }
    return this.s2t_1.u2i(tmp0_mapTo, this.t2t_1.p22());
  };
  protoOf(SubFactory).b2u = function () {
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.vectsp.SubFactory.getRetractionMatrix.<anonymous>' call
    return this.s2t_1.g1g().w2k(_get_transformationMatrix__anz1r3_0(this), until(0, this.p22()));
  };
  protoOf(SubFactory).m2r = function (vector) {
    // Inline function 'kotlin.run' call
    var tmp0_run = this.s2t_1.g1g();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.vectsp.SubFactory.contains.<anonymous>' call
    var numVector = tmp0_run.v2k(_get_transformationMatrix__anz1r3_0(this), vector.q1r_1);
    var start = this.p22();
    var limit = this.t2t_1.p22();
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp0_all = until(start, limit);
      var tmp;
      if (isInterface(tmp0_all, Collection)) {
        tmp = tmp0_all.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var inductionVariable = tmp0_all.z_1;
      var last = tmp0_all.a1_1;
      if (inductionVariable <= last)
        do {
          var element = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'com.github.shwaka.kohomology.vectsp.SubFactory.contains.<anonymous>.<anonymous>' call
          if (!tmp0_run.g1j(numVector, element).tj()) {
            tmp$ret$0 = false;
            break $l$block_0;
          }
        }
         while (!(element === last));
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  function _get_basisNameToIndex__26cf4t_2($this) {
    // Inline function 'kotlin.getValue' call
    basisNameToIndex$factory_2();
    return $this.j2u_1.w();
  }
  function SubVectorSpaceImpl$basisNames$delegate$lambda(this$0) {
    return function () {
      return this$0.c2u_1.r2s();
    };
  }
  function SubVectorSpaceImpl$basisNameToIndex$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$2;
      // Inline function 'kotlin.collections.mapIndexed' call
      var tmp0_mapIndexed = this$0.j1s();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapIndexedTo' call
      var tmp0_mapIndexedTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_mapIndexed, 10));
      var index = 0;
      var tmp0_iterator = tmp0_mapIndexed.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.vectsp.SubVectorSpaceImpl.basisNameToIndex$delegate.<anonymous>.<anonymous>' call
        var tmp1 = index;
        index = tmp1 + 1 | 0;
        var tmp1_anonymous = checkIndexOverflow(tmp1);
        tmp$ret$0 = new Pair(item, tmp1_anonymous);
        tmp0_mapIndexedTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapIndexedTo;
      tmp$ret$2 = tmp$ret$1;
      return toMap(tmp$ret$2);
    };
  }
  function SubVectorSpaceImpl$inclusion$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_74().p2r(this$0, this$0.c2u_1.t2t_1, this$0.c2u_1.s2t_1, this$0.c2u_1.a2u());
    };
  }
  function SubVectorSpaceImpl$retraction$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_74().p2r(this$0.c2u_1.t2t_1, this$0, this$0.c2u_1.s2t_1, this$0.c2u_1.b2u());
    };
  }
  function SubVectorSpaceImpl$toString$lambda(it) {
    return it.toString();
  }
  function SubVectorSpaceImpl(factory) {
    this.c2u_1 = factory;
    this.d2u_1 = this.c2u_1.v2t_1;
    var tmp = this;
    tmp.e2u_1 = lazy(SubVectorSpaceImpl$basisNames$delegate$lambda(this));
    this.f2u_1 = this.c2u_1.t2t_1;
    this.g2u_1 = this.c2u_1.u2t_1;
    this.h2u_1 = Companion_getInstance_81().j1w(this.f2u_1.e1h());
    this.i2u_1 = Companion_getInstance_86().v2r(this);
    var tmp_0 = this;
    tmp_0.j2u_1 = lazy(SubVectorSpaceImpl$basisNameToIndex$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.k2u_1 = lazy(SubVectorSpaceImpl$inclusion$delegate$lambda(this));
    var tmp_2 = this;
    tmp_2.l2u_1 = lazy(SubVectorSpaceImpl$retraction$delegate$lambda(this));
  }
  protoOf(SubVectorSpaceImpl).b1h = function () {
    return this.d2u_1;
  };
  protoOf(SubVectorSpaceImpl).j1s = function () {
    // Inline function 'kotlin.getValue' call
    basisNames$factory_0();
    return this.e2u_1.w();
  };
  protoOf(SubVectorSpaceImpl).k1x = function () {
    return this.f2u_1;
  };
  protoOf(SubVectorSpaceImpl).n1r = function () {
    return this.g2u_1;
  };
  protoOf(SubVectorSpaceImpl).e1h = function () {
    return this.h2u_1;
  };
  protoOf(SubVectorSpaceImpl).g1g = function () {
    return this.i2u_1;
  };
  protoOf(SubVectorSpaceImpl).m2u = function (basisName) {
    var tmp0_elvis_lhs = _get_basisNameToIndex__26cf4t_2(this).u2(basisName);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw NoSuchElementException_init_$Create$_0('' + basisName + ' is not a name of basis element of the vector space ' + this);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  protoOf(SubVectorSpaceImpl).x2r = function (basisName) {
    return this.m2u(basisName instanceof SubBasis ? basisName : THROW_CCE());
  };
  protoOf(SubVectorSpaceImpl).s1l = function () {
    // Inline function 'kotlin.getValue' call
    inclusion$factory_2();
    return this.k2u_1.w();
  };
  protoOf(SubVectorSpaceImpl).j1x = function () {
    // Inline function 'kotlin.getValue' call
    retraction$factory();
    return this.l2u_1.w();
  };
  protoOf(SubVectorSpaceImpl).t1w = function (vector) {
    return this.c2u_1.m2r(vector);
  };
  protoOf(SubVectorSpaceImpl).toString = function () {
    var tmp = this.j1s();
    var basisNamesString = joinToString(tmp, ', ', VOID, VOID, VOID, VOID, SubVectorSpaceImpl$toString$lambda);
    return 'SubVectorSpace(' + basisNamesString + ')';
  };
  function _get_basisNameToIndex__26cf4t_3($this) {
    // Inline function 'kotlin.getValue' call
    basisNameToIndex$factory_3();
    return $this.u2u_1.w();
  }
  function WholeSubVectorSpace$basisNameToIndex$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$2;
      // Inline function 'kotlin.collections.mapIndexed' call
      var tmp0_mapIndexed = this$0.q2u_1;
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapIndexedTo' call
      var tmp0_mapIndexedTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_mapIndexed, 10));
      var index = 0;
      var tmp0_iterator = tmp0_mapIndexed.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.vectsp.WholeSubVectorSpace.basisNameToIndex$delegate.<anonymous>.<anonymous>' call
        var tmp1 = index;
        index = tmp1 + 1 | 0;
        var tmp1_anonymous = checkIndexOverflow(tmp1);
        tmp$ret$0 = new Pair(item, tmp1_anonymous);
        tmp0_mapIndexedTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapIndexedTo;
      tmp$ret$2 = tmp$ret$1;
      return toMap(tmp$ret$2);
    };
  }
  function WholeSubVectorSpace$inclusion$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_74().p2r(this$0, this$0.o2u_1, this$0.n2u_1, this$0.n2u_1.v2i(this$0.o2u_1.p22()));
    };
  }
  function WholeSubVectorSpace$retraction$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_74().p2r(this$0.o2u_1, this$0, this$0.n2u_1, this$0.n2u_1.v2i(this$0.o2u_1.p22()));
    };
  }
  function WholeSubVectorSpace(matrixSpace, totalVectorSpace) {
    this.n2u_1 = matrixSpace;
    this.o2u_1 = totalVectorSpace;
    this.p2u_1 = this.o2u_1.b1h();
    var tmp = this;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = this.o2u_1.m1t();
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.WholeSubVectorSpace.basisNames.<anonymous>' call
      tmp$ret$0 = new SubBasis(item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp.q2u_1 = tmp0_mapTo;
    this.r2u_1 = this.o2u_1.m1t();
    this.s2u_1 = Companion_getInstance_81().j1w(this.o2u_1.e1h());
    this.t2u_1 = Companion_getInstance_86().v2r(this);
    var tmp_0 = this;
    tmp_0.u2u_1 = lazy(WholeSubVectorSpace$basisNameToIndex$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.v2u_1 = lazy(WholeSubVectorSpace$inclusion$delegate$lambda(this));
    var tmp_2 = this;
    tmp_2.w2u_1 = lazy(WholeSubVectorSpace$retraction$delegate$lambda(this));
  }
  protoOf(WholeSubVectorSpace).k1x = function () {
    return this.o2u_1;
  };
  protoOf(WholeSubVectorSpace).b1h = function () {
    return this.p2u_1;
  };
  protoOf(WholeSubVectorSpace).j1s = function () {
    return this.q2u_1;
  };
  protoOf(WholeSubVectorSpace).n1r = function () {
    return this.r2u_1;
  };
  protoOf(WholeSubVectorSpace).e1h = function () {
    return this.s2u_1;
  };
  protoOf(WholeSubVectorSpace).g1g = function () {
    return this.t2u_1;
  };
  protoOf(WholeSubVectorSpace).t1w = function (vector) {
    return true;
  };
  protoOf(WholeSubVectorSpace).m2u = function (basisName) {
    var tmp0_elvis_lhs = _get_basisNameToIndex__26cf4t_3(this).u2(basisName);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw NoSuchElementException_init_$Create$_0('' + basisName + ' is not a name of basis element of the vector space ' + this);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  protoOf(WholeSubVectorSpace).x2r = function (basisName) {
    return this.m2u(basisName instanceof SubBasis ? basisName : THROW_CCE());
  };
  protoOf(WholeSubVectorSpace).s1l = function () {
    // Inline function 'kotlin.getValue' call
    inclusion$factory_3();
    return this.v2u_1.w();
  };
  protoOf(WholeSubVectorSpace).j1x = function () {
    // Inline function 'kotlin.getValue' call
    retraction$factory_0();
    return this.w2u_1.w();
  };
  function rowEchelonForm$factory_0() {
    return getPropertyCallableRef('rowEchelonForm', 1, KProperty1, function (receiver) {
      return _get_rowEchelonForm__ymu65r_0(receiver);
    }, null);
  }
  function dim$factory() {
    return getPropertyCallableRef('dim', 1, KProperty1, function (receiver) {
      return receiver.p22();
    }, null);
  }
  function basisIndices$factory_0() {
    return getPropertyCallableRef('basisIndices', 1, KProperty1, function (receiver) {
      return _get_basisIndices__7ymdcu_0(receiver);
    }, null);
  }
  function transformationMatrix$factory_0() {
    return getPropertyCallableRef('transformationMatrix', 1, KProperty1, function (receiver) {
      return _get_transformationMatrix__anz1r3_0(receiver);
    }, null);
  }
  function basisNames$factory_0() {
    return getPropertyCallableRef('basisNames', 1, KProperty1, function (receiver) {
      return receiver.j1s();
    }, null);
  }
  function basisNameToIndex$factory_2() {
    return getPropertyCallableRef('basisNameToIndex', 1, KProperty1, function (receiver) {
      return _get_basisNameToIndex__26cf4t_2(receiver);
    }, null);
  }
  function inclusion$factory_2() {
    return getPropertyCallableRef('inclusion', 1, KProperty1, function (receiver) {
      return receiver.s1l();
    }, null);
  }
  function retraction$factory() {
    return getPropertyCallableRef('retraction', 1, KProperty1, function (receiver) {
      return receiver.j1x();
    }, null);
  }
  function basisNameToIndex$factory_3() {
    return getPropertyCallableRef('basisNameToIndex', 1, KProperty1, function (receiver) {
      return _get_basisNameToIndex__26cf4t_3(receiver);
    }, null);
  }
  function inclusion$factory_3() {
    return getPropertyCallableRef('inclusion', 1, KProperty1, function (receiver) {
      return receiver.s1l();
    }, null);
  }
  function retraction$factory_0() {
    return getPropertyCallableRef('retraction', 1, KProperty1, function (receiver) {
      return receiver.j1x();
    }, null);
  }
  function BasisName() {
  }
  function firstTermToString($this, coeff, basisName, printConfig, internalPrintConfig) {
    var basisNameString = internalPrintConfig.s2q_1(basisName);
    var coeffString = internalPrintConfig.r2q_1(coeff, true);
    if (basisNameString === '1') {
      return coeffString;
    }
    var productSymbol = getProductSymbol(Companion_getInstance_84(), printConfig.g1u_1);
    switch (coeffString) {
      case '1':
        return basisNameString;
      case '-1':
        return '-' + printConfig.i1u_1 + basisNameString;
      default:
        return coeffString + printConfig.j1u_1 + productSymbol + basisNameString;
    }
  }
  function nonFirstTermToString($this, coeff, basisName, printConfig, internalPrintConfig) {
    var basisNameString = internalPrintConfig.s2q_1(basisName);
    var coeffString = internalPrintConfig.r2q_1(coeff, false);
    var sign = coeff.p2k() ? '+' : '-';
    if (basisNameString === '1') {
      return printConfig.h1u_1 + sign + printConfig.i1u_1 + coeffString;
    }
    var productSymbol = getProductSymbol(Companion_getInstance_84(), printConfig.g1u_1);
    var str = coeffString === '1' ? basisNameString : coeffString + printConfig.j1u_1 + productSymbol + basisNameString;
    return printConfig.h1u_1 + sign + printConfig.i1u_1 + str;
  }
  function getProductSymbol($this, printType) {
    var tmp;
    switch (printType.m1_1) {
      case 0:
      case 1:
        tmp = '';
        break;
      case 2:
        tmp = '* ';
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function Companion_83() {
    Companion_instance_83 = this;
  }
  var Companion_instance_83;
  function Companion_getInstance_84() {
    if (Companion_instance_83 == null)
      new Companion_83();
    return Companion_instance_83;
  }
  function sam$kotlin_Comparator$0_0(function_0) {
    this.x2u_1 = function_0;
  }
  protoOf(sam$kotlin_Comparator$0_0).xd = function (a, b) {
    return this.x2u_1(a, b);
  };
  protoOf(sam$kotlin_Comparator$0_0).compare = function (a, b) {
    return this.xd(a, b);
  };
  function Vector$print$lambda($tmp1_compareBy) {
    return function (a, b) {
      var tmp$ret$2;
      // Inline function 'kotlin.comparisons.compareValuesBy' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.Vector.print.<anonymous>.<anonymous>' call
      tmp$ret$0 = a.y3_1;
      var tmp = tmp$ret$0;
      var tmp$ret$1;
      // Inline function 'com.github.shwaka.kohomology.vectsp.Vector.print.<anonymous>.<anonymous>' call
      tmp$ret$1 = b.y3_1;
      tmp$ret$2 = $tmp1_compareBy.compare(tmp, tmp$ret$1);
      return tmp$ret$2;
    };
  }
  function Vector$print$lambda_0($printConfig, $internalPrintConfig) {
    return function (_name_for_destructuring_parameter_0__wldtmu) {
      var index = _name_for_destructuring_parameter_0__wldtmu.j3();
      var coeffAndBasisName = _name_for_destructuring_parameter_0__wldtmu.k3();
      var tmp0_container = coeffAndBasisName;
      var coeff = tmp0_container.j3();
      var basisName = tmp0_container.k3();
      var tmp1_subject = index;
      return tmp1_subject === 0 ? firstTermToString(Companion_getInstance_84(), coeff, basisName, $printConfig, $internalPrintConfig) : nonFirstTermToString(Companion_getInstance_84(), coeff, basisName, $printConfig, $internalPrintConfig);
    };
  }
  function Vector(numVector, vectorSpace) {
    Companion_getInstance_84();
    this.q1r_1 = numVector;
    this.r1r_1 = vectorSpace;
    if (!(this.q1r_1.p22() === this.r1r_1.p22()))
      throw new InvalidSizeException('Dimension of the numerical vector does not match the dimension of the vector space');
  }
  protoOf(Vector).e2s = function () {
    return this.q1r_1;
  };
  protoOf(Vector).tj = function () {
    return this.q1r_1.tj();
  };
  protoOf(Vector).g1t = function () {
    // Inline function 'kotlin.collections.mapKeys' call
    var tmp0_mapKeys = this.q1r_1.s2j();
    // Inline function 'kotlin.collections.mapKeysTo' call
    var tmp0_mapKeysTo = LinkedHashMap_init_$Create$_0(mapCapacity(tmp0_mapKeys.i()));
    // Inline function 'kotlin.collections.associateByTo' call
    var tmp0_iterator = tmp0_mapKeys.u().f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'com.github.shwaka.kohomology.vectsp.Vector.toBasisMap.<anonymous>' call
      // Inline function 'kotlin.collections.component1' call
      var index = element.v();
      var tmp = this.r1r_1.j1s().l(index);
      var tmp$ret$2;
      // Inline function 'kotlin.collections.mapKeysTo.<anonymous>' call
      tmp$ret$2 = element.w();
      tmp0_mapKeysTo.z3(tmp, tmp$ret$2);
    }
    return tmp0_mapKeysTo;
  };
  protoOf(Vector).equals = function (other) {
    if (this === other)
      return true;
    if (other == null)
      return false;
    if (!getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (!(other instanceof Vector))
      THROW_CCE();
    if (!equals(this.q1r_1, other.q1r_1))
      return false;
    if (!equals(this.r1r_1, other.r1r_1))
      return false;
    return true;
  };
  protoOf(Vector).hashCode = function () {
    var result = hashCode(this.q1r_1);
    result = imul(31, result) + hashCode(this.r1r_1) | 0;
    return result;
  };
  protoOf(Vector).toString = function () {
    return this.s1i(PrintConfig_init_$Create$());
  };
  protoOf(Vector).s1i = function (printConfig) {
    var internalPrintConfig = this.r1r_1.e1h()(printConfig);
    return this.j1t(printConfig, internalPrintConfig);
  };
  protoOf(Vector).j1t = function (printConfig, internalPrintConfig) {
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.shwaka.kohomology.vectsp.Vector.print.<anonymous>' call
    var coeffList = this.q1r_1.o2d();
    // Inline function 'kotlin.collections.filter' call
    var tmp0_filter = zip(coeffList, this.r1r_1.j1s());
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo = ArrayList_init_$Create$_0();
    var tmp0_iterator = tmp0_filter.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'com.github.shwaka.kohomology.vectsp.Vector.print.<anonymous>.<anonymous>' call
      var coeff = element.j3();
      if (coeff.e1q()) {
        tmp0_filterTo.a(element);
      }
    }
    var basisWithCoeff = tmp0_filterTo;
    var tmp;
    if (internalPrintConfig.t2q_1 == null) {
      tmp = basisWithCoeff;
    } else {
      var tmp$ret$3;
      // Inline function 'kotlin.comparisons.compareBy' call
      var tmp1_compareBy = internalPrintConfig.t2q_1;
      var tmp_0 = Vector$print$lambda(tmp1_compareBy);
      tmp$ret$3 = new sam$kotlin_Comparator$0_0(tmp_0);
      tmp = sortedWith(basisWithCoeff, tmp$ret$3);
    }
    var sortedBasisWithCoeff = tmp;
    var tmp_1;
    if (sortedBasisWithCoeff.p()) {
      tmp_1 = '0';
    } else {
      var tmp_2 = withIndex(sortedBasisWithCoeff);
      tmp_1 = joinToString(tmp_2, '', VOID, VOID, VOID, VOID, Vector$print$lambda_0(printConfig, internalPrintConfig));
    }
    return tmp_1;
  };
  function InternalPrintConfig$Companion$default$ref_4($boundThis) {
    var l = function (p0) {
      return $boundThis.x1r(p0);
    };
    l.callableName = 'default';
    return l;
  }
  function Companion_84() {
    Companion_instance_84 = this;
  }
  protoOf(Companion_84).y2u = function (numVectorSpace, basisNames, getInternalPrintConfig) {
    return new VectorSpaceImpl(numVectorSpace, basisNames, getInternalPrintConfig);
  };
  protoOf(Companion_84).b2d = function (numVectorSpace, basisNames, getInternalPrintConfig, $super) {
    var tmp;
    if (getInternalPrintConfig === VOID) {
      tmp = InternalPrintConfig$Companion$default$ref_4(Companion_getInstance_71());
    } else {
      tmp = getInternalPrintConfig;
    }
    getInternalPrintConfig = tmp;
    return $super === VOID ? this.y2u(numVectorSpace, basisNames, getInternalPrintConfig) : $super.y2u.call(this, numVectorSpace, basisNames, getInternalPrintConfig);
  };
  var Companion_instance_84;
  function Companion_getInstance_85() {
    if (Companion_instance_84 == null)
      new Companion_84();
    return Companion_instance_84;
  }
  function VectorSpace() {
  }
  function Companion_85() {
    Companion_instance_85 = this;
  }
  protoOf(Companion_85).v2r = function (vectorSpace) {
    return new VectorContextImpl(vectorSpace);
  };
  var Companion_instance_85;
  function Companion_getInstance_86() {
    if (Companion_instance_85 == null)
      new Companion_85();
    return Companion_instance_85;
  }
  function VectorContext() {
  }
  function _get_basisNameToIndex__26cf4t_4($this) {
    // Inline function 'kotlin.getValue' call
    basisNameToIndex$factory_4();
    return $this.e2v_1.w();
  }
  function InternalPrintConfig$Companion$default$ref_5($boundThis) {
    var l = function (p0) {
      return $boundThis.x1r(p0);
    };
    l.callableName = 'default';
    return l;
  }
  function VectorSpaceImpl$basisNameToIndex$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$2;
      // Inline function 'kotlin.collections.mapIndexed' call
      var tmp0_mapIndexed = this$0.b2v_1;
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapIndexedTo' call
      var tmp0_mapIndexedTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_mapIndexed, 10));
      var index = 0;
      var tmp0_iterator = tmp0_mapIndexed.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.vectsp.VectorSpaceImpl.basisNameToIndex$delegate.<anonymous>.<anonymous>' call
        var tmp1 = index;
        index = tmp1 + 1 | 0;
        var tmp1_anonymous = checkIndexOverflow(tmp1);
        tmp$ret$0 = new Pair(item, tmp1_anonymous);
        tmp0_mapIndexedTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapIndexedTo;
      tmp$ret$2 = tmp$ret$1;
      return toMap(tmp$ret$2);
    };
  }
  function VectorSpaceImpl$toString$lambda(it) {
    return toString(it);
  }
  function VectorSpaceImpl(numVectorSpace, basisNames, getInternalPrintConfig) {
    var tmp;
    if (getInternalPrintConfig === VOID) {
      tmp = InternalPrintConfig$Companion$default$ref_5(Companion_getInstance_71());
    } else {
      tmp = getInternalPrintConfig;
    }
    getInternalPrintConfig = tmp;
    this.a2v_1 = numVectorSpace;
    this.b2v_1 = basisNames;
    this.c2v_1 = getInternalPrintConfig;
    this.d2v_1 = Companion_getInstance_86().v2r(this);
    var tmp_0 = this;
    tmp_0.e2v_1 = lazy(VectorSpaceImpl$basisNameToIndex$delegate$lambda(this));
  }
  protoOf(VectorSpaceImpl).b1h = function () {
    return this.a2v_1;
  };
  protoOf(VectorSpaceImpl).j1s = function () {
    return this.b2v_1;
  };
  protoOf(VectorSpaceImpl).e1h = function () {
    return this.c2v_1;
  };
  protoOf(VectorSpaceImpl).g1g = function () {
    return this.d2v_1;
  };
  protoOf(VectorSpaceImpl).x2r = function (basisName) {
    var tmp0_elvis_lhs = _get_basisNameToIndex__26cf4t_4(this).u2(basisName);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw NoSuchElementException_init_$Create$_0('' + basisName + ' is not a name of basis element of the vector space ' + this);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  protoOf(VectorSpaceImpl).equals = function (other) {
    if (this === other)
      return true;
    if (other == null)
      return false;
    if (!getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (!(!(other == null) ? isInterface(other, VectorSpace) : false))
      THROW_CCE();
    if (!equals(this.a2v_1, other.b1h()))
      return false;
    if (!(this.p22() === other.p22()))
      return false;
    if (!equals(this.b2v_1, other.j1s()))
      return false;
    return true;
  };
  protoOf(VectorSpaceImpl).hashCode = function () {
    var result = hashCode(this.a2v_1);
    result = imul(31, result) + this.p22() | 0;
    result = imul(31, result) + hashCode(this.b2v_1) | 0;
    return result;
  };
  protoOf(VectorSpaceImpl).toString = function () {
    var basisNamesString = joinToString(this.b2v_1, ', ', VOID, VOID, VOID, VOID, VectorSpaceImpl$toString$lambda);
    return 'VectorSpace(' + basisNamesString + ')';
  };
  function VectorContextImpl(vectorSpace) {
    this.f2v_1 = vectorSpace;
    this.g2v_1 = Companion_getInstance_57().f1u(vectorSpace.b1h());
  }
  protoOf(VectorContextImpl).z2u = function () {
    return this.f2v_1;
  };
  protoOf(VectorContextImpl).j1h = function () {
    return this.g2v_1.j1h();
  };
  protoOf(VectorContextImpl).b1h = function () {
    return this.g2v_1.b1h();
  };
  protoOf(VectorContextImpl).b1j = function () {
    return this.g2v_1.b1j();
  };
  protoOf(VectorContextImpl).c1j = function () {
    return this.g2v_1.c1j();
  };
  protoOf(VectorContextImpl).e1j = function (_this__u8e3s4, other) {
    return this.g2v_1.e1j(_this__u8e3s4, other);
  };
  protoOf(VectorContextImpl).f1j = function (_this__u8e3s4, other) {
    return this.g2v_1.f1j(_this__u8e3s4, other);
  };
  protoOf(VectorContextImpl).g1j = function (_this__u8e3s4, ind) {
    return this.g2v_1.g1j(_this__u8e3s4, ind);
  };
  protoOf(VectorContextImpl).h1j = function (_this__u8e3s4) {
    return this.g2v_1.h1j(_this__u8e3s4);
  };
  protoOf(VectorContextImpl).i1j = function (_this__u8e3s4, other) {
    return this.g2v_1.i1j(_this__u8e3s4, other);
  };
  protoOf(VectorContextImpl).j1j = function (_this__u8e3s4, other) {
    return this.g2v_1.j1j(_this__u8e3s4, other);
  };
  protoOf(VectorContextImpl).m1j = function (_this__u8e3s4, other) {
    return this.g2v_1.m1j(_this__u8e3s4, other);
  };
  protoOf(VectorContextImpl).n1j = function (_this__u8e3s4, other) {
    return this.g2v_1.n1j(_this__u8e3s4, other);
  };
  protoOf(VectorContextImpl).q1j = function (_this__u8e3s4) {
    return this.g2v_1.q1j(_this__u8e3s4);
  };
  protoOf(VectorContextImpl).s1j = function (_this__u8e3s4, other) {
    return this.g2v_1.s1j(_this__u8e3s4, other);
  };
  protoOf(VectorContextImpl).t1j = function (_this__u8e3s4, numVector) {
    return this.g2v_1.t1j(_this__u8e3s4, numVector);
  };
  protoOf(VectorContextImpl).v1j = function (_this__u8e3s4, scalar) {
    return this.g2v_1.v1j(_this__u8e3s4, scalar);
  };
  protoOf(VectorContextImpl).d1k = function (_this__u8e3s4) {
    return this.g2v_1.d1k(_this__u8e3s4);
  };
  protoOf(VectorContextImpl).e1k = function (_this__u8e3s4) {
    return this.g2v_1.e1k(_this__u8e3s4);
  };
  protoOf(VectorContextImpl).f1k = function (_this__u8e3s4) {
    return this.g2v_1.f1k(_this__u8e3s4);
  };
  function basisNameToIndex$factory_4() {
    return getPropertyCallableRef('basisNameToIndex', 1, KProperty1, function (receiver) {
      return _get_basisNameToIndex__26cf4t_4(receiver);
    }, null);
  }
  //region block: post-declaration
  protoOf(DGAlgebraImpl).p1g = getDGIdeal;
  protoOf(DGAlgebraImpl).w1g = getQuotientByIdeal_0;
  protoOf(DGAlgebraImpl).e1i = getQuotientByIdeal;
  protoOf(DGAlgebraImpl).z1g = cohomologyClassOf;
  protoOf(DGAlgebraImpl).a1h = cocycleRepresentativeOf;
  protoOf(DGAlgebraImpl).w1h = multiply_0;
  protoOf(DGAlgebraImpl).x1h = multiply_1;
  protoOf(DGAlgebraImpl).c1i = convertToScalar;
  protoOf(DGAlgebraImpl).d1i = parse;
  protoOf(DGAlgebraImpl).q1g = getIdeal;
  protoOf(DGAlgebraContextImpl).j1k = pow;
  protoOf(DGAlgebraContextImpl).k1k = pow_0;
  protoOf(DGAlgebraContextImpl).l1k = toScalar_0;
  protoOf(DGAlgebraContextImpl).m1k = product;
  protoOf(DGAlgebraContextImpl).a1i = get_unit;
  protoOf(DGDerivationImpl).m1l = induce_2;
  protoOf(DGLieAlgebraImpl).z1g = cohomologyClassOf;
  protoOf(DGLieAlgebraImpl).w1h = multiply_0;
  protoOf(DGLieAlgebraImpl).x1h = multiply_1;
  protoOf(DGLieAlgebraContextImpl).v1m = ad;
  protoOf(DGMagmaImpl).z1g = cohomologyClassOf;
  protoOf(DGMagmaImpl).w1h = multiply_0;
  protoOf(DGMagmaImpl).x1h = multiply_1;
  protoOf(DGMagmaContextImpl).x1j = times_10;
  protoOf(DGMagmaContextImpl).w1j = times_2;
  protoOf(DGMagmaContextImpl).u1j = times_3;
  protoOf(DGMagmaContextImpl).c1k = times_4;
  protoOf(DGMagmaContextImpl).z1j = times_5;
  protoOf(DGMagmaContextImpl).y1j = times_6;
  protoOf(DGMagmaContextImpl).b1k = times_7;
  protoOf(DGMagmaContextImpl).v1j = times_0;
  protoOf(DGMagmaContextImpl).t1j = times_1;
  protoOf(DGMagmaContextImpl).s1j = times;
  protoOf(DGMagmaContextImpl).a1k = times_9;
  protoOf(DGMagmaContextImpl).r1g = get_d;
  protoOf(DGMagmaContextImpl).d1j = cohomologyClass;
  protoOf(DGMagmaContextImpl).z1h = get_zeroGVector;
  protoOf(DGMagmaContextImpl).o1j = plus_3;
  protoOf(DGMagmaContextImpl).p1j = plus_4;
  protoOf(DGMagmaContextImpl).n1j = plus_2;
  protoOf(DGMagmaContextImpl).m1j = plus_1;
  protoOf(DGMagmaContextImpl).k1j = minus_1;
  protoOf(DGMagmaContextImpl).l1j = minus_2;
  protoOf(DGMagmaContextImpl).j1j = minus_0;
  protoOf(DGMagmaContextImpl).i1j = minus;
  protoOf(DGMagmaContextImpl).g1k = unaryMinus_1;
  protoOf(DGMagmaContextImpl).h1k = unaryMinus_2;
  protoOf(DGMagmaContextImpl).f1k = unaryMinus_0;
  protoOf(DGMagmaContextImpl).e1k = unaryMinus;
  protoOf(DGMagmaContextImpl).r1j = sum_1;
  protoOf(DGMagmaContextImpl).q1j = sum_0;
  protoOf(DGMagmaContextImpl).g1j = get_0;
  protoOf(DGMagmaContextImpl).e1j = div;
  protoOf(DGMagmaContextImpl).f1j = div_0;
  protoOf(DGMagmaContextImpl).h1j = inv;
  protoOf(DGMagmaContextImpl).d1k = toScalar;
  protoOf(DGMagmaContextImpl).c1j = get_zero;
  protoOf(DGMagmaContextImpl).b1j = get_one;
  protoOf(DGVectorSpaceImpl).z1g = cohomologyClassOf;
  protoOf(DerivationImpl).m1l = induce_2;
  protoOf(GAlgebraContextImpl).a1i = get_unit;
  protoOf(GAlgebraContextImpl).j1k = pow;
  protoOf(GAlgebraContextImpl).k1k = pow_0;
  protoOf(GAlgebraContextImpl).l1k = toScalar_0;
  protoOf(GAlgebraContextImpl).m1k = product;
  protoOf(GLieAlgebraImpl).w1h = multiply_0;
  protoOf(GLieAlgebraImpl).x1h = multiply_1;
  protoOf(GLieAlgebraContextImpl).v1m = ad;
  protoOf(GLinearMapImpl).c1h = get_degreeGroup;
  protoOf(GLinearMapImpl).s1g = invoke;
  protoOf(GLinearMapImpl).x1k = findPreimage;
  protoOf(GLinearMapImpl).c1l = kernel;
  protoOf(GLinearMapImpl).y1k = image;
  protoOf(GLinearMapImpl).w1k = cokernel;
  protoOf(GLinearMapImpl).a1l = induce;
  protoOf(GLinearMapImpl).z1k = induce_0;
  protoOf(GLinearMapImpl).b1l = induce_1;
  protoOf(GMagmaContextImpl).x1j = times_8;
  protoOf(GMagmaContextImpl).a1k = times_9;
  protoOf(GVector).e1q = isNotZero;
  protoOf(GVectorSpaceImpl).l = get;
  protoOf(GVectorSpaceImpl).j1h = get_field;
  protoOf(GVectorSpaceImpl).k1h = fromVector;
  protoOf(GVectorSpaceImpl).l1h = fromVector_0;
  protoOf(GVectorSpaceImpl).m1h = fromBasisName;
  protoOf(GVectorSpaceImpl).n1h = getBasis;
  protoOf(GVectorSpaceImpl).o1h = getZero;
  protoOf(GVectorSpaceImpl).p1h = getZero_0;
  protoOf(GVectorSpaceImpl).q1h = convertToGVector;
  protoOf(GVectorSpaceImpl).r1h = contains;
  protoOf(GVectorSpaceImpl).s1h = contains_0;
  protoOf(GVectorSpaceImpl).t1h = add;
  protoOf(GVectorSpaceImpl).u1h = subtract;
  protoOf(GVectorSpaceImpl).v1h = multiply;
  protoOf(GVectorSpaceImpl).y1h = divideByGVector;
  protoOf(GVectorContextImpl).z1h = get_zeroGVector;
  protoOf(GVectorContextImpl).o1j = plus_3;
  protoOf(GVectorContextImpl).p1j = plus_4;
  protoOf(GVectorContextImpl).k1j = minus_1;
  protoOf(GVectorContextImpl).l1j = minus_2;
  protoOf(GVectorContextImpl).w1j = times_2;
  protoOf(GVectorContextImpl).u1j = times_3;
  protoOf(GVectorContextImpl).c1k = times_4;
  protoOf(GVectorContextImpl).z1j = times_5;
  protoOf(GVectorContextImpl).y1j = times_6;
  protoOf(GVectorContextImpl).b1k = times_7;
  protoOf(GVectorContextImpl).g1k = unaryMinus_1;
  protoOf(GVectorContextImpl).h1k = unaryMinus_2;
  protoOf(GVectorContextImpl).r1j = sum_1;
  protoOf(QuotDGAlgebraImpl).p1g = getDGIdeal;
  protoOf(QuotDGAlgebraImpl).w1g = getQuotientByIdeal_0;
  protoOf(QuotDGAlgebraImpl).e1i = getQuotientByIdeal;
  protoOf(QuotDGAlgebraImpl).z1g = cohomologyClassOf;
  protoOf(QuotDGAlgebraImpl).a1h = cocycleRepresentativeOf;
  protoOf(QuotDGAlgebraImpl).w1h = multiply_0;
  protoOf(QuotDGAlgebraImpl).x1h = multiply_1;
  protoOf(QuotDGAlgebraImpl).c1i = convertToScalar;
  protoOf(QuotDGAlgebraImpl).d1i = parse;
  protoOf(QuotDGAlgebraImpl).q1g = getIdeal;
  protoOf(QuotGAlgebraImpl).c1i = convertToScalar;
  protoOf(QuotGAlgebraImpl).e1i = getQuotientByIdeal;
  protoOf(QuotGAlgebraImpl).w1h = multiply_0;
  protoOf(QuotGAlgebraImpl).x1h = multiply_1;
  protoOf(QuotGVectorSpaceImpl).j1h = get_field;
  protoOf(QuotGVectorSpaceImpl).k1h = fromVector;
  protoOf(QuotGVectorSpaceImpl).l1h = fromVector_0;
  protoOf(QuotGVectorSpaceImpl).m1h = fromBasisName;
  protoOf(QuotGVectorSpaceImpl).n1h = getBasis;
  protoOf(QuotGVectorSpaceImpl).c1m = getBasis_0;
  protoOf(QuotGVectorSpaceImpl).o1h = getZero;
  protoOf(QuotGVectorSpaceImpl).p1h = getZero_0;
  protoOf(QuotGVectorSpaceImpl).q1h = convertToGVector;
  protoOf(QuotGVectorSpaceImpl).r1h = contains;
  protoOf(QuotGVectorSpaceImpl).s1h = contains_0;
  protoOf(QuotGVectorSpaceImpl).t1h = add;
  protoOf(QuotGVectorSpaceImpl).u1h = subtract;
  protoOf(QuotGVectorSpaceImpl).v1h = multiply;
  protoOf(QuotGVectorSpaceImpl).y1h = divideByGVector;
  protoOf(SubDGVectorSpaceImpl).z1g = cohomologyClassOf;
  protoOf(SubGVectorSpaceImpl).t1g = subspaceContains;
  protoOf(SubGVectorSpaceImpl).j1h = get_field;
  protoOf(SubGVectorSpaceImpl).k1h = fromVector;
  protoOf(SubGVectorSpaceImpl).l1h = fromVector_0;
  protoOf(SubGVectorSpaceImpl).m1h = fromBasisName;
  protoOf(SubGVectorSpaceImpl).n1h = getBasis;
  protoOf(SubGVectorSpaceImpl).c1m = getBasis_0;
  protoOf(SubGVectorSpaceImpl).o1h = getZero;
  protoOf(SubGVectorSpaceImpl).p1h = getZero_0;
  protoOf(SubGVectorSpaceImpl).q1h = convertToGVector;
  protoOf(SubGVectorSpaceImpl).r1h = contains;
  protoOf(SubGVectorSpaceImpl).s1h = contains_0;
  protoOf(SubGVectorSpaceImpl).t1h = add;
  protoOf(SubGVectorSpaceImpl).u1h = subtract;
  protoOf(SubGVectorSpaceImpl).v1h = multiply;
  protoOf(SubGVectorSpaceImpl).y1h = divideByGVector;
  protoOf(WholeSubGVectorSpace).t1g = subspaceContains;
  protoOf(WholeSubGVectorSpace).j1h = get_field;
  protoOf(WholeSubGVectorSpace).k1h = fromVector;
  protoOf(WholeSubGVectorSpace).l1h = fromVector_0;
  protoOf(WholeSubGVectorSpace).m1h = fromBasisName;
  protoOf(WholeSubGVectorSpace).n1h = getBasis;
  protoOf(WholeSubGVectorSpace).c1m = getBasis_0;
  protoOf(WholeSubGVectorSpace).o1h = getZero;
  protoOf(WholeSubGVectorSpace).p1h = getZero_0;
  protoOf(WholeSubGVectorSpace).q1h = convertToGVector;
  protoOf(WholeSubGVectorSpace).r1h = contains;
  protoOf(WholeSubGVectorSpace).s1h = contains_0;
  protoOf(WholeSubGVectorSpace).t1h = add;
  protoOf(WholeSubGVectorSpace).u1h = subtract;
  protoOf(WholeSubGVectorSpace).v1h = multiply;
  protoOf(WholeSubGVectorSpace).y1h = divideByGVector;
  protoOf(SubQuotGAlgebraImpl).c1i = convertToScalar;
  protoOf(SubQuotGAlgebraImpl).e1i = getQuotientByIdeal;
  protoOf(SubQuotGAlgebraImpl).w1h = multiply_0;
  protoOf(SubQuotGAlgebraImpl).x1h = multiply_1;
  protoOf(SubQuotGLieAlgebraImpl).w1h = multiply_0;
  protoOf(SubQuotGLieAlgebraImpl).x1h = multiply_1;
  protoOf(SubQuotGMagmaImpl).w1h = multiply_0;
  protoOf(SubQuotGMagmaImpl).x1h = multiply_1;
  protoOf(SubQuotGVectorSpaceImpl).t1g = subspaceContains_0;
  protoOf(SubQuotGVectorSpaceImpl).j1h = get_field;
  protoOf(SubQuotGVectorSpaceImpl).k1h = fromVector;
  protoOf(SubQuotGVectorSpaceImpl).l1h = fromVector_0;
  protoOf(SubQuotGVectorSpaceImpl).m1h = fromBasisName;
  protoOf(SubQuotGVectorSpaceImpl).n1h = getBasis;
  protoOf(SubQuotGVectorSpaceImpl).c1m = getBasis_0;
  protoOf(SubQuotGVectorSpaceImpl).i1p = getBasisForAugmentedDegree;
  protoOf(SubQuotGVectorSpaceImpl).o1h = getZero;
  protoOf(SubQuotGVectorSpaceImpl).p1h = getZero_0;
  protoOf(SubQuotGVectorSpaceImpl).q1h = convertToGVector;
  protoOf(SubQuotGVectorSpaceImpl).r1h = contains;
  protoOf(SubQuotGVectorSpaceImpl).s1h = contains_0;
  protoOf(SubQuotGVectorSpaceImpl).t1h = add;
  protoOf(SubQuotGVectorSpaceImpl).u1h = subtract;
  protoOf(SubQuotGVectorSpaceImpl).v1h = multiply;
  protoOf(SubQuotGVectorSpaceImpl).y1h = divideByGVector;
  protoOf(IntDegree).e1q = isNotZero_0;
  protoOf(IntDegree).k1z = isOdd;
  protoOf(IntDegree).l1z = koszulSign;
  protoOf(IntDegreeGroup).c1j = get_zero_0;
  protoOf(MultiDegree).e1q = isNotZero_0;
  protoOf(MultiDegree).k1z = isOdd;
  protoOf(MultiDegree).l1z = koszulSign;
  protoOf(MultiDegreeGroup).c1j = get_zero_0;
  protoOf(CohomologicalMinimalModel).q22 = toProgress;
  protoOf(FreeDGAlgebraImpl).n22 = getDGAlgebraMap;
  protoOf(FreeDGAlgebraImpl).m27 = convertDegree_0;
  protoOf(FreeDGAlgebraImpl).n27 = toIntDegree;
  protoOf(FreeDGAlgebraImpl).o27 = toJson;
  protoOf(FreeDGAlgebraImpl).p1g = getDGIdeal;
  protoOf(FreeDGAlgebraImpl).w1g = getQuotientByIdeal_0;
  protoOf(FreeDGAlgebraImpl).e1i = getQuotientByIdeal;
  protoOf(FreeDGAlgebraImpl).z1g = cohomologyClassOf;
  protoOf(FreeDGAlgebraImpl).a1h = cocycleRepresentativeOf;
  protoOf(FreeDGAlgebraImpl).w1h = multiply_0;
  protoOf(FreeDGAlgebraImpl).x1h = multiply_1;
  protoOf(FreeDGAlgebraImpl).c1i = convertToScalar;
  protoOf(FreeDGAlgebraImpl).d1i = parse;
  protoOf(FreeDGAlgebraImpl).x26 = parse_0;
  protoOf(FreeDGAlgebraImpl).q1g = getIdeal;
  protoOf(FreeDGAlgebraImpl).r1l = get_generatorList;
  protoOf(FreeDGAlgebraImpl).q26 = getDerivation;
  protoOf(FreeDGAlgebraImpl).b27 = getDerivation_0;
  protoOf(FreeDGAlgebraImpl).l27 = getGAlgebraMap;
  protoOf(FreeDGAlgebraImpl).c27 = containsIndeterminate;
  protoOf(FreeDGAlgebraImpl).q27 = getGeneratorsForParser;
  protoOf(FreeDGAlgebraContextImpl).x26 = parse_1;
  protoOf(FreeGAlgebraImpl).r1l = get_generatorList;
  protoOf(FreeGAlgebraImpl).q26 = getDerivation;
  protoOf(FreeGAlgebraImpl).b27 = getDerivation_0;
  protoOf(FreeGAlgebraImpl).c27 = containsIndeterminate;
  protoOf(FreeGAlgebraImpl).x26 = parse_0;
  protoOf(FreeGAlgebraImpl).q27 = getGeneratorsForParser;
  protoOf(FreeGAlgebraImpl).m27 = convertDegree;
  protoOf(FreeGAlgebraContextImpl).x26 = parse_1;
  protoOf($serializer).o10 = typeParametersSerializers;
  protoOf(HomologicalMinimalModel).q22 = toProgress;
  protoOf(MonoidGAlgebraImpl).c1i = convertToScalar;
  protoOf(MonoidGAlgebraImpl).d1i = parse;
  protoOf(MonoidGAlgebraImpl).e1i = getQuotientByIdeal;
  protoOf(MonoidGAlgebraImpl).w1h = multiply_0;
  protoOf(MonoidGAlgebraImpl).x1h = multiply_1;
  protoOf(DenseMatrixSpace).l2i = fromRowList$default;
  protoOf(DenseMatrixSpace).v2i = getIdentity;
  protoOf(DenseMatrixSpace).t2i = fromColList;
  protoOf(DenseMatrixSpace).w2i = fromColMap;
  protoOf(DenseMatrix).o2d = toList_2;
  protoOf(DenseMatrix).z2i = toNumVectorList;
  protoOf(DenseNumVectorSpace).q2j = getOneAtIndex;
  protoOf(DenseNumVectorSpace).r2j = fromReducedValueMap;
  protoOf(ScalarContextImpl).m1j = plus_1;
  protoOf(ScalarContextImpl).i1j = minus;
  protoOf(ScalarContextImpl).s1j = times;
  protoOf(ScalarContextImpl).e1k = unaryMinus;
  protoOf(ScalarContextImpl).e1j = div;
  protoOf(ScalarContextImpl).f1j = div_0;
  protoOf(ScalarContextImpl).h1j = inv;
  protoOf(ScalarContextImpl).d1k = toScalar;
  protoOf(ScalarContextImpl).c1j = get_zero;
  protoOf(ScalarContextImpl).b1j = get_one;
  protoOf(ScalarContextImpl).q1j = sum_0;
  protoOf(MatrixContextImpl).v2k = times_11;
  protoOf(MatrixContextImpl).t2k = get_rowEchelonForm;
  protoOf(MatrixContextImpl).w2k = rowSlice;
  protoOf(MatrixContextImpl).u2k = colSlice;
  protoOf(MatrixContextImpl).s2k = join;
  protoOf(MatrixContextImpl).x2k = transpose;
  protoOf(MatrixContextImpl).y2k = computeKernelBasis;
  protoOf(MatrixContextImpl).z2k = findPreimage_0;
  protoOf(NumVectorContextImpl).n1j = plus_2;
  protoOf(NumVectorContextImpl).j1j = minus_0;
  protoOf(NumVectorContextImpl).v1j = times_0;
  protoOf(NumVectorContextImpl).t1j = times_1;
  protoOf(NumVectorContextImpl).f1k = unaryMinus_0;
  protoOf(NumVectorContextImpl).g1j = get_0;
  protoOf(AbstractSparseMatrixSpace).l2i = fromRowList$default;
  protoOf(AbstractSparseMatrixSpace).v2i = getIdentity;
  protoOf(AbstractSparseMatrixSpace).w2i = fromColMap;
  protoOf(AbstractSparseMatrixSpace).u2i = fromNumVectorList;
  protoOf(SparseMatrixSpace).l2i = fromRowList$default;
  protoOf(SparseMatrixSpace).v2i = getIdentity;
  protoOf(SparseMatrixSpace).w2i = fromColMap;
  protoOf(SparseMatrixSpace).u2i = fromNumVectorList;
  protoOf(DecomposedSparseMatrixSpace).l2i = fromRowList$default;
  protoOf(DecomposedSparseMatrixSpace).v2i = getIdentity;
  protoOf(DecomposedSparseMatrixSpace).w2i = fromColMap;
  protoOf(DecomposedSparseMatrixSpace).u2i = fromNumVectorList;
  protoOf(SparseMatrix).z2i = toNumVectorList;
  protoOf(SparseNumVectorSpace).q2j = getOneAtIndex;
  protoOf(CyclicModel).n22 = getDGAlgebraMap;
  protoOf(CyclicModel).m27 = convertDegree_0;
  protoOf(CyclicModel).n27 = toIntDegree;
  protoOf(CyclicModel).o27 = toJson;
  protoOf(CyclicModel).x26 = parse_0;
  protoOf(CyclicModel).r1l = get_generatorList;
  protoOf(CyclicModel).q26 = getDerivation;
  protoOf(CyclicModel).b27 = getDerivation_0;
  protoOf(CyclicModel).l27 = getGAlgebraMap;
  protoOf(CyclicModel).c27 = containsIndeterminate;
  protoOf(CyclicModel).q27 = getGeneratorsForParser;
  protoOf(FreeLoopSpace).n22 = getDGAlgebraMap;
  protoOf(FreeLoopSpace).m27 = convertDegree_0;
  protoOf(FreeLoopSpace).n27 = toIntDegree;
  protoOf(FreeLoopSpace).o27 = toJson;
  protoOf(FreeLoopSpace).x26 = parse_0;
  protoOf(FreeLoopSpace).r1l = get_generatorList;
  protoOf(FreeLoopSpace).q26 = getDerivation;
  protoOf(FreeLoopSpace).b27 = getDerivation_0;
  protoOf(FreeLoopSpace).l27 = getGAlgebraMap;
  protoOf(FreeLoopSpace).c27 = containsIndeterminate;
  protoOf(FreeLoopSpace).q27 = getGeneratorsForParser;
  protoOf(KotlinRational).e1q = isNotZero_1;
  protoOf(KotlinRational).q2k = toString_3;
  protoOf(KotlinRational).s1i = toString_4;
  protoOf(ValueBilinearMap).m1r = image_0;
  protoOf(DirectSumBasis).s1i = toString_2;
  protoOf(DirectSum).p22 = get_dim;
  protoOf(DirectSum).j1h = get_field_0;
  protoOf(DirectSum).m2r = contains_1;
  protoOf(DirectSum).z2r = add_0;
  protoOf(DirectSum).a2s = subtract_0;
  protoOf(DirectSum).b2s = multiply_2;
  protoOf(DirectSum).r1t = divideByVector;
  protoOf(DirectSum).c2s = fromNumVector;
  protoOf(DirectSum).d2s = fromCoeffList;
  protoOf(DirectSum).l1t = fromBasisName_0;
  protoOf(DirectSum).n1t = get_zeroVector;
  protoOf(DirectSum).m1t = getBasis_1;
  protoOf(QuotBasis).s1i = toString_2;
  protoOf(QuotVectorSpaceImpl).p22 = get_dim;
  protoOf(QuotVectorSpaceImpl).j1h = get_field_0;
  protoOf(QuotVectorSpaceImpl).m2r = contains_1;
  protoOf(QuotVectorSpaceImpl).z2r = add_0;
  protoOf(QuotVectorSpaceImpl).a2s = subtract_0;
  protoOf(QuotVectorSpaceImpl).b2s = multiply_2;
  protoOf(QuotVectorSpaceImpl).r1t = divideByVector;
  protoOf(QuotVectorSpaceImpl).c2s = fromNumVector;
  protoOf(QuotVectorSpaceImpl).d2s = fromCoeffList;
  protoOf(QuotVectorSpaceImpl).l1t = fromBasisName_0;
  protoOf(QuotVectorSpaceImpl).n1t = get_zeroVector;
  protoOf(QuotVectorSpaceImpl).m1t = getBasis_1;
  protoOf(SubQuotBasis).s1i = toString_2;
  protoOf(SubQuotVectorSpace).p22 = get_dim;
  protoOf(SubQuotVectorSpace).j1h = get_field_0;
  protoOf(SubQuotVectorSpace).m2r = contains_1;
  protoOf(SubQuotVectorSpace).z2r = add_0;
  protoOf(SubQuotVectorSpace).a2s = subtract_0;
  protoOf(SubQuotVectorSpace).b2s = multiply_2;
  protoOf(SubQuotVectorSpace).r1t = divideByVector;
  protoOf(SubQuotVectorSpace).c2s = fromNumVector;
  protoOf(SubQuotVectorSpace).d2s = fromCoeffList;
  protoOf(SubQuotVectorSpace).l1t = fromBasisName_0;
  protoOf(SubQuotVectorSpace).n1t = get_zeroVector;
  protoOf(SubQuotVectorSpace).m1t = getBasis_1;
  protoOf(SubBasis).s1i = toString_2;
  protoOf(SubVectorSpaceImpl).p22 = get_dim;
  protoOf(SubVectorSpaceImpl).j1h = get_field_0;
  protoOf(SubVectorSpaceImpl).m2r = contains_1;
  protoOf(SubVectorSpaceImpl).z2r = add_0;
  protoOf(SubVectorSpaceImpl).a2s = subtract_0;
  protoOf(SubVectorSpaceImpl).b2s = multiply_2;
  protoOf(SubVectorSpaceImpl).r1t = divideByVector;
  protoOf(SubVectorSpaceImpl).c2s = fromNumVector;
  protoOf(SubVectorSpaceImpl).d2s = fromCoeffList;
  protoOf(SubVectorSpaceImpl).l1t = fromBasisName_0;
  protoOf(SubVectorSpaceImpl).n1t = get_zeroVector;
  protoOf(SubVectorSpaceImpl).m1t = getBasis_1;
  protoOf(WholeSubVectorSpace).p22 = get_dim;
  protoOf(WholeSubVectorSpace).j1h = get_field_0;
  protoOf(WholeSubVectorSpace).m2r = contains_1;
  protoOf(WholeSubVectorSpace).z2r = add_0;
  protoOf(WholeSubVectorSpace).a2s = subtract_0;
  protoOf(WholeSubVectorSpace).b2s = multiply_2;
  protoOf(WholeSubVectorSpace).r1t = divideByVector;
  protoOf(WholeSubVectorSpace).c2s = fromNumVector;
  protoOf(WholeSubVectorSpace).d2s = fromCoeffList;
  protoOf(WholeSubVectorSpace).l1t = fromBasisName_0;
  protoOf(WholeSubVectorSpace).n1t = get_zeroVector;
  protoOf(WholeSubVectorSpace).m1t = getBasis_1;
  protoOf(VectorSpaceImpl).p22 = get_dim;
  protoOf(VectorSpaceImpl).j1h = get_field_0;
  protoOf(VectorSpaceImpl).m2r = contains_1;
  protoOf(VectorSpaceImpl).z2r = add_0;
  protoOf(VectorSpaceImpl).a2s = subtract_0;
  protoOf(VectorSpaceImpl).b2s = multiply_2;
  protoOf(VectorSpaceImpl).r1t = divideByVector;
  protoOf(VectorSpaceImpl).c2s = fromNumVector;
  protoOf(VectorSpaceImpl).d2s = fromCoeffList;
  protoOf(VectorSpaceImpl).l1t = fromBasisName_0;
  protoOf(VectorSpaceImpl).n1t = get_zeroVector;
  protoOf(VectorSpaceImpl).m1t = getBasis_1;
  protoOf(VectorContextImpl).o1t = plus_5;
  protoOf(VectorContextImpl).p1t = minus_3;
  protoOf(VectorContextImpl).n2r = times_12;
  protoOf(VectorContextImpl).q1t = times_13;
  protoOf(VectorContextImpl).g2d = unaryMinus_3;
  protoOf(VectorContextImpl).o2r = sum_2;
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = AugmentedDegreeGroup;
  _.$_$.b = IntDegreeGroup;
  _.$_$.c = DGAlgebra;
  _.$_$.d = GVector;
  _.$_$.e = InvalidIdentifierException;
  _.$_$.f = QuotDGAlgebra;
  _.$_$.g = ZeroGVector;
  _.$_$.h = Indeterminate_0;
  _.$_$.i = StringIndeterminateName;
  _.$_$.j = FreeDGAlgebra;
  _.$_$.k = jsonToGeneratorList;
  _.$_$.l = CopiedNamePrintConfig;
  _.$_$.m = get_SparseMatrixSpaceOverRational;
  _.$_$.n = ShowShift_BAR_getInstance;
  _.$_$.o = PrintType_TEX_getInstance;
  _.$_$.p = Printer_init_$Create$_0;
  _.$_$.q = IntDegreeGroup_getInstance;
  _.$_$.r = Companion_getInstance_37;
  _.$_$.s = Companion_getInstance_39;
  _.$_$.t = Companion_getInstance_41;
  _.$_$.u = Companion_getInstance_47;
  _.$_$.v = Companion_getInstance_64;
  _.$_$.w = Companion_getInstance_65;
  //endregion
  return _;
}));

//# sourceMappingURL=kohomology.js.map


/***/ }),

/***/ 72:
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//region block: polyfills
if (typeof ArrayBuffer.isView === 'undefined') {
  ArrayBuffer.isView = function (a) {
    return a != null && a.__proto__ != null && a.__proto__.__proto__ === Int8Array.prototype.__proto__;
  };
}
if (typeof Math.log10 === 'undefined') {
  Math.log10 = function (x) {
    return Math.log(x) * Math.LOG10E;
  };
}
if (typeof String.prototype.startsWith === 'undefined') {
  Object.defineProperty(String.prototype, 'startsWith', {value: function (searchString, position) {
    position = position || 0;
    return this.lastIndexOf(searchString, position) === position;
  }});
}
if (typeof Math.imul === 'undefined') {
  Math.imul = function imul(a, b) {
    return (a & 4.29490176E9) * (b & 65535) + (a & 65535) * (b | 0) | 0;
  };
}
//endregion
(function (root, factory) {
  if (true)
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  else {}
}(this, function (_) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var isView = ArrayBuffer.isView;
  //endregion
  //region block: pre-declaration
  setMetadataFor(_no_name_provided__qut3iv, VOID, classMeta);
  setMetadataFor(_no_name_provided__qut3iv_0, VOID, classMeta);
  setMetadataFor(Collection, 'Collection', interfaceMeta);
  setMetadataFor(AbstractCollection, 'AbstractCollection', classMeta, VOID, [Collection]);
  setMetadataFor(AbstractIterator, 'AbstractIterator', classMeta);
  setMetadataFor(Comparable, 'Comparable', interfaceMeta);
  setMetadataFor(Enum, 'Enum', classMeta, VOID, [Comparable]);
  setMetadataFor(State, 'State', classMeta, Enum);
  setMetadataFor(List, 'List', interfaceMeta, VOID, [Collection]);
  setMetadataFor(AbstractList, 'AbstractList', classMeta, AbstractCollection, [AbstractCollection, List]);
  setMetadataFor(RandomAccess, 'RandomAccess', interfaceMeta);
  setMetadataFor(SubList, 'SubList', classMeta, AbstractList, [AbstractList, RandomAccess]);
  setMetadataFor(IteratorImpl, 'IteratorImpl', classMeta);
  setMetadataFor(ListIteratorImpl, 'ListIteratorImpl', classMeta, IteratorImpl);
  setMetadataFor(Companion, 'Companion', objectMeta);
  setMetadataFor(AbstractMap$keys$1$iterator$1, VOID, classMeta);
  setMetadataFor(AbstractMap$values$1$iterator$1, VOID, classMeta);
  setMetadataFor(Companion_0, 'Companion', objectMeta);
  setMetadataFor(Set, 'Set', interfaceMeta, VOID, [Collection]);
  setMetadataFor(AbstractSet, 'AbstractSet', classMeta, AbstractCollection, [AbstractCollection, Set]);
  setMetadataFor(AbstractMap$keys$1, VOID, classMeta, AbstractSet);
  setMetadataFor(AbstractMap$values$1, VOID, classMeta, AbstractCollection);
  setMetadataFor(Map, 'Map', interfaceMeta);
  setMetadataFor(AbstractMap, 'AbstractMap', classMeta, VOID, [Map]);
  setMetadataFor(Companion_1, 'Companion', objectMeta);
  setMetadataFor(EmptyList, 'EmptyList', objectMeta, VOID, [List, RandomAccess]);
  setMetadataFor(ArrayAsCollection, 'ArrayAsCollection', classMeta, VOID, [Collection]);
  setMetadataFor(EmptyIterator, 'EmptyIterator', objectMeta);
  setMetadataFor(IndexedValue, 'IndexedValue', classMeta);
  setMetadataFor(IndexingIterable, 'IndexingIterable', classMeta);
  setMetadataFor(IndexingIterator, 'IndexingIterator', classMeta);
  setMetadataFor(MapWithDefault, 'MapWithDefault', interfaceMeta, VOID, [Map]);
  setMetadataFor(EmptyMap, 'EmptyMap', objectMeta, VOID, [Map]);
  setMetadataFor(IntIterator, 'IntIterator', classMeta);
  setMetadataFor(TransformingSequence$iterator$1, VOID, classMeta);
  setMetadataFor(TransformingSequence, 'TransformingSequence', classMeta);
  setMetadataFor(EmptySet, 'EmptySet', objectMeta, VOID, [Set]);
  setMetadataFor(Comparator, 'Comparator', interfaceMeta);
  setMetadataFor(NaturalOrderComparator, 'NaturalOrderComparator', objectMeta, VOID, [Comparator]);
  setMetadataFor(Companion_2, 'Companion', objectMeta);
  setMetadataFor(IntProgression, 'IntProgression', classMeta);
  setMetadataFor(IntRange, 'IntRange', classMeta, IntProgression);
  setMetadataFor(IntProgressionIterator, 'IntProgressionIterator', classMeta, IntIterator);
  setMetadataFor(Companion_3, 'Companion', objectMeta);
  setMetadataFor(Companion_4, 'Companion', objectMeta);
  setMetadataFor(KTypeProjection, 'KTypeProjection', classMeta);
  setMetadataFor(KVariance, 'KVariance', classMeta, Enum);
  setMetadataFor(DelimitedRangesSequence$iterator$1, VOID, classMeta);
  setMetadataFor(DelimitedRangesSequence, 'DelimitedRangesSequence', classMeta);
  setMetadataFor(UnsafeLazyImpl, 'UnsafeLazyImpl', classMeta);
  setMetadataFor(UNINITIALIZED_VALUE, 'UNINITIALIZED_VALUE', objectMeta);
  setMetadataFor(Error_0, 'Error', classMeta, Error);
  setMetadataFor(NotImplementedError, 'NotImplementedError', classMeta, Error_0);
  setMetadataFor(Pair, 'Pair', classMeta);
  setMetadataFor(Triple, 'Triple', classMeta);
  setMetadataFor(Companion_5, 'Companion', objectMeta);
  setMetadataFor(UByte, 'UByte', classMeta, VOID, [Comparable]);
  setMetadataFor(Companion_6, 'Companion', objectMeta);
  setMetadataFor(UInt, 'UInt', classMeta, VOID, [Comparable]);
  setMetadataFor(Iterator, 'Iterator', classMeta);
  setMetadataFor(UIntArray, 'UIntArray', classMeta, VOID, [Collection]);
  setMetadataFor(Companion_7, 'Companion', objectMeta);
  setMetadataFor(ULong, 'ULong', classMeta, VOID, [Comparable]);
  setMetadataFor(Iterator_0, 'Iterator', classMeta);
  setMetadataFor(ULongArray, 'ULongArray', classMeta, VOID, [Collection]);
  setMetadataFor(Companion_8, 'Companion', objectMeta);
  setMetadataFor(UShort, 'UShort', classMeta, VOID, [Comparable]);
  setMetadataFor(CharSequence, 'CharSequence', interfaceMeta);
  setMetadataFor(Number_0, 'Number', classMeta);
  setMetadataFor(Unit, 'Unit', objectMeta);
  setMetadataFor(ByteCompanionObject, 'ByteCompanionObject', objectMeta);
  setMetadataFor(ShortCompanionObject, 'ShortCompanionObject', objectMeta);
  setMetadataFor(IntCompanionObject, 'IntCompanionObject', objectMeta);
  setMetadataFor(FloatCompanionObject, 'FloatCompanionObject', objectMeta);
  setMetadataFor(DoubleCompanionObject, 'DoubleCompanionObject', objectMeta);
  setMetadataFor(StringCompanionObject, 'StringCompanionObject', objectMeta);
  setMetadataFor(BooleanCompanionObject, 'BooleanCompanionObject', objectMeta);
  setMetadataFor(AbstractMutableCollection, 'AbstractMutableCollection', classMeta, AbstractCollection, [AbstractCollection, Collection]);
  setMetadataFor(IteratorImpl_0, 'IteratorImpl', classMeta);
  setMetadataFor(ListIteratorImpl_0, 'ListIteratorImpl', classMeta, IteratorImpl_0);
  setMetadataFor(MutableList, 'MutableList', interfaceMeta, VOID, [List, Collection]);
  setMetadataFor(AbstractMutableList, 'AbstractMutableList', classMeta, AbstractMutableCollection, [AbstractMutableCollection, MutableList]);
  setMetadataFor(SubList_0, 'SubList', classMeta, AbstractMutableList, [AbstractMutableList, RandomAccess]);
  setMetadataFor(AbstractMutableMap$keys$1$iterator$1, VOID, classMeta);
  setMetadataFor(AbstractMutableMap$values$1$iterator$1, VOID, classMeta);
  setMetadataFor(Entry, 'Entry', interfaceMeta);
  setMetadataFor(MutableEntry, 'MutableEntry', interfaceMeta, VOID, [Entry]);
  setMetadataFor(SimpleEntry, 'SimpleEntry', classMeta, VOID, [MutableEntry]);
  setMetadataFor(MutableSet, 'MutableSet', interfaceMeta, VOID, [Set, Collection]);
  setMetadataFor(AbstractMutableSet, 'AbstractMutableSet', classMeta, AbstractMutableCollection, [AbstractMutableCollection, MutableSet]);
  setMetadataFor(AbstractEntrySet, 'AbstractEntrySet', classMeta, AbstractMutableSet);
  setMetadataFor(AbstractMutableMap$keys$1, VOID, classMeta, AbstractMutableSet);
  setMetadataFor(AbstractMutableMap$values$1, VOID, classMeta, AbstractMutableCollection);
  setMetadataFor(MutableMap, 'MutableMap', interfaceMeta, VOID, [Map]);
  setMetadataFor(AbstractMutableMap, 'AbstractMutableMap', classMeta, AbstractMap, [AbstractMap, MutableMap]);
  setMetadataFor(Companion_9, 'Companion', objectMeta);
  setMetadataFor(ArrayList, 'ArrayList', classMeta, AbstractMutableList, [AbstractMutableList, MutableList, RandomAccess]);
  setMetadataFor(HashCode, 'HashCode', objectMeta);
  setMetadataFor(EntrySet, 'EntrySet', classMeta, AbstractEntrySet);
  setMetadataFor(HashMap, 'HashMap', classMeta, AbstractMutableMap, [AbstractMutableMap, MutableMap]);
  setMetadataFor(HashSet, 'HashSet', classMeta, AbstractMutableSet, [AbstractMutableSet, MutableSet]);
  setMetadataFor(InternalHashCodeMap$iterator$1, VOID, classMeta);
  function createJsMap() {
    var result = Object.create(null);
    result['foo'] = 1;
    var tmp$ret$0;
    // Inline function 'kotlin.js.jsDeleteProperty' call
    delete result['foo'];
    tmp$ret$0 = Unit_getInstance();
    return result;
  }
  setMetadataFor(InternalMap, 'InternalMap', interfaceMeta);
  setMetadataFor(InternalHashCodeMap, 'InternalHashCodeMap', classMeta, VOID, [InternalMap]);
  setMetadataFor(EntryIterator, 'EntryIterator', classMeta);
  setMetadataFor(Companion_10, 'Companion', objectMeta);
  setMetadataFor(ChainEntry, 'ChainEntry', classMeta, SimpleEntry);
  setMetadataFor(EntrySet_0, 'EntrySet', classMeta, AbstractEntrySet);
  setMetadataFor(LinkedHashMap, 'LinkedHashMap', classMeta, HashMap, [HashMap, MutableMap]);
  setMetadataFor(Companion_11, 'Companion', objectMeta);
  setMetadataFor(LinkedHashSet, 'LinkedHashSet', classMeta, HashSet, [HashSet, MutableSet]);
  setMetadataFor(BaseOutput, 'BaseOutput', classMeta);
  setMetadataFor(NodeJsOutput, 'NodeJsOutput', classMeta, BaseOutput);
  setMetadataFor(BufferedOutput, 'BufferedOutput', classMeta, BaseOutput);
  setMetadataFor(BufferedOutputToConsoleLog, 'BufferedOutputToConsoleLog', classMeta, BufferedOutput);
  setMetadataFor(KClass, 'KClass', interfaceMeta);
  setMetadataFor(KClassImpl, 'KClassImpl', classMeta, VOID, [KClass]);
  setMetadataFor(PrimitiveKClassImpl, 'PrimitiveKClassImpl', classMeta, KClassImpl);
  setMetadataFor(NothingKClassImpl, 'NothingKClassImpl', objectMeta, KClassImpl);
  setMetadataFor(ErrorKClass, 'ErrorKClass', classMeta, VOID, [KClass]);
  setMetadataFor(SimpleKClassImpl, 'SimpleKClassImpl', classMeta, KClassImpl);
  setMetadataFor(KProperty1, 'KProperty1', interfaceMeta);
  setMetadataFor(KProperty0, 'KProperty0', interfaceMeta);
  setMetadataFor(KTypeImpl, 'KTypeImpl', classMeta);
  setMetadataFor(PrimitiveClasses, 'PrimitiveClasses', objectMeta);
  setMetadataFor(Companion_12, 'Companion', objectMeta);
  setMetadataFor(CharCategory, 'CharCategory', classMeta, Enum);
  setMetadataFor(StringBuilder, 'StringBuilder', classMeta, VOID, [CharSequence]);
  setMetadataFor(Companion_13, 'Companion', objectMeta);
  setMetadataFor(Regex, 'Regex', classMeta);
  setMetadataFor(MatchGroup, 'MatchGroup', classMeta);
  setMetadataFor(findNext$1$groups$1, VOID, classMeta, AbstractCollection, [Collection, AbstractCollection]);
  setMetadataFor(findNext$1, VOID, classMeta);
  setMetadataFor(sam$kotlin_Comparator$0, 'sam$kotlin_Comparator$0', classMeta, VOID, [Comparator]);
  setMetadataFor(Companion_14, 'Companion', objectMeta);
  setMetadataFor(Char, 'Char', classMeta, VOID, [Comparable]);
  setMetadataFor(Companion_15, 'Companion', objectMeta);
  setMetadataFor(arrayIterator$1, VOID, classMeta);
  setMetadataFor(Companion_16, 'Companion', objectMeta);
  setMetadataFor(Long, 'Long', classMeta, Number_0, [Number_0, Comparable]);
  setMetadataFor(Category, 'Category', objectMeta);
  setMetadataFor(Digit, 'Digit', objectMeta);
  setMetadataFor(asList$1, VOID, classMeta, AbstractList, [AbstractList, RandomAccess]);
  setMetadataFor(Exception, 'Exception', classMeta, Error);
  setMetadataFor(RuntimeException, 'RuntimeException', classMeta, Exception);
  setMetadataFor(IllegalArgumentException, 'IllegalArgumentException', classMeta, RuntimeException);
  setMetadataFor(IndexOutOfBoundsException, 'IndexOutOfBoundsException', classMeta, RuntimeException);
  setMetadataFor(IllegalStateException, 'IllegalStateException', classMeta, RuntimeException);
  setMetadataFor(NoSuchElementException, 'NoSuchElementException', classMeta, RuntimeException);
  setMetadataFor(UnsupportedOperationException, 'UnsupportedOperationException', classMeta, RuntimeException);
  setMetadataFor(NumberFormatException, 'NumberFormatException', classMeta, IllegalArgumentException);
  setMetadataFor(ArithmeticException, 'ArithmeticException', classMeta, RuntimeException);
  setMetadataFor(NullPointerException, 'NullPointerException', classMeta, RuntimeException);
  setMetadataFor(NoWhenBranchMatchedException, 'NoWhenBranchMatchedException', classMeta, RuntimeException);
  setMetadataFor(ClassCastException, 'ClassCastException', classMeta, RuntimeException);
  setMetadataFor(UninitializedPropertyAccessException, 'UninitializedPropertyAccessException', classMeta, RuntimeException);
  //endregion
  function toList(_this__u8e3s4) {
    switch (_this__u8e3s4.length) {
      case 0:
        return emptyList();
      case 1:
        return listOf_0(_this__u8e3s4[0]);
      default:
        return toMutableList(_this__u8e3s4);
    }
  }
  function withIndex(_this__u8e3s4) {
    return new IndexingIterable(withIndex$lambda(_this__u8e3s4));
  }
  function get_indices(_this__u8e3s4) {
    return new IntRange(0, get_lastIndex_0(_this__u8e3s4));
  }
  function indexOf(_this__u8e3s4, element) {
    if (element == null) {
      var inductionVariable = 0;
      var last = _this__u8e3s4.length - 1 | 0;
      if (inductionVariable <= last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (_this__u8e3s4[index] == null) {
            return index;
          }
        }
         while (inductionVariable <= last);
    } else {
      var inductionVariable_0 = 0;
      var last_0 = _this__u8e3s4.length - 1 | 0;
      if (inductionVariable_0 <= last_0)
        do {
          var index_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          if (equals_1(element, _this__u8e3s4[index_0])) {
            return index_0;
          }
        }
         while (inductionVariable_0 <= last_0);
    }
    return -1;
  }
  function single(_this__u8e3s4) {
    var tmp;
    switch (_this__u8e3s4.length) {
      case 0:
        throw NoSuchElementException_init_$Create$_0('Array is empty.');
      case 1:
        tmp = _this__u8e3s4[0];
        break;
      default:
        throw IllegalArgumentException_init_$Create$_0('Array has more than one element.');
    }
    return tmp;
  }
  function contains(_this__u8e3s4, element) {
    return indexOf(_this__u8e3s4, element) >= 0;
  }
  function contains_0(_this__u8e3s4, element) {
    return indexOf_0(_this__u8e3s4, element) >= 0;
  }
  function get_lastIndex(_this__u8e3s4) {
    return _this__u8e3s4.length - 1 | 0;
  }
  function contains_1(_this__u8e3s4, element) {
    return indexOf_1(_this__u8e3s4, element) >= 0;
  }
  function toMutableList(_this__u8e3s4) {
    return ArrayList_init_$Create$_1(asCollection(_this__u8e3s4));
  }
  function get_lastIndex_0(_this__u8e3s4) {
    return _this__u8e3s4.length - 1 | 0;
  }
  function indexOf_0(_this__u8e3s4, element) {
    var inductionVariable = 0;
    var last = _this__u8e3s4.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (element.equals(_this__u8e3s4[index])) {
          return index;
        }
      }
       while (inductionVariable <= last);
    return -1;
  }
  function get_indices_0(_this__u8e3s4) {
    return new IntRange(0, get_lastIndex(_this__u8e3s4));
  }
  function indexOf_1(_this__u8e3s4, element) {
    var inductionVariable = 0;
    var last = _this__u8e3s4.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (element === _this__u8e3s4[index]) {
          return index;
        }
      }
       while (inductionVariable <= last);
    return -1;
  }
  function toSet(_this__u8e3s4) {
    switch (_this__u8e3s4.length) {
      case 0:
        return emptySet();
      case 1:
        return setOf_0(_this__u8e3s4[0]);
      default:
        return toCollection(_this__u8e3s4, LinkedHashSet_init_$Create$_1(mapCapacity(_this__u8e3s4.length)));
    }
  }
  function toCollection(_this__u8e3s4, destination) {
    var inductionVariable = 0;
    var last = _this__u8e3s4.length;
    while (inductionVariable < last) {
      var item = _this__u8e3s4[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      destination.a(item);
    }
    return destination;
  }
  function joinToString(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    transform = transform === VOID ? null : transform;
    return joinTo(_this__u8e3s4, StringBuilder_init_$Create$_1(), separator, prefix, postfix, limit, truncated, transform).toString();
  }
  function joinTo(_this__u8e3s4, buffer, separator, prefix, postfix, limit, truncated, transform) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    transform = transform === VOID ? null : transform;
    buffer.b(prefix);
    var count = 0;
    var inductionVariable = 0;
    var last = _this__u8e3s4.length;
    $l$loop: while (inductionVariable < last) {
      var element = _this__u8e3s4[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      count = count + 1 | 0;
      if (count > 1) {
        buffer.b(separator);
      }
      if (limit < 0 ? true : count <= limit) {
        appendElement(buffer, element, transform);
      } else
        break $l$loop;
    }
    if (limit >= 0 ? count > limit : false) {
      buffer.b(truncated);
    }
    buffer.b(postfix);
    return buffer;
  }
  function toList_0(_this__u8e3s4) {
    switch (_this__u8e3s4.length) {
      case 0:
        return emptyList();
      case 1:
        return listOf_0(_this__u8e3s4[0]);
      default:
        return toMutableList_0(_this__u8e3s4);
    }
  }
  function toMutableList_0(_this__u8e3s4) {
    var list = ArrayList_init_$Create$_0(_this__u8e3s4.length);
    var inductionVariable = 0;
    var last = _this__u8e3s4.length;
    while (inductionVariable < last) {
      var item = _this__u8e3s4[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      list.a(item);
    }
    return list;
  }
  function withIndex$lambda($this_withIndex) {
    return function () {
      return arrayIterator($this_withIndex);
    };
  }
  function joinToString_0(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    transform = transform === VOID ? null : transform;
    return joinTo_0(_this__u8e3s4, StringBuilder_init_$Create$_1(), separator, prefix, postfix, limit, truncated, transform).toString();
  }
  function joinTo_0(_this__u8e3s4, buffer, separator, prefix, postfix, limit, truncated, transform) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    transform = transform === VOID ? null : transform;
    buffer.b(prefix);
    var count = 0;
    var tmp0_iterator = _this__u8e3s4.f();
    $l$loop: while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      count = count + 1 | 0;
      if (count > 1) {
        buffer.b(separator);
      }
      if (limit < 0 ? true : count <= limit) {
        appendElement(buffer, element, transform);
      } else
        break $l$loop;
    }
    if (limit >= 0 ? count > limit : false) {
      buffer.b(truncated);
    }
    buffer.b(postfix);
    return buffer;
  }
  function plus(_this__u8e3s4, elements) {
    if (isInterface(elements, Collection)) {
      var result = ArrayList_init_$Create$_0(_this__u8e3s4.i() + elements.i() | 0);
      result.j(_this__u8e3s4);
      result.j(elements);
      return result;
    } else {
      var result_0 = ArrayList_init_$Create$_1(_this__u8e3s4);
      addAll(result_0, elements);
      return result_0;
    }
  }
  function takeLast(_this__u8e3s4, n) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(n >= 0)) {
      // Inline function 'kotlin.collections.takeLast.<anonymous>' call
      var message = 'Requested element count ' + n + ' is less than zero.';
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    if (n === 0)
      return emptyList();
    var size = _this__u8e3s4.i();
    if (n >= size)
      return toList_1(_this__u8e3s4);
    if (n === 1)
      return listOf_0(last(_this__u8e3s4));
    var list = ArrayList_init_$Create$_0(n);
    if (isInterface(_this__u8e3s4, RandomAccess)) {
      var inductionVariable = size - n | 0;
      if (inductionVariable < size)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          list.a(_this__u8e3s4.l(index));
        }
         while (inductionVariable < size);
    } else {
      // Inline function 'kotlin.collections.iterator' call
      var tmp1_iterator = _this__u8e3s4.k(size - n | 0);
      while (tmp1_iterator.g()) {
        var item = tmp1_iterator.h();
        list.a(item);
      }
    }
    return list;
  }
  function toList_1(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, Collection)) {
      var tmp;
      switch (_this__u8e3s4.i()) {
        case 0:
          tmp = emptyList();
          break;
        case 1:
          var tmp_0;
          if (isInterface(_this__u8e3s4, List)) {
            tmp_0 = _this__u8e3s4.l(0);
          } else {
            tmp_0 = _this__u8e3s4.f().h();
          }

          tmp = listOf_0(tmp_0);
          break;
        default:
          tmp = toMutableList_2(_this__u8e3s4);
          break;
      }
      return tmp;
    }
    return optimizeReadOnlyList(toMutableList_1(_this__u8e3s4));
  }
  function drop(_this__u8e3s4, n) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(n >= 0)) {
      // Inline function 'kotlin.collections.drop.<anonymous>' call
      var message = 'Requested element count ' + n + ' is less than zero.';
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    if (n === 0)
      return toList_1(_this__u8e3s4);
    var list;
    if (isInterface(_this__u8e3s4, Collection)) {
      var resultSize = _this__u8e3s4.i() - n | 0;
      if (resultSize <= 0)
        return emptyList();
      if (resultSize === 1)
        return listOf_0(last_0(_this__u8e3s4));
      list = ArrayList_init_$Create$_0(resultSize);
      if (isInterface(_this__u8e3s4, List)) {
        if (isInterface(_this__u8e3s4, RandomAccess)) {
          var inductionVariable = n;
          var last = _this__u8e3s4.i();
          if (inductionVariable < last)
            do {
              var index = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              list.a(_this__u8e3s4.l(index));
            }
             while (inductionVariable < last);
        } else {
          // Inline function 'kotlin.collections.iterator' call
          var tmp1_iterator = _this__u8e3s4.k(n);
          while (tmp1_iterator.g()) {
            var item = tmp1_iterator.h();
            list.a(item);
          }
        }
        return list;
      }
    } else {
      list = ArrayList_init_$Create$();
    }
    var count = 0;
    var tmp2_iterator = _this__u8e3s4.f();
    while (tmp2_iterator.g()) {
      var item_0 = tmp2_iterator.h();
      if (count >= n) {
        list.a(item_0);
      } else {
        count = count + 1 | 0;
      }
    }
    return optimizeReadOnlyList(list);
  }
  function dropLast(_this__u8e3s4, n) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(n >= 0)) {
      // Inline function 'kotlin.collections.dropLast.<anonymous>' call
      var message = 'Requested element count ' + n + ' is less than zero.';
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    return take(_this__u8e3s4, coerceAtLeast(_this__u8e3s4.i() - n | 0, 0));
  }
  function toHashSet(_this__u8e3s4) {
    return toCollection_0(_this__u8e3s4, HashSet_init_$Create$_1(mapCapacity(collectionSizeOrDefault(_this__u8e3s4, 12))));
  }
  function toBooleanArray(_this__u8e3s4) {
    var result = booleanArray(_this__u8e3s4.i());
    var index = 0;
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      result[tmp1] = element;
    }
    return result;
  }
  function toSet_0(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, Collection)) {
      var tmp;
      switch (_this__u8e3s4.i()) {
        case 0:
          tmp = emptySet();
          break;
        case 1:
          var tmp_0;
          if (isInterface(_this__u8e3s4, List)) {
            tmp_0 = _this__u8e3s4.l(0);
          } else {
            tmp_0 = _this__u8e3s4.f().h();
          }

          tmp = setOf_0(tmp_0);
          break;
        default:
          tmp = toCollection_0(_this__u8e3s4, LinkedHashSet_init_$Create$_1(mapCapacity(_this__u8e3s4.i())));
          break;
      }
      return tmp;
    }
    return optimizeReadOnlySet(toCollection_0(_this__u8e3s4, LinkedHashSet_init_$Create$()));
  }
  function count(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, Collection))
      return _this__u8e3s4.i();
    var count = 0;
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      count = count + 1 | 0;
      checkCountOverflow(count);
    }
    return count;
  }
  function first(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, List))
      return first_0(_this__u8e3s4);
    else {
      var iterator = _this__u8e3s4.f();
      if (!iterator.g())
        throw NoSuchElementException_init_$Create$_0('Collection is empty.');
      return iterator.h();
    }
  }
  function withIndex_0(_this__u8e3s4) {
    return new IndexingIterable(withIndex$lambda_0(_this__u8e3s4));
  }
  function toMutableSet(_this__u8e3s4) {
    var tmp;
    if (isInterface(_this__u8e3s4, Collection)) {
      tmp = LinkedHashSet_init_$Create$_0(_this__u8e3s4);
    } else {
      tmp = toCollection_0(_this__u8e3s4, LinkedHashSet_init_$Create$());
    }
    return tmp;
  }
  function zip(_this__u8e3s4, other) {
    // Inline function 'kotlin.collections.zip' call
    var first = _this__u8e3s4.f();
    var second = other.f();
    var tmp$ret$0;
    // Inline function 'kotlin.comparisons.minOf' call
    var tmp0_minOf = collectionSizeOrDefault(_this__u8e3s4, 10);
    var tmp1_minOf = collectionSizeOrDefault(other, 10);
    tmp$ret$0 = Math.min(tmp0_minOf, tmp1_minOf);
    var list = ArrayList_init_$Create$_0(tmp$ret$0);
    while (first.g() ? second.g() : false) {
      var tmp$ret$1;
      // Inline function 'kotlin.collections.zip.<anonymous>' call
      var tmp0_anonymous = first.h();
      var tmp1_anonymous = second.h();
      tmp$ret$1 = to(tmp0_anonymous, tmp1_anonymous);
      list.a(tmp$ret$1);
    }
    return list;
  }
  function slice(_this__u8e3s4, indices) {
    if (indices.p()) {
      // Inline function 'kotlin.collections.listOf' call
      return emptyList();
    }
    return toList_1(_this__u8e3s4.s(indices.q(), indices.r() + 1 | 0));
  }
  function filterNotNull(_this__u8e3s4) {
    return filterNotNullTo(_this__u8e3s4, ArrayList_init_$Create$());
  }
  function sorted(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, Collection)) {
      if (_this__u8e3s4.i() <= 1)
        return toList_1(_this__u8e3s4);
      // Inline function 'kotlin.apply' call
      // Inline function 'kotlin.collections.toTypedArray' call
      var tmp = copyToArray(_this__u8e3s4);
      var tmp1_apply = isArray(tmp) ? tmp : THROW_CCE();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlin.collections.sorted.<anonymous>' call
      sort_0(tmp1_apply);
      return asList(tmp1_apply);
    }
    // Inline function 'kotlin.apply' call
    var tmp2_apply = toMutableList_1(_this__u8e3s4);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.sorted.<anonymous>' call
    sort(tmp2_apply);
    return tmp2_apply;
  }
  function last(_this__u8e3s4) {
    if (_this__u8e3s4.p())
      throw NoSuchElementException_init_$Create$_0('List is empty.');
    return _this__u8e3s4.l(get_lastIndex_1(_this__u8e3s4));
  }
  function first_0(_this__u8e3s4) {
    if (_this__u8e3s4.p())
      throw NoSuchElementException_init_$Create$_0('List is empty.');
    return _this__u8e3s4.l(0);
  }
  function toMutableList_1(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, Collection))
      return toMutableList_2(_this__u8e3s4);
    return toCollection_0(_this__u8e3s4, ArrayList_init_$Create$());
  }
  function toMutableList_2(_this__u8e3s4) {
    return ArrayList_init_$Create$_1(_this__u8e3s4);
  }
  function last_0(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, List))
      return last(_this__u8e3s4);
    else {
      var iterator = _this__u8e3s4.f();
      if (!iterator.g())
        throw NoSuchElementException_init_$Create$_0('Collection is empty.');
      var last_0 = iterator.h();
      while (iterator.g())
        last_0 = iterator.h();
      return last_0;
    }
  }
  function take(_this__u8e3s4, n) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(n >= 0)) {
      // Inline function 'kotlin.collections.take.<anonymous>' call
      var message = 'Requested element count ' + n + ' is less than zero.';
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    if (n === 0)
      return emptyList();
    if (isInterface(_this__u8e3s4, Collection)) {
      if (n >= _this__u8e3s4.i())
        return toList_1(_this__u8e3s4);
      if (n === 1)
        return listOf_0(first(_this__u8e3s4));
    }
    var count = 0;
    var list = ArrayList_init_$Create$_0(n);
    var tmp0_iterator = _this__u8e3s4.f();
    $l$loop: while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      list.a(item);
      count = count + 1 | 0;
      if (count === n)
        break $l$loop;
    }
    return optimizeReadOnlyList(list);
  }
  function toCollection_0(_this__u8e3s4, destination) {
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      destination.a(item);
    }
    return destination;
  }
  function filterNotNullTo(_this__u8e3s4, destination) {
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      if (!(element == null)) {
        destination.a(element);
      }
    }
    return destination;
  }
  function sortedWith(_this__u8e3s4, comparator) {
    if (isInterface(_this__u8e3s4, Collection)) {
      if (_this__u8e3s4.i() <= 1)
        return toList_1(_this__u8e3s4);
      // Inline function 'kotlin.apply' call
      // Inline function 'kotlin.collections.toTypedArray' call
      var tmp = copyToArray(_this__u8e3s4);
      var tmp1_apply = isArray(tmp) ? tmp : THROW_CCE();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlin.collections.sortedWith.<anonymous>' call
      sortWith_0(tmp1_apply, comparator);
      return asList(tmp1_apply);
    }
    // Inline function 'kotlin.apply' call
    var tmp2_apply = toMutableList_1(_this__u8e3s4);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.sortedWith.<anonymous>' call
    sortWith(tmp2_apply, comparator);
    return tmp2_apply;
  }
  function minOrNull(_this__u8e3s4) {
    var iterator = _this__u8e3s4.f();
    if (!iterator.g())
      return null;
    var min = iterator.h();
    while (iterator.g()) {
      var e = iterator.h();
      if (compareTo_0(min, e) > 0)
        min = e;
    }
    return min;
  }
  function single_0(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, List))
      return single_1(_this__u8e3s4);
    else {
      var iterator = _this__u8e3s4.f();
      if (!iterator.g())
        throw NoSuchElementException_init_$Create$_0('Collection is empty.');
      var single = iterator.h();
      if (iterator.g())
        throw IllegalArgumentException_init_$Create$_0('Collection has more than one element.');
      return single;
    }
  }
  function single_1(_this__u8e3s4) {
    var tmp;
    switch (_this__u8e3s4.i()) {
      case 0:
        throw NoSuchElementException_init_$Create$_0('List is empty.');
      case 1:
        tmp = _this__u8e3s4.l(0);
        break;
      default:
        throw IllegalArgumentException_init_$Create$_0('List has more than one element.');
    }
    return tmp;
  }
  function sum(_this__u8e3s4) {
    var sum = 0;
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      sum = sum + element | 0;
    }
    return sum;
  }
  function toIntArray(_this__u8e3s4) {
    var result = new Int32Array(_this__u8e3s4.i());
    var index = 0;
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      result[tmp1] = element;
    }
    return result;
  }
  function any(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, Collection))
      return !_this__u8e3s4.p();
    return _this__u8e3s4.f().g();
  }
  function distinct(_this__u8e3s4) {
    return toList_1(toMutableSet(_this__u8e3s4));
  }
  function asSequence(_this__u8e3s4) {
    // Inline function 'kotlin.sequences.Sequence' call
    return new _no_name_provided__qut3iv(_this__u8e3s4);
  }
  function lastOrNull(_this__u8e3s4) {
    return _this__u8e3s4.p() ? null : _this__u8e3s4.l(_this__u8e3s4.i() - 1 | 0);
  }
  function withIndex$lambda_0($this_withIndex) {
    return function () {
      return $this_withIndex.f();
    };
  }
  function _no_name_provided__qut3iv($this_asSequence) {
    this.t_1 = $this_asSequence;
  }
  protoOf(_no_name_provided__qut3iv).f = function () {
    // Inline function 'kotlin.collections.asSequence.<anonymous>' call
    return this.t_1.f();
  };
  function toList_2(_this__u8e3s4) {
    if (_this__u8e3s4.i() === 0)
      return emptyList();
    var iterator = _this__u8e3s4.u().f();
    if (!iterator.g())
      return emptyList();
    var first = iterator.h();
    if (!iterator.g()) {
      var tmp$ret$0;
      // Inline function 'kotlin.collections.toPair' call
      tmp$ret$0 = new Pair(first.v(), first.w());
      return listOf_0(tmp$ret$0);
    }
    var result = ArrayList_init_$Create$_0(_this__u8e3s4.i());
    var tmp$ret$1;
    // Inline function 'kotlin.collections.toPair' call
    tmp$ret$1 = new Pair(first.v(), first.w());
    result.a(tmp$ret$1);
    do {
      var tmp$ret$2;
      // Inline function 'kotlin.collections.toPair' call
      var tmp0_toPair = iterator.h();
      tmp$ret$2 = new Pair(tmp0_toPair.v(), tmp0_toPair.w());
      result.a(tmp$ret$2);
    }
     while (iterator.g());
    return result;
  }
  function until(_this__u8e3s4, to) {
    if (to <= IntCompanionObject_getInstance().MIN_VALUE)
      return Companion_getInstance_2().x_1;
    return numberRangeToNumber(_this__u8e3s4, to - 1 | 0);
  }
  function downTo(_this__u8e3s4, to) {
    return Companion_getInstance_3().y(_this__u8e3s4, to, -1);
  }
  function coerceAtLeast(_this__u8e3s4, minimumValue) {
    return _this__u8e3s4 < minimumValue ? minimumValue : _this__u8e3s4;
  }
  function coerceAtMost(_this__u8e3s4, maximumValue) {
    return _this__u8e3s4 > maximumValue ? maximumValue : _this__u8e3s4;
  }
  function coerceIn(_this__u8e3s4, minimumValue, maximumValue) {
    if (minimumValue > maximumValue)
      throw IllegalArgumentException_init_$Create$_0('Cannot coerce value to an empty range: maximum ' + maximumValue + ' is less than minimum ' + minimumValue + '.');
    if (_this__u8e3s4 < minimumValue)
      return minimumValue;
    if (_this__u8e3s4 > maximumValue)
      return maximumValue;
    return _this__u8e3s4;
  }
  function step(_this__u8e3s4, step) {
    checkStepIsPositive(step > 0, step);
    return Companion_getInstance_3().y(_this__u8e3s4.z_1, _this__u8e3s4.a1_1, _this__u8e3s4.b1_1 > 0 ? step : -step | 0);
  }
  function asIterable(_this__u8e3s4) {
    // Inline function 'kotlin.collections.Iterable' call
    return new _no_name_provided__qut3iv_0(_this__u8e3s4);
  }
  function joinToString_1(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    transform = transform === VOID ? null : transform;
    return joinTo_1(_this__u8e3s4, StringBuilder_init_$Create$_1(), separator, prefix, postfix, limit, truncated, transform).toString();
  }
  function map(_this__u8e3s4, transform) {
    return new TransformingSequence(_this__u8e3s4, transform);
  }
  function joinTo_1(_this__u8e3s4, buffer, separator, prefix, postfix, limit, truncated, transform) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    transform = transform === VOID ? null : transform;
    buffer.b(prefix);
    var count = 0;
    var tmp0_iterator = _this__u8e3s4.f();
    $l$loop: while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      count = count + 1 | 0;
      if (count > 1) {
        buffer.b(separator);
      }
      if (limit < 0 ? true : count <= limit) {
        appendElement(buffer, element, transform);
      } else
        break $l$loop;
    }
    if (limit >= 0 ? count > limit : false) {
      buffer.b(truncated);
    }
    buffer.b(postfix);
    return buffer;
  }
  function toList_3(_this__u8e3s4) {
    var it = _this__u8e3s4.f();
    if (!it.g())
      return emptyList();
    var element = it.h();
    if (!it.g())
      return listOf_0(element);
    var dst = ArrayList_init_$Create$();
    dst.a(element);
    while (it.g()) {
      dst.a(it.h());
    }
    return dst;
  }
  function _no_name_provided__qut3iv_0($this_asIterable) {
    this.c1_1 = $this_asIterable;
  }
  protoOf(_no_name_provided__qut3iv_0).f = function () {
    // Inline function 'kotlin.sequences.asIterable.<anonymous>' call
    return this.c1_1.f();
  };
  function dropLast_0(_this__u8e3s4, n) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(n >= 0)) {
      // Inline function 'kotlin.text.dropLast.<anonymous>' call
      var message = 'Requested character count ' + n + ' is less than zero.';
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    return take_0(_this__u8e3s4, coerceAtLeast(_this__u8e3s4.length - n | 0, 0));
  }
  function drop_0(_this__u8e3s4, n) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(n >= 0)) {
      // Inline function 'kotlin.text.drop.<anonymous>' call
      var message = 'Requested character count ' + n + ' is less than zero.';
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    // Inline function 'kotlin.text.substring' call
    var tmp1_substring = coerceAtMost(n, _this__u8e3s4.length);
    // Inline function 'kotlin.js.asDynamic' call
    return _this__u8e3s4.substring(tmp1_substring);
  }
  function reversed(_this__u8e3s4) {
    return StringBuilder_init_$Create$_0(_this__u8e3s4).e1();
  }
  function take_0(_this__u8e3s4, n) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(n >= 0)) {
      // Inline function 'kotlin.text.take.<anonymous>' call
      var message = 'Requested character count ' + n + ' is less than zero.';
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    // Inline function 'kotlin.text.substring' call
    var tmp1_substring = coerceAtMost(n, _this__u8e3s4.length);
    // Inline function 'kotlin.js.asDynamic' call
    return _this__u8e3s4.substring(0, tmp1_substring);
  }
  function single_2(_this__u8e3s4) {
    var tmp;
    switch (charSequenceLength(_this__u8e3s4)) {
      case 0:
        throw NoSuchElementException_init_$Create$_0('Char sequence is empty.');
      case 1:
        tmp = charSequenceGet(_this__u8e3s4, 0);
        break;
      default:
        throw IllegalArgumentException_init_$Create$_0('Char sequence has more than one element.');
    }
    return tmp;
  }
  function slice_0(_this__u8e3s4, indices) {
    if (indices.p()) {
      // Inline function 'kotlin.collections.listOf' call
      return emptyList();
    }
    var tmp$ret$1;
    // Inline function 'kotlin.collections.copyOfRange' call
    var tmp0_copyOfRange = indices.q();
    var tmp1_copyOfRange = indices.r() + 1 | 0;
    tmp$ret$1 = _ULongArray___init__impl__twm1l3(copyOfRange(_ULongArray___get_storage__impl__28e64j(_this__u8e3s4), tmp0_copyOfRange, tmp1_copyOfRange));
    return asList_0(tmp$ret$1);
  }
  function toULongArray(_this__u8e3s4) {
    var result = _ULongArray___init__impl__twm1l3_0(_this__u8e3s4.i());
    var index = 0;
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h().f1_1;
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      ULongArray__set_impl_z19mvh(result, tmp1, element);
    }
    return result;
  }
  function AbstractCollection$toString$lambda(this$0) {
    return function (it) {
      return it === this$0 ? '(this Collection)' : toString_2(it);
    };
  }
  function AbstractCollection() {
  }
  protoOf(AbstractCollection).g1 = function (element) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.any' call
      var tmp;
      if (isInterface(this, Collection)) {
        tmp = this.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp0_iterator = this.f();
      while (tmp0_iterator.g()) {
        var element_0 = tmp0_iterator.h();
        // Inline function 'kotlin.collections.AbstractCollection.contains.<anonymous>' call
        if (equals_1(element_0, element)) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    return tmp$ret$0;
  };
  protoOf(AbstractCollection).h1 = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        // Inline function 'kotlin.collections.AbstractCollection.containsAll.<anonymous>' call
        if (!this.g1(element)) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  protoOf(AbstractCollection).p = function () {
    return this.i() === 0;
  };
  protoOf(AbstractCollection).toString = function () {
    return joinToString_0(this, ', ', '[', ']', VOID, VOID, AbstractCollection$toString$lambda(this));
  };
  protoOf(AbstractCollection).toArray = function () {
    return copyToArrayImpl(this);
  };
  function tryToComputeNext($this) {
    $this.i1_1 = State_Failed_getInstance();
    $this.k1();
    return $this.i1_1.equals(State_Ready_getInstance());
  }
  function AbstractIterator() {
    this.i1_1 = State_NotReady_getInstance();
    this.j1_1 = null;
  }
  protoOf(AbstractIterator).g = function () {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!this.i1_1.equals(State_Failed_getInstance())) {
      // Inline function 'kotlin.require.<anonymous>' call
      var message = 'Failed requirement.';
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    switch (this.i1_1.m1_1) {
      case 2:
        return false;
      case 0:
        return true;
      default:
        return tryToComputeNext(this);
    }
  };
  protoOf(AbstractIterator).h = function () {
    if (!this.g())
      throw NoSuchElementException_init_$Create$();
    this.i1_1 = State_NotReady_getInstance();
    var tmp = this.j1_1;
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  protoOf(AbstractIterator).n1 = function (value) {
    this.j1_1 = value;
    this.i1_1 = State_Ready_getInstance();
  };
  protoOf(AbstractIterator).o1 = function () {
    this.i1_1 = State_Done_getInstance();
  };
  var State_Ready_instance;
  var State_NotReady_instance;
  var State_Done_instance;
  var State_Failed_instance;
  var State_entriesInitialized;
  function State_initEntries() {
    if (State_entriesInitialized)
      return Unit_getInstance();
    State_entriesInitialized = true;
    State_Ready_instance = new State('Ready', 0);
    State_NotReady_instance = new State('NotReady', 1);
    State_Done_instance = new State('Done', 2);
    State_Failed_instance = new State('Failed', 3);
  }
  function State(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function State_Ready_getInstance() {
    State_initEntries();
    return State_Ready_instance;
  }
  function State_NotReady_getInstance() {
    State_initEntries();
    return State_NotReady_instance;
  }
  function State_Done_getInstance() {
    State_initEntries();
    return State_Done_instance;
  }
  function State_Failed_getInstance() {
    State_initEntries();
    return State_Failed_instance;
  }
  function SubList(list, fromIndex, toIndex) {
    AbstractList.call(this);
    this.q1_1 = list;
    this.r1_1 = fromIndex;
    this.s1_1 = 0;
    Companion_getInstance().t1(this.r1_1, toIndex, this.q1_1.i());
    this.s1_1 = toIndex - this.r1_1 | 0;
  }
  protoOf(SubList).l = function (index) {
    Companion_getInstance().u1(index, this.s1_1);
    return this.q1_1.l(this.r1_1 + index | 0);
  };
  protoOf(SubList).i = function () {
    return this.s1_1;
  };
  function IteratorImpl($outer) {
    this.x1_1 = $outer;
    this.w1_1 = 0;
  }
  protoOf(IteratorImpl).g = function () {
    return this.w1_1 < this.x1_1.i();
  };
  protoOf(IteratorImpl).h = function () {
    if (!this.g())
      throw NoSuchElementException_init_$Create$();
    var tmp1 = this.w1_1;
    this.w1_1 = tmp1 + 1 | 0;
    return this.x1_1.l(tmp1);
  };
  function ListIteratorImpl($outer, index) {
    this.a2_1 = $outer;
    IteratorImpl.call(this, $outer);
    Companion_getInstance().b2(index, this.a2_1.i());
    this.w1_1 = index;
  }
  function Companion() {
    Companion_instance = this;
  }
  protoOf(Companion).u1 = function (index, size) {
    if (index < 0 ? true : index >= size) {
      throw IndexOutOfBoundsException_init_$Create$('index: ' + index + ', size: ' + size);
    }
  };
  protoOf(Companion).b2 = function (index, size) {
    if (index < 0 ? true : index > size) {
      throw IndexOutOfBoundsException_init_$Create$('index: ' + index + ', size: ' + size);
    }
  };
  protoOf(Companion).t1 = function (fromIndex, toIndex, size) {
    if (fromIndex < 0 ? true : toIndex > size) {
      throw IndexOutOfBoundsException_init_$Create$('fromIndex: ' + fromIndex + ', toIndex: ' + toIndex + ', size: ' + size);
    }
    if (fromIndex > toIndex) {
      throw IllegalArgumentException_init_$Create$_0('fromIndex: ' + fromIndex + ' > toIndex: ' + toIndex);
    }
  };
  protoOf(Companion).c2 = function (startIndex, endIndex, size) {
    if (startIndex < 0 ? true : endIndex > size) {
      throw IndexOutOfBoundsException_init_$Create$('startIndex: ' + startIndex + ', endIndex: ' + endIndex + ', size: ' + size);
    }
    if (startIndex > endIndex) {
      throw IllegalArgumentException_init_$Create$_0('startIndex: ' + startIndex + ' > endIndex: ' + endIndex);
    }
  };
  protoOf(Companion).d2 = function (c) {
    var hashCode_0 = 1;
    var tmp0_iterator = c.f();
    while (tmp0_iterator.g()) {
      var e = tmp0_iterator.h();
      var tmp = imul(31, hashCode_0);
      var tmp2_elvis_lhs = e == null ? null : hashCode(e);
      hashCode_0 = tmp + (tmp2_elvis_lhs == null ? 0 : tmp2_elvis_lhs) | 0;
    }
    return hashCode_0;
  };
  protoOf(Companion).e2 = function (c, other) {
    if (!(c.i() === other.i()))
      return false;
    var otherIterator = other.f();
    var tmp0_iterator = c.f();
    while (tmp0_iterator.g()) {
      var elem = tmp0_iterator.h();
      var elemOther = otherIterator.h();
      if (!equals_1(elem, elemOther)) {
        return false;
      }
    }
    return true;
  };
  var Companion_instance;
  function Companion_getInstance() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function AbstractList() {
    Companion_getInstance();
    AbstractCollection.call(this);
  }
  protoOf(AbstractList).f = function () {
    return new IteratorImpl(this);
  };
  protoOf(AbstractList).v1 = function (element) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.collections.indexOfFirst' call
      var index = 0;
      var tmp0_iterator = this.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        // Inline function 'kotlin.collections.AbstractList.indexOf.<anonymous>' call
        if (equals_1(item, element)) {
          tmp$ret$1 = index;
          break $l$block;
        }
        index = index + 1 | 0;
      }
      tmp$ret$1 = -1;
    }
    return tmp$ret$1;
  };
  protoOf(AbstractList).k = function (index) {
    return new ListIteratorImpl(this, index);
  };
  protoOf(AbstractList).s = function (fromIndex, toIndex) {
    return new SubList(this, fromIndex, toIndex);
  };
  protoOf(AbstractList).equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, List) : false))
      return false;
    return Companion_getInstance().e2(this, other);
  };
  protoOf(AbstractList).hashCode = function () {
    return Companion_getInstance().d2(this);
  };
  function AbstractMap$keys$1$iterator$1($entryIterator) {
    this.f2_1 = $entryIterator;
  }
  protoOf(AbstractMap$keys$1$iterator$1).g = function () {
    return this.f2_1.g();
  };
  protoOf(AbstractMap$keys$1$iterator$1).h = function () {
    return this.f2_1.h().v();
  };
  function AbstractMap$values$1$iterator$1($entryIterator) {
    this.g2_1 = $entryIterator;
  }
  protoOf(AbstractMap$values$1$iterator$1).g = function () {
    return this.g2_1.g();
  };
  protoOf(AbstractMap$values$1$iterator$1).h = function () {
    return this.g2_1.h().w();
  };
  function toString($this, o) {
    return o === $this ? '(this Map)' : toString_2(o);
  }
  function implFindEntry($this, key) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.collections.firstOrNull' call
      var tmp0_iterator = $this.u().f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        // Inline function 'kotlin.collections.AbstractMap.implFindEntry.<anonymous>' call
        if (equals_1(element.v(), key)) {
          tmp$ret$1 = element;
          break $l$block;
        }
      }
      tmp$ret$1 = null;
    }
    return tmp$ret$1;
  }
  function Companion_0() {
    Companion_instance_0 = this;
  }
  protoOf(Companion_0).h2 = function (e) {
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.Companion.entryHashCode.<anonymous>' call
    var tmp2_safe_receiver = e.v();
    var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : hashCode(tmp2_safe_receiver);
    var tmp = tmp3_elvis_lhs == null ? 0 : tmp3_elvis_lhs;
    var tmp0_safe_receiver = e.w();
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
    return tmp ^ (tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs);
  };
  protoOf(Companion_0).i2 = function (e) {
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.Companion.entryToString.<anonymous>' call
    return toString_2(e.v()) + '=' + toString_2(e.w());
  };
  protoOf(Companion_0).j2 = function (e, other) {
    if (!(!(other == null) ? isInterface(other, Entry) : false))
      return false;
    return equals_1(e.v(), other.v()) ? equals_1(e.w(), other.w()) : false;
  };
  var Companion_instance_0;
  function Companion_getInstance_0() {
    if (Companion_instance_0 == null)
      new Companion_0();
    return Companion_instance_0;
  }
  function AbstractMap$keys$1(this$0) {
    this.k2_1 = this$0;
    AbstractSet.call(this);
  }
  protoOf(AbstractMap$keys$1).l2 = function (element) {
    return this.k2_1.o2(element);
  };
  protoOf(AbstractMap$keys$1).g1 = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    return this.l2((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  protoOf(AbstractMap$keys$1).f = function () {
    var entryIterator = this.k2_1.u().f();
    return new AbstractMap$keys$1$iterator$1(entryIterator);
  };
  protoOf(AbstractMap$keys$1).i = function () {
    return this.k2_1.i();
  };
  function AbstractMap$toString$lambda(this$0) {
    return function (it) {
      return this$0.p2(it);
    };
  }
  function AbstractMap$values$1(this$0) {
    this.q2_1 = this$0;
    AbstractCollection.call(this);
  }
  protoOf(AbstractMap$values$1).r2 = function (element) {
    return this.q2_1.s2(element);
  };
  protoOf(AbstractMap$values$1).g1 = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    return this.r2((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  protoOf(AbstractMap$values$1).f = function () {
    var entryIterator = this.q2_1.u().f();
    return new AbstractMap$values$1$iterator$1(entryIterator);
  };
  protoOf(AbstractMap$values$1).i = function () {
    return this.q2_1.i();
  };
  function AbstractMap() {
    Companion_getInstance_0();
    this.m2_1 = null;
    this.n2_1 = null;
  }
  protoOf(AbstractMap).o2 = function (key) {
    return !(implFindEntry(this, key) == null);
  };
  protoOf(AbstractMap).s2 = function (value) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.any' call
      var tmp0_any = this.u();
      var tmp;
      if (isInterface(tmp0_any, Collection)) {
        tmp = tmp0_any.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_any.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        // Inline function 'kotlin.collections.AbstractMap.containsValue.<anonymous>' call
        if (equals_1(element.w(), value)) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    return tmp$ret$0;
  };
  protoOf(AbstractMap).t2 = function (entry) {
    if (!(!(entry == null) ? isInterface(entry, Entry) : false))
      return false;
    var key = entry.v();
    var value = entry.w();
    // Inline function 'kotlin.collections.get' call
    var ourValue = (isInterface(this, Map) ? this : THROW_CCE()).u2(key);
    if (!equals_1(value, ourValue)) {
      return false;
    }
    var tmp;
    if (ourValue == null) {
      // Inline function 'kotlin.collections.containsKey' call
      tmp = !(isInterface(this, Map) ? this : THROW_CCE()).o2(key);
    } else {
      tmp = false;
    }
    if (tmp) {
      return false;
    }
    return true;
  };
  protoOf(AbstractMap).equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, Map) : false))
      return false;
    if (!(this.i() === other.i()))
      return false;
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp0_all = other.u();
      var tmp;
      if (isInterface(tmp0_all, Collection)) {
        tmp = tmp0_all.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_all.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        // Inline function 'kotlin.collections.AbstractMap.equals.<anonymous>' call
        if (!this.t2(element)) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  protoOf(AbstractMap).u2 = function (key) {
    var tmp0_safe_receiver = implFindEntry(this, key);
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.w();
  };
  protoOf(AbstractMap).hashCode = function () {
    return hashCode(this.u());
  };
  protoOf(AbstractMap).p = function () {
    return this.i() === 0;
  };
  protoOf(AbstractMap).i = function () {
    return this.u().i();
  };
  protoOf(AbstractMap).v2 = function () {
    if (this.m2_1 == null) {
      var tmp = this;
      tmp.m2_1 = new AbstractMap$keys$1(this);
    }
    return ensureNotNull(this.m2_1);
  };
  protoOf(AbstractMap).toString = function () {
    var tmp = this.u();
    return joinToString_0(tmp, ', ', '{', '}', VOID, VOID, AbstractMap$toString$lambda(this));
  };
  protoOf(AbstractMap).p2 = function (entry) {
    return toString(this, entry.v()) + '=' + toString(this, entry.w());
  };
  protoOf(AbstractMap).w2 = function () {
    if (this.n2_1 == null) {
      var tmp = this;
      tmp.n2_1 = new AbstractMap$values$1(this);
    }
    return ensureNotNull(this.n2_1);
  };
  function Companion_1() {
    Companion_instance_1 = this;
  }
  protoOf(Companion_1).x2 = function (c) {
    var hashCode_0 = 0;
    var tmp0_iterator = c.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp = hashCode_0;
      var tmp2_elvis_lhs = element == null ? null : hashCode(element);
      hashCode_0 = tmp + (tmp2_elvis_lhs == null ? 0 : tmp2_elvis_lhs) | 0;
    }
    return hashCode_0;
  };
  protoOf(Companion_1).y2 = function (c, other) {
    if (!(c.i() === other.i()))
      return false;
    // Inline function 'kotlin.collections.containsAll' call
    return c.h1(other);
  };
  var Companion_instance_1;
  function Companion_getInstance_1() {
    if (Companion_instance_1 == null)
      new Companion_1();
    return Companion_instance_1;
  }
  function AbstractSet() {
    Companion_getInstance_1();
    AbstractCollection.call(this);
  }
  protoOf(AbstractSet).equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, Set) : false))
      return false;
    return Companion_getInstance_1().y2(this, other);
  };
  protoOf(AbstractSet).hashCode = function () {
    return Companion_getInstance_1().x2(this);
  };
  function emptyList() {
    return EmptyList_getInstance();
  }
  function listOf(elements) {
    return elements.length > 0 ? asList(elements) : emptyList();
  }
  function get_indices_1(_this__u8e3s4) {
    return numberRangeToNumber(0, _this__u8e3s4.i() - 1 | 0);
  }
  function mutableListOf(elements) {
    return elements.length === 0 ? ArrayList_init_$Create$() : ArrayList_init_$Create$_1(new ArrayAsCollection(elements, true));
  }
  function optimizeReadOnlyList(_this__u8e3s4) {
    switch (_this__u8e3s4.i()) {
      case 0:
        return emptyList();
      case 1:
        return listOf_0(_this__u8e3s4.l(0));
      default:
        return _this__u8e3s4;
    }
  }
  function get_lastIndex_1(_this__u8e3s4) {
    return _this__u8e3s4.i() - 1 | 0;
  }
  function EmptyList() {
    EmptyList_instance = this;
    this.z2_1 = new Long(-1478467534, -1720727600);
  }
  protoOf(EmptyList).equals = function (other) {
    var tmp;
    if (!(other == null) ? isInterface(other, List) : false) {
      tmp = other.p();
    } else {
      tmp = false;
    }
    return tmp;
  };
  protoOf(EmptyList).hashCode = function () {
    return 1;
  };
  protoOf(EmptyList).toString = function () {
    return '[]';
  };
  protoOf(EmptyList).i = function () {
    return 0;
  };
  protoOf(EmptyList).p = function () {
    return true;
  };
  protoOf(EmptyList).a3 = function (element) {
    return false;
  };
  protoOf(EmptyList).g1 = function (element) {
    if (true)
      return false;
    var tmp;
    if (false) {} else {
      tmp = THROW_CCE();
    }
    return this.a3(tmp);
  };
  protoOf(EmptyList).b3 = function (elements) {
    return elements.p();
  };
  protoOf(EmptyList).h1 = function (elements) {
    return this.b3(elements);
  };
  protoOf(EmptyList).l = function (index) {
    throw IndexOutOfBoundsException_init_$Create$("Empty list doesn't contain element at index " + index + '.');
  };
  protoOf(EmptyList).c3 = function (element) {
    return -1;
  };
  protoOf(EmptyList).v1 = function (element) {
    if (true)
      return -1;
    var tmp;
    if (false) {} else {
      tmp = THROW_CCE();
    }
    return this.c3(tmp);
  };
  protoOf(EmptyList).f = function () {
    return EmptyIterator_getInstance();
  };
  protoOf(EmptyList).k = function (index) {
    if (!(index === 0))
      throw IndexOutOfBoundsException_init_$Create$('Index: ' + index);
    return EmptyIterator_getInstance();
  };
  protoOf(EmptyList).s = function (fromIndex, toIndex) {
    if (fromIndex === 0 ? toIndex === 0 : false)
      return this;
    throw IndexOutOfBoundsException_init_$Create$('fromIndex: ' + fromIndex + ', toIndex: ' + toIndex);
  };
  var EmptyList_instance;
  function EmptyList_getInstance() {
    if (EmptyList_instance == null)
      new EmptyList();
    return EmptyList_instance;
  }
  function ArrayAsCollection(values, isVarargs) {
    this.d3_1 = values;
    this.e3_1 = isVarargs;
  }
  protoOf(ArrayAsCollection).i = function () {
    return this.d3_1.length;
  };
  protoOf(ArrayAsCollection).p = function () {
    // Inline function 'kotlin.collections.isEmpty' call
    return this.d3_1.length === 0;
  };
  protoOf(ArrayAsCollection).f3 = function (element) {
    return contains(this.d3_1, element);
  };
  protoOf(ArrayAsCollection).g3 = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        // Inline function 'kotlin.collections.ArrayAsCollection.containsAll.<anonymous>' call
        if (!this.f3(element)) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  protoOf(ArrayAsCollection).h1 = function (elements) {
    return this.g3(elements);
  };
  protoOf(ArrayAsCollection).f = function () {
    return arrayIterator(this.d3_1);
  };
  function EmptyIterator() {
    EmptyIterator_instance = this;
  }
  protoOf(EmptyIterator).g = function () {
    return false;
  };
  protoOf(EmptyIterator).h = function () {
    throw NoSuchElementException_init_$Create$();
  };
  var EmptyIterator_instance;
  function EmptyIterator_getInstance() {
    if (EmptyIterator_instance == null)
      new EmptyIterator();
    return EmptyIterator_instance;
  }
  function arrayListOf(elements) {
    return elements.length === 0 ? ArrayList_init_$Create$() : ArrayList_init_$Create$_1(new ArrayAsCollection(elements, true));
  }
  function throwIndexOverflow() {
    throw ArithmeticException_init_$Create$('Index overflow has happened.');
  }
  function throwCountOverflow() {
    throw ArithmeticException_init_$Create$('Count overflow has happened.');
  }
  function asCollection(_this__u8e3s4) {
    return new ArrayAsCollection(_this__u8e3s4, false);
  }
  function IndexedValue(index, value) {
    this.h3_1 = index;
    this.i3_1 = value;
  }
  protoOf(IndexedValue).j3 = function () {
    return this.h3_1;
  };
  protoOf(IndexedValue).k3 = function () {
    return this.i3_1;
  };
  protoOf(IndexedValue).toString = function () {
    return 'IndexedValue(index=' + this.h3_1 + ', value=' + this.i3_1 + ')';
  };
  protoOf(IndexedValue).hashCode = function () {
    var result = this.h3_1;
    result = imul(result, 31) + (this.i3_1 == null ? 0 : hashCode(this.i3_1)) | 0;
    return result;
  };
  protoOf(IndexedValue).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof IndexedValue))
      return false;
    var tmp0_other_with_cast = other instanceof IndexedValue ? other : THROW_CCE();
    if (!(this.h3_1 === tmp0_other_with_cast.h3_1))
      return false;
    if (!equals_1(this.i3_1, tmp0_other_with_cast.i3_1))
      return false;
    return true;
  };
  function flatten(_this__u8e3s4) {
    var result = ArrayList_init_$Create$();
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      addAll(result, element);
    }
    return result;
  }
  function collectionSizeOrDefault(_this__u8e3s4, default_0) {
    var tmp;
    if (isInterface(_this__u8e3s4, Collection)) {
      tmp = _this__u8e3s4.i();
    } else {
      tmp = default_0;
    }
    return tmp;
  }
  function IndexingIterable(iteratorFactory) {
    this.l3_1 = iteratorFactory;
  }
  protoOf(IndexingIterable).f = function () {
    return new IndexingIterator(this.l3_1());
  };
  function IndexingIterator(iterator) {
    this.m3_1 = iterator;
    this.n3_1 = 0;
  }
  protoOf(IndexingIterator).g = function () {
    return this.m3_1.g();
  };
  protoOf(IndexingIterator).h = function () {
    var tmp1 = this.n3_1;
    this.n3_1 = tmp1 + 1 | 0;
    return new IndexedValue(checkIndexOverflow(tmp1), this.m3_1.h());
  };
  function getOrImplicitDefault(_this__u8e3s4, key) {
    if (isInterface(_this__u8e3s4, MapWithDefault))
      return _this__u8e3s4.o3(key);
    var tmp$ret$0;
    $l$block: {
      // Inline function 'kotlin.collections.getOrElseNullable' call
      var value = _this__u8e3s4.u2(key);
      if (value == null ? !_this__u8e3s4.o2(key) : false) {
        throw NoSuchElementException_init_$Create$_0('Key ' + key + ' is missing in the map.');
      } else {
        tmp$ret$0 = (value == null ? true : isObject(value)) ? value : THROW_CCE();
        break $l$block;
      }
    }
    return tmp$ret$0;
  }
  function MapWithDefault() {
  }
  function mapOf(pairs) {
    return pairs.length > 0 ? toMap_0(pairs, LinkedHashMap_init_$Create$_1(mapCapacity(pairs.length))) : emptyMap();
  }
  function emptyMap() {
    var tmp = EmptyMap_getInstance();
    return isInterface(tmp, Map) ? tmp : THROW_CCE();
  }
  function toMap(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, Collection)) {
      var tmp;
      switch (_this__u8e3s4.i()) {
        case 0:
          tmp = emptyMap();
          break;
        case 1:
          var tmp_0;
          if (isInterface(_this__u8e3s4, List)) {
            tmp_0 = _this__u8e3s4.l(0);
          } else {
            tmp_0 = _this__u8e3s4.f().h();
          }

          tmp = mapOf_0(tmp_0);
          break;
        default:
          tmp = toMap_1(_this__u8e3s4, LinkedHashMap_init_$Create$_1(mapCapacity(_this__u8e3s4.i())));
          break;
      }
      return tmp;
    }
    return optimizeReadOnlyMap(toMap_1(_this__u8e3s4, LinkedHashMap_init_$Create$()));
  }
  function toMutableMap(_this__u8e3s4) {
    return LinkedHashMap_init_$Create$_2(_this__u8e3s4);
  }
  function plus_0(_this__u8e3s4, map) {
    // Inline function 'kotlin.apply' call
    var tmp0_apply = LinkedHashMap_init_$Create$_2(_this__u8e3s4);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.plus.<anonymous>' call
    tmp0_apply.t3(map);
    return tmp0_apply;
  }
  function hashMapOf(pairs) {
    // Inline function 'kotlin.apply' call
    var tmp0_apply = HashMap_init_$Create$_1(mapCapacity(pairs.length));
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.hashMapOf.<anonymous>' call
    putAll(tmp0_apply, pairs);
    return tmp0_apply;
  }
  function toMap_0(_this__u8e3s4, destination) {
    // Inline function 'kotlin.apply' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.toMap.<anonymous>' call
    putAll(destination, _this__u8e3s4);
    return destination;
  }
  function EmptyMap() {
    EmptyMap_instance = this;
    this.u3_1 = new Long(-888910638, 1920087921);
  }
  protoOf(EmptyMap).equals = function (other) {
    var tmp;
    if (!(other == null) ? isInterface(other, Map) : false) {
      tmp = other.p();
    } else {
      tmp = false;
    }
    return tmp;
  };
  protoOf(EmptyMap).hashCode = function () {
    return 0;
  };
  protoOf(EmptyMap).toString = function () {
    return '{}';
  };
  protoOf(EmptyMap).i = function () {
    return 0;
  };
  protoOf(EmptyMap).p = function () {
    return true;
  };
  protoOf(EmptyMap).v3 = function (key) {
    return false;
  };
  protoOf(EmptyMap).o2 = function (key) {
    if (!(key == null ? true : isObject(key)))
      return false;
    return this.v3((key == null ? true : isObject(key)) ? key : THROW_CCE());
  };
  protoOf(EmptyMap).w3 = function (key) {
    return null;
  };
  protoOf(EmptyMap).u2 = function (key) {
    if (!(key == null ? true : isObject(key)))
      return null;
    return this.w3((key == null ? true : isObject(key)) ? key : THROW_CCE());
  };
  protoOf(EmptyMap).u = function () {
    return EmptySet_getInstance();
  };
  protoOf(EmptyMap).v2 = function () {
    return EmptySet_getInstance();
  };
  protoOf(EmptyMap).w2 = function () {
    return EmptyList_getInstance();
  };
  var EmptyMap_instance;
  function EmptyMap_getInstance() {
    if (EmptyMap_instance == null)
      new EmptyMap();
    return EmptyMap_instance;
  }
  function toMap_1(_this__u8e3s4, destination) {
    // Inline function 'kotlin.apply' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.toMap.<anonymous>' call
    putAll_0(destination, _this__u8e3s4);
    return destination;
  }
  function optimizeReadOnlyMap(_this__u8e3s4) {
    var tmp;
    switch (_this__u8e3s4.i()) {
      case 0:
        tmp = emptyMap();
        break;
      case 1:
        // Inline function 'kotlin.collections.toSingletonMapOrSelf' call

        tmp = _this__u8e3s4;
        break;
      default:
        tmp = _this__u8e3s4;
        break;
    }
    return tmp;
  }
  function putAll(_this__u8e3s4, pairs) {
    var inductionVariable = 0;
    var last = pairs.length;
    while (inductionVariable < last) {
      var tmp1_loop_parameter = pairs[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      var key = tmp1_loop_parameter.j3();
      var value = tmp1_loop_parameter.k3();
      _this__u8e3s4.z3(key, value);
    }
  }
  function putAll_0(_this__u8e3s4, pairs) {
    var tmp0_iterator = pairs.f();
    while (tmp0_iterator.g()) {
      var tmp1_loop_parameter = tmp0_iterator.h();
      var key = tmp1_loop_parameter.j3();
      var value = tmp1_loop_parameter.k3();
      _this__u8e3s4.z3(key, value);
    }
  }
  function getValue(_this__u8e3s4, key) {
    return getOrImplicitDefault(_this__u8e3s4, key);
  }
  function addAll(_this__u8e3s4, elements) {
    if (isInterface(elements, Collection))
      return _this__u8e3s4.j(elements);
    else {
      var result = false;
      var tmp1_iterator = elements.f();
      while (tmp1_iterator.g()) {
        var item = tmp1_iterator.h();
        if (_this__u8e3s4.a(item))
          result = true;
      }
      return result;
    }
  }
  function IntIterator() {
  }
  protoOf(IntIterator).h = function () {
    return this.a4();
  };
  function TransformingSequence$iterator$1(this$0) {
    this.c4_1 = this$0;
    this.b4_1 = this$0.d4_1.f();
  }
  protoOf(TransformingSequence$iterator$1).h = function () {
    return this.c4_1.e4_1(this.b4_1.h());
  };
  protoOf(TransformingSequence$iterator$1).g = function () {
    return this.b4_1.g();
  };
  function TransformingSequence(sequence, transformer) {
    this.d4_1 = sequence;
    this.e4_1 = transformer;
  }
  protoOf(TransformingSequence).f = function () {
    return new TransformingSequence$iterator$1(this);
  };
  function setOf(elements) {
    return elements.length > 0 ? toSet(elements) : emptySet();
  }
  function emptySet() {
    return EmptySet_getInstance();
  }
  function optimizeReadOnlySet(_this__u8e3s4) {
    switch (_this__u8e3s4.i()) {
      case 0:
        return emptySet();
      case 1:
        return setOf_0(_this__u8e3s4.f().h());
      default:
        return _this__u8e3s4;
    }
  }
  function hashSetOf(elements) {
    return toCollection(elements, HashSet_init_$Create$_1(mapCapacity(elements.length)));
  }
  function EmptySet() {
    EmptySet_instance = this;
    this.f4_1 = new Long(1993859828, 793161749);
  }
  protoOf(EmptySet).equals = function (other) {
    var tmp;
    if (!(other == null) ? isInterface(other, Set) : false) {
      tmp = other.p();
    } else {
      tmp = false;
    }
    return tmp;
  };
  protoOf(EmptySet).hashCode = function () {
    return 0;
  };
  protoOf(EmptySet).toString = function () {
    return '[]';
  };
  protoOf(EmptySet).i = function () {
    return 0;
  };
  protoOf(EmptySet).p = function () {
    return true;
  };
  protoOf(EmptySet).a3 = function (element) {
    return false;
  };
  protoOf(EmptySet).g1 = function (element) {
    if (true)
      return false;
    var tmp;
    if (false) {} else {
      tmp = THROW_CCE();
    }
    return this.a3(tmp);
  };
  protoOf(EmptySet).b3 = function (elements) {
    return elements.p();
  };
  protoOf(EmptySet).h1 = function (elements) {
    return this.b3(elements);
  };
  protoOf(EmptySet).f = function () {
    return EmptyIterator_getInstance();
  };
  var EmptySet_instance;
  function EmptySet_getInstance() {
    if (EmptySet_instance == null)
      new EmptySet();
    return EmptySet_instance;
  }
  function naturalOrder() {
    var tmp = NaturalOrderComparator_getInstance();
    return isInterface(tmp, Comparator) ? tmp : THROW_CCE();
  }
  function NaturalOrderComparator() {
    NaturalOrderComparator_instance = this;
  }
  protoOf(NaturalOrderComparator).g4 = function (a, b) {
    return compareTo_0(a, b);
  };
  protoOf(NaturalOrderComparator).compare = function (a, b) {
    var tmp = (!(a == null) ? isComparable(a) : false) ? a : THROW_CCE();
    return this.g4(tmp, (!(b == null) ? isComparable(b) : false) ? b : THROW_CCE());
  };
  var NaturalOrderComparator_instance;
  function NaturalOrderComparator_getInstance() {
    if (NaturalOrderComparator_instance == null)
      new NaturalOrderComparator();
    return NaturalOrderComparator_instance;
  }
  function compareValues(a, b) {
    if (a === b)
      return 0;
    if (a == null)
      return -1;
    if (b == null)
      return 1;
    return compareTo_0((!(a == null) ? isComparable(a) : false) ? a : THROW_CCE(), b);
  }
  function getProgressionLastElement(start, end, step) {
    var tmp;
    if (step > 0) {
      tmp = start >= end ? end : end - differenceModulo(end, start, step) | 0;
    } else if (step < 0) {
      tmp = start <= end ? end : end + differenceModulo(start, end, -step | 0) | 0;
    } else {
      throw IllegalArgumentException_init_$Create$_0('Step is zero.');
    }
    return tmp;
  }
  function differenceModulo(a, b, c) {
    return mod(mod(a, c) - mod(b, c) | 0, c);
  }
  function mod(a, b) {
    var mod = a % b | 0;
    return mod >= 0 ? mod : mod + b | 0;
  }
  function Companion_2() {
    Companion_instance_2 = this;
    this.x_1 = new IntRange(1, 0);
  }
  var Companion_instance_2;
  function Companion_getInstance_2() {
    if (Companion_instance_2 == null)
      new Companion_2();
    return Companion_instance_2;
  }
  function IntRange(start, endInclusive) {
    Companion_getInstance_2();
    IntProgression.call(this, start, endInclusive, 1);
  }
  protoOf(IntRange).q = function () {
    return this.z_1;
  };
  protoOf(IntRange).r = function () {
    return this.a1_1;
  };
  protoOf(IntRange).p = function () {
    return this.z_1 > this.a1_1;
  };
  protoOf(IntRange).equals = function (other) {
    var tmp;
    if (other instanceof IntRange) {
      tmp = (this.p() ? other.p() : false) ? true : this.z_1 === other.z_1 ? this.a1_1 === other.a1_1 : false;
    } else {
      tmp = false;
    }
    return tmp;
  };
  protoOf(IntRange).hashCode = function () {
    return this.p() ? -1 : imul(31, this.z_1) + this.a1_1 | 0;
  };
  protoOf(IntRange).toString = function () {
    return '' + this.z_1 + '..' + this.a1_1;
  };
  function IntProgressionIterator(first, last, step) {
    IntIterator.call(this);
    this.h4_1 = step;
    this.i4_1 = last;
    this.j4_1 = this.h4_1 > 0 ? first <= last : first >= last;
    this.k4_1 = this.j4_1 ? first : this.i4_1;
  }
  protoOf(IntProgressionIterator).g = function () {
    return this.j4_1;
  };
  protoOf(IntProgressionIterator).a4 = function () {
    var value = this.k4_1;
    if (value === this.i4_1) {
      if (!this.j4_1)
        throw NoSuchElementException_init_$Create$();
      this.j4_1 = false;
    } else {
      this.k4_1 = this.k4_1 + this.h4_1 | 0;
    }
    return value;
  };
  function Companion_3() {
    Companion_instance_3 = this;
  }
  protoOf(Companion_3).y = function (rangeStart, rangeEnd, step) {
    return new IntProgression(rangeStart, rangeEnd, step);
  };
  var Companion_instance_3;
  function Companion_getInstance_3() {
    if (Companion_instance_3 == null)
      new Companion_3();
    return Companion_instance_3;
  }
  function IntProgression(start, endInclusive, step) {
    Companion_getInstance_3();
    if (step === 0)
      throw IllegalArgumentException_init_$Create$_0('Step must be non-zero.');
    if (step === IntCompanionObject_getInstance().MIN_VALUE)
      throw IllegalArgumentException_init_$Create$_0('Step must be greater than Int.MIN_VALUE to avoid overflow on negation.');
    this.z_1 = start;
    this.a1_1 = getProgressionLastElement(start, endInclusive, step);
    this.b1_1 = step;
  }
  protoOf(IntProgression).f = function () {
    return new IntProgressionIterator(this.z_1, this.a1_1, this.b1_1);
  };
  protoOf(IntProgression).p = function () {
    return this.b1_1 > 0 ? this.z_1 > this.a1_1 : this.z_1 < this.a1_1;
  };
  protoOf(IntProgression).equals = function (other) {
    var tmp;
    if (other instanceof IntProgression) {
      tmp = (this.p() ? other.p() : false) ? true : (this.z_1 === other.z_1 ? this.a1_1 === other.a1_1 : false) ? this.b1_1 === other.b1_1 : false;
    } else {
      tmp = false;
    }
    return tmp;
  };
  protoOf(IntProgression).hashCode = function () {
    return this.p() ? -1 : imul(31, imul(31, this.z_1) + this.a1_1 | 0) + this.b1_1 | 0;
  };
  protoOf(IntProgression).toString = function () {
    return this.b1_1 > 0 ? '' + this.z_1 + '..' + this.a1_1 + ' step ' + this.b1_1 : '' + this.z_1 + ' downTo ' + this.a1_1 + ' step ' + (-this.b1_1 | 0);
  };
  function checkStepIsPositive(isPositive, step) {
    if (!isPositive)
      throw IllegalArgumentException_init_$Create$_0('Step must be positive, was: ' + toString_3(step) + '.');
  }
  function Companion_4() {
    Companion_instance_4 = this;
    this.l4_1 = new KTypeProjection(null, null);
  }
  protoOf(Companion_4).m4 = function (type) {
    return new KTypeProjection(KVariance_INVARIANT_getInstance(), type);
  };
  var Companion_instance_4;
  function Companion_getInstance_4() {
    if (Companion_instance_4 == null)
      new Companion_4();
    return Companion_instance_4;
  }
  function KTypeProjection(variance, type) {
    Companion_getInstance_4();
    this.n4_1 = variance;
    this.o4_1 = type;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(this.n4_1 == null === (this.o4_1 == null))) {
      // Inline function 'kotlin.reflect.KTypeProjection.<anonymous>' call
      var message = this.n4_1 == null ? 'Star projection must have no type specified.' : 'The projection variance ' + this.n4_1 + ' requires type to be specified.';
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
  }
  protoOf(KTypeProjection).toString = function () {
    var tmp0_subject = this.n4_1;
    var tmp;
    switch (tmp0_subject == null ? -1 : tmp0_subject.m1_1) {
      case -1:
        tmp = '*';
        break;
      case 0:
        tmp = toString_2(this.o4_1);
        break;
      case 1:
        tmp = 'in ' + this.o4_1;
        break;
      case 2:
        tmp = 'out ' + this.o4_1;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  protoOf(KTypeProjection).hashCode = function () {
    var result = this.n4_1 == null ? 0 : this.n4_1.hashCode();
    result = imul(result, 31) + (this.o4_1 == null ? 0 : hashCode(this.o4_1)) | 0;
    return result;
  };
  protoOf(KTypeProjection).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof KTypeProjection))
      return false;
    var tmp0_other_with_cast = other instanceof KTypeProjection ? other : THROW_CCE();
    if (!equals_1(this.n4_1, tmp0_other_with_cast.n4_1))
      return false;
    if (!equals_1(this.o4_1, tmp0_other_with_cast.o4_1))
      return false;
    return true;
  };
  var KVariance_INVARIANT_instance;
  var KVariance_IN_instance;
  var KVariance_OUT_instance;
  var KVariance_entriesInitialized;
  function KVariance_initEntries() {
    if (KVariance_entriesInitialized)
      return Unit_getInstance();
    KVariance_entriesInitialized = true;
    KVariance_INVARIANT_instance = new KVariance('INVARIANT', 0);
    KVariance_IN_instance = new KVariance('IN', 1);
    KVariance_OUT_instance = new KVariance('OUT', 2);
  }
  function KVariance(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function KVariance_INVARIANT_getInstance() {
    KVariance_initEntries();
    return KVariance_INVARIANT_instance;
  }
  function appendElement(_this__u8e3s4, element, transform) {
    if (!(transform == null)) {
      _this__u8e3s4.b(transform(element));
    } else {
      if (element == null ? true : isCharSequence(element)) {
        _this__u8e3s4.b(element);
      } else {
        if (element instanceof Char) {
          _this__u8e3s4.q4(element.p4_1);
        } else {
          _this__u8e3s4.b(toString_2(element));
        }
      }
    }
  }
  function equals(_this__u8e3s4, other, ignoreCase) {
    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
    if (_this__u8e3s4 === other)
      return true;
    if (!ignoreCase)
      return false;
    var thisUpper = uppercaseChar(_this__u8e3s4);
    var otherUpper = uppercaseChar(other);
    var tmp;
    if (thisUpper === otherUpper) {
      tmp = true;
    } else {
      var tmp$ret$3;
      // Inline function 'kotlin.text.lowercaseChar' call
      var tmp$ret$2;
      // Inline function 'kotlin.text.lowercase' call
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$2 = toString_1(thisUpper).toLowerCase();
      tmp$ret$3 = charSequenceGet(tmp$ret$2, 0);
      var tmp_0 = new Char(tmp$ret$3);
      var tmp$ret$7;
      // Inline function 'kotlin.text.lowercaseChar' call
      var tmp$ret$6;
      // Inline function 'kotlin.text.lowercase' call
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$6 = toString_1(otherUpper).toLowerCase();
      tmp$ret$7 = charSequenceGet(tmp$ret$6, 0);
      tmp = equals_1(tmp_0, new Char(tmp$ret$7));
    }
    return tmp;
  }
  function prependIndent(_this__u8e3s4, indent) {
    indent = indent === VOID ? '    ' : indent;
    var tmp = lineSequence(_this__u8e3s4);
    return joinToString_1(map(tmp, prependIndent$lambda(indent)), '\n');
  }
  function trimIndent(_this__u8e3s4) {
    return replaceIndent(_this__u8e3s4, '');
  }
  function replaceIndent(_this__u8e3s4, newIndent) {
    newIndent = newIndent === VOID ? '' : newIndent;
    var lines_0 = lines(_this__u8e3s4);
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.filter' call
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo = ArrayList_init_$Create$();
    var tmp0_iterator = lines_0.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'kotlin.text.isNotBlank' call
      if (!isBlank(element)) {
        tmp0_filterTo.a(element);
      }
    }
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_filterTo, 10));
    var tmp0_iterator_0 = tmp0_filterTo.f();
    while (tmp0_iterator_0.g()) {
      var item = tmp0_iterator_0.h();
      var tmp$ret$3;
      tmp$ret$3 = indentWidth(item);
      tmp0_mapTo.a(tmp$ret$3);
    }
    var tmp0_elvis_lhs = minOrNull(tmp0_mapTo);
    var minCommonIndent = tmp0_elvis_lhs == null ? 0 : tmp0_elvis_lhs;
    // Inline function 'kotlin.text.reindent' call
    var tmp1_reindent = _this__u8e3s4.length + imul(newIndent.length, lines_0.i()) | 0;
    var tmp2_reindent = getIndentFunction(newIndent);
    var lastIndex = get_lastIndex_1(lines_0);
    // Inline function 'kotlin.collections.mapIndexedNotNull' call
    // Inline function 'kotlin.collections.mapIndexedNotNullTo' call
    var tmp0_mapIndexedNotNullTo = ArrayList_init_$Create$();
    // Inline function 'kotlin.collections.forEachIndexed' call
    var index = 0;
    var tmp0_iterator_1 = lines_0.f();
    while (tmp0_iterator_1.g()) {
      var item_0 = tmp0_iterator_1.h();
      // Inline function 'kotlin.collections.mapIndexedNotNullTo.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      var tmp0_anonymous = checkIndexOverflow(tmp1);
      // Inline function 'kotlin.text.reindent.<anonymous>' call
      var tmp;
      if ((tmp0_anonymous === 0 ? true : tmp0_anonymous === lastIndex) ? isBlank(item_0) : false) {
        tmp = null;
      } else {
        // Inline function 'kotlin.text.replaceIndent.<anonymous>' call
        var tmp0_safe_receiver = drop_0(item_0, minCommonIndent);
        var tmp_0;
        if (tmp0_safe_receiver == null) {
          tmp_0 = null;
        } else {
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          tmp_0 = tmp2_reindent(tmp0_safe_receiver);
        }
        var tmp1_elvis_lhs = tmp_0;
        tmp = tmp1_elvis_lhs == null ? item_0 : tmp1_elvis_lhs;
      }
      var tmp0_safe_receiver_0 = tmp;
      if (tmp0_safe_receiver_0 == null)
        null;
      else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        tmp0_mapIndexedNotNullTo.a(tmp0_safe_receiver_0);
      }
    }
    return joinTo_0(tmp0_mapIndexedNotNullTo, StringBuilder_init_$Create$(tmp1_reindent), '\n').toString();
  }
  function indentWidth(_this__u8e3s4) {
    // Inline function 'kotlin.let' call
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.text.indexOfFirst' call
      var inductionVariable = 0;
      var last = charSequenceLength(_this__u8e3s4) - 1 | 0;
      if (inductionVariable <= last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'kotlin.text.indentWidth.<anonymous>' call
          var tmp0_anonymous = charSequenceGet(_this__u8e3s4, index);
          if (!isWhitespace(tmp0_anonymous)) {
            tmp$ret$1 = index;
            break $l$block;
          }
        }
         while (inductionVariable <= last);
      tmp$ret$1 = -1;
    }
    var tmp1_let = tmp$ret$1;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.text.indentWidth.<anonymous>' call
    return tmp1_let === -1 ? _this__u8e3s4.length : tmp1_let;
  }
  function getIndentFunction(indent) {
    var tmp;
    // Inline function 'kotlin.text.isEmpty' call
    if (charSequenceLength(indent) === 0) {
      tmp = getIndentFunction$lambda;
    } else {
      tmp = getIndentFunction$lambda_0(indent);
    }
    return tmp;
  }
  function prependIndent$lambda($indent) {
    return function (it) {
      var tmp;
      if (isBlank(it)) {
        tmp = it.length < $indent.length ? $indent : it;
      } else {
        tmp = $indent + it;
      }
      return tmp;
    };
  }
  function getIndentFunction$lambda(line) {
    return line;
  }
  function getIndentFunction$lambda_0($indent) {
    return function (line) {
      return $indent + line;
    };
  }
  function toLongOrNull(_this__u8e3s4) {
    return toLongOrNull_0(_this__u8e3s4, 10);
  }
  function toIntOrNull(_this__u8e3s4) {
    return toIntOrNull_0(_this__u8e3s4, 10);
  }
  function toLongOrNull_0(_this__u8e3s4, radix) {
    checkRadix(radix);
    var length = _this__u8e3s4.length;
    if (length === 0)
      return null;
    var start;
    var isNegative;
    var limit;
    var firstChar = charSequenceGet(_this__u8e3s4, 0);
    if (Char__compareTo_impl_ypi4mb(firstChar, _Char___init__impl__6a9atx(48)) < 0) {
      if (length === 1)
        return null;
      start = 1;
      if (firstChar === _Char___init__impl__6a9atx(45)) {
        isNegative = true;
        Companion_getInstance_16();
        limit = new Long(0, -2147483648);
      } else if (firstChar === _Char___init__impl__6a9atx(43)) {
        isNegative = false;
        Companion_getInstance_16();
        limit = (new Long(-1, 2147483647)).t4();
      } else
        return null;
    } else {
      start = 0;
      isNegative = false;
      Companion_getInstance_16();
      limit = (new Long(-1, 2147483647)).t4();
    }
    // Inline function 'kotlin.Long.div' call
    Companion_getInstance_16();
    var limitForMaxRadix = (new Long(-1, 2147483647)).t4().u4(new Long(36, 0));
    var limitBeforeMul = limitForMaxRadix;
    var result = new Long(0, 0);
    var inductionVariable = start;
    if (inductionVariable < length)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var digit = digitOf(charSequenceGet(_this__u8e3s4, i), radix);
        if (digit < 0)
          return null;
        if (result.v4(limitBeforeMul) < 0) {
          if (limitBeforeMul.equals(limitForMaxRadix)) {
            // Inline function 'kotlin.Long.div' call
            limitBeforeMul = limit.u4(toLong_1(radix));
            if (result.v4(limitBeforeMul) < 0) {
              return null;
            }
          } else {
            return null;
          }
        }
        // Inline function 'kotlin.Long.times' call
        result = result.w4(toLong_1(radix));
        var tmp = result;
        var tmp$ret$3;
        // Inline function 'kotlin.Long.plus' call
        tmp$ret$3 = limit.x4(toLong_1(digit));
        if (tmp.v4(tmp$ret$3) < 0)
          return null;
        // Inline function 'kotlin.Long.minus' call
        result = result.y4(toLong_1(digit));
      }
       while (inductionVariable < length);
    return isNegative ? result : result.t4();
  }
  function toIntOrNull_0(_this__u8e3s4, radix) {
    checkRadix(radix);
    var length = _this__u8e3s4.length;
    if (length === 0)
      return null;
    var start;
    var isNegative;
    var limit;
    var firstChar = charSequenceGet(_this__u8e3s4, 0);
    if (Char__compareTo_impl_ypi4mb(firstChar, _Char___init__impl__6a9atx(48)) < 0) {
      if (length === 1)
        return null;
      start = 1;
      if (firstChar === _Char___init__impl__6a9atx(45)) {
        isNegative = true;
        limit = IntCompanionObject_getInstance().MIN_VALUE;
      } else if (firstChar === _Char___init__impl__6a9atx(43)) {
        isNegative = false;
        limit = -IntCompanionObject_getInstance().MAX_VALUE | 0;
      } else
        return null;
    } else {
      start = 0;
      isNegative = false;
      limit = -IntCompanionObject_getInstance().MAX_VALUE | 0;
    }
    var limitForMaxRadix = (-IntCompanionObject_getInstance().MAX_VALUE | 0) / 36 | 0;
    var limitBeforeMul = limitForMaxRadix;
    var result = 0;
    var inductionVariable = start;
    if (inductionVariable < length)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var digit = digitOf(charSequenceGet(_this__u8e3s4, i), radix);
        if (digit < 0)
          return null;
        if (result < limitBeforeMul) {
          if (limitBeforeMul === limitForMaxRadix) {
            limitBeforeMul = limit / radix | 0;
            if (result < limitBeforeMul) {
              return null;
            }
          } else {
            return null;
          }
        }
        result = imul(result, radix);
        if (result < (limit + digit | 0))
          return null;
        result = result - digit | 0;
      }
       while (inductionVariable < length);
    return isNegative ? result : -result | 0;
  }
  function numberFormatError(input) {
    throw NumberFormatException_init_$Create$("Invalid number format: '" + input + "'");
  }
  function toByteOrNull(_this__u8e3s4) {
    return toByteOrNull_0(_this__u8e3s4, 10);
  }
  function toShortOrNull(_this__u8e3s4) {
    return toShortOrNull_0(_this__u8e3s4, 10);
  }
  function toByteOrNull_0(_this__u8e3s4, radix) {
    var tmp0_elvis_lhs = toIntOrNull_0(_this__u8e3s4, radix);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var int = tmp;
    if (int < ByteCompanionObject_getInstance().MIN_VALUE ? true : int > ByteCompanionObject_getInstance().MAX_VALUE)
      return null;
    return toByte_0(int);
  }
  function toShortOrNull_0(_this__u8e3s4, radix) {
    var tmp0_elvis_lhs = toIntOrNull_0(_this__u8e3s4, radix);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var int = tmp;
    if (int < ShortCompanionObject_getInstance().MIN_VALUE ? true : int > ShortCompanionObject_getInstance().MAX_VALUE)
      return null;
    return toShort_0(int);
  }
  function get_lastIndex_2(_this__u8e3s4) {
    return charSequenceLength(_this__u8e3s4) - 1 | 0;
  }
  function contains_2(_this__u8e3s4, char, ignoreCase) {
    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
    return indexOf_2(_this__u8e3s4, char, VOID, ignoreCase) >= 0;
  }
  function split(_this__u8e3s4, delimiters, ignoreCase, limit) {
    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
    limit = limit === VOID ? 0 : limit;
    if (delimiters.length === 1) {
      return split_0(_this__u8e3s4, toString_1(delimiters[0]), ignoreCase, limit);
    }
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = asIterable(rangesDelimitedBy(_this__u8e3s4, delimiters, VOID, ignoreCase, limit));
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'kotlin.text.split.<anonymous>' call
      tmp$ret$0 = substring_0(_this__u8e3s4, item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    return tmp0_mapTo;
  }
  function substring(_this__u8e3s4, range) {
    // Inline function 'kotlin.text.substring' call
    var tmp0_substring = range.q();
    var tmp1_substring = range.r() + 1 | 0;
    // Inline function 'kotlin.js.asDynamic' call
    return _this__u8e3s4.substring(tmp0_substring, tmp1_substring);
  }
  function indexOf_2(_this__u8e3s4, char, startIndex, ignoreCase) {
    startIndex = startIndex === VOID ? 0 : startIndex;
    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
    var tmp;
    var tmp_0;
    if (ignoreCase) {
      tmp_0 = true;
    } else {
      tmp_0 = !(typeof _this__u8e3s4 === 'string');
    }
    if (tmp_0) {
      var tmp$ret$0;
      // Inline function 'kotlin.charArrayOf' call
      tmp$ret$0 = charArrayOf([char]);
      tmp = indexOfAny(_this__u8e3s4, tmp$ret$0, startIndex, ignoreCase);
    } else {
      // Inline function 'kotlin.text.nativeIndexOf' call
      // Inline function 'kotlin.text.nativeIndexOf' call
      var tmp0_nativeIndexOf = toString_1(char);
      // Inline function 'kotlin.js.asDynamic' call
      tmp = _this__u8e3s4.indexOf(tmp0_nativeIndexOf, startIndex);
    }
    return tmp;
  }
  function split_0(_this__u8e3s4, delimiter, ignoreCase, limit) {
    requireNonNegativeLimit(limit);
    var currentOffset = 0;
    var nextIndex = indexOf_3(_this__u8e3s4, delimiter, currentOffset, ignoreCase);
    if (nextIndex === -1 ? true : limit === 1) {
      return listOf_0(toString_3(_this__u8e3s4));
    }
    var isLimited = limit > 0;
    var result = ArrayList_init_$Create$_0(isLimited ? coerceAtMost(limit, 10) : 10);
    $l$loop: do {
      var tmp$ret$0;
      // Inline function 'kotlin.text.substring' call
      var tmp0_substring = currentOffset;
      var tmp1_substring = nextIndex;
      tmp$ret$0 = toString_3(charSequenceSubSequence(_this__u8e3s4, tmp0_substring, tmp1_substring));
      result.a(tmp$ret$0);
      currentOffset = nextIndex + delimiter.length | 0;
      if (isLimited ? result.i() === (limit - 1 | 0) : false)
        break $l$loop;
      nextIndex = indexOf_3(_this__u8e3s4, delimiter, currentOffset, ignoreCase);
    }
     while (!(nextIndex === -1));
    var tmp$ret$1;
    // Inline function 'kotlin.text.substring' call
    var tmp2_substring = currentOffset;
    var tmp3_substring = charSequenceLength(_this__u8e3s4);
    tmp$ret$1 = toString_3(charSequenceSubSequence(_this__u8e3s4, tmp2_substring, tmp3_substring));
    result.a(tmp$ret$1);
    return result;
  }
  function substring_0(_this__u8e3s4, range) {
    return toString_3(charSequenceSubSequence(_this__u8e3s4, range.q(), range.r() + 1 | 0));
  }
  function rangesDelimitedBy(_this__u8e3s4, delimiters, startIndex, ignoreCase, limit) {
    startIndex = startIndex === VOID ? 0 : startIndex;
    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
    limit = limit === VOID ? 0 : limit;
    requireNonNegativeLimit(limit);
    return new DelimitedRangesSequence(_this__u8e3s4, startIndex, limit, rangesDelimitedBy$lambda(delimiters, ignoreCase));
  }
  function indexOfAny(_this__u8e3s4, chars, startIndex, ignoreCase) {
    startIndex = startIndex === VOID ? 0 : startIndex;
    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
    var tmp;
    if (!ignoreCase ? chars.length === 1 : false) {
      tmp = typeof _this__u8e3s4 === 'string';
    } else {
      tmp = false;
    }
    if (tmp) {
      var char = single(chars);
      // Inline function 'kotlin.text.nativeIndexOf' call
      // Inline function 'kotlin.text.nativeIndexOf' call
      var tmp0_nativeIndexOf = toString_1(char);
      // Inline function 'kotlin.js.asDynamic' call
      return _this__u8e3s4.indexOf(tmp0_nativeIndexOf, startIndex);
    }
    var inductionVariable = coerceAtLeast(startIndex, 0);
    var last = get_lastIndex_2(_this__u8e3s4);
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var charAtIndex = charSequenceGet(_this__u8e3s4, index);
        var tmp$ret$4;
        $l$block: {
          // Inline function 'kotlin.collections.any' call
          var inductionVariable_0 = 0;
          var last_0 = chars.length;
          while (inductionVariable_0 < last_0) {
            var element = chars[inductionVariable_0];
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            // Inline function 'kotlin.text.indexOfAny.<anonymous>' call
            if (equals(element, charAtIndex, ignoreCase)) {
              tmp$ret$4 = true;
              break $l$block;
            }
          }
          tmp$ret$4 = false;
        }
        if (tmp$ret$4)
          return index;
      }
       while (!(index === last));
    return -1;
  }
  function requireNonNegativeLimit(limit) {
    // Inline function 'kotlin.contracts.contract' call
    var tmp;
    if (!(limit >= 0)) {
      // Inline function 'kotlin.text.requireNonNegativeLimit.<anonymous>' call
      var message = 'Limit must be non-negative, but was ' + limit;
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    return tmp;
  }
  function indexOf_3(_this__u8e3s4, string, startIndex, ignoreCase) {
    startIndex = startIndex === VOID ? 0 : startIndex;
    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
    var tmp;
    var tmp_0;
    if (ignoreCase) {
      tmp_0 = true;
    } else {
      tmp_0 = !(typeof _this__u8e3s4 === 'string');
    }
    if (tmp_0) {
      tmp = indexOf_4(_this__u8e3s4, string, startIndex, charSequenceLength(_this__u8e3s4), ignoreCase);
    } else {
      // Inline function 'kotlin.text.nativeIndexOf' call
      // Inline function 'kotlin.js.asDynamic' call
      tmp = _this__u8e3s4.indexOf(string, startIndex);
    }
    return tmp;
  }
  function calcNext($this) {
    if ($this.b5_1 < 0) {
      $this.z4_1 = 0;
      $this.c5_1 = null;
    } else {
      var tmp;
      var tmp_0;
      if ($this.e5_1.h5_1 > 0) {
        $this.d5_1 = $this.d5_1 + 1 | 0;
        tmp_0 = $this.d5_1 >= $this.e5_1.h5_1;
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        tmp = true;
      } else {
        tmp = $this.b5_1 > charSequenceLength($this.e5_1.f5_1);
      }
      if (tmp) {
        $this.c5_1 = numberRangeToNumber($this.a5_1, get_lastIndex_2($this.e5_1.f5_1));
        $this.b5_1 = -1;
      } else {
        var match = $this.e5_1.i5_1($this.e5_1.f5_1, $this.b5_1);
        if (match == null) {
          $this.c5_1 = numberRangeToNumber($this.a5_1, get_lastIndex_2($this.e5_1.f5_1));
          $this.b5_1 = -1;
        } else {
          var index = match.j3();
          var length = match.k3();
          $this.c5_1 = until($this.a5_1, index);
          $this.a5_1 = index + length | 0;
          $this.b5_1 = $this.a5_1 + (length === 0 ? 1 : 0) | 0;
        }
      }
      $this.z4_1 = 1;
    }
  }
  function DelimitedRangesSequence$iterator$1(this$0) {
    this.e5_1 = this$0;
    this.z4_1 = -1;
    this.a5_1 = coerceIn(this$0.g5_1, 0, charSequenceLength(this$0.f5_1));
    this.b5_1 = this.a5_1;
    this.c5_1 = null;
    this.d5_1 = 0;
  }
  protoOf(DelimitedRangesSequence$iterator$1).h = function () {
    if (this.z4_1 === -1) {
      calcNext(this);
    }
    if (this.z4_1 === 0)
      throw NoSuchElementException_init_$Create$();
    var tmp = this.c5_1;
    var result = tmp instanceof IntRange ? tmp : THROW_CCE();
    this.c5_1 = null;
    this.z4_1 = -1;
    return result;
  };
  protoOf(DelimitedRangesSequence$iterator$1).g = function () {
    if (this.z4_1 === -1) {
      calcNext(this);
    }
    return this.z4_1 === 1;
  };
  function DelimitedRangesSequence(input, startIndex, limit, getNextMatch) {
    this.f5_1 = input;
    this.g5_1 = startIndex;
    this.h5_1 = limit;
    this.i5_1 = getNextMatch;
  }
  protoOf(DelimitedRangesSequence).f = function () {
    return new DelimitedRangesSequence$iterator$1(this);
  };
  function indexOf_4(_this__u8e3s4, other, startIndex, endIndex, ignoreCase, last) {
    last = last === VOID ? false : last;
    var indices = !last ? numberRangeToNumber(coerceAtLeast(startIndex, 0), coerceAtMost(endIndex, charSequenceLength(_this__u8e3s4))) : downTo(coerceAtMost(startIndex, get_lastIndex_2(_this__u8e3s4)), coerceAtLeast(endIndex, 0));
    var tmp;
    if (typeof _this__u8e3s4 === 'string') {
      tmp = typeof other === 'string';
    } else {
      tmp = false;
    }
    if (tmp) {
      var inductionVariable = indices.z_1;
      var last_0 = indices.a1_1;
      var step = indices.b1_1;
      if ((step > 0 ? inductionVariable <= last_0 : false) ? true : step < 0 ? last_0 <= inductionVariable : false)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + step | 0;
          if (regionMatches(other, 0, _this__u8e3s4, index, charSequenceLength(other), ignoreCase))
            return index;
        }
         while (!(index === last_0));
    } else {
      var inductionVariable_0 = indices.z_1;
      var last_1 = indices.a1_1;
      var step_0 = indices.b1_1;
      if ((step_0 > 0 ? inductionVariable_0 <= last_1 : false) ? true : step_0 < 0 ? last_1 <= inductionVariable_0 : false)
        do {
          var index_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + step_0 | 0;
          if (regionMatchesImpl(other, 0, _this__u8e3s4, index_0, charSequenceLength(other), ignoreCase))
            return index_0;
        }
         while (!(index_0 === last_1));
    }
    return -1;
  }
  function regionMatchesImpl(_this__u8e3s4, thisOffset, other, otherOffset, length, ignoreCase) {
    if (((otherOffset < 0 ? true : thisOffset < 0) ? true : thisOffset > (charSequenceLength(_this__u8e3s4) - length | 0)) ? true : otherOffset > (charSequenceLength(other) - length | 0)) {
      return false;
    }
    var inductionVariable = 0;
    if (inductionVariable < length)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!equals(charSequenceGet(_this__u8e3s4, thisOffset + index | 0), charSequenceGet(other, otherOffset + index | 0), ignoreCase))
          return false;
      }
       while (inductionVariable < length);
    return true;
  }
  function get_indices_2(_this__u8e3s4) {
    return numberRangeToNumber(0, charSequenceLength(_this__u8e3s4) - 1 | 0);
  }
  function lineSequence(_this__u8e3s4) {
    return splitToSequence(_this__u8e3s4, ['\r\n', '\n', '\r']);
  }
  function lines(_this__u8e3s4) {
    return toList_3(lineSequence(_this__u8e3s4));
  }
  function splitToSequence(_this__u8e3s4, delimiters, ignoreCase, limit) {
    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
    limit = limit === VOID ? 0 : limit;
    var tmp = rangesDelimitedBy_0(_this__u8e3s4, delimiters, VOID, ignoreCase, limit);
    return map(tmp, splitToSequence$lambda(_this__u8e3s4));
  }
  function rangesDelimitedBy_0(_this__u8e3s4, delimiters, startIndex, ignoreCase, limit) {
    startIndex = startIndex === VOID ? 0 : startIndex;
    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
    limit = limit === VOID ? 0 : limit;
    requireNonNegativeLimit(limit);
    var delimitersList = asList(delimiters);
    return new DelimitedRangesSequence(_this__u8e3s4, startIndex, limit, rangesDelimitedBy$lambda_0(delimitersList, ignoreCase));
  }
  function findAnyOf(_this__u8e3s4, strings, startIndex, ignoreCase, last) {
    if (!ignoreCase ? strings.i() === 1 : false) {
      var string = single_0(strings);
      var index = !last ? indexOf_3(_this__u8e3s4, string, startIndex) : lastIndexOf(_this__u8e3s4, string, startIndex);
      return index < 0 ? null : to(index, string);
    }
    var indices = !last ? numberRangeToNumber(coerceAtLeast(startIndex, 0), charSequenceLength(_this__u8e3s4)) : downTo(coerceAtMost(startIndex, get_lastIndex_2(_this__u8e3s4)), 0);
    if (typeof _this__u8e3s4 === 'string') {
      var inductionVariable = indices.z_1;
      var last_0 = indices.a1_1;
      var step = indices.b1_1;
      if ((step > 0 ? inductionVariable <= last_0 : false) ? true : step < 0 ? last_0 <= inductionVariable : false)
        do {
          var index_0 = inductionVariable;
          inductionVariable = inductionVariable + step | 0;
          var tmp$ret$1;
          $l$block: {
            // Inline function 'kotlin.collections.firstOrNull' call
            var tmp0_iterator = strings.f();
            while (tmp0_iterator.g()) {
              var element = tmp0_iterator.h();
              // Inline function 'kotlin.text.findAnyOf.<anonymous>' call
              if (regionMatches(element, 0, _this__u8e3s4, index_0, element.length, ignoreCase)) {
                tmp$ret$1 = element;
                break $l$block;
              }
            }
            tmp$ret$1 = null;
          }
          var matchingString = tmp$ret$1;
          if (!(matchingString == null))
            return to(index_0, matchingString);
        }
         while (!(index_0 === last_0));
    } else {
      var inductionVariable_0 = indices.z_1;
      var last_1 = indices.a1_1;
      var step_0 = indices.b1_1;
      if ((step_0 > 0 ? inductionVariable_0 <= last_1 : false) ? true : step_0 < 0 ? last_1 <= inductionVariable_0 : false)
        do {
          var index_1 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + step_0 | 0;
          var tmp$ret$3;
          $l$block_0: {
            // Inline function 'kotlin.collections.firstOrNull' call
            var tmp0_iterator_0 = strings.f();
            while (tmp0_iterator_0.g()) {
              var element_0 = tmp0_iterator_0.h();
              // Inline function 'kotlin.text.findAnyOf.<anonymous>' call
              if (regionMatchesImpl(element_0, 0, _this__u8e3s4, index_1, element_0.length, ignoreCase)) {
                tmp$ret$3 = element_0;
                break $l$block_0;
              }
            }
            tmp$ret$3 = null;
          }
          var matchingString_0 = tmp$ret$3;
          if (!(matchingString_0 == null))
            return to(index_1, matchingString_0);
        }
         while (!(index_1 === last_1));
    }
    return null;
  }
  function lastIndexOf(_this__u8e3s4, string, startIndex, ignoreCase) {
    startIndex = startIndex === VOID ? get_lastIndex_2(_this__u8e3s4) : startIndex;
    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
    var tmp;
    var tmp_0;
    if (ignoreCase) {
      tmp_0 = true;
    } else {
      tmp_0 = !(typeof _this__u8e3s4 === 'string');
    }
    if (tmp_0) {
      tmp = indexOf_4(_this__u8e3s4, string, startIndex, 0, ignoreCase, true);
    } else {
      // Inline function 'kotlin.text.nativeLastIndexOf' call
      // Inline function 'kotlin.js.asDynamic' call
      tmp = _this__u8e3s4.lastIndexOf(string, startIndex);
    }
    return tmp;
  }
  function removePrefix(_this__u8e3s4, prefix) {
    if (startsWith(_this__u8e3s4, prefix)) {
      // Inline function 'kotlin.text.substring' call
      var tmp0_substring = charSequenceLength(prefix);
      // Inline function 'kotlin.js.asDynamic' call
      return _this__u8e3s4.substring(tmp0_substring);
    }
    return _this__u8e3s4;
  }
  function startsWith(_this__u8e3s4, prefix, ignoreCase) {
    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
    var tmp;
    var tmp_0;
    if (!ignoreCase) {
      tmp_0 = typeof _this__u8e3s4 === 'string';
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = typeof prefix === 'string';
    } else {
      tmp = false;
    }
    if (tmp)
      return startsWith_1(_this__u8e3s4, prefix);
    else {
      return regionMatchesImpl(_this__u8e3s4, 0, prefix, 0, charSequenceLength(prefix), ignoreCase);
    }
  }
  function startsWith_0(_this__u8e3s4, prefix, startIndex, ignoreCase) {
    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
    var tmp;
    var tmp_0;
    if (!ignoreCase) {
      tmp_0 = typeof _this__u8e3s4 === 'string';
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = typeof prefix === 'string';
    } else {
      tmp = false;
    }
    if (tmp)
      return startsWith_2(_this__u8e3s4, prefix, startIndex);
    else {
      return regionMatchesImpl(_this__u8e3s4, startIndex, prefix, 0, charSequenceLength(prefix), ignoreCase);
    }
  }
  function rangesDelimitedBy$lambda($delimiters, $ignoreCase) {
    return function ($this$$receiver, currentIndex) {
      var tmp$ret$1;
      // Inline function 'kotlin.let' call
      var tmp0_let = indexOfAny($this$$receiver, $delimiters, currentIndex, $ignoreCase);
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'kotlin.text.rangesDelimitedBy.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_let < 0 ? null : to(tmp0_let, 1);
      tmp$ret$1 = tmp$ret$0;
      return tmp$ret$1;
    };
  }
  function splitToSequence$lambda($this_splitToSequence) {
    return function (it) {
      return substring_0($this_splitToSequence, it);
    };
  }
  function rangesDelimitedBy$lambda_0($delimitersList, $ignoreCase) {
    return function ($this$$receiver, currentIndex) {
      var tmp0_safe_receiver = findAnyOf($this$$receiver, $delimitersList, currentIndex, $ignoreCase, false);
      var tmp;
      if (tmp0_safe_receiver == null) {
        tmp = null;
      } else {
        var tmp$ret$1;
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        var tmp$ret$0;
        // Inline function 'kotlin.text.rangesDelimitedBy.<anonymous>.<anonymous>' call
        tmp$ret$0 = to(tmp0_safe_receiver.x3_1, tmp0_safe_receiver.y3_1.length);
        tmp$ret$1 = tmp$ret$0;
        tmp = tmp$ret$1;
      }
      return tmp;
    };
  }
  function UnsafeLazyImpl(initializer) {
    this.j5_1 = initializer;
    this.k5_1 = UNINITIALIZED_VALUE_getInstance();
  }
  protoOf(UnsafeLazyImpl).w = function () {
    if (this.k5_1 === UNINITIALIZED_VALUE_getInstance()) {
      this.k5_1 = ensureNotNull(this.j5_1)();
      this.j5_1 = null;
    }
    var tmp = this.k5_1;
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  protoOf(UnsafeLazyImpl).l5 = function () {
    return !(this.k5_1 === UNINITIALIZED_VALUE_getInstance());
  };
  protoOf(UnsafeLazyImpl).toString = function () {
    return this.l5() ? toString_2(this.w()) : 'Lazy value not initialized yet.';
  };
  function UNINITIALIZED_VALUE() {
    UNINITIALIZED_VALUE_instance = this;
  }
  var UNINITIALIZED_VALUE_instance;
  function UNINITIALIZED_VALUE_getInstance() {
    if (UNINITIALIZED_VALUE_instance == null)
      new UNINITIALIZED_VALUE();
    return UNINITIALIZED_VALUE_instance;
  }
  function NotImplementedError(message) {
    message = message === VOID ? 'An operation is not implemented.' : message;
    Error_init_$Init$(message, this);
    captureStack(this, NotImplementedError);
  }
  function Pair(first, second) {
    this.x3_1 = first;
    this.y3_1 = second;
  }
  protoOf(Pair).toString = function () {
    return '(' + this.x3_1 + ', ' + this.y3_1 + ')';
  };
  protoOf(Pair).j3 = function () {
    return this.x3_1;
  };
  protoOf(Pair).k3 = function () {
    return this.y3_1;
  };
  protoOf(Pair).hashCode = function () {
    var result = this.x3_1 == null ? 0 : hashCode(this.x3_1);
    result = imul(result, 31) + (this.y3_1 == null ? 0 : hashCode(this.y3_1)) | 0;
    return result;
  };
  protoOf(Pair).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Pair))
      return false;
    var tmp0_other_with_cast = other instanceof Pair ? other : THROW_CCE();
    if (!equals_1(this.x3_1, tmp0_other_with_cast.x3_1))
      return false;
    if (!equals_1(this.y3_1, tmp0_other_with_cast.y3_1))
      return false;
    return true;
  };
  function Triple(first, second, third) {
    this.o5_1 = first;
    this.p5_1 = second;
    this.q5_1 = third;
  }
  protoOf(Triple).toString = function () {
    return '(' + this.o5_1 + ', ' + this.p5_1 + ', ' + this.q5_1 + ')';
  };
  protoOf(Triple).j3 = function () {
    return this.o5_1;
  };
  protoOf(Triple).k3 = function () {
    return this.p5_1;
  };
  protoOf(Triple).r5 = function () {
    return this.q5_1;
  };
  protoOf(Triple).hashCode = function () {
    var result = this.o5_1 == null ? 0 : hashCode(this.o5_1);
    result = imul(result, 31) + (this.p5_1 == null ? 0 : hashCode(this.p5_1)) | 0;
    result = imul(result, 31) + (this.q5_1 == null ? 0 : hashCode(this.q5_1)) | 0;
    return result;
  };
  protoOf(Triple).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Triple))
      return false;
    var tmp0_other_with_cast = other instanceof Triple ? other : THROW_CCE();
    if (!equals_1(this.o5_1, tmp0_other_with_cast.o5_1))
      return false;
    if (!equals_1(this.p5_1, tmp0_other_with_cast.p5_1))
      return false;
    if (!equals_1(this.q5_1, tmp0_other_with_cast.q5_1))
      return false;
    return true;
  };
  function to(_this__u8e3s4, that) {
    return new Pair(_this__u8e3s4, that);
  }
  function _UByte___init__impl__g9hnc4(data) {
    return data;
  }
  function _UByte___get_data__impl__jof9qr($this) {
    return $this;
  }
  function Companion_5() {
    Companion_instance_5 = this;
    this.s5_1 = _UByte___init__impl__g9hnc4(0);
    this.t5_1 = _UByte___init__impl__g9hnc4(-1);
    this.u5_1 = 1;
    this.v5_1 = 8;
  }
  var Companion_instance_5;
  function Companion_getInstance_5() {
    if (Companion_instance_5 == null)
      new Companion_5();
    return Companion_instance_5;
  }
  function UByte__compareTo_impl_5w5192($this, other) {
    // Inline function 'kotlin.UByte.toInt' call
    var tmp = _UByte___get_data__impl__jof9qr($this) & 255;
    var tmp$ret$1;
    // Inline function 'kotlin.UByte.toInt' call
    tmp$ret$1 = _UByte___get_data__impl__jof9qr(other) & 255;
    return compareTo_0(tmp, tmp$ret$1);
  }
  function UByte__compareTo_impl_5w5192_0($this, other) {
    var tmp = $this.w5_1;
    return UByte__compareTo_impl_5w5192(tmp, other instanceof UByte ? other.w5_1 : THROW_CCE());
  }
  function UByte__toString_impl_v72jg($this) {
    // Inline function 'kotlin.UByte.toInt' call
    return (_UByte___get_data__impl__jof9qr($this) & 255).toString();
  }
  function UByte__hashCode_impl_mmczcb($this) {
    return $this;
  }
  function UByte__equals_impl_nvqtsf($this, other) {
    if (!(other instanceof UByte))
      return false;
    if (!($this === (other instanceof UByte ? other.w5_1 : THROW_CCE())))
      return false;
    return true;
  }
  function UByte(data) {
    Companion_getInstance_5();
    this.w5_1 = data;
  }
  protoOf(UByte).x5 = function (other) {
    return UByte__compareTo_impl_5w5192(this.w5_1, other);
  };
  protoOf(UByte).y5 = function (other) {
    return UByte__compareTo_impl_5w5192_0(this, other);
  };
  protoOf(UByte).toString = function () {
    return UByte__toString_impl_v72jg(this.w5_1);
  };
  protoOf(UByte).hashCode = function () {
    return UByte__hashCode_impl_mmczcb(this.w5_1);
  };
  protoOf(UByte).equals = function (other) {
    return UByte__equals_impl_nvqtsf(this.w5_1, other);
  };
  function _UInt___init__impl__l7qpdl(data) {
    return data;
  }
  function _UInt___get_data__impl__f0vqqw($this) {
    return $this;
  }
  function Companion_6() {
    Companion_instance_6 = this;
    this.z5_1 = _UInt___init__impl__l7qpdl(0);
    this.a6_1 = _UInt___init__impl__l7qpdl(-1);
    this.b6_1 = 4;
    this.c6_1 = 32;
  }
  var Companion_instance_6;
  function Companion_getInstance_6() {
    if (Companion_instance_6 == null)
      new Companion_6();
    return Companion_instance_6;
  }
  function UInt__compareTo_impl_yacclj($this, other) {
    return uintCompare(_UInt___get_data__impl__f0vqqw($this), _UInt___get_data__impl__f0vqqw(other));
  }
  function UInt__compareTo_impl_yacclj_0($this, other) {
    var tmp = $this.d6_1;
    return UInt__compareTo_impl_yacclj(tmp, other instanceof UInt ? other.d6_1 : THROW_CCE());
  }
  function UInt__toString_impl_dbgl21($this) {
    // Inline function 'kotlin.UInt.toLong' call
    return toLong_1(_UInt___get_data__impl__f0vqqw($this)).e6(new Long(-1, 0)).toString();
  }
  function UInt__hashCode_impl_z2mhuw($this) {
    return $this;
  }
  function UInt__equals_impl_ffdoxg($this, other) {
    if (!(other instanceof UInt))
      return false;
    if (!($this === (other instanceof UInt ? other.d6_1 : THROW_CCE())))
      return false;
    return true;
  }
  function UInt(data) {
    Companion_getInstance_6();
    this.d6_1 = data;
  }
  protoOf(UInt).f6 = function (other) {
    return UInt__compareTo_impl_yacclj(this.d6_1, other);
  };
  protoOf(UInt).y5 = function (other) {
    return UInt__compareTo_impl_yacclj_0(this, other);
  };
  protoOf(UInt).toString = function () {
    return UInt__toString_impl_dbgl21(this.d6_1);
  };
  protoOf(UInt).hashCode = function () {
    return UInt__hashCode_impl_z2mhuw(this.d6_1);
  };
  protoOf(UInt).equals = function (other) {
    return UInt__equals_impl_ffdoxg(this.d6_1, other);
  };
  function _UIntArray___init__impl__ghjpc6(storage) {
    return storage;
  }
  function _UIntArray___get_storage__impl__92a0v0($this) {
    return $this;
  }
  function _UIntArray___init__impl__ghjpc6_0(size) {
    return _UIntArray___init__impl__ghjpc6(new Int32Array(size));
  }
  function UIntArray__get_impl_gp5kza($this, index) {
    // Inline function 'kotlin.toUInt' call
    var tmp0_toUInt = _UIntArray___get_storage__impl__92a0v0($this)[index];
    return _UInt___init__impl__l7qpdl(tmp0_toUInt);
  }
  function UIntArray__set_impl_7f2zu2($this, index, value) {
    var tmp = _UIntArray___get_storage__impl__92a0v0($this);
    // Inline function 'kotlin.UInt.toInt' call
    tmp[index] = _UInt___get_data__impl__f0vqqw(value);
  }
  function _UIntArray___get_size__impl__r6l8ci($this) {
    return _UIntArray___get_storage__impl__92a0v0($this).length;
  }
  function UIntArray__iterator_impl_tkdv7k($this) {
    return new Iterator(_UIntArray___get_storage__impl__92a0v0($this));
  }
  function Iterator(array) {
    this.g6_1 = array;
    this.h6_1 = 0;
  }
  protoOf(Iterator).g = function () {
    return this.h6_1 < this.g6_1.length;
  };
  protoOf(Iterator).i6 = function () {
    var tmp;
    if (this.h6_1 < this.g6_1.length) {
      // Inline function 'kotlin.toUInt' call
      var tmp1 = this.h6_1;
      this.h6_1 = tmp1 + 1 | 0;
      var tmp0_toUInt = this.g6_1[tmp1];
      tmp = _UInt___init__impl__l7qpdl(tmp0_toUInt);
    } else {
      throw NoSuchElementException_init_$Create$_0(this.h6_1.toString());
    }
    return tmp;
  };
  protoOf(Iterator).h = function () {
    return new UInt(this.i6());
  };
  function UIntArray__containsAll_impl_414g22($this, elements) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp0_all = isInterface(elements, Collection) ? elements : THROW_CCE();
      var tmp;
      if (isInterface(tmp0_all, Collection)) {
        tmp = tmp0_all.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_all.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        // Inline function 'kotlin.UIntArray.containsAll.<anonymous>' call
        var tmp_0;
        if (element instanceof UInt) {
          var tmp_1 = _UIntArray___get_storage__impl__92a0v0($this);
          var tmp$ret$1;
          // Inline function 'kotlin.UInt.toInt' call
          var tmp0_toInt = element.d6_1;
          tmp$ret$1 = _UInt___get_data__impl__f0vqqw(tmp0_toInt);
          tmp_0 = contains_1(tmp_1, tmp$ret$1);
        } else {
          tmp_0 = false;
        }
        if (!tmp_0) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  }
  function UIntArray__containsAll_impl_414g22_0($this, elements) {
    return UIntArray__containsAll_impl_414g22($this.j6_1, elements);
  }
  function UIntArray__isEmpty_impl_vd8j4n($this) {
    return _UIntArray___get_storage__impl__92a0v0($this).length === 0;
  }
  function UIntArray__toString_impl_3zy802($this) {
    return 'UIntArray(storage=' + toString_3($this) + ')';
  }
  function UIntArray__hashCode_impl_hr7ost($this) {
    return hashCode($this);
  }
  function UIntArray__equals_impl_flcmof($this, other) {
    if (!(other instanceof UIntArray))
      return false;
    var tmp0_other_with_cast = other instanceof UIntArray ? other.j6_1 : THROW_CCE();
    if (!equals_1($this, tmp0_other_with_cast))
      return false;
    return true;
  }
  function UIntArray(storage) {
    this.j6_1 = storage;
  }
  protoOf(UIntArray).i = function () {
    return _UIntArray___get_size__impl__r6l8ci(this.j6_1);
  };
  protoOf(UIntArray).f = function () {
    return UIntArray__iterator_impl_tkdv7k(this.j6_1);
  };
  protoOf(UIntArray).k6 = function (elements) {
    return UIntArray__containsAll_impl_414g22(this.j6_1, elements);
  };
  protoOf(UIntArray).h1 = function (elements) {
    return UIntArray__containsAll_impl_414g22_0(this, elements);
  };
  protoOf(UIntArray).p = function () {
    return UIntArray__isEmpty_impl_vd8j4n(this.j6_1);
  };
  protoOf(UIntArray).toString = function () {
    return UIntArray__toString_impl_3zy802(this.j6_1);
  };
  protoOf(UIntArray).hashCode = function () {
    return UIntArray__hashCode_impl_hr7ost(this.j6_1);
  };
  protoOf(UIntArray).equals = function (other) {
    return UIntArray__equals_impl_flcmof(this.j6_1, other);
  };
  function _ULong___init__impl__c78o9k(data) {
    return data;
  }
  function _ULong___get_data__impl__fggpzb($this) {
    return $this;
  }
  function Companion_7() {
    Companion_instance_7 = this;
    this.l6_1 = _ULong___init__impl__c78o9k(new Long(0, 0));
    this.m6_1 = _ULong___init__impl__c78o9k(new Long(-1, -1));
    this.n6_1 = 8;
    this.o6_1 = 64;
  }
  var Companion_instance_7;
  function Companion_getInstance_7() {
    if (Companion_instance_7 == null)
      new Companion_7();
    return Companion_instance_7;
  }
  function ULong__compareTo_impl_38i7tu($this, other) {
    return ulongCompare(_ULong___get_data__impl__fggpzb($this), _ULong___get_data__impl__fggpzb(other));
  }
  function ULong__compareTo_impl_38i7tu_0($this, other) {
    var tmp = $this.f1_1;
    return ULong__compareTo_impl_38i7tu(tmp, other instanceof ULong ? other.f1_1 : THROW_CCE());
  }
  function ULong__toString_impl_f9au7k($this) {
    return ulongToString(_ULong___get_data__impl__fggpzb($this));
  }
  function ULong__hashCode_impl_6hv2lb($this) {
    return $this.hashCode();
  }
  function ULong__equals_impl_o0gnyb($this, other) {
    if (!(other instanceof ULong))
      return false;
    var tmp0_other_with_cast = other instanceof ULong ? other.f1_1 : THROW_CCE();
    if (!$this.equals(tmp0_other_with_cast))
      return false;
    return true;
  }
  function ULong(data) {
    Companion_getInstance_7();
    this.f1_1 = data;
  }
  protoOf(ULong).p6 = function (other) {
    return ULong__compareTo_impl_38i7tu(this.f1_1, other);
  };
  protoOf(ULong).y5 = function (other) {
    return ULong__compareTo_impl_38i7tu_0(this, other);
  };
  protoOf(ULong).toString = function () {
    return ULong__toString_impl_f9au7k(this.f1_1);
  };
  protoOf(ULong).hashCode = function () {
    return ULong__hashCode_impl_6hv2lb(this.f1_1);
  };
  protoOf(ULong).equals = function (other) {
    return ULong__equals_impl_o0gnyb(this.f1_1, other);
  };
  function _ULongArray___init__impl__twm1l3(storage) {
    return storage;
  }
  function _ULongArray___get_storage__impl__28e64j($this) {
    return $this;
  }
  function _ULongArray___init__impl__twm1l3_0(size) {
    return _ULongArray___init__impl__twm1l3(longArray(size));
  }
  function ULongArray__get_impl_pr71q9($this, index) {
    // Inline function 'kotlin.toULong' call
    var tmp0_toULong = _ULongArray___get_storage__impl__28e64j($this)[index];
    return _ULong___init__impl__c78o9k(tmp0_toULong);
  }
  function ULongArray__set_impl_z19mvh($this, index, value) {
    var tmp = _ULongArray___get_storage__impl__28e64j($this);
    // Inline function 'kotlin.ULong.toLong' call
    tmp[index] = _ULong___get_data__impl__fggpzb(value);
  }
  function _ULongArray___get_size__impl__ju6dtr($this) {
    return _ULongArray___get_storage__impl__28e64j($this).length;
  }
  function ULongArray__iterator_impl_cq4d2h($this) {
    return new Iterator_0(_ULongArray___get_storage__impl__28e64j($this));
  }
  function Iterator_0(array) {
    this.q6_1 = array;
    this.r6_1 = 0;
  }
  protoOf(Iterator_0).g = function () {
    return this.r6_1 < this.q6_1.length;
  };
  protoOf(Iterator_0).s6 = function () {
    var tmp;
    if (this.r6_1 < this.q6_1.length) {
      // Inline function 'kotlin.toULong' call
      var tmp1 = this.r6_1;
      this.r6_1 = tmp1 + 1 | 0;
      var tmp0_toULong = this.q6_1[tmp1];
      tmp = _ULong___init__impl__c78o9k(tmp0_toULong);
    } else {
      throw NoSuchElementException_init_$Create$_0(this.r6_1.toString());
    }
    return tmp;
  };
  protoOf(Iterator_0).h = function () {
    return new ULong(this.s6());
  };
  function ULongArray__contains_impl_v9bgai($this, element) {
    var tmp = isObject(new ULong(element)) ? new ULong(element) : THROW_CCE();
    if (!(tmp instanceof ULong))
      return false;
    var tmp_0 = _ULongArray___get_storage__impl__28e64j($this);
    var tmp$ret$0;
    // Inline function 'kotlin.ULong.toLong' call
    tmp$ret$0 = _ULong___get_data__impl__fggpzb(element);
    return contains_0(tmp_0, tmp$ret$0);
  }
  function ULongArray__containsAll_impl_xx8ztf($this, elements) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp0_all = isInterface(elements, Collection) ? elements : THROW_CCE();
      var tmp;
      if (isInterface(tmp0_all, Collection)) {
        tmp = tmp0_all.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_all.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        // Inline function 'kotlin.ULongArray.containsAll.<anonymous>' call
        var tmp_0;
        if (element instanceof ULong) {
          var tmp_1 = _ULongArray___get_storage__impl__28e64j($this);
          var tmp$ret$1;
          // Inline function 'kotlin.ULong.toLong' call
          var tmp0_toLong = element.f1_1;
          tmp$ret$1 = _ULong___get_data__impl__fggpzb(tmp0_toLong);
          tmp_0 = contains_0(tmp_1, tmp$ret$1);
        } else {
          tmp_0 = false;
        }
        if (!tmp_0) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  }
  function ULongArray__containsAll_impl_xx8ztf_0($this, elements) {
    return ULongArray__containsAll_impl_xx8ztf($this.t6_1, elements);
  }
  function ULongArray__isEmpty_impl_c3yngu($this) {
    return _ULongArray___get_storage__impl__28e64j($this).length === 0;
  }
  function ULongArray__toString_impl_wqk1p5($this) {
    return 'ULongArray(storage=' + toString_3($this) + ')';
  }
  function ULongArray__hashCode_impl_aze4wa($this) {
    return hashCode($this);
  }
  function ULongArray__equals_impl_vwitwa($this, other) {
    if (!(other instanceof ULongArray))
      return false;
    var tmp0_other_with_cast = other instanceof ULongArray ? other.t6_1 : THROW_CCE();
    if (!equals_1($this, tmp0_other_with_cast))
      return false;
    return true;
  }
  function ULongArray(storage) {
    this.t6_1 = storage;
  }
  protoOf(ULongArray).i = function () {
    return _ULongArray___get_size__impl__ju6dtr(this.t6_1);
  };
  protoOf(ULongArray).f = function () {
    return ULongArray__iterator_impl_cq4d2h(this.t6_1);
  };
  protoOf(ULongArray).u6 = function (elements) {
    return ULongArray__containsAll_impl_xx8ztf(this.t6_1, elements);
  };
  protoOf(ULongArray).h1 = function (elements) {
    return ULongArray__containsAll_impl_xx8ztf_0(this, elements);
  };
  protoOf(ULongArray).p = function () {
    return ULongArray__isEmpty_impl_c3yngu(this.t6_1);
  };
  protoOf(ULongArray).toString = function () {
    return ULongArray__toString_impl_wqk1p5(this.t6_1);
  };
  protoOf(ULongArray).hashCode = function () {
    return ULongArray__hashCode_impl_aze4wa(this.t6_1);
  };
  protoOf(ULongArray).equals = function (other) {
    return ULongArray__equals_impl_vwitwa(this.t6_1, other);
  };
  function _UShort___init__impl__jigrne(data) {
    return data;
  }
  function _UShort___get_data__impl__g0245($this) {
    return $this;
  }
  function Companion_8() {
    Companion_instance_8 = this;
    this.v6_1 = _UShort___init__impl__jigrne(0);
    this.w6_1 = _UShort___init__impl__jigrne(-1);
    this.x6_1 = 2;
    this.y6_1 = 16;
  }
  var Companion_instance_8;
  function Companion_getInstance_8() {
    if (Companion_instance_8 == null)
      new Companion_8();
    return Companion_instance_8;
  }
  function UShort__compareTo_impl_1pfgyc($this, other) {
    // Inline function 'kotlin.UShort.toInt' call
    var tmp = _UShort___get_data__impl__g0245($this) & 65535;
    var tmp$ret$1;
    // Inline function 'kotlin.UShort.toInt' call
    tmp$ret$1 = _UShort___get_data__impl__g0245(other) & 65535;
    return compareTo_0(tmp, tmp$ret$1);
  }
  function UShort__compareTo_impl_1pfgyc_0($this, other) {
    var tmp = $this.z6_1;
    return UShort__compareTo_impl_1pfgyc(tmp, other instanceof UShort ? other.z6_1 : THROW_CCE());
  }
  function UShort__toString_impl_edaoee($this) {
    // Inline function 'kotlin.UShort.toInt' call
    return (_UShort___get_data__impl__g0245($this) & 65535).toString();
  }
  function UShort__hashCode_impl_ywngrv($this) {
    return $this;
  }
  function UShort__equals_impl_7t9pdz($this, other) {
    if (!(other instanceof UShort))
      return false;
    if (!($this === (other instanceof UShort ? other.z6_1 : THROW_CCE())))
      return false;
    return true;
  }
  function UShort(data) {
    Companion_getInstance_8();
    this.z6_1 = data;
  }
  protoOf(UShort).a7 = function (other) {
    return UShort__compareTo_impl_1pfgyc(this.z6_1, other);
  };
  protoOf(UShort).y5 = function (other) {
    return UShort__compareTo_impl_1pfgyc_0(this, other);
  };
  protoOf(UShort).toString = function () {
    return UShort__toString_impl_edaoee(this.z6_1);
  };
  protoOf(UShort).hashCode = function () {
    return UShort__hashCode_impl_ywngrv(this.z6_1);
  };
  protoOf(UShort).equals = function (other) {
    return UShort__equals_impl_7t9pdz(this.z6_1, other);
  };
  function toString_0(_this__u8e3s4, radix) {
    var tmp$ret$0;
    // Inline function 'kotlin.ULong.toLong' call
    tmp$ret$0 = _ULong___get_data__impl__fggpzb(_this__u8e3s4);
    return ulongToString_0(tmp$ret$0, checkRadix(radix));
  }
  function toUInt(_this__u8e3s4) {
    var tmp0_elvis_lhs = toUIntOrNull(_this__u8e3s4);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new UInt(tmp_0)) == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toULong(_this__u8e3s4) {
    var tmp0_elvis_lhs = toULongOrNull(_this__u8e3s4);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new ULong(tmp_0)) == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toUByte(_this__u8e3s4) {
    var tmp0_elvis_lhs = toUByteOrNull(_this__u8e3s4);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new UByte(tmp_0)) == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toUShort(_this__u8e3s4) {
    var tmp0_elvis_lhs = toUShortOrNull(_this__u8e3s4);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new UShort(tmp_0)) == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toULongOrNull(_this__u8e3s4) {
    return toULongOrNull_0(_this__u8e3s4, 10);
  }
  function toUIntOrNull(_this__u8e3s4) {
    return toUIntOrNull_0(_this__u8e3s4, 10);
  }
  function toUByteOrNull(_this__u8e3s4) {
    return toUByteOrNull_0(_this__u8e3s4, 10);
  }
  function toUShortOrNull(_this__u8e3s4) {
    return toUShortOrNull_0(_this__u8e3s4, 10);
  }
  function toULongOrNull_0(_this__u8e3s4, radix) {
    checkRadix(radix);
    var length = _this__u8e3s4.length;
    if (length === 0)
      return null;
    Companion_getInstance_7();
    var limit = _ULong___init__impl__c78o9k(new Long(-1, -1));
    var start;
    var firstChar = charSequenceGet(_this__u8e3s4, 0);
    if (Char__compareTo_impl_ypi4mb(firstChar, _Char___init__impl__6a9atx(48)) < 0) {
      if (length === 1 ? true : !(firstChar === _Char___init__impl__6a9atx(43)))
        return null;
      start = 1;
    } else {
      start = 0;
    }
    var limitForMaxRadix = _ULong___init__impl__c78o9k(new Long(477218588, 119304647));
    var limitBeforeMul = limitForMaxRadix;
    // Inline function 'kotlin.toULong' call
    var uradix = _ULong___init__impl__c78o9k(toLong_1(radix));
    var result = _ULong___init__impl__c78o9k(new Long(0, 0));
    var inductionVariable = start;
    if (inductionVariable < length)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var digit = digitOf(charSequenceGet(_this__u8e3s4, i), radix);
        if (digit < 0)
          return null;
        // Inline function 'kotlin.ULong.compareTo' call
        var tmp0_compareTo = result;
        var tmp1_compareTo = limitBeforeMul;
        if (ulongCompare(_ULong___get_data__impl__fggpzb(tmp0_compareTo), _ULong___get_data__impl__fggpzb(tmp1_compareTo)) > 0) {
          if (equals_1(limitBeforeMul, limitForMaxRadix)) {
            // Inline function 'kotlin.ULong.div' call
            limitBeforeMul = ulongDivide(limit, uradix);
            // Inline function 'kotlin.ULong.compareTo' call
            var tmp2_compareTo = result;
            var tmp3_compareTo = limitBeforeMul;
            if (ulongCompare(_ULong___get_data__impl__fggpzb(tmp2_compareTo), _ULong___get_data__impl__fggpzb(tmp3_compareTo)) > 0) {
              return null;
            }
          } else {
            return null;
          }
        }
        // Inline function 'kotlin.ULong.times' call
        var tmp4_times = result;
        result = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_times).w4(_ULong___get_data__impl__fggpzb(uradix)));
        var beforeAdding = result;
        // Inline function 'kotlin.ULong.plus' call
        var tmp5_plus = result;
        // Inline function 'kotlin.toUInt' call
        var tmp6_plus = _UInt___init__impl__l7qpdl(digit);
        // Inline function 'kotlin.ULong.plus' call
        // Inline function 'kotlin.UInt.toULong' call
        var tmp0_plus = _ULong___init__impl__c78o9k(toLong_1(_UInt___get_data__impl__f0vqqw(tmp6_plus)).e6(new Long(-1, 0)));
        result = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp5_plus).x4(_ULong___get_data__impl__fggpzb(tmp0_plus)));
        // Inline function 'kotlin.ULong.compareTo' call
        var tmp7_compareTo = result;
        if (ulongCompare(_ULong___get_data__impl__fggpzb(tmp7_compareTo), _ULong___get_data__impl__fggpzb(beforeAdding)) < 0)
          return null;
      }
       while (inductionVariable < length);
    return result;
  }
  function toUIntOrNull_0(_this__u8e3s4, radix) {
    checkRadix(radix);
    var length = _this__u8e3s4.length;
    if (length === 0)
      return null;
    Companion_getInstance_6();
    var limit = _UInt___init__impl__l7qpdl(-1);
    var start;
    var firstChar = charSequenceGet(_this__u8e3s4, 0);
    if (Char__compareTo_impl_ypi4mb(firstChar, _Char___init__impl__6a9atx(48)) < 0) {
      if (length === 1 ? true : !(firstChar === _Char___init__impl__6a9atx(43)))
        return null;
      start = 1;
    } else {
      start = 0;
    }
    var limitForMaxRadix = _UInt___init__impl__l7qpdl(119304647);
    var limitBeforeMul = limitForMaxRadix;
    // Inline function 'kotlin.toUInt' call
    var uradix = _UInt___init__impl__l7qpdl(radix);
    var result = _UInt___init__impl__l7qpdl(0);
    var inductionVariable = start;
    if (inductionVariable < length)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var digit = digitOf(charSequenceGet(_this__u8e3s4, i), radix);
        if (digit < 0)
          return null;
        // Inline function 'kotlin.UInt.compareTo' call
        var tmp0_compareTo = result;
        var tmp1_compareTo = limitBeforeMul;
        if (uintCompare(_UInt___get_data__impl__f0vqqw(tmp0_compareTo), _UInt___get_data__impl__f0vqqw(tmp1_compareTo)) > 0) {
          if (limitBeforeMul === limitForMaxRadix) {
            // Inline function 'kotlin.UInt.div' call
            limitBeforeMul = uintDivide(limit, uradix);
            // Inline function 'kotlin.UInt.compareTo' call
            var tmp2_compareTo = result;
            var tmp3_compareTo = limitBeforeMul;
            if (uintCompare(_UInt___get_data__impl__f0vqqw(tmp2_compareTo), _UInt___get_data__impl__f0vqqw(tmp3_compareTo)) > 0) {
              return null;
            }
          } else {
            return null;
          }
        }
        // Inline function 'kotlin.UInt.times' call
        var tmp4_times = result;
        result = _UInt___init__impl__l7qpdl(imul(_UInt___get_data__impl__f0vqqw(tmp4_times), _UInt___get_data__impl__f0vqqw(uradix)));
        var beforeAdding = result;
        // Inline function 'kotlin.UInt.plus' call
        var tmp5_plus = result;
        // Inline function 'kotlin.toUInt' call
        var tmp6_plus = _UInt___init__impl__l7qpdl(digit);
        result = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp5_plus) + _UInt___get_data__impl__f0vqqw(tmp6_plus) | 0);
        // Inline function 'kotlin.UInt.compareTo' call
        var tmp7_compareTo = result;
        if (uintCompare(_UInt___get_data__impl__f0vqqw(tmp7_compareTo), _UInt___get_data__impl__f0vqqw(beforeAdding)) < 0)
          return null;
      }
       while (inductionVariable < length);
    return result;
  }
  function toUByteOrNull_0(_this__u8e3s4, radix) {
    var tmp0_elvis_lhs = toUIntOrNull_0(_this__u8e3s4, radix);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new UInt(tmp_0)) == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var int = tmp;
    // Inline function 'kotlin.UInt.compareTo' call
    Companion_getInstance_5();
    var tmp0_compareTo = _UByte___init__impl__g9hnc4(-1);
    // Inline function 'kotlin.UInt.compareTo' call
    // Inline function 'kotlin.UByte.toUInt' call
    var tmp0_compareTo_0 = _UInt___init__impl__l7qpdl(_UByte___get_data__impl__jof9qr(tmp0_compareTo) & 255);
    if (uintCompare(_UInt___get_data__impl__f0vqqw(int), _UInt___get_data__impl__f0vqqw(tmp0_compareTo_0)) > 0)
      return null;
    // Inline function 'kotlin.UInt.toUByte' call
    // Inline function 'kotlin.toUByte' call
    var tmp0_toUByte = _UInt___get_data__impl__f0vqqw(int);
    return _UByte___init__impl__g9hnc4(toByte_0(tmp0_toUByte));
  }
  function toUShortOrNull_0(_this__u8e3s4, radix) {
    var tmp0_elvis_lhs = toUIntOrNull_0(_this__u8e3s4, radix);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new UInt(tmp_0)) == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var int = tmp;
    // Inline function 'kotlin.UInt.compareTo' call
    Companion_getInstance_8();
    var tmp0_compareTo = _UShort___init__impl__jigrne(-1);
    // Inline function 'kotlin.UInt.compareTo' call
    // Inline function 'kotlin.UShort.toUInt' call
    var tmp0_compareTo_0 = _UInt___init__impl__l7qpdl(_UShort___get_data__impl__g0245(tmp0_compareTo) & 65535);
    if (uintCompare(_UInt___get_data__impl__f0vqqw(int), _UInt___get_data__impl__f0vqqw(tmp0_compareTo_0)) > 0)
      return null;
    // Inline function 'kotlin.UInt.toUShort' call
    // Inline function 'kotlin.toUShort' call
    var tmp0_toUShort = _UInt___get_data__impl__f0vqqw(int);
    return _UShort___init__impl__jigrne(toShort_0(tmp0_toUShort));
  }
  function uintCompare(v1, v2) {
    return compareTo_0(v1 ^ IntCompanionObject_getInstance().MIN_VALUE, v2 ^ IntCompanionObject_getInstance().MIN_VALUE);
  }
  function uintDivide(v1, v2) {
    // Inline function 'kotlin.toUInt' call
    // Inline function 'kotlin.UInt.toLong' call
    var tmp = toLong_1(_UInt___get_data__impl__f0vqqw(v1)).e6(new Long(-1, 0));
    var tmp$ret$1;
    // Inline function 'kotlin.UInt.toLong' call
    tmp$ret$1 = toLong_1(_UInt___get_data__impl__f0vqqw(v2)).e6(new Long(-1, 0));
    var tmp0_toUInt = tmp.u4(tmp$ret$1);
    return _UInt___init__impl__l7qpdl(tmp0_toUInt.b7());
  }
  function uintRemainder(v1, v2) {
    // Inline function 'kotlin.toUInt' call
    // Inline function 'kotlin.UInt.toLong' call
    var tmp = toLong_1(_UInt___get_data__impl__f0vqqw(v1)).e6(new Long(-1, 0));
    var tmp$ret$1;
    // Inline function 'kotlin.UInt.toLong' call
    tmp$ret$1 = toLong_1(_UInt___get_data__impl__f0vqqw(v2)).e6(new Long(-1, 0));
    var tmp0_toUInt = tmp.c7(tmp$ret$1);
    return _UInt___init__impl__l7qpdl(tmp0_toUInt.b7());
  }
  function ulongCompare(v1, v2) {
    Companion_getInstance_16();
    var tmp = v1.d7(new Long(0, -2147483648));
    Companion_getInstance_16();
    return tmp.v4(v2.d7(new Long(0, -2147483648)));
  }
  function ulongDivide(v1, v2) {
    // Inline function 'kotlin.ULong.toLong' call
    var dividend = _ULong___get_data__impl__fggpzb(v1);
    // Inline function 'kotlin.ULong.toLong' call
    var divisor = _ULong___get_data__impl__fggpzb(v2);
    if (divisor.v4(new Long(0, 0)) < 0) {
      var tmp;
      // Inline function 'kotlin.ULong.compareTo' call
      if (ulongCompare(_ULong___get_data__impl__fggpzb(v1), _ULong___get_data__impl__fggpzb(v2)) < 0) {
        tmp = _ULong___init__impl__c78o9k(new Long(0, 0));
      } else {
        tmp = _ULong___init__impl__c78o9k(new Long(1, 0));
      }
      return tmp;
    }
    if (dividend.v4(new Long(0, 0)) >= 0) {
      return _ULong___init__impl__c78o9k(dividend.u4(divisor));
    }
    var quotient = dividend.e7(1).u4(divisor).f7(1);
    var rem = dividend.y4(quotient.w4(divisor));
    var tmp$ret$4;
    // Inline function 'kotlin.Long.plus' call
    var tmp_0;
    // Inline function 'kotlin.ULong.compareTo' call
    var tmp0_compareTo = _ULong___init__impl__c78o9k(rem);
    var tmp1_compareTo = _ULong___init__impl__c78o9k(divisor);
    if (ulongCompare(_ULong___get_data__impl__fggpzb(tmp0_compareTo), _ULong___get_data__impl__fggpzb(tmp1_compareTo)) >= 0) {
      tmp_0 = 1;
    } else {
      tmp_0 = 0;
    }
    var tmp2_plus = tmp_0;
    tmp$ret$4 = quotient.x4(toLong_1(tmp2_plus));
    return _ULong___init__impl__c78o9k(tmp$ret$4);
  }
  function ulongRemainder(v1, v2) {
    // Inline function 'kotlin.ULong.toLong' call
    var dividend = _ULong___get_data__impl__fggpzb(v1);
    // Inline function 'kotlin.ULong.toLong' call
    var divisor = _ULong___get_data__impl__fggpzb(v2);
    if (divisor.v4(new Long(0, 0)) < 0) {
      var tmp;
      // Inline function 'kotlin.ULong.compareTo' call
      if (ulongCompare(_ULong___get_data__impl__fggpzb(v1), _ULong___get_data__impl__fggpzb(v2)) < 0) {
        tmp = v1;
      } else {
        // Inline function 'kotlin.ULong.minus' call
        tmp = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(v1).y4(_ULong___get_data__impl__fggpzb(v2)));
      }
      return tmp;
    }
    if (dividend.v4(new Long(0, 0)) >= 0) {
      return _ULong___init__impl__c78o9k(dividend.c7(divisor));
    }
    var quotient = dividend.e7(1).u4(divisor).f7(1);
    var rem = dividend.y4(quotient.w4(divisor));
    var tmp_0;
    // Inline function 'kotlin.ULong.compareTo' call
    var tmp0_compareTo = _ULong___init__impl__c78o9k(rem);
    var tmp1_compareTo = _ULong___init__impl__c78o9k(divisor);
    if (ulongCompare(_ULong___get_data__impl__fggpzb(tmp0_compareTo), _ULong___get_data__impl__fggpzb(tmp1_compareTo)) >= 0) {
      tmp_0 = divisor;
    } else {
      tmp_0 = new Long(0, 0);
    }
    return _ULong___init__impl__c78o9k(rem.y4(tmp_0));
  }
  function ulongToString(v) {
    return ulongToString_0(v, 10);
  }
  function ulongToString_0(v, base) {
    if (v.v4(new Long(0, 0)) >= 0)
      return toString_4(v, base);
    // Inline function 'kotlin.Long.div' call
    var quotient = v.e7(1).u4(toLong_1(base)).f7(1);
    var tmp$ret$1;
    // Inline function 'kotlin.Long.times' call
    tmp$ret$1 = quotient.w4(toLong_1(base));
    var rem = v.y4(tmp$ret$1);
    if (rem.v4(toLong_1(base)) >= 0) {
      // Inline function 'kotlin.Long.minus' call
      rem = rem.y4(toLong_1(base));
      // Inline function 'kotlin.Long.plus' call
      quotient = quotient.x4(new Long(1, 0));
    }
    return toString_4(quotient, base) + toString_4(rem, base);
  }
  function CharSequence() {
  }
  function Comparable() {
  }
  function Number_0() {
  }
  function Unit() {
    Unit_instance = this;
  }
  protoOf(Unit).toString = function () {
    return 'kotlin.Unit';
  };
  var Unit_instance;
  function Unit_getInstance() {
    if (Unit_instance == null)
      new Unit();
    return Unit_instance;
  }
  function ByteCompanionObject() {
    ByteCompanionObject_instance = this;
    this.MIN_VALUE = -128;
    this.MAX_VALUE = 127;
    this.SIZE_BYTES = 1;
    this.SIZE_BITS = 8;
  }
  protoOf(ByteCompanionObject).j7 = function () {
    return this.MIN_VALUE;
  };
  protoOf(ByteCompanionObject).k7 = function () {
    return this.MAX_VALUE;
  };
  protoOf(ByteCompanionObject).l7 = function () {
    return this.SIZE_BYTES;
  };
  protoOf(ByteCompanionObject).m7 = function () {
    return this.SIZE_BITS;
  };
  var ByteCompanionObject_instance;
  function ByteCompanionObject_getInstance() {
    if (ByteCompanionObject_instance == null)
      new ByteCompanionObject();
    return ByteCompanionObject_instance;
  }
  function ShortCompanionObject() {
    ShortCompanionObject_instance = this;
    this.MIN_VALUE = -32768;
    this.MAX_VALUE = 32767;
    this.SIZE_BYTES = 2;
    this.SIZE_BITS = 16;
  }
  protoOf(ShortCompanionObject).j7 = function () {
    return this.MIN_VALUE;
  };
  protoOf(ShortCompanionObject).k7 = function () {
    return this.MAX_VALUE;
  };
  protoOf(ShortCompanionObject).l7 = function () {
    return this.SIZE_BYTES;
  };
  protoOf(ShortCompanionObject).m7 = function () {
    return this.SIZE_BITS;
  };
  var ShortCompanionObject_instance;
  function ShortCompanionObject_getInstance() {
    if (ShortCompanionObject_instance == null)
      new ShortCompanionObject();
    return ShortCompanionObject_instance;
  }
  function IntCompanionObject() {
    IntCompanionObject_instance = this;
    this.MIN_VALUE = -2147483648;
    this.MAX_VALUE = 2147483647;
    this.SIZE_BYTES = 4;
    this.SIZE_BITS = 32;
  }
  protoOf(IntCompanionObject).j7 = function () {
    return this.MIN_VALUE;
  };
  protoOf(IntCompanionObject).k7 = function () {
    return this.MAX_VALUE;
  };
  protoOf(IntCompanionObject).l7 = function () {
    return this.SIZE_BYTES;
  };
  protoOf(IntCompanionObject).m7 = function () {
    return this.SIZE_BITS;
  };
  var IntCompanionObject_instance;
  function IntCompanionObject_getInstance() {
    if (IntCompanionObject_instance == null)
      new IntCompanionObject();
    return IntCompanionObject_instance;
  }
  function FloatCompanionObject() {
    FloatCompanionObject_instance = this;
    this.MIN_VALUE = 1.4E-45;
    this.MAX_VALUE = 3.4028235E38;
    this.POSITIVE_INFINITY = Infinity;
    this.NEGATIVE_INFINITY = -Infinity;
    this.NaN = NaN;
    this.SIZE_BYTES = 4;
    this.SIZE_BITS = 32;
  }
  protoOf(FloatCompanionObject).j7 = function () {
    return this.MIN_VALUE;
  };
  protoOf(FloatCompanionObject).k7 = function () {
    return this.MAX_VALUE;
  };
  protoOf(FloatCompanionObject).n7 = function () {
    return this.POSITIVE_INFINITY;
  };
  protoOf(FloatCompanionObject).o7 = function () {
    return this.NEGATIVE_INFINITY;
  };
  protoOf(FloatCompanionObject).p7 = function () {
    return this.NaN;
  };
  protoOf(FloatCompanionObject).l7 = function () {
    return this.SIZE_BYTES;
  };
  protoOf(FloatCompanionObject).m7 = function () {
    return this.SIZE_BITS;
  };
  var FloatCompanionObject_instance;
  function FloatCompanionObject_getInstance() {
    if (FloatCompanionObject_instance == null)
      new FloatCompanionObject();
    return FloatCompanionObject_instance;
  }
  function DoubleCompanionObject() {
    DoubleCompanionObject_instance = this;
    this.MIN_VALUE = 4.9E-324;
    this.MAX_VALUE = 1.7976931348623157E308;
    this.POSITIVE_INFINITY = Infinity;
    this.NEGATIVE_INFINITY = -Infinity;
    this.NaN = NaN;
    this.SIZE_BYTES = 8;
    this.SIZE_BITS = 64;
  }
  protoOf(DoubleCompanionObject).j7 = function () {
    return this.MIN_VALUE;
  };
  protoOf(DoubleCompanionObject).k7 = function () {
    return this.MAX_VALUE;
  };
  protoOf(DoubleCompanionObject).n7 = function () {
    return this.POSITIVE_INFINITY;
  };
  protoOf(DoubleCompanionObject).o7 = function () {
    return this.NEGATIVE_INFINITY;
  };
  protoOf(DoubleCompanionObject).p7 = function () {
    return this.NaN;
  };
  protoOf(DoubleCompanionObject).l7 = function () {
    return this.SIZE_BYTES;
  };
  protoOf(DoubleCompanionObject).m7 = function () {
    return this.SIZE_BITS;
  };
  var DoubleCompanionObject_instance;
  function DoubleCompanionObject_getInstance() {
    if (DoubleCompanionObject_instance == null)
      new DoubleCompanionObject();
    return DoubleCompanionObject_instance;
  }
  function StringCompanionObject() {
    StringCompanionObject_instance = this;
  }
  var StringCompanionObject_instance;
  function StringCompanionObject_getInstance() {
    if (StringCompanionObject_instance == null)
      new StringCompanionObject();
    return StringCompanionObject_instance;
  }
  function BooleanCompanionObject() {
    BooleanCompanionObject_instance = this;
  }
  var BooleanCompanionObject_instance;
  function BooleanCompanionObject_getInstance() {
    if (BooleanCompanionObject_instance == null)
      new BooleanCompanionObject();
    return BooleanCompanionObject_instance;
  }
  function Comparator() {
  }
  function copyToArrayImpl(collection) {
    // Inline function 'kotlin.emptyArray' call
    var array = [];
    var iterator = collection.f();
    while (iterator.g()) {
      // Inline function 'kotlin.js.asDynamic' call
      array.push(iterator.h());
    }
    return array;
  }
  function listOf_0(element) {
    return arrayListOf([element]);
  }
  function mapOf_0(pair) {
    return hashMapOf([pair]);
  }
  function checkIndexOverflow(index) {
    if (index < 0) {
      throwIndexOverflow();
    }
    return index;
  }
  function mapCapacity(expectedSize) {
    return expectedSize;
  }
  function setOf_0(element) {
    return hashSetOf([element]);
  }
  function checkCountOverflow(count) {
    if (count < 0) {
      throwCountOverflow();
    }
    return count;
  }
  function sort(_this__u8e3s4) {
    collectionsSort(_this__u8e3s4, naturalOrder());
  }
  function sortWith(_this__u8e3s4, comparator) {
    collectionsSort(_this__u8e3s4, comparator);
  }
  function arrayCopy(source, destination, destinationOffset, startIndex, endIndex) {
    Companion_getInstance().t1(startIndex, endIndex, source.length);
    var rangeSize = endIndex - startIndex | 0;
    Companion_getInstance().t1(destinationOffset, destinationOffset + rangeSize | 0, destination.length);
    if (isView(destination) ? isView(source) : false) {
      // Inline function 'kotlin.js.asDynamic' call
      var subrange = source.subarray(startIndex, endIndex);
      // Inline function 'kotlin.js.asDynamic' call
      destination.set(subrange, destinationOffset);
    } else {
      if (!(source === destination) ? true : destinationOffset <= startIndex) {
        var inductionVariable = 0;
        if (inductionVariable < rangeSize)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            destination[destinationOffset + index | 0] = source[startIndex + index | 0];
          }
           while (inductionVariable < rangeSize);
      } else {
        var inductionVariable_0 = rangeSize - 1 | 0;
        if (0 <= inductionVariable_0)
          do {
            var index_0 = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + -1 | 0;
            destination[destinationOffset + index_0 | 0] = source[startIndex + index_0 | 0];
          }
           while (0 <= inductionVariable_0);
      }
    }
  }
  function copyToArray(collection) {
    var tmp;
    // Inline function 'kotlin.js.asDynamic' call
    if (collection.toArray !== undefined) {
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      tmp = collection.toArray();
    } else {
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      tmp = copyToArrayImpl(collection);
    }
    return tmp;
  }
  function collectionsSort(list, comparator) {
    if (list.i() <= 1)
      return Unit_getInstance();
    var array = copyToArray(list);
    sortArrayWith(array, comparator);
    var inductionVariable = 0;
    var last = array.length;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        list.q7(i, array[i]);
      }
       while (inductionVariable < last);
  }
  function AbstractMutableCollection() {
    AbstractCollection.call(this);
  }
  protoOf(AbstractMutableCollection).j = function (elements) {
    this.r7();
    var modified = false;
    var tmp0_iterator = elements.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      if (this.a(element))
        modified = true;
    }
    return modified;
  };
  protoOf(AbstractMutableCollection).s7 = function () {
    this.r7();
    var iterator = this.f();
    while (iterator.g()) {
      iterator.h();
      iterator.t7();
    }
  };
  protoOf(AbstractMutableCollection).toJSON = function () {
    return this.toArray();
  };
  protoOf(AbstractMutableCollection).r7 = function () {
  };
  function IteratorImpl_0($outer) {
    this.w7_1 = $outer;
    this.u7_1 = 0;
    this.v7_1 = -1;
  }
  protoOf(IteratorImpl_0).g = function () {
    return this.u7_1 < this.w7_1.i();
  };
  protoOf(IteratorImpl_0).h = function () {
    if (!this.g())
      throw NoSuchElementException_init_$Create$();
    var tmp = this;
    var tmp1 = this.u7_1;
    this.u7_1 = tmp1 + 1 | 0;
    tmp.v7_1 = tmp1;
    return this.w7_1.l(this.v7_1);
  };
  protoOf(IteratorImpl_0).t7 = function () {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!(this.v7_1 === -1)) {
      // Inline function 'kotlin.collections.IteratorImpl.remove.<anonymous>' call
      var message = 'Call next() or previous() before removing element from the iterator.';
      throw IllegalStateException_init_$Create$(toString_3(message));
    }
    this.w7_1.y7(this.v7_1);
    this.u7_1 = this.v7_1;
    this.v7_1 = -1;
  };
  function ListIteratorImpl_0($outer, index) {
    this.c8_1 = $outer;
    IteratorImpl_0.call(this, $outer);
    Companion_getInstance().b2(index, this.c8_1.i());
    this.u7_1 = index;
  }
  function SubList_0(list, fromIndex, toIndex) {
    AbstractMutableList.call(this);
    this.e8_1 = list;
    this.f8_1 = fromIndex;
    this.g8_1 = 0;
    Companion_getInstance().t1(this.f8_1, toIndex, this.e8_1.i());
    this.g8_1 = toIndex - this.f8_1 | 0;
  }
  protoOf(SubList_0).h8 = function (index, element) {
    Companion_getInstance().b2(index, this.g8_1);
    this.e8_1.h8(this.f8_1 + index | 0, element);
    this.g8_1 = this.g8_1 + 1 | 0;
  };
  protoOf(SubList_0).l = function (index) {
    Companion_getInstance().u1(index, this.g8_1);
    return this.e8_1.l(this.f8_1 + index | 0);
  };
  protoOf(SubList_0).y7 = function (index) {
    Companion_getInstance().u1(index, this.g8_1);
    var result = this.e8_1.y7(this.f8_1 + index | 0);
    this.g8_1 = this.g8_1 - 1 | 0;
    return result;
  };
  protoOf(SubList_0).q7 = function (index, element) {
    Companion_getInstance().u1(index, this.g8_1);
    return this.e8_1.q7(this.f8_1 + index | 0, element);
  };
  protoOf(SubList_0).i = function () {
    return this.g8_1;
  };
  protoOf(SubList_0).r7 = function () {
    return this.e8_1.r7();
  };
  function AbstractMutableList() {
    AbstractMutableCollection.call(this);
    this.x7_1 = 0;
  }
  protoOf(AbstractMutableList).a = function (element) {
    this.r7();
    this.h8(this.i(), element);
    return true;
  };
  protoOf(AbstractMutableList).f = function () {
    return new IteratorImpl_0(this);
  };
  protoOf(AbstractMutableList).g1 = function (element) {
    return this.v1(element) >= 0;
  };
  protoOf(AbstractMutableList).v1 = function (element) {
    var inductionVariable = 0;
    var last = get_lastIndex_1(this);
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (equals_1(this.l(index), element)) {
          return index;
        }
      }
       while (!(index === last));
    return -1;
  };
  protoOf(AbstractMutableList).k = function (index) {
    return new ListIteratorImpl_0(this, index);
  };
  protoOf(AbstractMutableList).s = function (fromIndex, toIndex) {
    return new SubList_0(this, fromIndex, toIndex);
  };
  protoOf(AbstractMutableList).equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, List) : false))
      return false;
    return Companion_getInstance().e2(this, other);
  };
  protoOf(AbstractMutableList).hashCode = function () {
    return Companion_getInstance().d2(this);
  };
  function AbstractMutableMap$keys$1$iterator$1($entryIterator) {
    this.i8_1 = $entryIterator;
  }
  protoOf(AbstractMutableMap$keys$1$iterator$1).g = function () {
    return this.i8_1.g();
  };
  protoOf(AbstractMutableMap$keys$1$iterator$1).h = function () {
    return this.i8_1.h().v();
  };
  protoOf(AbstractMutableMap$keys$1$iterator$1).t7 = function () {
    return this.i8_1.t7();
  };
  function AbstractMutableMap$values$1$iterator$1($entryIterator) {
    this.j8_1 = $entryIterator;
  }
  protoOf(AbstractMutableMap$values$1$iterator$1).g = function () {
    return this.j8_1.g();
  };
  protoOf(AbstractMutableMap$values$1$iterator$1).h = function () {
    return this.j8_1.h().w();
  };
  protoOf(AbstractMutableMap$values$1$iterator$1).t7 = function () {
    return this.j8_1.t7();
  };
  function SimpleEntry(key, value) {
    this.k8_1 = key;
    this.l8_1 = value;
  }
  protoOf(SimpleEntry).v = function () {
    return this.k8_1;
  };
  protoOf(SimpleEntry).w = function () {
    return this.l8_1;
  };
  protoOf(SimpleEntry).m8 = function (newValue) {
    var oldValue = this.l8_1;
    this.l8_1 = newValue;
    return oldValue;
  };
  protoOf(SimpleEntry).hashCode = function () {
    return Companion_getInstance_0().h2(this);
  };
  protoOf(SimpleEntry).toString = function () {
    return Companion_getInstance_0().i2(this);
  };
  protoOf(SimpleEntry).equals = function (other) {
    return Companion_getInstance_0().j2(this, other);
  };
  function AbstractEntrySet() {
    AbstractMutableSet.call(this);
  }
  protoOf(AbstractEntrySet).g1 = function (element) {
    return this.n8(element);
  };
  function AbstractMutableMap$keys$1(this$0) {
    this.o8_1 = this$0;
    AbstractMutableSet.call(this);
  }
  protoOf(AbstractMutableMap$keys$1).p8 = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Add is not supported on keys');
  };
  protoOf(AbstractMutableMap$keys$1).a = function (element) {
    return this.p8((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  protoOf(AbstractMutableMap$keys$1).s7 = function () {
    this.o8_1.s7();
  };
  protoOf(AbstractMutableMap$keys$1).l2 = function (element) {
    return this.o8_1.o2(element);
  };
  protoOf(AbstractMutableMap$keys$1).g1 = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    return this.l2((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  protoOf(AbstractMutableMap$keys$1).f = function () {
    var entryIterator = this.o8_1.u().f();
    return new AbstractMutableMap$keys$1$iterator$1(entryIterator);
  };
  protoOf(AbstractMutableMap$keys$1).i = function () {
    return this.o8_1.i();
  };
  protoOf(AbstractMutableMap$keys$1).r7 = function () {
    return this.o8_1.r7();
  };
  function AbstractMutableMap$values$1(this$0) {
    this.q8_1 = this$0;
    AbstractMutableCollection.call(this);
  }
  protoOf(AbstractMutableMap$values$1).r8 = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Add is not supported on values');
  };
  protoOf(AbstractMutableMap$values$1).a = function (element) {
    return this.r8((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  protoOf(AbstractMutableMap$values$1).r2 = function (element) {
    return this.q8_1.s2(element);
  };
  protoOf(AbstractMutableMap$values$1).g1 = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    return this.r2((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  protoOf(AbstractMutableMap$values$1).f = function () {
    var entryIterator = this.q8_1.u().f();
    return new AbstractMutableMap$values$1$iterator$1(entryIterator);
  };
  protoOf(AbstractMutableMap$values$1).i = function () {
    return this.q8_1.i();
  };
  protoOf(AbstractMutableMap$values$1).r7 = function () {
    return this.q8_1.r7();
  };
  function AbstractMutableMap() {
    AbstractMap.call(this);
    this.r3_1 = null;
    this.s3_1 = null;
  }
  protoOf(AbstractMutableMap).s7 = function () {
    this.u().s7();
  };
  protoOf(AbstractMutableMap).v2 = function () {
    if (this.r3_1 == null) {
      var tmp = this;
      tmp.r3_1 = new AbstractMutableMap$keys$1(this);
    }
    return ensureNotNull(this.r3_1);
  };
  protoOf(AbstractMutableMap).t3 = function (from) {
    this.r7();
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = from.u().f();
    while (tmp0_iterator.g()) {
      var tmp1_loop_parameter = tmp0_iterator.h();
      // Inline function 'kotlin.collections.component1' call
      var key = tmp1_loop_parameter.v();
      // Inline function 'kotlin.collections.component2' call
      var value = tmp1_loop_parameter.w();
      this.z3(key, value);
    }
  };
  protoOf(AbstractMutableMap).w2 = function () {
    if (this.s3_1 == null) {
      var tmp = this;
      tmp.s3_1 = new AbstractMutableMap$values$1(this);
    }
    return ensureNotNull(this.s3_1);
  };
  protoOf(AbstractMutableMap).s8 = function (key) {
    this.r7();
    var iter = this.u().f();
    while (iter.g()) {
      var entry = iter.h();
      var k = entry.v();
      if (equals_1(key, k)) {
        var value = entry.w();
        iter.t7();
        return value;
      }
    }
    return null;
  };
  protoOf(AbstractMutableMap).r7 = function () {
  };
  function AbstractMutableSet() {
    AbstractMutableCollection.call(this);
  }
  protoOf(AbstractMutableSet).equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, Set) : false))
      return false;
    return Companion_getInstance_1().y2(this, other);
  };
  protoOf(AbstractMutableSet).hashCode = function () {
    return Companion_getInstance_1().x2(this);
  };
  function Companion_9() {
    Companion_instance_9 = this;
    var tmp = this;
    // Inline function 'kotlin.also' call
    var tmp0_also = ArrayList_init_$Create$_0(0);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.Companion.Empty.<anonymous>' call
    tmp0_also.e_1 = true;
    tmp.t8_1 = tmp0_also;
  }
  var Companion_instance_9;
  function Companion_getInstance_9() {
    if (Companion_instance_9 == null)
      new Companion_9();
    return Companion_instance_9;
  }
  function ArrayList_init_$Init$($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.emptyArray' call
    tmp$ret$0 = [];
    ArrayList.call($this, tmp$ret$0);
    return $this;
  }
  function ArrayList_init_$Create$() {
    return ArrayList_init_$Init$(objectCreate(protoOf(ArrayList)));
  }
  function ArrayList_init_$Init$_0(initialCapacity, $this) {
    var tmp$ret$0;
    // Inline function 'kotlin.emptyArray' call
    tmp$ret$0 = [];
    ArrayList.call($this, tmp$ret$0);
    return $this;
  }
  function ArrayList_init_$Create$_0(initialCapacity) {
    return ArrayList_init_$Init$_0(initialCapacity, objectCreate(protoOf(ArrayList)));
  }
  function ArrayList_init_$Init$_1(elements, $this) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.toTypedArray' call
    tmp$ret$0 = copyToArray(elements);
    ArrayList.call($this, tmp$ret$0);
    return $this;
  }
  function ArrayList_init_$Create$_1(elements) {
    return ArrayList_init_$Init$_1(elements, objectCreate(protoOf(ArrayList)));
  }
  function increaseLength($this, amount) {
    var previous = $this.i();
    // Inline function 'kotlin.js.asDynamic' call
    $this.d_1.length = $this.i() + amount | 0;
    return previous;
  }
  function rangeCheck($this, index) {
    // Inline function 'kotlin.apply' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.ArrayList.rangeCheck.<anonymous>' call
    Companion_getInstance().u1(index, $this.i());
    return index;
  }
  function insertionRangeCheck($this, index) {
    // Inline function 'kotlin.apply' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.ArrayList.insertionRangeCheck.<anonymous>' call
    Companion_getInstance().b2(index, $this.i());
    return index;
  }
  function ArrayList(array) {
    Companion_getInstance_9();
    AbstractMutableList.call(this);
    this.d_1 = array;
    this.e_1 = false;
  }
  protoOf(ArrayList).u8 = function (minCapacity) {
  };
  protoOf(ArrayList).i = function () {
    return this.d_1.length;
  };
  protoOf(ArrayList).l = function (index) {
    var tmp = this.d_1[rangeCheck(this, index)];
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  protoOf(ArrayList).q7 = function (index, element) {
    this.r7();
    rangeCheck(this, index);
    // Inline function 'kotlin.apply' call
    var tmp0_apply = this.d_1[index];
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.ArrayList.set.<anonymous>' call
    this.d_1[index] = element;
    var tmp = tmp0_apply;
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  protoOf(ArrayList).a = function (element) {
    this.r7();
    // Inline function 'kotlin.js.asDynamic' call
    this.d_1.push(element);
    this.x7_1 = this.x7_1 + 1 | 0;
    return true;
  };
  protoOf(ArrayList).h8 = function (index, element) {
    this.r7();
    // Inline function 'kotlin.js.asDynamic' call
    this.d_1.splice(insertionRangeCheck(this, index), 0, element);
    this.x7_1 = this.x7_1 + 1 | 0;
  };
  protoOf(ArrayList).j = function (elements) {
    this.r7();
    if (elements.p())
      return false;
    var offset = increaseLength(this, elements.i());
    // Inline function 'kotlin.collections.forEachIndexed' call
    var index = 0;
    var tmp0_iterator = elements.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      // Inline function 'kotlin.collections.ArrayList.addAll.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      var tmp0_anonymous = checkIndexOverflow(tmp1);
      this.d_1[offset + tmp0_anonymous | 0] = item;
    }
    this.x7_1 = this.x7_1 + 1 | 0;
    return true;
  };
  protoOf(ArrayList).y7 = function (index) {
    this.r7();
    rangeCheck(this, index);
    this.x7_1 = this.x7_1 + 1 | 0;
    var tmp;
    if (index === get_lastIndex_1(this)) {
      // Inline function 'kotlin.js.asDynamic' call
      tmp = this.d_1.pop();
    } else {
      // Inline function 'kotlin.js.asDynamic' call
      tmp = this.d_1.splice(index, 1)[0];
    }
    return tmp;
  };
  protoOf(ArrayList).v1 = function (element) {
    return indexOf(this.d_1, element);
  };
  protoOf(ArrayList).toString = function () {
    return arrayToString(this.d_1);
  };
  protoOf(ArrayList).v8 = function () {
    return [].slice.call(this.d_1);
  };
  protoOf(ArrayList).toArray = function () {
    return this.v8();
  };
  protoOf(ArrayList).r7 = function () {
    if (this.e_1)
      throw UnsupportedOperationException_init_$Create$();
  };
  var _stableSortingIsSupported;
  function sortArray(array) {
    if (getStableSortingIsSupported()) {
      var comparison = sortArray$lambda;
      // Inline function 'kotlin.js.asDynamic' call
      array.sort(comparison);
    } else {
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      mergeSort(array, 0, get_lastIndex_0(array), naturalOrder());
    }
  }
  function sortArrayWith(array, comparator) {
    if (getStableSortingIsSupported()) {
      var comparison = sortArrayWith$lambda(comparator);
      // Inline function 'kotlin.js.asDynamic' call
      array.sort(comparison);
    } else {
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      mergeSort(array, 0, get_lastIndex_0(array), comparator);
    }
  }
  function getStableSortingIsSupported() {
    var tmp0_safe_receiver = _stableSortingIsSupported;
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return tmp0_safe_receiver;
    }
    _stableSortingIsSupported = false;
    // Inline function 'kotlin.js.unsafeCast' call
    var array = [];
    var inductionVariable = 0;
    if (inductionVariable < 600)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.js.asDynamic' call
        array.push(index);
      }
       while (inductionVariable < 600);
    var comparison = getStableSortingIsSupported$lambda;
    // Inline function 'kotlin.js.asDynamic' call
    array.sort(comparison);
    var inductionVariable_0 = 1;
    var last = array.length;
    if (inductionVariable_0 < last)
      do {
        var index_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var a = array[index_0 - 1 | 0];
        var b = array[index_0];
        if ((a & 3) === (b & 3) ? a >= b : false)
          return false;
      }
       while (inductionVariable_0 < last);
    _stableSortingIsSupported = true;
    return true;
  }
  function mergeSort(array, start, endInclusive, comparator) {
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp0_arrayOfNulls = array.length;
    // Inline function 'kotlin.js.asDynamic' call
    var buffer = fillArrayVal(Array(tmp0_arrayOfNulls), null);
    var result = mergeSort_0(array, buffer, start, endInclusive, comparator);
    if (!(result === array)) {
      var inductionVariable = start;
      if (inductionVariable <= endInclusive)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          array[i] = result[i];
        }
         while (!(i === endInclusive));
    }
  }
  function mergeSort_0(array, buffer, start, end, comparator) {
    if (start === end) {
      return array;
    }
    var median = (start + end | 0) / 2 | 0;
    var left = mergeSort_0(array, buffer, start, median, comparator);
    var right = mergeSort_0(array, buffer, median + 1 | 0, end, comparator);
    var target = left === buffer ? array : buffer;
    var leftIndex = start;
    var rightIndex = median + 1 | 0;
    var inductionVariable = start;
    if (inductionVariable <= end)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (leftIndex <= median ? rightIndex <= end : false) {
          var leftValue = left[leftIndex];
          var rightValue = right[rightIndex];
          if (comparator.compare(leftValue, rightValue) <= 0) {
            target[i] = leftValue;
            leftIndex = leftIndex + 1 | 0;
          } else {
            target[i] = rightValue;
            rightIndex = rightIndex + 1 | 0;
          }
        } else if (leftIndex <= median) {
          target[i] = left[leftIndex];
          leftIndex = leftIndex + 1 | 0;
        } else {
          target[i] = right[rightIndex];
          rightIndex = rightIndex + 1 | 0;
        }
      }
       while (!(i === end));
    return target;
  }
  function sortArray$lambda(a, b) {
    return compareTo_0(a, b);
  }
  function sortArrayWith$lambda($comparator) {
    return function (a, b) {
      return $comparator.compare(a, b);
    };
  }
  function getStableSortingIsSupported$lambda(a, b) {
    return (a & 3) - (b & 3) | 0;
  }
  function HashCode() {
    HashCode_instance = this;
  }
  protoOf(HashCode).w8 = function (value1, value2) {
    return equals_1(value1, value2);
  };
  protoOf(HashCode).x8 = function (value) {
    var tmp1_elvis_lhs = value == null ? null : hashCode(value);
    return tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
  };
  var HashCode_instance;
  function HashCode_getInstance() {
    if (HashCode_instance == null)
      new HashCode();
    return HashCode_instance;
  }
  function EntrySet($outer) {
    this.y8_1 = $outer;
    AbstractEntrySet.call(this);
  }
  protoOf(EntrySet).z8 = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Add is not supported on entries');
  };
  protoOf(EntrySet).a = function (element) {
    return this.z8((!(element == null) ? isInterface(element, MutableEntry) : false) ? element : THROW_CCE());
  };
  protoOf(EntrySet).s7 = function () {
    this.y8_1.s7();
  };
  protoOf(EntrySet).n8 = function (element) {
    return this.y8_1.t2(element);
  };
  protoOf(EntrySet).f = function () {
    return this.y8_1.e9_1.f();
  };
  protoOf(EntrySet).i = function () {
    return this.y8_1.i();
  };
  function HashMap_init_$Init$(internalMap, $this) {
    AbstractMutableMap.call($this);
    HashMap.call($this);
    $this.e9_1 = internalMap;
    $this.f9_1 = internalMap.h9();
    return $this;
  }
  function HashMap_init_$Init$_0($this) {
    HashMap_init_$Init$(new InternalHashCodeMap(HashCode_getInstance()), $this);
    return $this;
  }
  function HashMap_init_$Create$() {
    return HashMap_init_$Init$_0(objectCreate(protoOf(HashMap)));
  }
  function HashMap_init_$Init$_1(initialCapacity, loadFactor, $this) {
    HashMap_init_$Init$_0($this);
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(initialCapacity >= 0)) {
      // Inline function 'kotlin.collections.HashMap.<init>.<anonymous>' call
      var message = 'Negative initial capacity: ' + initialCapacity;
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(loadFactor >= 0)) {
      // Inline function 'kotlin.collections.HashMap.<init>.<anonymous>' call
      var message_0 = 'Non-positive load factor: ' + loadFactor;
      throw IllegalArgumentException_init_$Create$_0(toString_3(message_0));
    }
    return $this;
  }
  function HashMap_init_$Create$_0(initialCapacity, loadFactor) {
    return HashMap_init_$Init$_1(initialCapacity, loadFactor, objectCreate(protoOf(HashMap)));
  }
  function HashMap_init_$Init$_2(initialCapacity, $this) {
    HashMap_init_$Init$_1(initialCapacity, 0.0, $this);
    return $this;
  }
  function HashMap_init_$Create$_1(initialCapacity) {
    return HashMap_init_$Init$_2(initialCapacity, objectCreate(protoOf(HashMap)));
  }
  function HashMap_init_$Init$_3(original, $this) {
    HashMap_init_$Init$_0($this);
    $this.t3(original);
    return $this;
  }
  function HashMap_init_$Create$_2(original) {
    return HashMap_init_$Init$_3(original, objectCreate(protoOf(HashMap)));
  }
  protoOf(HashMap).s7 = function () {
    this.e9_1.s7();
  };
  protoOf(HashMap).o2 = function (key) {
    return this.e9_1.l2(key);
  };
  protoOf(HashMap).s2 = function (value) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.any' call
      var tmp0_any = this.e9_1;
      var tmp;
      if (isInterface(tmp0_any, Collection)) {
        tmp = tmp0_any.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_any.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        // Inline function 'kotlin.collections.HashMap.containsValue.<anonymous>' call
        if (this.f9_1.w8(element.w(), value)) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    return tmp$ret$0;
  };
  protoOf(HashMap).u = function () {
    if (this.g9_1 == null) {
      this.g9_1 = this.i9();
    }
    return ensureNotNull(this.g9_1);
  };
  protoOf(HashMap).i9 = function () {
    return new EntrySet(this);
  };
  protoOf(HashMap).u2 = function (key) {
    return this.e9_1.u2(key);
  };
  protoOf(HashMap).z3 = function (key, value) {
    return this.e9_1.z3(key, value);
  };
  protoOf(HashMap).s8 = function (key) {
    return this.e9_1.s8(key);
  };
  protoOf(HashMap).i = function () {
    return this.e9_1.i();
  };
  function HashMap() {
    this.g9_1 = null;
  }
  function HashSet_init_$Init$($this) {
    AbstractMutableSet.call($this);
    HashSet.call($this);
    $this.j9_1 = HashMap_init_$Create$();
    return $this;
  }
  function HashSet_init_$Create$() {
    return HashSet_init_$Init$(objectCreate(protoOf(HashSet)));
  }
  function HashSet_init_$Init$_0(elements, $this) {
    AbstractMutableSet.call($this);
    HashSet.call($this);
    $this.j9_1 = HashMap_init_$Create$_1(elements.i());
    $this.j(elements);
    return $this;
  }
  function HashSet_init_$Create$_0(elements) {
    return HashSet_init_$Init$_0(elements, objectCreate(protoOf(HashSet)));
  }
  function HashSet_init_$Init$_1(initialCapacity, loadFactor, $this) {
    AbstractMutableSet.call($this);
    HashSet.call($this);
    $this.j9_1 = HashMap_init_$Create$_0(initialCapacity, loadFactor);
    return $this;
  }
  function HashSet_init_$Init$_2(initialCapacity, $this) {
    HashSet_init_$Init$_1(initialCapacity, 0.0, $this);
    return $this;
  }
  function HashSet_init_$Create$_1(initialCapacity) {
    return HashSet_init_$Init$_2(initialCapacity, objectCreate(protoOf(HashSet)));
  }
  function HashSet_init_$Init$_3(map, $this) {
    AbstractMutableSet.call($this);
    HashSet.call($this);
    $this.j9_1 = map;
    return $this;
  }
  protoOf(HashSet).a = function (element) {
    var old = this.j9_1.z3(element, this);
    return old == null;
  };
  protoOf(HashSet).s7 = function () {
    this.j9_1.s7();
  };
  protoOf(HashSet).g1 = function (element) {
    return this.j9_1.o2(element);
  };
  protoOf(HashSet).p = function () {
    return this.j9_1.p();
  };
  protoOf(HashSet).f = function () {
    return this.j9_1.v2().f();
  };
  protoOf(HashSet).i = function () {
    return this.j9_1.i();
  };
  function HashSet() {
  }
  function computeNext($this) {
    if ($this.n9_1 != null ? $this.o9_1 : false) {
      // Inline function 'kotlin.js.unsafeCast' call
      var chainSize = $this.n9_1.length;
      $this.p9_1 = $this.p9_1 + 1 | 0;
      if ($this.p9_1 < chainSize)
        return 0;
    }
    $this.m9_1 = $this.m9_1 + 1 | 0;
    if ($this.m9_1 < $this.l9_1.length) {
      $this.n9_1 = $this.r9_1.t9_1[$this.l9_1[$this.m9_1]];
      var tmp = $this;
      var tmp_0 = $this.n9_1;
      tmp.o9_1 = !(tmp_0 == null) ? isArray(tmp_0) : false;
      $this.p9_1 = 0;
      return 0;
    } else {
      $this.n9_1 = null;
      return 1;
    }
  }
  function getEntry($this, key) {
    var tmp0_elvis_lhs = getChainOrEntryOrNull($this, $this.s9_1.x8(key));
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var chainOrEntry = tmp;
    if (!(!(chainOrEntry == null) ? isArray(chainOrEntry) : false)) {
      var entry = chainOrEntry;
      if ($this.s9_1.w8(entry.v(), key)) {
        return entry;
      } else {
        return null;
      }
    } else {
      var chain = chainOrEntry;
      return findEntryInChain(chain, $this, key);
    }
  }
  function findEntryInChain(_this__u8e3s4, $this, key) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.collections.firstOrNull' call
      var inductionVariable = 0;
      var last = _this__u8e3s4.length;
      while (inductionVariable < last) {
        var element = _this__u8e3s4[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.collections.InternalHashCodeMap.findEntryInChain.<anonymous>' call
        if ($this.s9_1.w8(element.v(), key)) {
          tmp$ret$1 = element;
          break $l$block;
        }
      }
      tmp$ret$1 = null;
    }
    return tmp$ret$1;
  }
  function getChainOrEntryOrNull($this, hashCode) {
    var chainOrEntry = $this.t9_1[hashCode];
    return chainOrEntry === undefined ? null : chainOrEntry;
  }
  function InternalHashCodeMap$iterator$1(this$0) {
    this.r9_1 = this$0;
    this.k9_1 = -1;
    this.l9_1 = Object.keys(this$0.t9_1);
    this.m9_1 = -1;
    this.n9_1 = null;
    this.o9_1 = false;
    this.p9_1 = -1;
    this.q9_1 = null;
  }
  protoOf(InternalHashCodeMap$iterator$1).g = function () {
    if (this.k9_1 === -1)
      this.k9_1 = computeNext(this);
    return this.k9_1 === 0;
  };
  protoOf(InternalHashCodeMap$iterator$1).h = function () {
    if (!this.g())
      throw NoSuchElementException_init_$Create$();
    var tmp;
    if (this.o9_1) {
      // Inline function 'kotlin.js.unsafeCast' call
      tmp = this.n9_1[this.p9_1];
    } else {
      // Inline function 'kotlin.js.unsafeCast' call
      tmp = this.n9_1;
    }
    var lastEntry = tmp;
    this.q9_1 = lastEntry;
    this.k9_1 = -1;
    return lastEntry;
  };
  protoOf(InternalHashCodeMap$iterator$1).t7 = function () {
    // Inline function 'kotlin.checkNotNull' call
    var tmp0_checkNotNull = this.q9_1;
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'kotlin.checkNotNull' call
      // Inline function 'kotlin.contracts.contract' call
      if (tmp0_checkNotNull == null) {
        // Inline function 'kotlin.checkNotNull.<anonymous>' call
        var message = 'Required value was null.';
        throw IllegalStateException_init_$Create$(toString_3(message));
      } else {
        break $l$block;
      }
    }
    this.r9_1.s8(ensureNotNull(this.q9_1).v());
    this.q9_1 = null;
    this.p9_1 = this.p9_1 - 1 | 0;
  };
  function InternalHashCodeMap(equality) {
    this.s9_1 = equality;
    this.t9_1 = this.v9();
    this.u9_1 = 0;
  }
  protoOf(InternalHashCodeMap).h9 = function () {
    return this.s9_1;
  };
  protoOf(InternalHashCodeMap).i = function () {
    return this.u9_1;
  };
  protoOf(InternalHashCodeMap).z3 = function (key, value) {
    var hashCode = this.s9_1.x8(key);
    var chainOrEntry = getChainOrEntryOrNull(this, hashCode);
    if (chainOrEntry == null) {
      this.t9_1[hashCode] = new SimpleEntry(key, value);
    } else {
      if (!(!(chainOrEntry == null) ? isArray(chainOrEntry) : false)) {
        var entry = chainOrEntry;
        if (this.s9_1.w8(entry.v(), key)) {
          return entry.m8(value);
        } else {
          var tmp$ret$2;
          // Inline function 'kotlin.arrayOf' call
          // Inline function 'kotlin.js.unsafeCast' call
          // Inline function 'kotlin.js.asDynamic' call
          tmp$ret$2 = [entry, new SimpleEntry(key, value)];
          this.t9_1[hashCode] = tmp$ret$2;
          this.u9_1 = this.u9_1 + 1 | 0;
          return null;
        }
      } else {
        var chain = chainOrEntry;
        var entry_0 = findEntryInChain(chain, this, key);
        if (!(entry_0 == null)) {
          return entry_0.m8(value);
        }
        // Inline function 'kotlin.js.asDynamic' call
        chain.push(new SimpleEntry(key, value));
      }
    }
    this.u9_1 = this.u9_1 + 1 | 0;
    return null;
  };
  protoOf(InternalHashCodeMap).s8 = function (key) {
    var hashCode = this.s9_1.x8(key);
    var tmp0_elvis_lhs = getChainOrEntryOrNull(this, hashCode);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var chainOrEntry = tmp;
    if (!(!(chainOrEntry == null) ? isArray(chainOrEntry) : false)) {
      var entry = chainOrEntry;
      if (this.s9_1.w8(entry.v(), key)) {
        // Inline function 'kotlin.js.jsDeleteProperty' call
        delete this.t9_1[hashCode];
        this.u9_1 = this.u9_1 - 1 | 0;
        return entry.w();
      } else {
        return null;
      }
    } else {
      var chain = chainOrEntry;
      var inductionVariable = 0;
      var last = chain.length - 1 | 0;
      if (inductionVariable <= last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var entry_0 = chain[index];
          if (this.s9_1.w8(key, entry_0.v())) {
            if (chain.length === 1) {
              // Inline function 'kotlin.js.asDynamic' call
              chain.length = 0;
              // Inline function 'kotlin.js.jsDeleteProperty' call
              delete this.t9_1[hashCode];
            } else {
              // Inline function 'kotlin.js.asDynamic' call
              chain.splice(index, 1);
            }
            this.u9_1 = this.u9_1 - 1 | 0;
            return entry_0.w();
          }
        }
         while (inductionVariable <= last);
    }
    return null;
  };
  protoOf(InternalHashCodeMap).s7 = function () {
    this.t9_1 = this.v9();
    this.u9_1 = 0;
  };
  protoOf(InternalHashCodeMap).l2 = function (key) {
    return !(getEntry(this, key) == null);
  };
  protoOf(InternalHashCodeMap).u2 = function (key) {
    var tmp0_safe_receiver = getEntry(this, key);
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.w();
  };
  protoOf(InternalHashCodeMap).f = function () {
    return new InternalHashCodeMap$iterator$1(this);
  };
  function InternalMap() {
  }
  function EntryIterator($outer) {
    this.y9_1 = $outer;
    this.w9_1 = null;
    this.x9_1 = null;
    this.x9_1 = this.y9_1.ja_1.ga_1;
  }
  protoOf(EntryIterator).g = function () {
    return !(this.x9_1 === null);
  };
  protoOf(EntryIterator).h = function () {
    if (!this.g())
      throw NoSuchElementException_init_$Create$();
    var current = ensureNotNull(this.x9_1);
    this.w9_1 = current;
    var tmp = this;
    // Inline function 'kotlin.takeIf' call
    var tmp0_takeIf = current.ma_1;
    // Inline function 'kotlin.contracts.contract' call
    var tmp_0;
    // Inline function 'kotlin.collections.EntryIterator.next.<anonymous>' call
    if (!(tmp0_takeIf === this.y9_1.ja_1.ga_1)) {
      tmp_0 = tmp0_takeIf;
    } else {
      tmp_0 = null;
    }
    tmp.x9_1 = tmp_0;
    return current;
  };
  protoOf(EntryIterator).t7 = function () {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!(this.w9_1 == null)) {
      // Inline function 'kotlin.check.<anonymous>' call
      var message = 'Check failed.';
      throw IllegalStateException_init_$Create$(toString_3(message));
    }
    this.y9_1.r7();
    remove(ensureNotNull(this.w9_1), this.y9_1.ja_1);
    this.y9_1.ja_1.ha_1.s8(ensureNotNull(this.w9_1).v());
    this.w9_1 = null;
  };
  function Companion_10() {
    Companion_instance_10 = this;
    var tmp = this;
    // Inline function 'kotlin.also' call
    var tmp0_also = LinkedHashMap_init_$Create$_1(0);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.Companion.Empty.<anonymous>' call
    tmp0_also.ia_1 = true;
    tmp.pa_1 = tmp0_also;
  }
  var Companion_instance_10;
  function Companion_getInstance_10() {
    if (Companion_instance_10 == null)
      new Companion_10();
    return Companion_instance_10;
  }
  function ChainEntry($outer, key, value) {
    this.oa_1 = $outer;
    SimpleEntry.call(this, key, value);
    this.ma_1 = null;
    this.na_1 = null;
  }
  protoOf(ChainEntry).m8 = function (newValue) {
    this.oa_1.r7();
    return protoOf(SimpleEntry).m8.call(this, newValue);
  };
  function EntrySet_0($outer) {
    this.ja_1 = $outer;
    AbstractEntrySet.call(this);
  }
  protoOf(EntrySet_0).z8 = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Add is not supported on entries');
  };
  protoOf(EntrySet_0).a = function (element) {
    return this.z8((!(element == null) ? isInterface(element, MutableEntry) : false) ? element : THROW_CCE());
  };
  protoOf(EntrySet_0).s7 = function () {
    this.ja_1.s7();
  };
  protoOf(EntrySet_0).n8 = function (element) {
    return this.ja_1.t2(element);
  };
  protoOf(EntrySet_0).f = function () {
    return new EntryIterator(this);
  };
  protoOf(EntrySet_0).i = function () {
    return this.ja_1.i();
  };
  protoOf(EntrySet_0).r7 = function () {
    return this.ja_1.r7();
  };
  function addToEnd(_this__u8e3s4, $this) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(_this__u8e3s4.ma_1 == null ? _this__u8e3s4.na_1 == null : false)) {
      // Inline function 'kotlin.check.<anonymous>' call
      var message = 'Check failed.';
      throw IllegalStateException_init_$Create$(toString_3(message));
    }
    var _head = $this.ga_1;
    if (_head == null) {
      $this.ga_1 = _this__u8e3s4;
      _this__u8e3s4.ma_1 = _this__u8e3s4;
      _this__u8e3s4.na_1 = _this__u8e3s4;
    } else {
      // Inline function 'kotlin.checkNotNull' call
      var tmp1_checkNotNull = _head.na_1;
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$2;
      $l$block: {
        // Inline function 'kotlin.checkNotNull' call
        // Inline function 'kotlin.contracts.contract' call
        if (tmp1_checkNotNull == null) {
          // Inline function 'kotlin.checkNotNull.<anonymous>' call
          var message_0 = 'Required value was null.';
          throw IllegalStateException_init_$Create$(toString_3(message_0));
        } else {
          tmp$ret$2 = tmp1_checkNotNull;
          break $l$block;
        }
      }
      var _tail = tmp$ret$2;
      _this__u8e3s4.na_1 = _tail;
      _this__u8e3s4.ma_1 = _head;
      _head.na_1 = _this__u8e3s4;
      _tail.ma_1 = _this__u8e3s4;
    }
  }
  function remove(_this__u8e3s4, $this) {
    if (_this__u8e3s4.ma_1 === _this__u8e3s4) {
      $this.ga_1 = null;
    } else {
      if ($this.ga_1 === _this__u8e3s4) {
        $this.ga_1 = _this__u8e3s4.ma_1;
      }
      ensureNotNull(_this__u8e3s4.ma_1).na_1 = _this__u8e3s4.na_1;
      ensureNotNull(_this__u8e3s4.na_1).ma_1 = _this__u8e3s4.ma_1;
    }
    _this__u8e3s4.ma_1 = null;
    _this__u8e3s4.na_1 = null;
  }
  function LinkedHashMap_init_$Init$($this) {
    HashMap_init_$Init$_0($this);
    LinkedHashMap.call($this);
    $this.ha_1 = HashMap_init_$Create$();
    return $this;
  }
  function LinkedHashMap_init_$Create$() {
    return LinkedHashMap_init_$Init$(objectCreate(protoOf(LinkedHashMap)));
  }
  function LinkedHashMap_init_$Init$_0(initialCapacity, loadFactor, $this) {
    HashMap_init_$Init$_1(initialCapacity, loadFactor, $this);
    LinkedHashMap.call($this);
    $this.ha_1 = HashMap_init_$Create$();
    return $this;
  }
  function LinkedHashMap_init_$Create$_0(initialCapacity, loadFactor) {
    return LinkedHashMap_init_$Init$_0(initialCapacity, loadFactor, objectCreate(protoOf(LinkedHashMap)));
  }
  function LinkedHashMap_init_$Init$_1(initialCapacity, $this) {
    LinkedHashMap_init_$Init$_0(initialCapacity, 0.0, $this);
    return $this;
  }
  function LinkedHashMap_init_$Create$_1(initialCapacity) {
    return LinkedHashMap_init_$Init$_1(initialCapacity, objectCreate(protoOf(LinkedHashMap)));
  }
  function LinkedHashMap_init_$Init$_2(original, $this) {
    HashMap_init_$Init$_0($this);
    LinkedHashMap.call($this);
    $this.ha_1 = HashMap_init_$Create$();
    $this.t3(original);
    return $this;
  }
  function LinkedHashMap_init_$Create$_2(original) {
    return LinkedHashMap_init_$Init$_2(original, objectCreate(protoOf(LinkedHashMap)));
  }
  protoOf(LinkedHashMap).qa = function () {
    this.r7();
    this.ia_1 = true;
    var tmp;
    if (this.i() > 0) {
      tmp = this;
    } else {
      var tmp_0 = Companion_getInstance_10().pa_1;
      tmp = isInterface(tmp_0, Map) ? tmp_0 : THROW_CCE();
    }
    return tmp;
  };
  protoOf(LinkedHashMap).s7 = function () {
    this.r7();
    this.ha_1.s7();
    this.ga_1 = null;
  };
  protoOf(LinkedHashMap).o2 = function (key) {
    return this.ha_1.o2(key);
  };
  protoOf(LinkedHashMap).s2 = function (value) {
    var tmp0_elvis_lhs = this.ga_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var node = tmp;
    do {
      if (equals_1(node.w(), value)) {
        return true;
      }
      node = ensureNotNull(node.ma_1);
    }
     while (!(node === this.ga_1));
    return false;
  };
  protoOf(LinkedHashMap).i9 = function () {
    return new EntrySet_0(this);
  };
  protoOf(LinkedHashMap).u2 = function (key) {
    var tmp0_safe_receiver = this.ha_1.u2(key);
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.w();
  };
  protoOf(LinkedHashMap).z3 = function (key, value) {
    this.r7();
    var old = this.ha_1.u2(key);
    if (old == null) {
      var newEntry = new ChainEntry(this, key, value);
      this.ha_1.z3(key, newEntry);
      addToEnd(newEntry, this);
      return null;
    } else {
      return old.m8(value);
    }
  };
  protoOf(LinkedHashMap).s8 = function (key) {
    this.r7();
    var entry = this.ha_1.s8(key);
    if (!(entry == null)) {
      remove(entry, this);
      return entry.w();
    }
    return null;
  };
  protoOf(LinkedHashMap).i = function () {
    return this.ha_1.i();
  };
  protoOf(LinkedHashMap).r7 = function () {
    if (this.ia_1)
      throw UnsupportedOperationException_init_$Create$();
  };
  function LinkedHashMap() {
    Companion_getInstance_10();
    this.ga_1 = null;
    this.ia_1 = false;
  }
  function Companion_11() {
    Companion_instance_11 = this;
    var tmp = this;
    // Inline function 'kotlin.also' call
    var tmp0_also = LinkedHashSet_init_$Create$_1(0);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.Companion.Empty.<anonymous>' call
    var tmp_0 = tmp0_also.j9_1;
    (tmp_0 instanceof LinkedHashMap ? tmp_0 : THROW_CCE()).qa();
    tmp.ra_1 = tmp0_also;
  }
  var Companion_instance_11;
  function Companion_getInstance_11() {
    if (Companion_instance_11 == null)
      new Companion_11();
    return Companion_instance_11;
  }
  function LinkedHashSet_init_$Init$($this) {
    HashSet_init_$Init$_3(LinkedHashMap_init_$Create$(), $this);
    LinkedHashSet.call($this);
    return $this;
  }
  function LinkedHashSet_init_$Create$() {
    return LinkedHashSet_init_$Init$(objectCreate(protoOf(LinkedHashSet)));
  }
  function LinkedHashSet_init_$Init$_0(elements, $this) {
    HashSet_init_$Init$_3(LinkedHashMap_init_$Create$(), $this);
    LinkedHashSet.call($this);
    $this.j(elements);
    return $this;
  }
  function LinkedHashSet_init_$Create$_0(elements) {
    return LinkedHashSet_init_$Init$_0(elements, objectCreate(protoOf(LinkedHashSet)));
  }
  function LinkedHashSet_init_$Init$_1(initialCapacity, loadFactor, $this) {
    HashSet_init_$Init$_3(LinkedHashMap_init_$Create$_0(initialCapacity, loadFactor), $this);
    LinkedHashSet.call($this);
    return $this;
  }
  function LinkedHashSet_init_$Init$_2(initialCapacity, $this) {
    LinkedHashSet_init_$Init$_1(initialCapacity, 0.0, $this);
    return $this;
  }
  function LinkedHashSet_init_$Create$_1(initialCapacity) {
    return LinkedHashSet_init_$Init$_2(initialCapacity, objectCreate(protoOf(LinkedHashSet)));
  }
  protoOf(LinkedHashSet).r7 = function () {
    return this.j9_1.r7();
  };
  function LinkedHashSet() {
    Companion_getInstance_11();
  }
  function RandomAccess() {
  }
  function get_output() {
    _init_properties_console_kt__rfg7jv();
    return output;
  }
  var output;
  function BaseOutput() {
  }
  protoOf(BaseOutput).ta = function () {
    this.ua('\n');
  };
  protoOf(BaseOutput).va = function (message) {
    this.ua(message);
    this.ta();
  };
  function NodeJsOutput(outputStream) {
    BaseOutput.call(this);
    this.wa_1 = outputStream;
  }
  protoOf(NodeJsOutput).ua = function (message) {
    // Inline function 'kotlin.io.String' call
    var messageString = String(message);
    this.wa_1.write(messageString);
  };
  function BufferedOutputToConsoleLog() {
    BufferedOutput.call(this);
  }
  protoOf(BufferedOutputToConsoleLog).ua = function (message) {
    // Inline function 'kotlin.io.String' call
    var s = String(message);
    // Inline function 'kotlin.text.nativeLastIndexOf' call
    // Inline function 'kotlin.js.asDynamic' call
    var i = s.lastIndexOf('\n', 0);
    if (i >= 0) {
      var tmp = this;
      var tmp_0 = this.ya_1;
      // Inline function 'kotlin.text.substring' call
      // Inline function 'kotlin.js.asDynamic' call
      tmp.ya_1 = tmp_0 + s.substring(0, i);
      this.za();
      // Inline function 'kotlin.text.substring' call
      var tmp2_substring = s;
      var tmp3_substring = i + 1 | 0;
      // Inline function 'kotlin.js.asDynamic' call
      s = tmp2_substring.substring(tmp3_substring);
    }
    this.ya_1 = this.ya_1 + s;
  };
  protoOf(BufferedOutputToConsoleLog).za = function () {
    console.log(this.ya_1);
    this.ya_1 = '';
  };
  function BufferedOutput() {
    BaseOutput.call(this);
    this.ya_1 = '';
  }
  protoOf(BufferedOutput).ua = function (message) {
    var tmp = this;
    var tmp_0 = this.ya_1;
    // Inline function 'kotlin.io.String' call
    tmp.ya_1 = tmp_0 + String(message);
  };
  function println(message) {
    _init_properties_console_kt__rfg7jv();
    get_output().va(message);
  }
  var properties_initialized_console_kt_gll9dl;
  function _init_properties_console_kt__rfg7jv() {
    if (!properties_initialized_console_kt_gll9dl) {
      properties_initialized_console_kt_gll9dl = true;
      // Inline function 'kotlin.run' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlin.io.output.<anonymous>' call
      var isNode = typeof process !== 'undefined' && process.versions && !!process.versions.node;
      output = isNode ? new NodeJsOutput(process.stdout) : new BufferedOutputToConsoleLog();
    }
  }
  function eachCount(_this__u8e3s4) {
    // Inline function 'kotlin.collections.fold' call
    // Inline function 'kotlin.collections.aggregate' call
    // Inline function 'kotlin.collections.aggregateTo' call
    // Inline function 'kotlin.collections.mutableMapOf' call
    var tmp0_aggregateTo = LinkedHashMap_init_$Create$();
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = _this__u8e3s4.ab();
    while (tmp0_iterator.g()) {
      var e = tmp0_iterator.h();
      var key = _this__u8e3s4.bb(e);
      var accumulator = tmp0_aggregateTo.u2(key);
      // Inline function 'kotlin.collections.set' call
      // Inline function 'kotlin.collections.fold.<anonymous>' call
      // Inline function 'kotlin.collections.eachCount.<anonymous>' call
      var tmp;
      if (accumulator == null ? !tmp0_aggregateTo.o2(key) : false) {
        tmp = 0;
      } else {
        tmp = (accumulator == null ? true : isObject(accumulator)) ? accumulator : THROW_CCE();
      }
      var tmp1_set = tmp + 1 | 0;
      tmp0_aggregateTo.z3(key, tmp1_set);
    }
    return tmp0_aggregateTo;
  }
  function abs(n) {
    return n.v4(new Long(0, 0)) < 0 ? n.t4() : n;
  }
  function abs_0(n) {
    return n < 0 ? -n | 0 | 0 : n;
  }
  function isNaN_0(_this__u8e3s4) {
    return !(_this__u8e3s4 === _this__u8e3s4);
  }
  function isFinite(_this__u8e3s4) {
    return !isInfinite(_this__u8e3s4) ? !isNaN_1(_this__u8e3s4) : false;
  }
  function isFinite_0(_this__u8e3s4) {
    return !isInfinite_0(_this__u8e3s4) ? !isNaN_0(_this__u8e3s4) : false;
  }
  function isInfinite(_this__u8e3s4) {
    var tmp;
    FloatCompanionObject_getInstance();
    if (_this__u8e3s4 === Infinity) {
      tmp = true;
    } else {
      FloatCompanionObject_getInstance();
      tmp = _this__u8e3s4 === -Infinity;
    }
    return tmp;
  }
  function isNaN_1(_this__u8e3s4) {
    return !(_this__u8e3s4 === _this__u8e3s4);
  }
  function isInfinite_0(_this__u8e3s4) {
    var tmp;
    DoubleCompanionObject_getInstance();
    if (_this__u8e3s4 === Infinity) {
      tmp = true;
    } else {
      DoubleCompanionObject_getInstance();
      tmp = _this__u8e3s4 === -Infinity;
    }
    return tmp;
  }
  function get_js(_this__u8e3s4) {
    return (_this__u8e3s4 instanceof KClassImpl ? _this__u8e3s4 : THROW_CCE()).db();
  }
  function KClass() {
  }
  function KClassImpl(jClass) {
    this.cb_1 = jClass;
  }
  protoOf(KClassImpl).db = function () {
    return this.cb_1;
  };
  protoOf(KClassImpl).equals = function (other) {
    var tmp;
    if (other instanceof KClassImpl) {
      tmp = equals_1(this.db(), other.db());
    } else {
      tmp = false;
    }
    return tmp;
  };
  protoOf(KClassImpl).hashCode = function () {
    var tmp0_safe_receiver = this.eb();
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : getStringHashCode(tmp0_safe_receiver);
    return tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
  };
  protoOf(KClassImpl).toString = function () {
    return 'class ' + this.eb();
  };
  function PrimitiveKClassImpl(jClass, givenSimpleName, isInstanceFunction) {
    KClassImpl.call(this, jClass);
    this.hb_1 = givenSimpleName;
    this.ib_1 = isInstanceFunction;
  }
  protoOf(PrimitiveKClassImpl).equals = function (other) {
    if (!(other instanceof PrimitiveKClassImpl))
      return false;
    return protoOf(KClassImpl).equals.call(this, other) ? this.hb_1 === other.hb_1 : false;
  };
  protoOf(PrimitiveKClassImpl).eb = function () {
    return this.hb_1;
  };
  protoOf(PrimitiveKClassImpl).fb = function (value) {
    return this.ib_1(value);
  };
  function NothingKClassImpl() {
    NothingKClassImpl_instance = this;
    KClassImpl.call(this, Object);
    this.kb_1 = 'Nothing';
  }
  protoOf(NothingKClassImpl).eb = function () {
    return this.kb_1;
  };
  protoOf(NothingKClassImpl).fb = function (value) {
    return false;
  };
  protoOf(NothingKClassImpl).db = function () {
    throw UnsupportedOperationException_init_$Create$_0("There's no native JS class for Nothing type");
  };
  protoOf(NothingKClassImpl).equals = function (other) {
    return other === this;
  };
  protoOf(NothingKClassImpl).hashCode = function () {
    return 0;
  };
  var NothingKClassImpl_instance;
  function NothingKClassImpl_getInstance() {
    if (NothingKClassImpl_instance == null)
      new NothingKClassImpl();
    return NothingKClassImpl_instance;
  }
  function ErrorKClass() {
  }
  protoOf(ErrorKClass).eb = function () {
    throw IllegalStateException_init_$Create$('Unknown simpleName for ErrorKClass');
  };
  protoOf(ErrorKClass).fb = function (value) {
    throw IllegalStateException_init_$Create$("Can's check isInstance on ErrorKClass");
  };
  protoOf(ErrorKClass).equals = function (other) {
    return other === this;
  };
  protoOf(ErrorKClass).hashCode = function () {
    return 0;
  };
  function SimpleKClassImpl(jClass) {
    KClassImpl.call(this, jClass);
    var tmp = this;
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp0_safe_receiver = jClass.$metadata$;
    tmp.mb_1 = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.simpleName;
  }
  protoOf(SimpleKClassImpl).eb = function () {
    return this.mb_1;
  };
  protoOf(SimpleKClassImpl).fb = function (value) {
    return jsIsType(value, this.db());
  };
  function KProperty1() {
  }
  function KProperty0() {
  }
  function createKType(classifier, arguments_0, isMarkedNullable) {
    return new KTypeImpl(classifier, asList(arguments_0), isMarkedNullable);
  }
  function createInvariantKTypeProjection(type) {
    return Companion_getInstance_4().m4(type);
  }
  function KTypeImpl(classifier, arguments_0, isMarkedNullable) {
    this.nb_1 = classifier;
    this.ob_1 = arguments_0;
    this.pb_1 = isMarkedNullable;
  }
  protoOf(KTypeImpl).qb = function () {
    return this.nb_1;
  };
  protoOf(KTypeImpl).rb = function () {
    return this.ob_1;
  };
  protoOf(KTypeImpl).sb = function () {
    return this.pb_1;
  };
  protoOf(KTypeImpl).equals = function (other) {
    var tmp;
    var tmp_0;
    var tmp_1;
    if (other instanceof KTypeImpl) {
      tmp_1 = equals_1(this.nb_1, other.nb_1);
    } else {
      tmp_1 = false;
    }
    if (tmp_1) {
      tmp_0 = equals_1(this.ob_1, other.ob_1);
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = this.pb_1 === other.pb_1;
    } else {
      tmp = false;
    }
    return tmp;
  };
  protoOf(KTypeImpl).hashCode = function () {
    return imul(imul(hashCode(this.nb_1), 31) + hashCode(this.ob_1) | 0, 31) + (this.pb_1 | 0) | 0;
  };
  protoOf(KTypeImpl).toString = function () {
    var tmp = this.nb_1;
    var kClass = isInterface(tmp, KClass) ? tmp : null;
    var classifierName = kClass == null ? toString_3(this.nb_1) : !(kClass.eb() == null) ? kClass.eb() : '(non-denotable type)';
    var args = this.ob_1.p() ? '' : joinToString_0(this.ob_1, ', ', '<', '>');
    var nullable = this.pb_1 ? '?' : '';
    return plus_1(classifierName, args) + nullable;
  };
  function get_functionClasses() {
    _init_properties_primitives_kt__3fums4();
    return functionClasses;
  }
  var functionClasses;
  function PrimitiveClasses$anyClass$lambda(it) {
    return isObject(it);
  }
  function PrimitiveClasses$numberClass$lambda(it) {
    return isNumber(it);
  }
  function PrimitiveClasses$booleanClass$lambda(it) {
    return !(it == null) ? typeof it === 'boolean' : false;
  }
  function PrimitiveClasses$byteClass$lambda(it) {
    return !(it == null) ? typeof it === 'number' : false;
  }
  function PrimitiveClasses$shortClass$lambda(it) {
    return !(it == null) ? typeof it === 'number' : false;
  }
  function PrimitiveClasses$intClass$lambda(it) {
    return !(it == null) ? typeof it === 'number' : false;
  }
  function PrimitiveClasses$floatClass$lambda(it) {
    return !(it == null) ? typeof it === 'number' : false;
  }
  function PrimitiveClasses$doubleClass$lambda(it) {
    return !(it == null) ? typeof it === 'number' : false;
  }
  function PrimitiveClasses$arrayClass$lambda(it) {
    return !(it == null) ? isArray(it) : false;
  }
  function PrimitiveClasses$stringClass$lambda(it) {
    return !(it == null) ? typeof it === 'string' : false;
  }
  function PrimitiveClasses$throwableClass$lambda(it) {
    return it instanceof Error;
  }
  function PrimitiveClasses$booleanArrayClass$lambda(it) {
    return !(it == null) ? isBooleanArray(it) : false;
  }
  function PrimitiveClasses$charArrayClass$lambda(it) {
    return !(it == null) ? isCharArray(it) : false;
  }
  function PrimitiveClasses$byteArrayClass$lambda(it) {
    return !(it == null) ? isByteArray(it) : false;
  }
  function PrimitiveClasses$shortArrayClass$lambda(it) {
    return !(it == null) ? isShortArray(it) : false;
  }
  function PrimitiveClasses$intArrayClass$lambda(it) {
    return !(it == null) ? isIntArray(it) : false;
  }
  function PrimitiveClasses$longArrayClass$lambda(it) {
    return !(it == null) ? isLongArray(it) : false;
  }
  function PrimitiveClasses$floatArrayClass$lambda(it) {
    return !(it == null) ? isFloatArray(it) : false;
  }
  function PrimitiveClasses$doubleArrayClass$lambda(it) {
    return !(it == null) ? isDoubleArray(it) : false;
  }
  function PrimitiveClasses$functionClass$lambda($arity) {
    return function (it) {
      var tmp;
      if (typeof it === 'function') {
        var tmp$ret$0;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$0 = it;
        tmp = tmp$ret$0.length === $arity;
      } else {
        tmp = false;
      }
      return tmp;
    };
  }
  function PrimitiveClasses() {
    PrimitiveClasses_instance = this;
    var tmp = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_0 = Object;
    tmp.anyClass = new PrimitiveKClassImpl(tmp_0, 'Any', PrimitiveClasses$anyClass$lambda);
    var tmp_1 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_2 = Number;
    tmp_1.numberClass = new PrimitiveKClassImpl(tmp_2, 'Number', PrimitiveClasses$numberClass$lambda);
    this.nothingClass = NothingKClassImpl_getInstance();
    var tmp_3 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_4 = Boolean;
    tmp_3.booleanClass = new PrimitiveKClassImpl(tmp_4, 'Boolean', PrimitiveClasses$booleanClass$lambda);
    var tmp_5 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_6 = Number;
    tmp_5.byteClass = new PrimitiveKClassImpl(tmp_6, 'Byte', PrimitiveClasses$byteClass$lambda);
    var tmp_7 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_8 = Number;
    tmp_7.shortClass = new PrimitiveKClassImpl(tmp_8, 'Short', PrimitiveClasses$shortClass$lambda);
    var tmp_9 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_10 = Number;
    tmp_9.intClass = new PrimitiveKClassImpl(tmp_10, 'Int', PrimitiveClasses$intClass$lambda);
    var tmp_11 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_12 = Number;
    tmp_11.floatClass = new PrimitiveKClassImpl(tmp_12, 'Float', PrimitiveClasses$floatClass$lambda);
    var tmp_13 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_14 = Number;
    tmp_13.doubleClass = new PrimitiveKClassImpl(tmp_14, 'Double', PrimitiveClasses$doubleClass$lambda);
    var tmp_15 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_16 = Array;
    tmp_15.arrayClass = new PrimitiveKClassImpl(tmp_16, 'Array', PrimitiveClasses$arrayClass$lambda);
    var tmp_17 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_18 = String;
    tmp_17.stringClass = new PrimitiveKClassImpl(tmp_18, 'String', PrimitiveClasses$stringClass$lambda);
    var tmp_19 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_20 = Error;
    tmp_19.throwableClass = new PrimitiveKClassImpl(tmp_20, 'Throwable', PrimitiveClasses$throwableClass$lambda);
    var tmp_21 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_22 = Array;
    tmp_21.booleanArrayClass = new PrimitiveKClassImpl(tmp_22, 'BooleanArray', PrimitiveClasses$booleanArrayClass$lambda);
    var tmp_23 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_24 = Uint16Array;
    tmp_23.charArrayClass = new PrimitiveKClassImpl(tmp_24, 'CharArray', PrimitiveClasses$charArrayClass$lambda);
    var tmp_25 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_26 = Int8Array;
    tmp_25.byteArrayClass = new PrimitiveKClassImpl(tmp_26, 'ByteArray', PrimitiveClasses$byteArrayClass$lambda);
    var tmp_27 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_28 = Int16Array;
    tmp_27.shortArrayClass = new PrimitiveKClassImpl(tmp_28, 'ShortArray', PrimitiveClasses$shortArrayClass$lambda);
    var tmp_29 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_30 = Int32Array;
    tmp_29.intArrayClass = new PrimitiveKClassImpl(tmp_30, 'IntArray', PrimitiveClasses$intArrayClass$lambda);
    var tmp_31 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_32 = Array;
    tmp_31.longArrayClass = new PrimitiveKClassImpl(tmp_32, 'LongArray', PrimitiveClasses$longArrayClass$lambda);
    var tmp_33 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_34 = Float32Array;
    tmp_33.floatArrayClass = new PrimitiveKClassImpl(tmp_34, 'FloatArray', PrimitiveClasses$floatArrayClass$lambda);
    var tmp_35 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_36 = Float64Array;
    tmp_35.doubleArrayClass = new PrimitiveKClassImpl(tmp_36, 'DoubleArray', PrimitiveClasses$doubleArrayClass$lambda);
  }
  protoOf(PrimitiveClasses).tb = function () {
    return this.anyClass;
  };
  protoOf(PrimitiveClasses).ub = function () {
    return this.numberClass;
  };
  protoOf(PrimitiveClasses).vb = function () {
    return this.nothingClass;
  };
  protoOf(PrimitiveClasses).wb = function () {
    return this.booleanClass;
  };
  protoOf(PrimitiveClasses).xb = function () {
    return this.byteClass;
  };
  protoOf(PrimitiveClasses).yb = function () {
    return this.shortClass;
  };
  protoOf(PrimitiveClasses).zb = function () {
    return this.intClass;
  };
  protoOf(PrimitiveClasses).ac = function () {
    return this.floatClass;
  };
  protoOf(PrimitiveClasses).bc = function () {
    return this.doubleClass;
  };
  protoOf(PrimitiveClasses).cc = function () {
    return this.arrayClass;
  };
  protoOf(PrimitiveClasses).dc = function () {
    return this.stringClass;
  };
  protoOf(PrimitiveClasses).ec = function () {
    return this.throwableClass;
  };
  protoOf(PrimitiveClasses).fc = function () {
    return this.booleanArrayClass;
  };
  protoOf(PrimitiveClasses).gc = function () {
    return this.charArrayClass;
  };
  protoOf(PrimitiveClasses).hc = function () {
    return this.byteArrayClass;
  };
  protoOf(PrimitiveClasses).ic = function () {
    return this.shortArrayClass;
  };
  protoOf(PrimitiveClasses).jc = function () {
    return this.intArrayClass;
  };
  protoOf(PrimitiveClasses).kc = function () {
    return this.longArrayClass;
  };
  protoOf(PrimitiveClasses).lc = function () {
    return this.floatArrayClass;
  };
  protoOf(PrimitiveClasses).mc = function () {
    return this.doubleArrayClass;
  };
  protoOf(PrimitiveClasses).functionClass = function (arity) {
    var tmp0_elvis_lhs = get_functionClasses()[arity];
    var tmp;
    if (tmp0_elvis_lhs == null) {
      // Inline function 'kotlin.run' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlin.reflect.js.internal.PrimitiveClasses.functionClass.<anonymous>' call
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp_0 = Function;
      var tmp_1 = 'Function' + arity;
      var result = new PrimitiveKClassImpl(tmp_0, tmp_1, PrimitiveClasses$functionClass$lambda(arity));
      // Inline function 'kotlin.js.asDynamic' call
      get_functionClasses()[arity] = result;
      tmp = result;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  var PrimitiveClasses_instance;
  function PrimitiveClasses_getInstance() {
    if (PrimitiveClasses_instance == null)
      new PrimitiveClasses();
    return PrimitiveClasses_instance;
  }
  var properties_initialized_primitives_kt_jle18u;
  function _init_properties_primitives_kt__3fums4() {
    if (!properties_initialized_primitives_kt_jle18u) {
      properties_initialized_primitives_kt_jle18u = true;
      // Inline function 'kotlin.arrayOfNulls' call
      functionClasses = fillArrayVal(Array(0), null);
    }
  }
  function getKClass(jClass) {
    var tmp;
    if (Array.isArray(jClass)) {
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      tmp = getKClassM(jClass);
    } else {
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      tmp = getKClass1(jClass);
    }
    return tmp;
  }
  function getKClassM(jClasses) {
    var tmp;
    switch (jClasses.length) {
      case 1:
        tmp = getKClass1(jClasses[0]);
        break;
      case 0:
        // Inline function 'kotlin.js.unsafeCast' call

        // Inline function 'kotlin.js.asDynamic' call

        tmp = NothingKClassImpl_getInstance();
        break;
      default:
        // Inline function 'kotlin.js.unsafeCast' call

        // Inline function 'kotlin.js.asDynamic' call

        tmp = new ErrorKClass();
        break;
    }
    return tmp;
  }
  function getKClass1(jClass) {
    if (jClass === String) {
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      return PrimitiveClasses_getInstance().stringClass;
    }
    // Inline function 'kotlin.js.asDynamic' call
    var metadata = jClass.$metadata$;
    var tmp;
    if (metadata != null) {
      var tmp_0;
      if (metadata.$kClass$ == null) {
        var kClass = new SimpleKClassImpl(jClass);
        metadata.$kClass$ = kClass;
        tmp_0 = kClass;
      } else {
        tmp_0 = metadata.$kClass$;
      }
      tmp = tmp_0;
    } else {
      tmp = new SimpleKClassImpl(jClass);
    }
    return tmp;
  }
  function getKClassFromExpression(e) {
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp;
    switch (typeof e) {
      case 'string':
        tmp = PrimitiveClasses_getInstance().stringClass;
        break;
      case 'number':
        var tmp_0;
        // Inline function 'kotlin.js.asDynamic' call

        // Inline function 'kotlin.js.jsBitwiseOr' call

        if ((e | 0) === e) {
          tmp_0 = PrimitiveClasses_getInstance().intClass;
        } else {
          tmp_0 = PrimitiveClasses_getInstance().doubleClass;
        }

        tmp = tmp_0;
        break;
      case 'boolean':
        tmp = PrimitiveClasses_getInstance().booleanClass;
        break;
      case 'function':
        var tmp_1 = PrimitiveClasses_getInstance();
        // Inline function 'kotlin.js.asDynamic' call

        tmp = tmp_1.functionClass(e.length);
        break;
      default:
        var tmp_2;
        if (isBooleanArray(e)) {
          tmp_2 = PrimitiveClasses_getInstance().booleanArrayClass;
        } else {
          if (isCharArray(e)) {
            tmp_2 = PrimitiveClasses_getInstance().charArrayClass;
          } else {
            if (isByteArray(e)) {
              tmp_2 = PrimitiveClasses_getInstance().byteArrayClass;
            } else {
              if (isShortArray(e)) {
                tmp_2 = PrimitiveClasses_getInstance().shortArrayClass;
              } else {
                if (isIntArray(e)) {
                  tmp_2 = PrimitiveClasses_getInstance().intArrayClass;
                } else {
                  if (isLongArray(e)) {
                    tmp_2 = PrimitiveClasses_getInstance().longArrayClass;
                  } else {
                    if (isFloatArray(e)) {
                      tmp_2 = PrimitiveClasses_getInstance().floatArrayClass;
                    } else {
                      if (isDoubleArray(e)) {
                        tmp_2 = PrimitiveClasses_getInstance().doubleArrayClass;
                      } else {
                        if (isInterface(e, KClass)) {
                          tmp_2 = getKClass(KClass);
                        } else {
                          if (isArray(e)) {
                            tmp_2 = PrimitiveClasses_getInstance().arrayClass;
                          } else {
                            var constructor = Object.getPrototypeOf(e).constructor;
                            var tmp_3;
                            if (constructor === Object) {
                              tmp_3 = PrimitiveClasses_getInstance().anyClass;
                            } else if (constructor === Error) {
                              tmp_3 = PrimitiveClasses_getInstance().throwableClass;
                            } else {
                              var jsClass = constructor;
                              tmp_3 = getKClass1(jsClass);
                            }
                            tmp_2 = tmp_3;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }

        tmp = tmp_2;
        break;
    }
    // Inline function 'kotlin.js.asDynamic' call
    return tmp;
  }
  var CharCategory_UNASSIGNED_instance;
  var CharCategory_UPPERCASE_LETTER_instance;
  var CharCategory_LOWERCASE_LETTER_instance;
  var CharCategory_TITLECASE_LETTER_instance;
  var CharCategory_MODIFIER_LETTER_instance;
  var CharCategory_OTHER_LETTER_instance;
  var CharCategory_NON_SPACING_MARK_instance;
  var CharCategory_ENCLOSING_MARK_instance;
  var CharCategory_COMBINING_SPACING_MARK_instance;
  var CharCategory_DECIMAL_DIGIT_NUMBER_instance;
  var CharCategory_LETTER_NUMBER_instance;
  var CharCategory_OTHER_NUMBER_instance;
  var CharCategory_SPACE_SEPARATOR_instance;
  var CharCategory_LINE_SEPARATOR_instance;
  var CharCategory_PARAGRAPH_SEPARATOR_instance;
  var CharCategory_CONTROL_instance;
  var CharCategory_FORMAT_instance;
  var CharCategory_PRIVATE_USE_instance;
  var CharCategory_SURROGATE_instance;
  var CharCategory_DASH_PUNCTUATION_instance;
  var CharCategory_START_PUNCTUATION_instance;
  var CharCategory_END_PUNCTUATION_instance;
  var CharCategory_CONNECTOR_PUNCTUATION_instance;
  var CharCategory_OTHER_PUNCTUATION_instance;
  var CharCategory_MATH_SYMBOL_instance;
  var CharCategory_CURRENCY_SYMBOL_instance;
  var CharCategory_MODIFIER_SYMBOL_instance;
  var CharCategory_OTHER_SYMBOL_instance;
  var CharCategory_INITIAL_QUOTE_PUNCTUATION_instance;
  var CharCategory_FINAL_QUOTE_PUNCTUATION_instance;
  function Companion_12() {
    Companion_instance_12 = this;
  }
  protoOf(Companion_12).nc = function (category) {
    var tmp;
    if (0 <= category ? category <= 16 : false) {
      tmp = values()[category];
    } else if (18 <= category ? category <= 30 : false) {
      tmp = values()[category - 1 | 0];
    } else {
      throw IllegalArgumentException_init_$Create$_0('Category #' + category + ' is not defined.');
    }
    return tmp;
  };
  var Companion_instance_12;
  function Companion_getInstance_12() {
    CharCategory_initEntries();
    if (Companion_instance_12 == null)
      new Companion_12();
    return Companion_instance_12;
  }
  function values() {
    return [CharCategory_UNASSIGNED_getInstance(), CharCategory_UPPERCASE_LETTER_getInstance(), CharCategory_LOWERCASE_LETTER_getInstance(), CharCategory_TITLECASE_LETTER_getInstance(), CharCategory_MODIFIER_LETTER_getInstance(), CharCategory_OTHER_LETTER_getInstance(), CharCategory_NON_SPACING_MARK_getInstance(), CharCategory_ENCLOSING_MARK_getInstance(), CharCategory_COMBINING_SPACING_MARK_getInstance(), CharCategory_DECIMAL_DIGIT_NUMBER_getInstance(), CharCategory_LETTER_NUMBER_getInstance(), CharCategory_OTHER_NUMBER_getInstance(), CharCategory_SPACE_SEPARATOR_getInstance(), CharCategory_LINE_SEPARATOR_getInstance(), CharCategory_PARAGRAPH_SEPARATOR_getInstance(), CharCategory_CONTROL_getInstance(), CharCategory_FORMAT_getInstance(), CharCategory_PRIVATE_USE_getInstance(), CharCategory_SURROGATE_getInstance(), CharCategory_DASH_PUNCTUATION_getInstance(), CharCategory_START_PUNCTUATION_getInstance(), CharCategory_END_PUNCTUATION_getInstance(), CharCategory_CONNECTOR_PUNCTUATION_getInstance(), CharCategory_OTHER_PUNCTUATION_getInstance(), CharCategory_MATH_SYMBOL_getInstance(), CharCategory_CURRENCY_SYMBOL_getInstance(), CharCategory_MODIFIER_SYMBOL_getInstance(), CharCategory_OTHER_SYMBOL_getInstance(), CharCategory_INITIAL_QUOTE_PUNCTUATION_getInstance(), CharCategory_FINAL_QUOTE_PUNCTUATION_getInstance()];
  }
  var CharCategory_entriesInitialized;
  function CharCategory_initEntries() {
    if (CharCategory_entriesInitialized)
      return Unit_getInstance();
    CharCategory_entriesInitialized = true;
    CharCategory_UNASSIGNED_instance = new CharCategory('UNASSIGNED', 0, 0, 'Cn');
    CharCategory_UPPERCASE_LETTER_instance = new CharCategory('UPPERCASE_LETTER', 1, 1, 'Lu');
    CharCategory_LOWERCASE_LETTER_instance = new CharCategory('LOWERCASE_LETTER', 2, 2, 'Ll');
    CharCategory_TITLECASE_LETTER_instance = new CharCategory('TITLECASE_LETTER', 3, 3, 'Lt');
    CharCategory_MODIFIER_LETTER_instance = new CharCategory('MODIFIER_LETTER', 4, 4, 'Lm');
    CharCategory_OTHER_LETTER_instance = new CharCategory('OTHER_LETTER', 5, 5, 'Lo');
    CharCategory_NON_SPACING_MARK_instance = new CharCategory('NON_SPACING_MARK', 6, 6, 'Mn');
    CharCategory_ENCLOSING_MARK_instance = new CharCategory('ENCLOSING_MARK', 7, 7, 'Me');
    CharCategory_COMBINING_SPACING_MARK_instance = new CharCategory('COMBINING_SPACING_MARK', 8, 8, 'Mc');
    CharCategory_DECIMAL_DIGIT_NUMBER_instance = new CharCategory('DECIMAL_DIGIT_NUMBER', 9, 9, 'Nd');
    CharCategory_LETTER_NUMBER_instance = new CharCategory('LETTER_NUMBER', 10, 10, 'Nl');
    CharCategory_OTHER_NUMBER_instance = new CharCategory('OTHER_NUMBER', 11, 11, 'No');
    CharCategory_SPACE_SEPARATOR_instance = new CharCategory('SPACE_SEPARATOR', 12, 12, 'Zs');
    CharCategory_LINE_SEPARATOR_instance = new CharCategory('LINE_SEPARATOR', 13, 13, 'Zl');
    CharCategory_PARAGRAPH_SEPARATOR_instance = new CharCategory('PARAGRAPH_SEPARATOR', 14, 14, 'Zp');
    CharCategory_CONTROL_instance = new CharCategory('CONTROL', 15, 15, 'Cc');
    CharCategory_FORMAT_instance = new CharCategory('FORMAT', 16, 16, 'Cf');
    CharCategory_PRIVATE_USE_instance = new CharCategory('PRIVATE_USE', 17, 18, 'Co');
    CharCategory_SURROGATE_instance = new CharCategory('SURROGATE', 18, 19, 'Cs');
    CharCategory_DASH_PUNCTUATION_instance = new CharCategory('DASH_PUNCTUATION', 19, 20, 'Pd');
    CharCategory_START_PUNCTUATION_instance = new CharCategory('START_PUNCTUATION', 20, 21, 'Ps');
    CharCategory_END_PUNCTUATION_instance = new CharCategory('END_PUNCTUATION', 21, 22, 'Pe');
    CharCategory_CONNECTOR_PUNCTUATION_instance = new CharCategory('CONNECTOR_PUNCTUATION', 22, 23, 'Pc');
    CharCategory_OTHER_PUNCTUATION_instance = new CharCategory('OTHER_PUNCTUATION', 23, 24, 'Po');
    CharCategory_MATH_SYMBOL_instance = new CharCategory('MATH_SYMBOL', 24, 25, 'Sm');
    CharCategory_CURRENCY_SYMBOL_instance = new CharCategory('CURRENCY_SYMBOL', 25, 26, 'Sc');
    CharCategory_MODIFIER_SYMBOL_instance = new CharCategory('MODIFIER_SYMBOL', 26, 27, 'Sk');
    CharCategory_OTHER_SYMBOL_instance = new CharCategory('OTHER_SYMBOL', 27, 28, 'So');
    CharCategory_INITIAL_QUOTE_PUNCTUATION_instance = new CharCategory('INITIAL_QUOTE_PUNCTUATION', 28, 29, 'Pi');
    CharCategory_FINAL_QUOTE_PUNCTUATION_instance = new CharCategory('FINAL_QUOTE_PUNCTUATION', 29, 30, 'Pf');
    Companion_getInstance_12();
  }
  function CharCategory(name, ordinal, value, code) {
    Enum.call(this, name, ordinal);
    this.qc_1 = value;
    this.rc_1 = code;
  }
  function CharCategory_UNASSIGNED_getInstance() {
    CharCategory_initEntries();
    return CharCategory_UNASSIGNED_instance;
  }
  function CharCategory_UPPERCASE_LETTER_getInstance() {
    CharCategory_initEntries();
    return CharCategory_UPPERCASE_LETTER_instance;
  }
  function CharCategory_LOWERCASE_LETTER_getInstance() {
    CharCategory_initEntries();
    return CharCategory_LOWERCASE_LETTER_instance;
  }
  function CharCategory_TITLECASE_LETTER_getInstance() {
    CharCategory_initEntries();
    return CharCategory_TITLECASE_LETTER_instance;
  }
  function CharCategory_MODIFIER_LETTER_getInstance() {
    CharCategory_initEntries();
    return CharCategory_MODIFIER_LETTER_instance;
  }
  function CharCategory_OTHER_LETTER_getInstance() {
    CharCategory_initEntries();
    return CharCategory_OTHER_LETTER_instance;
  }
  function CharCategory_NON_SPACING_MARK_getInstance() {
    CharCategory_initEntries();
    return CharCategory_NON_SPACING_MARK_instance;
  }
  function CharCategory_ENCLOSING_MARK_getInstance() {
    CharCategory_initEntries();
    return CharCategory_ENCLOSING_MARK_instance;
  }
  function CharCategory_COMBINING_SPACING_MARK_getInstance() {
    CharCategory_initEntries();
    return CharCategory_COMBINING_SPACING_MARK_instance;
  }
  function CharCategory_DECIMAL_DIGIT_NUMBER_getInstance() {
    CharCategory_initEntries();
    return CharCategory_DECIMAL_DIGIT_NUMBER_instance;
  }
  function CharCategory_LETTER_NUMBER_getInstance() {
    CharCategory_initEntries();
    return CharCategory_LETTER_NUMBER_instance;
  }
  function CharCategory_OTHER_NUMBER_getInstance() {
    CharCategory_initEntries();
    return CharCategory_OTHER_NUMBER_instance;
  }
  function CharCategory_SPACE_SEPARATOR_getInstance() {
    CharCategory_initEntries();
    return CharCategory_SPACE_SEPARATOR_instance;
  }
  function CharCategory_LINE_SEPARATOR_getInstance() {
    CharCategory_initEntries();
    return CharCategory_LINE_SEPARATOR_instance;
  }
  function CharCategory_PARAGRAPH_SEPARATOR_getInstance() {
    CharCategory_initEntries();
    return CharCategory_PARAGRAPH_SEPARATOR_instance;
  }
  function CharCategory_CONTROL_getInstance() {
    CharCategory_initEntries();
    return CharCategory_CONTROL_instance;
  }
  function CharCategory_FORMAT_getInstance() {
    CharCategory_initEntries();
    return CharCategory_FORMAT_instance;
  }
  function CharCategory_PRIVATE_USE_getInstance() {
    CharCategory_initEntries();
    return CharCategory_PRIVATE_USE_instance;
  }
  function CharCategory_SURROGATE_getInstance() {
    CharCategory_initEntries();
    return CharCategory_SURROGATE_instance;
  }
  function CharCategory_DASH_PUNCTUATION_getInstance() {
    CharCategory_initEntries();
    return CharCategory_DASH_PUNCTUATION_instance;
  }
  function CharCategory_START_PUNCTUATION_getInstance() {
    CharCategory_initEntries();
    return CharCategory_START_PUNCTUATION_instance;
  }
  function CharCategory_END_PUNCTUATION_getInstance() {
    CharCategory_initEntries();
    return CharCategory_END_PUNCTUATION_instance;
  }
  function CharCategory_CONNECTOR_PUNCTUATION_getInstance() {
    CharCategory_initEntries();
    return CharCategory_CONNECTOR_PUNCTUATION_instance;
  }
  function CharCategory_OTHER_PUNCTUATION_getInstance() {
    CharCategory_initEntries();
    return CharCategory_OTHER_PUNCTUATION_instance;
  }
  function CharCategory_MATH_SYMBOL_getInstance() {
    CharCategory_initEntries();
    return CharCategory_MATH_SYMBOL_instance;
  }
  function CharCategory_CURRENCY_SYMBOL_getInstance() {
    CharCategory_initEntries();
    return CharCategory_CURRENCY_SYMBOL_instance;
  }
  function CharCategory_MODIFIER_SYMBOL_getInstance() {
    CharCategory_initEntries();
    return CharCategory_MODIFIER_SYMBOL_instance;
  }
  function CharCategory_OTHER_SYMBOL_getInstance() {
    CharCategory_initEntries();
    return CharCategory_OTHER_SYMBOL_instance;
  }
  function CharCategory_INITIAL_QUOTE_PUNCTUATION_getInstance() {
    CharCategory_initEntries();
    return CharCategory_INITIAL_QUOTE_PUNCTUATION_instance;
  }
  function CharCategory_FINAL_QUOTE_PUNCTUATION_getInstance() {
    CharCategory_initEntries();
    return CharCategory_FINAL_QUOTE_PUNCTUATION_instance;
  }
  function StringBuilder_init_$Init$(capacity, $this) {
    StringBuilder_init_$Init$_1($this);
    return $this;
  }
  function StringBuilder_init_$Create$(capacity) {
    return StringBuilder_init_$Init$(capacity, objectCreate(protoOf(StringBuilder)));
  }
  function StringBuilder_init_$Init$_0(content, $this) {
    StringBuilder.call($this, toString_3(content));
    return $this;
  }
  function StringBuilder_init_$Create$_0(content) {
    return StringBuilder_init_$Init$_0(content, objectCreate(protoOf(StringBuilder)));
  }
  function StringBuilder_init_$Init$_1($this) {
    StringBuilder.call($this, '');
    return $this;
  }
  function StringBuilder_init_$Create$_1() {
    return StringBuilder_init_$Init$_1(objectCreate(protoOf(StringBuilder)));
  }
  function StringBuilder(content) {
    this.d1_1 = !(content === undefined) ? content : '';
  }
  protoOf(StringBuilder).g7 = function () {
    // Inline function 'kotlin.js.asDynamic' call
    return this.d1_1.length;
  };
  protoOf(StringBuilder).h7 = function (index) {
    // Inline function 'kotlin.text.getOrElse' call
    var tmp0_getOrElse = this.d1_1;
    var tmp;
    if (index >= 0 ? index <= get_lastIndex_2(tmp0_getOrElse) : false) {
      tmp = charSequenceGet(tmp0_getOrElse, index);
    } else {
      throw IndexOutOfBoundsException_init_$Create$('index: ' + index + ', length: ' + this.g7() + '}');
    }
    return tmp;
  };
  protoOf(StringBuilder).i7 = function (startIndex, endIndex) {
    // Inline function 'kotlin.text.substring' call
    // Inline function 'kotlin.js.asDynamic' call
    return this.d1_1.substring(startIndex, endIndex);
  };
  protoOf(StringBuilder).q4 = function (value) {
    this.d1_1 = this.d1_1 + new Char(value);
    return this;
  };
  protoOf(StringBuilder).b = function (value) {
    this.d1_1 = this.d1_1 + toString_2(value);
    return this;
  };
  protoOf(StringBuilder).sc = function (value, startIndex, endIndex) {
    return this.tc(value == null ? 'null' : value, startIndex, endIndex);
  };
  protoOf(StringBuilder).e1 = function () {
    var reversed = '';
    var index = this.d1_1.length - 1 | 0;
    while (index >= 0) {
      var tmp = this.d1_1;
      var tmp0 = index;
      index = tmp0 - 1 | 0;
      var low = charSequenceGet(tmp, tmp0);
      if (isLowSurrogate(low) ? index >= 0 : false) {
        var tmp_0 = this.d1_1;
        var tmp1 = index;
        index = tmp1 - 1 | 0;
        var high = charSequenceGet(tmp_0, tmp1);
        if (isHighSurrogate(high)) {
          reversed = reversed + new Char(high) + new Char(low);
        } else {
          reversed = reversed + new Char(low) + new Char(high);
        }
      } else {
        reversed = reversed + new Char(low);
      }
    }
    this.d1_1 = reversed;
    return this;
  };
  protoOf(StringBuilder).uc = function (value) {
    this.d1_1 = this.d1_1 + toString_2(value);
    return this;
  };
  protoOf(StringBuilder).vc = function (value) {
    this.d1_1 = this.d1_1 + value;
    return this;
  };
  protoOf(StringBuilder).wc = function (value) {
    var tmp = this;
    var tmp_0 = this.d1_1;
    tmp.d1_1 = tmp_0 + (value == null ? 'null' : value);
    return this;
  };
  protoOf(StringBuilder).toString = function () {
    return this.d1_1;
  };
  protoOf(StringBuilder).tc = function (value, startIndex, endIndex) {
    var stringCsq = toString_3(value);
    Companion_getInstance().c2(startIndex, endIndex, stringCsq.length);
    var tmp = this;
    var tmp_0 = this.d1_1;
    // Inline function 'kotlin.text.substring' call
    // Inline function 'kotlin.js.asDynamic' call
    tmp.d1_1 = tmp_0 + stringCsq.substring(startIndex, endIndex);
    return this;
  };
  function isLowSurrogate(_this__u8e3s4) {
    Companion_getInstance_14();
    var containsLower = _Char___init__impl__6a9atx(56320);
    var tmp;
    Companion_getInstance_14();
    if (_this__u8e3s4 <= _Char___init__impl__6a9atx(57343)) {
      tmp = containsLower <= _this__u8e3s4;
    } else {
      tmp = false;
    }
    return tmp;
  }
  function isHighSurrogate(_this__u8e3s4) {
    Companion_getInstance_14();
    var containsLower = _Char___init__impl__6a9atx(55296);
    var tmp;
    Companion_getInstance_14();
    if (_this__u8e3s4 <= _Char___init__impl__6a9atx(56319)) {
      tmp = containsLower <= _this__u8e3s4;
    } else {
      tmp = false;
    }
    return tmp;
  }
  function uppercaseChar(_this__u8e3s4) {
    // Inline function 'kotlin.text.uppercase' call
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    var uppercase = toString_1(_this__u8e3s4).toUpperCase();
    return uppercase.length > 1 ? _this__u8e3s4 : charSequenceGet(uppercase, 0);
  }
  function isWhitespace(_this__u8e3s4) {
    return isWhitespaceImpl(_this__u8e3s4);
  }
  function get_category(_this__u8e3s4) {
    return Companion_getInstance_12().nc(getCategoryValue(_this__u8e3s4));
  }
  function checkRadix(radix) {
    if (!(2 <= radix ? radix <= 36 : false)) {
      throw IllegalArgumentException_init_$Create$_0('radix ' + radix + ' was not in valid range 2..36');
    }
    return radix;
  }
  function toDouble(_this__u8e3s4) {
    // Inline function 'kotlin.also' call
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp1_also = +_this__u8e3s4;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.text.toDouble.<anonymous>' call
    if ((isNaN_0(tmp1_also) ? !isNaN_2(_this__u8e3s4) : false) ? true : tmp1_also === 0.0 ? isBlank(_this__u8e3s4) : false) {
      numberFormatError(_this__u8e3s4);
    }
    return tmp1_also;
  }
  function toLong(_this__u8e3s4, radix) {
    var tmp0_elvis_lhs = toLongOrNull_0(_this__u8e3s4, radix);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function digitOf(char, radix) {
    // Inline function 'kotlin.let' call
    var tmp0_let = (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(48)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(57)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(48)) : (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(90)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(65)) + 10 | 0 : (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(97)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(122)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(97)) + 10 | 0 : Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(128)) < 0 ? -1 : (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65313)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65338)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(65313)) + 10 | 0 : (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65345)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65370)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(65345)) + 10 | 0 : digitToIntImpl(char);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.text.digitOf.<anonymous>' call
    return tmp0_let >= radix ? -1 : tmp0_let;
  }
  function isNaN_2(_this__u8e3s4) {
    // Inline function 'kotlin.text.lowercase' call
    // Inline function 'kotlin.js.asDynamic' call
    switch (_this__u8e3s4.toLowerCase()) {
      case 'nan':
      case '+nan':
      case '-nan':
        return true;
      default:
        return false;
    }
  }
  function toInt(_this__u8e3s4) {
    var tmp0_elvis_lhs = toIntOrNull(_this__u8e3s4);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toByte(_this__u8e3s4) {
    var tmp0_elvis_lhs = toByteOrNull(_this__u8e3s4);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toShort(_this__u8e3s4) {
    var tmp0_elvis_lhs = toShortOrNull(_this__u8e3s4);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toLong_0(_this__u8e3s4) {
    var tmp0_elvis_lhs = toLongOrNull(_this__u8e3s4);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toDoubleOrNull(_this__u8e3s4) {
    // Inline function 'kotlin.takeIf' call
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp1_takeIf = +_this__u8e3s4;
    // Inline function 'kotlin.contracts.contract' call
    var tmp;
    // Inline function 'kotlin.text.toDoubleOrNull.<anonymous>' call
    if (!((isNaN_0(tmp1_takeIf) ? !isNaN_2(_this__u8e3s4) : false) ? true : tmp1_takeIf === 0.0 ? isBlank(_this__u8e3s4) : false)) {
      tmp = tmp1_takeIf;
    } else {
      tmp = null;
    }
    return tmp;
  }
  function Regex_init_$Init$(pattern, $this) {
    Regex.call($this, pattern, emptySet());
    return $this;
  }
  function Regex_init_$Create$(pattern) {
    return Regex_init_$Init$(pattern, objectCreate(protoOf(Regex)));
  }
  function Companion_13() {
    Companion_instance_13 = this;
    this.xc_1 = new RegExp('[\\\\^$*+?.()|[\\]{}]', 'g');
    this.yc_1 = new RegExp('[\\\\$]', 'g');
    this.zc_1 = new RegExp('\\$', 'g');
  }
  protoOf(Companion_13).ad = function (literal) {
    // Inline function 'kotlin.text.nativeReplace' call
    var tmp0_nativeReplace = this.xc_1;
    // Inline function 'kotlin.js.asDynamic' call
    return literal.replace(tmp0_nativeReplace, '\\$&');
  };
  protoOf(Companion_13).bd = function (literal) {
    // Inline function 'kotlin.text.nativeReplace' call
    var tmp0_nativeReplace = this.zc_1;
    // Inline function 'kotlin.js.asDynamic' call
    return literal.replace(tmp0_nativeReplace, '$$$$');
  };
  var Companion_instance_13;
  function Companion_getInstance_13() {
    if (Companion_instance_13 == null)
      new Companion_13();
    return Companion_instance_13;
  }
  function Regex(pattern, options) {
    Companion_getInstance_13();
    this.cd_1 = pattern;
    this.dd_1 = toSet_0(options);
    this.ed_1 = new RegExp(pattern, toFlags(options, 'gu'));
    this.fd_1 = null;
    this.gd_1 = null;
  }
  protoOf(Regex).hd = function (input, startIndex) {
    if (startIndex < 0 ? true : startIndex > charSequenceLength(input)) {
      throw IndexOutOfBoundsException_init_$Create$('Start index out of bounds: ' + startIndex + ', input length: ' + charSequenceLength(input));
    }
    return findNext(this.ed_1, toString_3(input), startIndex, this.ed_1);
  };
  protoOf(Regex).toString = function () {
    return this.ed_1.toString();
  };
  function toFlags(_this__u8e3s4, prepend) {
    return joinToString_0(_this__u8e3s4, '', prepend, VOID, VOID, VOID, toFlags$lambda);
  }
  function findNext(_this__u8e3s4, input, from, nextPattern) {
    _this__u8e3s4.lastIndex = from;
    var match = _this__u8e3s4.exec(input);
    if (match == null)
      return null;
    var range = numberRangeToNumber(match.index, _this__u8e3s4.lastIndex - 1 | 0);
    return new findNext$1(range, match, nextPattern, input);
  }
  function MatchGroup(value) {
    this.id_1 = value;
  }
  protoOf(MatchGroup).toString = function () {
    return 'MatchGroup(value=' + this.id_1 + ')';
  };
  protoOf(MatchGroup).hashCode = function () {
    return getStringHashCode(this.id_1);
  };
  protoOf(MatchGroup).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MatchGroup))
      return false;
    var tmp0_other_with_cast = other instanceof MatchGroup ? other : THROW_CCE();
    if (!(this.id_1 === tmp0_other_with_cast.id_1))
      return false;
    return true;
  };
  function toFlags$lambda(it) {
    return it.ld_1;
  }
  function findNext$o$groups$o$iterator$lambda(this$0) {
    return function (it) {
      return this$0.l(it);
    };
  }
  function findNext$1$groups$1($match, this$0) {
    this.md_1 = $match;
    this.nd_1 = this$0;
    AbstractCollection.call(this);
  }
  protoOf(findNext$1$groups$1).i = function () {
    return this.md_1.length;
  };
  protoOf(findNext$1$groups$1).f = function () {
    var tmp = asSequence(get_indices_1(this));
    return map(tmp, findNext$o$groups$o$iterator$lambda(this)).f();
  };
  protoOf(findNext$1$groups$1).l = function (index) {
    // Inline function 'kotlin.js.get' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp0_safe_receiver = this.md_1[index];
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlin.text.<no name provided>.get.<anonymous>' call
      tmp = new MatchGroup(tmp0_safe_receiver);
    }
    return tmp;
  };
  function findNext$1($range, $match, $nextPattern, $input) {
    this.rd_1 = $range;
    this.sd_1 = $match;
    this.td_1 = $nextPattern;
    this.ud_1 = $input;
    this.od_1 = $range;
    var tmp = this;
    tmp.pd_1 = new findNext$1$groups$1($match, this);
    this.qd_1 = null;
  }
  protoOf(findNext$1).vd = function () {
    return this.od_1;
  };
  var STRING_CASE_INSENSITIVE_ORDER;
  function concatToString(_this__u8e3s4, startIndex, endIndex) {
    startIndex = startIndex === VOID ? 0 : startIndex;
    endIndex = endIndex === VOID ? _this__u8e3s4.length : endIndex;
    _init_properties_string_kt__3w3j69();
    Companion_getInstance().c2(startIndex, endIndex, _this__u8e3s4.length);
    var result = '';
    var inductionVariable = startIndex;
    if (inductionVariable < endIndex)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        result = result + new Char(_this__u8e3s4[index]);
      }
       while (inductionVariable < endIndex);
    return result;
  }
  function compareTo(_this__u8e3s4, other, ignoreCase) {
    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
    _init_properties_string_kt__3w3j69();
    if (ignoreCase) {
      var n1 = _this__u8e3s4.length;
      var n2 = other.length;
      // Inline function 'kotlin.comparisons.minOf' call
      var min = Math.min(n1, n2);
      if (min === 0)
        return n1 - n2 | 0;
      var inductionVariable = 0;
      if (inductionVariable < min)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var thisChar = charSequenceGet(_this__u8e3s4, index);
          var otherChar = charSequenceGet(other, index);
          if (!(thisChar === otherChar)) {
            thisChar = uppercaseChar(thisChar);
            otherChar = uppercaseChar(otherChar);
            if (!(thisChar === otherChar)) {
              // Inline function 'kotlin.text.lowercaseChar' call
              var tmp0_lowercaseChar = thisChar;
              var tmp$ret$3;
              // Inline function 'kotlin.text.lowercase' call
              // Inline function 'kotlin.js.unsafeCast' call
              // Inline function 'kotlin.js.asDynamic' call
              tmp$ret$3 = toString_1(tmp0_lowercaseChar).toLowerCase();
              thisChar = charSequenceGet(tmp$ret$3, 0);
              // Inline function 'kotlin.text.lowercaseChar' call
              var tmp1_lowercaseChar = otherChar;
              var tmp$ret$7;
              // Inline function 'kotlin.text.lowercase' call
              // Inline function 'kotlin.js.unsafeCast' call
              // Inline function 'kotlin.js.asDynamic' call
              tmp$ret$7 = toString_1(tmp1_lowercaseChar).toLowerCase();
              otherChar = charSequenceGet(tmp$ret$7, 0);
              if (!(thisChar === otherChar)) {
                return Char__compareTo_impl_ypi4mb(thisChar, otherChar);
              }
            }
          }
        }
         while (inductionVariable < min);
      return n1 - n2 | 0;
    } else {
      return compareTo_0(_this__u8e3s4, other);
    }
  }
  function sam$kotlin_Comparator$0(function_0) {
    this.wd_1 = function_0;
  }
  protoOf(sam$kotlin_Comparator$0).xd = function (a, b) {
    return this.wd_1(a, b);
  };
  protoOf(sam$kotlin_Comparator$0).compare = function (a, b) {
    return this.xd(a, b);
  };
  function STRING_CASE_INSENSITIVE_ORDER$lambda(a, b) {
    _init_properties_string_kt__3w3j69();
    return compareTo(a, b, true);
  }
  var properties_initialized_string_kt_4g1sj;
  function _init_properties_string_kt__3w3j69() {
    if (!properties_initialized_string_kt_4g1sj) {
      properties_initialized_string_kt_4g1sj = true;
      var tmp = STRING_CASE_INSENSITIVE_ORDER$lambda;
      STRING_CASE_INSENSITIVE_ORDER = new sam$kotlin_Comparator$0(tmp);
    }
  }
  function isBlank(_this__u8e3s4) {
    var tmp;
    if (charSequenceLength(_this__u8e3s4) === 0) {
      tmp = true;
    } else {
      var tmp$ret$0;
      $l$block_0: {
        // Inline function 'kotlin.collections.all' call
        var tmp0_all = get_indices_2(_this__u8e3s4);
        var tmp_0;
        if (isInterface(tmp0_all, Collection)) {
          tmp_0 = tmp0_all.p();
        } else {
          tmp_0 = false;
        }
        if (tmp_0) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
        var inductionVariable = tmp0_all.z_1;
        var last = tmp0_all.a1_1;
        if (inductionVariable <= last)
          do {
            var element = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            // Inline function 'kotlin.text.isBlank.<anonymous>' call
            if (!isWhitespace(charSequenceGet(_this__u8e3s4, element))) {
              tmp$ret$0 = false;
              break $l$block_0;
            }
          }
           while (!(element === last));
        tmp$ret$0 = true;
      }
      tmp = tmp$ret$0;
    }
    return tmp;
  }
  function regionMatches(_this__u8e3s4, thisOffset, other, otherOffset, length, ignoreCase) {
    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
    return regionMatchesImpl(_this__u8e3s4, thisOffset, other, otherOffset, length, ignoreCase);
  }
  function replace(_this__u8e3s4, oldValue, newValue, ignoreCase) {
    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
    // Inline function 'kotlin.text.nativeReplace' call
    var tmp0_nativeReplace = new RegExp(Companion_getInstance_13().ad(oldValue), ignoreCase ? 'gui' : 'gu');
    var tmp1_nativeReplace = Companion_getInstance_13().bd(newValue);
    // Inline function 'kotlin.js.asDynamic' call
    return _this__u8e3s4.replace(tmp0_nativeReplace, tmp1_nativeReplace);
  }
  function replaceFirst(_this__u8e3s4, oldValue, newValue, ignoreCase) {
    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
    // Inline function 'kotlin.text.nativeReplace' call
    var tmp0_nativeReplace = new RegExp(Companion_getInstance_13().ad(oldValue), ignoreCase ? 'ui' : 'u');
    var tmp1_nativeReplace = Companion_getInstance_13().bd(newValue);
    // Inline function 'kotlin.js.asDynamic' call
    return _this__u8e3s4.replace(tmp0_nativeReplace, tmp1_nativeReplace);
  }
  function equals_0(_this__u8e3s4, other, ignoreCase) {
    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
    if (_this__u8e3s4 == null)
      return other == null;
    if (other == null)
      return false;
    if (!ignoreCase)
      return _this__u8e3s4 == other;
    if (!(_this__u8e3s4.length === other.length))
      return false;
    var inductionVariable = 0;
    var last = _this__u8e3s4.length;
    if (inductionVariable < last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var thisChar = charSequenceGet(_this__u8e3s4, index);
        var otherChar = charSequenceGet(other, index);
        if (!equals(thisChar, otherChar, ignoreCase)) {
          return false;
        }
      }
       while (inductionVariable < last);
    return true;
  }
  function startsWith_1(_this__u8e3s4, prefix, ignoreCase) {
    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
    if (!ignoreCase) {
      // Inline function 'kotlin.text.nativeStartsWith' call
      // Inline function 'kotlin.js.asDynamic' call
      return _this__u8e3s4.startsWith(prefix, 0);
    } else
      return regionMatches(_this__u8e3s4, 0, prefix, 0, prefix.length, ignoreCase);
  }
  function capitalize(_this__u8e3s4) {
    var tmp;
    // Inline function 'kotlin.text.isNotEmpty' call
    if (charSequenceLength(_this__u8e3s4) > 0) {
      // Inline function 'kotlin.text.uppercase' call
      // Inline function 'kotlin.text.substring' call
      // Inline function 'kotlin.js.asDynamic' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp_0 = _this__u8e3s4.substring(0, 1).toUpperCase();
      // Inline function 'kotlin.text.substring' call
      // Inline function 'kotlin.js.asDynamic' call
      tmp = tmp_0 + _this__u8e3s4.substring(1);
    } else {
      tmp = _this__u8e3s4;
    }
    return tmp;
  }
  function startsWith_2(_this__u8e3s4, prefix, startIndex, ignoreCase) {
    ignoreCase = ignoreCase === VOID ? false : ignoreCase;
    if (!ignoreCase) {
      // Inline function 'kotlin.text.nativeStartsWith' call
      // Inline function 'kotlin.js.asDynamic' call
      return _this__u8e3s4.startsWith(prefix, startIndex);
    } else
      return regionMatches(_this__u8e3s4, startIndex, prefix, 0, prefix.length, ignoreCase);
  }
  function _Char___init__impl__6a9atx(value) {
    return value;
  }
  function _get_value__a43j40($this) {
    return $this;
  }
  function _Char___init__impl__6a9atx_0(code) {
    var tmp$ret$0;
    // Inline function 'kotlin.UShort.toInt' call
    tmp$ret$0 = _UShort___get_data__impl__g0245(code) & 65535;
    return _Char___init__impl__6a9atx(tmp$ret$0);
  }
  function Char__compareTo_impl_ypi4mb($this, other) {
    return _get_value__a43j40($this) - _get_value__a43j40(other) | 0;
  }
  function Char__compareTo_impl_ypi4mb_0($this, other) {
    var tmp = $this.p4_1;
    return Char__compareTo_impl_ypi4mb(tmp, other instanceof Char ? other.p4_1 : THROW_CCE());
  }
  function Char__minus_impl_a2frrh($this, other) {
    return _get_value__a43j40($this) - _get_value__a43j40(other) | 0;
  }
  function Char__minus_impl_a2frrh_0($this, other) {
    return numberToChar(_get_value__a43j40($this) - other | 0);
  }
  function Char__toInt_impl_vasixd($this) {
    return _get_value__a43j40($this);
  }
  function Char__equals_impl_x6719k($this, other) {
    if (!(other instanceof Char))
      return false;
    return _get_value__a43j40($this) === _get_value__a43j40(other.p4_1);
  }
  function Char__hashCode_impl_otmys($this) {
    return _get_value__a43j40($this);
  }
  function toString_1($this) {
    // Inline function 'kotlin.js.unsafeCast' call
    return String.fromCharCode(_get_value__a43j40($this));
  }
  function Companion_14() {
    Companion_instance_14 = this;
    this.yd_1 = _Char___init__impl__6a9atx(0);
    this.zd_1 = _Char___init__impl__6a9atx(65535);
    this.ae_1 = _Char___init__impl__6a9atx(55296);
    this.be_1 = _Char___init__impl__6a9atx(56319);
    this.ce_1 = _Char___init__impl__6a9atx(56320);
    this.de_1 = _Char___init__impl__6a9atx(57343);
    this.ee_1 = _Char___init__impl__6a9atx(55296);
    this.fe_1 = _Char___init__impl__6a9atx(57343);
    this.ge_1 = 2;
    this.he_1 = 16;
  }
  var Companion_instance_14;
  function Companion_getInstance_14() {
    if (Companion_instance_14 == null)
      new Companion_14();
    return Companion_instance_14;
  }
  function Char(value) {
    Companion_getInstance_14();
    this.p4_1 = value;
  }
  protoOf(Char).ie = function (other) {
    return Char__compareTo_impl_ypi4mb(this.p4_1, other);
  };
  protoOf(Char).y5 = function (other) {
    return Char__compareTo_impl_ypi4mb_0(this, other);
  };
  protoOf(Char).equals = function (other) {
    return Char__equals_impl_x6719k(this.p4_1, other);
  };
  protoOf(Char).hashCode = function () {
    return Char__hashCode_impl_otmys(this.p4_1);
  };
  protoOf(Char).toString = function () {
    return toString_1(this.p4_1);
  };
  function List() {
  }
  function Collection() {
  }
  function MutableSet() {
  }
  function MutableList() {
  }
  function Entry() {
  }
  function Map() {
  }
  function Set() {
  }
  function MutableEntry() {
  }
  function MutableMap() {
  }
  function Companion_15() {
    Companion_instance_15 = this;
  }
  var Companion_instance_15;
  function Companion_getInstance_15() {
    if (Companion_instance_15 == null)
      new Companion_15();
    return Companion_instance_15;
  }
  function Enum(name, ordinal) {
    Companion_getInstance_15();
    this.l1_1 = name;
    this.m1_1 = ordinal;
  }
  protoOf(Enum).p1 = function (other) {
    return compareTo_0(this.m1_1, other.m1_1);
  };
  protoOf(Enum).y5 = function (other) {
    return this.p1(other instanceof Enum ? other : THROW_CCE());
  };
  protoOf(Enum).equals = function (other) {
    return this === other;
  };
  protoOf(Enum).hashCode = function () {
    return identityHashCode(this);
  };
  protoOf(Enum).toString = function () {
    return this.l1_1;
  };
  function toString_2(_this__u8e3s4) {
    var tmp1_elvis_lhs = _this__u8e3s4 == null ? null : toString_3(_this__u8e3s4);
    return tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs;
  }
  function arrayOf(elements) {
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    return elements;
  }
  function plus_1(_this__u8e3s4, other) {
    var tmp3_elvis_lhs = _this__u8e3s4 == null ? null : toString_3(_this__u8e3s4);
    var tmp = tmp3_elvis_lhs == null ? 'null' : tmp3_elvis_lhs;
    var tmp1_elvis_lhs = other == null ? null : toString_3(other);
    return tmp + (tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs);
  }
  function implement(interfaces) {
    var maxSize = 1;
    var masks = [];
    var inductionVariable = 0;
    var last = interfaces.length;
    while (inductionVariable < last) {
      var i = interfaces[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      var currentSize = maxSize;
      var tmp1_elvis_lhs = i.prototype.$imask$;
      var imask = tmp1_elvis_lhs == null ? i.$imask$ : tmp1_elvis_lhs;
      if (!(imask == null)) {
        masks.push(imask);
        currentSize = imask.length;
      }
      var iid = i.$metadata$.iid;
      var tmp;
      if (iid == null) {
        tmp = null;
      } else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'kotlin.js.implement.<anonymous>' call
        tmp = bitMaskWith(iid);
      }
      var iidImask = tmp;
      if (!(iidImask == null)) {
        masks.push(iidImask);
        currentSize = Math.max(currentSize, iidImask.length);
      }
      if (currentSize > maxSize) {
        maxSize = currentSize;
      }
    }
    return compositeBitMask(maxSize, masks);
  }
  function bitMaskWith(activeBit) {
    var intArray = new Int32Array((activeBit >> 5) + 1 | 0);
    var numberIndex = activeBit >> 5;
    var positionInNumber = activeBit & 31;
    var numberWithSettledBit = 1 << positionInNumber;
    intArray[numberIndex] = intArray[numberIndex] | numberWithSettledBit;
    return intArray;
  }
  function compositeBitMask(capacity, masks) {
    var tmp = 0;
    var tmp_0 = new Int32Array(capacity);
    while (tmp < capacity) {
      var tmp_1 = tmp;
      var result = 0;
      var inductionVariable = 0;
      var last = masks.length;
      while (inductionVariable < last) {
        var mask = masks[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        if (tmp_1 < mask.length) {
          result = result | mask[tmp_1];
        }
      }
      tmp_0[tmp_1] = result;
      tmp = tmp + 1 | 0;
    }
    return tmp_0;
  }
  function isBitSet(_this__u8e3s4, possibleActiveBit) {
    var numberIndex = possibleActiveBit >> 5;
    if (numberIndex > _this__u8e3s4.length)
      return false;
    var positionInNumber = possibleActiveBit & 31;
    var numberWithSettledBit = 1 << positionInNumber;
    return !((_this__u8e3s4[numberIndex] & numberWithSettledBit) === 0);
  }
  function fillArrayVal(array, initValue) {
    var inductionVariable = 0;
    var last = array.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        array[i] = initValue;
      }
       while (!(i === last));
    return array;
  }
  function arrayIterator(array) {
    return new arrayIterator$1(array);
  }
  function booleanArray(size) {
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'withType' call
    var tmp0_withType = fillArrayVal(Array(size), false);
    tmp0_withType.$type$ = 'BooleanArray';
    return tmp0_withType;
  }
  function charArray(size) {
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'withType' call
    var tmp0_withType = new Uint16Array(size);
    tmp0_withType.$type$ = 'CharArray';
    return tmp0_withType;
  }
  function longArray(size) {
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'withType' call
    var tmp0_withType = fillArrayVal(Array(size), new Long(0, 0));
    tmp0_withType.$type$ = 'LongArray';
    return tmp0_withType;
  }
  function charArrayOf(arr) {
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'withType' call
    var tmp0_withType = new Uint16Array(arr);
    tmp0_withType.$type$ = 'CharArray';
    return tmp0_withType;
  }
  function longArrayOf(arr) {
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'withType' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp0_withType = arr.slice();
    tmp0_withType.$type$ = 'LongArray';
    return tmp0_withType;
  }
  function arrayIterator$1($array) {
    this.ke_1 = $array;
    this.je_1 = 0;
  }
  protoOf(arrayIterator$1).g = function () {
    return !(this.je_1 === this.ke_1.length);
  };
  protoOf(arrayIterator$1).h = function () {
    var tmp;
    if (!(this.je_1 === this.ke_1.length)) {
      var tmp1 = this.je_1;
      this.je_1 = tmp1 + 1 | 0;
      tmp = this.ke_1[tmp1];
    } else {
      throw NoSuchElementException_init_$Create$_0('' + this.je_1);
    }
    return tmp;
  };
  function get_buf() {
    _init_properties_bitUtils_kt__nfcg4k();
    return buf;
  }
  var buf;
  function get_bufFloat64() {
    _init_properties_bitUtils_kt__nfcg4k();
    return bufFloat64;
  }
  var bufFloat64;
  var bufFloat32;
  function get_bufInt32() {
    _init_properties_bitUtils_kt__nfcg4k();
    return bufInt32;
  }
  var bufInt32;
  function get_lowIndex() {
    _init_properties_bitUtils_kt__nfcg4k();
    return lowIndex;
  }
  var lowIndex;
  function get_highIndex() {
    _init_properties_bitUtils_kt__nfcg4k();
    return highIndex;
  }
  var highIndex;
  function getNumberHashCode(obj) {
    _init_properties_bitUtils_kt__nfcg4k();
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.jsBitwiseOr' call
    // Inline function 'kotlin.js.asDynamic' call
    if ((obj | 0) === obj) {
      return numberToInt(obj);
    }
    get_bufFloat64()[0] = obj;
    return imul(get_bufInt32()[get_highIndex()], 31) + get_bufInt32()[get_lowIndex()] | 0;
  }
  var properties_initialized_bitUtils_kt_i2bo3e;
  function _init_properties_bitUtils_kt__nfcg4k() {
    if (!properties_initialized_bitUtils_kt_i2bo3e) {
      properties_initialized_bitUtils_kt_i2bo3e = true;
      buf = new ArrayBuffer(8);
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      bufFloat64 = new Float64Array(get_buf());
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      bufFloat32 = new Float32Array(get_buf());
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      bufInt32 = new Int32Array(get_buf());
      // Inline function 'kotlin.run' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlin.js.lowIndex.<anonymous>' call
      get_bufFloat64()[0] = -1.0;
      lowIndex = !(get_bufInt32()[0] === 0) ? 1 : 0;
      highIndex = 1 - get_lowIndex() | 0;
    }
  }
  function charSequenceGet(a, index) {
    var tmp;
    if (isString(a)) {
      // Inline function 'kotlin.Char' call
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp1_Char = a.charCodeAt(index);
      var tmp_0;
      // Inline function 'kotlin.code' call
      Companion_getInstance_14();
      var tmp0_get_code_gknlva = _Char___init__impl__6a9atx(0);
      if (tmp1_Char < Char__toInt_impl_vasixd(tmp0_get_code_gknlva)) {
        tmp_0 = true;
      } else {
        // Inline function 'kotlin.code' call
        Companion_getInstance_14();
        var tmp1_get_code_jtnknr = _Char___init__impl__6a9atx(65535);
        tmp_0 = tmp1_Char > Char__toInt_impl_vasixd(tmp1_get_code_jtnknr);
      }
      if (tmp_0) {
        throw IllegalArgumentException_init_$Create$_0('Invalid Char code: ' + tmp1_Char);
      }
      tmp = numberToChar(tmp1_Char);
    } else {
      tmp = a.h7(index);
    }
    return tmp;
  }
  function isString(a) {
    return typeof a === 'string';
  }
  function charSequenceLength(a) {
    var tmp;
    if (isString(a)) {
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      tmp = a.length;
    } else {
      tmp = a.g7();
    }
    return tmp;
  }
  function charSequenceSubSequence(a, startIndex, endIndex) {
    var tmp;
    if (isString(a)) {
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      tmp = a.substring(startIndex, endIndex);
    } else {
      tmp = a.i7(startIndex, endIndex);
    }
    return tmp;
  }
  function arrayToString(array) {
    return joinToString(array, ', ', '[', ']', VOID, VOID, arrayToString$lambda);
  }
  function contentEqualsInternal(_this__u8e3s4, other) {
    // Inline function 'kotlin.js.asDynamic' call
    var a = _this__u8e3s4;
    // Inline function 'kotlin.js.asDynamic' call
    var b = other;
    if (a === b)
      return true;
    if (((a == null ? true : b == null) ? true : !isArrayish(b)) ? true : a.length != b.length)
      return false;
    var inductionVariable = 0;
    var last = a.length;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!equals_1(a[i], b[i])) {
          return false;
        }
      }
       while (inductionVariable < last);
    return true;
  }
  function contentHashCodeInternal(_this__u8e3s4) {
    // Inline function 'kotlin.js.asDynamic' call
    var a = _this__u8e3s4;
    if (a == null)
      return 0;
    var result = 1;
    var inductionVariable = 0;
    var last = a.length;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        result = imul(result, 31) + hashCode(a[i]) | 0;
      }
       while (inductionVariable < last);
    return result;
  }
  function arrayToString$lambda(it) {
    return toString_3(it);
  }
  function compareTo_0(a, b) {
    var tmp;
    switch (typeof a) {
      case 'number':
        var tmp_0;
        if (typeof b === 'number') {
          tmp_0 = doubleCompareTo(a, b);
        } else {
          if (b instanceof Long) {
            tmp_0 = doubleCompareTo(a, b.le());
          } else {
            tmp_0 = primitiveCompareTo(a, b);
          }
        }

        tmp = tmp_0;
        break;
      case 'string':
      case 'boolean':
        tmp = primitiveCompareTo(a, b);
        break;
      default:
        tmp = compareToDoNotIntrinsicify(a, b);
        break;
    }
    return tmp;
  }
  function doubleCompareTo(a, b) {
    var tmp;
    if (a < b) {
      tmp = -1;
    } else if (a > b) {
      tmp = 1;
    } else if (a === b) {
      var tmp_0;
      if (a !== 0) {
        tmp_0 = 0;
      } else {
        // Inline function 'kotlin.js.asDynamic' call
        var ia = 1 / a;
        var tmp_1;
        // Inline function 'kotlin.js.asDynamic' call
        if (ia === 1 / b) {
          tmp_1 = 0;
        } else {
          if (ia < 0) {
            tmp_1 = -1;
          } else {
            tmp_1 = 1;
          }
        }
        tmp_0 = tmp_1;
      }
      tmp = tmp_0;
    } else if (a !== a) {
      tmp = b !== b ? 0 : 1;
    } else {
      tmp = -1;
    }
    return tmp;
  }
  function primitiveCompareTo(a, b) {
    return a < b ? -1 : a > b ? 1 : 0;
  }
  function compareToDoNotIntrinsicify(a, b) {
    return a.y5(b);
  }
  function identityHashCode(obj) {
    return getObjectHashCode(obj);
  }
  function getObjectHashCode(obj) {
    // Inline function 'kotlin.js.jsIn' call
    if (!('kotlinHashCodeValue$' in obj)) {
      // Inline function 'kotlin.js.jsBitwiseOr' call
      var hash = Math.random() * 4.294967296E9 | 0;
      var descriptor = new Object();
      descriptor.value = hash;
      descriptor.enumerable = false;
      Object.defineProperty(obj, 'kotlinHashCodeValue$', descriptor);
    }
    // Inline function 'kotlin.js.unsafeCast' call
    return obj['kotlinHashCodeValue$'];
  }
  function toString_3(o) {
    var tmp;
    if (o == null) {
      tmp = 'null';
    } else if (isArrayish(o)) {
      tmp = '[...]';
    } else {
      // Inline function 'kotlin.js.unsafeCast' call
      tmp = o.toString();
    }
    return tmp;
  }
  function equals_1(obj1, obj2) {
    if (obj1 == null) {
      return obj2 == null;
    }
    if (obj2 == null) {
      return false;
    }
    if (typeof obj1 === 'object' ? typeof obj1.equals === 'function' : false) {
      return obj1.equals(obj2);
    }
    if (obj1 !== obj1) {
      return obj2 !== obj2;
    }
    if (typeof obj1 === 'number' ? typeof obj2 === 'number' : false) {
      var tmp;
      if (obj1 === obj2) {
        var tmp_0;
        if (obj1 !== 0) {
          tmp_0 = true;
        } else {
          // Inline function 'kotlin.js.asDynamic' call
          var tmp_1 = 1 / obj1;
          // Inline function 'kotlin.js.asDynamic' call
          tmp_0 = tmp_1 === 1 / obj2;
        }
        tmp = tmp_0;
      } else {
        tmp = false;
      }
      return tmp;
    }
    return obj1 === obj2;
  }
  function hashCode(obj) {
    if (obj == null)
      return 0;
    var tmp;
    switch (typeof obj) {
      case 'object':
        tmp = 'function' === typeof obj.hashCode ? obj.hashCode() : getObjectHashCode(obj);
        break;
      case 'function':
        tmp = getObjectHashCode(obj);
        break;
      case 'number':
        tmp = getNumberHashCode(obj);
        break;
      case 'boolean':
        var tmp_0;
        // Inline function 'kotlin.js.unsafeCast' call

        if (obj) {
          tmp_0 = 1;
        } else {
          tmp_0 = 0;
        }

        tmp = tmp_0;
        break;
      default:
        tmp = getStringHashCode(String(obj));
        break;
    }
    return tmp;
  }
  function getStringHashCode(str) {
    var hash = 0;
    var length = str.length;
    var inductionVariable = 0;
    var last = length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.js.asDynamic' call
        var code = str.charCodeAt(i);
        hash = imul(hash, 31) + code | 0;
      }
       while (!(i === last));
    return hash;
  }
  function boxIntrinsic(x) {
    throw IllegalStateException_init_$Create$('Should be lowered');
  }
  function unboxIntrinsic(x) {
    throw IllegalStateException_init_$Create$('Should be lowered');
  }
  function captureStack(instance, constructorFunction) {
    if (Error.captureStackTrace != null) {
      Error.captureStackTrace(instance, constructorFunction);
    } else {
      // Inline function 'kotlin.js.asDynamic' call
      instance.stack = (new Error()).stack;
    }
  }
  function protoOf(constructor) {
    return constructor.prototype;
  }
  function defineProp(obj, name, getter, setter) {
    return Object.defineProperty(obj, name, {configurable: true, get: getter, set: setter});
  }
  function objectCreate(proto) {
    return Object.create(proto);
  }
  function extendThrowable(this_, message, cause) {
    Error.call(this_);
    setPropertiesToThrowableInstance(this_, message, cause);
  }
  function setPropertiesToThrowableInstance(this_, message, cause) {
    var errorInfo = calculateErrorInfo(Object.getPrototypeOf(this_));
    if ((errorInfo & 1) === 0) {
      var tmp;
      if (message == null) {
        var tmp_0;
        if (!(message === null)) {
          var tmp1_elvis_lhs = cause == null ? null : cause.toString();
          tmp_0 = tmp1_elvis_lhs == null ? VOID : tmp1_elvis_lhs;
        } else {
          tmp_0 = VOID;
        }
        tmp = tmp_0;
      } else {
        tmp = message;
      }
      this_.message = tmp;
    }
    if ((errorInfo & 2) === 0) {
      this_.cause = cause;
    }
    this_.name = Object.getPrototypeOf(this_).constructor.name;
  }
  function ensureNotNull(v) {
    var tmp;
    if (v == null) {
      THROW_NPE();
    } else {
      tmp = v;
    }
    return tmp;
  }
  function THROW_NPE() {
    throw NullPointerException_init_$Create$();
  }
  function noWhenBranchMatchedException() {
    throw NoWhenBranchMatchedException_init_$Create$();
  }
  function THROW_CCE() {
    throw ClassCastException_init_$Create$();
  }
  function throwUninitializedPropertyAccessException(name) {
    throw UninitializedPropertyAccessException_init_$Create$('lateinit property ' + name + ' has not been initialized');
  }
  function lazy(initializer) {
    return new UnsafeLazyImpl(initializer);
  }
  function fillFrom(src, dst) {
    var srcLen = src.length;
    var dstLen = dst.length;
    var index = 0;
    // Inline function 'kotlin.js.unsafeCast' call
    var arr = dst;
    while (index < srcLen ? index < dstLen : false) {
      var tmp = index;
      var tmp0 = index;
      index = tmp0 + 1 | 0;
      arr[tmp] = src[tmp0];
    }
    return dst;
  }
  function arrayCopyResize(source, newSize, defaultValue) {
    // Inline function 'kotlin.js.unsafeCast' call
    var result = source.slice(0, newSize);
    // Inline function 'kotlin.copyArrayType' call
    if (source.$type$ !== undefined) {
      result.$type$ = source.$type$;
    }
    var index = source.length;
    if (newSize > index) {
      // Inline function 'kotlin.js.asDynamic' call
      result.length = newSize;
      while (index < newSize) {
        var tmp0 = index;
        index = tmp0 + 1 | 0;
        result[tmp0] = defaultValue;
      }
    }
    return result;
  }
  function Companion_16() {
    Companion_instance_16 = this;
    this.me_1 = new Long(0, -2147483648);
    this.ne_1 = new Long(-1, 2147483647);
    this.oe_1 = 8;
    this.pe_1 = 64;
  }
  var Companion_instance_16;
  function Companion_getInstance_16() {
    if (Companion_instance_16 == null)
      new Companion_16();
    return Companion_instance_16;
  }
  function Long(low, high) {
    Companion_getInstance_16();
    Number_0.call(this);
    this.r4_1 = low;
    this.s4_1 = high;
  }
  protoOf(Long).v4 = function (other) {
    return compare(this, other);
  };
  protoOf(Long).y5 = function (other) {
    return this.v4(other instanceof Long ? other : THROW_CCE());
  };
  protoOf(Long).x4 = function (other) {
    return add(this, other);
  };
  protoOf(Long).y4 = function (other) {
    return subtract(this, other);
  };
  protoOf(Long).w4 = function (other) {
    return multiply(this, other);
  };
  protoOf(Long).u4 = function (other) {
    return divide(this, other);
  };
  protoOf(Long).c7 = function (other) {
    return modulo(this, other);
  };
  protoOf(Long).qe = function () {
    return this.x4(new Long(1, 0));
  };
  protoOf(Long).re = function () {
    return this.y4(new Long(1, 0));
  };
  protoOf(Long).t4 = function () {
    return this.se().x4(new Long(1, 0));
  };
  protoOf(Long).f7 = function (bitCount) {
    return shiftLeft(this, bitCount);
  };
  protoOf(Long).e7 = function (bitCount) {
    return shiftRightUnsigned(this, bitCount);
  };
  protoOf(Long).e6 = function (other) {
    return new Long(this.r4_1 & other.r4_1, this.s4_1 & other.s4_1);
  };
  protoOf(Long).te = function (other) {
    return new Long(this.r4_1 | other.r4_1, this.s4_1 | other.s4_1);
  };
  protoOf(Long).d7 = function (other) {
    return new Long(this.r4_1 ^ other.r4_1, this.s4_1 ^ other.s4_1);
  };
  protoOf(Long).se = function () {
    return new Long(~this.r4_1, ~this.s4_1);
  };
  protoOf(Long).b7 = function () {
    return this.r4_1;
  };
  protoOf(Long).le = function () {
    return toNumber(this);
  };
  protoOf(Long).valueOf = function () {
    return this.le();
  };
  protoOf(Long).equals = function (other) {
    var tmp;
    if (other instanceof Long) {
      tmp = equalsLong(this, other);
    } else {
      tmp = false;
    }
    return tmp;
  };
  protoOf(Long).hashCode = function () {
    return hashCode_0(this);
  };
  protoOf(Long).toString = function () {
    return toStringImpl(this, 10);
  };
  function get_ZERO() {
    _init_properties_longjs_kt__tqrzid();
    return ZERO;
  }
  var ZERO;
  function get_ONE() {
    _init_properties_longjs_kt__tqrzid();
    return ONE;
  }
  var ONE;
  function get_NEG_ONE() {
    _init_properties_longjs_kt__tqrzid();
    return NEG_ONE;
  }
  var NEG_ONE;
  function get_MAX_VALUE() {
    _init_properties_longjs_kt__tqrzid();
    return MAX_VALUE;
  }
  var MAX_VALUE;
  function get_MIN_VALUE() {
    _init_properties_longjs_kt__tqrzid();
    return MIN_VALUE;
  }
  var MIN_VALUE;
  function get_TWO_PWR_24_() {
    _init_properties_longjs_kt__tqrzid();
    return TWO_PWR_24_;
  }
  var TWO_PWR_24_;
  function compare(_this__u8e3s4, other) {
    _init_properties_longjs_kt__tqrzid();
    if (equalsLong(_this__u8e3s4, other)) {
      return 0;
    }
    var thisNeg = isNegative(_this__u8e3s4);
    var otherNeg = isNegative(other);
    return (thisNeg ? !otherNeg : false) ? -1 : (!thisNeg ? otherNeg : false) ? 1 : isNegative(subtract(_this__u8e3s4, other)) ? -1 : 1;
  }
  function add(_this__u8e3s4, other) {
    _init_properties_longjs_kt__tqrzid();
    var a48 = _this__u8e3s4.s4_1 >>> 16 | 0;
    var a32 = _this__u8e3s4.s4_1 & 65535;
    var a16 = _this__u8e3s4.r4_1 >>> 16 | 0;
    var a00 = _this__u8e3s4.r4_1 & 65535;
    var b48 = other.s4_1 >>> 16 | 0;
    var b32 = other.s4_1 & 65535;
    var b16 = other.r4_1 >>> 16 | 0;
    var b00 = other.r4_1 & 65535;
    var c48 = 0;
    var c32 = 0;
    var c16 = 0;
    var c00 = 0;
    c00 = c00 + (a00 + b00 | 0) | 0;
    c16 = c16 + (c00 >>> 16 | 0) | 0;
    c00 = c00 & 65535;
    c16 = c16 + (a16 + b16 | 0) | 0;
    c32 = c32 + (c16 >>> 16 | 0) | 0;
    c16 = c16 & 65535;
    c32 = c32 + (a32 + b32 | 0) | 0;
    c48 = c48 + (c32 >>> 16 | 0) | 0;
    c32 = c32 & 65535;
    c48 = c48 + (a48 + b48 | 0) | 0;
    c48 = c48 & 65535;
    return new Long(c16 << 16 | c00, c48 << 16 | c32);
  }
  function subtract(_this__u8e3s4, other) {
    _init_properties_longjs_kt__tqrzid();
    return add(_this__u8e3s4, other.t4());
  }
  function multiply(_this__u8e3s4, other) {
    _init_properties_longjs_kt__tqrzid();
    if (isZero(_this__u8e3s4)) {
      return get_ZERO();
    } else if (isZero(other)) {
      return get_ZERO();
    }
    if (equalsLong(_this__u8e3s4, get_MIN_VALUE())) {
      return isOdd(other) ? get_MIN_VALUE() : get_ZERO();
    } else if (equalsLong(other, get_MIN_VALUE())) {
      return isOdd(_this__u8e3s4) ? get_MIN_VALUE() : get_ZERO();
    }
    if (isNegative(_this__u8e3s4)) {
      var tmp;
      if (isNegative(other)) {
        tmp = multiply(negate(_this__u8e3s4), negate(other));
      } else {
        tmp = negate(multiply(negate(_this__u8e3s4), other));
      }
      return tmp;
    } else if (isNegative(other)) {
      return negate(multiply(_this__u8e3s4, negate(other)));
    }
    if (lessThan(_this__u8e3s4, get_TWO_PWR_24_()) ? lessThan(other, get_TWO_PWR_24_()) : false) {
      return fromNumber(toNumber(_this__u8e3s4) * toNumber(other));
    }
    var a48 = _this__u8e3s4.s4_1 >>> 16 | 0;
    var a32 = _this__u8e3s4.s4_1 & 65535;
    var a16 = _this__u8e3s4.r4_1 >>> 16 | 0;
    var a00 = _this__u8e3s4.r4_1 & 65535;
    var b48 = other.s4_1 >>> 16 | 0;
    var b32 = other.s4_1 & 65535;
    var b16 = other.r4_1 >>> 16 | 0;
    var b00 = other.r4_1 & 65535;
    var c48 = 0;
    var c32 = 0;
    var c16 = 0;
    var c00 = 0;
    c00 = c00 + imul(a00, b00) | 0;
    c16 = c16 + (c00 >>> 16 | 0) | 0;
    c00 = c00 & 65535;
    c16 = c16 + imul(a16, b00) | 0;
    c32 = c32 + (c16 >>> 16 | 0) | 0;
    c16 = c16 & 65535;
    c16 = c16 + imul(a00, b16) | 0;
    c32 = c32 + (c16 >>> 16 | 0) | 0;
    c16 = c16 & 65535;
    c32 = c32 + imul(a32, b00) | 0;
    c48 = c48 + (c32 >>> 16 | 0) | 0;
    c32 = c32 & 65535;
    c32 = c32 + imul(a16, b16) | 0;
    c48 = c48 + (c32 >>> 16 | 0) | 0;
    c32 = c32 & 65535;
    c32 = c32 + imul(a00, b32) | 0;
    c48 = c48 + (c32 >>> 16 | 0) | 0;
    c32 = c32 & 65535;
    c48 = c48 + (((imul(a48, b00) + imul(a32, b16) | 0) + imul(a16, b32) | 0) + imul(a00, b48) | 0) | 0;
    c48 = c48 & 65535;
    return new Long(c16 << 16 | c00, c48 << 16 | c32);
  }
  function divide(_this__u8e3s4, other) {
    _init_properties_longjs_kt__tqrzid();
    if (isZero(other)) {
      throw Exception_init_$Create$('division by zero');
    } else if (isZero(_this__u8e3s4)) {
      return get_ZERO();
    }
    if (equalsLong(_this__u8e3s4, get_MIN_VALUE())) {
      if (equalsLong(other, get_ONE()) ? true : equalsLong(other, get_NEG_ONE())) {
        return get_MIN_VALUE();
      } else if (equalsLong(other, get_MIN_VALUE())) {
        return get_ONE();
      } else {
        var halfThis = shiftRight(_this__u8e3s4, 1);
        var approx = shiftLeft(halfThis.u4(other), 1);
        if (equalsLong(approx, get_ZERO())) {
          return isNegative(other) ? get_ONE() : get_NEG_ONE();
        } else {
          var rem = subtract(_this__u8e3s4, multiply(other, approx));
          return add(approx, rem.u4(other));
        }
      }
    } else if (equalsLong(other, get_MIN_VALUE())) {
      return get_ZERO();
    }
    if (isNegative(_this__u8e3s4)) {
      var tmp;
      if (isNegative(other)) {
        tmp = negate(_this__u8e3s4).u4(negate(other));
      } else {
        tmp = negate(negate(_this__u8e3s4).u4(other));
      }
      return tmp;
    } else if (isNegative(other)) {
      return negate(_this__u8e3s4.u4(negate(other)));
    }
    var res = get_ZERO();
    var rem_0 = _this__u8e3s4;
    while (greaterThanOrEqual(rem_0, other)) {
      var approxDouble = toNumber(rem_0) / toNumber(other);
      var approx2 = Math.max(1.0, Math.floor(approxDouble));
      var log2 = Math.ceil(Math.log(approx2) / Math.LN2);
      var delta = log2 <= 48.0 ? 1.0 : Math.pow(2.0, log2 - 48);
      var approxRes = fromNumber(approx2);
      var approxRem = multiply(approxRes, other);
      while (isNegative(approxRem) ? true : greaterThan(approxRem, rem_0)) {
        approx2 = approx2 - delta;
        approxRes = fromNumber(approx2);
        approxRem = multiply(approxRes, other);
      }
      if (isZero(approxRes)) {
        approxRes = get_ONE();
      }
      res = add(res, approxRes);
      rem_0 = subtract(rem_0, approxRem);
    }
    return res;
  }
  function modulo(_this__u8e3s4, other) {
    _init_properties_longjs_kt__tqrzid();
    return subtract(_this__u8e3s4, multiply(_this__u8e3s4.u4(other), other));
  }
  function shiftLeft(_this__u8e3s4, numBits) {
    _init_properties_longjs_kt__tqrzid();
    var numBits_0 = numBits & 63;
    if (numBits_0 === 0) {
      return _this__u8e3s4;
    } else {
      if (numBits_0 < 32) {
        return new Long(_this__u8e3s4.r4_1 << numBits_0, _this__u8e3s4.s4_1 << numBits_0 | (_this__u8e3s4.r4_1 >>> (32 - numBits_0 | 0) | 0));
      } else {
        return new Long(0, _this__u8e3s4.r4_1 << (numBits_0 - 32 | 0));
      }
    }
  }
  function shiftRight(_this__u8e3s4, numBits) {
    _init_properties_longjs_kt__tqrzid();
    var numBits_0 = numBits & 63;
    if (numBits_0 === 0) {
      return _this__u8e3s4;
    } else {
      if (numBits_0 < 32) {
        return new Long(_this__u8e3s4.r4_1 >>> numBits_0 | 0 | _this__u8e3s4.s4_1 << (32 - numBits_0 | 0), _this__u8e3s4.s4_1 >> numBits_0);
      } else {
        return new Long(_this__u8e3s4.s4_1 >> (numBits_0 - 32 | 0), _this__u8e3s4.s4_1 >= 0 ? 0 : -1);
      }
    }
  }
  function shiftRightUnsigned(_this__u8e3s4, numBits) {
    _init_properties_longjs_kt__tqrzid();
    var numBits_0 = numBits & 63;
    if (numBits_0 === 0) {
      return _this__u8e3s4;
    } else {
      if (numBits_0 < 32) {
        return new Long(_this__u8e3s4.r4_1 >>> numBits_0 | 0 | _this__u8e3s4.s4_1 << (32 - numBits_0 | 0), _this__u8e3s4.s4_1 >>> numBits_0 | 0);
      } else {
        var tmp;
        if (numBits_0 === 32) {
          tmp = new Long(_this__u8e3s4.s4_1, 0);
        } else {
          tmp = new Long(_this__u8e3s4.s4_1 >>> (numBits_0 - 32 | 0) | 0, 0);
        }
        return tmp;
      }
    }
  }
  function toNumber(_this__u8e3s4) {
    _init_properties_longjs_kt__tqrzid();
    return _this__u8e3s4.s4_1 * 4.294967296E9 + getLowBitsUnsigned(_this__u8e3s4);
  }
  function equalsLong(_this__u8e3s4, other) {
    _init_properties_longjs_kt__tqrzid();
    return _this__u8e3s4.s4_1 === other.s4_1 ? _this__u8e3s4.r4_1 === other.r4_1 : false;
  }
  function hashCode_0(l) {
    _init_properties_longjs_kt__tqrzid();
    return l.r4_1 ^ l.s4_1;
  }
  function toStringImpl(_this__u8e3s4, radix) {
    _init_properties_longjs_kt__tqrzid();
    if (radix < 2 ? true : 36 < radix) {
      throw Exception_init_$Create$('radix out of range: ' + radix);
    }
    if (isZero(_this__u8e3s4)) {
      return '0';
    }
    if (isNegative(_this__u8e3s4)) {
      if (equalsLong(_this__u8e3s4, get_MIN_VALUE())) {
        var radixLong = fromInt(radix);
        var div = _this__u8e3s4.u4(radixLong);
        var rem = subtract(multiply(div, radixLong), _this__u8e3s4).b7();
        var tmp = toStringImpl(div, radix);
        // Inline function 'kotlin.js.unsafeCast' call
        // Inline function 'kotlin.js.asDynamic' call
        return tmp + rem.toString(radix);
      } else {
        return '-' + toStringImpl(negate(_this__u8e3s4), radix);
      }
    }
    var digitsPerTime = radix === 2 ? 31 : radix <= 10 ? 9 : radix <= 21 ? 7 : radix <= 35 ? 6 : 5;
    var radixToPower = fromNumber(Math.pow(radix, digitsPerTime));
    var rem_0 = _this__u8e3s4;
    var result = '';
    while (true) {
      var remDiv = rem_0.u4(radixToPower);
      var intval = subtract(rem_0, multiply(remDiv, radixToPower)).b7();
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var digits = intval.toString(radix);
      rem_0 = remDiv;
      if (isZero(rem_0)) {
        return digits + result;
      } else {
        while (digits.length < digitsPerTime) {
          digits = '0' + digits;
        }
        result = digits + result;
      }
    }
  }
  function fromInt(value) {
    _init_properties_longjs_kt__tqrzid();
    return new Long(value, value < 0 ? -1 : 0);
  }
  function isNegative(_this__u8e3s4) {
    _init_properties_longjs_kt__tqrzid();
    return _this__u8e3s4.s4_1 < 0;
  }
  function isZero(_this__u8e3s4) {
    _init_properties_longjs_kt__tqrzid();
    return _this__u8e3s4.s4_1 === 0 ? _this__u8e3s4.r4_1 === 0 : false;
  }
  function isOdd(_this__u8e3s4) {
    _init_properties_longjs_kt__tqrzid();
    return (_this__u8e3s4.r4_1 & 1) === 1;
  }
  function negate(_this__u8e3s4) {
    _init_properties_longjs_kt__tqrzid();
    return _this__u8e3s4.t4();
  }
  function lessThan(_this__u8e3s4, other) {
    _init_properties_longjs_kt__tqrzid();
    return compare(_this__u8e3s4, other) < 0;
  }
  function fromNumber(value) {
    _init_properties_longjs_kt__tqrzid();
    if (isNaN_0(value)) {
      return get_ZERO();
    } else if (value <= -9.223372036854776E18) {
      return get_MIN_VALUE();
    } else if (value + 1 >= 9.223372036854776E18) {
      return get_MAX_VALUE();
    } else if (value < 0.0) {
      return negate(fromNumber(-value));
    } else {
      var twoPwr32 = 4.294967296E9;
      // Inline function 'kotlin.js.jsBitwiseOr' call
      var tmp = value % twoPwr32 | 0;
      var tmp$ret$1;
      // Inline function 'kotlin.js.jsBitwiseOr' call
      tmp$ret$1 = value / twoPwr32 | 0;
      return new Long(tmp, tmp$ret$1);
    }
  }
  function greaterThan(_this__u8e3s4, other) {
    _init_properties_longjs_kt__tqrzid();
    return compare(_this__u8e3s4, other) > 0;
  }
  function greaterThanOrEqual(_this__u8e3s4, other) {
    _init_properties_longjs_kt__tqrzid();
    return compare(_this__u8e3s4, other) >= 0;
  }
  function getLowBitsUnsigned(_this__u8e3s4) {
    _init_properties_longjs_kt__tqrzid();
    return _this__u8e3s4.r4_1 >= 0 ? _this__u8e3s4.r4_1 : 4.294967296E9 + _this__u8e3s4.r4_1;
  }
  var properties_initialized_longjs_kt_5aju7t;
  function _init_properties_longjs_kt__tqrzid() {
    if (!properties_initialized_longjs_kt_5aju7t) {
      properties_initialized_longjs_kt_5aju7t = true;
      ZERO = fromInt(0);
      ONE = fromInt(1);
      NEG_ONE = fromInt(-1);
      MAX_VALUE = new Long(-1, 2147483647);
      MIN_VALUE = new Long(0, -2147483648);
      TWO_PWR_24_ = fromInt(16777216);
    }
  }
  function toByte_0(a) {
    // Inline function 'kotlin.js.unsafeCast' call
    return a << 24 >> 24;
  }
  function numberToInt(a) {
    var tmp;
    if (a instanceof Long) {
      tmp = a.b7();
    } else {
      tmp = doubleToInt(a);
    }
    return tmp;
  }
  function doubleToInt(a) {
    var tmp;
    if (a > 2.147483647E9) {
      tmp = 2147483647;
    } else if (a < -2.147483648E9) {
      tmp = -2147483648;
    } else {
      // Inline function 'kotlin.js.jsBitwiseOr' call
      tmp = a | 0;
    }
    return tmp;
  }
  function numberToDouble(a) {
    // Inline function 'kotlin.js.unsafeCast' call
    return +a;
  }
  function toShort_0(a) {
    // Inline function 'kotlin.js.unsafeCast' call
    return a << 16 >> 16;
  }
  function numberToLong(a) {
    var tmp;
    if (a instanceof Long) {
      tmp = a;
    } else {
      tmp = fromNumber(a);
    }
    return tmp;
  }
  function numberToChar(a) {
    var tmp$ret$0;
    // Inline function 'kotlin.toUShort' call
    var tmp0_toUShort = numberToInt(a);
    tmp$ret$0 = _UShort___init__impl__jigrne(toShort_0(tmp0_toUShort));
    return _Char___init__impl__6a9atx_0(tmp$ret$0);
  }
  function toLong_1(a) {
    return fromInt(a);
  }
  function numberRangeToNumber(start, endInclusive) {
    return new IntRange(start, endInclusive);
  }
  function get_propertyRefClassMetadataCache() {
    _init_properties_reflectRuntime_kt__5r4uu3();
    return propertyRefClassMetadataCache;
  }
  var propertyRefClassMetadataCache;
  function metadataObject() {
    _init_properties_reflectRuntime_kt__5r4uu3();
    return classMeta(VOID, VOID, VOID, VOID);
  }
  function getPropertyCallableRef(name, paramCount, superType, getter, setter) {
    _init_properties_reflectRuntime_kt__5r4uu3();
    getter.get = getter;
    getter.set = setter;
    getter.callableName = name;
    // Inline function 'kotlin.js.unsafeCast' call
    return getPropertyRefClass(getter, getKPropMetadata(paramCount, setter), getInterfaceMaskFor(getter, superType));
  }
  function getPropertyRefClass(obj, metadata, imask) {
    _init_properties_reflectRuntime_kt__5r4uu3();
    obj.$metadata$ = metadata;
    obj.constructor = obj;
    obj.$imask$ = imask;
    return obj;
  }
  function getKPropMetadata(paramCount, setter) {
    _init_properties_reflectRuntime_kt__5r4uu3();
    return get_propertyRefClassMetadataCache()[paramCount][setter == null ? 0 : 1];
  }
  function getInterfaceMaskFor(obj, superType) {
    _init_properties_reflectRuntime_kt__5r4uu3();
    var tmp0_elvis_lhs = obj.$imask$;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$2;
      // Inline function 'kotlin.arrayOf' call
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$2 = [superType];
      tmp = implement(tmp$ret$2);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  var properties_initialized_reflectRuntime_kt_inkhwd;
  function _init_properties_reflectRuntime_kt__5r4uu3() {
    if (!properties_initialized_reflectRuntime_kt_inkhwd) {
      properties_initialized_reflectRuntime_kt_inkhwd = true;
      // Inline function 'kotlin.arrayOf' call
      // Inline function 'kotlin.arrayOf' call
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp = [metadataObject(), metadataObject()];
      // Inline function 'kotlin.arrayOf' call
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp_0 = [metadataObject(), metadataObject()];
      // Inline function 'kotlin.arrayOf' call
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      propertyRefClassMetadataCache = [tmp, tmp_0, [metadataObject(), metadataObject()]];
    }
  }
  function classMeta(name, associatedObjectKey, associatedObjects, suspendArity) {
    return createMetadata('class', name, associatedObjectKey, associatedObjects, suspendArity, null);
  }
  function createMetadata(kind, name, associatedObjectKey, associatedObjects, suspendArity, iid) {
    var undef = VOID;
    return {kind: kind, simpleName: name, associatedObjectKey: associatedObjectKey, associatedObjects: associatedObjects, suspendArity: suspendArity, $kClass$: undef, iid: iid};
  }
  function isArrayish(o) {
    return isJsArray(o) ? true : isView(o);
  }
  function isJsArray(obj) {
    // Inline function 'kotlin.js.unsafeCast' call
    return Array.isArray(obj);
  }
  function setMetadataFor(ctor, name, metadataConstructor, parent, interfaces, associatedObjectKey, associatedObjects, suspendArity) {
    if (!(parent == null)) {
      ctor.prototype = Object.create(parent.prototype);
      ctor.prototype.constructor = ctor;
    }
    var metadata = metadataConstructor(name, associatedObjectKey, associatedObjects, suspendArity == null ? [] : suspendArity);
    ctor.$metadata$ = metadata;
    if (!(interfaces == null)) {
      var receiver = !(metadata.iid == null) ? ctor : ctor.prototype;
      receiver.$imask$ = implement(interfaces);
    }
  }
  function isInterface(obj, iface) {
    return isInterfaceImpl(obj, iface.$metadata$.iid);
  }
  function isInterfaceImpl(obj, iface) {
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_elvis_lhs = obj.$imask$;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var mask = tmp;
    return isBitSet(mask, iface);
  }
  function isArray(obj) {
    var tmp;
    if (isJsArray(obj)) {
      // Inline function 'kotlin.js.asDynamic' call
      tmp = !obj.$type$;
    } else {
      tmp = false;
    }
    return tmp;
  }
  function isObject(obj) {
    var objTypeOf = typeof obj;
    var tmp;
    switch (objTypeOf) {
      case 'string':
        tmp = true;
        break;
      case 'number':
        tmp = true;
        break;
      case 'boolean':
        tmp = true;
        break;
      case 'function':
        tmp = true;
        break;
      default:
        // Inline function 'kotlin.js.jsInstanceOf' call

        tmp = obj instanceof Object;
        break;
    }
    return tmp;
  }
  function isNumber(a) {
    var tmp;
    if (typeof a === 'number') {
      tmp = true;
    } else {
      tmp = a instanceof Long;
    }
    return tmp;
  }
  function isComparable(value) {
    var type = typeof value;
    return ((type === 'string' ? true : type === 'boolean') ? true : isNumber(value)) ? true : isInterface(value, Comparable);
  }
  function isCharSequence(value) {
    return typeof value === 'string' ? true : isInterface(value, CharSequence);
  }
  function isBooleanArray(a) {
    return isJsArray(a) ? a.$type$ === 'BooleanArray' : false;
  }
  function isByteArray(a) {
    // Inline function 'kotlin.js.jsInstanceOf' call
    return a instanceof Int8Array;
  }
  function isShortArray(a) {
    // Inline function 'kotlin.js.jsInstanceOf' call
    return a instanceof Int16Array;
  }
  function isCharArray(a) {
    var tmp;
    // Inline function 'kotlin.js.jsInstanceOf' call
    if (a instanceof Uint16Array) {
      tmp = a.$type$ === 'CharArray';
    } else {
      tmp = false;
    }
    return tmp;
  }
  function isIntArray(a) {
    // Inline function 'kotlin.js.jsInstanceOf' call
    return a instanceof Int32Array;
  }
  function isFloatArray(a) {
    // Inline function 'kotlin.js.jsInstanceOf' call
    return a instanceof Float32Array;
  }
  function isLongArray(a) {
    return isJsArray(a) ? a.$type$ === 'LongArray' : false;
  }
  function isDoubleArray(a) {
    // Inline function 'kotlin.js.jsInstanceOf' call
    return a instanceof Float64Array;
  }
  function interfaceMeta(name, associatedObjectKey, associatedObjects, suspendArity) {
    return createMetadata('interface', name, associatedObjectKey, associatedObjects, suspendArity, generateInterfaceId());
  }
  function generateInterfaceId() {
    if (!!(iid == null)) {
      iid = 0;
    }
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    iid = get_iid() + 1 | 0;
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    return get_iid();
  }
  function get_iid() {
    var tmp = iid;
    if (!(tmp == null))
      return tmp;
    else {
      throwUninitializedPropertyAccessException('iid');
    }
  }
  var iid;
  function objectMeta(name, associatedObjectKey, associatedObjects, suspendArity) {
    return createMetadata('object', name, associatedObjectKey, associatedObjects, suspendArity, null);
  }
  function jsIsType(obj, jsClass) {
    if (jsClass === Object) {
      return isObject(obj);
    }
    if ((obj == null ? true : jsClass == null) ? true : !(typeof obj === 'object') ? !(typeof obj === 'function') : false) {
      return false;
    }
    var tmp;
    if (typeof jsClass === 'function') {
      // Inline function 'kotlin.js.jsInstanceOf' call
      tmp = obj instanceof jsClass;
    } else {
      tmp = false;
    }
    if (tmp) {
      return true;
    }
    var proto = jsGetPrototypeOf(jsClass);
    var constructor = proto == null ? null : proto.constructor;
    var tmp_0;
    if (constructor != null) {
      // Inline function 'kotlin.js.jsIn' call
      tmp_0 = '$metadata$' in constructor;
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      var metadata = constructor.$metadata$;
      if (metadata.kind === 'object') {
        return obj === jsClass;
      }
    }
    var klassMetadata = jsClass.$metadata$;
    if (klassMetadata == null) {
      // Inline function 'kotlin.js.jsInstanceOf' call
      return obj instanceof jsClass;
    }
    if (klassMetadata.kind === 'interface') {
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_elvis_lhs = klassMetadata.iid;
      var tmp_1;
      if (tmp1_elvis_lhs == null) {
        return false;
      } else {
        tmp_1 = tmp1_elvis_lhs;
      }
      var iid = tmp_1;
      return isInterfaceImpl(obj, iid);
    }
    return false;
  }
  function jsGetPrototypeOf(jsClass) {
    return Object.getPrototypeOf(jsClass);
  }
  function calculateErrorInfo(proto) {
    var tmp0_safe_receiver = proto.constructor;
    var metadata = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.$metadata$;
    var tmp2_safe_receiver = metadata == null ? null : metadata.errorInfo;
    if (tmp2_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return tmp2_safe_receiver;
    }
    var result = 0;
    if (hasProp(proto, 'message'))
      result = result | 1;
    if (hasProp(proto, 'cause'))
      result = result | 2;
    if (!(result === 3)) {
      var parentProto = getPrototypeOf(proto);
      if (parentProto != Error.prototype) {
        result = result | calculateErrorInfo(parentProto);
      }
    }
    if (!(metadata == null)) {
      metadata.errorInfo = result;
    }
    return result;
  }
  function hasProp(proto, propName) {
    return proto.hasOwnProperty(propName);
  }
  function getPrototypeOf(obj) {
    return Object.getPrototypeOf(obj);
  }
  function get_VOID() {
    _init_properties_void_kt__3zg9as();
    return VOID;
  }
  var VOID;
  var properties_initialized_void_kt_e4ret2;
  function _init_properties_void_kt__3zg9as() {
    if (!properties_initialized_void_kt_e4ret2) {
      properties_initialized_void_kt_e4ret2 = true;
      VOID = void 0;
    }
  }
  function copyOf(_this__u8e3s4, newSize) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(newSize >= 0)) {
      // Inline function 'kotlin.collections.copyOf.<anonymous>' call
      var message = 'Invalid new array size: ' + newSize + '.';
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    // Inline function 'withType' call
    var tmp1_withType = fillFrom(_this__u8e3s4, charArray(newSize));
    tmp1_withType.$type$ = 'CharArray';
    return tmp1_withType;
  }
  function copyOf_0(_this__u8e3s4, newSize) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(newSize >= 0)) {
      // Inline function 'kotlin.collections.copyOf.<anonymous>' call
      var message = 'Invalid new array size: ' + newSize + '.';
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    return fillFrom(_this__u8e3s4, new Float64Array(newSize));
  }
  function copyOf_1(_this__u8e3s4, newSize) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(newSize >= 0)) {
      // Inline function 'kotlin.collections.copyOf.<anonymous>' call
      var message = 'Invalid new array size: ' + newSize + '.';
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    return fillFrom(_this__u8e3s4, new Float32Array(newSize));
  }
  function copyOf_2(_this__u8e3s4, newSize) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(newSize >= 0)) {
      // Inline function 'kotlin.collections.copyOf.<anonymous>' call
      var message = 'Invalid new array size: ' + newSize + '.';
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    // Inline function 'withType' call
    var tmp1_withType = arrayCopyResize(_this__u8e3s4, newSize, new Long(0, 0));
    tmp1_withType.$type$ = 'LongArray';
    return tmp1_withType;
  }
  function copyOf_3(_this__u8e3s4, newSize) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(newSize >= 0)) {
      // Inline function 'kotlin.collections.copyOf.<anonymous>' call
      var message = 'Invalid new array size: ' + newSize + '.';
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    return fillFrom(_this__u8e3s4, new Int32Array(newSize));
  }
  function copyOf_4(_this__u8e3s4, newSize) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(newSize >= 0)) {
      // Inline function 'kotlin.collections.copyOf.<anonymous>' call
      var message = 'Invalid new array size: ' + newSize + '.';
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    return fillFrom(_this__u8e3s4, new Int16Array(newSize));
  }
  function copyOf_5(_this__u8e3s4, newSize) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(newSize >= 0)) {
      // Inline function 'kotlin.collections.copyOf.<anonymous>' call
      var message = 'Invalid new array size: ' + newSize + '.';
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    return fillFrom(_this__u8e3s4, new Int8Array(newSize));
  }
  function copyOf_6(_this__u8e3s4, newSize) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(newSize >= 0)) {
      // Inline function 'kotlin.collections.copyOf.<anonymous>' call
      var message = 'Invalid new array size: ' + newSize + '.';
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    // Inline function 'withType' call
    var tmp1_withType = arrayCopyResize(_this__u8e3s4, newSize, false);
    tmp1_withType.$type$ = 'BooleanArray';
    return tmp1_withType;
  }
  function contentEquals(_this__u8e3s4, other) {
    return contentEqualsInternal(_this__u8e3s4, other);
  }
  function contentHashCode(_this__u8e3s4) {
    return contentHashCodeInternal(_this__u8e3s4);
  }
  function asList(_this__u8e3s4) {
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    return new ArrayList(_this__u8e3s4);
  }
  function sort_0(_this__u8e3s4) {
    if (_this__u8e3s4.length > 1) {
      sortArray(_this__u8e3s4);
    }
  }
  function sortWith_0(_this__u8e3s4, comparator) {
    if (_this__u8e3s4.length > 1) {
      sortArrayWith(_this__u8e3s4, comparator);
    }
  }
  function copyOfRange(_this__u8e3s4, fromIndex, toIndex) {
    Companion_getInstance().t1(fromIndex, toIndex, _this__u8e3s4.length);
    // Inline function 'withType' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp0_withType = _this__u8e3s4.slice(fromIndex, toIndex);
    tmp0_withType.$type$ = 'LongArray';
    return tmp0_withType;
  }
  function copyOf_7(_this__u8e3s4) {
    // Inline function 'withType' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp0_withType = _this__u8e3s4.slice();
    tmp0_withType.$type$ = 'LongArray';
    return tmp0_withType;
  }
  function contentEquals_0(_this__u8e3s4, other) {
    return contentEqualsInternal(_this__u8e3s4, other);
  }
  function copyOfRange_0(_this__u8e3s4, fromIndex, toIndex) {
    Companion_getInstance().t1(fromIndex, toIndex, _this__u8e3s4.length);
    // Inline function 'kotlin.js.asDynamic' call
    return _this__u8e3s4.slice(fromIndex, toIndex);
  }
  function contentHashCode_0(_this__u8e3s4) {
    return contentHashCodeInternal(_this__u8e3s4);
  }
  function getCategoryValue(_this__u8e3s4) {
    // Inline function 'kotlin.code' call
    var ch = Char__toInt_impl_vasixd(_this__u8e3s4);
    var index = binarySearchRange(Category_getInstance().ue_1, ch);
    var start = Category_getInstance().ue_1[index];
    var code = Category_getInstance().ve_1[index];
    var value = categoryValueFrom(code, ch - start | 0);
    return value === 17 ? CharCategory_UNASSIGNED_getInstance().qc_1 : value;
  }
  function Category() {
    Category_instance = this;
    var toBase64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
    var fromBase64 = new Int32Array(128);
    var inductionVariable = 0;
    var last = charSequenceLength(toBase64) - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.code' call
        var tmp0_get_code_gknlva = charSequenceGet(toBase64, i);
        fromBase64[Char__toInt_impl_vasixd(tmp0_get_code_gknlva)] = i;
      }
       while (inductionVariable <= last);
    var rangeStartDiff = 'gBCFEDCKCDCaDDaDBhBCEEDDDDDEDXBHYBH5BRwBGDCHDCIDFHDCHFDCDEIRTEE7BGHDDJlCBbSEMOFGERwDEDDDDECEFCRBJhBFDCYFFCCzBvBjBBFC3BOhDBmBDGpBDDCtBBJIbEECLGDFCLDCgBBKVKEDiDDHCFECECKCEODBebC5CLBOKhBJDDDDWEBHFCFCPBZDEL1BVBSLPBgBB2BDBDICFBHKCCKCPDBHEDWBHEDDDDEDEDIBDGDCKCCGDDDCGECCWBFMDDCDEDDCHDDHKDDBKDBHFCWBFGFDBDDFEDBPDDKCHBGDCHEDWBFGFDCEDEDBHDDGDCKCGJEGDBFDDFDDDDDMEFDBFDCGBOKDFDFDCGFCXBQDDDDDBEGEDFDDKHBHDDGFCXBKBFCEFCFCHCHECCKDNCCHFCoBEDECFDDDDHDCCKJBGDCSDYBJEHBFDDEBIGKDCMuBFHEBGBIBKCkBFBFBXEIFJDFDGCKCEgBBDPEDGKKGECIBkBEOBDFFLBkBBIBEFFEClBrBCEBEGDBKGGDDDDDCHDENDCFEKDDlBDDFrBCDpKBECGEECpBBEChBBECGEECPB5BBECjCCDJUDQKG2CCGDsTCRBaCDrCDDIHNBEDLSDCJSCMLFCCM0BDHGFLBFDDKGKGEFDDBKGjBB1BHFChBDFmCKfDDDDDDCGDCFDKeCFLsBEaGKBDiBXDDD1BDGDEIGJEKGKGHBGCMF/BEBvBCEDDFHEKHKJJDDeDDGDKsBFEDCIEkBIICCDFKDDKeGCJHrBCDIIDBNBHEBEFDBFsB/BNBiBlB6BBF1EIiDJIGCGCIIIIGCGCIIIIOCIIIIIIDFEDDBFEDDDDEBDIFDDFEDBLFGCEEICFBJCDEDCLDKBFBKCCGDDKDDNDgBQNEBDMPFFDEDEBFFHECEBEEDFBEDDQjBCEDEFFCCJHBeEEfsIIEUCHCxCBeZoBGlCZLV8BuCW3FBJB2BIvDB4HOesBFCfKQgIjEW/BEgBCiIwBVCGnBCgBBpDvBBuBEDBHEFGCCjDCGEDCFCFlBDDF4BHCOBXJHBHBHBHBHBHBHBHBgBCECGHGEDIFBKCEDMEtBaB5CM2GaMEDDCKCGFCJEDFDDDC2CDDDB6CDCFrBB+CDEKgBkBMQfBKeIBPgBKnBPgKguGgC9vUDVB3jBD3BJoBGCsIBDQKCUuBDDKCcCCmCKCGIXJCNC/BBHGKDECEVFBEMCEEBqBDDGDFDXDCEBDGEG0BEICyBQCICKGSGDEBKcICXLCLBdDDBvBDECCDNCKECFCJKFBpBFEDCJDBICCKCEQBGDDByBEDCEFBYDCLEDDCKGCGCGJHBHBrBBEJDEwCjBIDCKGk9KMXExBEggCgoGuLCqDmBHMFFCKBNBFBIsDQRrLCQgCC2BoBMCCQGEGQDCQDDDDFDGDECEEFBnEEBFEDCKCDCaDDaDBFCKBtBCfDGCGCFEDDDDCECKDC';
    var diff = decodeVarLenBase64(rangeStartDiff, fromBase64, 1342);
    var start = new Int32Array(diff.length + 1 | 0);
    var inductionVariable_0 = 0;
    var last_0 = diff.length - 1 | 0;
    if (inductionVariable_0 <= last_0)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        start[i_0 + 1 | 0] = start[i_0] + diff[i_0] | 0;
      }
       while (inductionVariable_0 <= last_0);
    this.ue_1 = start;
    var rangeCategory = 'PsY44a41W54UYJYZYB14W7XC15WZPsYa84bl9Zw8b85Lr7C44brlerrYBZBCZCiBiBiBhCiiBhChiBhiCBhhChiCihBhChCChiBhChiClBCFhjCiBiBihDhiBhCCihBiBBhCCFCEbEbEb7EbGhCk7BixRkiCi4BRbh4BhRhCBRBCiiBBCiBChiZBCBCiBcGHhChCiBRBxxEYC40Rx8c6RGUm4GRFRFYRQZ44acG4wRYFEFGJYllGFlYGwcGmkEmcGFJFl8cYxwFGFGRFGFRJFGkkcYkxRm6aFGEGmmEmEGRYRFGxxYFRFRFRGQGIFmIFIGIooGFGFGYJ4EFmoIRFlxRlxRFRFxlRxlFllRxmFIGxxIoxRomFRIRxlFlmGRJFaL86F4mRxmGoRFRFRFRFllRxGIGRxmGxmGmxRxGRFlRRJmmFllGYRmmIRFllRlRFRFllRFxxGFIGmmRoxImxRFRllGmxRJ4aRFGxmIoRFlxRlxRFRFllRFxxGlImoGmmRxoIxoIGRmmIRxlFlmGRJ8FLRxmFFRFllRllRxxFlRlxRxlFRFRFRooGRIooRomRxFRIRJLc8aRmoIoGFllRlRFRFRlmGmoIooRGRGRxmGFRllGmxRJRYL8lGooYFllRlRFRFRFRmlIIxGooRGRIRlxFGRJxlFRGIFllRlRFlmGIGxIooRomF8xRxxFllILFGRJLcFxmIoRFRFRFxlRFRxxGxxIooGmmRRIRJxxIoYRFllGGRaFEGYJYRxlFRFRFlRFllGGlxRFxEGRJRFRFcY84c8mGcJL8G1WIFRFRGIGmmYFGRGRcGc88RYcYRFIGIGmmIomGFJYFooGmlFllGmmFIFIFGFmoIGIomFJIm8cBhRRxxBC4ECFRFRFlRFRFRFRFRFRFlRFRFRFRFRFRGYLRFcRBRCxxUF8YFMF1WRFYKFRFRFGRFGYRFGRFllRlRGRFmmIGIooGGY44E46FmxRJRLRY44U44GmmQRJRFEFRFGFlGRFRFxmGmoIooGmoIoxRxxIoGIGRxxcx4YJFRFRFRFRJLRcFmmIomRx4YFoGGmRomIGIGmxRJRJRYEYRGmmHRGIFmIGmIIooGFRJYcGcRmmIFomGmmIomGmlFJFmoGooGGIRYFIGIGRYJRFJFEYCRBRBYRGYGIGFGFllGomGFRCECECEGRGhCCiBCBCRBRCBCBCRBRCxBCBCRCDCDCDCiiRBj7CbCiiRBj7b7iCiiRxiCBRbCBbxxCiiRBj7bRMQUY9+V9+VYtOQMY9eY43X44Z1WY54XYMQRQrERLZ12ELZ12RERaRGHGHGR88B88BihBhiChhC8hcZBc8BB8CBCFi8cihBZBC8Z8CLKhCKr8cRZcZc88ZcZc85Z8ZcZc1WcZc1WcZcZcZcRcRLcLcZcZcZcZc1WLcZ1WZ1WZcZ1WZ1WZ1WZcZcZcRcRcBRCixBBCiBBihCCEBhCCchCGhCRY44LCiRRxxCFRkYRGFRFRFRFRFRFRFRFRFRGY9eY49eY44U49e49e1WYEYUY04VY48cRcRcRcRcRs4Y48ElK1Wc1W12U2cKGooUE88KqqEl4c8RFxxGm7bkkFUF4kEkFRFRFx8cLcFcRFcRLcLcLcLcLcFcFRFEFRcRFEYFEYFJFRhClmHnnYG4EhCEGFKGYRbEbhCCiBECiBhCk7bhClBihCiBBCBhCRhiBhhCCRhiFkkCFlGllGllGFooGmIcGRL88aRFYRIFIGRYJRGFYl4FGJFGYFGIRYFRGIFmoIGIGIYxEJRYFmEFJFRFGmoImoIGRFGFmIRJRYFEFcloGIFmlGmlFGFlmGFRllEYFomGo4YlkEoGRFRFRFRFRFRCbECk7bRCFooG4oGRJRFRFRFRTSFRFRCRCRlGFZFRFRlxFFbRF2VRFRFRF6cRGY41WRG40UX1W44V24Y44X33Y44R44U1WY50Z5R46YRFRFxxQY44a41W54UYJYZYB14W7XC15WZ12YYFEFEFRFRFRFlxRllRxxa65b86axcZcRQcR';
    this.ve_1 = decodeVarLenBase64(rangeCategory, fromBase64, 1343);
  }
  var Category_instance;
  function Category_getInstance() {
    if (Category_instance == null)
      new Category();
    return Category_instance;
  }
  function categoryValueFrom(code, ch) {
    var tmp;
    if (code < 32) {
      tmp = code;
    } else if (code < 1024) {
      tmp = (ch & 1) === 1 ? code >> 5 : code & 31;
    } else {
      switch (ch % 3 | 0) {
        case 2:
          tmp = code >> 10;
          break;
        case 1:
          tmp = code >> 5 & 31;
          break;
        default:
          tmp = code & 31;
          break;
      }
    }
    return tmp;
  }
  function decodeVarLenBase64(base64, fromBase64, resultLength) {
    var result = new Int32Array(resultLength);
    var index = 0;
    var int = 0;
    var shift = 0;
    var inductionVariable = 0;
    var last = base64.length;
    while (inductionVariable < last) {
      var char = charSequenceGet(base64, inductionVariable);
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'kotlin.code' call
      var sixBit = fromBase64[Char__toInt_impl_vasixd(char)];
      int = int | (sixBit & 31) << shift;
      if (sixBit < 32) {
        var tmp1 = index;
        index = tmp1 + 1 | 0;
        result[tmp1] = int;
        int = 0;
        shift = 0;
      } else {
        shift = shift + 5 | 0;
      }
    }
    return result;
  }
  function digitToIntImpl(_this__u8e3s4) {
    // Inline function 'kotlin.code' call
    var ch = Char__toInt_impl_vasixd(_this__u8e3s4);
    var index = binarySearchRange(Digit_getInstance().we_1, ch);
    var diff = ch - Digit_getInstance().we_1[index] | 0;
    return diff < 10 ? diff : -1;
  }
  function binarySearchRange(array, needle) {
    var bottom = 0;
    var top = array.length - 1 | 0;
    var middle = -1;
    var value = 0;
    while (bottom <= top) {
      middle = (bottom + top | 0) / 2 | 0;
      value = array[middle];
      if (needle > value)
        bottom = middle + 1 | 0;
      else if (needle === value)
        return middle;
      else
        top = middle - 1 | 0;
    }
    return middle - (needle < value ? 1 : 0) | 0;
  }
  function Digit() {
    Digit_instance = this;
    var tmp = this;
    // Inline function 'kotlin.intArrayOf' call
    tmp.we_1 = new Int32Array([48, 1632, 1776, 1984, 2406, 2534, 2662, 2790, 2918, 3046, 3174, 3302, 3430, 3558, 3664, 3792, 3872, 4160, 4240, 6112, 6160, 6470, 6608, 6784, 6800, 6992, 7088, 7232, 7248, 42528, 43216, 43264, 43472, 43504, 43600, 44016, 65296]);
  }
  var Digit_instance;
  function Digit_getInstance() {
    if (Digit_instance == null)
      new Digit();
    return Digit_instance;
  }
  function asList_0(_this__u8e3s4) {
    return new asList$1(_this__u8e3s4);
  }
  function asList$1($this_asList) {
    this.xe_1 = $this_asList;
    AbstractList.call(this);
  }
  protoOf(asList$1).i = function () {
    return _ULongArray___get_size__impl__ju6dtr(this.xe_1);
  };
  protoOf(asList$1).p = function () {
    return ULongArray__isEmpty_impl_c3yngu(this.xe_1);
  };
  protoOf(asList$1).ye = function (element) {
    return ULongArray__contains_impl_v9bgai(this.xe_1, element);
  };
  protoOf(asList$1).g1 = function (element) {
    if (!(element instanceof ULong))
      return false;
    return this.ye(element instanceof ULong ? element.f1_1 : THROW_CCE());
  };
  protoOf(asList$1).ze = function (index) {
    Companion_getInstance().u1(index, this.i());
    return ULongArray__get_impl_pr71q9(this.xe_1, index);
  };
  protoOf(asList$1).l = function (index) {
    return new ULong(this.ze(index));
  };
  protoOf(asList$1).af = function (element) {
    var tmp = isObject(new ULong(element)) ? new ULong(element) : THROW_CCE();
    if (!(tmp instanceof ULong))
      return -1;
    // Inline function 'kotlin.collections.indexOf' call
    var tmp_0 = _ULongArray___get_storage__impl__28e64j(this.xe_1);
    var tmp$ret$0;
    // Inline function 'kotlin.ULong.toLong' call
    tmp$ret$0 = _ULong___get_data__impl__fggpzb(element);
    return indexOf_0(tmp_0, tmp$ret$0);
  };
  protoOf(asList$1).v1 = function (element) {
    if (!(element instanceof ULong))
      return -1;
    return this.af(element instanceof ULong ? element.f1_1 : THROW_CCE());
  };
  function isWhitespaceImpl(_this__u8e3s4) {
    // Inline function 'kotlin.code' call
    var ch = Char__toInt_impl_vasixd(_this__u8e3s4);
    return (((9 <= ch ? ch <= 13 : false) ? true : 28 <= ch ? ch <= 32 : false) ? true : ch === 160) ? true : ch > 4096 ? (((((ch === 5760 ? true : 8192 <= ch ? ch <= 8202 : false) ? true : ch === 8232) ? true : ch === 8233) ? true : ch === 8239) ? true : ch === 8287) ? true : ch === 12288 : false;
  }
  function IllegalArgumentException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    IllegalArgumentException.call($this);
    return $this;
  }
  function IllegalArgumentException_init_$Create$() {
    var tmp = IllegalArgumentException_init_$Init$(objectCreate(protoOf(IllegalArgumentException)));
    captureStack(tmp, IllegalArgumentException_init_$Create$);
    return tmp;
  }
  function IllegalArgumentException_init_$Init$_0(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    IllegalArgumentException.call($this);
    return $this;
  }
  function IllegalArgumentException_init_$Create$_0(message) {
    var tmp = IllegalArgumentException_init_$Init$_0(message, objectCreate(protoOf(IllegalArgumentException)));
    captureStack(tmp, IllegalArgumentException_init_$Create$_0);
    return tmp;
  }
  function IllegalArgumentException_init_$Init$_1(message, cause, $this) {
    RuntimeException_init_$Init$_1(message, cause, $this);
    IllegalArgumentException.call($this);
    return $this;
  }
  function IllegalArgumentException() {
    captureStack(this, IllegalArgumentException);
  }
  function IndexOutOfBoundsException_init_$Init$(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    IndexOutOfBoundsException.call($this);
    return $this;
  }
  function IndexOutOfBoundsException_init_$Create$(message) {
    var tmp = IndexOutOfBoundsException_init_$Init$(message, objectCreate(protoOf(IndexOutOfBoundsException)));
    captureStack(tmp, IndexOutOfBoundsException_init_$Create$);
    return tmp;
  }
  function IndexOutOfBoundsException() {
    captureStack(this, IndexOutOfBoundsException);
  }
  function IllegalStateException_init_$Init$(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    IllegalStateException.call($this);
    return $this;
  }
  function IllegalStateException_init_$Create$(message) {
    var tmp = IllegalStateException_init_$Init$(message, objectCreate(protoOf(IllegalStateException)));
    captureStack(tmp, IllegalStateException_init_$Create$);
    return tmp;
  }
  function IllegalStateException() {
    captureStack(this, IllegalStateException);
  }
  function Exception_init_$Init$($this) {
    extendThrowable($this);
    Exception.call($this);
    return $this;
  }
  function Exception_init_$Init$_0(message, $this) {
    extendThrowable($this, message);
    Exception.call($this);
    return $this;
  }
  function Exception_init_$Create$(message) {
    var tmp = Exception_init_$Init$_0(message, objectCreate(protoOf(Exception)));
    captureStack(tmp, Exception_init_$Create$);
    return tmp;
  }
  function Exception_init_$Init$_1(message, cause, $this) {
    extendThrowable($this, message, cause);
    Exception.call($this);
    return $this;
  }
  function Exception() {
    captureStack(this, Exception);
  }
  function RuntimeException_init_$Init$($this) {
    Exception_init_$Init$($this);
    RuntimeException.call($this);
    return $this;
  }
  function RuntimeException_init_$Init$_0(message, $this) {
    Exception_init_$Init$_0(message, $this);
    RuntimeException.call($this);
    return $this;
  }
  function RuntimeException_init_$Create$(message) {
    var tmp = RuntimeException_init_$Init$_0(message, objectCreate(protoOf(RuntimeException)));
    captureStack(tmp, RuntimeException_init_$Create$);
    return tmp;
  }
  function RuntimeException_init_$Init$_1(message, cause, $this) {
    Exception_init_$Init$_1(message, cause, $this);
    RuntimeException.call($this);
    return $this;
  }
  function RuntimeException() {
    captureStack(this, RuntimeException);
  }
  function NoSuchElementException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    NoSuchElementException.call($this);
    return $this;
  }
  function NoSuchElementException_init_$Create$() {
    var tmp = NoSuchElementException_init_$Init$(objectCreate(protoOf(NoSuchElementException)));
    captureStack(tmp, NoSuchElementException_init_$Create$);
    return tmp;
  }
  function NoSuchElementException_init_$Init$_0(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    NoSuchElementException.call($this);
    return $this;
  }
  function NoSuchElementException_init_$Create$_0(message) {
    var tmp = NoSuchElementException_init_$Init$_0(message, objectCreate(protoOf(NoSuchElementException)));
    captureStack(tmp, NoSuchElementException_init_$Create$_0);
    return tmp;
  }
  function NoSuchElementException() {
    captureStack(this, NoSuchElementException);
  }
  function Error_init_$Init$(message, $this) {
    extendThrowable($this, message);
    Error_0.call($this);
    return $this;
  }
  function Error_0() {
    captureStack(this, Error_0);
  }
  function UnsupportedOperationException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    UnsupportedOperationException.call($this);
    return $this;
  }
  function UnsupportedOperationException_init_$Create$() {
    var tmp = UnsupportedOperationException_init_$Init$(objectCreate(protoOf(UnsupportedOperationException)));
    captureStack(tmp, UnsupportedOperationException_init_$Create$);
    return tmp;
  }
  function UnsupportedOperationException_init_$Init$_0(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    UnsupportedOperationException.call($this);
    return $this;
  }
  function UnsupportedOperationException_init_$Create$_0(message) {
    var tmp = UnsupportedOperationException_init_$Init$_0(message, objectCreate(protoOf(UnsupportedOperationException)));
    captureStack(tmp, UnsupportedOperationException_init_$Create$_0);
    return tmp;
  }
  function UnsupportedOperationException() {
    captureStack(this, UnsupportedOperationException);
  }
  function NumberFormatException_init_$Init$(message, $this) {
    IllegalArgumentException_init_$Init$_0(message, $this);
    NumberFormatException.call($this);
    return $this;
  }
  function NumberFormatException_init_$Create$(message) {
    var tmp = NumberFormatException_init_$Init$(message, objectCreate(protoOf(NumberFormatException)));
    captureStack(tmp, NumberFormatException_init_$Create$);
    return tmp;
  }
  function NumberFormatException() {
    captureStack(this, NumberFormatException);
  }
  function ArithmeticException_init_$Init$(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    ArithmeticException.call($this);
    return $this;
  }
  function ArithmeticException_init_$Create$(message) {
    var tmp = ArithmeticException_init_$Init$(message, objectCreate(protoOf(ArithmeticException)));
    captureStack(tmp, ArithmeticException_init_$Create$);
    return tmp;
  }
  function ArithmeticException() {
    captureStack(this, ArithmeticException);
  }
  function NullPointerException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    NullPointerException.call($this);
    return $this;
  }
  function NullPointerException_init_$Create$() {
    var tmp = NullPointerException_init_$Init$(objectCreate(protoOf(NullPointerException)));
    captureStack(tmp, NullPointerException_init_$Create$);
    return tmp;
  }
  function NullPointerException() {
    captureStack(this, NullPointerException);
  }
  function NoWhenBranchMatchedException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    NoWhenBranchMatchedException.call($this);
    return $this;
  }
  function NoWhenBranchMatchedException_init_$Create$() {
    var tmp = NoWhenBranchMatchedException_init_$Init$(objectCreate(protoOf(NoWhenBranchMatchedException)));
    captureStack(tmp, NoWhenBranchMatchedException_init_$Create$);
    return tmp;
  }
  function NoWhenBranchMatchedException() {
    captureStack(this, NoWhenBranchMatchedException);
  }
  function ClassCastException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    ClassCastException.call($this);
    return $this;
  }
  function ClassCastException_init_$Create$() {
    var tmp = ClassCastException_init_$Init$(objectCreate(protoOf(ClassCastException)));
    captureStack(tmp, ClassCastException_init_$Create$);
    return tmp;
  }
  function ClassCastException() {
    captureStack(this, ClassCastException);
  }
  function UninitializedPropertyAccessException_init_$Init$(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    UninitializedPropertyAccessException.call($this);
    return $this;
  }
  function UninitializedPropertyAccessException_init_$Create$(message) {
    var tmp = UninitializedPropertyAccessException_init_$Init$(message, objectCreate(protoOf(UninitializedPropertyAccessException)));
    captureStack(tmp, UninitializedPropertyAccessException_init_$Create$);
    return tmp;
  }
  function UninitializedPropertyAccessException() {
    captureStack(this, UninitializedPropertyAccessException);
  }
  function findAssociatedObject(_this__u8e3s4, annotationClass) {
    var tmp;
    var tmp_0;
    if (_this__u8e3s4 instanceof KClassImpl) {
      tmp_0 = annotationClass instanceof KClassImpl;
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      // Inline function 'kotlin.js.asDynamic' call
      var tmp0_safe_receiver = annotationClass.db().$metadata$;
      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.associatedObjectKey;
      var tmp_1;
      if (tmp1_safe_receiver == null) {
        tmp_1 = null;
      } else {
        // Inline function 'kotlin.js.unsafeCast' call
        tmp_1 = tmp1_safe_receiver;
      }
      var tmp2_elvis_lhs = tmp_1;
      var tmp_2;
      if (tmp2_elvis_lhs == null) {
        return null;
      } else {
        tmp_2 = tmp2_elvis_lhs;
      }
      var key = tmp_2;
      // Inline function 'kotlin.js.asDynamic' call
      var tmp3_safe_receiver = _this__u8e3s4.db().$metadata$;
      var tmp4_elvis_lhs = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.associatedObjects;
      var tmp_3;
      if (tmp4_elvis_lhs == null) {
        return null;
      } else {
        tmp_3 = tmp4_elvis_lhs;
      }
      var map = tmp_3;
      var tmp5_elvis_lhs = map[key];
      var tmp_4;
      if (tmp5_elvis_lhs == null) {
        return null;
      } else {
        tmp_4 = tmp5_elvis_lhs;
      }
      var factory = tmp_4;
      return factory();
    } else {
      tmp = null;
    }
    return tmp;
  }
  function toString_4(_this__u8e3s4, radix) {
    return toStringImpl(_this__u8e3s4, checkRadix(radix));
  }
  //region block: post-declaration
  protoOf(InternalHashCodeMap).v9 = createJsMap;
  //endregion
  //region block: init
  _stableSortingIsSupported = null;
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = createInvariantKTypeProjection;
  _.$_$.b = createKType;
  _.$_$.c = findAssociatedObject;
  _.$_$.d = getKClassFromExpression;
  _.$_$.e = getKClass;
  _.$_$.f = CharCategory_CONNECTOR_PUNCTUATION_getInstance;
  _.$_$.g = CharCategory_DECIMAL_DIGIT_NUMBER_getInstance;
  _.$_$.h = CharCategory_LOWERCASE_LETTER_getInstance;
  _.$_$.i = CharCategory_OTHER_LETTER_getInstance;
  _.$_$.j = CharCategory_UPPERCASE_LETTER_getInstance;
  _.$_$.k = ArrayList_init_$Create$_0;
  _.$_$.l = ArrayList_init_$Create$;
  _.$_$.m = ArrayList_init_$Create$_1;
  _.$_$.n = HashMap_init_$Create$;
  _.$_$.o = HashMap_init_$Create$_2;
  _.$_$.p = HashSet_init_$Create$_1;
  _.$_$.q = HashSet_init_$Create$;
  _.$_$.r = HashSet_init_$Create$_0;
  _.$_$.s = LinkedHashMap_init_$Create$_1;
  _.$_$.t = LinkedHashMap_init_$Create$;
  _.$_$.u = LinkedHashMap_init_$Create$_2;
  _.$_$.v = LinkedHashSet_init_$Create$;
  _.$_$.w = LinkedHashSet_init_$Create$_0;
  _.$_$.x = Regex_init_$Create$;
  _.$_$.y = StringBuilder_init_$Create$_1;
  _.$_$.z = ArithmeticException_init_$Create$;
  _.$_$.a1 = Exception_init_$Init$_0;
  _.$_$.b1 = Exception_init_$Create$;
  _.$_$.c1 = IllegalArgumentException_init_$Create$;
  _.$_$.d1 = IllegalArgumentException_init_$Init$_0;
  _.$_$.e1 = IllegalArgumentException_init_$Create$_0;
  _.$_$.f1 = IllegalArgumentException_init_$Init$_1;
  _.$_$.g1 = IllegalStateException_init_$Create$;
  _.$_$.h1 = IndexOutOfBoundsException_init_$Create$;
  _.$_$.i1 = NoSuchElementException_init_$Create$;
  _.$_$.j1 = NoSuchElementException_init_$Create$_0;
  _.$_$.k1 = NumberFormatException_init_$Create$;
  _.$_$.l1 = RuntimeException_init_$Init$_0;
  _.$_$.m1 = RuntimeException_init_$Create$;
  _.$_$.n1 = UnsupportedOperationException_init_$Create$_0;
  _.$_$.o1 = _Char___init__impl__6a9atx;
  _.$_$.p1 = Char__minus_impl_a2frrh;
  _.$_$.q1 = Char__minus_impl_a2frrh_0;
  _.$_$.r1 = Char__toInt_impl_vasixd;
  _.$_$.s1 = toString_1;
  _.$_$.t1 = _UByte___init__impl__g9hnc4;
  _.$_$.u1 = _UByte___get_data__impl__jof9qr;
  _.$_$.v1 = UByte__toString_impl_v72jg;
  _.$_$.w1 = _UInt___init__impl__l7qpdl;
  _.$_$.x1 = _UInt___get_data__impl__f0vqqw;
  _.$_$.y1 = UInt__toString_impl_dbgl21;
  _.$_$.z1 = _UIntArray___init__impl__ghjpc6_0;
  _.$_$.a2 = _UIntArray___init__impl__ghjpc6;
  _.$_$.b2 = UIntArray__get_impl_gp5kza;
  _.$_$.c2 = UIntArray__hashCode_impl_hr7ost;
  _.$_$.d2 = UIntArray__isEmpty_impl_vd8j4n;
  _.$_$.e2 = UIntArray__iterator_impl_tkdv7k;
  _.$_$.f2 = UIntArray__set_impl_7f2zu2;
  _.$_$.g2 = _UIntArray___get_size__impl__r6l8ci;
  _.$_$.h2 = _UIntArray___get_storage__impl__92a0v0;
  _.$_$.i2 = _ULong___init__impl__c78o9k;
  _.$_$.j2 = _ULong___get_data__impl__fggpzb;
  _.$_$.k2 = ULong__toString_impl_f9au7k;
  _.$_$.l2 = _ULongArray___init__impl__twm1l3_0;
  _.$_$.m2 = _ULongArray___init__impl__twm1l3;
  _.$_$.n2 = ULongArray__get_impl_pr71q9;
  _.$_$.o2 = ULongArray__hashCode_impl_aze4wa;
  _.$_$.p2 = ULongArray__isEmpty_impl_c3yngu;
  _.$_$.q2 = ULongArray__iterator_impl_cq4d2h;
  _.$_$.r2 = ULongArray__set_impl_z19mvh;
  _.$_$.s2 = _ULongArray___get_size__impl__ju6dtr;
  _.$_$.t2 = _ULongArray___get_storage__impl__28e64j;
  _.$_$.u2 = _UShort___init__impl__jigrne;
  _.$_$.v2 = _UShort___get_data__impl__g0245;
  _.$_$.w2 = UShort__toString_impl_edaoee;
  _.$_$.x2 = BooleanCompanionObject_getInstance;
  _.$_$.y2 = ByteCompanionObject_getInstance;
  _.$_$.z2 = DoubleCompanionObject_getInstance;
  _.$_$.a3 = FloatCompanionObject_getInstance;
  _.$_$.b3 = IntCompanionObject_getInstance;
  _.$_$.c3 = ShortCompanionObject_getInstance;
  _.$_$.d3 = StringCompanionObject_getInstance;
  _.$_$.e3 = PrimitiveClasses_getInstance;
  _.$_$.f3 = Companion_getInstance_14;
  _.$_$.g3 = Companion_getInstance_16;
  _.$_$.h3 = Companion_getInstance_5;
  _.$_$.i3 = Companion_getInstance_6;
  _.$_$.j3 = Companion_getInstance_7;
  _.$_$.k3 = Companion_getInstance_8;
  _.$_$.l3 = Unit_getInstance;
  _.$_$.m3 = AbstractIterator;
  _.$_$.n3 = ArrayList;
  _.$_$.o3 = Collection;
  _.$_$.p3 = HashMap;
  _.$_$.q3 = HashSet;
  _.$_$.r3 = LinkedHashMap;
  _.$_$.s3 = LinkedHashSet;
  _.$_$.t3 = List;
  _.$_$.u3 = Entry;
  _.$_$.v3 = Map;
  _.$_$.w3 = MutableList;
  _.$_$.x3 = MutableMap;
  _.$_$.y3 = MutableSet;
  _.$_$.z3 = Set;
  _.$_$.a4 = addAll;
  _.$_$.b4 = any;
  _.$_$.c4 = arrayCopy;
  _.$_$.d4 = asList;
  _.$_$.e4 = checkIndexOverflow;
  _.$_$.f4 = collectionSizeOrDefault;
  _.$_$.g4 = contentEquals;
  _.$_$.h4 = contentEquals_0;
  _.$_$.i4 = contentHashCode_0;
  _.$_$.j4 = contentHashCode;
  _.$_$.k4 = copyOfRange_0;
  _.$_$.l4 = copyOfRange;
  _.$_$.m4 = copyOf_4;
  _.$_$.n4 = copyOf_2;
  _.$_$.o4 = copyOf_6;
  _.$_$.p4 = copyOf_7;
  _.$_$.q4 = copyOf;
  _.$_$.r4 = copyOf_5;
  _.$_$.s4 = copyOf_0;
  _.$_$.t4 = copyOf_1;
  _.$_$.u4 = copyOf_3;
  _.$_$.v4 = copyToArray;
  _.$_$.w4 = count;
  _.$_$.x4 = distinct;
  _.$_$.y4 = dropLast;
  _.$_$.z4 = drop;
  _.$_$.a5 = eachCount;
  _.$_$.b5 = emptyList;
  _.$_$.c5 = emptyMap;
  _.$_$.d5 = filterNotNull;
  _.$_$.e5 = first_0;
  _.$_$.f5 = first;
  _.$_$.g5 = flatten;
  _.$_$.h5 = getValue;
  _.$_$.i5 = get_indices_0;
  _.$_$.j5 = get_indices;
  _.$_$.k5 = get_indices_1;
  _.$_$.l5 = joinToString_0;
  _.$_$.m5 = get_lastIndex_1;
  _.$_$.n5 = lastOrNull;
  _.$_$.o5 = last;
  _.$_$.p5 = listOf_0;
  _.$_$.q5 = listOf;
  _.$_$.r5 = mapCapacity;
  _.$_$.s5 = mapOf_0;
  _.$_$.t5 = mapOf;
  _.$_$.u5 = mutableListOf;
  _.$_$.v5 = plus_0;
  _.$_$.w5 = plus;
  _.$_$.x5 = setOf;
  _.$_$.y5 = slice;
  _.$_$.z5 = slice_0;
  _.$_$.a6 = sortedWith;
  _.$_$.b6 = sorted;
  _.$_$.c6 = sum;
  _.$_$.d6 = takeLast;
  _.$_$.e6 = take;
  _.$_$.f6 = toBooleanArray;
  _.$_$.g6 = toHashSet;
  _.$_$.h6 = toIntArray;
  _.$_$.i6 = toList_0;
  _.$_$.j6 = toList_2;
  _.$_$.k6 = toList_1;
  _.$_$.l6 = toList;
  _.$_$.m6 = toMap;
  _.$_$.n6 = toMutableMap;
  _.$_$.o6 = toULongArray;
  _.$_$.p6 = withIndex;
  _.$_$.q6 = withIndex_0;
  _.$_$.r6 = zip;
  _.$_$.s6 = compareValues;
  _.$_$.t6 = println;
  _.$_$.u6 = arrayIterator;
  _.$_$.v6 = booleanArray;
  _.$_$.w6 = captureStack;
  _.$_$.x6 = charArrayOf;
  _.$_$.y6 = charArray;
  _.$_$.z6 = charSequenceGet;
  _.$_$.a7 = charSequenceLength;
  _.$_$.b7 = charSequenceSubSequence;
  _.$_$.c7 = classMeta;
  _.$_$.d7 = compareTo_0;
  _.$_$.e7 = equals_1;
  _.$_$.f7 = fillArrayVal;
  _.$_$.g7 = getPropertyCallableRef;
  _.$_$.h7 = getStringHashCode;
  _.$_$.i7 = hashCode;
  _.$_$.j7 = interfaceMeta;
  _.$_$.k7 = isArray;
  _.$_$.l7 = isBooleanArray;
  _.$_$.m7 = isByteArray;
  _.$_$.n7 = isCharArray;
  _.$_$.o7 = isCharSequence;
  _.$_$.p7 = isDoubleArray;
  _.$_$.q7 = isFloatArray;
  _.$_$.r7 = isIntArray;
  _.$_$.s7 = isInterface;
  _.$_$.t7 = isLongArray;
  _.$_$.u7 = isNumber;
  _.$_$.v7 = isObject;
  _.$_$.w7 = isShortArray;
  _.$_$.x7 = get_js;
  _.$_$.y7 = longArrayOf;
  _.$_$.z7 = longArray;
  _.$_$.a8 = numberRangeToNumber;
  _.$_$.b8 = numberToChar;
  _.$_$.c8 = numberToDouble;
  _.$_$.d8 = numberToInt;
  _.$_$.e8 = numberToLong;
  _.$_$.f8 = objectCreate;
  _.$_$.g8 = objectMeta;
  _.$_$.h8 = protoOf;
  _.$_$.i8 = setMetadataFor;
  _.$_$.j8 = toByte_0;
  _.$_$.k8 = toLong_1;
  _.$_$.l8 = toShort_0;
  _.$_$.m8 = toString_3;
  _.$_$.n8 = abs_0;
  _.$_$.o8 = abs;
  _.$_$.p8 = coerceAtLeast;
  _.$_$.q8 = coerceAtMost;
  _.$_$.r8 = step;
  _.$_$.s8 = until;
  _.$_$.t8 = KClass;
  _.$_$.u8 = KProperty0;
  _.$_$.v8 = KProperty1;
  _.$_$.w8 = capitalize;
  _.$_$.x8 = get_category;
  _.$_$.y8 = concatToString;
  _.$_$.z8 = contains_2;
  _.$_$.a9 = dropLast_0;
  _.$_$.b9 = drop_0;
  _.$_$.c9 = equals_0;
  _.$_$.d9 = isBlank;
  _.$_$.e9 = get_lastIndex_2;
  _.$_$.f9 = prependIndent;
  _.$_$.g9 = removePrefix;
  _.$_$.h9 = replaceFirst;
  _.$_$.i9 = replace;
  _.$_$.j9 = reversed;
  _.$_$.k9 = single_2;
  _.$_$.l9 = split;
  _.$_$.m9 = startsWith_0;
  _.$_$.n9 = substring;
  _.$_$.o9 = toByte;
  _.$_$.p9 = toDoubleOrNull;
  _.$_$.q9 = toDouble;
  _.$_$.r9 = toIntOrNull;
  _.$_$.s9 = toInt;
  _.$_$.t9 = toLongOrNull;
  _.$_$.u9 = toLong_0;
  _.$_$.v9 = toLong;
  _.$_$.w9 = toShort;
  _.$_$.x9 = toString_0;
  _.$_$.y9 = toUByte;
  _.$_$.z9 = toUInt;
  _.$_$.aa = toULongOrNull;
  _.$_$.ba = toULong;
  _.$_$.ca = toUShort;
  _.$_$.da = trimIndent;
  _.$_$.ea = Char;
  _.$_$.fa = Comparable;
  _.$_$.ga = Comparator;
  _.$_$.ha = Enum;
  _.$_$.ia = Exception;
  _.$_$.ja = IllegalArgumentException;
  _.$_$.ka = Long;
  _.$_$.la = NotImplementedError;
  _.$_$.ma = Pair;
  _.$_$.na = RuntimeException;
  _.$_$.oa = THROW_CCE;
  _.$_$.pa = Triple;
  _.$_$.qa = UByte;
  _.$_$.ra = UIntArray;
  _.$_$.sa = UInt;
  _.$_$.ta = ULongArray;
  _.$_$.ua = ULong;
  _.$_$.va = UShort;
  _.$_$.wa = Unit;
  _.$_$.xa = arrayOf;
  _.$_$.ya = ensureNotNull;
  _.$_$.za = isFinite_0;
  _.$_$.ab = isFinite;
  _.$_$.bb = lazy;
  _.$_$.cb = noWhenBranchMatchedException;
  _.$_$.db = throwUninitializedPropertyAccessException;
  _.$_$.eb = toString_2;
  _.$_$.fb = to;
  _.$_$.gb = uintCompare;
  _.$_$.hb = uintDivide;
  _.$_$.ib = uintRemainder;
  _.$_$.jb = ulongCompare;
  _.$_$.kb = ulongDivide;
  _.$_$.lb = ulongRemainder;
  _.$_$.mb = VOID;
  //endregion
  return _;
}));

//# sourceMappingURL=kotlin-kotlin-stdlib-js-ir.js.map


/***/ }),

/***/ 639:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
  if (true)
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(72)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  else {}
}(this, function (_, kotlin_kotlin) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var get_indices = kotlin_kotlin.$_$.k5;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.l;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.c1;
  var isInterface = kotlin_kotlin.$_$.s7;
  var emptyList = kotlin_kotlin.$_$.b5;
  var protoOf = kotlin_kotlin.$_$.h8;
  var classMeta = kotlin_kotlin.$_$.c7;
  var VOID = kotlin_kotlin.$_$.mb;
  var setMetadataFor = kotlin_kotlin.$_$.i8;
  var noWhenBranchMatchedException = kotlin_kotlin.$_$.cb;
  var listOf = kotlin_kotlin.$_$.p5;
  var plus = kotlin_kotlin.$_$.w5;
  var toString = kotlin_kotlin.$_$.m8;
  var IllegalArgumentException_init_$Create$_0 = kotlin_kotlin.$_$.e1;
  var NoSuchElementException_init_$Create$ = kotlin_kotlin.$_$.i1;
  var first = kotlin_kotlin.$_$.e5;
  var LinkedHashSet_init_$Create$ = kotlin_kotlin.$_$.v;
  var lazy = kotlin_kotlin.$_$.bb;
  var HashSet_init_$Create$ = kotlin_kotlin.$_$.q;
  var KProperty1 = kotlin_kotlin.$_$.v8;
  var getPropertyCallableRef = kotlin_kotlin.$_$.g7;
  var THROW_CCE = kotlin_kotlin.$_$.oa;
  var isCharSequence = kotlin_kotlin.$_$.o7;
  var charSequenceLength = kotlin_kotlin.$_$.a7;
  var get_lastIndex = kotlin_kotlin.$_$.e9;
  var charSequenceGet = kotlin_kotlin.$_$.z6;
  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.o1;
  var Char = kotlin_kotlin.$_$.ea;
  var startsWith = kotlin_kotlin.$_$.m9;
  var equals = kotlin_kotlin.$_$.e7;
  var charSequenceSubSequence = kotlin_kotlin.$_$.b7;
  var hashCode = kotlin_kotlin.$_$.i7;
  var AbstractIterator = kotlin_kotlin.$_$.m3;
  var Unit_getInstance = kotlin_kotlin.$_$.l3;
  var interfaceMeta = kotlin_kotlin.$_$.j7;
  var getKClassFromExpression = kotlin_kotlin.$_$.d;
  var Exception = kotlin_kotlin.$_$.ia;
  var Exception_init_$Init$ = kotlin_kotlin.$_$.a1;
  var captureStack = kotlin_kotlin.$_$.w6;
  //endregion
  //region block: pre-declaration
  setMetadataFor(Parser, 'Parser', interfaceMeta);
  setMetadataFor(AndCombinator, 'AndCombinator', classMeta, VOID, [Parser]);
  setMetadataFor(MapCombinator, 'MapCombinator', classMeta, VOID, [Parser]);
  setMetadataFor(OrCombinator, 'OrCombinator', classMeta, VOID, [Parser]);
  setMetadataFor(Separated, 'Separated', classMeta);
  setMetadataFor(SeparatedCombinator, 'SeparatedCombinator', classMeta, VOID, [Parser]);
  setMetadataFor(SkipParser, 'SkipParser', classMeta);
  setMetadataFor(Grammar, 'Grammar', classMeta, VOID, [Parser]);
  setMetadataFor(ParserReference, 'ParserReference', classMeta, VOID, [Parser]);
  setMetadataFor(DefaultTokenizer, 'DefaultTokenizer', classMeta);
  setMetadataFor(DefaultTokenProducer, 'DefaultTokenProducer', classMeta);
  setMetadataFor(Token, 'Token', classMeta, VOID, [Parser]);
  setMetadataFor(CharToken, 'CharToken', classMeta, Token);
  setMetadataFor(LiteralToken, 'LiteralToken', classMeta, Token);
  setMetadataFor(noneMatched$1, VOID, classMeta, Token);
  setMetadataFor(ParseResult, 'ParseResult', classMeta);
  setMetadataFor(Parsed, 'Parsed', classMeta, ParseResult);
  setMetadataFor(TokenMatch, 'TokenMatch', classMeta, Parsed);
  setMetadataFor(TokenMatchesSequence$iterator$1, VOID, classMeta, AbstractIterator);
  setMetadataFor(TokenMatchesSequence, 'TokenMatchesSequence', classMeta);
  setMetadataFor(ErrorResult, 'ErrorResult', classMeta, ParseResult);
  setMetadataFor(UnexpectedEof, 'UnexpectedEof', classMeta, ErrorResult);
  setMetadataFor(NoMatchingToken, 'NoMatchingToken', classMeta, ErrorResult);
  setMetadataFor(MismatchedToken, 'MismatchedToken', classMeta, ErrorResult);
  setMetadataFor(ParseException, 'ParseException', classMeta, Exception);
  setMetadataFor(AlternativesFailure, 'AlternativesFailure', classMeta, ErrorResult);
  setMetadataFor(UnparsedRemainder, 'UnparsedRemainder', classMeta, ErrorResult);
  setMetadataFor(ParsedValue, 'ParsedValue', classMeta, Parsed);
  setMetadataFor(Tuple2, 'Tuple2', classMeta);
  //endregion
  function AndCombinator(consumersImpl, transform) {
    this.bf_1 = consumersImpl;
    this.cf_1 = transform;
    var tmp = this;
    // Inline function 'kotlin.collections.filter' call
    var tmp0_filter = get_indices(this.bf_1);
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo = ArrayList_init_$Create$();
    var inductionVariable = tmp0_filter.z_1;
    var last = tmp0_filter.a1_1;
    if (inductionVariable <= last)
      do {
        var element = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'com.github.h0tk3y.betterParse.combinators.AndCombinator.nonSkippedIndices.<anonymous>' call
        var tmp_0 = this.bf_1.l(element);
        if (!(tmp_0 instanceof SkipParser)) {
          tmp0_filterTo.a(element);
        }
      }
       while (!(element === last));
    tmp.df_1 = tmp0_filterTo;
  }
  protoOf(AndCombinator).ef = function (tokens, fromPosition) {
    var nextPosition = fromPosition;
    var results = null;
    var inductionVariable = 0;
    var last = this.bf_1.i();
    if (inductionVariable < last)
      loop: do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var consumer = this.bf_1.l(index);
        if (isInterface(consumer, Parser)) {
          var result = consumer.ef(tokens, nextPosition);
          if (result instanceof ErrorResult)
            return result;
          else {
            if (result instanceof Parsed) {
              var tmp3_elvis_lhs = results;
              var tmp;
              if (tmp3_elvis_lhs == null) {
                // Inline function 'kotlin.also' call
                var tmp0_also = ArrayList_init_$Create$();
                // Inline function 'kotlin.contracts.contract' call
                // Inline function 'com.github.h0tk3y.betterParse.combinators.AndCombinator.tryParse.<anonymous>' call
                results = tmp0_also;
                tmp = tmp0_also;
              } else {
                tmp = tmp3_elvis_lhs;
              }
              tmp.a(result.w());
              nextPosition = result.gf();
            }
          }
        } else {
          if (consumer instanceof SkipParser) {
            var result_0 = consumer.ff_1.ef(tokens, nextPosition);
            if (result_0 instanceof ErrorResult)
              return result_0;
            else {
              if (result_0 instanceof Parsed)
                nextPosition = result_0.gf();
            }
          } else {
            throw IllegalArgumentException_init_$Create$();
          }
        }
      }
       while (inductionVariable < last);
    var tmp5_elvis_lhs = results;
    return new ParsedValue(this.cf_1(tmp5_elvis_lhs == null ? emptyList() : tmp5_elvis_lhs), nextPosition);
  };
  function use(_this__u8e3s4, transform) {
    return new MapCombinator(_this__u8e3s4, transform);
  }
  function map(_this__u8e3s4, transform) {
    return new MapCombinator(_this__u8e3s4, transform);
  }
  function MapCombinator(innerParser, transform) {
    this.hf_1 = innerParser;
    this.if_1 = transform;
  }
  protoOf(MapCombinator).ef = function (tokens, fromPosition) {
    var innerResult = this.hf_1.ef(tokens, fromPosition);
    var tmp;
    if (innerResult instanceof ErrorResult) {
      tmp = innerResult;
    } else {
      if (innerResult instanceof Parsed) {
        tmp = new ParsedValue(this.if_1(innerResult.w()), innerResult.gf());
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp;
  };
  function or(_this__u8e3s4, other) {
    var tmp;
    if (_this__u8e3s4 instanceof OrCombinator) {
      tmp = _this__u8e3s4.jf_1;
    } else {
      tmp = listOf(_this__u8e3s4);
    }
    var leftParsers = tmp;
    var tmp_0;
    if (other instanceof OrCombinator) {
      tmp_0 = other.jf_1;
    } else {
      tmp_0 = listOf(other);
    }
    var rightParsers = tmp_0;
    return new OrCombinator(plus(leftParsers, rightParsers));
  }
  function OrCombinator(parsers) {
    this.jf_1 = parsers;
  }
  protoOf(OrCombinator).ef = function (tokens, fromPosition) {
    var failures = null;
    var inductionVariable = 0;
    var last = this.jf_1.i();
    if (inductionVariable < last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var result = this.jf_1.l(index).ef(tokens, fromPosition);
        if (result instanceof Parsed)
          return result;
        else {
          if (result instanceof ErrorResult) {
            if (failures == null)
              failures = ArrayList_init_$Create$();
            failures.a(result);
          }
        }
      }
       while (inductionVariable < last);
    var tmp$ret$0;
    // Inline function 'kotlin.collections.orEmpty' call
    var tmp0_elvis_lhs = failures;
    tmp$ret$0 = tmp0_elvis_lhs == null ? emptyList() : tmp0_elvis_lhs;
    return new AlternativesFailure(tmp$ret$0);
  };
  function Separated(terms, separators) {
    this.kf_1 = terms;
    this.lf_1 = separators;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(this.kf_1.i() === (this.lf_1.i() + 1 | 0) ? true : this.kf_1.p() ? this.lf_1.p() : false)) {
      // Inline function 'kotlin.require.<anonymous>' call
      var message = 'Failed requirement.';
      throw IllegalArgumentException_init_$Create$_0(toString(message));
    }
  }
  protoOf(Separated).mf = function (function_0) {
    if (this.kf_1.p())
      throw NoSuchElementException_init_$Create$();
    var result = first(this.kf_1);
    var inductionVariable = 0;
    var last = this.lf_1.i() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        result = function_0(result, this.lf_1.l(i), this.kf_1.l(i + 1 | 0));
      }
       while (inductionVariable <= last);
    return result;
  };
  function SeparatedCombinator(termParser, separatorParser, acceptZero) {
    this.nf_1 = termParser;
    this.of_1 = separatorParser;
    this.pf_1 = acceptZero;
  }
  protoOf(SeparatedCombinator).ef = function (tokens, fromPosition) {
    // Inline function 'kotlin.collections.mutableListOf' call
    var termMatches = ArrayList_init_$Create$();
    // Inline function 'kotlin.collections.mutableListOf' call
    var separatorMatches = ArrayList_init_$Create$();
    var first = this.nf_1.ef(tokens, fromPosition);
    var tmp;
    if (first instanceof ErrorResult) {
      tmp = this.pf_1 ? new ParsedValue(new Separated(emptyList(), emptyList()), fromPosition) : first;
    } else {
      if (first instanceof Parsed) {
        termMatches.a(first.w());
        var nextPosition = first.gf();
        loop: while (true) {
          var separator = this.of_1.ef(tokens, nextPosition);
          if (separator instanceof ErrorResult)
            break loop;
          else {
            if (separator instanceof Parsed) {
              var nextTerm = this.nf_1.ef(tokens, separator.gf());
              if (nextTerm instanceof ErrorResult)
                break loop;
              else {
                if (nextTerm instanceof Parsed) {
                  separatorMatches.a(separator.w());
                  termMatches.a(nextTerm.w());
                  nextPosition = nextTerm.gf();
                }
              }
            }
          }
        }
        tmp = new ParsedValue(new Separated(termMatches, separatorMatches), nextPosition);
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp;
  };
  function SkipParser(innerParser) {
    this.ff_1 = innerParser;
  }
  function skip(parser) {
    return new SkipParser(parser);
  }
  function parseToEnd(_this__u8e3s4, input) {
    return parseToEnd_0(_this__u8e3s4.tf(), _this__u8e3s4.uf().vf(input));
  }
  function Grammar$tokenizer$delegate$lambda(this$0) {
    return function () {
      return new DefaultTokenizer(this$0.wf());
    };
  }
  function Grammar() {
    var tmp = this;
    // Inline function 'kotlin.collections.arrayListOf' call
    tmp.qf_1 = ArrayList_init_$Create$();
    var tmp_0 = this;
    // Inline function 'kotlin.collections.linkedSetOf' call
    tmp_0.rf_1 = LinkedHashSet_init_$Create$();
    var tmp_1 = this;
    tmp_1.sf_1 = lazy(Grammar$tokenizer$delegate$lambda(this));
  }
  protoOf(Grammar).wf = function () {
    // Inline function 'kotlin.collections.distinctBy' call
    var tmp0_distinctBy = this.qf_1;
    var set = HashSet_init_$Create$();
    var list = ArrayList_init_$Create$();
    var tmp0_iterator = tmp0_distinctBy.f();
    while (tmp0_iterator.g()) {
      var e = tmp0_iterator.h();
      // Inline function 'com.github.h0tk3y.betterParse.grammar.Grammar.<get-tokens>.<anonymous>' call
      var tmp0_elvis_lhs = e.xf_1;
      var key = tmp0_elvis_lhs == null ? e : tmp0_elvis_lhs;
      if (set.a(key)) {
        list.a(e);
      }
    }
    return list;
  };
  protoOf(Grammar).uf = function () {
    // Inline function 'kotlin.getValue' call
    tokenizer$factory();
    return this.sf_1.w();
  };
  protoOf(Grammar).ef = function (tokens, fromPosition) {
    return this.tf().ef(tokens, fromPosition);
  };
  protoOf(Grammar).zf = function (_this__u8e3s4, thisRef, property) {
    // Inline function 'kotlin.also' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.h0tk3y.betterParse.grammar.Grammar.provideDelegate.<anonymous>' call
    this.rf_1.a(_this__u8e3s4);
    return _this__u8e3s4;
  };
  protoOf(Grammar).ag = function (_this__u8e3s4, thisRef, property) {
    return _this__u8e3s4;
  };
  protoOf(Grammar).bg = function (_this__u8e3s4, thisRef, property) {
    // Inline function 'kotlin.also' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.h0tk3y.betterParse.grammar.Grammar.provideDelegate.<anonymous>' call
    if (_this__u8e3s4.xf_1 == null) {
      _this__u8e3s4.xf_1 = property.callableName;
    }
    this.qf_1.a(_this__u8e3s4);
    return _this__u8e3s4;
  };
  protoOf(Grammar).cg = function (_this__u8e3s4, thisRef, property) {
    return _this__u8e3s4;
  };
  function parser(block) {
    return new ParserReference(block);
  }
  function ParserReference(parserProvider) {
    this.dg_1 = lazy(parserProvider);
  }
  protoOf(ParserReference).eg = function () {
    // Inline function 'kotlin.getValue' call
    parser$factory();
    return this.dg_1.w();
  };
  protoOf(ParserReference).ef = function (tokens, fromPosition) {
    return this.eg().ef(tokens, fromPosition);
  };
  function tokenizer$factory() {
    return getPropertyCallableRef('tokenizer', 1, KProperty1, function (receiver) {
      return receiver.uf();
    }, null);
  }
  function parser$factory() {
    return getPropertyCallableRef('parser', 1, KProperty1, function (receiver) {
      return receiver.eg();
    }, null);
  }
  function DefaultTokenizer(tokens) {
    this.fg_1 = tokens;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.collections.isNotEmpty' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!this.fg_1.p()) {
      // Inline function 'com.github.h0tk3y.betterParse.lexer.DefaultTokenizer.<anonymous>' call
      var message = 'The tokens list should not be empty';
      throw IllegalArgumentException_init_$Create$_0(toString(message));
    }
  }
  protoOf(DefaultTokenizer).vf = function (input) {
    return this.gg(isCharSequence(input) ? input : THROW_CCE());
  };
  protoOf(DefaultTokenizer).gg = function (input) {
    return new TokenMatchesSequence(new DefaultTokenProducer(this.fg_1, input));
  };
  function DefaultTokenProducer(tokens, input) {
    this.hg_1 = tokens;
    this.ig_1 = input;
    this.jg_1 = charSequenceLength(this.ig_1);
    this.kg_1 = 0;
    this.lg_1 = 0;
    this.mg_1 = 1;
    this.ng_1 = 1;
    this.og_1 = false;
  }
  protoOf(DefaultTokenProducer).pg = function () {
    if (this.lg_1 > get_lastIndex(this.ig_1) ? true : this.og_1) {
      return null;
    }
    var inductionVariable = 0;
    var last = this.hg_1.i();
    if (inductionVariable < last)
      $l$loop: do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var token = this.hg_1.l(index);
        var matchLength = token.qg(this.ig_1, this.lg_1);
        if (matchLength === 0)
          continue $l$loop;
        var tmp2 = this.kg_1;
        this.kg_1 = tmp2 + 1 | 0;
        var result = new TokenMatch(token, tmp2, this.ig_1, this.lg_1, matchLength, this.mg_1, this.ng_1);
        var inductionVariable_0 = this.lg_1;
        var last_0 = this.lg_1 + matchLength | 0;
        if (inductionVariable_0 < last_0)
          do {
            var i = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            if (charSequenceGet(this.ig_1, i) === _Char___init__impl__6a9atx(10)) {
              this.mg_1 = this.mg_1 + 1 | 0;
              this.ng_1 = 1;
            } else {
              this.ng_1 = this.ng_1 + 1 | 0;
            }
          }
           while (inductionVariable_0 < last_0);
        this.lg_1 = this.lg_1 + matchLength | 0;
        return result;
      }
       while (inductionVariable < last);
    this.og_1 = true;
    var tmp = get_noneMatched();
    var tmp10 = this.kg_1;
    this.kg_1 = tmp10 + 1 | 0;
    return new TokenMatch(tmp, tmp10, this.ig_1, this.lg_1, this.jg_1 - this.lg_1 | 0, this.mg_1, this.ng_1);
  };
  function literalToken(text, ignore) {
    ignore = ignore === VOID ? false : ignore;
    if (text.length === 1)
      return new CharToken(null, charSequenceGet(text, 0), ignore);
    return new LiteralToken(null, text, ignore);
  }
  function CharToken(name, text, ignored) {
    ignored = ignored === VOID ? false : ignored;
    Token.call(this, name, ignored);
    this.tg_1 = text;
  }
  protoOf(CharToken).qg = function (input, fromIndex) {
    var tmp;
    var tmp_0;
    // Inline function 'kotlin.text.isNotEmpty' call
    if (charSequenceLength(input) > 0) {
      tmp_0 = charSequenceGet(input, fromIndex) === this.tg_1;
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = 1;
    } else {
      tmp = 0;
    }
    return tmp;
  };
  protoOf(CharToken).toString = function () {
    var tmp0_elvis_lhs = this.xf_1;
    return (tmp0_elvis_lhs == null ? '' : tmp0_elvis_lhs) + ' (' + new Char(this.tg_1) + ')' + (this.yf_1 ? ' [ignorable]' : '');
  };
  function LiteralToken(name, text, ignored) {
    ignored = ignored === VOID ? false : ignored;
    Token.call(this, name, ignored);
    this.wg_1 = text;
  }
  protoOf(LiteralToken).qg = function (input, fromIndex) {
    return startsWith(input, this.wg_1, fromIndex) ? this.wg_1.length : 0;
  };
  protoOf(LiteralToken).toString = function () {
    var tmp0_elvis_lhs = this.xf_1;
    return (tmp0_elvis_lhs == null ? '' : tmp0_elvis_lhs) + ' (' + this.wg_1 + ')' + (this.yf_1 ? ' [ignorable]' : '');
  };
  function get_noneMatched() {
    _init_properties_Token_kt__y4xssn();
    return noneMatched;
  }
  var noneMatched;
  function tryParseImpl($this, tokens, fromPosition) {
    var $this_0 = $this;
    var tokens_0 = tokens;
    var fromPosition_0 = fromPosition;
    $l$1: do {
      $l$0: do {
        var tmp0_elvis_lhs = tokens_0.l(fromPosition_0);
        var tmp;
        if (tmp0_elvis_lhs == null) {
          return new UnexpectedEof($this_0);
        } else {
          tmp = tmp0_elvis_lhs;
        }
        var tokenMatch = tmp;
        var tmp_0;
        if (equals(tokenMatch.zg_1, $this_0)) {
          tmp_0 = tokenMatch;
        } else if (equals(tokenMatch.zg_1, get_noneMatched())) {
          tmp_0 = new NoMatchingToken(tokenMatch);
        } else if (tokenMatch.zg_1.yf_1) {
          $this_0 = $this_0;
          tokens_0 = tokens_0;
          fromPosition_0 = fromPosition_0 + 1 | 0;
          continue $l$0;
        } else {
          tmp_0 = new MismatchedToken($this_0, tokenMatch);
        }
        return tmp_0;
      }
       while (false);
    }
     while (true);
  }
  function Token(name, ignored) {
    name = name === VOID ? null : name;
    this.xf_1 = name;
    this.yf_1 = ignored;
  }
  protoOf(Token).ef = function (tokens, fromPosition) {
    return tryParseImpl(this, tokens, fromPosition);
  };
  function noneMatched$1() {
    Token.call(this, 'no token matched', false);
  }
  protoOf(noneMatched$1).qg = function (input, fromIndex) {
    return 0;
  };
  protoOf(noneMatched$1).toString = function () {
    return 'noneMatched!';
  };
  var properties_initialized_Token_kt_3j5vlj;
  function _init_properties_Token_kt__y4xssn() {
    if (!properties_initialized_Token_kt_3j5vlj) {
      properties_initialized_Token_kt_3j5vlj = true;
      noneMatched = new noneMatched$1();
    }
  }
  function TokenMatch(type, tokenIndex, input, offset, length, row, column) {
    Parsed.call(this);
    this.zg_1 = type;
    this.ah_1 = tokenIndex;
    this.bh_1 = input;
    this.ch_1 = offset;
    this.dh_1 = length;
    this.eh_1 = row;
    this.fh_1 = column;
  }
  protoOf(TokenMatch).ih = function () {
    // Inline function 'kotlin.text.substring' call
    var tmp0_substring = this.bh_1;
    var tmp1_substring = this.ch_1;
    var tmp2_substring = this.ch_1 + this.dh_1 | 0;
    return toString(charSequenceSubSequence(tmp0_substring, tmp1_substring, tmp2_substring));
  };
  protoOf(TokenMatch).w = function () {
    return this;
  };
  protoOf(TokenMatch).gf = function () {
    return this.ah_1 + 1 | 0;
  };
  protoOf(TokenMatch).toString = function () {
    return '' + this.zg_1.xf_1 + '@' + this.gf() + ' for "' + this.ih() + '" at ' + this.ch_1 + ' (' + this.eh_1 + ':' + this.fh_1 + ')';
  };
  protoOf(TokenMatch).hashCode = function () {
    var result = hashCode(this.zg_1);
    result = imul(result, 31) + this.ah_1 | 0;
    result = imul(result, 31) + hashCode(this.bh_1) | 0;
    result = imul(result, 31) + this.ch_1 | 0;
    result = imul(result, 31) + this.dh_1 | 0;
    result = imul(result, 31) + this.eh_1 | 0;
    result = imul(result, 31) + this.fh_1 | 0;
    return result;
  };
  protoOf(TokenMatch).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof TokenMatch))
      return false;
    var tmp0_other_with_cast = other instanceof TokenMatch ? other : THROW_CCE();
    if (!equals(this.zg_1, tmp0_other_with_cast.zg_1))
      return false;
    if (!(this.ah_1 === tmp0_other_with_cast.ah_1))
      return false;
    if (!equals(this.bh_1, tmp0_other_with_cast.bh_1))
      return false;
    if (!(this.ch_1 === tmp0_other_with_cast.ch_1))
      return false;
    if (!(this.dh_1 === tmp0_other_with_cast.dh_1))
      return false;
    if (!(this.eh_1 === tmp0_other_with_cast.eh_1))
      return false;
    if (!(this.fh_1 === tmp0_other_with_cast.fh_1))
      return false;
    return true;
  };
  function TokenMatchesSequence$iterator$1(this$0) {
    this.nh_1 = this$0;
    AbstractIterator.call(this);
    this.lh_1 = 0;
    this.mh_1 = false;
  }
  protoOf(TokenMatchesSequence$iterator$1).k1 = function () {
    if (this.mh_1) {
      this.o1();
    }
    var tmp0_elvis_lhs = this.nh_1.l(this.lh_1);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      // Inline function 'kotlin.run' call
      // Inline function 'kotlin.contracts.contract' call
      this.o1();
      return Unit_getInstance();
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var nextMatch = tmp;
    this.n1(nextMatch);
    if (equals(nextMatch.zg_1, get_noneMatched())) {
      this.mh_1 = true;
    }
    this.lh_1 = this.lh_1 + 1 | 0;
  };
  function TokenMatchesSequence(tokenProducer, matches) {
    var tmp;
    if (matches === VOID) {
      // Inline function 'kotlin.collections.arrayListOf' call
      tmp = ArrayList_init_$Create$();
    } else {
      tmp = matches;
    }
    matches = tmp;
    this.xg_1 = tokenProducer;
    this.yg_1 = matches;
  }
  protoOf(TokenMatchesSequence).l = function (position) {
    var tmp$ret$0;
    $l$block: {
      // Inline function 'com.github.h0tk3y.betterParse.lexer.TokenMatchesSequence.ensureReadPosition' call
      while (position >= this.yg_1.i()) {
        var tmp0_elvis_lhs = this.xg_1.pg();
        var tmp;
        if (tmp0_elvis_lhs == null) {
          tmp$ret$0 = false;
          break $l$block;
        } else {
          tmp = tmp0_elvis_lhs;
        }
        var next = tmp;
        this.yg_1.a(next);
      }
      tmp$ret$0 = true;
    }
    if (!tmp$ret$0) {
      return null;
    }
    return this.yg_1.l(position);
  };
  protoOf(TokenMatchesSequence).oh = function (position) {
    var tmp$ret$0;
    $l$block: {
      // Inline function 'com.github.h0tk3y.betterParse.lexer.TokenMatchesSequence.ensureReadPosition' call
      while (position >= this.yg_1.i()) {
        var tmp0_elvis_lhs = this.xg_1.pg();
        var tmp;
        if (tmp0_elvis_lhs == null) {
          tmp$ret$0 = false;
          break $l$block;
        } else {
          tmp = tmp0_elvis_lhs;
        }
        var next = tmp;
        this.yg_1.a(next);
      }
      tmp$ret$0 = true;
    }
    if (!tmp$ret$0) {
      return null;
    }
    var pos = position;
    while (true) {
      var tmp_0;
      if (pos < this.yg_1.i()) {
        tmp_0 = this.yg_1.l(pos);
      } else {
        var next_0 = this.xg_1.pg();
        var tmp_1;
        if (next_0 == null) {
          return null;
        } else {
          this.yg_1.a(next_0);
          tmp_1 = next_0;
        }
        tmp_0 = tmp_1;
      }
      var value = tmp_0;
      if (!value.zg_1.yf_1)
        return value;
      pos = pos + 1 | 0;
    }
  };
  protoOf(TokenMatchesSequence).f = function () {
    return new TokenMatchesSequence$iterator$1(this);
  };
  function Parser() {
  }
  function ParseResult() {
  }
  function UnexpectedEof(expected) {
    ErrorResult.call(this);
    this.ph_1 = expected;
  }
  protoOf(UnexpectedEof).toString = function () {
    return 'UnexpectedEof(expected=' + this.ph_1 + ')';
  };
  protoOf(UnexpectedEof).hashCode = function () {
    return hashCode(this.ph_1);
  };
  protoOf(UnexpectedEof).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof UnexpectedEof))
      return false;
    var tmp0_other_with_cast = other instanceof UnexpectedEof ? other : THROW_CCE();
    if (!equals(this.ph_1, tmp0_other_with_cast.ph_1))
      return false;
    return true;
  };
  function NoMatchingToken(tokenMismatch) {
    ErrorResult.call(this);
    this.qh_1 = tokenMismatch;
  }
  protoOf(NoMatchingToken).toString = function () {
    return 'NoMatchingToken(tokenMismatch=' + this.qh_1 + ')';
  };
  protoOf(NoMatchingToken).hashCode = function () {
    return this.qh_1.hashCode();
  };
  protoOf(NoMatchingToken).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof NoMatchingToken))
      return false;
    var tmp0_other_with_cast = other instanceof NoMatchingToken ? other : THROW_CCE();
    if (!this.qh_1.equals(tmp0_other_with_cast.qh_1))
      return false;
    return true;
  };
  function MismatchedToken(expected, found) {
    ErrorResult.call(this);
    this.rh_1 = expected;
    this.sh_1 = found;
  }
  protoOf(MismatchedToken).toString = function () {
    return 'MismatchedToken(expected=' + this.rh_1 + ', found=' + this.sh_1 + ')';
  };
  protoOf(MismatchedToken).hashCode = function () {
    var result = hashCode(this.rh_1);
    result = imul(result, 31) + this.sh_1.hashCode() | 0;
    return result;
  };
  protoOf(MismatchedToken).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MismatchedToken))
      return false;
    var tmp0_other_with_cast = other instanceof MismatchedToken ? other : THROW_CCE();
    if (!equals(this.rh_1, tmp0_other_with_cast.rh_1))
      return false;
    if (!this.sh_1.equals(tmp0_other_with_cast.sh_1))
      return false;
    return true;
  };
  function Parsed() {
    ParseResult.call(this);
  }
  protoOf(Parsed).toString = function () {
    return 'Parsed(' + this.w() + ')';
  };
  protoOf(Parsed).equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (!(other instanceof Parsed))
      THROW_CCE();
    if (!equals(this.w(), other.w()))
      return false;
    if (!(this.gf() === other.gf()))
      return false;
    return true;
  };
  protoOf(Parsed).hashCode = function () {
    var tmp0_safe_receiver = this.w();
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
    var result = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    result = imul(31, result) + this.gf() | 0;
    return result;
  };
  function ErrorResult() {
    ParseResult.call(this);
  }
  protoOf(ErrorResult).toString = function () {
    return 'ErrorResult';
  };
  function ParseException(errorResult) {
    Exception_init_$Init$('Could not parse input: ' + errorResult, this);
    captureStack(this, ParseException);
    this.th_1 = errorResult;
  }
  function AlternativesFailure(errors) {
    ErrorResult.call(this);
    this.uh_1 = errors;
  }
  protoOf(AlternativesFailure).toString = function () {
    return 'AlternativesFailure(errors=' + this.uh_1 + ')';
  };
  protoOf(AlternativesFailure).hashCode = function () {
    return hashCode(this.uh_1);
  };
  protoOf(AlternativesFailure).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof AlternativesFailure))
      return false;
    var tmp0_other_with_cast = other instanceof AlternativesFailure ? other : THROW_CCE();
    if (!equals(this.uh_1, tmp0_other_with_cast.uh_1))
      return false;
    return true;
  };
  function parseToEnd_0(_this__u8e3s4, tokens) {
    return toParsedOrThrow(tryParseToEnd(_this__u8e3s4, tokens, 0)).w();
  }
  function toParsedOrThrow(_this__u8e3s4) {
    var tmp;
    if (_this__u8e3s4 instanceof Parsed) {
      tmp = _this__u8e3s4;
    } else {
      if (_this__u8e3s4 instanceof ErrorResult) {
        throw new ParseException(_this__u8e3s4);
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp;
  }
  function tryParseToEnd(_this__u8e3s4, tokens, position) {
    var result = _this__u8e3s4.ef(tokens, position);
    var tmp;
    if (result instanceof ErrorResult) {
      tmp = result;
    } else {
      if (result instanceof Parsed) {
        var tmp1_safe_receiver = tokens.oh(result.gf());
        var tmp_0;
        if (tmp1_safe_receiver == null) {
          tmp_0 = null;
        } else {
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          // Inline function 'com.github.h0tk3y.betterParse.parser.tryParseToEnd.<anonymous>' call
          tmp_0 = new UnparsedRemainder(tmp1_safe_receiver);
        }
        var tmp2_elvis_lhs = tmp_0;
        tmp = tmp2_elvis_lhs == null ? result : tmp2_elvis_lhs;
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp;
  }
  function UnparsedRemainder(startsWith) {
    ErrorResult.call(this);
    this.vh_1 = startsWith;
  }
  protoOf(UnparsedRemainder).toString = function () {
    return 'UnparsedRemainder(startsWith=' + this.vh_1 + ')';
  };
  protoOf(UnparsedRemainder).hashCode = function () {
    return this.vh_1.hashCode();
  };
  protoOf(UnparsedRemainder).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof UnparsedRemainder))
      return false;
    var tmp0_other_with_cast = other instanceof UnparsedRemainder ? other : THROW_CCE();
    if (!this.vh_1.equals(tmp0_other_with_cast.vh_1))
      return false;
    return true;
  };
  function ParsedValue(value, nextPosition) {
    Parsed.call(this);
    this.wh_1 = value;
    this.xh_1 = nextPosition;
  }
  protoOf(ParsedValue).w = function () {
    return this.wh_1;
  };
  protoOf(ParsedValue).gf = function () {
    return this.xh_1;
  };
  function Tuple2(t1, t2) {
    this.yh_1 = t1;
    this.zh_1 = t2;
  }
  protoOf(Tuple2).j3 = function () {
    return this.yh_1;
  };
  protoOf(Tuple2).k3 = function () {
    return this.zh_1;
  };
  protoOf(Tuple2).toString = function () {
    return 'Tuple2(t1=' + this.yh_1 + ', t2=' + this.zh_1 + ')';
  };
  protoOf(Tuple2).hashCode = function () {
    var result = this.yh_1 == null ? 0 : hashCode(this.yh_1);
    result = imul(result, 31) + (this.zh_1 == null ? 0 : hashCode(this.zh_1)) | 0;
    return result;
  };
  protoOf(Tuple2).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Tuple2))
      return false;
    var tmp0_other_with_cast = other instanceof Tuple2 ? other : THROW_CCE();
    if (!equals(this.yh_1, tmp0_other_with_cast.yh_1))
      return false;
    if (!equals(this.zh_1, tmp0_other_with_cast.zh_1))
      return false;
    return true;
  };
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = AndCombinator;
  _.$_$.b = SeparatedCombinator;
  _.$_$.c = map;
  _.$_$.d = or;
  _.$_$.e = skip;
  _.$_$.f = use;
  _.$_$.g = Grammar;
  _.$_$.h = parseToEnd;
  _.$_$.i = parser;
  _.$_$.j = TokenMatch;
  _.$_$.k = Token;
  _.$_$.l = literalToken;
  _.$_$.m = AlternativesFailure;
  _.$_$.n = NoMatchingToken;
  _.$_$.o = ParseException;
  _.$_$.p = Tuple2;
  //endregion
  return _;
}));

//# sourceMappingURL=kotlin_com_github_h0tk3y_betterParse_better_parse.js.map


/***/ }),

/***/ 474:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
  if (true)
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(72)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  else {}
}(this, function (_, kotlin_kotlin) {
  'use strict';
  //region block: imports
  var collectionSizeOrDefault = kotlin_kotlin.$_$.f4;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.k;
  //endregion
  //region block: pre-declaration
  //endregion
  function pmap(_this__u8e3s4, transform) {
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(_this__u8e3s4, 10));
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      tmp0_mapTo.a(transform(item));
    }
    return tmp0_mapTo;
  }
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = pmap;
  //endregion
  return _;
}));

//# sourceMappingURL=kotlin_com_github_shwaka_parautil_parautil_parallel.js.map


/***/ }),

/***/ 11:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
  if (true)
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(72)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  else {}
}(this, function (_, kotlin_kotlin) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var log10 = Math.log10;
  var protoOf = kotlin_kotlin.$_$.h8;
  var VOID = kotlin_kotlin.$_$.mb;
  var interfaceMeta = kotlin_kotlin.$_$.j7;
  var setMetadataFor = kotlin_kotlin.$_$.i8;
  var Long = kotlin_kotlin.$_$.ka;
  var ArithmeticException_init_$Create$ = kotlin_kotlin.$_$.z;
  var RuntimeException_init_$Create$ = kotlin_kotlin.$_$.m1;
  var toString = kotlin_kotlin.$_$.m8;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.g1;
  var ensureNotNull = kotlin_kotlin.$_$.ya;
  var Unit_getInstance = kotlin_kotlin.$_$.l3;
  var DoubleCompanionObject_getInstance = kotlin_kotlin.$_$.z2;
  var FloatCompanionObject_getInstance = kotlin_kotlin.$_$.a3;
  var get_lastIndex = kotlin_kotlin.$_$.e9;
  var charSequenceGet = kotlin_kotlin.$_$.z6;
  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.o1;
  var contains = kotlin_kotlin.$_$.z8;
  var charSequenceLength = kotlin_kotlin.$_$.a7;
  var charArrayOf = kotlin_kotlin.$_$.x6;
  var split = kotlin_kotlin.$_$.l9;
  var toLong = kotlin_kotlin.$_$.k8;
  var listOf = kotlin_kotlin.$_$.q5;
  var toLong_0 = kotlin_kotlin.$_$.v9;
  var numberToLong = kotlin_kotlin.$_$.e8;
  var objectMeta = kotlin_kotlin.$_$.g8;
  var Enum = kotlin_kotlin.$_$.ha;
  var classMeta = kotlin_kotlin.$_$.c7;
  var noWhenBranchMatchedException = kotlin_kotlin.$_$.cb;
  var Triple = kotlin_kotlin.$_$.pa;
  var numberToDouble = kotlin_kotlin.$_$.c8;
  var until = kotlin_kotlin.$_$.s8;
  var substring = kotlin_kotlin.$_$.n9;
  var THROW_CCE = kotlin_kotlin.$_$.oa;
  var abs = kotlin_kotlin.$_$.o8;
  var Pair = kotlin_kotlin.$_$.ma;
  var isNumber = kotlin_kotlin.$_$.u7;
  var getKClassFromExpression = kotlin_kotlin.$_$.d;
  var isObject = kotlin_kotlin.$_$.v7;
  var hashCode = kotlin_kotlin.$_$.i7;
  var IntCompanionObject_getInstance = kotlin_kotlin.$_$.b3;
  var abs_0 = kotlin_kotlin.$_$.n8;
  var StringBuilder_init_$Create$ = kotlin_kotlin.$_$.y;
  var Comparable = kotlin_kotlin.$_$.fa;
  var getKClass = kotlin_kotlin.$_$.e;
  var PrimitiveClasses_getInstance = kotlin_kotlin.$_$.e3;
  var objectCreate = kotlin_kotlin.$_$.f8;
  var NumberFormatException_init_$Create$ = kotlin_kotlin.$_$.k1;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.e1;
  var _ULongArray___get_size__impl__ju6dtr = kotlin_kotlin.$_$.s2;
  var equals = kotlin_kotlin.$_$.e7;
  var ULongArray = kotlin_kotlin.$_$.ta;
  var numberToInt = kotlin_kotlin.$_$.d8;
  var UByte = kotlin_kotlin.$_$.qa;
  var UShort = kotlin_kotlin.$_$.va;
  var UInt = kotlin_kotlin.$_$.sa;
  var ULong = kotlin_kotlin.$_$.ua;
  var ULongArray__hashCode_impl_aze4wa = kotlin_kotlin.$_$.o2;
  var UIntArray = kotlin_kotlin.$_$.ra;
  var UIntArray__hashCode_impl_hr7ost = kotlin_kotlin.$_$.c2;
  var _ULong___init__impl__c78o9k = kotlin_kotlin.$_$.i2;
  var _UInt___init__impl__l7qpdl = kotlin_kotlin.$_$.w1;
  var _UIntArray___init__impl__ghjpc6 = kotlin_kotlin.$_$.z1;
  var _UInt___get_data__impl__f0vqqw = kotlin_kotlin.$_$.x1;
  var _UIntArray___init__impl__ghjpc6_0 = kotlin_kotlin.$_$.a2;
  var UIntArray__isEmpty_impl_vd8j4n = kotlin_kotlin.$_$.d2;
  var _UIntArray___get_size__impl__r6l8ci = kotlin_kotlin.$_$.g2;
  var UIntArray__get_impl_gp5kza = kotlin_kotlin.$_$.b2;
  var _UIntArray___get_storage__impl__92a0v0 = kotlin_kotlin.$_$.h2;
  var copyOfRange = kotlin_kotlin.$_$.k4;
  var uintCompare = kotlin_kotlin.$_$.gb;
  var _ULong___get_data__impl__fggpzb = kotlin_kotlin.$_$.j2;
  var UIntArray__set_impl_7f2zu2 = kotlin_kotlin.$_$.f2;
  var println = kotlin_kotlin.$_$.t6;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.l;
  var UIntArray__iterator_impl_tkdv7k = kotlin_kotlin.$_$.e2;
  var uintDivide = kotlin_kotlin.$_$.hb;
  var uintRemainder = kotlin_kotlin.$_$.ib;
  var ulongDivide = kotlin_kotlin.$_$.kb;
  var ulongCompare = kotlin_kotlin.$_$.jb;
  var ULongArray__iterator_impl_cq4d2h = kotlin_kotlin.$_$.q2;
  var ULongArray__get_impl_pr71q9 = kotlin_kotlin.$_$.n2;
  var longArrayOf = kotlin_kotlin.$_$.y7;
  var _ULongArray___init__impl__twm1l3 = kotlin_kotlin.$_$.m2;
  var _ULongArray___get_storage__impl__28e64j = kotlin_kotlin.$_$.t2;
  var copyOfRange_0 = kotlin_kotlin.$_$.l4;
  var ULongArray__isEmpty_impl_c3yngu = kotlin_kotlin.$_$.p2;
  var longArray = kotlin_kotlin.$_$.z7;
  var arrayCopy = kotlin_kotlin.$_$.c4;
  var ULongArray__set_impl_z19mvh = kotlin_kotlin.$_$.r2;
  var plus = kotlin_kotlin.$_$.w5;
  var toULongArray = kotlin_kotlin.$_$.o6;
  var slice = kotlin_kotlin.$_$.z5;
  var _ULongArray___init__impl__twm1l3_0 = kotlin_kotlin.$_$.l2;
  var ulongRemainder = kotlin_kotlin.$_$.lb;
  var copyOf = kotlin_kotlin.$_$.p4;
  var toString_0 = kotlin_kotlin.$_$.x9;
  var isCharSequence = kotlin_kotlin.$_$.o7;
  var reversed = kotlin_kotlin.$_$.j9;
  var _UShort___get_data__impl__g0245 = kotlin_kotlin.$_$.v2;
  var _UByte___get_data__impl__jof9qr = kotlin_kotlin.$_$.u1;
  var Companion_getInstance = kotlin_kotlin.$_$.g3;
  var Char = kotlin_kotlin.$_$.ea;
  var Char__minus_impl_a2frrh = kotlin_kotlin.$_$.p1;
  var Char__minus_impl_a2frrh_0 = kotlin_kotlin.$_$.q1;
  var Char__toInt_impl_vasixd = kotlin_kotlin.$_$.r1;
  //endregion
  //region block: pre-declaration
  function tryFromFloat$default(float, exactRequired, $super) {
    exactRequired = exactRequired === VOID ? false : exactRequired;
    return $super === VOID ? this.ci(float, exactRequired) : $super.ci.call(this, float, exactRequired);
  }
  function tryFromDouble$default(double, exactRequired, $super) {
    exactRequired = exactRequired === VOID ? false : exactRequired;
    return $super === VOID ? this.ei(double, exactRequired) : $super.ei.call(this, double, exactRequired);
  }
  setMetadataFor(Creator, 'Creator', interfaceMeta);
  function get_isNegative() {
    return this.li() < 0;
  }
  function get_isPositive() {
    return this.li() > 0;
  }
  setMetadataFor(BigNumber, 'BigNumber', interfaceMeta);
  function plus_0(other) {
    return this.pi().gi(other);
  }
  function minus(other) {
    return this.pi().hi(other);
  }
  function times(other) {
    return this.pi().ii(other);
  }
  function div(other) {
    return this.pi().ji(other);
  }
  function rem(other) {
    return this.pi().ki(other);
  }
  function plus_1(int) {
    return this.pi().gi(this.oi().bi(int));
  }
  function minus_0(int) {
    return this.pi().hi(this.oi().bi(int));
  }
  function div_0(int) {
    return this.pi().ji(this.oi().bi(int));
  }
  function div_1(long) {
    return this.pi().ji(this.oi().ai(long));
  }
  setMetadataFor(CommonBigNumberOperations, 'CommonBigNumberOperations', interfaceMeta);
  setMetadataFor(Companion, 'Companion', objectMeta, VOID, [Creator]);
  setMetadataFor(ScaleOps, 'ScaleOps', classMeta, Enum);
  setMetadataFor(BigDecimal, 'BigDecimal', classMeta, VOID, [BigNumber, CommonBigNumberOperations, Comparable]);
  setMetadataFor(Companion_0, 'Companion', objectMeta);
  setMetadataFor(DecimalMode, 'DecimalMode', classMeta);
  setMetadataFor(RoundingMode, 'RoundingMode', classMeta, Enum);
  setMetadataFor(Companion_1, 'Companion', objectMeta, VOID, [Creator]);
  setMetadataFor(QuotientAndRemainder, 'QuotientAndRemainder', classMeta);
  setMetadataFor(BigInteger, 'BigInteger', classMeta, VOID, [BigNumber, CommonBigNumberOperations, Comparable]);
  setMetadataFor(Sign, 'Sign', classMeta, Enum);
  setMetadataFor(Sextuple, 'Sextuple', classMeta);
  setMetadataFor(Quadruple, 'Quadruple', classMeta);
  setMetadataFor(SignedUIntArray, 'SignedUIntArray', classMeta);
  setMetadataFor(BigInteger32Arithmetic, 'BigInteger32Arithmetic', objectMeta);
  setMetadataFor(SignedULongArray, 'SignedULongArray', classMeta);
  setMetadataFor(BigInteger63Arithmetic, 'BigInteger63Arithmetic', objectMeta);
  setMetadataFor(ComparisonWorkaround, 'ComparisonWorkaround', objectMeta);
  //endregion
  function Creator() {
  }
  function BigNumber() {
  }
  function CommonBigNumberOperations() {
  }
  function roundOrDont($this, significand, exponent, decimalMode) {
    var tmp;
    if (decimalMode.bj_1) {
      tmp = new BigDecimal(significand, exponent);
    } else {
      tmp = roundSignificand($this, significand, exponent, decimalMode);
    }
    return tmp;
  }
  function roundDiscarded($this, significand, discarded, decimalMode) {
    var toDiscard = significand.hj().y4(decimalMode.yi_1);
    var tmp;
    if (toDiscard.v4(new Long(0, 0)) > 0) {
      tmp = significand.rj(Companion_getInstance_2().oj_1.qj(toDiscard)).ij_1;
    } else {
      tmp = significand;
    }
    var result = tmp;
    var tmp_0;
    if (significand.equals(Companion_getInstance_2().lj_1)) {
      tmp_0 = discarded.ej_1;
    } else {
      tmp_0 = significand.ej_1;
    }
    var sign = tmp_0;
    var tmp_1;
    if (toDiscard.v4(new Long(0, 0)) > 0) {
      var tmp_2;
      if (discarded.equals(Companion_getInstance_2().lj_1)) {
        tmp_2 = Companion_getInstance_2().lj_1;
      } else {
        tmp_2 = discarded.u4(discarded.hj()).sj().qi(significand.rj(Companion_getInstance_2().oj_1.qj(toDiscard)).jj_1.si(Companion_getInstance_2().oj_1.qj(toDiscard)));
      }
      tmp_1 = tmp_2;
    } else {
      var tmp_3;
      if (discarded.equals(Companion_getInstance_2().lj_1)) {
        tmp_3 = Companion_getInstance_2().lj_1;
      } else {
        var tmp_4 = Companion_getInstance_2().oj_1;
        var tmp$ret$0;
        // Inline function 'kotlin.Long.minus' call
        tmp$ret$0 = discarded.hj().y4(new Long(1, 0));
        tmp_3 = discarded.ti(tmp_4.qj(tmp$ret$0)).sj();
      }
      tmp_1 = tmp_3;
    }
    var significantRemainderDigit = tmp_1;
    if (significantRemainderDigit.tj()) {
      return result;
    }
    switch (decimalMode.zi_1.m1_1) {
      case 2:
        if (sign.equals(Sign_POSITIVE_getInstance())) {
          result = result.qe();
        } else {
          result = result.re();
        }

        break;
      case 3:
        break;
      case 1:
        if (sign.equals(Sign_POSITIVE_getInstance())) {
          result = result.qe();
        }

        break;
      case 0:
        if (!sign.equals(Sign_POSITIVE_getInstance())) {
          result = result.re();
        }

        break;
      case 5:
        switch (sign.m1_1) {
          case 0:
            if (significantRemainderDigit.uj(5) >= 0) {
              result = result.qe();
            }

            break;
          case 1:
            if (significantRemainderDigit.uj(5) >= 0) {
              result = result.re();
            }

            break;
          case 2:
            break;
        }

        break;
      case 6:
        switch (sign.m1_1) {
          case 0:
            if (significantRemainderDigit.uj(5) > 0) {
              result = result.qe();
            }

            break;
          case 1:
            if (significantRemainderDigit.uj(5) > 0) {
              result = result.re();
            }

            break;
          case 2:
            break;
        }

        break;
      case 7:
        switch (sign.m1_1) {
          case 0:
            if (significantRemainderDigit.uj(5) >= 0) {
              result = result.qe();
            }

            break;
          case 1:
            if (significantRemainderDigit.uj(5) > 0) {
              result = result.re();
            }

            break;
          case 2:
            break;
        }

        break;
      case 8:
        switch (sign.m1_1) {
          case 0:
            if (significantRemainderDigit.uj(5) > 0) {
              result = result.qe();
            }

            break;
          case 1:
            if (significantRemainderDigit.uj(5) >= 0) {
              result = result.re();
            }

            break;
          case 2:
            break;
        }

        break;
      case 4:
        throw ArithmeticException_init_$Create$('Non-terminating result of division operation. Specify decimalPrecision');
    }
    return result;
  }
  function roundSignificand($this, significand, exponent, decimalMode) {
    if (significand.equals(Companion_getInstance_2().lj_1)) {
      return new BigDecimal(Companion_getInstance_2().lj_1, exponent, decimalMode);
    }
    var significandDigits = significand.hj();
    var desiredPrecision = decimalMode.yi_1;
    var tmp;
    if (desiredPrecision.v4(significandDigits) > 0) {
      var extendedSignificand = significand.si(Companion_getInstance_2().oj_1.qj(desiredPrecision.y4(significandDigits)));
      tmp = new BigDecimal(extendedSignificand, exponent, decimalMode);
    } else if (desiredPrecision.v4(significandDigits) < 0) {
      var divRem = significand.rj(Companion_getInstance_2().oj_1.qj(significandDigits.y4(desiredPrecision)));
      var tmp_0;
      if (divRem.jj_1.hj().v4(significandDigits.y4(desiredPrecision)) < 0) {
        tmp_0 = Companion_getInstance_2().lj_1;
      } else {
        tmp_0 = divRem.jj_1;
      }
      var resolvedRemainder = tmp_0;
      var newSignificand = roundDiscarded($this, divRem.ij_1, resolvedRemainder, decimalMode);
      var exponentModifier = newSignificand.hj().y4(divRem.ij_1.hj());
      tmp = new BigDecimal(newSignificand, exponent.x4(exponentModifier), decimalMode);
    } else {
      tmp = new BigDecimal(significand, exponent, decimalMode);
    }
    return tmp;
  }
  function applyScale($this, significand, exponent, decimalMode) {
    if (!decimalMode.cj_1) {
      return new BigDecimal(significand, exponent, decimalMode);
    }
    var tmp;
    if (exponent.v4(new Long(0, 0)) >= 0) {
      var tmp$ret$0;
      // Inline function 'kotlin.Long.plus' call
      tmp$ret$0 = exponent.x4(decimalMode.aj_1).x4(new Long(1, 0));
      tmp = new DecimalMode(tmp$ret$0, decimalMode.zi_1);
    } else if (exponent.v4(new Long(0, 0)) < 0) {
      var tmp$ret$1;
      // Inline function 'kotlin.Long.plus' call
      tmp$ret$1 = decimalMode.aj_1.x4(new Long(1, 0));
      tmp = new DecimalMode(tmp$ret$1, decimalMode.zi_1);
    } else {
      throw RuntimeException_init_$Create$('Unexpected state');
    }
    var workMode = tmp;
    if (decimalMode.aj_1.equals(new Long(0, 0))) {
      var digits = significand.hj();
      var tmp_0;
      if (exponent.v4(new Long(0, 0)) >= 0) {
        var tmp_1 = significand;
        $l$loop: while (true) {
          var tmp_2 = digits;
          var tmp$ret$2;
          // Inline function 'kotlin.Long.plus' call
          tmp$ret$2 = exponent.x4(new Long(1, 0));
          if (!(tmp_2.v4(tmp$ret$2) > 0)) {
            break $l$loop;
          }
          tmp_1 = tmp_1.xi(10);
          digits = digits.re();
        }
        tmp_0 = tmp_1;
      } else if (exponent.v4(new Long(0, 0)) < 0) {
        tmp_0 = Companion_getInstance_2().lj_1;
      } else {
        throw IllegalStateException_init_$Create$('Should be impossible. Exponent: ' + toString(exponent));
      }
      var bigInteger = tmp_0;
      return $this.gk(bigInteger);
    }
    var tmp_3;
    if (exponent.v4(new Long(0, 0)) >= 0) {
      tmp_3 = roundSignificand($this, significand, exponent, workMode);
    } else {
      var temp = (new BigDecimal(significand, exponent)).vi(significand.li());
      tmp_3 = roundSignificand($this, temp.lk_1, temp.mk_1, workMode).wi(significand.li());
    }
    return tmp_3;
  }
  function resolveDecimalMode($this, firstDecimalMode, secondDecimalMode, suppliedDecimalMode) {
    var tmp;
    if (!(suppliedDecimalMode == null)) {
      tmp = suppliedDecimalMode;
    } else {
      if (firstDecimalMode == null ? secondDecimalMode == null : false) {
        return new DecimalMode();
      }
      if (firstDecimalMode == null ? !(secondDecimalMode == null) : false) {
        return secondDecimalMode;
      }
      if (secondDecimalMode == null ? !(firstDecimalMode == null) : false) {
        return firstDecimalMode;
      }
      if (!ensureNotNull(firstDecimalMode).zi_1.equals(ensureNotNull(secondDecimalMode).zi_1)) {
        throw ArithmeticException_init_$Create$('Different rounding modes! This: ' + firstDecimalMode.zi_1 + ' Other: ' + secondDecimalMode.zi_1);
      }
      var tmp_0;
      if (firstDecimalMode.yi_1.v4(secondDecimalMode.yi_1) >= 0) {
        tmp_0 = firstDecimalMode;
      } else {
        tmp_0 = secondDecimalMode;
      }
      var unifiedDecimalMode = tmp_0;
      tmp = unifiedDecimalMode;
    }
    return tmp;
  }
  var ScaleOps_Max_instance;
  var ScaleOps_Min_instance;
  var ScaleOps_Add_instance;
  var ScaleOps_entriesInitialized;
  function ScaleOps_initEntries() {
    if (ScaleOps_entriesInitialized)
      return Unit_getInstance();
    ScaleOps_entriesInitialized = true;
    ScaleOps_Max_instance = new ScaleOps('Max', 0);
    ScaleOps_Min_instance = new ScaleOps('Min', 1);
    ScaleOps_Add_instance = new ScaleOps('Add', 2);
  }
  function Companion() {
    Companion_instance = this;
    this.vj_1 = new BigDecimal(Companion_getInstance_2().lj_1);
    this.wj_1 = new BigDecimal(Companion_getInstance_2().mj_1);
    this.xj_1 = new BigDecimal(Companion_getInstance_2().nj_1);
    this.yj_1 = new BigDecimal(Companion_getInstance_2().oj_1, new Long(1, 0));
    this.zj_1 = false;
    var tmp = this;
    // Inline function 'kotlin.doubleArrayOf' call
    tmp.ak_1 = new Float64Array([1.0, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, 1.0E7, 1.0E8, 1.0E9, 1.0E10, 1.0E11, 1.0E12, 1.0E13, 1.0E14, 1.0E15, 1.0E16, 1.0E17, 1.0E18, 1.0E19, 1.0E20, 1.0E21, 1.0E22]);
    var tmp_0 = this;
    DoubleCompanionObject_getInstance();
    tmp_0.bk_1 = this.pk(1.7976931348623157E308);
    var tmp_1 = this;
    DoubleCompanionObject_getInstance();
    tmp_1.ck_1 = this.pk(4.9E-324);
    var tmp_2 = this;
    // Inline function 'kotlin.floatArrayOf' call
    tmp_2.dk_1 = new Float32Array([1.0, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, 1.0E7, 1.0E8, 1.0E9, 1.0E10]);
    var tmp_3 = this;
    FloatCompanionObject_getInstance();
    tmp_3.ek_1 = this.qk(3.4028235E38);
    var tmp_4 = this;
    FloatCompanionObject_getInstance();
    tmp_4.fk_1 = this.qk(1.4E-45);
  }
  protoOf(Companion).rk = function (bigInteger, decimalMode) {
    var tmp$ret$0;
    // Inline function 'kotlin.Long.minus' call
    tmp$ret$0 = bigInteger.hj().y4(new Long(1, 0));
    return (new BigDecimal(bigInteger, tmp$ret$0, decimalMode)).sk(decimalMode);
  };
  protoOf(Companion).tk = function (long, decimalMode) {
    var bigint = Companion_getInstance_2().ai(long);
    var tmp$ret$0;
    // Inline function 'kotlin.Long.minus' call
    tmp$ret$0 = bigint.hj().y4(new Long(1, 0));
    return (new BigDecimal(bigint, tmp$ret$0, decimalMode)).sk(decimalMode);
  };
  protoOf(Companion).uk = function (int, decimalMode) {
    var bigint = Companion_getInstance_2().bi(int);
    var tmp$ret$0;
    // Inline function 'kotlin.Long.minus' call
    tmp$ret$0 = bigint.hj().y4(new Long(1, 0));
    return (new BigDecimal(bigint, tmp$ret$0, decimalMode)).sk(decimalMode);
  };
  protoOf(Companion).vk = function (short, decimalMode) {
    var bigint = Companion_getInstance_2().wk(short);
    var tmp$ret$0;
    // Inline function 'kotlin.Long.minus' call
    tmp$ret$0 = bigint.hj().y4(new Long(1, 0));
    return (new BigDecimal(bigint, tmp$ret$0, decimalMode)).sk(decimalMode);
  };
  protoOf(Companion).xk = function (byte, decimalMode) {
    var bigint = Companion_getInstance_2().yk(byte);
    var tmp$ret$0;
    // Inline function 'kotlin.Long.minus' call
    tmp$ret$0 = bigint.hj().y4(new Long(1, 0));
    return (new BigDecimal(bigint, tmp$ret$0, decimalMode)).sk(decimalMode);
  };
  protoOf(Companion).zk = function (float, decimalMode) {
    var floatString = float.toString();
    var tmp;
    if (contains(floatString, _Char___init__impl__6a9atx(46)) ? !contains(floatString, _Char___init__impl__6a9atx(69), true) : false) {
      var tmp$ret$3;
      $l$block: {
        // Inline function 'kotlin.text.dropLastWhile' call
        var inductionVariable = get_lastIndex(floatString);
        if (0 <= inductionVariable)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + -1 | 0;
            // Inline function 'com.ionspin.kotlin.bignum.decimal.Companion.fromFloat.<anonymous>' call
            if (!(charSequenceGet(floatString, index) === _Char___init__impl__6a9atx(48))) {
              // Inline function 'kotlin.text.substring' call
              var tmp0_substring = index + 1 | 0;
              // Inline function 'kotlin.js.asDynamic' call
              tmp$ret$3 = floatString.substring(0, tmp0_substring);
              break $l$block;
            }
          }
           while (0 <= inductionVariable);
        tmp$ret$3 = '';
      }
      tmp = this.al(tmp$ret$3, decimalMode);
    } else {
      tmp = this.al(floatString, decimalMode);
    }
    return tmp;
  };
  protoOf(Companion).qk = function (float, decimalMode, $super) {
    decimalMode = decimalMode === VOID ? null : decimalMode;
    return $super === VOID ? this.zk(float, decimalMode) : $super.zk.call(this, float, decimalMode);
  };
  protoOf(Companion).bl = function (double, decimalMode) {
    var doubleString = double.toString();
    var tmp;
    if (contains(doubleString, _Char___init__impl__6a9atx(46)) ? !contains(doubleString, _Char___init__impl__6a9atx(69), true) : false) {
      var tmp$ret$3;
      $l$block: {
        // Inline function 'kotlin.text.dropLastWhile' call
        var inductionVariable = get_lastIndex(doubleString);
        if (0 <= inductionVariable)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + -1 | 0;
            // Inline function 'com.ionspin.kotlin.bignum.decimal.Companion.fromDouble.<anonymous>' call
            if (!(charSequenceGet(doubleString, index) === _Char___init__impl__6a9atx(48))) {
              // Inline function 'kotlin.text.substring' call
              var tmp0_substring = index + 1 | 0;
              // Inline function 'kotlin.js.asDynamic' call
              tmp$ret$3 = doubleString.substring(0, tmp0_substring);
              break $l$block;
            }
          }
           while (0 <= inductionVariable);
        tmp$ret$3 = '';
      }
      tmp = this.al(tmp$ret$3, decimalMode);
    } else {
      tmp = this.al(doubleString, decimalMode);
    }
    return tmp;
  };
  protoOf(Companion).pk = function (double, decimalMode, $super) {
    decimalMode = decimalMode === VOID ? null : decimalMode;
    return $super === VOID ? this.bl(double, decimalMode) : $super.bl.call(this, double, decimalMode);
  };
  protoOf(Companion).gk = function (bigInteger) {
    return this.rk(bigInteger, null);
  };
  protoOf(Companion).ai = function (long) {
    return this.tk(long, null);
  };
  protoOf(Companion).bi = function (int) {
    return this.uk(int, null);
  };
  protoOf(Companion).wk = function (short) {
    return this.vk(short, null);
  };
  protoOf(Companion).yk = function (byte) {
    return this.xk(byte, null);
  };
  protoOf(Companion).ci = function (float, exactRequired) {
    return this.zk(float, null);
  };
  protoOf(Companion).ei = function (double, exactRequired) {
    return this.bl(double, null);
  };
  protoOf(Companion).cl = function (string) {
    return this.dl(string);
  };
  protoOf(Companion).al = function (floatingPointString, decimalMode) {
    // Inline function 'kotlin.text.isEmpty' call
    if (charSequenceLength(floatingPointString) === 0) {
      return this.vj_1;
    }
    if (contains(floatingPointString, _Char___init__impl__6a9atx(69), true)) {
      var tmp;
      if (!contains(floatingPointString, _Char___init__impl__6a9atx(46))) {
        var splitAroundE = split(floatingPointString, charArrayOf([_Char___init__impl__6a9atx(69), _Char___init__impl__6a9atx(101)]));
        tmp = listOf([splitAroundE.l(0), '0E' + splitAroundE.l(1)]);
      } else {
        tmp = split(floatingPointString, charArrayOf([_Char___init__impl__6a9atx(46)]));
      }
      var split_0 = tmp;
      if (split_0.i() === 2) {
        var signPresent = charSequenceGet(floatingPointString, 0) === _Char___init__impl__6a9atx(45) ? true : charSequenceGet(floatingPointString, 0) === _Char___init__impl__6a9atx(43);
        var tmp_0;
        if (signPresent) {
          tmp_0 = 1;
        } else {
          tmp_0 = 0;
        }
        var leftStart = tmp_0;
        var tmp_1;
        if (signPresent) {
          var tmp_2;
          if (charSequenceGet(floatingPointString, 0) === _Char___init__impl__6a9atx(45)) {
            tmp_2 = Sign_NEGATIVE_getInstance();
          } else {
            tmp_2 = Sign_POSITIVE_getInstance();
          }
          tmp_1 = tmp_2;
        } else {
          tmp_1 = Sign_POSITIVE_getInstance();
        }
        var sign = tmp_1;
        // Inline function 'kotlin.text.substring' call
        // Inline function 'kotlin.js.asDynamic' call
        var left = split_0.l(0).substring(leftStart);
        var rightSplit = split(split_0.l(1), charArrayOf([_Char___init__impl__6a9atx(69), _Char___init__impl__6a9atx(101)]));
        var right = rightSplit.l(0);
        var exponentSplit = rightSplit.l(1);
        var exponentSignPresent = charSequenceGet(exponentSplit, 0) === _Char___init__impl__6a9atx(45) ? true : charSequenceGet(exponentSplit, 0) === _Char___init__impl__6a9atx(43);
        var tmp_3;
        if (charSequenceGet(exponentSplit, 0) === _Char___init__impl__6a9atx(45)) {
          tmp_3 = Sign_NEGATIVE_getInstance();
        } else {
          tmp_3 = Sign_POSITIVE_getInstance();
        }
        var exponentSign = tmp_3;
        var tmp_4;
        if (exponentSignPresent) {
          tmp_4 = 1;
        } else {
          tmp_4 = 0;
        }
        var skipSignIfPresent = tmp_4;
        // Inline function 'kotlin.text.substring' call
        // Inline function 'kotlin.js.asDynamic' call
        var exponentString = exponentSplit.substring(skipSignIfPresent);
        var tmp_5;
        if (exponentSign.equals(Sign_POSITIVE_getInstance())) {
          tmp_5 = toLong_0(exponentString, 10);
        } else {
          // Inline function 'kotlin.Long.times' call
          tmp_5 = toLong_0(exponentString, 10).w4(new Long(-1, -1));
        }
        var exponent = tmp_5;
        var tmp$ret$7;
        $l$block: {
          // Inline function 'kotlin.text.indexOfFirst' call
          var inductionVariable = 0;
          var last = charSequenceLength(left) - 1 | 0;
          if (inductionVariable <= last)
            do {
              var index = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              // Inline function 'com.ionspin.kotlin.bignum.decimal.Companion.parseStringWithMode.<anonymous>' call
              if (!(charSequenceGet(left, index) === _Char___init__impl__6a9atx(48))) {
                tmp$ret$7 = index;
                break $l$block;
              }
            }
             while (inductionVariable <= last);
          tmp$ret$7 = -1;
        }
        var leftFirstNonZero = tmp$ret$7;
        if (leftFirstNonZero === -1) {
          leftFirstNonZero = 0;
        }
        var tmp$ret$9;
        $l$block_0: {
          // Inline function 'kotlin.text.indexOfLast' call
          var inductionVariable_0 = charSequenceLength(right) - 1 | 0;
          if (0 <= inductionVariable_0)
            do {
              var index_0 = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + -1 | 0;
              // Inline function 'com.ionspin.kotlin.bignum.decimal.Companion.parseStringWithMode.<anonymous>' call
              if (!(charSequenceGet(right, index_0) === _Char___init__impl__6a9atx(48))) {
                tmp$ret$9 = index_0;
                break $l$block_0;
              }
            }
             while (0 <= inductionVariable_0);
          tmp$ret$9 = -1;
        }
        var rightLastNonZero = tmp$ret$9;
        if (rightLastNonZero === -1) {
          rightLastNonZero = right.length - 1 | 0;
        }
        // Inline function 'kotlin.text.substring' call
        var tmp4_substring = leftFirstNonZero;
        var tmp5_substring = left.length;
        // Inline function 'kotlin.js.asDynamic' call
        var leftTruncated = left.substring(tmp4_substring, tmp5_substring);
        // Inline function 'kotlin.text.substring' call
        var tmp6_substring = rightLastNonZero + 1 | 0;
        // Inline function 'kotlin.js.asDynamic' call
        var rightTruncated = right.substring(0, tmp6_substring);
        var significand = Companion_getInstance_2().el(leftTruncated + rightTruncated, 10);
        if (significand.equals(Companion_getInstance_2().lj_1)) {
          sign = Sign_ZERO_getInstance();
        }
        if (sign.equals(Sign_NEGATIVE_getInstance())) {
          significand = significand.fl();
        }
        var tmp_6;
        if (!(leftTruncated === '0')) {
          // Inline function 'kotlin.Long.minus' call
          // Inline function 'kotlin.Long.plus' call
          var tmp7_plus = leftTruncated.length;
          tmp_6 = exponent.x4(toLong(tmp7_plus)).y4(new Long(1, 0));
        } else {
          // Inline function 'kotlin.Long.minus' call
          tmp_6 = exponent.y4(numberToLong(rightTruncated.length).y4(significand.hj())).y4(new Long(1, 0));
        }
        var exponentModifiedByFloatingPointPosition = tmp_6;
        return new BigDecimal(significand, exponentModifiedByFloatingPointPosition, decimalMode);
      } else
        throw ArithmeticException_init_$Create$('Invalid (or unsupported) floating point number format: ' + floatingPointString);
    } else {
      if (contains(floatingPointString, _Char___init__impl__6a9atx(46))) {
        var split_1 = split(floatingPointString, charArrayOf([_Char___init__impl__6a9atx(46)]));
        if (split_1.i() === 2) {
          var signPresent_0 = charSequenceGet(floatingPointString, 0) === _Char___init__impl__6a9atx(45) ? true : charSequenceGet(floatingPointString, 0) === _Char___init__impl__6a9atx(43);
          var tmp_7;
          if (signPresent_0) {
            tmp_7 = 1;
          } else {
            tmp_7 = 0;
          }
          var leftStart_0 = tmp_7;
          var tmp_8;
          if (signPresent_0) {
            var tmp_9;
            if (charSequenceGet(floatingPointString, 0) === _Char___init__impl__6a9atx(45)) {
              tmp_9 = Sign_NEGATIVE_getInstance();
            } else {
              tmp_9 = Sign_POSITIVE_getInstance();
            }
            tmp_8 = tmp_9;
          } else {
            tmp_8 = Sign_POSITIVE_getInstance();
          }
          var sign_0 = tmp_8;
          // Inline function 'kotlin.text.substring' call
          // Inline function 'kotlin.js.asDynamic' call
          var left_0 = split_1.l(0).substring(leftStart_0);
          var right_0 = split_1.l(1);
          var tmp$ret$20;
          $l$block_1: {
            // Inline function 'kotlin.text.indexOfFirst' call
            var inductionVariable_1 = 0;
            var last_0 = charSequenceLength(left_0) - 1 | 0;
            if (inductionVariable_1 <= last_0)
              do {
                var index_1 = inductionVariable_1;
                inductionVariable_1 = inductionVariable_1 + 1 | 0;
                // Inline function 'com.ionspin.kotlin.bignum.decimal.Companion.parseStringWithMode.<anonymous>' call
                if (!(charSequenceGet(left_0, index_1) === _Char___init__impl__6a9atx(48))) {
                  tmp$ret$20 = index_1;
                  break $l$block_1;
                }
              }
               while (inductionVariable_1 <= last_0);
            tmp$ret$20 = -1;
          }
          var leftFirstNonZero_0 = tmp$ret$20;
          if (leftFirstNonZero_0 === -1) {
            leftFirstNonZero_0 = 0;
          }
          var tmp$ret$22;
          $l$block_2: {
            // Inline function 'kotlin.text.indexOfLast' call
            var inductionVariable_2 = charSequenceLength(right_0) - 1 | 0;
            if (0 <= inductionVariable_2)
              do {
                var index_2 = inductionVariable_2;
                inductionVariable_2 = inductionVariable_2 + -1 | 0;
                // Inline function 'com.ionspin.kotlin.bignum.decimal.Companion.parseStringWithMode.<anonymous>' call
                if (!(charSequenceGet(right_0, index_2) === _Char___init__impl__6a9atx(48))) {
                  tmp$ret$22 = index_2;
                  break $l$block_2;
                }
              }
               while (0 <= inductionVariable_2);
            tmp$ret$22 = -1;
          }
          var rightLastNonZero_0 = tmp$ret$22;
          if (rightLastNonZero_0 === -1) {
            rightLastNonZero_0 = right_0.length - 1 | 0;
          }
          // Inline function 'kotlin.text.substring' call
          var tmp13_substring = leftFirstNonZero_0;
          var tmp14_substring = left_0.length;
          // Inline function 'kotlin.js.asDynamic' call
          var leftTruncated_0 = left_0.substring(tmp13_substring, tmp14_substring);
          // Inline function 'kotlin.text.substring' call
          var tmp15_substring = rightLastNonZero_0 + 1 | 0;
          // Inline function 'kotlin.js.asDynamic' call
          var rightTruncated_0 = right_0.substring(0, tmp15_substring);
          var significand_0 = Companion_getInstance_2().el(leftTruncated_0 + rightTruncated_0, 10);
          var tmp_10;
          var tmp_11;
          // Inline function 'kotlin.text.isNotEmpty' call
          if (charSequenceLength(leftTruncated_0) > 0) {
            tmp_11 = !(charSequenceGet(leftTruncated_0, 0) === _Char___init__impl__6a9atx(48));
          } else {
            tmp_11 = false;
          }
          if (tmp_11) {
            tmp_10 = leftTruncated_0.length - 1 | 0;
          } else {
            var tmp$ret$29;
            $l$block_3: {
              // Inline function 'kotlin.text.indexOfFirst' call
              var inductionVariable_3 = 0;
              var last_1 = charSequenceLength(rightTruncated_0) - 1 | 0;
              if (inductionVariable_3 <= last_1)
                do {
                  var index_3 = inductionVariable_3;
                  inductionVariable_3 = inductionVariable_3 + 1 | 0;
                  // Inline function 'com.ionspin.kotlin.bignum.decimal.Companion.parseStringWithMode.<anonymous>' call
                  if (!(charSequenceGet(rightTruncated_0, index_3) === _Char___init__impl__6a9atx(48))) {
                    tmp$ret$29 = index_3;
                    break $l$block_3;
                  }
                }
                 while (inductionVariable_3 <= last_1);
              tmp$ret$29 = -1;
            }
            tmp_10 = imul(tmp$ret$29 + 1 | 0, -1);
          }
          var exponent_0 = tmp_10;
          if (significand_0.equals(Companion_getInstance_2().lj_1)) {
            sign_0 = Sign_ZERO_getInstance();
          }
          if (sign_0.equals(Sign_NEGATIVE_getInstance())) {
            significand_0 = significand_0.fl();
          }
          return new BigDecimal(significand_0, toLong(exponent_0), decimalMode);
        } else
          throw ArithmeticException_init_$Create$('Invalid (or unsupported) floating point number format: ' + floatingPointString);
      } else {
        var significand_1 = Companion_getInstance_2().el(floatingPointString, 10);
        var tmp$ret$30;
        // Inline function 'kotlin.Long.minus' call
        tmp$ret$30 = significand_1.hj().y4(new Long(1, 0));
        return new BigDecimal(significand_1, tmp$ret$30, decimalMode);
      }
    }
  };
  protoOf(Companion).dl = function (floatingPointString, decimalMode, $super) {
    decimalMode = decimalMode === VOID ? null : decimalMode;
    return $super === VOID ? this.al(floatingPointString, decimalMode) : $super.al.call(this, floatingPointString, decimalMode);
  };
  var Companion_instance;
  function Companion_getInstance_0() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function ScaleOps(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function computeMode($this, other, op) {
    var tmp;
    if ((($this.hk_1 == null ? true : $this.hk_1.bj_1) ? true : other.hk_1 == null) ? true : other.hk_1.bj_1) {
      tmp = Companion_getInstance_1().gl_1;
    } else {
      // Inline function 'kotlin.math.max' call
      var tmp0_max = $this.hk_1.yi_1;
      var tmp1_max = other.hk_1.yi_1;
      var tmp_0 = tmp0_max.v4(tmp1_max) >= 0 ? tmp0_max : tmp1_max;
      var tmp_1;
      if ($this.hk_1.cj_1 ? other.hk_1.cj_1 : false) {
        var tmp_2;
        switch (op.m1_1) {
          case 0:
            // Inline function 'kotlin.math.max' call

            var tmp2_max = $this.hk_1.aj_1;
            var tmp3_max = other.hk_1.aj_1;
            tmp_2 = tmp2_max.v4(tmp3_max) >= 0 ? tmp2_max : tmp3_max;
            break;
          case 1:
            // Inline function 'kotlin.math.min' call

            var tmp4_min = $this.hk_1.aj_1;
            var tmp5_min = other.hk_1.aj_1;
            tmp_2 = tmp4_min.v4(tmp5_min) <= 0 ? tmp4_min : tmp5_min;
            break;
          case 2:
            tmp_2 = $this.hk_1.aj_1.x4(other.hk_1.aj_1);
            break;
          default:
            noWhenBranchMatchedException();
            break;
        }
        tmp_1 = tmp_2;
      } else {
        tmp_1 = new Long(-1, -1);
      }
      tmp = new DecimalMode(tmp_0, $this.hk_1.zi_1, tmp_1);
    }
    return tmp;
  }
  function getRidOfRadix($this, bigDecimal) {
    var precision = bigDecimal.lk_1.hj();
    // Inline function 'kotlin.Long.plus' call
    var newExponent = bigDecimal.mk_1.y4(precision).x4(new Long(1, 0));
    return new BigDecimal(bigDecimal.lk_1, newExponent);
  }
  function bringSignificandToSameExponent($this, first, second) {
    var firstPrepared = getRidOfRadix($this, first);
    var secondPrepared = getRidOfRadix($this, second);
    var firstPreparedExponent = firstPrepared.mk_1;
    var secondPreparedExponent = secondPrepared.mk_1;
    var tmp;
    if (first.mk_1.v4(second.mk_1) > 0) {
      var moveFirstBy = firstPreparedExponent.y4(secondPreparedExponent);
      var tmp_0;
      if (moveFirstBy.v4(new Long(0, 0)) >= 0) {
        var movedFirst = firstPrepared.lk_1.si(toBigInteger(10).qj(moveFirstBy));
        return new Triple(movedFirst, second.lk_1, secondPreparedExponent);
      } else {
        var tmp_1 = toBigInteger(10);
        var tmp$ret$0;
        // Inline function 'kotlin.Long.times' call
        tmp$ret$0 = moveFirstBy.w4(new Long(-1, -1));
        var movedSecond = secondPrepared.lk_1.si(tmp_1.qj(tmp$ret$0));
        tmp_0 = new Triple(first.lk_1, movedSecond, firstPreparedExponent);
      }
      tmp = tmp_0;
    } else if (first.mk_1.v4(second.mk_1) < 0) {
      var moveSecondBy = secondPreparedExponent.y4(firstPreparedExponent);
      var tmp_2;
      if (moveSecondBy.v4(new Long(0, 0)) >= 0) {
        var movedSecond_0 = secondPrepared.lk_1.si(toBigInteger(10).qj(moveSecondBy));
        tmp_2 = new Triple(first.lk_1, movedSecond_0, firstPreparedExponent);
      } else {
        var tmp_3 = toBigInteger(10);
        var tmp$ret$1;
        // Inline function 'kotlin.Long.times' call
        tmp$ret$1 = moveSecondBy.w4(new Long(-1, -1));
        var movedFirst_0 = firstPrepared.lk_1.si(tmp_3.qj(tmp$ret$1));
        tmp_2 = new Triple(movedFirst_0, second.lk_1, firstPreparedExponent);
      }
      return tmp_2;
    } else if (first.mk_1.equals(second.mk_1)) {
      var delta = firstPreparedExponent.y4(secondPreparedExponent);
      var tmp_4;
      if (delta.v4(new Long(0, 0)) > 0) {
        var movedFirst_1 = first.lk_1.si(toBigInteger(10).qj(delta));
        tmp_4 = new Triple(movedFirst_1, second.lk_1, firstPreparedExponent);
      } else {
        if (delta.v4(new Long(0, 0)) < 0) {
          var tmp_5 = toBigInteger(10);
          var tmp$ret$2;
          // Inline function 'kotlin.Long.times' call
          tmp$ret$2 = delta.w4(new Long(-1, -1));
          var movedSecond_1 = second.lk_1.si(tmp_5.qj(tmp$ret$2));
          tmp_4 = new Triple(first.lk_1, movedSecond_1, firstPreparedExponent);
        } else {
          // Inline function 'kotlin.Long.compareTo' call
          if (delta.v4(new Long(0, 0)) === 0) {
            tmp_4 = new Triple(first.lk_1, second.lk_1, firstPreparedExponent);
          } else {
            throw RuntimeException_init_$Create$('Invalid delta: ' + toString(delta));
          }
        }
      }
      return tmp_4;
    } else {
      throw RuntimeException_init_$Create$('Invalid comparison state BigInteger: ' + toString(first.mk_1) + ', ' + toString(second.mk_1));
    }
    return tmp;
  }
  function javascriptNumberComparison($this, number) {
    var float = numberToDouble(number);
    return float % 1 === 0.0 ? $this.il(Companion_getInstance_0().ai(numberToLong(number))) : $this.il(toBigDecimal(numberToDouble(number)));
  }
  function placeADotInStringExpanded($this, input, position) {
    var prefix = substring(input, until(0, input.length - position | 0));
    var tmp$ret$3;
    $l$block: {
      // Inline function 'kotlin.text.dropLastWhile' call
      var tmp0_dropLastWhile = substring(input, until(input.length - position | 0, input.length));
      var inductionVariable = get_lastIndex(tmp0_dropLastWhile);
      if (0 <= inductionVariable)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + -1 | 0;
          // Inline function 'com.ionspin.kotlin.bignum.decimal.BigDecimal.placeADotInStringExpanded.<anonymous>' call
          if (!(charSequenceGet(tmp0_dropLastWhile, index) === _Char___init__impl__6a9atx(48))) {
            // Inline function 'kotlin.text.substring' call
            var tmp0_substring = index + 1 | 0;
            // Inline function 'kotlin.js.asDynamic' call
            tmp$ret$3 = tmp0_dropLastWhile.substring(0, tmp0_substring);
            break $l$block;
          }
        }
         while (0 <= inductionVariable);
      tmp$ret$3 = '';
    }
    var suffix = tmp$ret$3;
    var tmp;
    // Inline function 'kotlin.text.isNotEmpty' call
    if (charSequenceLength(suffix) > 0) {
      tmp = prefix + '.' + suffix;
    } else {
      tmp = prefix;
    }
    return tmp;
  }
  function placeADotInString($this, input, position) {
    var prefix = substring(input, until(0, input.length - position | 0));
    var suffix = substring(input, until(input.length - position | 0, input.length));
    var prepared = prefix + '.' + suffix;
    var tmp$ret$3;
    $l$block: {
      // Inline function 'kotlin.text.dropLastWhile' call
      var inductionVariable = get_lastIndex(prepared);
      if (0 <= inductionVariable)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + -1 | 0;
          // Inline function 'com.ionspin.kotlin.bignum.decimal.BigDecimal.placeADotInString.<anonymous>' call
          if (!(charSequenceGet(prepared, index) === _Char___init__impl__6a9atx(48))) {
            // Inline function 'kotlin.text.substring' call
            var tmp0_substring = index + 1 | 0;
            // Inline function 'kotlin.js.asDynamic' call
            tmp$ret$3 = prepared.substring(0, tmp0_substring);
            break $l$block;
          }
        }
         while (0 <= inductionVariable);
      tmp$ret$3 = '';
    }
    return tmp$ret$3;
  }
  function ScaleOps_Max_getInstance() {
    ScaleOps_initEntries();
    return ScaleOps_Max_instance;
  }
  function ScaleOps_Min_getInstance() {
    ScaleOps_initEntries();
    return ScaleOps_Min_instance;
  }
  function ScaleOps_Add_getInstance() {
    ScaleOps_initEntries();
    return ScaleOps_Add_instance;
  }
  function BigDecimal(_significand, _exponent, decimalMode) {
    Companion_getInstance_0();
    _exponent = _exponent === VOID ? new Long(0, 0) : _exponent;
    decimalMode = decimalMode === VOID ? null : decimalMode;
    this.hk_1 = decimalMode;
    this.ik_1 = _significand.hj();
    var tmp = this;
    var tmp0_safe_receiver = this.hk_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.yi_1;
    tmp.jk_1 = tmp1_elvis_lhs == null ? new Long(0, 0) : tmp1_elvis_lhs;
    var tmp_0 = this;
    var tmp0_safe_receiver_0 = this.hk_1;
    var tmp1_elvis_lhs_0 = tmp0_safe_receiver_0 == null ? null : tmp0_safe_receiver_0.zi_1;
    tmp_0.kk_1 = tmp1_elvis_lhs_0 == null ? RoundingMode_NONE_getInstance() : tmp1_elvis_lhs_0;
    if (!(this.hk_1 == null) ? this.hk_1.cj_1 : false) {
      var wrk = applyScale(Companion_getInstance_0(), _significand, _exponent, this.hk_1);
      this.lk_1 = wrk.lk_1;
      this.mk_1 = wrk.mk_1;
    } else {
      this.lk_1 = _significand;
      this.mk_1 = _exponent;
    }
    var tmp_1 = this;
    var tmp0_safe_receiver_1 = this.hk_1;
    var tmp1_elvis_lhs_1 = tmp0_safe_receiver_1 == null ? null : tmp0_safe_receiver_1.aj_1;
    tmp_1.nk_1 = tmp1_elvis_lhs_1 == null ? new Long(-1, -1) : tmp1_elvis_lhs_1;
    this.ok_1 = this.nk_1.v4(new Long(0, 0)) >= 0;
  }
  protoOf(BigDecimal).oi = function () {
    return Companion_getInstance_0();
  };
  protoOf(BigDecimal).pi = function () {
    return this;
  };
  protoOf(BigDecimal).jl = function (other) {
    return this.kl(other, computeMode(this, other, ScaleOps_Max_getInstance()));
  };
  protoOf(BigDecimal).gi = function (other) {
    return this.jl(other instanceof BigDecimal ? other : THROW_CCE());
  };
  protoOf(BigDecimal).kl = function (other, decimalMode) {
    var resolvedDecimalMode = resolveDecimalMode(Companion_getInstance_0(), this.hk_1, other.hk_1, decimalMode);
    var tmp0_container = bringSignificandToSameExponent(this, this, other);
    var first = tmp0_container.j3();
    var second = tmp0_container.k3();
    var firstNumOfDigits = first.hj();
    var secondNumOfDigits = second.hj();
    var newSignificand = first.qi(second);
    var newSignificandNumOfDigit = newSignificand.hj();
    var tmp;
    if (firstNumOfDigits.v4(secondNumOfDigits) > 0) {
      tmp = firstNumOfDigits;
    } else {
      tmp = secondNumOfDigits;
    }
    var largerOperand = tmp;
    var carryDetected = newSignificandNumOfDigit.y4(largerOperand);
    // Inline function 'kotlin.math.max' call
    var tmp0_max = this.mk_1;
    var tmp1_max = other.mk_1;
    var newExponent = (tmp0_max.v4(tmp1_max) >= 0 ? tmp0_max : tmp1_max).x4(carryDetected);
    return roundOrDont(Companion_getInstance_0(), newSignificand, newExponent, resolvedDecimalMode);
  };
  protoOf(BigDecimal).ll = function (other) {
    return this.ml(other, computeMode(this, other, ScaleOps_Max_getInstance()));
  };
  protoOf(BigDecimal).hi = function (other) {
    return this.ll(other instanceof BigDecimal ? other : THROW_CCE());
  };
  protoOf(BigDecimal).ml = function (other, decimalMode) {
    var resolvedDecimalMode = resolveDecimalMode(Companion_getInstance_0(), this.hk_1, other.hk_1, decimalMode);
    var tmp0_container = bringSignificandToSameExponent(this, this, other);
    var first = tmp0_container.j3();
    var second = tmp0_container.k3();
    var firstNumOfDigits = first.hj();
    var secondNumOfDigits = second.hj();
    var newSignificand = first.ri(second);
    var newSignificandNumOfDigit = newSignificand.hj();
    var tmp;
    if (firstNumOfDigits.v4(secondNumOfDigits) > 0) {
      tmp = firstNumOfDigits;
    } else {
      tmp = secondNumOfDigits;
    }
    var largerOperand = tmp;
    var borrowDetected = newSignificandNumOfDigit.y4(largerOperand);
    // Inline function 'kotlin.math.max' call
    var tmp0_max = this.mk_1;
    var tmp1_max = other.mk_1;
    var newExponent = (tmp0_max.v4(tmp1_max) >= 0 ? tmp0_max : tmp1_max).x4(borrowDetected);
    return roundOrDont(Companion_getInstance_0(), newSignificand, newExponent, resolvedDecimalMode);
  };
  protoOf(BigDecimal).nl = function (other) {
    return this.ol(other, computeMode(this, other, ScaleOps_Add_getInstance()));
  };
  protoOf(BigDecimal).ii = function (other) {
    return this.nl(other instanceof BigDecimal ? other : THROW_CCE());
  };
  protoOf(BigDecimal).ol = function (other, decimalMode) {
    var resolvedDecimalMode = resolveDecimalMode(Companion_getInstance_0(), this.hk_1, other.hk_1, decimalMode);
    var firstNumOfDigits = this.lk_1.hj();
    var secondNumOfDigits = other.lk_1.hj();
    var newSignificand = this.lk_1.si(other.lk_1);
    var newSignificandNumOfDigit = newSignificand.hj();
    var moveExponent = newSignificandNumOfDigit.y4(firstNumOfDigits.x4(secondNumOfDigits));
    // Inline function 'kotlin.Long.plus' call
    var newExponent = this.mk_1.x4(other.mk_1).x4(moveExponent).x4(new Long(1, 0));
    return roundOrDont(Companion_getInstance_0(), newSignificand, newExponent, resolvedDecimalMode);
  };
  protoOf(BigDecimal).pl = function (other) {
    return this.ql(other, computeMode(this, other, ScaleOps_Min_getInstance()));
  };
  protoOf(BigDecimal).ji = function (other) {
    return this.pl(other instanceof BigDecimal ? other : THROW_CCE());
  };
  protoOf(BigDecimal).ql = function (other, decimalMode) {
    var resolvedDecimalMode = resolveDecimalMode(Companion_getInstance_0(), this.hk_1, other.hk_1, decimalMode);
    if (resolvedDecimalMode.bj_1) {
      var newExponent = this.mk_1.y4(other.mk_1);
      // Inline function 'kotlin.Long.plus' call
      // Inline function 'kotlin.Long.times' call
      var power = other.ik_1.w4(new Long(2, 0)).x4(new Long(6, 0));
      var thisPrepared = this.lk_1.si(Companion_getInstance_2().oj_1.qj(power));
      var divRem = thisPrepared.rj(other.lk_1);
      var result = divRem.ij_1;
      // Inline function 'kotlin.Long.minus' call
      var expectedDiff = other.ik_1.y4(new Long(1, 0));
      var exponentModifier = expectedDiff.x4(result.hj().y4(thisPrepared.hj()));
      if (!divRem.jj_1.equals(Companion_getInstance_2().lj_1)) {
        throw ArithmeticException_init_$Create$('Non-terminating result of division operation (i.e. 1/3 = 0.3333... library needs to know when to stop and how to round up at that point). Specify decimalPrecision inside your decimal mode.');
      }
      return new BigDecimal(result, newExponent.x4(exponentModifier), resolvedDecimalMode);
    } else {
      // Inline function 'kotlin.Long.minus' call
      var newExponent_0 = this.mk_1.y4(other.mk_1).y4(new Long(1, 0));
      var desiredPrecision = resolvedDecimalMode.yi_1;
      var power_0 = desiredPrecision.y4(this.ik_1).x4(other.ik_1);
      var tmp;
      if (power_0.v4(new Long(0, 0)) > 0) {
        tmp = this.lk_1.si(toBigInteger(10).qj(power_0));
      } else if (power_0.v4(new Long(0, 0)) < 0) {
        var tmp_0 = toBigInteger(10);
        var tmp$ret$4;
        // Inline function 'kotlin.math.absoluteValue' call
        tmp$ret$4 = abs(power_0);
        tmp = this.lk_1.ti(tmp_0.qj(tmp$ret$4));
      } else {
        tmp = this.lk_1;
      }
      var thisPrepared_0 = tmp;
      var divRem_0 = thisPrepared_0.rj(other.lk_1);
      var result_0 = divRem_0.ij_1;
      if (result_0.equals(Companion_getInstance_2().lj_1)) {
        newExponent_0 = newExponent_0.re();
      }
      var exponentModifier_0 = result_0.hj().y4(resolvedDecimalMode.yi_1);
      return new BigDecimal(roundDiscarded(Companion_getInstance_0(), result_0, divRem_0.jj_1, resolvedDecimalMode), newExponent_0.x4(exponentModifier_0), resolvedDecimalMode);
    }
  };
  protoOf(BigDecimal).rl = function (other) {
    return this.sl(other).y3_1;
  };
  protoOf(BigDecimal).ki = function (other) {
    return this.rl(other instanceof BigDecimal ? other : THROW_CCE());
  };
  protoOf(BigDecimal).sl = function (other) {
    var tmp0_elvis_lhs = this.hk_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$0;
      // Inline function 'kotlin.Long.plus' call
      tmp$ret$0 = this.mk_1.x4(new Long(1, 0));
      tmp = new DecimalMode(tmp$ret$0, RoundingMode_FLOOR_getInstance());
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var resolvedRoundingMode = tmp;
    var quotient = this.ql(other, resolvedRoundingMode);
    var quotientInfinitePrecision = quotient.tl(VOID, VOID, Companion_getInstance_1().gl_1);
    var remainder = this.vl(quotientInfinitePrecision.ul(other));
    return new Pair(quotient, remainder);
  };
  protoOf(BigDecimal).wl = function (significand, exponent, decimalMode) {
    return new BigDecimal(significand, exponent, decimalMode);
  };
  protoOf(BigDecimal).tl = function (significand, exponent, decimalMode, $super) {
    significand = significand === VOID ? this.lk_1 : significand;
    exponent = exponent === VOID ? this.mk_1 : exponent;
    decimalMode = decimalMode === VOID ? this.hk_1 : decimalMode;
    return $super === VOID ? this.wl(significand, exponent, decimalMode) : $super.wl.call(this, significand, exponent, decimalMode);
  };
  protoOf(BigDecimal).xl = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.Long.plus' call
    tmp$ret$0 = this.mk_1.x4(new Long(1, 0));
    return this.sk(new DecimalMode(tmp$ret$0, RoundingMode_FLOOR_getInstance()));
  };
  protoOf(BigDecimal).yl = function () {
    if (this.mk_1.v4(new Long(0, 0)) < 0) {
      return Companion_getInstance_2().lj_1;
    }
    var precisionExponentDiff = this.mk_1.y4(this.ik_1);
    var tmp;
    if (precisionExponentDiff.v4(new Long(0, 0)) > 0) {
      var tmp_0 = toBigInteger(10);
      var tmp$ret$0;
      // Inline function 'kotlin.Long.plus' call
      tmp$ret$0 = precisionExponentDiff.x4(new Long(1, 0));
      tmp = this.lk_1.si(tmp_0.qj(tmp$ret$0));
    } else if (precisionExponentDiff.v4(new Long(0, 0)) < 0) {
      var tmp_1 = toBigInteger(10);
      var tmp$ret$2;
      // Inline function 'kotlin.Long.minus' call
      // Inline function 'kotlin.math.absoluteValue' call
      tmp$ret$2 = abs(precisionExponentDiff).y4(new Long(1, 0));
      tmp = this.lk_1.ti(tmp_1.qj(tmp$ret$2));
    } else {
      tmp = this.lk_1;
    }
    return tmp;
  };
  protoOf(BigDecimal).vl = function (other) {
    return this.ml(other, computeMode(this, other, ScaleOps_Max_getInstance()));
  };
  protoOf(BigDecimal).ul = function (other) {
    return this.ol(other, computeMode(this, other, ScaleOps_Add_getInstance()));
  };
  protoOf(BigDecimal).li = function () {
    return this.lk_1.li();
  };
  protoOf(BigDecimal).sk = function (decimalMode) {
    if (decimalMode == null) {
      return this;
    }
    return roundSignificand(Companion_getInstance_0(), this.lk_1, this.mk_1, decimalMode);
  };
  protoOf(BigDecimal).il = function (other) {
    if (this.mk_1.equals(other.mk_1) ? this.ik_1.equals(other.ik_1) : false) {
      return this.lk_1.zl(other.lk_1);
    }
    var tmp0_container = bringSignificandToSameExponent(this, this, other);
    var preparedFirst = tmp0_container.j3();
    var preparedSecond = tmp0_container.k3();
    return preparedFirst.zl(preparedSecond);
  };
  protoOf(BigDecimal).uj = function (other) {
    if (isNumber(other)) {
      if (ComparisonWorkaround_getInstance().am(other)) {
        return javascriptNumberComparison(this, other);
      }
    }
    var tmp;
    if (other instanceof BigDecimal) {
      tmp = this.il(other);
    } else {
      if (other instanceof Long) {
        tmp = this.il(Companion_getInstance_0().ai(other));
      } else {
        if (typeof other === 'number') {
          tmp = this.il(Companion_getInstance_0().bi(other));
        } else {
          if (typeof other === 'number') {
            tmp = this.il(Companion_getInstance_0().wk(other));
          } else {
            if (typeof other === 'number') {
              tmp = this.il(Companion_getInstance_0().yk(other));
            } else {
              if (typeof other === 'number') {
                tmp = this.il(Companion_getInstance_0().pk(other));
              } else {
                if (typeof other === 'number') {
                  tmp = this.il(Companion_getInstance_0().qk(other));
                } else {
                  throw RuntimeException_init_$Create$('Invalid comparison type for BigDecimal: ' + getKClassFromExpression(other).eb());
                }
              }
            }
          }
        }
      }
    }
    return tmp;
  };
  protoOf(BigDecimal).y5 = function (other) {
    return this.uj(isObject(other) ? other : THROW_CCE());
  };
  protoOf(BigDecimal).equals = function (other) {
    var tmp;
    if (other instanceof BigDecimal) {
      tmp = this.il(other);
    } else {
      if (other instanceof Long) {
        tmp = this.il(Companion_getInstance_0().ai(other));
      } else {
        if (!(other == null) ? typeof other === 'number' : false) {
          tmp = this.il(Companion_getInstance_0().bi(other));
        } else {
          if (!(other == null) ? typeof other === 'number' : false) {
            tmp = this.il(Companion_getInstance_0().wk(other));
          } else {
            if (!(other == null) ? typeof other === 'number' : false) {
              tmp = this.il(Companion_getInstance_0().yk(other));
            } else {
              if (!(other == null) ? typeof other === 'number' : false) {
                tmp = this.il(Companion_getInstance_0().pk(other));
              } else {
                if (!(other == null) ? typeof other === 'number' : false) {
                  tmp = this.il(Companion_getInstance_0().qk(other));
                } else {
                  tmp = -1;
                }
              }
            }
          }
        }
      }
    }
    var comparison = tmp;
    return comparison === 0;
  };
  protoOf(BigDecimal).hashCode = function () {
    var tmp = this.lk_1.hashCode() + this.mk_1.hashCode() | 0;
    // Inline function 'kotlin.hashCode' call
    var tmp0_safe_receiver = this.hk_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
    return tmp + (tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs) | 0;
  };
  protoOf(BigDecimal).toString = function () {
    if (Companion_getInstance_0().zj_1) {
      return this.bm();
    }
    var significandString = this.lk_1.cm(10);
    var tmp;
    if (this.lk_1.uj(0) < 0) {
      tmp = 2;
    } else {
      tmp = 1;
    }
    var modifier = tmp;
    var tmp_0;
    var tmp$ret$3;
    $l$block: {
      // Inline function 'kotlin.text.dropLastWhile' call
      var tmp0_dropLastWhile = this.lk_1.toString();
      var inductionVariable = get_lastIndex(tmp0_dropLastWhile);
      if (0 <= inductionVariable)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + -1 | 0;
          // Inline function 'com.ionspin.kotlin.bignum.decimal.BigDecimal.toString.<anonymous>' call
          if (!(charSequenceGet(tmp0_dropLastWhile, index) === _Char___init__impl__6a9atx(48))) {
            // Inline function 'kotlin.text.substring' call
            var tmp0_substring = index + 1 | 0;
            // Inline function 'kotlin.js.asDynamic' call
            tmp$ret$3 = tmp0_dropLastWhile.substring(0, tmp0_substring);
            break $l$block;
          }
        }
         while (0 <= inductionVariable);
      tmp$ret$3 = '';
    }
    if (tmp$ret$3.length <= 1) {
      tmp_0 = '0';
    } else {
      tmp_0 = '';
    }
    var expand = tmp_0;
    var tmp_1;
    if (this.mk_1.v4(new Long(0, 0)) > 0) {
      tmp_1 = placeADotInString(this, significandString, significandString.length - modifier | 0) + expand + 'E+' + toString(this.mk_1);
    } else if (this.mk_1.v4(new Long(0, 0)) < 0) {
      tmp_1 = placeADotInString(this, significandString, significandString.length - modifier | 0) + expand + 'E' + toString(this.mk_1);
    } else if (this.mk_1.equals(new Long(0, 0))) {
      tmp_1 = placeADotInString(this, significandString, significandString.length - modifier | 0) + expand;
    } else {
      throw RuntimeException_init_$Create$('Invalid state, please report a bug (Integer compareTo invalid)');
    }
    return tmp_1;
  };
  protoOf(BigDecimal).bm = function () {
    if (this.equals(Companion_getInstance_0().vj_1)) {
      return '0';
    }
    var digits = this.lk_1.hj();
    if (this.mk_1.v4(toLong(IntCompanionObject_getInstance().MAX_VALUE)) > 0) {
      throw RuntimeException_init_$Create$('Invalid toStringExpanded request (exponent > Int.MAX_VALUE)');
    }
    var significandString = this.lk_1.dm(10);
    var tmp;
    if (this.lk_1.ej_1.equals(Sign_NEGATIVE_getInstance())) {
      tmp = '-';
    } else {
      tmp = '';
    }
    var sign = tmp;
    var tmp_0;
    if (this.mk_1.v4(new Long(0, 0)) > 0) {
      // Inline function 'kotlin.Long.plus' call
      var diffBigInt = this.mk_1.y4(digits).x4(new Long(1, 0));
      var tmp_1;
      if (diffBigInt.v4(new Long(0, 0)) > 0) {
        var expandZeros = this.em(diffBigInt, _Char___init__impl__6a9atx(48));
        tmp_1 = significandString + expandZeros;
      } else {
        tmp_1 = placeADotInStringExpanded(this, significandString, (significandString.length - this.mk_1.b7() | 0) - 1 | 0);
      }
      tmp_0 = tmp_1;
    } else if (this.mk_1.v4(new Long(0, 0)) < 0) {
      // Inline function 'kotlin.math.absoluteValue' call
      var tmp1_get_absoluteValue_on85xe = this.mk_1.b7();
      var diffInt = abs_0(tmp1_get_absoluteValue_on85xe);
      var tmp_2;
      if (diffInt > 0) {
        var tmp$ret$2;
        // Inline function 'kotlin.math.absoluteValue' call
        var tmp2_get_absoluteValue_wf3xdr = this.mk_1;
        tmp$ret$2 = abs(tmp2_get_absoluteValue_wf3xdr);
        var expandZeros_0 = this.em(tmp$ret$2, _Char___init__impl__6a9atx(48));
        tmp_2 = placeADotInStringExpanded(this, expandZeros_0 + significandString, (diffInt + significandString.length | 0) - 1 | 0);
      } else {
        tmp_2 = placeADotInStringExpanded(this, significandString, significandString.length - 1 | 0);
      }
      tmp_0 = tmp_2;
    } else if (this.mk_1.equals(new Long(0, 0))) {
      if (digits.equals(new Long(1, 0))) {
        return sign + significandString;
      }
      tmp_0 = placeADotInStringExpanded(this, significandString, significandString.length - 1 | 0);
    } else {
      throw RuntimeException_init_$Create$('Invalid state, please report a bug (Integer compareTo invalid)');
    }
    var adjusted = tmp_0;
    return sign + adjusted;
  };
  protoOf(BigDecimal).em = function (_this__u8e3s4, char) {
    if (_this__u8e3s4.v4(new Long(0, 0)) < 0) {
      throw RuntimeException_init_$Create$('Char cannot be multiplied with negative number');
    }
    var counter = _this__u8e3s4;
    var stringBuilder = StringBuilder_init_$Create$();
    while (counter.v4(new Long(0, 0)) > 0) {
      stringBuilder.q4(char);
      counter = counter.re();
    }
    return stringBuilder.toString();
  };
  function toBigDecimal(_this__u8e3s4, decimalMode) {
    decimalMode = decimalMode === VOID ? null : decimalMode;
    return Companion_getInstance_0().zk(_this__u8e3s4, decimalMode);
  }
  function Companion_0() {
    Companion_instance_0 = this;
    this.gl_1 = new DecimalMode();
    this.hl_1 = new DecimalMode(new Long(30, 0), RoundingMode_ROUND_HALF_AWAY_FROM_ZERO_getInstance(), new Long(2, 0));
  }
  var Companion_instance_0;
  function Companion_getInstance_1() {
    if (Companion_instance_0 == null)
      new Companion_0();
    return Companion_instance_0;
  }
  function DecimalMode(decimalPrecision, roundingMode, scale) {
    Companion_getInstance_1();
    decimalPrecision = decimalPrecision === VOID ? new Long(0, 0) : decimalPrecision;
    roundingMode = roundingMode === VOID ? RoundingMode_NONE_getInstance() : roundingMode;
    scale = scale === VOID ? new Long(-1, -1) : scale;
    this.yi_1 = decimalPrecision;
    this.zi_1 = roundingMode;
    this.aj_1 = scale;
    this.bj_1 = this.yi_1.equals(new Long(0, 0));
    this.cj_1 = this.aj_1.v4(new Long(0, 0)) >= 0;
    if (this.yi_1.equals(new Long(0, 0)) ? !this.zi_1.equals(RoundingMode_NONE_getInstance()) : false) {
      throw ArithmeticException_init_$Create$('Rounding mode with 0 digits precision.');
    }
    if (this.aj_1.v4(new Long(-1, -1)) < 0) {
      throw ArithmeticException_init_$Create$('Negative Scale is unsupported.');
    }
    if (this.cj_1 ? this.zi_1.equals(RoundingMode_NONE_getInstance()) : false) {
      throw ArithmeticException_init_$Create$('Scale of ' + toString(this.aj_1) + ' digits to the right of the decimal requires a RoundingMode that is not NONE.');
    }
    if (this.cj_1) {
      if (!this.bj_1 ? this.aj_1.v4(this.yi_1) >= 0 : false) {
        throw ArithmeticException_init_$Create$('Scale of ' + toString(this.aj_1) + ' digits to the right of the decimal must be less than precision ' + toString(this.yi_1) + '.');
      }
    }
  }
  protoOf(DecimalMode).toString = function () {
    return 'DecimalMode(decimalPrecision=' + toString(this.yi_1) + ', roundingMode=' + this.zi_1 + ', scale=' + toString(this.aj_1) + ')';
  };
  protoOf(DecimalMode).hashCode = function () {
    var result = this.yi_1.hashCode();
    result = imul(result, 31) + this.zi_1.hashCode() | 0;
    result = imul(result, 31) + this.aj_1.hashCode() | 0;
    return result;
  };
  protoOf(DecimalMode).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof DecimalMode))
      return false;
    var tmp0_other_with_cast = other instanceof DecimalMode ? other : THROW_CCE();
    if (!this.yi_1.equals(tmp0_other_with_cast.yi_1))
      return false;
    if (!this.zi_1.equals(tmp0_other_with_cast.zi_1))
      return false;
    if (!this.aj_1.equals(tmp0_other_with_cast.aj_1))
      return false;
    return true;
  };
  var RoundingMode_FLOOR_instance;
  var RoundingMode_CEILING_instance;
  var RoundingMode_AWAY_FROM_ZERO_instance;
  var RoundingMode_TOWARDS_ZERO_instance;
  var RoundingMode_NONE_instance;
  var RoundingMode_ROUND_HALF_AWAY_FROM_ZERO_instance;
  var RoundingMode_ROUND_HALF_TOWARDS_ZERO_instance;
  var RoundingMode_ROUND_HALF_CEILING_instance;
  var RoundingMode_ROUND_HALF_FLOOR_instance;
  var RoundingMode_entriesInitialized;
  function RoundingMode_initEntries() {
    if (RoundingMode_entriesInitialized)
      return Unit_getInstance();
    RoundingMode_entriesInitialized = true;
    RoundingMode_FLOOR_instance = new RoundingMode('FLOOR', 0);
    RoundingMode_CEILING_instance = new RoundingMode('CEILING', 1);
    RoundingMode_AWAY_FROM_ZERO_instance = new RoundingMode('AWAY_FROM_ZERO', 2);
    RoundingMode_TOWARDS_ZERO_instance = new RoundingMode('TOWARDS_ZERO', 3);
    RoundingMode_NONE_instance = new RoundingMode('NONE', 4);
    RoundingMode_ROUND_HALF_AWAY_FROM_ZERO_instance = new RoundingMode('ROUND_HALF_AWAY_FROM_ZERO', 5);
    RoundingMode_ROUND_HALF_TOWARDS_ZERO_instance = new RoundingMode('ROUND_HALF_TOWARDS_ZERO', 6);
    RoundingMode_ROUND_HALF_CEILING_instance = new RoundingMode('ROUND_HALF_CEILING', 7);
    RoundingMode_ROUND_HALF_FLOOR_instance = new RoundingMode('ROUND_HALF_FLOOR', 8);
  }
  function RoundingMode(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function RoundingMode_FLOOR_getInstance() {
    RoundingMode_initEntries();
    return RoundingMode_FLOOR_instance;
  }
  function RoundingMode_NONE_getInstance() {
    RoundingMode_initEntries();
    return RoundingMode_NONE_instance;
  }
  function RoundingMode_ROUND_HALF_AWAY_FROM_ZERO_getInstance() {
    RoundingMode_initEntries();
    return RoundingMode_ROUND_HALF_AWAY_FROM_ZERO_instance;
  }
  function BigInteger_init_$Init$(long, $this) {
    var tmp = Companion_getInstance_2().kj_1.fm(long);
    var tmp$ret$0;
    // Inline function 'com.ionspin.kotlin.bignum.integer.Companion.determinSignFromNumber' call
    Companion_getInstance_2();
    var tmp0_subject = getKClass(Long);
    var tmp_0;
    if (tmp0_subject.equals(getKClass(Long))) {
      if (!(long instanceof Long))
        THROW_CCE();
      tmp_0 = long.v4(new Long(0, 0)) < 0 ? Sign_NEGATIVE_getInstance() : long.v4(new Long(0, 0)) > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().zb())) {
      if (typeof long !== 'number')
        THROW_CCE();
      tmp_0 = long < 0 ? Sign_NEGATIVE_getInstance() : long > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().yb())) {
      if (typeof long !== 'number')
        THROW_CCE();
      tmp_0 = long < 0 ? Sign_NEGATIVE_getInstance() : long > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().xb())) {
      if (typeof long !== 'number')
        THROW_CCE();
      tmp_0 = long < 0 ? Sign_NEGATIVE_getInstance() : long > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else {
      throw RuntimeException_init_$Create$('Unsupported type ' + getKClass(Long));
    }
    tmp$ret$0 = tmp_0;
    BigInteger.call($this, tmp, tmp$ret$0);
    return $this;
  }
  function BigInteger_init_$Create$(long) {
    return BigInteger_init_$Init$(long, objectCreate(protoOf(BigInteger)));
  }
  function BigInteger_init_$Init$_0(int, $this) {
    var tmp = Companion_getInstance_2().kj_1.gm(int);
    var tmp$ret$0;
    // Inline function 'com.ionspin.kotlin.bignum.integer.Companion.determinSignFromNumber' call
    Companion_getInstance_2();
    var tmp0_subject = PrimitiveClasses_getInstance().zb();
    var tmp_0;
    if (tmp0_subject.equals(getKClass(Long))) {
      if (!(int instanceof Long))
        THROW_CCE();
      tmp_0 = int.v4(new Long(0, 0)) < 0 ? Sign_NEGATIVE_getInstance() : int.v4(new Long(0, 0)) > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().zb())) {
      if (typeof int !== 'number')
        THROW_CCE();
      tmp_0 = int < 0 ? Sign_NEGATIVE_getInstance() : int > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().yb())) {
      if (typeof int !== 'number')
        THROW_CCE();
      tmp_0 = int < 0 ? Sign_NEGATIVE_getInstance() : int > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().xb())) {
      if (typeof int !== 'number')
        THROW_CCE();
      tmp_0 = int < 0 ? Sign_NEGATIVE_getInstance() : int > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else {
      throw RuntimeException_init_$Create$('Unsupported type ' + PrimitiveClasses_getInstance().zb());
    }
    tmp$ret$0 = tmp_0;
    BigInteger.call($this, tmp, tmp$ret$0);
    return $this;
  }
  function BigInteger_init_$Create$_0(int) {
    return BigInteger_init_$Init$_0(int, objectCreate(protoOf(BigInteger)));
  }
  function BigInteger_init_$Init$_1(short, $this) {
    var tmp = Companion_getInstance_2().kj_1.hm(short);
    var tmp$ret$0;
    // Inline function 'com.ionspin.kotlin.bignum.integer.Companion.determinSignFromNumber' call
    Companion_getInstance_2();
    var tmp0_subject = PrimitiveClasses_getInstance().yb();
    var tmp_0;
    if (tmp0_subject.equals(getKClass(Long))) {
      if (!(short instanceof Long))
        THROW_CCE();
      tmp_0 = short.v4(new Long(0, 0)) < 0 ? Sign_NEGATIVE_getInstance() : short.v4(new Long(0, 0)) > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().zb())) {
      if (typeof short !== 'number')
        THROW_CCE();
      tmp_0 = short < 0 ? Sign_NEGATIVE_getInstance() : short > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().yb())) {
      if (typeof short !== 'number')
        THROW_CCE();
      tmp_0 = short < 0 ? Sign_NEGATIVE_getInstance() : short > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().xb())) {
      if (typeof short !== 'number')
        THROW_CCE();
      tmp_0 = short < 0 ? Sign_NEGATIVE_getInstance() : short > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else {
      throw RuntimeException_init_$Create$('Unsupported type ' + PrimitiveClasses_getInstance().yb());
    }
    tmp$ret$0 = tmp_0;
    BigInteger.call($this, tmp, tmp$ret$0);
    return $this;
  }
  function BigInteger_init_$Create$_1(short) {
    return BigInteger_init_$Init$_1(short, objectCreate(protoOf(BigInteger)));
  }
  function BigInteger_init_$Init$_2(byte, $this) {
    var tmp = Companion_getInstance_2().kj_1.im(byte);
    var tmp$ret$0;
    // Inline function 'com.ionspin.kotlin.bignum.integer.Companion.determinSignFromNumber' call
    Companion_getInstance_2();
    var tmp0_subject = PrimitiveClasses_getInstance().xb();
    var tmp_0;
    if (tmp0_subject.equals(getKClass(Long))) {
      if (!(byte instanceof Long))
        THROW_CCE();
      tmp_0 = byte.v4(new Long(0, 0)) < 0 ? Sign_NEGATIVE_getInstance() : byte.v4(new Long(0, 0)) > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().zb())) {
      if (typeof byte !== 'number')
        THROW_CCE();
      tmp_0 = byte < 0 ? Sign_NEGATIVE_getInstance() : byte > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().yb())) {
      if (typeof byte !== 'number')
        THROW_CCE();
      tmp_0 = byte < 0 ? Sign_NEGATIVE_getInstance() : byte > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().xb())) {
      if (typeof byte !== 'number')
        THROW_CCE();
      tmp_0 = byte < 0 ? Sign_NEGATIVE_getInstance() : byte > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else {
      throw RuntimeException_init_$Create$('Unsupported type ' + PrimitiveClasses_getInstance().xb());
    }
    tmp$ret$0 = tmp_0;
    BigInteger.call($this, tmp, tmp$ret$0);
    return $this;
  }
  function BigInteger_init_$Create$_2(byte) {
    return BigInteger_init_$Init$_2(byte, objectCreate(protoOf(BigInteger)));
  }
  function Companion_1() {
    Companion_instance_1 = this;
    this.kj_1 = get_chosenArithmetic();
    this.lj_1 = new BigInteger(this.kj_1.jm(), Sign_ZERO_getInstance());
    this.mj_1 = new BigInteger(this.kj_1.km(), Sign_POSITIVE_getInstance());
    this.nj_1 = new BigInteger(this.kj_1.lm(), Sign_POSITIVE_getInstance());
    this.oj_1 = new BigInteger(this.kj_1.mm(), Sign_POSITIVE_getInstance());
    var tmp = this;
    // Inline function 'kotlin.math.log10' call
    tmp.pj_1 = log10(2.0);
  }
  protoOf(Companion_1).el = function (string, base) {
    if (base < 2 ? true : base > 36) {
      throw NumberFormatException_init_$Create$('Unsupported base: ' + base + '. Supported base range is from 2 to 36');
    }
    var decimal = contains(string, _Char___init__impl__6a9atx(46));
    if (decimal) {
      var bigDecimal = Companion_getInstance_0().cl(string);
      var isActuallyDecimal = bigDecimal.vl(bigDecimal.xl()).uj(0) > 0;
      if (isActuallyDecimal) {
        throw NumberFormatException_init_$Create$('Supplied string is decimal, which cannot be converted to BigInteger without precision loss.');
      }
      return bigDecimal.yl();
    }
    var signed = charSequenceGet(string, 0) === _Char___init__impl__6a9atx(45) ? true : charSequenceGet(string, 0) === _Char___init__impl__6a9atx(43);
    var tmp;
    if (signed) {
      if (string.length === 1) {
        throw NumberFormatException_init_$Create$('Invalid big integer: ' + string);
      }
      var tmp_0;
      if (charSequenceGet(string, 0) === _Char___init__impl__6a9atx(45)) {
        tmp_0 = Sign_NEGATIVE_getInstance();
      } else {
        tmp_0 = Sign_POSITIVE_getInstance();
      }
      var isNegative = tmp_0;
      if (string.length === 2 ? charSequenceGet(string, 1) === _Char___init__impl__6a9atx(48) : false) {
        return this.lj_1;
      }
      var tmp$ret$1;
      // Inline function 'kotlin.text.substring' call
      var tmp0_substring = string.length;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = string.substring(1, tmp0_substring);
      tmp = new BigInteger(this.kj_1.nm(tmp$ret$1, base), isNegative);
    } else {
      if (string.length === 1 ? charSequenceGet(string, 0) === _Char___init__impl__6a9atx(48) : false) {
        return this.lj_1;
      }
      tmp = new BigInteger(this.kj_1.nm(string, base), Sign_POSITIVE_getInstance());
    }
    return tmp;
  };
  protoOf(Companion_1).om = function (uLong) {
    return new BigInteger(this.kj_1.pm(uLong), Sign_POSITIVE_getInstance());
  };
  protoOf(Companion_1).qm = function (uInt) {
    return new BigInteger(this.kj_1.rm(uInt), Sign_POSITIVE_getInstance());
  };
  protoOf(Companion_1).sm = function (uShort) {
    return new BigInteger(this.kj_1.tm(uShort), Sign_POSITIVE_getInstance());
  };
  protoOf(Companion_1).um = function (uByte) {
    return new BigInteger(this.kj_1.vm(uByte), Sign_POSITIVE_getInstance());
  };
  protoOf(Companion_1).ai = function (long) {
    return BigInteger_init_$Create$(long);
  };
  protoOf(Companion_1).bi = function (int) {
    return BigInteger_init_$Create$_0(int);
  };
  protoOf(Companion_1).wk = function (short) {
    return BigInteger_init_$Create$_1(short);
  };
  protoOf(Companion_1).yk = function (byte) {
    return BigInteger_init_$Create$_2(byte);
  };
  protoOf(Companion_1).ci = function (float, exactRequired) {
    // Inline function 'kotlin.math.floor' call
    var floatDecimalPart = float - Math.floor(float);
    var tmp = Companion_getInstance_0();
    var tmp$ret$1;
    // Inline function 'kotlin.math.floor' call
    tmp$ret$1 = Math.floor(float);
    var bigDecimal = tmp.zk(tmp$ret$1, null);
    if (exactRequired) {
      if (floatDecimalPart > 0) {
        throw ArithmeticException_init_$Create$('Cant create BigInteger without precision loss, and exact  value was required');
      }
    }
    return bigDecimal.yl();
  };
  protoOf(Companion_1).ei = function (double, exactRequired) {
    // Inline function 'kotlin.math.floor' call
    var doubleDecimalPart = double - Math.floor(double);
    var tmp = Companion_getInstance_0();
    var tmp$ret$1;
    // Inline function 'kotlin.math.floor' call
    tmp$ret$1 = Math.floor(double);
    var bigDecimal = tmp.bl(tmp$ret$1, null);
    if (exactRequired) {
      if (doubleDecimalPart > 0.0) {
        throw ArithmeticException_init_$Create$('Cant create BigInteger without precision loss, and exact  value was required');
      }
    }
    return bigDecimal.yl();
  };
  var Companion_instance_1;
  function Companion_getInstance_2() {
    if (Companion_instance_1 == null)
      new Companion_1();
    return Companion_instance_1;
  }
  function isResultZero($this, resultMagnitude) {
    return Companion_getInstance_2().kj_1.wm(resultMagnitude, Companion_getInstance_2().kj_1.jm()) === 0;
  }
  function javascriptNumberComparison_0($this, number) {
    var float = numberToDouble(number);
    var tmp;
    if (float % 1 === 0.0) {
      tmp = $this.zl(Companion_getInstance_2().ai(numberToLong(number)));
    } else {
      var tmp_0 = numberToDouble(number);
      tmp = $this.xm(tmp_0, BigInteger$javascriptNumberComparison$lambda($this));
    }
    return tmp;
  }
  function QuotientAndRemainder(quotient, remainder) {
    this.ij_1 = quotient;
    this.jj_1 = remainder;
  }
  protoOf(QuotientAndRemainder).toString = function () {
    return 'QuotientAndRemainder(quotient=' + this.ij_1 + ', remainder=' + this.jj_1 + ')';
  };
  protoOf(QuotientAndRemainder).hashCode = function () {
    var result = this.ij_1.hashCode();
    result = imul(result, 31) + this.jj_1.hashCode() | 0;
    return result;
  };
  protoOf(QuotientAndRemainder).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof QuotientAndRemainder))
      return false;
    var tmp0_other_with_cast = other instanceof QuotientAndRemainder ? other : THROW_CCE();
    if (!this.ij_1.equals(tmp0_other_with_cast.ij_1))
      return false;
    if (!this.jj_1.equals(tmp0_other_with_cast.jj_1))
      return false;
    return true;
  };
  function BigInteger$compareTo$lambda(this$0) {
    return function (it) {
      return this$0.zl(it);
    };
  }
  function BigInteger$compareTo$lambda_0(this$0) {
    return function (it) {
      return this$0.zl(it);
    };
  }
  function BigInteger$javascriptNumberComparison$lambda(this$0) {
    return function (it) {
      return this$0.zl(it);
    };
  }
  function BigInteger(wordArray, requestedSign) {
    Companion_getInstance_2();
    if (requestedSign.equals(Sign_ZERO_getInstance())) {
      // Inline function 'kotlin.require' call
      // Inline function 'kotlin.contracts.contract' call
      if (!isResultZero(this, wordArray)) {
        // Inline function 'com.ionspin.kotlin.bignum.integer.BigInteger.<anonymous>' call
        var message = 'sign should be Sign.ZERO iff magnitude has a value of 0';
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    this.dj_1 = BigInteger63Arithmetic_getInstance().qn(wordArray);
    var tmp = this;
    var tmp_0;
    if (isResultZero(this, this.dj_1)) {
      tmp_0 = Sign_ZERO_getInstance();
    } else {
      tmp_0 = requestedSign;
    }
    tmp.ej_1 = tmp_0;
    this.fj_1 = _ULongArray___get_size__impl__ju6dtr(this.dj_1);
    this.gj_1 = null;
  }
  protoOf(BigInteger).oi = function () {
    return Companion_getInstance_2();
  };
  protoOf(BigInteger).pi = function () {
    return this;
  };
  protoOf(BigInteger).rn = function (other) {
    var comparison = Companion_getInstance_2().kj_1.wm(this.dj_1, other.dj_1);
    var tmp;
    if (other.ej_1.equals(this.ej_1)) {
      return new BigInteger(Companion_getInstance_2().kj_1.tn(this.dj_1, other.dj_1), this.ej_1);
    } else {
      var tmp_0;
      if (comparison > 0) {
        tmp_0 = new BigInteger(Companion_getInstance_2().kj_1.sn(this.dj_1, other.dj_1), this.ej_1);
      } else if (comparison < 0) {
        tmp_0 = new BigInteger(Companion_getInstance_2().kj_1.sn(other.dj_1, this.dj_1), other.ej_1);
      } else {
        tmp_0 = Companion_getInstance_2().lj_1;
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  protoOf(BigInteger).gi = function (other) {
    return this.rn(other instanceof BigInteger ? other : THROW_CCE());
  };
  protoOf(BigInteger).un = function (other) {
    var comparison = Companion_getInstance_2().kj_1.wm(this.dj_1, other.dj_1);
    if (this.equals(Companion_getInstance_2().lj_1)) {
      return other.fl();
    }
    if (other.equals(Companion_getInstance_2().lj_1)) {
      return this;
    }
    var tmp;
    if (other.ej_1.equals(this.ej_1)) {
      var tmp_0;
      if (comparison > 0) {
        tmp_0 = new BigInteger(Companion_getInstance_2().kj_1.sn(this.dj_1, other.dj_1), this.ej_1);
      } else if (comparison < 0) {
        tmp_0 = new BigInteger(Companion_getInstance_2().kj_1.sn(other.dj_1, this.dj_1), this.ej_1.xn());
      } else {
        tmp_0 = Companion_getInstance_2().lj_1;
      }
      tmp = tmp_0;
    } else {
      return new BigInteger(Companion_getInstance_2().kj_1.tn(this.dj_1, other.dj_1), this.ej_1);
    }
    return tmp;
  };
  protoOf(BigInteger).hi = function (other) {
    return this.un(other instanceof BigInteger ? other : THROW_CCE());
  };
  protoOf(BigInteger).yn = function (other) {
    if (this.tj() ? true : other.tj()) {
      return Companion_getInstance_2().lj_1;
    }
    if (other.equals(Companion_getInstance_2().mj_1)) {
      return this;
    }
    var tmp;
    if (!this.ej_1.equals(other.ej_1)) {
      tmp = Sign_NEGATIVE_getInstance();
    } else {
      tmp = Sign_POSITIVE_getInstance();
    }
    var sign = tmp;
    var tmp_0;
    if (sign.equals(Sign_POSITIVE_getInstance())) {
      tmp_0 = new BigInteger(Companion_getInstance_2().kj_1.zn(this.dj_1, other.dj_1), sign);
    } else {
      tmp_0 = new BigInteger(Companion_getInstance_2().kj_1.zn(this.dj_1, other.dj_1), sign);
    }
    return tmp_0;
  };
  protoOf(BigInteger).ii = function (other) {
    return this.yn(other instanceof BigInteger ? other : THROW_CCE());
  };
  protoOf(BigInteger).ao = function (other) {
    if (other.tj()) {
      throw ArithmeticException_init_$Create$('Division by zero! ' + this + ' / ' + other);
    }
    var result = Companion_getInstance_2().kj_1.bo(this.dj_1, other.dj_1).x3_1.t6_1;
    var tmp;
    if (equals(result, Companion_getInstance_2().kj_1.jm())) {
      tmp = Companion_getInstance_2().lj_1;
    } else {
      var tmp_0;
      if (!this.ej_1.equals(other.ej_1)) {
        tmp_0 = Sign_NEGATIVE_getInstance();
      } else {
        tmp_0 = Sign_POSITIVE_getInstance();
      }
      var sign = tmp_0;
      tmp = new BigInteger(result, sign);
    }
    return tmp;
  };
  protoOf(BigInteger).ji = function (other) {
    return this.ao(other instanceof BigInteger ? other : THROW_CCE());
  };
  protoOf(BigInteger).co = function (other) {
    if (other.tj()) {
      throw ArithmeticException_init_$Create$('Division by zero! ' + this + ' / ' + other);
    }
    var tmp;
    if (!this.ej_1.equals(other.ej_1)) {
      tmp = Sign_NEGATIVE_getInstance();
    } else {
      tmp = Sign_POSITIVE_getInstance();
    }
    var sign = tmp;
    var result = Companion_getInstance_2().kj_1.bo(this.dj_1, other.dj_1).y3_1.t6_1;
    if (equals(result, Companion_getInstance_2().kj_1.jm())) {
      sign = Sign_ZERO_getInstance();
    }
    return new BigInteger(result, sign);
  };
  protoOf(BigInteger).ki = function (other) {
    return this.co(other instanceof BigInteger ? other : THROW_CCE());
  };
  protoOf(BigInteger).do = function (other) {
    if (other.tj()) {
      throw ArithmeticException_init_$Create$('Division by zero! ' + this + ' / ' + other);
    }
    var tmp;
    if (!this.ej_1.equals(other.ej_1)) {
      tmp = Sign_NEGATIVE_getInstance();
    } else {
      tmp = Sign_POSITIVE_getInstance();
    }
    var sign = tmp;
    var result = Companion_getInstance_2().kj_1.bo(this.dj_1, other.dj_1);
    var tmp_0;
    if (equals(result.x3_1, new ULongArray(Companion_getInstance_2().kj_1.jm()))) {
      tmp_0 = Companion_getInstance_2().lj_1;
    } else {
      tmp_0 = new BigInteger(result.x3_1.t6_1, sign);
    }
    var quotient = tmp_0;
    var tmp_1;
    if (equals(result.y3_1, new ULongArray(Companion_getInstance_2().kj_1.jm()))) {
      tmp_1 = Companion_getInstance_2().lj_1;
    } else {
      tmp_1 = new BigInteger(result.y3_1.t6_1, this.ej_1);
    }
    var remainder = tmp_1;
    return new Pair(quotient, remainder);
  };
  protoOf(BigInteger).zl = function (other) {
    if (this.tj() ? other.tj() : false)
      return 0;
    if (other.tj() ? this.ej_1.equals(Sign_POSITIVE_getInstance()) : false)
      return 1;
    if (other.tj() ? this.ej_1.equals(Sign_NEGATIVE_getInstance()) : false)
      return -1;
    if (this.tj() ? other.ej_1.equals(Sign_POSITIVE_getInstance()) : false)
      return -1;
    if (this.tj() ? other.ej_1.equals(Sign_NEGATIVE_getInstance()) : false)
      return 1;
    if (!this.ej_1.equals(other.ej_1))
      return this.ej_1.equals(Sign_POSITIVE_getInstance()) ? 1 : -1;
    var result = Companion_getInstance_2().kj_1.wm(this.dj_1, other.dj_1);
    var tmp;
    if (this.ej_1.equals(Sign_NEGATIVE_getInstance()) ? other.ej_1.equals(Sign_NEGATIVE_getInstance()) : false) {
      tmp = imul(result, -1);
    } else {
      tmp = result;
    }
    return tmp;
  };
  protoOf(BigInteger).tj = function () {
    return this.ej_1.equals(Sign_ZERO_getInstance()) ? true : get_chosenArithmetic().wm(this.dj_1, get_chosenArithmetic().jm()) === 0;
  };
  protoOf(BigInteger).fl = function () {
    return new BigInteger(this.dj_1, this.ej_1.xn());
  };
  protoOf(BigInteger).sj = function () {
    return new BigInteger(this.dj_1, Sign_POSITIVE_getInstance());
  };
  protoOf(BigInteger).qj = function (exponent) {
    if (exponent.v4(new Long(0, 0)) < 0) {
      throw ArithmeticException_init_$Create$('Negative exponent not supported with BigInteger');
    }
    var tmp;
    if (this.equals(Companion_getInstance_2().lj_1)) {
      tmp = Companion_getInstance_2().lj_1;
    } else if (this.equals(Companion_getInstance_2().mj_1)) {
      tmp = Companion_getInstance_2().mj_1;
    } else {
      var tmp_0;
      if (this.ej_1.equals(Sign_NEGATIVE_getInstance())) {
        var tmp_1;
        // Inline function 'kotlin.Long.rem' call
        if (exponent.c7(new Long(2, 0)).equals(new Long(0, 0))) {
          tmp_1 = Sign_POSITIVE_getInstance();
        } else {
          tmp_1 = Sign_NEGATIVE_getInstance();
        }
        tmp_0 = tmp_1;
      } else {
        tmp_0 = Sign_POSITIVE_getInstance();
      }
      var sign = tmp_0;
      tmp = new BigInteger(Companion_getInstance_2().kj_1.eo(this.dj_1, exponent), sign);
    }
    return tmp;
  };
  protoOf(BigInteger).fo = function (exponent) {
    return this.qj(toLong(exponent));
  };
  protoOf(BigInteger).li = function () {
    var tmp;
    switch (this.ej_1.m1_1) {
      case 0:
        tmp = 1;
        break;
      case 1:
        tmp = -1;
        break;
      case 2:
        tmp = 0;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  protoOf(BigInteger).hj = function () {
    var bitLenght = Companion_getInstance_2().kj_1.go(this.dj_1);
    // Inline function 'kotlin.math.ceil' call
    var tmp0_ceil = (bitLenght - 1 | 0) * Companion_getInstance_2().pj_1;
    var minDigit = Math.ceil(tmp0_ceil);
    var tmp = this.ti(toBigInteger(10).fo(numberToInt(minDigit)));
    var counter = new Long(0, 0);
    while (!(tmp.uj(0) === 0)) {
      tmp = tmp.xi(10);
      counter = counter.qe();
    }
    // Inline function 'kotlin.Long.plus' call
    var tmp1_plus = counter;
    var tmp2_plus = numberToInt(minDigit);
    return tmp1_plus.x4(toLong(tmp2_plus));
  };
  protoOf(BigInteger).t4 = function () {
    return this.fl();
  };
  protoOf(BigInteger).re = function () {
    return this.ri(Companion_getInstance_2().mj_1);
  };
  protoOf(BigInteger).qe = function () {
    return this.qi(Companion_getInstance_2().mj_1);
  };
  protoOf(BigInteger).rj = function (other) {
    var result = this.do(other);
    return new QuotientAndRemainder(result.x3_1, result.y3_1);
  };
  protoOf(BigInteger).uj = function (other) {
    if (isNumber(other)) {
      if (ComparisonWorkaround_getInstance().am(other)) {
        return javascriptNumberComparison_0(this, other);
      }
    }
    var tmp;
    if (other instanceof BigInteger) {
      tmp = this.zl(other);
    } else {
      if (other instanceof Long) {
        tmp = this.zl(Companion_getInstance_2().ai(other));
      } else {
        if (typeof other === 'number') {
          tmp = this.zl(Companion_getInstance_2().bi(other));
        } else {
          if (typeof other === 'number') {
            tmp = this.zl(Companion_getInstance_2().wk(other));
          } else {
            if (typeof other === 'number') {
              tmp = this.zl(Companion_getInstance_2().yk(other));
            } else {
              if (other instanceof ULong) {
                tmp = this.zl(Companion_getInstance_2().om(other.f1_1));
              } else {
                if (other instanceof UInt) {
                  tmp = this.zl(Companion_getInstance_2().qm(other.d6_1));
                } else {
                  if (other instanceof UShort) {
                    tmp = this.zl(Companion_getInstance_2().sm(other.z6_1));
                  } else {
                    if (other instanceof UByte) {
                      tmp = this.zl(Companion_getInstance_2().um(other.w5_1));
                    } else {
                      if (typeof other === 'number') {
                        tmp = this.xm(other, BigInteger$compareTo$lambda(this));
                      } else {
                        if (typeof other === 'number') {
                          tmp = this.ho(other, BigInteger$compareTo$lambda_0(this));
                        } else {
                          throw RuntimeException_init_$Create$('Invalid comparison type for BigInteger: ' + getKClassFromExpression(other));
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return tmp;
  };
  protoOf(BigInteger).y5 = function (other) {
    return this.uj(isObject(other) ? other : THROW_CCE());
  };
  protoOf(BigInteger).xm = function (float, comparisonBlock) {
    // Inline function 'kotlin.math.floor' call
    var withoutDecimalPart = Math.floor(float);
    var hasDecimalPart = !(float % 1 === 0.0);
    var tmp;
    if (hasDecimalPart) {
      var comparisonResult = comparisonBlock(Companion_getInstance_2().di(withoutDecimalPart + 1));
      var tmp_0;
      if (comparisonResult === 0) {
        tmp_0 = 1;
      } else {
        tmp_0 = comparisonResult;
      }
      tmp = tmp_0;
    } else {
      tmp = comparisonBlock(Companion_getInstance_2().di(withoutDecimalPart));
    }
    return tmp;
  };
  protoOf(BigInteger).ho = function (double, comparisonBlock) {
    // Inline function 'kotlin.math.floor' call
    var withoutDecimalPart = Math.floor(double);
    var hasDecimalPart = !(double % 1 === 0.0);
    var tmp;
    if (hasDecimalPart) {
      var comparisonResult = comparisonBlock(Companion_getInstance_2().fi(withoutDecimalPart + 1));
      var tmp_0;
      if (comparisonResult === 0) {
        tmp_0 = 1;
      } else {
        tmp_0 = comparisonResult;
      }
      tmp = tmp_0;
    } else {
      tmp = comparisonBlock(Companion_getInstance_2().fi(withoutDecimalPart));
    }
    return tmp;
  };
  protoOf(BigInteger).equals = function (other) {
    var tmp;
    if (other instanceof BigInteger) {
      tmp = this.zl(other);
    } else {
      if (other instanceof Long) {
        tmp = this.zl(Companion_getInstance_2().ai(other));
      } else {
        if (!(other == null) ? typeof other === 'number' : false) {
          tmp = this.zl(Companion_getInstance_2().bi(other));
        } else {
          if (!(other == null) ? typeof other === 'number' : false) {
            tmp = this.zl(Companion_getInstance_2().wk(other));
          } else {
            if (!(other == null) ? typeof other === 'number' : false) {
              tmp = this.zl(Companion_getInstance_2().yk(other));
            } else {
              if (other instanceof ULong) {
                tmp = this.zl(Companion_getInstance_2().om(other.f1_1));
              } else {
                if (other instanceof UInt) {
                  tmp = this.zl(Companion_getInstance_2().qm(other.d6_1));
                } else {
                  if (other instanceof UShort) {
                    tmp = this.zl(Companion_getInstance_2().sm(other.z6_1));
                  } else {
                    if (other instanceof UByte) {
                      tmp = this.zl(Companion_getInstance_2().um(other.w5_1));
                    } else {
                      tmp = -1;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    var comparison = tmp;
    return comparison === 0;
  };
  protoOf(BigInteger).hashCode = function () {
    return ULongArray__hashCode_impl_aze4wa(this.dj_1) + this.ej_1.hashCode() | 0;
  };
  protoOf(BigInteger).toString = function () {
    return this.cm(10);
  };
  protoOf(BigInteger).cm = function (base) {
    var tmp;
    if (this.ej_1.equals(Sign_NEGATIVE_getInstance())) {
      tmp = '-';
    } else {
      tmp = '';
    }
    var sign = tmp;
    return sign + this.dm(base);
  };
  protoOf(BigInteger).dm = function (base) {
    return Companion_getInstance_2().kj_1.io(this.dj_1, base);
  };
  var Sign_POSITIVE_instance;
  var Sign_NEGATIVE_instance;
  var Sign_ZERO_instance;
  var Sign_entriesInitialized;
  function Sign_initEntries() {
    if (Sign_entriesInitialized)
      return Unit_getInstance();
    Sign_entriesInitialized = true;
    Sign_POSITIVE_instance = new Sign('POSITIVE', 0);
    Sign_NEGATIVE_instance = new Sign('NEGATIVE', 1);
    Sign_ZERO_instance = new Sign('ZERO', 2);
  }
  function Sign(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  protoOf(Sign).xn = function () {
    var tmp;
    switch (this.m1_1) {
      case 0:
        tmp = Sign_NEGATIVE_getInstance();
        break;
      case 1:
        tmp = Sign_POSITIVE_getInstance();
        break;
      case 2:
        tmp = Sign_ZERO_getInstance();
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  function Sign_POSITIVE_getInstance() {
    Sign_initEntries();
    return Sign_POSITIVE_instance;
  }
  function Sign_NEGATIVE_getInstance() {
    Sign_initEntries();
    return Sign_NEGATIVE_instance;
  }
  function Sign_ZERO_getInstance() {
    Sign_initEntries();
    return Sign_ZERO_instance;
  }
  function toBigInteger(_this__u8e3s4) {
    return Companion_getInstance_2().bi(_this__u8e3s4);
  }
  function get_chosenArithmetic() {
    _init_properties_Configuration_kt__48zwcc();
    return chosenArithmetic;
  }
  var chosenArithmetic;
  var properties_initialized_Configuration_kt_gex7mu;
  function _init_properties_Configuration_kt__48zwcc() {
    if (!properties_initialized_Configuration_kt_gex7mu) {
      properties_initialized_Configuration_kt_gex7mu = true;
      chosenArithmetic = BigInteger63Arithmetic_getInstance();
    }
  }
  function Sextuple(a, b, c, d, e, f) {
    this.jo_1 = a;
    this.ko_1 = b;
    this.lo_1 = c;
    this.mo_1 = d;
    this.no_1 = e;
    this.oo_1 = f;
  }
  protoOf(Sextuple).j3 = function () {
    return this.jo_1;
  };
  protoOf(Sextuple).k3 = function () {
    return this.ko_1;
  };
  protoOf(Sextuple).r5 = function () {
    return this.lo_1;
  };
  protoOf(Sextuple).po = function () {
    return this.mo_1;
  };
  protoOf(Sextuple).qo = function () {
    return this.no_1;
  };
  protoOf(Sextuple).ro = function () {
    return this.oo_1;
  };
  protoOf(Sextuple).toString = function () {
    return 'Sextuple(a=' + this.jo_1 + ', b=' + this.ko_1 + ', c=' + this.lo_1 + ', d=' + this.mo_1 + ', e=' + this.no_1 + ', f=' + this.oo_1 + ')';
  };
  protoOf(Sextuple).hashCode = function () {
    var result = this.jo_1 == null ? 0 : hashCode(this.jo_1);
    result = imul(result, 31) + (this.ko_1 == null ? 0 : hashCode(this.ko_1)) | 0;
    result = imul(result, 31) + (this.lo_1 == null ? 0 : hashCode(this.lo_1)) | 0;
    result = imul(result, 31) + (this.mo_1 == null ? 0 : hashCode(this.mo_1)) | 0;
    result = imul(result, 31) + (this.no_1 == null ? 0 : hashCode(this.no_1)) | 0;
    result = imul(result, 31) + (this.oo_1 == null ? 0 : hashCode(this.oo_1)) | 0;
    return result;
  };
  protoOf(Sextuple).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Sextuple))
      return false;
    var tmp0_other_with_cast = other instanceof Sextuple ? other : THROW_CCE();
    if (!equals(this.jo_1, tmp0_other_with_cast.jo_1))
      return false;
    if (!equals(this.ko_1, tmp0_other_with_cast.ko_1))
      return false;
    if (!equals(this.lo_1, tmp0_other_with_cast.lo_1))
      return false;
    if (!equals(this.mo_1, tmp0_other_with_cast.mo_1))
      return false;
    if (!equals(this.no_1, tmp0_other_with_cast.no_1))
      return false;
    if (!equals(this.oo_1, tmp0_other_with_cast.oo_1))
      return false;
    return true;
  };
  function Quadruple(a, b, c, d) {
    this.so_1 = a;
    this.to_1 = b;
    this.uo_1 = c;
    this.vo_1 = d;
  }
  protoOf(Quadruple).j3 = function () {
    return this.so_1;
  };
  protoOf(Quadruple).k3 = function () {
    return this.to_1;
  };
  protoOf(Quadruple).r5 = function () {
    return this.uo_1;
  };
  protoOf(Quadruple).po = function () {
    return this.vo_1;
  };
  protoOf(Quadruple).toString = function () {
    return 'Quadruple(a=' + this.so_1 + ', b=' + this.to_1 + ', c=' + this.uo_1 + ', d=' + this.vo_1 + ')';
  };
  protoOf(Quadruple).hashCode = function () {
    var result = this.so_1 == null ? 0 : hashCode(this.so_1);
    result = imul(result, 31) + (this.to_1 == null ? 0 : hashCode(this.to_1)) | 0;
    result = imul(result, 31) + (this.uo_1 == null ? 0 : hashCode(this.uo_1)) | 0;
    result = imul(result, 31) + (this.vo_1 == null ? 0 : hashCode(this.vo_1)) | 0;
    return result;
  };
  protoOf(Quadruple).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Quadruple))
      return false;
    var tmp0_other_with_cast = other instanceof Quadruple ? other : THROW_CCE();
    if (!equals(this.so_1, tmp0_other_with_cast.so_1))
      return false;
    if (!equals(this.to_1, tmp0_other_with_cast.to_1))
      return false;
    if (!equals(this.uo_1, tmp0_other_with_cast.uo_1))
      return false;
    if (!equals(this.vo_1, tmp0_other_with_cast.vo_1))
      return false;
    return true;
  };
  function SignedUIntArray(unsignedValue, sign) {
    this.wo_1 = unsignedValue;
    this.xo_1 = sign;
  }
  protoOf(SignedUIntArray).toString = function () {
    return 'SignedUIntArray(unsignedValue=' + new UIntArray(this.wo_1) + ', sign=' + this.xo_1 + ')';
  };
  protoOf(SignedUIntArray).hashCode = function () {
    var result = UIntArray__hashCode_impl_hr7ost(this.wo_1);
    result = imul(result, 31) + (this.xo_1 | 0) | 0;
    return result;
  };
  protoOf(SignedUIntArray).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SignedUIntArray))
      return false;
    var tmp0_other_with_cast = other instanceof SignedUIntArray ? other : THROW_CCE();
    if (!equals(this.wo_1, tmp0_other_with_cast.wo_1))
      return false;
    if (!(this.xo_1 === tmp0_other_with_cast.xo_1))
      return false;
    return true;
  };
  function BigInteger32Arithmetic() {
    BigInteger32Arithmetic_instance = this;
    var tmp = this;
    // Inline function 'kotlin.intArrayOf' call
    tmp.yo_1 = new Int32Array([]);
    this.zo_1 = _ULong___init__impl__c78o9k(new Long(-1, 0));
    this.ap_1 = _UInt___init__impl__l7qpdl(-1);
    this.bp_1 = _ULong___init__impl__c78o9k(new Long(0, 1));
    this.cp_1 = _ULong___init__impl__c78o9k(new Long(65535, 0));
    this.dp_1 = _UInt___init__impl__l7qpdl(-1);
    this.ep_1 = 32;
    this.fp_1 = 32;
    this.gp_1 = _UIntArray___init__impl__ghjpc6(0);
    var tmp_0 = this;
    // Inline function 'kotlin.UIntArray' call
    var tmp_1 = 0;
    var tmp_2 = new Int32Array(1);
    while (tmp_1 < 1) {
      var tmp_3 = tmp_1;
      // Inline function 'kotlin.UInt.toInt' call
      // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.ONE.<anonymous>' call
      var tmp0_toInt = _UInt___init__impl__l7qpdl(1);
      tmp_2[tmp_3] = _UInt___get_data__impl__f0vqqw(tmp0_toInt);
      tmp_1 = tmp_1 + 1 | 0;
    }
    tmp_0.hp_1 = _UIntArray___init__impl__ghjpc6_0(tmp_2);
    var tmp_4 = this;
    // Inline function 'kotlin.UIntArray' call
    var tmp_5 = 0;
    var tmp_6 = new Int32Array(1);
    while (tmp_5 < 1) {
      var tmp_7 = tmp_5;
      // Inline function 'kotlin.UInt.toInt' call
      // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.TWO.<anonymous>' call
      var tmp0_toInt_0 = _UInt___init__impl__l7qpdl(2);
      tmp_6[tmp_7] = _UInt___get_data__impl__f0vqqw(tmp0_toInt_0);
      tmp_5 = tmp_5 + 1 | 0;
    }
    tmp_4.ip_1 = _UIntArray___init__impl__ghjpc6_0(tmp_6);
    var tmp_8 = this;
    // Inline function 'kotlin.UIntArray' call
    var tmp_9 = 0;
    var tmp_10 = new Int32Array(1);
    while (tmp_9 < 1) {
      var tmp_11 = tmp_9;
      // Inline function 'kotlin.UInt.toInt' call
      // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.TEN.<anonymous>' call
      var tmp0_toInt_1 = _UInt___init__impl__l7qpdl(10);
      tmp_10[tmp_11] = _UInt___get_data__impl__f0vqqw(tmp0_toInt_1);
      tmp_9 = tmp_9 + 1 | 0;
    }
    tmp_8.jp_1 = _UIntArray___init__impl__ghjpc6_0(tmp_10);
    this.kp_1 = 60;
    this.lp_1 = 15000;
    this.mp_1 = new SignedUIntArray(this.ip_1, true);
  }
  protoOf(BigInteger32Arithmetic).np = function (value) {
    var x = value;
    var y;
    var n = this.ep_1;
    // Inline function 'kotlin.UInt.shr' call
    var tmp0_shr = x;
    y = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp0_shr) >>> 16 | 0);
    if (!(y === _UInt___init__impl__l7qpdl(0))) {
      n = n - 16 | 0;
      x = y;
    }
    // Inline function 'kotlin.UInt.shr' call
    var tmp1_shr = x;
    y = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp1_shr) >>> 8 | 0);
    if (!(y === _UInt___init__impl__l7qpdl(0))) {
      n = n - 8 | 0;
      x = y;
    }
    // Inline function 'kotlin.UInt.shr' call
    var tmp2_shr = x;
    y = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp2_shr) >>> 4 | 0);
    if (!(y === _UInt___init__impl__l7qpdl(0))) {
      n = n - 4 | 0;
      x = y;
    }
    // Inline function 'kotlin.UInt.shr' call
    var tmp3_shr = x;
    y = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp3_shr) >>> 2 | 0);
    if (!(y === _UInt___init__impl__l7qpdl(0))) {
      n = n - 2 | 0;
      x = y;
    }
    // Inline function 'kotlin.UInt.shr' call
    var tmp4_shr = x;
    y = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp4_shr) >>> 1 | 0);
    if (!(y === _UInt___init__impl__l7qpdl(0))) {
      return n - 2 | 0;
    }
    var tmp = n;
    // Inline function 'kotlin.UInt.toInt' call
    var tmp5_toInt = x;
    return tmp - _UInt___get_data__impl__f0vqqw(tmp5_toInt) | 0;
  };
  protoOf(BigInteger32Arithmetic).op = function (value) {
    if (UIntArray__isEmpty_impl_vd8j4n(value)) {
      return 0;
    }
    var mostSignificant = UIntArray__get_impl_gp5kza(value, _UIntArray___get_size__impl__r6l8ci(value) - 1 | 0);
    return this.pp(mostSignificant) + imul(_UIntArray___get_size__impl__r6l8ci(value) - 1 | 0, this.ep_1) | 0;
  };
  protoOf(BigInteger32Arithmetic).pp = function (value) {
    return this.ep_1 - this.np(value) | 0;
  };
  protoOf(BigInteger32Arithmetic).qp = function (bigInteger) {
    // Inline function 'kotlin.collections.indexOfLast' call
    var tmp$ret$3;
    $l$block: {
      // Inline function 'kotlin.collections.indexOfLast' call
      var tmp0_indexOfLast = _UIntArray___get_storage__impl__92a0v0(bigInteger);
      var inductionVariable = tmp0_indexOfLast.length - 1 | 0;
      if (0 <= inductionVariable)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + -1 | 0;
          // Inline function 'kotlin.collections.indexOfLast.<anonymous>' call
          var tmp1_anonymous = tmp0_indexOfLast[index];
          // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.removeLeadingZeros.<anonymous>' call
          // Inline function 'kotlin.toUInt' call
          if (!(_UInt___init__impl__l7qpdl(tmp1_anonymous) === _UInt___init__impl__l7qpdl(0))) {
            tmp$ret$3 = index;
            break $l$block;
          }
        }
         while (0 <= inductionVariable);
      tmp$ret$3 = -1;
    }
    var firstEmpty = tmp$ret$3 + 1 | 0;
    if (firstEmpty === -1 ? true : firstEmpty === 0) {
      return this.gp_1;
    }
    // Inline function 'kotlin.collections.copyOfRange' call
    return _UIntArray___init__impl__ghjpc6_0(copyOfRange(_UIntArray___get_storage__impl__92a0v0(bigInteger), 0, firstEmpty));
  };
  protoOf(BigInteger32Arithmetic).rp = function (bigInteger) {
    var lastNonEmptyIndex = _UIntArray___get_size__impl__r6l8ci(bigInteger) - 1 | 0;
    if (lastNonEmptyIndex <= 0) {
      return 0;
    }
    var element = UIntArray__get_impl_gp5kza(bigInteger, lastNonEmptyIndex);
    while (element === _UInt___init__impl__l7qpdl(0) ? lastNonEmptyIndex > 0 : false) {
      lastNonEmptyIndex = lastNonEmptyIndex - 1 | 0;
      element = UIntArray__get_impl_gp5kza(bigInteger, lastNonEmptyIndex);
    }
    if (UIntArray__get_impl_gp5kza(bigInteger, lastNonEmptyIndex) === _UInt___init__impl__l7qpdl(0)) {
      lastNonEmptyIndex = lastNonEmptyIndex - 1 | 0;
    }
    return (_UIntArray___get_size__impl__r6l8ci(bigInteger) - lastNonEmptyIndex | 0) - 1 | 0;
  };
  protoOf(BigInteger32Arithmetic).sp = function (operand, places) {
    if (UIntArray__isEmpty_impl_vd8j4n(operand) ? true : places === 0) {
      return operand;
    }
    var originalSize = _UIntArray___get_size__impl__r6l8ci(operand);
    var leadingZeros = this.np(UIntArray__get_impl_gp5kza(operand, _UIntArray___get_size__impl__r6l8ci(operand) - 1 | 0));
    var shiftWords = places / this.ep_1 | 0;
    var shiftBits = places % this.ep_1 | 0;
    var tmp;
    if (shiftBits > leadingZeros) {
      tmp = shiftWords + 1 | 0;
    } else {
      tmp = shiftWords;
    }
    var wordsNeeded = tmp;
    if (shiftBits === 0) {
      // Inline function 'kotlin.UIntArray' call
      var tmp_0 = 0;
      var tmp_1 = _UIntArray___get_size__impl__r6l8ci(operand) + wordsNeeded | 0;
      var tmp_2 = new Int32Array(tmp_1);
      while (tmp_0 < tmp_1) {
        var tmp_3 = tmp_0;
        // Inline function 'kotlin.UInt.toInt' call
        // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.shiftLeft.<anonymous>' call
        var tmp0_toInt = (0 <= tmp_3 ? tmp_3 < shiftWords : false) ? _UInt___init__impl__l7qpdl(0) : UIntArray__get_impl_gp5kza(operand, tmp_3 - shiftWords | 0);
        tmp_2[tmp_3] = _UInt___get_data__impl__f0vqqw(tmp0_toInt);
        tmp_0 = tmp_0 + 1 | 0;
      }
      return _UIntArray___init__impl__ghjpc6_0(tmp_2);
    }
    // Inline function 'kotlin.UIntArray' call
    var tmp_4 = 0;
    var tmp_5 = _UIntArray___get_size__impl__r6l8ci(operand) + wordsNeeded | 0;
    var tmp_6 = new Int32Array(tmp_5);
    while (tmp_4 < tmp_5) {
      var tmp_7 = tmp_4;
      // Inline function 'kotlin.UInt.toInt' call
      // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.shiftLeft.<anonymous>' call
      var tmp_8;
      if (0 <= tmp_7 ? tmp_7 < shiftWords : false) {
        tmp_8 = _UInt___init__impl__l7qpdl(0);
      } else {
        if (tmp_7 === shiftWords) {
          // Inline function 'kotlin.UInt.shl' call
          var tmp0_shl = UIntArray__get_impl_gp5kza(operand, tmp_7 - shiftWords | 0);
          tmp_8 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp0_shl) << shiftBits);
        } else {
          var containsLower = shiftWords + 1 | 0;
          if (tmp_7 < (originalSize + shiftWords | 0) ? containsLower <= tmp_7 : false) {
            // Inline function 'kotlin.UInt.or' call
            // Inline function 'kotlin.UInt.shl' call
            var tmp1_shl = UIntArray__get_impl_gp5kza(operand, tmp_7 - shiftWords | 0);
            var tmp4_or = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp1_shl) << shiftBits);
            // Inline function 'kotlin.UInt.shr' call
            var tmp2_shr = UIntArray__get_impl_gp5kza(operand, (tmp_7 - shiftWords | 0) - 1 | 0);
            var tmp3_shr = BigInteger32Arithmetic_getInstance().ep_1 - shiftBits | 0;
            var tmp5_or = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp2_shr) >>> tmp3_shr | 0);
            tmp_8 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp4_or) | _UInt___get_data__impl__f0vqqw(tmp5_or));
          } else {
            if (tmp_7 === ((originalSize + wordsNeeded | 0) - 1 | 0)) {
              // Inline function 'kotlin.UInt.shr' call
              var tmp6_shr = UIntArray__get_impl_gp5kza(operand, tmp_7 - wordsNeeded | 0);
              var tmp7_shr = BigInteger32Arithmetic_getInstance().ep_1 - shiftBits | 0;
              tmp_8 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp6_shr) >>> tmp7_shr | 0);
            } else {
              throw RuntimeException_init_$Create$('Invalid case ' + tmp_7);
            }
          }
        }
      }
      var tmp0_toInt_0 = tmp_8;
      tmp_6[tmp_7] = _UInt___get_data__impl__f0vqqw(tmp0_toInt_0);
      tmp_4 = tmp_4 + 1 | 0;
    }
    return _UIntArray___init__impl__ghjpc6_0(tmp_6);
  };
  protoOf(BigInteger32Arithmetic).tp = function (operand, places) {
    if (UIntArray__isEmpty_impl_vd8j4n(operand) ? true : places === 0) {
      return operand;
    }
    var shiftBits = places % this.ep_1 | 0;
    var wordsToDiscard = places / this.ep_1 | 0;
    if (wordsToDiscard >= _UIntArray___get_size__impl__r6l8ci(operand)) {
      return this.gp_1;
    }
    if (shiftBits === 0) {
      // Inline function 'kotlin.collections.copyOfRange' call
      var tmp0_copyOfRange = _UIntArray___get_size__impl__r6l8ci(operand);
      return _UIntArray___init__impl__ghjpc6_0(copyOfRange(_UIntArray___get_storage__impl__92a0v0(operand), wordsToDiscard, tmp0_copyOfRange));
    }
    if (_UIntArray___get_size__impl__r6l8ci(operand) > 1 ? (_UIntArray___get_size__impl__r6l8ci(operand) - wordsToDiscard | 0) === 1 : false) {
      // Inline function 'kotlin.uintArrayOf' call
      var tmp$ret$1;
      // Inline function 'kotlin.UInt.shr' call
      var tmp1_shr = UIntArray__get_impl_gp5kza(operand, _UIntArray___get_size__impl__r6l8ci(operand) - 1 | 0);
      tmp$ret$1 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp1_shr) >>> shiftBits | 0);
      return _UIntArray___init__impl__ghjpc6_0(new Int32Array([tmp$ret$1]));
    }
    // Inline function 'kotlin.UIntArray' call
    var tmp = 0;
    var tmp_0 = _UIntArray___get_size__impl__r6l8ci(operand) - wordsToDiscard | 0;
    var tmp_1 = new Int32Array(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      // Inline function 'kotlin.UInt.toInt' call
      // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.shiftRight.<anonymous>' call
      var tmp_3;
      if (0 <= tmp_2 ? tmp_2 < ((_UIntArray___get_size__impl__r6l8ci(operand) - 1 | 0) - wordsToDiscard | 0) : false) {
        // Inline function 'kotlin.UInt.or' call
        // Inline function 'kotlin.UInt.shr' call
        var tmp0_shr = UIntArray__get_impl_gp5kza(operand, tmp_2 + wordsToDiscard | 0);
        var tmp3_or = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp0_shr) >>> shiftBits | 0);
        // Inline function 'kotlin.UInt.shl' call
        var tmp1_shl = UIntArray__get_impl_gp5kza(operand, (tmp_2 + wordsToDiscard | 0) + 1 | 0);
        var tmp2_shl = BigInteger32Arithmetic_getInstance().ep_1 - shiftBits | 0;
        var tmp4_or = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp1_shl) << tmp2_shl);
        tmp_3 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp3_or) | _UInt___get_data__impl__f0vqqw(tmp4_or));
      } else if (tmp_2 === ((_UIntArray___get_size__impl__r6l8ci(operand) - 1 | 0) - wordsToDiscard | 0)) {
        // Inline function 'kotlin.UInt.shr' call
        var tmp5_shr = UIntArray__get_impl_gp5kza(operand, tmp_2 + wordsToDiscard | 0);
        tmp_3 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp5_shr) >>> shiftBits | 0);
      } else {
        throw RuntimeException_init_$Create$('Invalid case ' + tmp_2);
      }
      var tmp0_toInt = tmp_3;
      tmp_1[tmp_2] = _UInt___get_data__impl__f0vqqw(tmp0_toInt);
      tmp = tmp + 1 | 0;
    }
    var result = _UIntArray___init__impl__ghjpc6_0(tmp_1);
    return this.qp(result);
  };
  protoOf(BigInteger32Arithmetic).up = function (dividend, divisor) {
    var divisorSize = _UIntArray___get_size__impl__r6l8ci(divisor);
    var normalizationShift = this.np(UIntArray__get_impl_gp5kza(divisor, divisorSize - 1 | 0));
    var divisorNormalized = this.vp(divisor, normalizationShift);
    var dividendNormalized = this.vp(dividend, normalizationShift);
    return new Triple(new UIntArray(dividendNormalized), new UIntArray(divisorNormalized), normalizationShift);
  };
  protoOf(BigInteger32Arithmetic).wp = function (remainderNormalized, normalizationShift) {
    var remainder = this.xp(remainderNormalized, normalizationShift);
    return remainder;
  };
  protoOf(BigInteger32Arithmetic).yp = function (first, second) {
    var firstStart = _UIntArray___get_size__impl__r6l8ci(first) - this.rp(first) | 0;
    var secondStart = _UIntArray___get_size__impl__r6l8ci(second) - this.rp(second) | 0;
    if (firstStart > secondStart) {
      return 1;
    }
    if (secondStart > firstStart) {
      return -1;
    }
    var counter = firstStart - 1 | 0;
    var firstIsLarger = false;
    var bothAreEqual = true;
    $l$loop_0: while (counter >= 0) {
      // Inline function 'kotlin.UInt.compareTo' call
      var tmp0_compareTo = UIntArray__get_impl_gp5kza(first, counter);
      var tmp1_compareTo = UIntArray__get_impl_gp5kza(second, counter);
      if (uintCompare(_UInt___get_data__impl__f0vqqw(tmp0_compareTo), _UInt___get_data__impl__f0vqqw(tmp1_compareTo)) > 0) {
        firstIsLarger = true;
        bothAreEqual = false;
        break $l$loop_0;
      }
      // Inline function 'kotlin.UInt.compareTo' call
      var tmp2_compareTo = UIntArray__get_impl_gp5kza(first, counter);
      var tmp3_compareTo = UIntArray__get_impl_gp5kza(second, counter);
      if (uintCompare(_UInt___get_data__impl__f0vqqw(tmp2_compareTo), _UInt___get_data__impl__f0vqqw(tmp3_compareTo)) < 0) {
        firstIsLarger = false;
        bothAreEqual = false;
        break $l$loop_0;
      }
      counter = counter - 1 | 0;
    }
    if (bothAreEqual) {
      return 0;
    }
    if (firstIsLarger) {
      return 1;
    } else {
      return -1;
    }
  };
  protoOf(BigInteger32Arithmetic).zp = function (first, second) {
    if (_UIntArray___get_size__impl__r6l8ci(first) === 1 ? UIntArray__get_impl_gp5kza(first, 0) === _UInt___init__impl__l7qpdl(0) : false)
      return second;
    if (_UIntArray___get_size__impl__r6l8ci(second) === 1 ? UIntArray__get_impl_gp5kza(second, 0) === _UInt___init__impl__l7qpdl(0) : false)
      return first;
    var tmp;
    if (_UIntArray___get_size__impl__r6l8ci(first) > _UIntArray___get_size__impl__r6l8ci(second)) {
      tmp = new Quadruple(_UIntArray___get_size__impl__r6l8ci(first), _UIntArray___get_size__impl__r6l8ci(second), new UIntArray(first), new UIntArray(second));
    } else {
      tmp = new Quadruple(_UIntArray___get_size__impl__r6l8ci(second), _UIntArray___get_size__impl__r6l8ci(first), new UIntArray(second), new UIntArray(first));
    }
    var tmp0_container = tmp;
    var maxLength = tmp0_container.j3();
    var minLength = tmp0_container.k3();
    var largerData = tmp0_container.r5().j6_1;
    var smallerData = tmp0_container.po().j6_1;
    // Inline function 'kotlin.UIntArray' call
    var tmp_0 = 0;
    var tmp_1 = maxLength + 1 | 0;
    var tmp_2 = new Int32Array(tmp_1);
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      // Inline function 'kotlin.UInt.toInt' call
      // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.add.<anonymous>' call
      var tmp0_toInt = _UInt___init__impl__l7qpdl(0);
      tmp_2[tmp_3] = _UInt___get_data__impl__f0vqqw(tmp0_toInt);
      tmp_0 = tmp_0 + 1 | 0;
    }
    var result = _UIntArray___init__impl__ghjpc6_0(tmp_2);
    var i = 0;
    var sum = _ULong___init__impl__c78o9k(new Long(0, 0));
    while (i < minLength) {
      // Inline function 'kotlin.ULong.plus' call
      // Inline function 'kotlin.ULong.plus' call
      var tmp1_plus = sum;
      var tmp2_plus = UIntArray__get_impl_gp5kza(largerData, i);
      // Inline function 'kotlin.ULong.plus' call
      // Inline function 'kotlin.UInt.toULong' call
      var tmp0_plus = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp2_plus)).e6(new Long(-1, 0)));
      var tmp3_plus = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_plus).x4(_ULong___get_data__impl__fggpzb(tmp0_plus)));
      var tmp4_plus = UIntArray__get_impl_gp5kza(smallerData, i);
      // Inline function 'kotlin.ULong.plus' call
      // Inline function 'kotlin.UInt.toULong' call
      var tmp0_plus_0 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp4_plus)).e6(new Long(-1, 0)));
      sum = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp3_plus).x4(_ULong___get_data__impl__fggpzb(tmp0_plus_0)));
      var tmp_4 = i;
      var tmp$ret$12;
      // Inline function 'kotlin.ULong.toUInt' call
      // Inline function 'kotlin.ULong.and' call
      var tmp5_and = sum;
      var tmp6_and = this.zo_1;
      var tmp7_toUInt = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp5_and).e6(_ULong___get_data__impl__fggpzb(tmp6_and)));
      // Inline function 'kotlin.toUInt' call
      var tmp0_toUInt = _ULong___get_data__impl__fggpzb(tmp7_toUInt);
      tmp$ret$12 = _UInt___init__impl__l7qpdl(tmp0_toUInt.b7());
      UIntArray__set_impl_7f2zu2(result, tmp_4, tmp$ret$12);
      // Inline function 'kotlin.ULong.shr' call
      var tmp8_shr = sum;
      var tmp9_shr = this.ep_1;
      sum = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp8_shr).e7(tmp9_shr));
      i = i + 1 | 0;
    }
    while (true) {
      if (equals(sum, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
        while (i < maxLength) {
          UIntArray__set_impl_7f2zu2(result, i, UIntArray__get_impl_gp5kza(largerData, i));
          i = i + 1 | 0;
        }
        var tmp_5;
        if (UIntArray__get_impl_gp5kza(result, _UIntArray___get_size__impl__r6l8ci(result) - 1 | 0) === _UInt___init__impl__l7qpdl(0)) {
          // Inline function 'kotlin.collections.copyOfRange' call
          var tmp10_copyOfRange = _UIntArray___get_size__impl__r6l8ci(result) - 1 | 0;
          tmp_5 = _UIntArray___init__impl__ghjpc6_0(copyOfRange(_UIntArray___get_storage__impl__92a0v0(result), 0, tmp10_copyOfRange));
        } else {
          tmp_5 = result;
        }
        return tmp_5;
      }
      if (i === maxLength) {
        var tmp$ret$16;
        // Inline function 'kotlin.ULong.toUInt' call
        var tmp11_toUInt = sum;
        // Inline function 'kotlin.toUInt' call
        var tmp0_toUInt_0 = _ULong___get_data__impl__fggpzb(tmp11_toUInt);
        tmp$ret$16 = _UInt___init__impl__l7qpdl(tmp0_toUInt_0.b7());
        UIntArray__set_impl_7f2zu2(result, maxLength, tmp$ret$16);
        return result;
      }
      // Inline function 'kotlin.ULong.plus' call
      var tmp12_plus = sum;
      var tmp13_plus = UIntArray__get_impl_gp5kza(largerData, i);
      // Inline function 'kotlin.ULong.plus' call
      // Inline function 'kotlin.UInt.toULong' call
      var tmp0_plus_1 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp13_plus)).e6(new Long(-1, 0)));
      sum = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp12_plus).x4(_ULong___get_data__impl__fggpzb(tmp0_plus_1)));
      var tmp_6 = i;
      var tmp$ret$22;
      // Inline function 'kotlin.ULong.toUInt' call
      // Inline function 'kotlin.ULong.and' call
      var tmp14_and = sum;
      var tmp15_and = this.zo_1;
      var tmp16_toUInt = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp14_and).e6(_ULong___get_data__impl__fggpzb(tmp15_and)));
      // Inline function 'kotlin.toUInt' call
      var tmp0_toUInt_1 = _ULong___get_data__impl__fggpzb(tmp16_toUInt);
      tmp$ret$22 = _UInt___init__impl__l7qpdl(tmp0_toUInt_1.b7());
      UIntArray__set_impl_7f2zu2(result, tmp_6, tmp$ret$22);
      // Inline function 'kotlin.ULong.shr' call
      var tmp17_shr = sum;
      var tmp18_shr = this.ep_1;
      sum = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp17_shr).e7(tmp18_shr));
      i = i + 1 | 0;
    }
  };
  protoOf(BigInteger32Arithmetic).aq = function (first, second) {
    var firstWithoutLeadingZeroes = this.qp(first);
    var secondWithoutLeadingZeroes = this.qp(second);
    var firstIsLarger = this.yp(firstWithoutLeadingZeroes, secondWithoutLeadingZeroes) === 1;
    var tmp;
    if (firstIsLarger) {
      tmp = new Quadruple(_UIntArray___get_size__impl__r6l8ci(firstWithoutLeadingZeroes), _UIntArray___get_size__impl__r6l8ci(secondWithoutLeadingZeroes), new UIntArray(firstWithoutLeadingZeroes), new UIntArray(secondWithoutLeadingZeroes));
    } else {
      tmp = new Quadruple(_UIntArray___get_size__impl__r6l8ci(secondWithoutLeadingZeroes), _UIntArray___get_size__impl__r6l8ci(firstWithoutLeadingZeroes), new UIntArray(secondWithoutLeadingZeroes), new UIntArray(firstWithoutLeadingZeroes));
    }
    var tmp0_container = tmp;
    var largerLength = tmp0_container.j3();
    var smallerLength = tmp0_container.k3();
    var largerData = tmp0_container.r5().j6_1;
    var smallerData = tmp0_container.po().j6_1;
    // Inline function 'kotlin.UIntArray' call
    var tmp_0 = 0;
    var tmp_1 = largerLength + 1 | 0;
    var tmp_2 = new Int32Array(tmp_1);
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      // Inline function 'kotlin.UInt.toInt' call
      // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.subtract.<anonymous>' call
      var tmp0_toInt = _UInt___init__impl__l7qpdl(0);
      tmp_2[tmp_3] = _UInt___get_data__impl__f0vqqw(tmp0_toInt);
      tmp_0 = tmp_0 + 1 | 0;
    }
    var result = _UIntArray___init__impl__ghjpc6_0(tmp_2);
    var i = 0;
    var diff = _ULong___init__impl__c78o9k(new Long(0, 0));
    while (i < smallerLength) {
      if (i >= _UIntArray___get_size__impl__r6l8ci(largerData)) {
        println('Breakpoint');
      }
      if (i >= _UIntArray___get_size__impl__r6l8ci(smallerData)) {
        println('Breakpoint');
      }
      // Inline function 'kotlin.ULong.minus' call
      // Inline function 'kotlin.ULong.minus' call
      // Inline function 'kotlin.UInt.toULong' call
      var tmp1_toULong = UIntArray__get_impl_gp5kza(largerData, i);
      var tmp2_minus = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp1_toULong)).e6(new Long(-1, 0)));
      var tmp3_minus = UIntArray__get_impl_gp5kza(smallerData, i);
      // Inline function 'kotlin.ULong.minus' call
      // Inline function 'kotlin.UInt.toULong' call
      var tmp0_minus = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp3_minus)).e6(new Long(-1, 0)));
      var tmp4_minus = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp2_minus).y4(_ULong___get_data__impl__fggpzb(tmp0_minus)));
      var tmp5_minus = diff;
      diff = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_minus).y4(_ULong___get_data__impl__fggpzb(tmp5_minus)));
      var tmp_4 = i;
      var tmp$ret$10;
      // Inline function 'kotlin.ULong.toUInt' call
      var tmp6_toUInt = diff;
      // Inline function 'kotlin.toUInt' call
      var tmp0_toUInt = _ULong___get_data__impl__fggpzb(tmp6_toUInt);
      tmp$ret$10 = _UInt___init__impl__l7qpdl(tmp0_toUInt.b7());
      UIntArray__set_impl_7f2zu2(result, tmp_4, tmp$ret$10);
      // Inline function 'kotlin.ULong.shr' call
      // Inline function 'kotlin.ULong.and' call
      var tmp7_and = diff;
      var tmp8_and = this.bp_1;
      var tmp9_shr = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp7_and).e6(_ULong___get_data__impl__fggpzb(tmp8_and)));
      var tmp10_shr = this.fp_1;
      diff = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp9_shr).e7(tmp10_shr));
      i = i + 1 | 0;
    }
    while (!equals(diff, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      // Inline function 'kotlin.UInt.minus' call
      var tmp11_minus = UIntArray__get_impl_gp5kza(largerData, i);
      var tmp12_minus = diff;
      // Inline function 'kotlin.ULong.minus' call
      // Inline function 'kotlin.UInt.toULong' call
      var tmp0_minus_0 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp11_minus)).e6(new Long(-1, 0)));
      diff = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_minus_0).y4(_ULong___get_data__impl__fggpzb(tmp12_minus)));
      var tmp_5 = i;
      var tmp$ret$18;
      // Inline function 'kotlin.UInt.and' call
      // Inline function 'kotlin.ULong.toUInt' call
      var tmp13_toUInt = diff;
      // Inline function 'kotlin.toUInt' call
      var tmp0_toUInt_0 = _ULong___get_data__impl__fggpzb(tmp13_toUInt);
      var tmp14_and = _UInt___init__impl__l7qpdl(tmp0_toUInt_0.b7());
      var tmp15_and = this.ap_1;
      tmp$ret$18 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp14_and) & _UInt___get_data__impl__f0vqqw(tmp15_and));
      UIntArray__set_impl_7f2zu2(result, tmp_5, tmp$ret$18);
      // Inline function 'kotlin.ULong.shr' call
      // Inline function 'kotlin.ULong.and' call
      var tmp16_and = diff;
      var tmp17_and = this.bp_1;
      var tmp18_shr = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp16_and).e6(_ULong___get_data__impl__fggpzb(tmp17_and)));
      var tmp19_shr = this.fp_1;
      diff = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp18_shr).e7(tmp19_shr));
      i = i + 1 | 0;
    }
    while (i < largerLength) {
      UIntArray__set_impl_7f2zu2(result, i, UIntArray__get_impl_gp5kza(largerData, i));
      i = i + 1 | 0;
    }
    // Inline function 'kotlin.collections.filter' call
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo = ArrayList_init_$Create$();
    var tmp0_iterator = UIntArray__iterator_impl_tkdv7k(result);
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h().d6_1;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.subtract.<anonymous>' call
      if (element === _UInt___init__impl__l7qpdl(0)) {
        tmp0_filterTo.a(new UInt(element));
      }
    }
    if (tmp0_filterTo.p()) {
      return this.gp_1;
    }
    // Inline function 'kotlin.collections.indexOfLast' call
    var tmp$ret$27;
    $l$block: {
      // Inline function 'kotlin.collections.indexOfLast' call
      var tmp0_indexOfLast = _UIntArray___get_storage__impl__92a0v0(result);
      var inductionVariable = tmp0_indexOfLast.length - 1 | 0;
      if (0 <= inductionVariable)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + -1 | 0;
          // Inline function 'kotlin.collections.indexOfLast.<anonymous>' call
          var tmp1_anonymous = tmp0_indexOfLast[index];
          // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.subtract.<anonymous>' call
          // Inline function 'kotlin.toUInt' call
          if (!(_UInt___init__impl__l7qpdl(tmp1_anonymous) === _UInt___init__impl__l7qpdl(0))) {
            tmp$ret$27 = index;
            break $l$block;
          }
        }
         while (0 <= inductionVariable);
      tmp$ret$27 = -1;
    }
    var firstEmpty = tmp$ret$27 + 1 | 0;
    // Inline function 'kotlin.collections.copyOfRange' call
    return _UIntArray___init__impl__ghjpc6_0(copyOfRange(_UIntArray___get_storage__impl__92a0v0(result), 0, firstEmpty));
  };
  protoOf(BigInteger32Arithmetic).bq = function (first, second) {
    var result = _UIntArray___init__impl__ghjpc6(_UIntArray___get_size__impl__r6l8ci(first) + 1 | 0);
    var product;
    var sum;
    var inductionVariable = 0;
    var last = _UIntArray___get_size__impl__r6l8ci(first);
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.ULong.times' call
        // Inline function 'kotlin.UInt.toULong' call
        var tmp0_toULong = UIntArray__get_impl_gp5kza(first, i);
        var tmp1_times = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp0_toULong)).e6(new Long(-1, 0)));
        // Inline function 'kotlin.ULong.times' call
        // Inline function 'kotlin.UInt.toULong' call
        var tmp0_times = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(second)).e6(new Long(-1, 0)));
        product = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_times).w4(_ULong___get_data__impl__fggpzb(tmp0_times)));
        // Inline function 'kotlin.ULong.plus' call
        // Inline function 'kotlin.UInt.toULong' call
        var tmp2_toULong = UIntArray__get_impl_gp5kza(result, i);
        var tmp6_plus = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp2_toULong)).e6(new Long(-1, 0)));
        // Inline function 'kotlin.ULong.toUInt' call
        // Inline function 'kotlin.ULong.and' call
        var tmp4_and = this.zo_1;
        var tmp5_toUInt = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(product).e6(_ULong___get_data__impl__fggpzb(tmp4_and)));
        // Inline function 'kotlin.toUInt' call
        var tmp0_toUInt = _ULong___get_data__impl__fggpzb(tmp5_toUInt);
        var tmp7_plus = _UInt___init__impl__l7qpdl(tmp0_toUInt.b7());
        // Inline function 'kotlin.ULong.plus' call
        // Inline function 'kotlin.UInt.toULong' call
        var tmp0_plus = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp7_plus)).e6(new Long(-1, 0)));
        sum = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp6_plus).x4(_ULong___get_data__impl__fggpzb(tmp0_plus)));
        var tmp$ret$13;
        // Inline function 'kotlin.ULong.toUInt' call
        // Inline function 'kotlin.ULong.and' call
        var tmp8_and = sum;
        var tmp9_and = this.zo_1;
        var tmp10_toUInt = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp8_and).e6(_ULong___get_data__impl__fggpzb(tmp9_and)));
        // Inline function 'kotlin.toUInt' call
        var tmp0_toUInt_0 = _ULong___get_data__impl__fggpzb(tmp10_toUInt);
        tmp$ret$13 = _UInt___init__impl__l7qpdl(tmp0_toUInt_0.b7());
        UIntArray__set_impl_7f2zu2(result, i, tmp$ret$13);
        // Inline function 'kotlin.ULong.shr' call
        var tmp11_shr = sum;
        var tmp12_shr = this.ep_1;
        sum = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp11_shr).e7(tmp12_shr));
        var tmp = i + 1 | 0;
        var tmp$ret$20;
        // Inline function 'kotlin.UInt.plus' call
        // Inline function 'kotlin.ULong.toUInt' call
        // Inline function 'kotlin.ULong.shr' call
        var tmp14_shr = this.ep_1;
        var tmp15_toUInt = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(product).e7(tmp14_shr));
        // Inline function 'kotlin.toUInt' call
        var tmp0_toUInt_1 = _ULong___get_data__impl__fggpzb(tmp15_toUInt);
        var tmp17_plus = _UInt___init__impl__l7qpdl(tmp0_toUInt_1.b7());
        // Inline function 'kotlin.ULong.toUInt' call
        var tmp16_toUInt = sum;
        // Inline function 'kotlin.toUInt' call
        var tmp0_toUInt_2 = _ULong___get_data__impl__fggpzb(tmp16_toUInt);
        var tmp18_plus = _UInt___init__impl__l7qpdl(tmp0_toUInt_2.b7());
        tmp$ret$20 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp17_plus) + _UInt___get_data__impl__f0vqqw(tmp18_plus) | 0);
        UIntArray__set_impl_7f2zu2(result, tmp, tmp$ret$20);
      }
       while (inductionVariable < last);
    return this.qp(result);
  };
  protoOf(BigInteger32Arithmetic).cq = function (first, second) {
    return this.dq(first, second);
  };
  protoOf(BigInteger32Arithmetic).dq = function (unnormalizedDividend, unnormalizedDivisor) {
    if (this.eq(unnormalizedDivisor, unnormalizedDividend) > 0) {
      return new Pair(new UIntArray(this.gp_1), new UIntArray(unnormalizedDividend));
    }
    if (_UIntArray___get_size__impl__r6l8ci(unnormalizedDivisor) === 1 ? _UIntArray___get_size__impl__r6l8ci(unnormalizedDividend) === 1 : false) {
      var tmp$ret$1;
      // Inline function 'kotlin.uintArrayOf' call
      var tmp$ret$0;
      // Inline function 'kotlin.UInt.div' call
      var tmp0_div = UIntArray__get_impl_gp5kza(unnormalizedDividend, 0);
      var tmp1_div = UIntArray__get_impl_gp5kza(unnormalizedDivisor, 0);
      tmp$ret$0 = uintDivide(tmp0_div, tmp1_div);
      tmp$ret$1 = _UIntArray___init__impl__ghjpc6_0(new Int32Array([tmp$ret$0]));
      var tmp = new UIntArray(this.qp(tmp$ret$1));
      var tmp$ret$3;
      // Inline function 'kotlin.uintArrayOf' call
      var tmp$ret$2;
      // Inline function 'kotlin.UInt.rem' call
      var tmp3_rem = UIntArray__get_impl_gp5kza(unnormalizedDividend, 0);
      var tmp4_rem = UIntArray__get_impl_gp5kza(unnormalizedDivisor, 0);
      tmp$ret$2 = uintRemainder(tmp3_rem, tmp4_rem);
      tmp$ret$3 = _UIntArray___init__impl__ghjpc6_0(new Int32Array([tmp$ret$2]));
      return new Pair(tmp, new UIntArray(this.qp(tmp$ret$3)));
    }
    var bitPrecision = this.op(unnormalizedDividend) - this.op(unnormalizedDivisor) | 0;
    if (bitPrecision === 0) {
      var tmp$ret$4;
      // Inline function 'kotlin.uintArrayOf' call
      tmp$ret$4 = _UIntArray___init__impl__ghjpc6_0(new Int32Array([_UInt___init__impl__l7qpdl(1)]));
      return new Pair(new UIntArray(tmp$ret$4), new UIntArray(this.fq(unnormalizedDividend, unnormalizedDivisor)));
    }
    var tmp0_container = this.up(unnormalizedDividend, unnormalizedDivisor);
    var dividend = tmp0_container.j3().j6_1;
    var divisor = tmp0_container.k3().j6_1;
    var normalizationShift = tmp0_container.r5();
    var dividendSize = _UIntArray___get_size__impl__r6l8ci(dividend);
    var divisorSize = _UIntArray___get_size__impl__r6l8ci(divisor);
    var wordPrecision = dividendSize - divisorSize | 0;
    var qjhat;
    var reconstructedQuotient;
    var quotient = _UIntArray___init__impl__ghjpc6(wordPrecision);
    var divisorTimesBaseToPowerOfM = this.vp(divisor, imul(wordPrecision, this.ep_1));
    if (this.eq(dividend, divisorTimesBaseToPowerOfM) >= 0) {
      quotient = _UIntArray___init__impl__ghjpc6(wordPrecision + 1 | 0);
      UIntArray__set_impl_7f2zu2(quotient, wordPrecision, _UInt___init__impl__l7qpdl(1));
      dividend = this.fq(dividend, divisorTimesBaseToPowerOfM);
    }
    var inductionVariable = wordPrecision - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var j = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var tmp_0;
        if ((divisorSize + j | 0) < _UIntArray___get_size__impl__r6l8ci(dividend)) {
          // Inline function 'kotlin.ULong.div' call
          // Inline function 'kotlin.ULong.plus' call
          // Inline function 'kotlin.ULong.shl' call
          // Inline function 'kotlin.UInt.toULong' call
          var tmp6_toULong = UIntArray__get_impl_gp5kza(dividend, divisorSize + j | 0);
          var tmp7_shl = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp6_toULong)).e6(new Long(-1, 0)));
          var tmp8_shl = this.ep_1;
          var tmp9_plus = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp7_shl).f7(tmp8_shl));
          var tmp10_plus = UIntArray__get_impl_gp5kza(dividend, (divisorSize + j | 0) - 1 | 0);
          // Inline function 'kotlin.ULong.plus' call
          // Inline function 'kotlin.UInt.toULong' call
          var tmp0_plus = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp10_plus)).e6(new Long(-1, 0)));
          var tmp11_div = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp9_plus).x4(_ULong___get_data__impl__fggpzb(tmp0_plus)));
          var tmp12_div = UIntArray__get_impl_gp5kza(divisor, divisorSize - 1 | 0);
          // Inline function 'kotlin.ULong.div' call
          // Inline function 'kotlin.UInt.toULong' call
          var tmp0_div_0 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp12_div)).e6(new Long(-1, 0)));
          tmp_0 = ulongDivide(tmp11_div, tmp0_div_0);
        } else {
          var tmp_1;
          if ((divisorSize + j | 0) === _UIntArray___get_size__impl__r6l8ci(dividend)) {
            // Inline function 'kotlin.UInt.toULong' call
            // Inline function 'kotlin.UInt.div' call
            var tmp13_div = UIntArray__get_impl_gp5kza(dividend, (divisorSize + j | 0) - 1 | 0);
            var tmp14_div = UIntArray__get_impl_gp5kza(divisor, divisorSize - 1 | 0);
            var tmp15_toULong = uintDivide(tmp13_div, tmp14_div);
            tmp_1 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp15_toULong)).e6(new Long(-1, 0)));
          } else {
            tmp_1 = _ULong___init__impl__c78o9k(new Long(0, 0));
          }
          tmp_0 = tmp_1;
        }
        qjhat = tmp_0;
        var tmp_2 = quotient;
        var tmp_3;
        // Inline function 'kotlin.ULong.compareTo' call
        // Inline function 'kotlin.UInt.minus' call
        var tmp16_minus = this.dp_1;
        // Inline function 'kotlin.ULong.minus' call
        // Inline function 'kotlin.UInt.toULong' call
        var tmp0_minus = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp16_minus)).e6(new Long(-1, 0)));
        var tmp18_compareTo = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_minus).y4(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(1, 0)))));
        if (ulongCompare(_ULong___get_data__impl__fggpzb(qjhat), _ULong___get_data__impl__fggpzb(tmp18_compareTo)) < 0) {
          // Inline function 'kotlin.ULong.toUInt' call
          // Inline function 'kotlin.toUInt' call
          var tmp0_toUInt = _ULong___get_data__impl__fggpzb(qjhat);
          tmp_3 = _UInt___init__impl__l7qpdl(tmp0_toUInt.b7());
        } else {
          // Inline function 'kotlin.UInt.minus' call
          var tmp20_minus = this.dp_1;
          tmp_3 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp20_minus) - _UInt___get_data__impl__f0vqqw(_UInt___init__impl__l7qpdl(1)) | 0);
        }
        UIntArray__set_impl_7f2zu2(tmp_2, j, tmp_3);
        reconstructedQuotient = this.vp(this.gq(divisor, UIntArray__get_impl_gp5kza(quotient, j)), imul(j, this.ep_1));
        while (this.eq(reconstructedQuotient, dividend) > 0) {
          var tmp_4 = quotient;
          var tmp$ret$22;
          // Inline function 'kotlin.UInt.minus' call
          var tmp21_minus = UIntArray__get_impl_gp5kza(quotient, j);
          tmp$ret$22 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp21_minus) - _UInt___get_data__impl__f0vqqw(_UInt___init__impl__l7qpdl(1)) | 0);
          UIntArray__set_impl_7f2zu2(tmp_4, j, tmp$ret$22);
          reconstructedQuotient = this.vp(this.gq(divisor, UIntArray__get_impl_gp5kza(quotient, j)), imul(j, this.ep_1));
        }
        dividend = this.fq(dividend, reconstructedQuotient);
      }
       while (0 <= inductionVariable);
    while (this.eq(dividend, divisor) >= 0) {
      quotient = this.hq(quotient, _UInt___init__impl__l7qpdl(1));
      dividend = this.fq(dividend, divisor);
    }
    var denormRemainder = this.wp(dividend, normalizationShift);
    return new Pair(new UIntArray(this.qp(quotient)), new UIntArray(denormRemainder));
  };
  protoOf(BigInteger32Arithmetic).vp = function (_this__u8e3s4, places) {
    return this.sp(_this__u8e3s4, places);
  };
  protoOf(BigInteger32Arithmetic).xp = function (_this__u8e3s4, places) {
    return this.tp(_this__u8e3s4, places);
  };
  protoOf(BigInteger32Arithmetic).fq = function (_this__u8e3s4, other) {
    return this.aq(_this__u8e3s4, other);
  };
  protoOf(BigInteger32Arithmetic).hq = function (_this__u8e3s4, other) {
    var tmp$ret$0;
    // Inline function 'kotlin.uintArrayOf' call
    tmp$ret$0 = _UIntArray___init__impl__ghjpc6_0(new Int32Array([other]));
    return this.zp(_this__u8e3s4, tmp$ret$0);
  };
  protoOf(BigInteger32Arithmetic).gq = function (_this__u8e3s4, other) {
    return this.bq(_this__u8e3s4, other);
  };
  protoOf(BigInteger32Arithmetic).eq = function (_this__u8e3s4, other) {
    return this.yp(_this__u8e3s4, other);
  };
  var BigInteger32Arithmetic_instance;
  function BigInteger32Arithmetic_getInstance() {
    if (BigInteger32Arithmetic_instance == null)
      new BigInteger32Arithmetic();
    return BigInteger32Arithmetic_instance;
  }
  function multiplyWithCorrectedSize($this, first, second, firstCorrectedSize, secondCorrectedSize) {
    if (isZero(first, $this) ? true : isZero(second, $this)) {
      return $this.zm_1;
    }
    if ((firstCorrectedSize >= 120 ? true : secondCorrectedSize >= 120) ? firstCorrectedSize <= 15000 ? true : secondCorrectedSize < 15000 : false) {
      return karatsubaMultiplyWithCorrectedSizes($this, first, second, firstCorrectedSize, secondCorrectedSize);
    }
    if (firstCorrectedSize >= 15000 ? secondCorrectedSize >= 15000 : false) {
      return $this.iq(first, second);
    }
    return basecaseMultiplyWithCorrectedSize($this, first, second, firstCorrectedSize, secondCorrectedSize);
  }
  function basecaseMultiplyWithCorrectedSize($this, first, second, firstCorrectedSizeStart, secondCorrectedSizeStart) {
    var resultArray = $this.zm_1;
    // Inline function 'kotlin.collections.forEachIndexed' call
    var index = 0;
    var tmp0_iterator = ULongArray__iterator_impl_cq4d2h(second);
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h().f1_1;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.basecaseMultiplyWithCorrectedSize.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      if (tmp1 <= secondCorrectedSizeStart) {
        resultArray = BigInteger63Arithmetic_getInstance().lq(resultArray, BigInteger63Arithmetic_getInstance().kq(BigInteger63Arithmetic_getInstance().jq(first, item), imul(tmp1, BigInteger63Arithmetic_getInstance().en_1)));
      }
    }
    return resultArray;
  }
  function karatsubaMultiplyWithCorrectedSizes($this, firstUnsigned, secondUnsigned, firstCorrectedSize, secondCorrectedSize) {
    var first = new SignedULongArray(firstUnsigned, true);
    var second = new SignedULongArray(secondUnsigned, true);
    // Inline function 'kotlin.math.max' call
    var halfLength = (Math.max(firstCorrectedSize, secondCorrectedSize) + 1 | 0) / 2 | 0;
    var mask = $this.mq($this.kq($this.an_1, imul(halfLength, $this.fn_1)), _ULong___init__impl__c78o9k(new Long(1, 0)));
    var firstLower = $this.nq(first, mask);
    var firstHigher = $this.oq(first, imul(halfLength, $this.fn_1));
    var secondLower = $this.nq(second, mask);
    var secondHigher = $this.oq(second, imul(halfLength, $this.fn_1));
    var higherProduct = $this.pq(firstHigher, secondHigher);
    var lowerProduct = $this.pq(firstLower, secondLower);
    var middleProduct = $this.pq($this.qq(firstHigher, firstLower), $this.qq(secondHigher, secondLower));
    var result = $this.qq($this.qq($this.rq(higherProduct, imul(imul(2, $this.fn_1), halfLength)), $this.rq($this.sq($this.sq(middleProduct, higherProduct), lowerProduct), imul($this.fn_1, halfLength))), lowerProduct);
    return result.tq_1;
  }
  function isZero(_this__u8e3s4, $this) {
    if (equals(_this__u8e3s4, $this.zm_1))
      return true;
    if (_ULongArray___get_size__impl__ju6dtr(_this__u8e3s4) === 1 ? equals(ULongArray__get_impl_pr71q9(_this__u8e3s4, 0), _ULong___init__impl__c78o9k(new Long(0, 0))) : false)
      return true;
    if ((_ULongArray___get_size__impl__ju6dtr(_this__u8e3s4) - $this.vq(_this__u8e3s4) | 0) === 0)
      return true;
    return false;
  }
  function SignedULongArray(unsignedValue, sign) {
    this.tq_1 = unsignedValue;
    this.uq_1 = sign;
  }
  protoOf(SignedULongArray).wq = function (unsignedValue, sign) {
    return new SignedULongArray(unsignedValue, sign);
  };
  protoOf(SignedULongArray).xq = function (unsignedValue, sign, $super) {
    unsignedValue = unsignedValue === VOID ? this.tq_1 : unsignedValue;
    sign = sign === VOID ? this.uq_1 : sign;
    return $super === VOID ? this.wq(unsignedValue, sign) : $super.wq.call(this, new ULongArray(unsignedValue), sign);
  };
  protoOf(SignedULongArray).toString = function () {
    return 'SignedULongArray(unsignedValue=' + new ULongArray(this.tq_1) + ', sign=' + this.uq_1 + ')';
  };
  protoOf(SignedULongArray).hashCode = function () {
    var result = ULongArray__hashCode_impl_aze4wa(this.tq_1);
    result = imul(result, 31) + (this.uq_1 | 0) | 0;
    return result;
  };
  protoOf(SignedULongArray).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SignedULongArray))
      return false;
    var tmp0_other_with_cast = other instanceof SignedULongArray ? other : THROW_CCE();
    if (!equals(this.tq_1, tmp0_other_with_cast.tq_1))
      return false;
    if (!(this.uq_1 === tmp0_other_with_cast.uq_1))
      return false;
    return true;
  };
  function signedAdd($this, first, second) {
    var tmp;
    if (!!(first.uq_1 ^ second.uq_1)) {
      var tmp_0;
      if ($this.zq(first.tq_1, second.tq_1) > 0) {
        tmp_0 = new SignedULongArray($this.yq(first.tq_1, second.tq_1), first.uq_1);
      } else {
        tmp_0 = new SignedULongArray($this.yq(second.tq_1, first.tq_1), second.uq_1);
      }
      tmp = tmp_0;
    } else {
      tmp = new SignedULongArray($this.lq(first.tq_1, second.tq_1), first.uq_1);
    }
    return tmp;
  }
  function signedSubtract($this, first, second) {
    return signedAdd($this, first, second.xq(VOID, !second.uq_1));
  }
  function signedMultiply($this, first, second) {
    return new SignedULongArray($this.ar(first.tq_1, second.tq_1), !!!(first.uq_1 ^ second.uq_1));
  }
  function signedDivide($this, first, second) {
    return new SignedULongArray($this.br(first.tq_1, second.tq_1), !!!(first.uq_1 ^ second.uq_1));
  }
  function BigInteger63Arithmetic() {
    BigInteger63Arithmetic_instance = this;
    var tmp = this;
    // Inline function 'kotlin.longArrayOf' call
    tmp.ym_1 = longArrayOf([]);
    var tmp_0 = this;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp_0.zm_1 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0))]));
    var tmp_1 = this;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp_1.an_1 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1, 0))]));
    var tmp_2 = this;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp_2.bn_1 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(2, 0))]));
    var tmp_3 = this;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp_3.cn_1 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(10, 0))]));
    var tmp_4 = this;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp_4.dn_1 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-1431655765, 715827882))]));
    this.en_1 = 63;
    this.fn_1 = 63;
    this.gn_1 = _ULong___init__impl__c78o9k(new Long(-1, 2147483647));
    var tmp_5 = this;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp_5.hn_1 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-1, 2147483647))]));
    this.in_1 = _ULong___init__impl__c78o9k(new Long(-1, 0));
    this.jn_1 = _ULong___init__impl__c78o9k(new Long(0, 2147483647));
    this.kn_1 = _ULong___init__impl__c78o9k(new Long(0, -2147483648));
    this.ln_1 = 120;
    this.mn_1 = 15000;
    this.nn_1 = true;
    this.on_1 = new SignedULongArray(BigInteger63Arithmetic_getInstance().bn_1, true);
    var tmp_6 = this;
    // Inline function 'kotlin.arrayOf' call
    var tmp$ret$7;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$7 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1, 0))]));
    var tmp_7 = new ULongArray(tmp$ret$7);
    var tmp$ret$8;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$8 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(10, 0))]));
    var tmp_8 = new ULongArray(tmp$ret$8);
    var tmp$ret$9;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$9 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(100, 0))]));
    var tmp_9 = new ULongArray(tmp$ret$9);
    var tmp$ret$10;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$10 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1000, 0))]));
    var tmp_10 = new ULongArray(tmp$ret$10);
    var tmp$ret$11;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$11 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(10000, 0))]));
    var tmp_11 = new ULongArray(tmp$ret$11);
    var tmp$ret$12;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$12 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(100000, 0))]));
    var tmp_12 = new ULongArray(tmp$ret$12);
    var tmp$ret$13;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$13 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1000000, 0))]));
    var tmp_13 = new ULongArray(tmp$ret$13);
    var tmp$ret$14;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$14 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(10000000, 0))]));
    var tmp_14 = new ULongArray(tmp$ret$14);
    var tmp$ret$15;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$15 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(100000000, 0))]));
    var tmp_15 = new ULongArray(tmp$ret$15);
    var tmp$ret$16;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$16 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1000000000, 0))]));
    var tmp_16 = new ULongArray(tmp$ret$16);
    var tmp$ret$17;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$17 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1410065408, 2))]));
    var tmp_17 = new ULongArray(tmp$ret$17);
    var tmp$ret$18;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$18 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1215752192, 23))]));
    var tmp_18 = new ULongArray(tmp$ret$18);
    var tmp$ret$19;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$19 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-727379968, 232))]));
    var tmp_19 = new ULongArray(tmp$ret$19);
    var tmp$ret$20;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$20 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1316134912, 2328))]));
    var tmp_20 = new ULongArray(tmp$ret$20);
    var tmp$ret$21;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$21 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(276447232, 23283))]));
    var tmp_21 = new ULongArray(tmp$ret$21);
    var tmp$ret$22;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$22 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-1530494976, 232830))]));
    var tmp_22 = new ULongArray(tmp$ret$22);
    var tmp$ret$23;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$23 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1874919424, 2328306))]));
    var tmp_23 = new ULongArray(tmp$ret$23);
    var tmp$ret$24;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$24 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1569325056, 23283064))]));
    var tmp_24 = new ULongArray(tmp$ret$24);
    var tmp$ret$25;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$25 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-1486618624, 232830643))]));
    var tmp_25 = new ULongArray(tmp$ret$25);
    var tmp$ret$26;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$26 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-1981284352, 180822788)), _ULong___init__impl__c78o9k(new Long(1, 0))]));
    var tmp_26 = new ULongArray(tmp$ret$26);
    var tmp$ret$27;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$27 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1661992960, 1808227885)), _ULong___init__impl__c78o9k(new Long(10, 0))]));
    var tmp_27 = new ULongArray(tmp$ret$27);
    var tmp$ret$28;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$28 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-559939584, 902409669)), _ULong___init__impl__c78o9k(new Long(108, 0))]));
    var tmp_28 = new ULongArray(tmp$ret$28);
    var tmp$ret$29;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$29 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-1304428544, 434162106)), _ULong___init__impl__c78o9k(new Long(1084, 0))]));
    var tmp_29 = new ULongArray(tmp$ret$29);
    var tmp$ret$30;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$30 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-159383552, 46653770)), _ULong___init__impl__c78o9k(new Long(10842, 0))]));
    var tmp_30 = new ULongArray(tmp$ret$30);
    var tmp$ret$31;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$31 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-1593835520, 466537709)), _ULong___init__impl__c78o9k(new Long(108420, 0))]));
    var tmp_31 = new ULongArray(tmp$ret$31);
    var tmp$ret$32;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$32 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1241513984, 370409800)), _ULong___init__impl__c78o9k(new Long(1084202, 0))]));
    var tmp_32 = new ULongArray(tmp$ret$32);
    var tmp$ret$33;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$33 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-469762048, 1556614354)), _ULong___init__impl__c78o9k(new Long(10842021, 0))]));
    var tmp_33 = new ULongArray(tmp$ret$33);
    var tmp$ret$34;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$34 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-402653184, 533758012)), _ULong___init__impl__c78o9k(new Long(108420217, 0))]));
    var tmp_34 = new ULongArray(tmp$ret$34);
    var tmp$ret$35;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$35 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(268435456, 1042612833)), _ULong___init__impl__c78o9k(new Long(1084202172, 0))]));
    var tmp_35 = new ULongArray(tmp$ret$35);
    var tmp$ret$36;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$36 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-1610612736, 1836193738)), _ULong___init__impl__c78o9k(new Long(-2042880164, 2))]));
    var tmp_36 = new ULongArray(tmp$ret$36);
    var tmp$ret$37;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$37 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1073741824, 1182068202)), _ULong___init__impl__c78o9k(new Long(1046034848, 25))]));
    var tmp_37 = new ULongArray(tmp$ret$37);
    var tmp$ret$38;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$38 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-2147483648, 1083263782)), _ULong___init__impl__c78o9k(new Long(1870413893, 252))]));
    var tmp_38 = new ULongArray(tmp$ret$38);
    var tmp$ret$39;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$39 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 95219585)), _ULong___init__impl__c78o9k(new Long(1524269751, 2524))]));
    var tmp_39 = new ULongArray(tmp$ret$39);
    var tmp$ret$40;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$40 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 952195850)), _ULong___init__impl__c78o9k(new Long(-1937171674, 25243))]));
    var tmp_40 = new ULongArray(tmp$ret$40);
    var tmp$ret$41;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$41 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 932023908)), _ULong___init__impl__c78o9k(new Long(2103119744, 252435))]));
    var tmp_41 = new ULongArray(tmp$ret$41);
    var tmp$ret$42;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$42 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 730304488)), _ULong___init__impl__c78o9k(new Long(-443639036, 2524354))]));
    var tmp_42 = new ULongArray(tmp$ret$42);
    var tmp$ret$43;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$43 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 860593936)), _ULong___init__impl__c78o9k(new Long(-141423061, 25243548))]));
    var tmp_43 = new ULongArray(tmp$ret$43);
    var tmp$ret$44;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$44 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 16004768)), _ULong___init__impl__c78o9k(new Long(-1414230606, 252435489))]));
    var tmp_44 = new ULongArray(tmp$ret$44);
    var tmp$ret$45;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$45 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 160047680)), _ULong___init__impl__c78o9k(new Long(-1257404172, 376871248)), _ULong___init__impl__c78o9k(new Long(1, 0))]));
    var tmp_45 = new ULongArray(tmp$ret$45);
    var tmp$ret$46;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$46 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1600476800)), _ULong___init__impl__c78o9k(new Long(310860168, 1621228839)), _ULong___init__impl__c78o9k(new Long(11, 0))]));
    var tmp_46 = new ULongArray(tmp$ret$46);
    var tmp$ret$47;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$47 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 972382464)), _ULong___init__impl__c78o9k(new Long(-1186365609, 1179902854)), _ULong___init__impl__c78o9k(new Long(117, 0))]));
    var tmp_47 = new ULongArray(tmp$ret$47);
    var tmp$ret$48;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$48 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1133890048)), _ULong___init__impl__c78o9k(new Long(1021245802, 1061610307)), _ULong___init__impl__c78o9k(new Long(1175, 0))]));
    var tmp_48 = new ULongArray(tmp$ret$48);
    var tmp$ret$49;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$49 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 601482240)), _ULong___init__impl__c78o9k(new Long(1622523433, 2026168480)), _ULong___init__impl__c78o9k(new Long(11754, 0))]));
    var tmp_49 = new ULongArray(tmp$ret$49);
    var tmp$ret$50;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$50 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1719855104)), _ULong___init__impl__c78o9k(new Long(-954634852, 934331971)), _ULong___init__impl__c78o9k(new Long(117549, 0))]));
    var tmp_50 = new ULongArray(tmp$ret$50);
    var tmp$ret$51;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$51 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 18681856)), _ULong___init__impl__c78o9k(new Long(-956413920, 753385125)), _ULong___init__impl__c78o9k(new Long(1175494, 0))]));
    var tmp_51 = new ULongArray(tmp$ret$51);
    var tmp$ret$52;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$52 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 186818560)), _ULong___init__impl__c78o9k(new Long(-974204608, 1091400313)), _ULong___init__impl__c78o9k(new Long(11754943, 0))]));
    var tmp_52 = new ULongArray(tmp$ret$52);
    var tmp$ret$53;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$53 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1868185600)), _ULong___init__impl__c78o9k(new Long(-1152111488, 176584897)), _ULong___init__impl__c78o9k(new Long(117549435, 0))]));
    var tmp_53 = new ULongArray(tmp$ret$53);
    var tmp$ret$54;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$54 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1501986816)), _ULong___init__impl__c78o9k(new Long(1363787016, 1765848977)), _ULong___init__impl__c78o9k(new Long(1175494350, 0))]));
    var tmp_54 = new ULongArray(tmp$ret$54);
    var tmp$ret$55;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$55 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 2134966272)), _ULong___init__impl__c78o9k(new Long(752968278, 478620589)), _ULong___init__impl__c78o9k(new Long(-1129958380, 2))]));
    var tmp_55 = new ULongArray(tmp$ret$55);
    var tmp$ret$56;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$56 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 2022309888)), _ULong___init__impl__c78o9k(new Long(-1060251803, 491238595)), _ULong___init__impl__c78o9k(new Long(1585318090, 27))]));
    var tmp_56 = new ULongArray(tmp$ret$56);
    var tmp$ret$57;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$57 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 895746048)), _ULong___init__impl__c78o9k(new Long(-2012583429, 617418661)), _ULong___init__impl__c78o9k(new Long(-1326688282, 273))]));
    var tmp_57 = new ULongArray(tmp$ret$57);
    var tmp$ret$58;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$58 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 367525888)), _ULong___init__impl__c78o9k(new Long(1349002194, 1879219319)), _ULong___init__impl__c78o9k(new Long(-381980930, 2736))]));
    var tmp_58 = new ULongArray(tmp$ret$58);
    var tmp$ret$59;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$59 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1527775232)), _ULong___init__impl__c78o9k(new Long(605120053, 1612324009)), _ULong___init__impl__c78o9k(new Long(475158004, 27369))]));
    var tmp_59 = new ULongArray(tmp$ret$59);
    var tmp$ret$60;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$60 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 245366784)), _ULong___init__impl__c78o9k(new Long(1756233241, 1090854555)), _ULong___init__impl__c78o9k(new Long(456612751, 273691))]));
    var tmp_60 = new ULongArray(tmp$ret$60);
    var tmp$ret$61;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$61 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 306184192)), _ULong___init__impl__c78o9k(new Long(382463227, 171127314)), _ULong___init__impl__c78o9k(new Long(271160219, 2736911))]));
    var tmp_61 = new ULongArray(tmp$ret$61);
    var tmp$ret$62;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$62 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 914358272)), _ULong___init__impl__c78o9k(new Long(-470335025, 1711273140)), _ULong___init__impl__c78o9k(new Long(-1583365106, 27369110))]));
    var tmp_62 = new ULongArray(tmp$ret$62);
    var tmp$ret$63;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$63 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 553648128)), _ULong___init__impl__c78o9k(new Long(-408382950, 2080345872)), _ULong___init__impl__c78o9k(new Long(1346218131, 273691106))]));
    var tmp_63 = new ULongArray(tmp$ret$63);
    var tmp$ret$64;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$64 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1241513984)), _ULong___init__impl__c78o9k(new Long(211137798, 1476105897)), _ULong___init__impl__c78o9k(new Long(577279431, 589427415)), _ULong___init__impl__c78o9k(new Long(1, 0))]));
    var tmp_64 = new ULongArray(tmp$ret$64);
    var tmp$ret$65;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$65 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1677721600)), _ULong___init__impl__c78o9k(new Long(2111377985, 1876157082)), _ULong___init__impl__c78o9k(new Long(1477827020, 1599306855)), _ULong___init__impl__c78o9k(new Long(12, 0))]));
    var tmp_65 = new ULongArray(tmp$ret$65);
    var tmp$ret$66;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$66 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1744830464)), _ULong___init__impl__c78o9k(new Long(-361056623, 1581701640)), _ULong___init__impl__c78o9k(new Long(1893368320, 960683017)), _ULong___init__impl__c78o9k(new Long(127, 0))]));
    var tmp_66 = new ULongArray(tmp$ret$66);
    var tmp$ret$67;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$67 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 268435456)), _ULong___init__impl__c78o9k(new Long(684401074, 784630873)), _ULong___init__impl__c78o9k(new Long(1753814023, 1016895582)), _ULong___init__impl__c78o9k(new Long(1274, 0))]));
    var tmp_67 = new ULongArray(tmp$ret$67);
    var tmp$ret$68;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$68 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 536870912)), _ULong___init__impl__c78o9k(new Long(-1745923851, 1403857787)), _ULong___init__impl__c78o9k(new Long(358271049, 1579021232)), _ULong___init__impl__c78o9k(new Long(12744, 0))]));
    var tmp_68 = new ULongArray(tmp$ret$68);
    var tmp$ret$69;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$69 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1073741824)), _ULong___init__impl__c78o9k(new Long(-279369324, 1153675987)), _ULong___init__impl__c78o9k(new Long(-712256800, 757826784)), _ULong___init__impl__c78o9k(new Long(127447, 0))]));
    var tmp_69 = new ULongArray(tmp$ret$69);
    var tmp$ret$70;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$70 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1501274061, 799341639)), _ULong___init__impl__c78o9k(new Long(1467366597, 1135816904)), _ULong___init__impl__c78o9k(new Long(1274473, 0))]));
    var tmp_70 = new ULongArray(tmp$ret$70);
    var tmp$ret$71;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$71 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(2127838722, 1550965449)), _ULong___init__impl__c78o9k(new Long(1788764085, 620750803)), _ULong___init__impl__c78o9k(new Long(12744735, 0))]));
    var tmp_71 = new ULongArray(tmp$ret$71);
    var tmp$ret$72;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$72 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-196449260, 477268958)), _ULong___init__impl__c78o9k(new Long(707771673, 1912540738)), _ULong___init__impl__c78o9k(new Long(127447352, 0))]));
    var tmp_72 = new ULongArray(tmp$ret$72);
    var tmp$ret$73;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$73 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-1964492600, 477722293)), _ULong___init__impl__c78o9k(new Long(-1512217860, 1945538197)), _ULong___init__impl__c78o9k(new Long(1274473528, 0))]));
    var tmp_73 = new ULongArray(tmp$ret$73);
    var tmp$ret$74;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$74 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1829910480, 482255639)), _ULong___init__impl__c78o9k(new Long(2057690586, 128029144)), _ULong___init__impl__c78o9k(new Long(-140166599, 2))]));
    var tmp_74 = new ULongArray(tmp$ret$74);
    var tmp$ret$75;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$75 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1119235616, 527589098)), _ULong___init__impl__c78o9k(new Long(-897930618, 1280291444)), _ULong___init__impl__c78o9k(new Long(-1401665990, 29))]));
    var tmp_75 = new ULongArray(tmp$ret$75);
    var tmp$ret$76;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$76 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-1692545728, 980923686)), _ULong___init__impl__c78o9k(new Long(-389371586, 2065496207)), _ULong___init__impl__c78o9k(new Long(-1131758007, 296))]));
    var tmp_76 = new ULongArray(tmp$ret$76);
    var tmp$ret$77;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$77 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(254411904, 1219302274)), _ULong___init__impl__c78o9k(new Long(401251440, 1327609247)), _ULong___init__impl__c78o9k(new Long(1567321827, 2967))]));
    var tmp_77 = new ULongArray(tmp$ret$77);
    var tmp$ret$78;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$78 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-1750848256, 1455604500)), _ULong___init__impl__c78o9k(new Long(-282452891, 391190582)), _ULong___init__impl__c78o9k(new Long(-1506650908, 29673))]));
    var tmp_78 = new ULongArray(tmp$ret$78);
    var tmp$ret$79;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$79 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-328613376, 1671143117)), _ULong___init__impl__c78o9k(new Long(1470438392, 1764422181)), _ULong___init__impl__c78o9k(new Long(2113360105, 296736))]));
    var tmp_79 = new ULongArray(tmp$ret$79);
    var tmp$ret$80;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$80 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1008833536, 1679045643)), _ULong___init__impl__c78o9k(new Long(1819482039, 464352629)), _ULong___init__impl__c78o9k(new Long(-341235422, 2967364))]));
    var tmp_80 = new ULongArray(tmp$ret$80);
    var tmp$ret$81;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$81 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1498400768, 1758070896)), _ULong___init__impl__c78o9k(new Long(1014951213, 348558998)), _ULong___init__impl__c78o9k(new Long(882613078, 29673649))]));
    var tmp_81 = new ULongArray(tmp$ret$81);
    var tmp$ret$82;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$82 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(2099105792, 400839779)), _ULong___init__impl__c78o9k(new Long(1559577546, 1338106334)), _ULong___init__impl__c78o9k(new Long(236196189, 296736492))]));
    var tmp_82 = new ULongArray(tmp$ret$82);
    var tmp$ret$83;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$83 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-483778560, 1860914146)), _ULong___init__impl__c78o9k(new Long(-1584093723, 496161455)), _ULong___init__impl__c78o9k(new Long(-1933005400, 819881272)), _ULong___init__impl__c78o9k(new Long(1, 0))]));
    var tmp_83 = new ULongArray(tmp$ret$83);
    var tmp$ret$84;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$84 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-542818304, 1429272284)), _ULong___init__impl__c78o9k(new Long(1338931962, 666647260)), _ULong___init__impl__c78o9k(new Long(2144782482, 1756361781)), _ULong___init__impl__c78o9k(new Long(13, 0))]));
    var tmp_84 = new ULongArray(tmp$ret$84);
    var tmp$ret$85;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$85 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-1133215744, 1407820960)), _ULong___init__impl__c78o9k(new Long(504417738, 224021659)), _ULong___init__impl__c78o9k(new Long(-27011657, 383748630)), _ULong___init__impl__c78o9k(new Long(138, 0))]));
    var tmp_85 = new ULongArray(tmp$ret$85);
    var tmp$ret$86;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$86 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1552744448, 1193307719)), _ULong___init__impl__c78o9k(new Long(749210090, 92732943)), _ULong___init__impl__c78o9k(new Long(-270116569, 1690002661)), _ULong___init__impl__c78o9k(new Long(1381, 0))]));
    var tmp_86 = new ULongArray(tmp$ret$86);
    var tmp$ret$87;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$87 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-1652424704, 1195658953)), _ULong___init__impl__c78o9k(new Long(-1097833687, 927329431)), _ULong___init__impl__c78o9k(new Long(1593801606, 1867641083)), _ULong___init__impl__c78o9k(new Long(13817, 0))]));
    var tmp_87 = new ULongArray(tmp$ret$87);
    var tmp$ret$88;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$88 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(655622144, 1219171296)), _ULong___init__impl__c78o9k(new Long(1906565023, 683359725)), _ULong___init__impl__c78o9k(new Long(-1241853120, 1496541649)), _ULong___init__impl__c78o9k(new Long(138178, 0))]));
    var tmp_88 = new ULongArray(tmp$ret$88);
    var tmp$ret$89;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$89 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-2033713152, 1454294721)), _ULong___init__impl__c78o9k(new Long(1885781051, 391146310)), _ULong___init__impl__c78o9k(new Long(466370691, 2080514609)), _ULong___init__impl__c78o9k(new Long(1381786, 0))]));
    var tmp_89 = new ULongArray(tmp$ret$89);
    var tmp$ret$90;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$90 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1137704960, 1658045327)), _ULong___init__impl__c78o9k(new Long(1677941332, 1763979456)), _ULong___init__impl__c78o9k(new Long(368739615, 1477793259)), _ULong___init__impl__c78o9k(new Long(13817869, 0))]));
    var tmp_90 = new ULongArray(tmp$ret$90);
    var tmp$ret$91;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$91 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-1507852288, 1548067736)), _ULong___init__impl__c78o9k(new Long(-400455857, 459925379)), _ULong___init__impl__c78o9k(new Long(-607571138, 1893030702)), _ULong___init__impl__c78o9k(new Long(138178696, 0))]));
    var tmp_91 = new ULongArray(tmp$ret$91);
    var tmp$ret$92;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$92 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(2101346304, 448291830)), _ULong___init__impl__c78o9k(new Long(290408733, 304286503)), _ULong___init__impl__c78o9k(new Long(-1780744082, 1750437844)), _ULong___init__impl__c78o9k(new Long(1381786968, 0))]));
    var tmp_92 = new ULongArray(tmp$ret$92);
    var tmp$ret$93;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$93 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-461373440, 187951008)), _ULong___init__impl__c78o9k(new Long(-1390879964, 895381382)), _ULong___init__impl__c78o9k(new Long(-627571635, 324509261)), _ULong___init__impl__c78o9k(new Long(932967800, 3))]));
    var tmp_93 = new ULongArray(tmp$ret$93);
    var tmp$ret$94;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$94 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-318767104, 1879510088)), _ULong___init__impl__c78o9k(new Long(-1023897752, 363879234)), _ULong___init__impl__c78o9k(new Long(-1980749050, 1097608970)), _ULong___init__impl__c78o9k(new Long(739743409, 32))]));
    var tmp_94 = new ULongArray(tmp$ret$94);
    var tmp$ret$95;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$95 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1107296256, 1615231705)), _ULong___init__impl__c78o9k(new Long(-1649042920, 1491308699)), _ULong___init__impl__c78o9k(new Long(1667345981, 238671465)), _ULong___init__impl__c78o9k(new Long(-1192500497, 321))]));
    var tmp_95 = new ULongArray(tmp$ret$95);
    var tmp$ret$96;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$96 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-1811939328, 1119931516)), _ULong___init__impl__c78o9k(new Long(689439991, 2028185108)), _ULong___init__impl__c78o9k(new Long(-506409368, 239231005)), _ULong___init__impl__c78o9k(new Long(959896919, 3217))]));
    var tmp_96 = new ULongArray(tmp$ret$96);
    var tmp$ret$97;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$97 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-939524096, 461896925)), _ULong___init__impl__c78o9k(new Long(-1695534677, 954498249)), _ULong___init__impl__c78o9k(new Long(-769126375, 244826410)), _ULong___init__impl__c78o9k(new Long(1009034599, 32172))]));
    var tmp_97 = new ULongArray(tmp$ret$97);
    var tmp$ret$98;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$98 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-805306368, 324001961)), _ULong___init__impl__c78o9k(new Long(224522416, 955047904)), _ULong___init__impl__c78o9k(new Long(898670846, 300780460)), _ULong___init__impl__c78o9k(new Long(1500411399, 321722))]));
    var tmp_98 = new ULongArray(tmp$ret$98);
    var tmp$ret$99;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$99 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(536870912, 1092535970)), _ULong___init__impl__c78o9k(new Long(-2049743135, 960544448)), _ULong___init__impl__c78o9k(new Long(396773872, 860320954)), _ULong___init__impl__c78o9k(new Long(2119212103, 3217223))]));
    var tmp_99 = new ULongArray(tmp$ret$99);
    var tmp$ret$100;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$100 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1073741824, 187941461)), _ULong___init__impl__c78o9k(new Long(977405135, 1015509893)), _ULong___init__impl__c78o9k(new Long(-327228572, 13274948)), _ULong___init__impl__c78o9k(new Long(-282715446, 32172234))]));
    var tmp_100 = new ULongArray(tmp$ret$100);
    var tmp$ret$101;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$101 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-2147483648, 1879414612)), _ULong___init__impl__c78o9k(new Long(1184116758, 1565164340)), _ULong___init__impl__c78o9k(new Long(1022681580, 132749489)), _ULong___init__impl__c78o9k(new Long(1467812836, 321722349))]));
    var tmp_101 = new ULongArray(tmp$ret$101);
    var tmp$ret$102;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$102 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(0, 1614276941)), _ULong___init__impl__c78o9k(new Long(-1043734300, 619257866)), _ULong___init__impl__c78o9k(new Long(1636881215, 1327494892)), _ULong___init__impl__c78o9k(new Long(1793226472, 1069739845)), _ULong___init__impl__c78o9k(new Long(1, 0))]));
    var tmp_102 = new ULongArray(tmp$ret$102);
    var tmp$ret$103;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$103 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(0, 1110383874)), _ULong___init__impl__c78o9k(new Long(-1847408401, 1897611371)), _ULong___init__impl__c78o9k(new Long(-811057032, 390047035)), _ULong___init__impl__c78o9k(new Long(752395542, 2107463862)), _ULong___init__impl__c78o9k(new Long(14, 0))]));
    var tmp_103 = new ULongArray(tmp$ret$103);
    var tmp$ret$104;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$104 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(0, 366420500)), _ULong___init__impl__c78o9k(new Long(-1294214821, 1796244531)), _ULong___init__impl__c78o9k(new Long(479364280, 1752986710)), _ULong___init__impl__c78o9k(new Long(-1065979171, 1747285789)), _ULong___init__impl__c78o9k(new Long(149, 0))]));
    var tmp_104 = new ULongArray(tmp$ret$104);
    var tmp$ret$105;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$105 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(0, 1516721352)), _ULong___init__impl__c78o9k(new Long(-57246321, 782576132)), _ULong___init__impl__c78o9k(new Long(498675512, 349997917)), _ULong___init__impl__c78o9k(new Long(-2069857110, 292988713)), _ULong___init__impl__c78o9k(new Long(1498, 0))]));
    var tmp_105 = new ULongArray(tmp$ret$105);
    var tmp$ret$106;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$106 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(0, 134827984)), _ULong___init__impl__c78o9k(new Long(-572463203, 1383310385)), _ULong___init__impl__c78o9k(new Long(691787827, 1352495523)), _ULong___init__impl__c78o9k(new Long(776265381, 782403487)), _ULong___init__impl__c78o9k(new Long(14981, 0))]));
    var tmp_106 = new ULongArray(tmp$ret$106);
    var tmp$ret$107;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$107 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(0, 1348279840)), _ULong___init__impl__c78o9k(new Long(-1429664734, 948201970)), _ULong___init__impl__c78o9k(new Long(-1672056316, 640053343)), _ULong___init__impl__c78o9k(new Long(-827280776, 1381583927)), _ULong___init__impl__c78o9k(new Long(149813, 0))]));
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    tmp_6.pn_1 = [tmp_7, tmp_8, tmp_9, tmp_10, tmp_11, tmp_12, tmp_13, tmp_14, tmp_15, tmp_16, tmp_17, tmp_18, tmp_19, tmp_20, tmp_21, tmp_22, tmp_23, tmp_24, tmp_25, tmp_26, tmp_27, tmp_28, tmp_29, tmp_30, tmp_31, tmp_32, tmp_33, tmp_34, tmp_35, tmp_36, tmp_37, tmp_38, tmp_39, tmp_40, tmp_41, tmp_42, tmp_43, tmp_44, tmp_45, tmp_46, tmp_47, tmp_48, tmp_49, tmp_50, tmp_51, tmp_52, tmp_53, tmp_54, tmp_55, tmp_56, tmp_57, tmp_58, tmp_59, tmp_60, tmp_61, tmp_62, tmp_63, tmp_64, tmp_65, tmp_66, tmp_67, tmp_68, tmp_69, tmp_70, tmp_71, tmp_72, tmp_73, tmp_74, tmp_75, tmp_76, tmp_77, tmp_78, tmp_79, tmp_80, tmp_81, tmp_82, tmp_83, tmp_84, tmp_85, tmp_86, tmp_87, tmp_88, tmp_89, tmp_90, tmp_91, tmp_92, tmp_93, tmp_94, tmp_95, tmp_96, tmp_97, tmp_98, tmp_99, tmp_100, tmp_101, tmp_102, tmp_103, tmp_104, tmp_105, tmp_106, new ULongArray(tmp$ret$107)];
  }
  protoOf(BigInteger63Arithmetic).jm = function () {
    return this.zm_1;
  };
  protoOf(BigInteger63Arithmetic).km = function () {
    return this.an_1;
  };
  protoOf(BigInteger63Arithmetic).lm = function () {
    return this.bn_1;
  };
  protoOf(BigInteger63Arithmetic).mm = function () {
    return this.cn_1;
  };
  protoOf(BigInteger63Arithmetic).cr = function (value) {
    var x = value;
    var y;
    var n = 63;
    // Inline function 'kotlin.ULong.shr' call
    var tmp0_shr = x;
    y = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_shr).e7(32));
    if (!equals(y, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      n = n - 32 | 0;
      x = y;
    }
    // Inline function 'kotlin.ULong.shr' call
    var tmp1_shr = x;
    y = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_shr).e7(16));
    if (!equals(y, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      n = n - 16 | 0;
      x = y;
    }
    // Inline function 'kotlin.ULong.shr' call
    var tmp2_shr = x;
    y = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp2_shr).e7(8));
    if (!equals(y, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      n = n - 8 | 0;
      x = y;
    }
    // Inline function 'kotlin.ULong.shr' call
    var tmp3_shr = x;
    y = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp3_shr).e7(4));
    if (!equals(y, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      n = n - 4 | 0;
      x = y;
    }
    // Inline function 'kotlin.ULong.shr' call
    var tmp4_shr = x;
    y = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_shr).e7(2));
    if (!equals(y, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      n = n - 2 | 0;
      x = y;
    }
    // Inline function 'kotlin.ULong.shr' call
    var tmp5_shr = x;
    y = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp5_shr).e7(1));
    if (!equals(y, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      return n - 2 | 0;
    }
    var tmp = n;
    // Inline function 'kotlin.ULong.toInt' call
    var tmp6_toInt = x;
    return tmp - _ULong___get_data__impl__fggpzb(tmp6_toInt).b7() | 0;
  };
  protoOf(BigInteger63Arithmetic).go = function (value) {
    if (isZero(value, this)) {
      return 0;
    }
    var start = (_ULongArray___get_size__impl__ju6dtr(value) - this.vq(value) | 0) - 1 | 0;
    var mostSignificant = ULongArray__get_impl_pr71q9(value, start);
    return this.dr(mostSignificant) + imul(start, 63) | 0;
  };
  protoOf(BigInteger63Arithmetic).dr = function (value) {
    return 63 - this.cr(value) | 0;
  };
  protoOf(BigInteger63Arithmetic).qn = function (bigInteger) {
    var correctedSize = _ULongArray___get_size__impl__ju6dtr(bigInteger) - this.vq(bigInteger) | 0;
    if (correctedSize === 0) {
      return this.zm_1;
    }
    if (_ULongArray___get_size__impl__ju6dtr(bigInteger) === correctedSize) {
      return bigInteger;
    }
    if ((_ULongArray___get_size__impl__ju6dtr(bigInteger) - correctedSize | 0) > 1000) {
      println('RLZ original array : ' + _ULongArray___get_size__impl__ju6dtr(bigInteger) + ' contains: ' + ((_ULongArray___get_size__impl__ju6dtr(bigInteger) - correctedSize | 0) - 1 | 0) + ' zeros');
    }
    // Inline function 'kotlin.collections.copyOfRange' call
    return _ULongArray___init__impl__twm1l3(copyOfRange_0(_ULongArray___get_storage__impl__28e64j(bigInteger), 0, correctedSize));
  };
  protoOf(BigInteger63Arithmetic).vq = function (bigInteger) {
    var lastNonEmptyIndex = _ULongArray___get_size__impl__ju6dtr(bigInteger) - 1 | 0;
    if (lastNonEmptyIndex <= 0) {
      return 0;
    }
    var element = ULongArray__get_impl_pr71q9(bigInteger, lastNonEmptyIndex);
    while (equals(element, _ULong___init__impl__c78o9k(new Long(0, 0))) ? lastNonEmptyIndex > 0 : false) {
      lastNonEmptyIndex = lastNonEmptyIndex - 1 | 0;
      element = ULongArray__get_impl_pr71q9(bigInteger, lastNonEmptyIndex);
    }
    if (equals(ULongArray__get_impl_pr71q9(bigInteger, lastNonEmptyIndex), _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      lastNonEmptyIndex = lastNonEmptyIndex - 1 | 0;
    }
    return (_ULongArray___get_size__impl__ju6dtr(bigInteger) - lastNonEmptyIndex | 0) - 1 | 0;
  };
  protoOf(BigInteger63Arithmetic).er = function (operand, places) {
    if (isZero(operand, this)) {
      return operand;
    }
    if (places === 0) {
      return operand;
    }
    if (ULongArray__isEmpty_impl_c3yngu(operand)) {
      return this.zm_1;
    }
    var leadingZeroWords = this.vq(operand);
    if (_ULongArray___get_size__impl__ju6dtr(operand) === leadingZeroWords) {
      return this.zm_1;
    }
    var originalSize = _ULongArray___get_size__impl__ju6dtr(operand) - leadingZeroWords | 0;
    var leadingZeros = this.cr(ULongArray__get_impl_pr71q9(operand, originalSize - 1 | 0));
    var shiftWords = places / this.en_1 | 0;
    var shiftBits = places % this.en_1 | 0;
    var tmp;
    if (shiftBits > leadingZeros) {
      tmp = shiftWords + 1 | 0;
    } else {
      tmp = shiftWords;
    }
    var wordsNeeded = tmp;
    if (shiftBits === 0) {
      // Inline function 'kotlin.ULongArray' call
      var tmp_0 = 0;
      var tmp_1 = originalSize + wordsNeeded | 0;
      var tmp_2 = longArray(tmp_1);
      while (tmp_0 < tmp_1) {
        var tmp_3 = tmp_0;
        // Inline function 'kotlin.ULong.toLong' call
        // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.shiftLeft.<anonymous>' call
        var tmp0_toLong = (0 <= tmp_3 ? tmp_3 < shiftWords : false) ? _ULong___init__impl__c78o9k(new Long(0, 0)) : ULongArray__get_impl_pr71q9(operand, tmp_3 - shiftWords | 0);
        tmp_2[tmp_3] = _ULong___get_data__impl__fggpzb(tmp0_toLong);
        tmp_0 = tmp_0 + 1 | 0;
      }
      return _ULongArray___init__impl__twm1l3(tmp_2);
    }
    // Inline function 'kotlin.ULongArray' call
    var tmp_4 = 0;
    var tmp_5 = originalSize + wordsNeeded | 0;
    var tmp_6 = longArray(tmp_5);
    while (tmp_4 < tmp_5) {
      var tmp_7 = tmp_4;
      // Inline function 'kotlin.ULong.toLong' call
      // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.shiftLeft.<anonymous>' call
      var tmp_8;
      if (0 <= tmp_7 ? tmp_7 < shiftWords : false) {
        tmp_8 = _ULong___init__impl__c78o9k(new Long(0, 0));
      } else {
        if (tmp_7 === shiftWords) {
          // Inline function 'kotlin.ULong.and' call
          // Inline function 'kotlin.ULong.shl' call
          var tmp0_shl = ULongArray__get_impl_pr71q9(operand, tmp_7 - shiftWords | 0);
          var tmp1_and = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_shl).f7(shiftBits));
          var tmp2_and = BigInteger63Arithmetic_getInstance().gn_1;
          tmp_8 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_and).e6(_ULong___get_data__impl__fggpzb(tmp2_and)));
        } else {
          var containsLower = shiftWords + 1 | 0;
          if (tmp_7 < (originalSize + shiftWords | 0) ? containsLower <= tmp_7 : false) {
            // Inline function 'kotlin.ULong.or' call
            // Inline function 'kotlin.ULong.and' call
            // Inline function 'kotlin.ULong.shl' call
            var tmp3_shl = ULongArray__get_impl_pr71q9(operand, tmp_7 - shiftWords | 0);
            var tmp4_and = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp3_shl).f7(shiftBits));
            var tmp5_and = BigInteger63Arithmetic_getInstance().gn_1;
            var tmp8_or = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_and).e6(_ULong___get_data__impl__fggpzb(tmp5_and)));
            // Inline function 'kotlin.ULong.shr' call
            var tmp6_shr = ULongArray__get_impl_pr71q9(operand, (tmp_7 - shiftWords | 0) - 1 | 0);
            var tmp7_shr = BigInteger63Arithmetic_getInstance().en_1 - shiftBits | 0;
            var tmp9_or = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp6_shr).e7(tmp7_shr));
            tmp_8 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp8_or).te(_ULong___get_data__impl__fggpzb(tmp9_or)));
          } else {
            if (tmp_7 === ((originalSize + wordsNeeded | 0) - 1 | 0)) {
              // Inline function 'kotlin.ULong.shr' call
              var tmp10_shr = ULongArray__get_impl_pr71q9(operand, tmp_7 - wordsNeeded | 0);
              var tmp11_shr = BigInteger63Arithmetic_getInstance().en_1 - shiftBits | 0;
              tmp_8 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp10_shr).e7(tmp11_shr));
            } else {
              throw RuntimeException_init_$Create$('Invalid case ' + tmp_7);
            }
          }
        }
      }
      var tmp0_toLong_0 = tmp_8;
      tmp_6[tmp_7] = _ULong___get_data__impl__fggpzb(tmp0_toLong_0);
      tmp_4 = tmp_4 + 1 | 0;
    }
    return _ULongArray___init__impl__twm1l3(tmp_6);
  };
  protoOf(BigInteger63Arithmetic).fr = function (operand, places) {
    if (ULongArray__isEmpty_impl_c3yngu(operand) ? true : places === 0) {
      return operand;
    }
    var leadingZeroWords = this.vq(operand);
    var realOperandSize = _ULongArray___get_size__impl__ju6dtr(operand) - leadingZeroWords | 0;
    var shiftBits = places % this.en_1 | 0;
    var wordsToDiscard = places / this.en_1 | 0;
    if (wordsToDiscard >= realOperandSize) {
      return this.zm_1;
    }
    if (shiftBits === 0) {
      // Inline function 'kotlin.collections.copyOfRange' call
      var tmp0_copyOfRange = realOperandSize - wordsToDiscard | 0;
      _ULongArray___init__impl__twm1l3(copyOfRange_0(_ULongArray___get_storage__impl__28e64j(operand), tmp0_copyOfRange, realOperandSize));
    }
    if (realOperandSize > 1 ? (realOperandSize - wordsToDiscard | 0) === 1 : false) {
      // Inline function 'kotlin.ulongArrayOf' call
      var tmp$ret$1;
      // Inline function 'kotlin.ULong.shr' call
      var tmp1_shr = ULongArray__get_impl_pr71q9(operand, realOperandSize - 1 | 0);
      tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_shr).e7(shiftBits));
      return _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$1]));
    }
    var newLength = realOperandSize - wordsToDiscard | 0;
    if (newLength === 0) {
      return this.zm_1;
    }
    // Inline function 'kotlin.ULongArray' call
    var tmp = 0;
    var tmp_0 = realOperandSize - wordsToDiscard | 0;
    var tmp_1 = longArray(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      // Inline function 'kotlin.ULong.toLong' call
      // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.shiftRight.<anonymous>' call
      var tmp_3;
      if (0 <= tmp_2 ? tmp_2 < ((realOperandSize - 1 | 0) - wordsToDiscard | 0) : false) {
        // Inline function 'kotlin.ULong.or' call
        // Inline function 'kotlin.ULong.shr' call
        var tmp0_shr = ULongArray__get_impl_pr71q9(operand, tmp_2 + wordsToDiscard | 0);
        var tmp5_or = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_shr).e7(shiftBits));
        // Inline function 'kotlin.ULong.and' call
        // Inline function 'kotlin.ULong.shl' call
        var tmp1_shl = ULongArray__get_impl_pr71q9(operand, (tmp_2 + wordsToDiscard | 0) + 1 | 0);
        var tmp2_shl = BigInteger63Arithmetic_getInstance().en_1 - shiftBits | 0;
        var tmp3_and = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_shl).f7(tmp2_shl));
        var tmp4_and = BigInteger63Arithmetic_getInstance().gn_1;
        var tmp6_or = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp3_and).e6(_ULong___get_data__impl__fggpzb(tmp4_and)));
        tmp_3 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp5_or).te(_ULong___get_data__impl__fggpzb(tmp6_or)));
      } else if (tmp_2 === ((realOperandSize - 1 | 0) - wordsToDiscard | 0)) {
        // Inline function 'kotlin.ULong.shr' call
        var tmp7_shr = ULongArray__get_impl_pr71q9(operand, tmp_2 + wordsToDiscard | 0);
        tmp_3 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp7_shr).e7(shiftBits));
      } else {
        throw RuntimeException_init_$Create$('Invalid case ' + tmp_2);
      }
      var tmp0_toLong = tmp_3;
      tmp_1[tmp_2] = _ULong___get_data__impl__fggpzb(tmp0_toLong);
      tmp = tmp + 1 | 0;
    }
    var result = _ULongArray___init__impl__twm1l3(tmp_1);
    return result;
  };
  protoOf(BigInteger63Arithmetic).gr = function (first, second, firstStart, secondStart) {
    if (firstStart > secondStart) {
      return 1;
    }
    if (secondStart > firstStart) {
      return -1;
    }
    var counter = firstStart - 1 | 0;
    var firstIsLarger = false;
    var bothAreEqual = true;
    $l$loop_0: while (counter >= 0) {
      // Inline function 'kotlin.ULong.compareTo' call
      var tmp0_compareTo = ULongArray__get_impl_pr71q9(first, counter);
      var tmp1_compareTo = ULongArray__get_impl_pr71q9(second, counter);
      if (ulongCompare(_ULong___get_data__impl__fggpzb(tmp0_compareTo), _ULong___get_data__impl__fggpzb(tmp1_compareTo)) > 0) {
        firstIsLarger = true;
        bothAreEqual = false;
        break $l$loop_0;
      }
      // Inline function 'kotlin.ULong.compareTo' call
      var tmp2_compareTo = ULongArray__get_impl_pr71q9(first, counter);
      var tmp3_compareTo = ULongArray__get_impl_pr71q9(second, counter);
      if (ulongCompare(_ULong___get_data__impl__fggpzb(tmp2_compareTo), _ULong___get_data__impl__fggpzb(tmp3_compareTo)) < 0) {
        firstIsLarger = false;
        bothAreEqual = false;
        break $l$loop_0;
      }
      counter = counter - 1 | 0;
    }
    if (bothAreEqual) {
      return 0;
    }
    if (firstIsLarger) {
      return 1;
    } else {
      return -1;
    }
  };
  protoOf(BigInteger63Arithmetic).wm = function (first, second) {
    var firstStart = _ULongArray___get_size__impl__ju6dtr(first) - this.vq(first) | 0;
    var secondStart = _ULongArray___get_size__impl__ju6dtr(second) - this.vq(second) | 0;
    return this.gr(first, second, firstStart, secondStart);
  };
  protoOf(BigInteger63Arithmetic).hr = function (resultArray, resultArrayStart, first, second) {
    if (isZero(first, this)) {
      // Inline function 'kotlin.collections.copyInto' call
      var tmp0_copyInto = _ULongArray___get_size__impl__ju6dtr(first);
      // Inline function 'kotlin.collections.copyInto' call
      var tmp0_copyInto_0 = _ULongArray___get_storage__impl__28e64j(first);
      var tmp1_copyInto = _ULongArray___get_storage__impl__28e64j(resultArray);
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp = tmp0_copyInto_0;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      arrayCopy(tmp, tmp1_copyInto, resultArrayStart, 0, tmp0_copyInto);
      return Unit_getInstance();
    }
    if (isZero(second, this)) {
      // Inline function 'kotlin.collections.copyInto' call
      var tmp1_copyInto_0 = _ULongArray___get_size__impl__ju6dtr(second);
      // Inline function 'kotlin.collections.copyInto' call
      var tmp0_copyInto_1 = _ULongArray___get_storage__impl__28e64j(second);
      var tmp1_copyInto_1 = _ULongArray___get_storage__impl__28e64j(resultArray);
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp_0 = tmp0_copyInto_1;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      arrayCopy(tmp_0, tmp1_copyInto_1, resultArrayStart, 0, tmp1_copyInto_0);
      return Unit_getInstance();
    }
    var firstStart = _ULongArray___get_size__impl__ju6dtr(first) - this.vq(first) | 0;
    var secondStart = _ULongArray___get_size__impl__ju6dtr(second) - this.vq(second) | 0;
    var tmp_1;
    if (firstStart > secondStart) {
      tmp_1 = new Sextuple(_ULongArray___get_size__impl__ju6dtr(first), _ULongArray___get_size__impl__ju6dtr(second), new ULongArray(first), new ULongArray(second), firstStart, secondStart);
    } else {
      tmp_1 = new Sextuple(_ULongArray___get_size__impl__ju6dtr(second), _ULongArray___get_size__impl__ju6dtr(first), new ULongArray(second), new ULongArray(first), secondStart, firstStart);
    }
    var tmp0_container = tmp_1;
    var largerLength = tmp0_container.j3();
    var smallerLength = tmp0_container.k3();
    var largerData = tmp0_container.r5().t6_1;
    var smallerData = tmp0_container.po().t6_1;
    var largerStart = tmp0_container.qo();
    var smallerStart = tmp0_container.ro();
    var i = 0;
    var sum = _ULong___init__impl__c78o9k(new Long(0, 0));
    while (i < smallerStart) {
      // Inline function 'kotlin.ULong.plus' call
      // Inline function 'kotlin.ULong.plus' call
      var tmp2_plus = sum;
      var tmp3_plus = ULongArray__get_impl_pr71q9(largerData, i);
      var tmp4_plus = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp2_plus).x4(_ULong___get_data__impl__fggpzb(tmp3_plus)));
      var tmp5_plus = ULongArray__get_impl_pr71q9(smallerData, i);
      sum = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_plus).x4(_ULong___get_data__impl__fggpzb(tmp5_plus)));
      var tmp_2 = i + resultArrayStart | 0;
      var tmp$ret$14;
      // Inline function 'kotlin.ULong.and' call
      var tmp6_and = sum;
      var tmp7_and = this.gn_1;
      tmp$ret$14 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp6_and).e6(_ULong___get_data__impl__fggpzb(tmp7_and)));
      ULongArray__set_impl_z19mvh(resultArray, tmp_2, tmp$ret$14);
      // Inline function 'kotlin.ULong.shr' call
      var tmp8_shr = sum;
      sum = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp8_shr).e7(63));
      i = i + 1 | 0;
    }
    while (true) {
      if (equals(sum, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
        while (i < largerStart) {
          ULongArray__set_impl_z19mvh(resultArray, i + resultArrayStart | 0, ULongArray__get_impl_pr71q9(largerData, i));
          i = i + 1 | 0;
        }
        return Unit_getInstance();
      }
      if (i === largerLength) {
        ULongArray__set_impl_z19mvh(resultArray, largerLength + resultArrayStart | 0, sum);
        return Unit_getInstance();
      }
      // Inline function 'kotlin.ULong.plus' call
      var tmp9_plus = sum;
      var tmp10_plus = ULongArray__get_impl_pr71q9(largerData, i);
      sum = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp9_plus).x4(_ULong___get_data__impl__fggpzb(tmp10_plus)));
      var tmp_3 = i;
      var tmp$ret$17;
      // Inline function 'kotlin.ULong.and' call
      var tmp11_and = sum;
      var tmp12_and = this.gn_1;
      tmp$ret$17 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp11_and).e6(_ULong___get_data__impl__fggpzb(tmp12_and)));
      ULongArray__set_impl_z19mvh(resultArray, tmp_3, tmp$ret$17);
      // Inline function 'kotlin.ULong.shr' call
      var tmp13_shr = sum;
      sum = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp13_shr).e7(63));
      i = i + 1 | 0;
    }
  };
  protoOf(BigInteger63Arithmetic).tn = function (first, second) {
    if (isZero(first, this))
      return second;
    if (isZero(second, this))
      return first;
    var firstStart = _ULongArray___get_size__impl__ju6dtr(first) - this.vq(first) | 0;
    var secondStart = _ULongArray___get_size__impl__ju6dtr(second) - this.vq(second) | 0;
    var tmp;
    if (firstStart > secondStart) {
      tmp = new Sextuple(_ULongArray___get_size__impl__ju6dtr(first), _ULongArray___get_size__impl__ju6dtr(second), new ULongArray(first), new ULongArray(second), firstStart, secondStart);
    } else {
      tmp = new Sextuple(_ULongArray___get_size__impl__ju6dtr(second), _ULongArray___get_size__impl__ju6dtr(first), new ULongArray(second), new ULongArray(first), secondStart, firstStart);
    }
    var tmp0_container = tmp;
    var largerLength = tmp0_container.j3();
    var smallerLength = tmp0_container.k3();
    var largerData = tmp0_container.r5().t6_1;
    var smallerData = tmp0_container.po().t6_1;
    var largerStart = tmp0_container.qo();
    var smallerStart = tmp0_container.ro();
    // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.possibleAdditionOverflow' call
    var firstMostSignificant = ULongArray__get_impl_pr71q9(largerData, largerStart - 1 | 0);
    var secondMostSignificant = ULongArray__get_impl_pr71q9(smallerData, smallerStart - 1 | 0);
    var tmp_0;
    var tmp$ret$0;
    // Inline function 'kotlin.ULong.and' call
    tmp$ret$0 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(firstMostSignificant).e6(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(0, 1610612736)))));
    if (!equals(tmp$ret$0, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      tmp_0 = true;
    } else {
      var tmp$ret$1;
      // Inline function 'kotlin.ULong.and' call
      tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(secondMostSignificant).e6(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(0, 1610612736)))));
      tmp_0 = !equals(tmp$ret$1, _ULong___init__impl__c78o9k(new Long(0, 0)));
    }
    var possibleOverflow = tmp_0;
    var possibleOverflow_0 = possibleOverflow;
    var tmp_1;
    if (possibleOverflow_0) {
      // Inline function 'kotlin.ULongArray' call
      var tmp_2 = 0;
      var tmp_3 = largerLength + 1 | 0;
      var tmp_4 = longArray(tmp_3);
      while (tmp_2 < tmp_3) {
        var tmp_5 = tmp_2;
        // Inline function 'kotlin.ULong.toLong' call
        // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.add.<anonymous>' call
        var tmp0_toLong = _ULong___init__impl__c78o9k(new Long(0, 0));
        tmp_4[tmp_5] = _ULong___get_data__impl__fggpzb(tmp0_toLong);
        tmp_2 = tmp_2 + 1 | 0;
      }
      tmp_1 = _ULongArray___init__impl__twm1l3(tmp_4);
    } else {
      // Inline function 'kotlin.ULongArray' call
      var tmp_6 = 0;
      var tmp_7 = longArray(largerLength);
      while (tmp_6 < largerLength) {
        var tmp_8 = tmp_6;
        // Inline function 'kotlin.ULong.toLong' call
        // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.add.<anonymous>' call
        var tmp0_toLong_0 = _ULong___init__impl__c78o9k(new Long(0, 0));
        tmp_7[tmp_8] = _ULong___get_data__impl__fggpzb(tmp0_toLong_0);
        tmp_6 = tmp_6 + 1 | 0;
      }
      tmp_1 = _ULongArray___init__impl__twm1l3(tmp_7);
    }
    var result = tmp_1;
    this.hr(result, 0, first, second);
    var tmp_9;
    if (possibleOverflow_0) {
      tmp_9 = this.qn(result);
    } else {
      tmp_9 = result;
    }
    return tmp_9;
  };
  protoOf(BigInteger63Arithmetic).ir = function (first, second, firstStart, secondStart) {
    var comparison = this.gr(first, second, firstStart, secondStart);
    var firstSize = firstStart + 1 | 0;
    var secondSize = secondStart + 1 | 0;
    var firstIsLarger = comparison === 1;
    if (comparison === 0)
      return this.zm_1;
    if (secondSize === 1 ? equals(ULongArray__get_impl_pr71q9(second, 0), _ULong___init__impl__c78o9k(new Long(0, 0))) : false) {
      return first;
    }
    if (!firstIsLarger) {
      throw RuntimeException_init_$Create$('subtract result less than zero');
    }
    var tmp;
    if (firstIsLarger) {
      tmp = new Quadruple(new ULongArray(first), new ULongArray(second), firstStart, secondStart);
    } else {
      tmp = new Quadruple(new ULongArray(second), new ULongArray(first), secondStart, firstStart);
    }
    var tmp0_container = tmp;
    var largerData = tmp0_container.j3().t6_1;
    var smallerData = tmp0_container.k3().t6_1;
    var largerStart = tmp0_container.r5();
    var smallerStart = tmp0_container.po();
    // Inline function 'kotlin.ULongArray' call
    var tmp_0 = 0;
    var tmp_1 = longArray(largerStart);
    while (tmp_0 < largerStart) {
      var tmp_2 = tmp_0;
      // Inline function 'kotlin.ULong.toLong' call
      // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.subtractWithStartIndexes.<anonymous>' call
      var tmp0_toLong = _ULong___init__impl__c78o9k(new Long(0, 0));
      tmp_1[tmp_2] = _ULong___get_data__impl__fggpzb(tmp0_toLong);
      tmp_0 = tmp_0 + 1 | 0;
    }
    var result = _ULongArray___init__impl__twm1l3(tmp_1);
    var i = 0;
    var diff = _ULong___init__impl__c78o9k(new Long(0, 0));
    while (i < smallerStart) {
      // Inline function 'kotlin.ULong.minus' call
      // Inline function 'kotlin.ULong.minus' call
      var tmp0_minus = ULongArray__get_impl_pr71q9(largerData, i);
      var tmp1_minus = ULongArray__get_impl_pr71q9(smallerData, i);
      var tmp2_minus = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_minus).y4(_ULong___get_data__impl__fggpzb(tmp1_minus)));
      var tmp3_minus = diff;
      diff = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp2_minus).y4(_ULong___get_data__impl__fggpzb(tmp3_minus)));
      var tmp_3 = i;
      var tmp$ret$6;
      // Inline function 'kotlin.ULong.and' call
      var tmp4_and = diff;
      var tmp5_and = this.gn_1;
      tmp$ret$6 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_and).e6(_ULong___get_data__impl__fggpzb(tmp5_and)));
      ULongArray__set_impl_z19mvh(result, tmp_3, tmp$ret$6);
      // Inline function 'kotlin.ULong.shr' call
      var tmp6_shr = diff;
      diff = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp6_shr).e7(63));
      i = i + 1 | 0;
    }
    while (!equals(diff, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      // Inline function 'kotlin.ULong.minus' call
      var tmp7_minus = ULongArray__get_impl_pr71q9(largerData, i);
      var tmp8_minus = diff;
      diff = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp7_minus).y4(_ULong___get_data__impl__fggpzb(tmp8_minus)));
      var tmp_4 = i;
      var tmp$ret$9;
      // Inline function 'kotlin.ULong.and' call
      var tmp9_and = diff;
      var tmp10_and = this.gn_1;
      tmp$ret$9 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp9_and).e6(_ULong___get_data__impl__fggpzb(tmp10_and)));
      ULongArray__set_impl_z19mvh(result, tmp_4, tmp$ret$9);
      // Inline function 'kotlin.ULong.shr' call
      var tmp11_shr = diff;
      diff = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp11_shr).e7(63));
      i = i + 1 | 0;
    }
    while (i < largerStart) {
      ULongArray__set_impl_z19mvh(result, i, ULongArray__get_impl_pr71q9(largerData, i));
      i = i + 1 | 0;
    }
    if (this.vq(result) === (_ULongArray___get_size__impl__ju6dtr(result) - 1 | 0) ? equals(ULongArray__get_impl_pr71q9(result, 0), _ULong___init__impl__c78o9k(new Long(0, 0))) : false) {
      return this.zm_1;
    }
    return this.qn(result);
  };
  protoOf(BigInteger63Arithmetic).sn = function (first, second) {
    var firstStart = _ULongArray___get_size__impl__ju6dtr(first) - this.vq(first) | 0;
    var secondStart = _ULongArray___get_size__impl__ju6dtr(second) - this.vq(second) | 0;
    return this.ir(first, second, firstStart, secondStart);
  };
  protoOf(BigInteger63Arithmetic).zn = function (first, second) {
    var firstCorrectedSize = _ULongArray___get_size__impl__ju6dtr(first) - this.vq(first) | 0;
    var secondCorrectedSize = _ULongArray___get_size__impl__ju6dtr(second) - this.vq(second) | 0;
    return multiplyWithCorrectedSize(this, first, second, firstCorrectedSize, secondCorrectedSize);
  };
  protoOf(BigInteger63Arithmetic).jr = function (original, numberOfWords, value) {
    // Inline function 'kotlin.ULongArray' call
    var tmp = 0;
    var tmp_0 = _ULongArray___get_size__impl__ju6dtr(original) + numberOfWords | 0;
    var tmp_1 = longArray(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      // Inline function 'kotlin.ULong.toLong' call
      // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.extendULongArray.<anonymous>' call
      var tmp0_toLong = tmp_2 < _ULongArray___get_size__impl__ju6dtr(original) ? ULongArray__get_impl_pr71q9(original, tmp_2) : value;
      tmp_1[tmp_2] = _ULong___get_data__impl__fggpzb(tmp0_toLong);
      tmp = tmp + 1 | 0;
    }
    return _ULongArray___init__impl__twm1l3(tmp_1);
  };
  protoOf(BigInteger63Arithmetic).iq = function (firstUnchecked, secondUnchecked) {
    var tmp;
    if (!((_ULongArray___get_size__impl__ju6dtr(firstUnchecked) % 3 | 0) === 0)) {
      var tmp_0 = new ULongArray(firstUnchecked);
      var tmp$ret$4;
      // Inline function 'kotlin.collections.asIterable' call
      // Inline function 'kotlin.ULongArray' call
      var tmp_1 = 0;
      var tmp_2 = imul((_ULongArray___get_size__impl__ju6dtr(firstUnchecked) + 2 | 0) / 3 | 0, 3) - _ULongArray___get_size__impl__ju6dtr(firstUnchecked) | 0;
      var tmp_3 = longArray(tmp_2);
      while (tmp_1 < tmp_2) {
        var tmp_4 = tmp_1;
        // Inline function 'kotlin.ULong.toLong' call
        // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.toomCook3Multiply.<anonymous>' call
        var tmp0_toLong = _ULong___init__impl__c78o9k(new Long(0, 0));
        tmp_3[tmp_4] = _ULong___get_data__impl__fggpzb(tmp0_toLong);
        tmp_1 = tmp_1 + 1 | 0;
      }
      var tmp1_asIterable = _ULongArray___init__impl__twm1l3(tmp_3);
      tmp$ret$4 = new ULongArray(tmp1_asIterable);
      tmp = plus(tmp_0, tmp$ret$4);
    } else {
      tmp = new ULongArray(firstUnchecked);
    }
    var first = toULongArray(tmp);
    var tmp_5;
    if (!((_ULongArray___get_size__impl__ju6dtr(secondUnchecked) % 3 | 0) === 0)) {
      var tmp_6 = new ULongArray(secondUnchecked);
      var tmp$ret$9;
      // Inline function 'kotlin.collections.asIterable' call
      // Inline function 'kotlin.ULongArray' call
      var tmp_7 = 0;
      var tmp_8 = imul((_ULongArray___get_size__impl__ju6dtr(secondUnchecked) + 2 | 0) / 3 | 0, 3) - _ULongArray___get_size__impl__ju6dtr(secondUnchecked) | 0;
      var tmp_9 = longArray(tmp_8);
      while (tmp_7 < tmp_8) {
        var tmp_10 = tmp_7;
        // Inline function 'kotlin.ULong.toLong' call
        // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.toomCook3Multiply.<anonymous>' call
        var tmp0_toLong_0 = _ULong___init__impl__c78o9k(new Long(0, 0));
        tmp_9[tmp_10] = _ULong___get_data__impl__fggpzb(tmp0_toLong_0);
        tmp_7 = tmp_7 + 1 | 0;
      }
      var tmp3_asIterable = _ULongArray___init__impl__twm1l3(tmp_9);
      tmp$ret$9 = new ULongArray(tmp3_asIterable);
      tmp_5 = plus(tmp_6, tmp$ret$9);
    } else {
      tmp_5 = new ULongArray(secondUnchecked);
    }
    var second = toULongArray(tmp_5);
    var firstLength = _ULongArray___get_size__impl__ju6dtr(first);
    var secondLength = _ULongArray___get_size__impl__ju6dtr(second);
    var tmp_11;
    if (firstLength > secondLength) {
      var prepared = this.jr(second, firstLength - secondLength | 0, _ULong___init__impl__c78o9k(new Long(0, 0)));
      tmp_11 = new Pair(new ULongArray(first), new ULongArray(prepared));
    } else if (firstLength < secondLength) {
      var prepared_0 = this.jr(first, secondLength - firstLength | 0, _ULong___init__impl__c78o9k(new Long(0, 0)));
      tmp_11 = new Pair(new ULongArray(prepared_0), new ULongArray(second));
    } else {
      tmp_11 = new Pair(new ULongArray(first), new ULongArray(second));
    }
    var tmp0_container = tmp_11;
    var firstPrepared = tmp0_container.j3().t6_1;
    var secondPrepared = tmp0_container.k3().t6_1;
    // Inline function 'kotlin.math.max' call
    var tmp4_max = _ULongArray___get_size__impl__ju6dtr(first);
    var tmp5_max = _ULongArray___get_size__impl__ju6dtr(second);
    var longestLength = Math.max(tmp4_max, tmp5_max);
    var extendedDigit = (longestLength + 2 | 0) / 3 | 0;
    var m0 = new SignedULongArray(toULongArray(slice(firstPrepared, until(0, extendedDigit))), true);
    var m1 = new SignedULongArray(toULongArray(slice(firstPrepared, until(extendedDigit, imul(extendedDigit, 2)))), true);
    var m2 = new SignedULongArray(toULongArray(slice(firstPrepared, until(imul(extendedDigit, 2), imul(extendedDigit, 3)))), true);
    var n0 = new SignedULongArray(toULongArray(slice(secondPrepared, until(0, extendedDigit))), true);
    var n1 = new SignedULongArray(toULongArray(slice(secondPrepared, until(extendedDigit, imul(extendedDigit, 2)))), true);
    var n2 = new SignedULongArray(toULongArray(slice(secondPrepared, until(imul(extendedDigit, 2), imul(extendedDigit, 3)))), true);
    var p0 = this.qq(m0, m2);
    var pe0 = m0;
    var pe1 = this.qq(p0, m1);
    var pem1 = this.sq(p0, m1);
    var doublePemM2 = this.pq(this.qq(pem1, m2), this.on_1);
    var pem2 = this.sq(doublePemM2, m0);
    var pinf = m2;
    var q0 = this.qq(n0, n2);
    var qe0 = n0;
    var qe1 = this.qq(q0, n1);
    var qem1 = this.sq(q0, n1);
    var doubleQemN2 = this.pq(this.qq(qem1, n2), this.on_1);
    var qem2 = this.sq(doubleQemN2, n0);
    var qinf = n2;
    var re0 = this.pq(pe0, qe0);
    var re1 = this.pq(pe1, qe1);
    var rem1 = this.pq(pem1, qem1);
    var rem2 = this.pq(pem2, qem2);
    var rinf = this.pq(pinf, qinf);
    var r0 = re0;
    var r4 = rinf;
    var rem2re1diff = this.sq(rem2, re1);
    var tmp$ret$11;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$11 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(3, 0))]));
    var r3 = this.kr(rem2re1diff, new SignedULongArray(tmp$ret$11, true));
    var r1 = this.oq(this.sq(re1, rem1), 1);
    var r2 = this.sq(rem1, r0);
    r3 = this.qq(this.oq(this.sq(r2, r3), 1), this.pq(this.on_1, rinf));
    r2 = this.sq(this.qq(r2, r1), r4);
    r1 = this.sq(r1, r3);
    var bShiftAmount = imul(extendedDigit, 63);
    var rb0 = r0;
    var rb1 = this.rq(r1, bShiftAmount);
    var rb2 = this.rq(r2, imul(bShiftAmount, 2));
    var rb3 = this.rq(r3, imul(bShiftAmount, 3));
    var rb4 = this.rq(r4, imul(bShiftAmount, 4));
    var rb = this.qq(this.qq(this.qq(this.qq(rb0, rb1), rb2), rb3), rb4);
    return rb.tq_1;
  };
  protoOf(BigInteger63Arithmetic).jq = function (first, second) {
    var firstCorrectedSize = _ULongArray___get_size__impl__ju6dtr(first) - this.vq(first) | 0;
    return this.lr(first, second, firstCorrectedSize);
  };
  protoOf(BigInteger63Arithmetic).lr = function (first, second, firstCorrectedSize) {
    // Inline function 'kotlin.ULong.and' call
    var tmp0_and = this.in_1;
    var secondLow = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(second).e6(_ULong___get_data__impl__fggpzb(tmp0_and)));
    // Inline function 'kotlin.ULong.shr' call
    var secondHigh = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(second).e7(32));
    var requiredBits = this.go(first) + this.dr(second) | 0;
    var tmp;
    if (!((requiredBits % 63 | 0) === 0)) {
      tmp = (requiredBits / 63 | 0) + 1 | 0;
    } else {
      tmp = requiredBits / 63 | 0;
    }
    var requiredWords = tmp;
    var result = _ULongArray___init__impl__twm1l3_0(requiredWords);
    var carryIntoNextRound = _ULong___init__impl__c78o9k(new Long(0, 0));
    var i = 0;
    var j = 0;
    while (i < firstCorrectedSize) {
      // Inline function 'kotlin.ULong.and' call
      var tmp1_and = ULongArray__get_impl_pr71q9(first, i);
      var tmp2_and = this.in_1;
      var firstLow = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_and).e6(_ULong___get_data__impl__fggpzb(tmp2_and)));
      // Inline function 'kotlin.ULong.shr' call
      var tmp3_shr = ULongArray__get_impl_pr71q9(first, i);
      var firstHigh = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp3_shr).e7(32));
      i = i + 1 | 0;
      // Inline function 'kotlin.ULong.times' call
      var lowerProduct = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(firstLow).w4(_ULong___get_data__impl__fggpzb(secondLow)));
      // Inline function 'kotlin.ULong.shr' call
      var lowerCarry = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(lowerProduct).e7(63));
      // Inline function 'kotlin.ULong.plus' call
      var tmp5_plus = carryIntoNextRound;
      // Inline function 'kotlin.ULong.and' call
      var tmp4_and = this.gn_1;
      var tmp6_plus = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(lowerProduct).e6(_ULong___get_data__impl__fggpzb(tmp4_and)));
      var lowResult = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp5_plus).x4(_ULong___get_data__impl__fggpzb(tmp6_plus)));
      // Inline function 'kotlin.ULong.plus' call
      var tmp8_plus = lowerCarry;
      // Inline function 'kotlin.ULong.shr' call
      var tmp7_shr = lowResult;
      var tmp9_plus = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp7_shr).e7(63));
      lowerCarry = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp8_plus).x4(_ULong___get_data__impl__fggpzb(tmp9_plus)));
      // Inline function 'kotlin.ULong.and' call
      var tmp10_and = lowResult;
      var tmp11_and = this.gn_1;
      lowResult = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp10_and).e6(_ULong___get_data__impl__fggpzb(tmp11_and)));
      // Inline function 'kotlin.ULong.plus' call
      // Inline function 'kotlin.ULong.times' call
      var tmp12_plus = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(firstLow).w4(_ULong___get_data__impl__fggpzb(secondHigh)));
      // Inline function 'kotlin.ULong.times' call
      var tmp13_plus = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(secondLow).w4(_ULong___get_data__impl__fggpzb(firstHigh)));
      var middleProduct = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp12_plus).x4(_ULong___get_data__impl__fggpzb(tmp13_plus)));
      var middleCarry = lowerCarry;
      // Inline function 'kotlin.ULong.plus' call
      var tmp14_plus = middleCarry;
      // Inline function 'kotlin.ULong.shr' call
      var tmp15_plus = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(middleProduct).e7(31));
      middleCarry = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp14_plus).x4(_ULong___get_data__impl__fggpzb(tmp15_plus)));
      // Inline function 'kotlin.ULong.plus' call
      var tmp18_plus = lowResult;
      // Inline function 'kotlin.ULong.and' call
      // Inline function 'kotlin.ULong.shl' call
      var tmp16_and = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(middleProduct).f7(32));
      var tmp17_and = this.gn_1;
      var tmp19_plus = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp16_and).e6(_ULong___get_data__impl__fggpzb(tmp17_and)));
      lowResult = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp18_plus).x4(_ULong___get_data__impl__fggpzb(tmp19_plus)));
      // Inline function 'kotlin.ULong.plus' call
      var tmp21_plus = middleCarry;
      // Inline function 'kotlin.ULong.shr' call
      var tmp20_shr = lowResult;
      var tmp22_plus = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp20_shr).e7(63));
      middleCarry = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp21_plus).x4(_ULong___get_data__impl__fggpzb(tmp22_plus)));
      var tmp_0 = j;
      var tmp$ret$21;
      // Inline function 'kotlin.ULong.and' call
      var tmp23_and = lowResult;
      var tmp24_and = this.gn_1;
      tmp$ret$21 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp23_and).e6(_ULong___get_data__impl__fggpzb(tmp24_and)));
      ULongArray__set_impl_z19mvh(result, tmp_0, tmp$ret$21);
      var highResult = middleCarry;
      // Inline function 'kotlin.ULong.shl' call
      // Inline function 'kotlin.ULong.times' call
      var tmp25_shl = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(firstHigh).w4(_ULong___get_data__impl__fggpzb(secondHigh)));
      var higherProduct = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp25_shl).f7(1));
      // Inline function 'kotlin.ULong.plus' call
      var tmp26_plus = highResult;
      highResult = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp26_plus).x4(_ULong___get_data__impl__fggpzb(higherProduct)));
      carryIntoNextRound = highResult;
      j = j + 1 | 0;
    }
    if (!equals(carryIntoNextRound, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      ULongArray__set_impl_z19mvh(result, j, carryIntoNextRound);
    }
    return result;
  };
  protoOf(BigInteger63Arithmetic).eo = function (base, exponent) {
    if (exponent.equals(new Long(0, 0))) {
      return this.an_1;
    }
    if (exponent.equals(new Long(1, 0))) {
      return base;
    }
    if ((_ULongArray___get_size__impl__ju6dtr(base) === 1 ? equals(ULongArray__get_impl_pr71q9(base, 0), _ULong___init__impl__c78o9k(new Long(10, 0))) : false) ? exponent.v4(toLong(this.pn_1.length)) < 0 : false) {
      return this.pn_1[exponent.b7()].t6_1;
    }
    var firstCorrectedSize = _ULongArray___get_size__impl__ju6dtr(base) - this.vq(base) | 0;
    var helperVar = this.an_1;
    var exponentVar = exponent;
    var baseVar = base;
    while (exponentVar.v4(new Long(1, 0)) > 0) {
      // Inline function 'kotlin.Long.rem' call
      if (exponentVar.c7(new Long(2, 0)).equals(new Long(0, 0))) {
        baseVar = this.ar(baseVar, baseVar);
        // Inline function 'kotlin.Long.div' call
        exponentVar = exponentVar.u4(new Long(2, 0));
      } else {
        helperVar = this.ar(baseVar, helperVar);
        baseVar = this.ar(baseVar, baseVar);
        // Inline function 'kotlin.Long.div' call
        // Inline function 'kotlin.Long.minus' call
        exponentVar = exponentVar.y4(new Long(1, 0)).u4(new Long(2, 0));
      }
    }
    return this.ar(helperVar, baseVar);
  };
  protoOf(BigInteger63Arithmetic).mr = function (dividend, divisor) {
    var divisorSize = _ULongArray___get_size__impl__ju6dtr(divisor);
    var normalizationShift = this.cr(ULongArray__get_impl_pr71q9(divisor, divisorSize - 1 | 0));
    var divisorNormalized = this.kq(divisor, normalizationShift);
    var dividendNormalized = this.kq(dividend, normalizationShift);
    return new Triple(new ULongArray(dividendNormalized), new ULongArray(divisorNormalized), normalizationShift);
  };
  protoOf(BigInteger63Arithmetic).nr = function (remainderNormalized, normalizationShift) {
    var remainder = this.or(remainderNormalized, normalizationShift);
    return remainder;
  };
  protoOf(BigInteger63Arithmetic).pr = function (unnormalizedDividend, unnormalizedDivisor) {
    if (this.zq(unnormalizedDivisor, unnormalizedDividend) > 0) {
      return new Pair(new ULongArray(this.zm_1), new ULongArray(unnormalizedDividend));
    }
    if (_ULongArray___get_size__impl__ju6dtr(unnormalizedDivisor) === 1 ? _ULongArray___get_size__impl__ju6dtr(unnormalizedDividend) === 1 : false) {
      var tmp$ret$1;
      // Inline function 'kotlin.ulongArrayOf' call
      var tmp$ret$0;
      // Inline function 'kotlin.ULong.div' call
      var tmp0_div = ULongArray__get_impl_pr71q9(unnormalizedDividend, 0);
      var tmp1_div = ULongArray__get_impl_pr71q9(unnormalizedDivisor, 0);
      tmp$ret$0 = ulongDivide(tmp0_div, tmp1_div);
      tmp$ret$1 = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$0]));
      var tmp = new ULongArray(this.qn(tmp$ret$1));
      var tmp$ret$3;
      // Inline function 'kotlin.ulongArrayOf' call
      var tmp$ret$2;
      // Inline function 'kotlin.ULong.rem' call
      var tmp3_rem = ULongArray__get_impl_pr71q9(unnormalizedDividend, 0);
      var tmp4_rem = ULongArray__get_impl_pr71q9(unnormalizedDivisor, 0);
      tmp$ret$2 = ulongRemainder(tmp3_rem, tmp4_rem);
      tmp$ret$3 = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$2]));
      return new Pair(tmp, new ULongArray(this.qn(tmp$ret$3)));
    }
    var bitPrecision = this.go(unnormalizedDividend) - this.go(unnormalizedDivisor) | 0;
    if (bitPrecision === 0) {
      return new Pair(new ULongArray(this.an_1), new ULongArray(this.yq(unnormalizedDividend, unnormalizedDivisor)));
    }
    var tmp0_container = this.mr(unnormalizedDividend, unnormalizedDivisor);
    var dividend = tmp0_container.j3().t6_1;
    var divisor = tmp0_container.k3().t6_1;
    var normalizationShift = tmp0_container.r5();
    var dividendSize = _ULongArray___get_size__impl__ju6dtr(dividend);
    var divisorSize = _ULongArray___get_size__impl__ju6dtr(divisor);
    var divisorCorrectedSize = _ULongArray___get_size__impl__ju6dtr(divisor) - this.vq(divisor) | 0;
    var wordPrecision = dividendSize - divisorSize | 0;
    var qjhat;
    var reconstructedQuotient;
    var quotient = _ULongArray___init__impl__twm1l3_0(wordPrecision);
    var divisorTimesBaseToPowerOfM = this.kq(divisor, imul(wordPrecision, this.en_1));
    if (this.zq(dividend, divisorTimesBaseToPowerOfM) >= 0) {
      quotient = _ULongArray___init__impl__twm1l3_0(wordPrecision + 1 | 0);
      ULongArray__set_impl_z19mvh(quotient, wordPrecision, _ULong___init__impl__c78o9k(new Long(1, 0)));
      dividend = this.yq(dividend, divisorTimesBaseToPowerOfM);
    }
    var inductionVariable = wordPrecision - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var j = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var tmp_0;
        if ((divisorSize + j | 0) < _ULongArray___get_size__impl__ju6dtr(dividend)) {
          var tmp$ret$4;
          // Inline function 'kotlin.ulongArrayOf' call
          tmp$ret$4 = _ULongArray___init__impl__twm1l3(longArrayOf([ULongArray__get_impl_pr71q9(dividend, divisorSize + j | 0)]));
          tmp_0 = this.qr(this.kq(tmp$ret$4, this.en_1), ULongArray__get_impl_pr71q9(dividend, (divisorSize + j | 0) - 1 | 0));
        } else {
          var tmp_1;
          if ((divisorSize + j | 0) === _ULongArray___get_size__impl__ju6dtr(dividend)) {
            // Inline function 'kotlin.ulongArrayOf' call
            tmp_1 = _ULongArray___init__impl__twm1l3(longArrayOf([ULongArray__get_impl_pr71q9(dividend, (divisorSize + j | 0) - 1 | 0)]));
          } else {
            tmp_1 = this.zm_1;
          }
          tmp_0 = tmp_1;
        }
        var twoDigit = tmp_0;
        var tmp_2 = BigInteger32Arithmetic_getInstance();
        var tmp_3 = this.rr(twoDigit);
        var tmp$ret$6;
        // Inline function 'kotlin.ulongArrayOf' call
        tmp$ret$6 = _ULongArray___init__impl__twm1l3(longArrayOf([ULongArray__get_impl_pr71q9(divisor, divisorSize - 1 | 0)]));
        var convertedResult = tmp_2.cq(tmp_3, this.rr(tmp$ret$6));
        qjhat = this.sr(convertedResult.x3_1.j6_1);
        var tmp_4 = quotient;
        var tmp_5;
        var tmp_6 = qjhat;
        var tmp$ret$7;
        // Inline function 'kotlin.ULong.minus' call
        var tmp9_minus = this.gn_1;
        tmp$ret$7 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp9_minus).y4(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(1, 0)))));
        if (this.tr(tmp_6, tmp$ret$7) < 0) {
          tmp_5 = ULongArray__get_impl_pr71q9(qjhat, 0);
        } else {
          tmp_5 = this.gn_1;
        }
        ULongArray__set_impl_z19mvh(tmp_4, j, tmp_5);
        reconstructedQuotient = this.kq(this.lr(divisor, ULongArray__get_impl_pr71q9(quotient, j), divisorCorrectedSize), imul(j, this.en_1));
        while (this.zq(reconstructedQuotient, dividend) > 0) {
          var tmp_7 = quotient;
          var tmp$ret$10;
          // Inline function 'kotlin.ULong.minus' call
          var tmp10_minus = ULongArray__get_impl_pr71q9(quotient, j);
          // Inline function 'kotlin.ULong.minus' call
          // Inline function 'kotlin.UInt.toULong' call
          var tmp0_minus = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(_UInt___init__impl__l7qpdl(1))).e6(new Long(-1, 0)));
          tmp$ret$10 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp10_minus).y4(_ULong___get_data__impl__fggpzb(tmp0_minus)));
          ULongArray__set_impl_z19mvh(tmp_7, j, tmp$ret$10);
          reconstructedQuotient = this.kq(this.lr(divisor, ULongArray__get_impl_pr71q9(quotient, j), divisorCorrectedSize), imul(j, this.en_1));
        }
        dividend = this.yq(dividend, reconstructedQuotient);
      }
       while (0 <= inductionVariable);
    while (this.zq(dividend, divisor) >= 0) {
      quotient = this.qr(quotient, _ULong___init__impl__c78o9k(new Long(1, 0)));
      dividend = this.yq(dividend, divisor);
    }
    var denormRemainder = this.nr(dividend, normalizationShift);
    return new Pair(new ULongArray(this.qn(quotient)), new ULongArray(denormRemainder));
  };
  protoOf(BigInteger63Arithmetic).ur = function (operand) {
    if (isZero(operand, this))
      return this.zm_1;
    var length = this.go(operand);
    var tmp;
    if ((length % 64 | 0) === 0) {
      tmp = length / 64 | 0;
    } else {
      tmp = (length / 64 | 0) + 1 | 0;
    }
    var requiredLength = tmp;
    var wordStep;
    var shiftAmount;
    var result = _ULongArray___init__impl__twm1l3_0(requiredLength);
    var inductionVariable = 0;
    if (inductionVariable < requiredLength)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        wordStep = i / 63 | 0;
        shiftAmount = i % 63 | 0;
        if (((i + wordStep | 0) + 1 | 0) < _ULongArray___get_size__impl__ju6dtr(operand)) {
          var tmp$ret$2;
          // Inline function 'kotlin.ULong.or' call
          // Inline function 'kotlin.ULong.shr' call
          var tmp0_shr = ULongArray__get_impl_pr71q9(operand, i + wordStep | 0);
          var tmp4_or = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_shr).e7(shiftAmount));
          // Inline function 'kotlin.ULong.shl' call
          var tmp2_shl = ULongArray__get_impl_pr71q9(operand, (i + wordStep | 0) + 1 | 0);
          var tmp3_shl = 63 - shiftAmount | 0;
          var tmp5_or = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp2_shl).f7(tmp3_shl));
          tmp$ret$2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_or).te(_ULong___get_data__impl__fggpzb(tmp5_or)));
          ULongArray__set_impl_z19mvh(result, i, tmp$ret$2);
        } else {
          var tmp$ret$3;
          // Inline function 'kotlin.ULong.shr' call
          var tmp6_shr = ULongArray__get_impl_pr71q9(operand, i + wordStep | 0);
          tmp$ret$3 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp6_shr).e7(shiftAmount));
          ULongArray__set_impl_z19mvh(result, i, tmp$ret$3);
        }
      }
       while (inductionVariable < requiredLength);
    return this.qn(result);
  };
  protoOf(BigInteger63Arithmetic).vr = function (operand) {
    var power64Representation = this.ur(operand);
    var result = _UIntArray___init__impl__ghjpc6(imul(_ULongArray___get_size__impl__ju6dtr(power64Representation), 2));
    var inductionVariable = 0;
    var last = _ULongArray___get_size__impl__ju6dtr(power64Representation);
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = imul(2, i);
        var tmp$ret$3;
        // Inline function 'kotlin.ULong.toUInt' call
        // Inline function 'kotlin.ULong.and' call
        var tmp1_and = ULongArray__get_impl_pr71q9(power64Representation, i);
        // Inline function 'kotlin.UInt.toULong' call
        var tmp0_toULong = BigInteger32Arithmetic_getInstance().dp_1;
        var tmp2_and = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp0_toULong)).e6(new Long(-1, 0)));
        var tmp3_toUInt = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_and).e6(_ULong___get_data__impl__fggpzb(tmp2_and)));
        // Inline function 'kotlin.toUInt' call
        var tmp0_toUInt = _ULong___get_data__impl__fggpzb(tmp3_toUInt);
        tmp$ret$3 = _UInt___init__impl__l7qpdl(tmp0_toUInt.b7());
        UIntArray__set_impl_7f2zu2(result, tmp, tmp$ret$3);
        var tmp_0 = imul(2, i) + 1 | 0;
        var tmp$ret$6;
        // Inline function 'kotlin.ULong.toUInt' call
        // Inline function 'kotlin.ULong.shr' call
        var tmp4_shr = ULongArray__get_impl_pr71q9(power64Representation, i);
        var tmp5_toUInt = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_shr).e7(32));
        // Inline function 'kotlin.toUInt' call
        var tmp0_toUInt_0 = _ULong___get_data__impl__fggpzb(tmp5_toUInt);
        tmp$ret$6 = _UInt___init__impl__l7qpdl(tmp0_toUInt_0.b7());
        UIntArray__set_impl_7f2zu2(result, tmp_0, tmp$ret$6);
      }
       while (inductionVariable < last);
    return BigInteger32Arithmetic_getInstance().qp(result);
  };
  protoOf(BigInteger63Arithmetic).wr = function (operand) {
    if (_UIntArray___get_size__impl__r6l8ci(operand) === 0) {
      return this.zm_1;
    }
    if (_UIntArray___get_size__impl__r6l8ci(operand) === 1) {
      // Inline function 'kotlin.ulongArrayOf' call
      var tmp$ret$0;
      // Inline function 'kotlin.UInt.toULong' call
      var tmp0_toULong = UIntArray__get_impl_gp5kza(operand, 0);
      tmp$ret$0 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp0_toULong)).e6(new Long(-1, 0)));
      return _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$0]));
    }
    var length = BigInteger32Arithmetic_getInstance().op(operand);
    var tmp;
    if ((length % 63 | 0) === 0) {
      tmp = length / 63 | 0;
    } else {
      tmp = (length / 63 | 0) + 1 | 0;
    }
    var requiredLength = tmp;
    var result = _ULongArray___init__impl__twm1l3_0(requiredLength);
    var skipWordCount;
    var inductionVariable = 0;
    if (inductionVariable < requiredLength)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        skipWordCount = i / 32 | 0;
        var shiftAmount = i % 32 | 0;
        var position = imul(i, 2) - skipWordCount | 0;
        if (requiredLength === 2) {
          var tmp$ret$6;
          // Inline function 'kotlin.ULong.or' call
          // Inline function 'kotlin.UInt.toULong' call
          var tmp2_toULong = UIntArray__get_impl_gp5kza(operand, 0);
          var tmp7_or = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp2_toULong)).e6(new Long(-1, 0)));
          // Inline function 'kotlin.ULong.and' call
          // Inline function 'kotlin.ULong.shl' call
          // Inline function 'kotlin.UInt.toULong' call
          var tmp3_toULong = UIntArray__get_impl_gp5kza(operand, 1);
          var tmp4_shl = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp3_toULong)).e6(new Long(-1, 0)));
          var tmp5_and = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_shl).f7(32));
          var tmp6_and = this.jn_1;
          var tmp8_or = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp5_and).e6(_ULong___get_data__impl__fggpzb(tmp6_and)));
          tmp$ret$6 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp7_or).te(_ULong___get_data__impl__fggpzb(tmp8_or)));
          ULongArray__set_impl_z19mvh(result, 0, tmp$ret$6);
          if (_UIntArray___get_size__impl__r6l8ci(operand) === 4) {
            var tmp$ret$14;
            // Inline function 'kotlin.ULong.or' call
            // Inline function 'kotlin.ULong.or' call
            // Inline function 'kotlin.ULong.shr' call
            // Inline function 'kotlin.UInt.toULong' call
            var tmp9_toULong = UIntArray__get_impl_gp5kza(operand, 1);
            var tmp10_shr = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp9_toULong)).e6(new Long(-1, 0)));
            var tmp13_or = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp10_shr).e7(31));
            // Inline function 'kotlin.ULong.shl' call
            // Inline function 'kotlin.UInt.toULong' call
            var tmp11_toULong = UIntArray__get_impl_gp5kza(operand, 2);
            var tmp12_shl = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp11_toULong)).e6(new Long(-1, 0)));
            var tmp14_or = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp12_shl).f7(1));
            var tmp17_or = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp13_or).te(_ULong___get_data__impl__fggpzb(tmp14_or)));
            // Inline function 'kotlin.ULong.shl' call
            // Inline function 'kotlin.UInt.toULong' call
            var tmp15_toULong = UIntArray__get_impl_gp5kza(operand, 3);
            var tmp16_shl = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp15_toULong)).e6(new Long(-1, 0)));
            var tmp18_or = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp16_shl).f7(33));
            tmp$ret$14 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp17_or).te(_ULong___get_data__impl__fggpzb(tmp18_or)));
            ULongArray__set_impl_z19mvh(result, 1, tmp$ret$14);
          } else {
            var tmp$ret$19;
            // Inline function 'kotlin.ULong.or' call
            // Inline function 'kotlin.ULong.shr' call
            // Inline function 'kotlin.UInt.toULong' call
            var tmp19_toULong = UIntArray__get_impl_gp5kza(operand, 1);
            var tmp20_shr = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp19_toULong)).e6(new Long(-1, 0)));
            var tmp23_or = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp20_shr).e7(31));
            // Inline function 'kotlin.ULong.shl' call
            // Inline function 'kotlin.UInt.toULong' call
            var tmp21_toULong = UIntArray__get_impl_gp5kza(operand, 2);
            var tmp22_shl = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp21_toULong)).e6(new Long(-1, 0)));
            var tmp24_or = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp22_shl).f7(1));
            tmp$ret$19 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp23_or).te(_ULong___get_data__impl__fggpzb(tmp24_or)));
            ULongArray__set_impl_z19mvh(result, 1, tmp$ret$19);
          }
        } else {
          if (i === 0) {
            var tmp$ret$24;
            // Inline function 'kotlin.ULong.or' call
            // Inline function 'kotlin.UInt.toULong' call
            var tmp25_toULong = UIntArray__get_impl_gp5kza(operand, 0);
            var tmp30_or = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp25_toULong)).e6(new Long(-1, 0)));
            // Inline function 'kotlin.ULong.and' call
            // Inline function 'kotlin.ULong.shl' call
            // Inline function 'kotlin.UInt.toULong' call
            var tmp26_toULong = UIntArray__get_impl_gp5kza(operand, 1);
            var tmp27_shl = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp26_toULong)).e6(new Long(-1, 0)));
            var tmp28_and = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp27_shl).f7(32));
            var tmp29_and = this.jn_1;
            var tmp31_or = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp28_and).e6(_ULong___get_data__impl__fggpzb(tmp29_and)));
            tmp$ret$24 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp30_or).te(_ULong___get_data__impl__fggpzb(tmp31_or)));
            ULongArray__set_impl_z19mvh(result, i, tmp$ret$24);
          } else if (1 <= i ? i < (requiredLength - 1 | 0) : false) {
            var tmp$ret$33;
            // Inline function 'kotlin.ULong.or' call
            // Inline function 'kotlin.ULong.or' call
            // Inline function 'kotlin.ULong.shr' call
            // Inline function 'kotlin.UInt.toULong' call
            var tmp32_toULong = UIntArray__get_impl_gp5kza(operand, position - 1 | 0);
            var tmp33_shr = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp32_toULong)).e6(new Long(-1, 0)));
            var tmp34_shr = 32 - shiftAmount | 0;
            var tmp37_or = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp33_shr).e7(tmp34_shr));
            // Inline function 'kotlin.ULong.shl' call
            // Inline function 'kotlin.UInt.toULong' call
            var tmp35_toULong = UIntArray__get_impl_gp5kza(operand, position);
            var tmp36_shl = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp35_toULong)).e6(new Long(-1, 0)));
            var tmp38_or = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp36_shl).f7(shiftAmount));
            var tmp44_or = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp37_or).te(_ULong___get_data__impl__fggpzb(tmp38_or)));
            // Inline function 'kotlin.ULong.and' call
            // Inline function 'kotlin.ULong.shl' call
            // Inline function 'kotlin.UInt.toULong' call
            var tmp39_toULong = UIntArray__get_impl_gp5kza(operand, position + 1 | 0);
            var tmp40_shl = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp39_toULong)).e6(new Long(-1, 0)));
            var tmp41_shl = 32 + shiftAmount | 0;
            var tmp42_and = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp40_shl).f7(tmp41_shl));
            var tmp43_and = this.jn_1;
            var tmp45_or = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp42_and).e6(_ULong___get_data__impl__fggpzb(tmp43_and)));
            tmp$ret$33 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp44_or).te(_ULong___get_data__impl__fggpzb(tmp45_or)));
            ULongArray__set_impl_z19mvh(result, i, tmp$ret$33);
          } else if (i === (requiredLength - 1 | 0)) {
            if (position < _UIntArray___get_size__impl__r6l8ci(operand)) {
              var tmp$ret$38;
              // Inline function 'kotlin.ULong.or' call
              // Inline function 'kotlin.ULong.shr' call
              // Inline function 'kotlin.UInt.toULong' call
              var tmp46_toULong = UIntArray__get_impl_gp5kza(operand, position - 1 | 0);
              var tmp47_shr = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp46_toULong)).e6(new Long(-1, 0)));
              var tmp48_shr = 32 - shiftAmount | 0;
              var tmp51_or = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp47_shr).e7(tmp48_shr));
              // Inline function 'kotlin.ULong.shl' call
              // Inline function 'kotlin.UInt.toULong' call
              var tmp49_toULong = UIntArray__get_impl_gp5kza(operand, position);
              var tmp50_shl = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp49_toULong)).e6(new Long(-1, 0)));
              var tmp52_or = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp50_shl).f7(shiftAmount));
              tmp$ret$38 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp51_or).te(_ULong___get_data__impl__fggpzb(tmp52_or)));
              ULongArray__set_impl_z19mvh(result, i, tmp$ret$38);
            } else {
              var tmp$ret$40;
              // Inline function 'kotlin.ULong.shr' call
              // Inline function 'kotlin.UInt.toULong' call
              var tmp53_toULong = UIntArray__get_impl_gp5kza(operand, position - 1 | 0);
              var tmp54_shr = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp53_toULong)).e6(new Long(-1, 0)));
              var tmp55_shr = 32 - shiftAmount | 0;
              tmp$ret$40 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp54_shr).e7(tmp55_shr));
              ULongArray__set_impl_z19mvh(result, i, tmp$ret$40);
            }
          }
        }
      }
       while (inductionVariable < requiredLength);
    return result;
  };
  protoOf(BigInteger63Arithmetic).bo = function (first, second) {
    return this.pr(first, second);
  };
  protoOf(BigInteger63Arithmetic).qq = function (_this__u8e3s4, other) {
    return signedAdd(this, _this__u8e3s4, other);
  };
  protoOf(BigInteger63Arithmetic).sq = function (_this__u8e3s4, other) {
    return signedSubtract(this, _this__u8e3s4, other);
  };
  protoOf(BigInteger63Arithmetic).pq = function (_this__u8e3s4, other) {
    return signedMultiply(this, _this__u8e3s4, other);
  };
  protoOf(BigInteger63Arithmetic).kr = function (_this__u8e3s4, other) {
    return signedDivide(this, _this__u8e3s4, other);
  };
  protoOf(BigInteger63Arithmetic).oq = function (_this__u8e3s4, places) {
    return new SignedULongArray(this.or(_this__u8e3s4.tq_1, places), _this__u8e3s4.uq_1);
  };
  protoOf(BigInteger63Arithmetic).rq = function (_this__u8e3s4, places) {
    return new SignedULongArray(this.kq(_this__u8e3s4.tq_1, places), _this__u8e3s4.uq_1);
  };
  protoOf(BigInteger63Arithmetic).nq = function (_this__u8e3s4, operand) {
    return new SignedULongArray(this.xr(_this__u8e3s4.tq_1, operand), _this__u8e3s4.uq_1);
  };
  protoOf(BigInteger63Arithmetic).nm = function (number, base) {
    var parsed = this.zm_1;
    // Inline function 'kotlin.text.forEach' call
    // Inline function 'kotlin.text.toLowerCase' call
    // Inline function 'kotlin.js.asDynamic' call
    var indexedObject = number.toLowerCase();
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var element = charSequenceGet(indexedObject, inductionVariable);
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.parseForBase.<anonymous>' call
      var tmp = BigInteger63Arithmetic_getInstance();
      var tmp_0 = BigInteger63Arithmetic_getInstance();
      var tmp_1 = parsed;
      var tmp$ret$2;
      // Inline function 'kotlin.toULong' call
      tmp$ret$2 = _ULong___init__impl__c78o9k(toLong(base));
      var tmp_2 = tmp_0.yr(tmp_1, tmp$ret$2);
      var tmp$ret$3;
      // Inline function 'kotlin.toULong' call
      var tmp0_toULong = toDigit(element, base);
      tmp$ret$3 = _ULong___init__impl__c78o9k(toLong(tmp0_toULong));
      parsed = tmp.qr(tmp_2, tmp$ret$3);
    }
    return this.qn(parsed);
  };
  protoOf(BigInteger63Arithmetic).io = function (operand, base) {
    // Inline function 'kotlin.collections.copyOf' call
    var copy = _ULongArray___init__impl__twm1l3(copyOf(_ULongArray___get_storage__impl__28e64j(operand)));
    // Inline function 'kotlin.ulongArrayOf' call
    var tmp$ret$1;
    // Inline function 'kotlin.toULong' call
    tmp$ret$1 = _ULong___init__impl__c78o9k(toLong(base));
    var baseArray = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$1]));
    var stringBuilder = StringBuilder_init_$Create$();
    while (!equals(copy, this.zm_1)) {
      var divremResult = this.zr(copy, baseArray);
      if (ULongArray__isEmpty_impl_c3yngu(divremResult.y3_1.t6_1)) {
        stringBuilder.uc(0);
      } else {
        stringBuilder.wc(toString_0(ULongArray__get_impl_pr71q9(divremResult.y3_1.t6_1, 0), base));
      }
      copy = divremResult.x3_1.t6_1;
    }
    // Inline function 'kotlin.text.reversed' call
    var tmp1_reversed = stringBuilder.toString();
    return toString(reversed(isCharSequence(tmp1_reversed) ? tmp1_reversed : THROW_CCE()));
  };
  protoOf(BigInteger63Arithmetic).xr = function (operand, mask) {
    var tmp;
    if (_ULongArray___get_size__impl__ju6dtr(operand) > _ULongArray___get_size__impl__ju6dtr(mask)) {
      tmp = new Pair(new ULongArray(operand), new ULongArray(mask));
    } else {
      tmp = new Pair(new ULongArray(mask), new ULongArray(operand));
    }
    var tmp0_container = tmp;
    var bigger = tmp0_container.j3().t6_1;
    var smaller = tmp0_container.k3().t6_1;
    // Inline function 'kotlin.ULongArray' call
    var tmp_0 = 0;
    var tmp_1 = _ULongArray___get_size__impl__ju6dtr(smaller);
    var tmp_2 = longArray(tmp_1);
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      // Inline function 'kotlin.ULong.toLong' call
      // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.and.<anonymous>' call
      // Inline function 'kotlin.ULong.and' call
      var tmp0_and = ULongArray__get_impl_pr71q9(operand, tmp_3);
      var tmp1_and = ULongArray__get_impl_pr71q9(mask, tmp_3);
      var tmp0_toLong = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_and).e6(_ULong___get_data__impl__fggpzb(tmp1_and)));
      tmp_2[tmp_3] = _ULong___get_data__impl__fggpzb(tmp0_toLong);
      tmp_0 = tmp_0 + 1 | 0;
    }
    return _ULongArray___init__impl__twm1l3(tmp_2);
  };
  protoOf(BigInteger63Arithmetic).kq = function (_this__u8e3s4, places) {
    return this.er(_this__u8e3s4, places);
  };
  protoOf(BigInteger63Arithmetic).or = function (_this__u8e3s4, places) {
    return this.fr(_this__u8e3s4, places);
  };
  protoOf(BigInteger63Arithmetic).lq = function (_this__u8e3s4, other) {
    return this.tn(_this__u8e3s4, other);
  };
  protoOf(BigInteger63Arithmetic).yq = function (_this__u8e3s4, other) {
    return this.sn(_this__u8e3s4, other);
  };
  protoOf(BigInteger63Arithmetic).ar = function (_this__u8e3s4, other) {
    return this.zn(_this__u8e3s4, other);
  };
  protoOf(BigInteger63Arithmetic).qr = function (_this__u8e3s4, other) {
    var tmp$ret$0;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$0 = _ULongArray___init__impl__twm1l3(longArrayOf([other]));
    return this.tn(_this__u8e3s4, tmp$ret$0);
  };
  protoOf(BigInteger63Arithmetic).mq = function (_this__u8e3s4, other) {
    var tmp$ret$0;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$0 = _ULongArray___init__impl__twm1l3(longArrayOf([other]));
    return this.sn(_this__u8e3s4, tmp$ret$0);
  };
  protoOf(BigInteger63Arithmetic).yr = function (_this__u8e3s4, other) {
    return this.jq(_this__u8e3s4, other);
  };
  protoOf(BigInteger63Arithmetic).br = function (_this__u8e3s4, other) {
    return this.bo(_this__u8e3s4, other).x3_1.t6_1;
  };
  protoOf(BigInteger63Arithmetic).zr = function (_this__u8e3s4, other) {
    return this.bo(_this__u8e3s4, other);
  };
  protoOf(BigInteger63Arithmetic).zq = function (_this__u8e3s4, other) {
    return this.wm(_this__u8e3s4, other);
  };
  protoOf(BigInteger63Arithmetic).tr = function (_this__u8e3s4, other) {
    var tmp$ret$0;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$0 = _ULongArray___init__impl__twm1l3(longArrayOf([other]));
    return this.wm(_this__u8e3s4, tmp$ret$0);
  };
  protoOf(BigInteger63Arithmetic).rr = function (_this__u8e3s4) {
    return this.vr(_this__u8e3s4);
  };
  protoOf(BigInteger63Arithmetic).sr = function (_this__u8e3s4) {
    return this.wr(_this__u8e3s4);
  };
  protoOf(BigInteger63Arithmetic).pm = function (uLong) {
    var tmp;
    var tmp$ret$0;
    // Inline function 'kotlin.ULong.and' call
    var tmp0_and = this.kn_1;
    tmp$ret$0 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(uLong).e6(_ULong___get_data__impl__fggpzb(tmp0_and)));
    if (!equals(tmp$ret$0, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      // Inline function 'kotlin.ulongArrayOf' call
      var tmp$ret$1;
      // Inline function 'kotlin.ULong.and' call
      var tmp1_and = this.gn_1;
      tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(uLong).e6(_ULong___get_data__impl__fggpzb(tmp1_and)));
      tmp = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$1, _ULong___init__impl__c78o9k(new Long(1, 0))]));
    } else {
      // Inline function 'kotlin.ulongArrayOf' call
      tmp = _ULongArray___init__impl__twm1l3(longArrayOf([uLong]));
    }
    return tmp;
  };
  protoOf(BigInteger63Arithmetic).rm = function (uInt) {
    // Inline function 'kotlin.ulongArrayOf' call
    var tmp$ret$0;
    // Inline function 'kotlin.UInt.toULong' call
    tmp$ret$0 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(uInt)).e6(new Long(-1, 0)));
    return _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$0]));
  };
  protoOf(BigInteger63Arithmetic).tm = function (uShort) {
    // Inline function 'kotlin.ulongArrayOf' call
    var tmp$ret$0;
    // Inline function 'kotlin.UShort.toULong' call
    tmp$ret$0 = _ULong___init__impl__c78o9k(toLong(_UShort___get_data__impl__g0245(uShort)).e6(new Long(65535, 0)));
    return _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$0]));
  };
  protoOf(BigInteger63Arithmetic).vm = function (uByte) {
    // Inline function 'kotlin.ulongArrayOf' call
    var tmp$ret$0;
    // Inline function 'kotlin.UByte.toULong' call
    tmp$ret$0 = _ULong___init__impl__c78o9k(toLong(_UByte___get_data__impl__jof9qr(uByte)).e6(new Long(255, 0)));
    return _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$0]));
  };
  protoOf(BigInteger63Arithmetic).fm = function (long) {
    Companion_getInstance();
    if (long.equals(new Long(0, -2147483648))) {
      // Inline function 'kotlin.ulongArrayOf' call
      return _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1, 0))]));
    }
    // Inline function 'kotlin.ulongArrayOf' call
    var tmp$ret$3;
    // Inline function 'kotlin.ULong.and' call
    // Inline function 'kotlin.toULong' call
    // Inline function 'kotlin.math.absoluteValue' call
    var tmp0_toULong = abs(long);
    var tmp1_and = _ULong___init__impl__c78o9k(tmp0_toULong);
    var tmp2_and = this.gn_1;
    tmp$ret$3 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_and).e6(_ULong___get_data__impl__fggpzb(tmp2_and)));
    return _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$3]));
  };
  protoOf(BigInteger63Arithmetic).gm = function (int) {
    // Inline function 'kotlin.ulongArrayOf' call
    var tmp$ret$1;
    // Inline function 'kotlin.toULong' call
    // Inline function 'kotlin.math.absoluteValue' call
    var tmp0_get_absoluteValue_aog79f = toLong(int);
    var tmp1_toULong = abs(tmp0_get_absoluteValue_aog79f);
    tmp$ret$1 = _ULong___init__impl__c78o9k(tmp1_toULong);
    return _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$1]));
  };
  protoOf(BigInteger63Arithmetic).hm = function (short) {
    // Inline function 'kotlin.ulongArrayOf' call
    var tmp$ret$1;
    // Inline function 'kotlin.toULong' call
    // Inline function 'kotlin.math.absoluteValue' call
    var tmp1_toULong = abs_0(short);
    tmp$ret$1 = _ULong___init__impl__c78o9k(toLong(tmp1_toULong));
    return _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$1]));
  };
  protoOf(BigInteger63Arithmetic).im = function (byte) {
    // Inline function 'kotlin.ulongArrayOf' call
    var tmp$ret$1;
    // Inline function 'kotlin.toULong' call
    // Inline function 'kotlin.math.absoluteValue' call
    var tmp1_toULong = abs_0(byte);
    tmp$ret$1 = _ULong___init__impl__c78o9k(toLong(tmp1_toULong));
    return _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$1]));
  };
  var BigInteger63Arithmetic_instance;
  function BigInteger63Arithmetic_getInstance() {
    if (BigInteger63Arithmetic_instance == null)
      new BigInteger63Arithmetic();
    return BigInteger63Arithmetic_instance;
  }
  function toDigit(_this__u8e3s4, base) {
    base = base === VOID ? 10 : base;
    var tmp;
    if (_Char___init__impl__6a9atx(48) <= _this__u8e3s4 ? _this__u8e3s4 <= _Char___init__impl__6a9atx(57) : false) {
      tmp = Char__toInt_impl_vasixd(Char__minus_impl_a2frrh_0(_this__u8e3s4, 48));
    } else if (_Char___init__impl__6a9atx(97) <= _this__u8e3s4 ? _this__u8e3s4 <= _Char___init__impl__6a9atx(122) : false) {
      tmp = Char__minus_impl_a2frrh(_this__u8e3s4, _Char___init__impl__6a9atx(97)) + 10 | 0;
    } else if (_Char___init__impl__6a9atx(65) <= _this__u8e3s4 ? _this__u8e3s4 <= _Char___init__impl__6a9atx(90) : false) {
      tmp = Char__minus_impl_a2frrh(_this__u8e3s4, _Char___init__impl__6a9atx(65)) + 10 | 0;
    } else if (_Char___init__impl__6a9atx(65313) <= _this__u8e3s4 ? _this__u8e3s4 <= _Char___init__impl__6a9atx(65338) : false) {
      tmp = Char__minus_impl_a2frrh(_this__u8e3s4, _Char___init__impl__6a9atx(65313)) - 10 | 0;
    } else if (_Char___init__impl__6a9atx(65345) <= _this__u8e3s4 ? _this__u8e3s4 <= _Char___init__impl__6a9atx(65370) : false) {
      tmp = Char__minus_impl_a2frrh(_this__u8e3s4, _Char___init__impl__6a9atx(65345)) - 10 | 0;
    } else if (_this__u8e3s4 === _Char___init__impl__6a9atx(46)) {
      throw NumberFormatException_init_$Create$('Invalid digit for radix ' + new Char(_this__u8e3s4) + ' (Possibly a decimal value, which is not supported by BigInteger parser');
    } else {
      throw NumberFormatException_init_$Create$('Invalid digit for radix ' + new Char(_this__u8e3s4));
    }
    var digit = tmp;
    if (digit < 0 ? true : digit >= base) {
      throw NumberFormatException_init_$Create$('' + new Char(_this__u8e3s4) + ' is not a valid digit for number system with base ' + base);
    }
    return digit;
  }
  function ComparisonWorkaround() {
    ComparisonWorkaround_instance = this;
  }
  protoOf(ComparisonWorkaround).am = function (number) {
    return true;
  };
  var ComparisonWorkaround_instance;
  function ComparisonWorkaround_getInstance() {
    if (ComparisonWorkaround_instance == null)
      new ComparisonWorkaround();
    return ComparisonWorkaround_instance;
  }
  //region block: post-declaration
  protoOf(Companion).di = tryFromFloat$default;
  protoOf(Companion).fi = tryFromDouble$default;
  protoOf(BigDecimal).vi = plus_1;
  protoOf(BigDecimal).wi = minus_0;
  protoOf(Companion_1).di = tryFromFloat$default;
  protoOf(Companion_1).fi = tryFromDouble$default;
  protoOf(BigInteger).mi = get_isNegative;
  protoOf(BigInteger).ni = get_isPositive;
  protoOf(BigInteger).qi = plus_0;
  protoOf(BigInteger).ri = minus;
  protoOf(BigInteger).si = times;
  protoOf(BigInteger).ti = div;
  protoOf(BigInteger).xi = div_0;
  protoOf(BigInteger).u4 = div_1;
  protoOf(BigInteger).ui = rem;
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = BigInteger_init_$Create$_0;
  _.$_$.b = Companion_getInstance_2;
  //endregion
  return _;
}));

//# sourceMappingURL=kotlin_com_ionspin_kotlin_bignum.js.map


/***/ }),

/***/ 15:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
  if (true)
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(72)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  else {}
}(this, function (_, kotlin_kotlin) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var protoOf = kotlin_kotlin.$_$.h8;
  var interfaceMeta = kotlin_kotlin.$_$.j7;
  var VOID = kotlin_kotlin.$_$.mb;
  var setMetadataFor = kotlin_kotlin.$_$.i8;
  var getKClassFromExpression = kotlin_kotlin.$_$.d;
  var classMeta = kotlin_kotlin.$_$.c7;
  var IllegalArgumentException_init_$Init$ = kotlin_kotlin.$_$.d1;
  var objectCreate = kotlin_kotlin.$_$.f8;
  var captureStack = kotlin_kotlin.$_$.w6;
  var IllegalArgumentException_init_$Init$_0 = kotlin_kotlin.$_$.f1;
  var IllegalArgumentException = kotlin_kotlin.$_$.ja;
  var collectionSizeOrDefault = kotlin_kotlin.$_$.f4;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.k;
  var toString = kotlin_kotlin.$_$.m8;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.e1;
  var THROW_CCE = kotlin_kotlin.$_$.oa;
  var isInterface = kotlin_kotlin.$_$.s7;
  var KClass = kotlin_kotlin.$_$.t8;
  var copyToArray = kotlin_kotlin.$_$.v4;
  var Triple = kotlin_kotlin.$_$.pa;
  var getKClass = kotlin_kotlin.$_$.e;
  var Pair = kotlin_kotlin.$_$.ma;
  var Entry = kotlin_kotlin.$_$.u3;
  var LinkedHashMap = kotlin_kotlin.$_$.r3;
  var MutableMap = kotlin_kotlin.$_$.x3;
  var Map = kotlin_kotlin.$_$.v3;
  var HashMap = kotlin_kotlin.$_$.p3;
  var LinkedHashSet = kotlin_kotlin.$_$.s3;
  var MutableSet = kotlin_kotlin.$_$.y3;
  var Set = kotlin_kotlin.$_$.z3;
  var HashSet = kotlin_kotlin.$_$.q3;
  var ArrayList = kotlin_kotlin.$_$.n3;
  var MutableList = kotlin_kotlin.$_$.w3;
  var List = kotlin_kotlin.$_$.t3;
  var Collection = kotlin_kotlin.$_$.o3;
  var isBlank = kotlin_kotlin.$_$.d9;
  var equals = kotlin_kotlin.$_$.e7;
  var toList = kotlin_kotlin.$_$.l6;
  var emptyList = kotlin_kotlin.$_$.b5;
  var ArrayList_init_$Create$_0 = kotlin_kotlin.$_$.l;
  var HashSet_init_$Create$ = kotlin_kotlin.$_$.q;
  var Unit_getInstance = kotlin_kotlin.$_$.l3;
  var toHashSet = kotlin_kotlin.$_$.g6;
  var toBooleanArray = kotlin_kotlin.$_$.f6;
  var withIndex = kotlin_kotlin.$_$.p6;
  var to = kotlin_kotlin.$_$.fb;
  var toMap = kotlin_kotlin.$_$.m6;
  var lazy = kotlin_kotlin.$_$.bb;
  var contentEquals = kotlin_kotlin.$_$.g4;
  var until = kotlin_kotlin.$_$.s8;
  var joinToString = kotlin_kotlin.$_$.l5;
  var KProperty1 = kotlin_kotlin.$_$.v8;
  var getPropertyCallableRef = kotlin_kotlin.$_$.g7;
  var objectMeta = kotlin_kotlin.$_$.g8;
  var ensureNotNull = kotlin_kotlin.$_$.ya;
  var getStringHashCode = kotlin_kotlin.$_$.h7;
  var Long = kotlin_kotlin.$_$.ka;
  var Char = kotlin_kotlin.$_$.ea;
  var toIntOrNull = kotlin_kotlin.$_$.r9;
  var hashCode = kotlin_kotlin.$_$.i7;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.g1;
  var isObject = kotlin_kotlin.$_$.v7;
  var ArrayList_init_$Create$_1 = kotlin_kotlin.$_$.m;
  var HashSet_init_$Create$_0 = kotlin_kotlin.$_$.r;
  var LinkedHashSet_init_$Create$ = kotlin_kotlin.$_$.v;
  var LinkedHashSet_init_$Create$_0 = kotlin_kotlin.$_$.w;
  var HashMap_init_$Create$ = kotlin_kotlin.$_$.n;
  var HashMap_init_$Create$_0 = kotlin_kotlin.$_$.o;
  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.t;
  var LinkedHashMap_init_$Create$_0 = kotlin_kotlin.$_$.u;
  var isArray = kotlin_kotlin.$_$.k7;
  var arrayIterator = kotlin_kotlin.$_$.u6;
  var asList = kotlin_kotlin.$_$.d4;
  var step = kotlin_kotlin.$_$.r8;
  var getValue = kotlin_kotlin.$_$.h5;
  var IntCompanionObject_getInstance = kotlin_kotlin.$_$.b3;
  var _UInt___get_data__impl__f0vqqw = kotlin_kotlin.$_$.x1;
  var UInt = kotlin_kotlin.$_$.sa;
  var _UInt___init__impl__l7qpdl = kotlin_kotlin.$_$.w1;
  var Companion_getInstance = kotlin_kotlin.$_$.g3;
  var _ULong___get_data__impl__fggpzb = kotlin_kotlin.$_$.j2;
  var ULong = kotlin_kotlin.$_$.ua;
  var _ULong___init__impl__c78o9k = kotlin_kotlin.$_$.i2;
  var ByteCompanionObject_getInstance = kotlin_kotlin.$_$.y2;
  var _UByte___get_data__impl__jof9qr = kotlin_kotlin.$_$.u1;
  var UByte = kotlin_kotlin.$_$.qa;
  var _UByte___init__impl__g9hnc4 = kotlin_kotlin.$_$.t1;
  var ShortCompanionObject_getInstance = kotlin_kotlin.$_$.c3;
  var _UShort___get_data__impl__g0245 = kotlin_kotlin.$_$.v2;
  var UShort = kotlin_kotlin.$_$.va;
  var _UShort___init__impl__jigrne = kotlin_kotlin.$_$.u2;
  var HashSet_init_$Create$_1 = kotlin_kotlin.$_$.p;
  var contentHashCode = kotlin_kotlin.$_$.j4;
  var fillArrayVal = kotlin_kotlin.$_$.f7;
  var booleanArray = kotlin_kotlin.$_$.v6;
  var Companion_getInstance_0 = kotlin_kotlin.$_$.f3;
  var isCharArray = kotlin_kotlin.$_$.n7;
  var charArray = kotlin_kotlin.$_$.y6;
  var DoubleCompanionObject_getInstance = kotlin_kotlin.$_$.z2;
  var isDoubleArray = kotlin_kotlin.$_$.p7;
  var FloatCompanionObject_getInstance = kotlin_kotlin.$_$.a3;
  var isFloatArray = kotlin_kotlin.$_$.q7;
  var isLongArray = kotlin_kotlin.$_$.t7;
  var longArray = kotlin_kotlin.$_$.z7;
  var isIntArray = kotlin_kotlin.$_$.r7;
  var isShortArray = kotlin_kotlin.$_$.w7;
  var isByteArray = kotlin_kotlin.$_$.m7;
  var BooleanCompanionObject_getInstance = kotlin_kotlin.$_$.x2;
  var isBooleanArray = kotlin_kotlin.$_$.l7;
  var coerceAtLeast = kotlin_kotlin.$_$.p8;
  var copyOf = kotlin_kotlin.$_$.q4;
  var copyOf_0 = kotlin_kotlin.$_$.s4;
  var copyOf_1 = kotlin_kotlin.$_$.t4;
  var copyOf_2 = kotlin_kotlin.$_$.n4;
  var copyOf_3 = kotlin_kotlin.$_$.u4;
  var copyOf_4 = kotlin_kotlin.$_$.m4;
  var copyOf_5 = kotlin_kotlin.$_$.r4;
  var copyOf_6 = kotlin_kotlin.$_$.o4;
  var Unit = kotlin_kotlin.$_$.wa;
  var capitalize = kotlin_kotlin.$_$.w8;
  var trimIndent = kotlin_kotlin.$_$.da;
  var equals_0 = kotlin_kotlin.$_$.c9;
  var PrimitiveClasses_getInstance = kotlin_kotlin.$_$.e3;
  var StringCompanionObject_getInstance = kotlin_kotlin.$_$.d3;
  var mapOf = kotlin_kotlin.$_$.t5;
  var charSequenceLength = kotlin_kotlin.$_$.a7;
  var last = kotlin_kotlin.$_$.o5;
  var lastOrNull = kotlin_kotlin.$_$.n5;
  var get_lastIndex = kotlin_kotlin.$_$.m5;
  var emptyMap = kotlin_kotlin.$_$.c5;
  var get_indices = kotlin_kotlin.$_$.j5;
  var IndexOutOfBoundsException_init_$Create$ = kotlin_kotlin.$_$.h1;
  var get_js = kotlin_kotlin.$_$.x7;
  var findAssociatedObject = kotlin_kotlin.$_$.c;
  //endregion
  //region block: pre-declaration
  setMetadataFor(SerializationStrategy, 'SerializationStrategy', interfaceMeta);
  setMetadataFor(DeserializationStrategy, 'DeserializationStrategy', interfaceMeta);
  setMetadataFor(KSerializer, 'KSerializer', interfaceMeta, VOID, [SerializationStrategy, DeserializationStrategy]);
  setMetadataFor(AbstractPolymorphicSerializer, 'AbstractPolymorphicSerializer', classMeta, VOID, [KSerializer]);
  setMetadataFor(SealedClassSerializer, 'SealedClassSerializer', classMeta, AbstractPolymorphicSerializer);
  setMetadataFor(SerializationException, 'SerializationException', classMeta, IllegalArgumentException);
  setMetadataFor(UnknownFieldException, 'UnknownFieldException', classMeta, SerializationException);
  setMetadataFor(MissingFieldException, 'MissingFieldException', classMeta, SerializationException);
  function get_isNullable() {
    return false;
  }
  function get_isInline() {
    return false;
  }
  setMetadataFor(SerialDescriptor, 'SerialDescriptor', interfaceMeta);
  setMetadataFor(elementDescriptors$1$1, VOID, classMeta);
  setMetadataFor(_no_name_provided__qut3iv, VOID, classMeta);
  setMetadataFor(ClassSerialDescriptorBuilder, 'ClassSerialDescriptorBuilder', classMeta);
  setMetadataFor(CachedNames, 'CachedNames', interfaceMeta);
  setMetadataFor(SerialDescriptorImpl, 'SerialDescriptorImpl', classMeta, VOID, [SerialDescriptor, CachedNames]);
  setMetadataFor(SerialKind, 'SerialKind', classMeta);
  setMetadataFor(ENUM, 'ENUM', objectMeta, SerialKind);
  setMetadataFor(PrimitiveKind, 'PrimitiveKind', classMeta, SerialKind);
  setMetadataFor(BOOLEAN, 'BOOLEAN', objectMeta, PrimitiveKind);
  setMetadataFor(BYTE, 'BYTE', objectMeta, PrimitiveKind);
  setMetadataFor(CHAR, 'CHAR', objectMeta, PrimitiveKind);
  setMetadataFor(SHORT, 'SHORT', objectMeta, PrimitiveKind);
  setMetadataFor(INT, 'INT', objectMeta, PrimitiveKind);
  setMetadataFor(LONG, 'LONG', objectMeta, PrimitiveKind);
  setMetadataFor(FLOAT, 'FLOAT', objectMeta, PrimitiveKind);
  setMetadataFor(DOUBLE, 'DOUBLE', objectMeta, PrimitiveKind);
  setMetadataFor(STRING, 'STRING', objectMeta, PrimitiveKind);
  setMetadataFor(StructureKind, 'StructureKind', classMeta, SerialKind);
  setMetadataFor(CLASS, 'CLASS', objectMeta, StructureKind);
  setMetadataFor(LIST, 'LIST', objectMeta, StructureKind);
  setMetadataFor(MAP, 'MAP', objectMeta, StructureKind);
  setMetadataFor(OBJECT, 'OBJECT', objectMeta, StructureKind);
  setMetadataFor(PolymorphicKind, 'PolymorphicKind', classMeta, SerialKind);
  setMetadataFor(SEALED, 'SEALED', objectMeta, PolymorphicKind);
  function decodeSerializableValue(deserializer) {
    return deserializer.cs(this);
  }
  setMetadataFor(Decoder, 'Decoder', interfaceMeta);
  function decodeSequentially() {
    return false;
  }
  function decodeCollectionSize(descriptor) {
    return -1;
  }
  function decodeSerializableElement$default(descriptor, index, deserializer, previousValue, $super) {
    previousValue = previousValue === VOID ? null : previousValue;
    return $super === VOID ? this.ou(descriptor, index, deserializer, previousValue) : $super.ou.call(this, descriptor, index, deserializer, previousValue);
  }
  setMetadataFor(CompositeDecoder, 'CompositeDecoder', interfaceMeta);
  setMetadataFor(AbstractDecoder, 'AbstractDecoder', classMeta, VOID, [Decoder, CompositeDecoder]);
  function encodeNotNullMark() {
  }
  function beginCollection(descriptor, collectionSize) {
    return this.du(descriptor);
  }
  function encodeSerializableValue(serializer, value) {
    serializer.bs(this, value);
  }
  setMetadataFor(Encoder, 'Encoder', interfaceMeta);
  setMetadataFor(AbstractEncoder, 'AbstractEncoder', classMeta, VOID, [Encoder]);
  setMetadataFor(Companion, 'Companion', objectMeta);
  setMetadataFor(ListLikeDescriptor, 'ListLikeDescriptor', classMeta, VOID, [SerialDescriptor]);
  setMetadataFor(PrimitiveArrayDescriptor, 'PrimitiveArrayDescriptor', classMeta, ListLikeDescriptor);
  setMetadataFor(ArrayListClassDesc, 'ArrayListClassDesc', classMeta, ListLikeDescriptor);
  setMetadataFor(HashSetClassDesc, 'HashSetClassDesc', classMeta, ListLikeDescriptor);
  setMetadataFor(LinkedHashSetClassDesc, 'LinkedHashSetClassDesc', classMeta, ListLikeDescriptor);
  setMetadataFor(MapLikeDescriptor, 'MapLikeDescriptor', classMeta, VOID, [SerialDescriptor]);
  setMetadataFor(HashMapClassDesc, 'HashMapClassDesc', classMeta, MapLikeDescriptor);
  setMetadataFor(LinkedHashMapClassDesc, 'LinkedHashMapClassDesc', classMeta, MapLikeDescriptor);
  setMetadataFor(ArrayClassDesc, 'ArrayClassDesc', classMeta, ListLikeDescriptor);
  setMetadataFor(AbstractCollectionSerializer, 'AbstractCollectionSerializer', classMeta, VOID, [KSerializer]);
  setMetadataFor(ListLikeSerializer, 'ListLikeSerializer', classMeta, AbstractCollectionSerializer);
  setMetadataFor(PrimitiveArraySerializer, 'PrimitiveArraySerializer', classMeta, ListLikeSerializer);
  setMetadataFor(PrimitiveArrayBuilder, 'PrimitiveArrayBuilder', classMeta);
  setMetadataFor(ArrayListSerializer, 'ArrayListSerializer', classMeta, ListLikeSerializer);
  setMetadataFor(HashSetSerializer, 'HashSetSerializer', classMeta, ListLikeSerializer);
  setMetadataFor(LinkedHashSetSerializer, 'LinkedHashSetSerializer', classMeta, ListLikeSerializer);
  setMetadataFor(MapLikeSerializer, 'MapLikeSerializer', classMeta, AbstractCollectionSerializer);
  setMetadataFor(HashMapSerializer, 'HashMapSerializer', classMeta, MapLikeSerializer);
  setMetadataFor(LinkedHashMapSerializer, 'LinkedHashMapSerializer', classMeta, MapLikeSerializer);
  setMetadataFor(ReferenceArraySerializer, 'ReferenceArraySerializer', classMeta, ListLikeSerializer);
  setMetadataFor(PluginGeneratedSerialDescriptor, 'PluginGeneratedSerialDescriptor', classMeta, VOID, [SerialDescriptor, CachedNames]);
  setMetadataFor(InlineClassDescriptor, 'InlineClassDescriptor', classMeta, PluginGeneratedSerialDescriptor);
  function typeParametersSerializers() {
    return get_EMPTY_SERIALIZER_ARRAY();
  }
  setMetadataFor(GeneratedSerializer, 'GeneratedSerializer', interfaceMeta, VOID, [KSerializer]);
  setMetadataFor(InlinePrimitiveDescriptor$1, VOID, classMeta, VOID, [GeneratedSerializer]);
  setMetadataFor(UIntSerializer, 'UIntSerializer', objectMeta, VOID, [KSerializer]);
  setMetadataFor(ULongSerializer, 'ULongSerializer', objectMeta, VOID, [KSerializer]);
  setMetadataFor(UByteSerializer, 'UByteSerializer', objectMeta, VOID, [KSerializer]);
  setMetadataFor(UShortSerializer, 'UShortSerializer', objectMeta, VOID, [KSerializer]);
  setMetadataFor(NullableSerializer, 'NullableSerializer', classMeta, VOID, [KSerializer]);
  setMetadataFor(SerialDescriptorForNullable, 'SerialDescriptorForNullable', classMeta, VOID, [SerialDescriptor, CachedNames]);
  setMetadataFor(ObjectSerializer, 'ObjectSerializer', classMeta, VOID, [KSerializer]);
  setMetadataFor(SerializerFactory, 'SerializerFactory', interfaceMeta);
  setMetadataFor(CharArraySerializer_0, 'CharArraySerializer', objectMeta, PrimitiveArraySerializer, [KSerializer, PrimitiveArraySerializer]);
  setMetadataFor(DoubleArraySerializer_0, 'DoubleArraySerializer', objectMeta, PrimitiveArraySerializer, [KSerializer, PrimitiveArraySerializer]);
  setMetadataFor(FloatArraySerializer_0, 'FloatArraySerializer', objectMeta, PrimitiveArraySerializer, [KSerializer, PrimitiveArraySerializer]);
  setMetadataFor(LongArraySerializer_0, 'LongArraySerializer', objectMeta, PrimitiveArraySerializer, [KSerializer, PrimitiveArraySerializer]);
  setMetadataFor(IntArraySerializer_0, 'IntArraySerializer', objectMeta, PrimitiveArraySerializer, [KSerializer, PrimitiveArraySerializer]);
  setMetadataFor(ShortArraySerializer_0, 'ShortArraySerializer', objectMeta, PrimitiveArraySerializer, [KSerializer, PrimitiveArraySerializer]);
  setMetadataFor(ByteArraySerializer_0, 'ByteArraySerializer', objectMeta, PrimitiveArraySerializer, [KSerializer, PrimitiveArraySerializer]);
  setMetadataFor(BooleanArraySerializer_0, 'BooleanArraySerializer', objectMeta, PrimitiveArraySerializer, [KSerializer, PrimitiveArraySerializer]);
  setMetadataFor(CharArrayBuilder, 'CharArrayBuilder', classMeta, PrimitiveArrayBuilder);
  setMetadataFor(DoubleArrayBuilder, 'DoubleArrayBuilder', classMeta, PrimitiveArrayBuilder);
  setMetadataFor(FloatArrayBuilder, 'FloatArrayBuilder', classMeta, PrimitiveArrayBuilder);
  setMetadataFor(LongArrayBuilder, 'LongArrayBuilder', classMeta, PrimitiveArrayBuilder);
  setMetadataFor(IntArrayBuilder, 'IntArrayBuilder', classMeta, PrimitiveArrayBuilder);
  setMetadataFor(ShortArrayBuilder, 'ShortArrayBuilder', classMeta, PrimitiveArrayBuilder);
  setMetadataFor(ByteArrayBuilder, 'ByteArrayBuilder', classMeta, PrimitiveArrayBuilder);
  setMetadataFor(BooleanArrayBuilder, 'BooleanArrayBuilder', classMeta, PrimitiveArrayBuilder);
  setMetadataFor(StringSerializer, 'StringSerializer', objectMeta, VOID, [KSerializer]);
  setMetadataFor(CharSerializer, 'CharSerializer', objectMeta, VOID, [KSerializer]);
  setMetadataFor(DoubleSerializer, 'DoubleSerializer', objectMeta, VOID, [KSerializer]);
  setMetadataFor(FloatSerializer, 'FloatSerializer', objectMeta, VOID, [KSerializer]);
  setMetadataFor(LongSerializer, 'LongSerializer', objectMeta, VOID, [KSerializer]);
  setMetadataFor(IntSerializer, 'IntSerializer', objectMeta, VOID, [KSerializer]);
  setMetadataFor(ShortSerializer, 'ShortSerializer', objectMeta, VOID, [KSerializer]);
  setMetadataFor(ByteSerializer, 'ByteSerializer', objectMeta, VOID, [KSerializer]);
  setMetadataFor(BooleanSerializer, 'BooleanSerializer', objectMeta, VOID, [KSerializer]);
  setMetadataFor(UnitSerializer, 'UnitSerializer', objectMeta, VOID, [KSerializer]);
  setMetadataFor(PrimitiveSerialDescriptor_0, 'PrimitiveSerialDescriptor', classMeta, VOID, [SerialDescriptor]);
  setMetadataFor(TaggedEncoder, 'TaggedEncoder', classMeta, VOID, [Encoder]);
  setMetadataFor(NamedValueEncoder, 'NamedValueEncoder', classMeta, TaggedEncoder);
  setMetadataFor(TaggedDecoder, 'TaggedDecoder', classMeta, VOID, [Decoder, CompositeDecoder]);
  setMetadataFor(NamedValueDecoder, 'NamedValueDecoder', classMeta, TaggedDecoder);
  setMetadataFor(MapEntry, 'MapEntry', classMeta, VOID, [Entry]);
  setMetadataFor(KeyValueSerializer, 'KeyValueSerializer', classMeta, VOID, [KSerializer]);
  setMetadataFor(MapEntrySerializer_0, 'MapEntrySerializer', classMeta, KeyValueSerializer);
  setMetadataFor(PairSerializer_0, 'PairSerializer', classMeta, KeyValueSerializer);
  setMetadataFor(TripleSerializer_0, 'TripleSerializer', classMeta, VOID, [KSerializer]);
  setMetadataFor(SerializersModule, 'SerializersModule', classMeta);
  setMetadataFor(SerialModuleImpl, 'SerialModuleImpl', classMeta, SerializersModule);
  setMetadataFor(SerializableWith, 'SerializableWith', classMeta, VOID, VOID, 0);
  //endregion
  function KSerializer() {
  }
  function DeserializationStrategy() {
  }
  function SerializationStrategy() {
  }
  function findPolymorphicSerializer(_this__u8e3s4, encoder, value) {
    var tmp0_elvis_lhs = _this__u8e3s4.ds(encoder, value);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throwSubtypeNotRegistered(getKClassFromExpression(value), _this__u8e3s4.es());
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function SealedClassSerializer() {
  }
  function SerializationException_init_$Init$(message, $this) {
    IllegalArgumentException_init_$Init$(message, $this);
    SerializationException.call($this);
    return $this;
  }
  function SerializationException_init_$Create$(message) {
    var tmp = SerializationException_init_$Init$(message, objectCreate(protoOf(SerializationException)));
    captureStack(tmp, SerializationException_init_$Create$);
    return tmp;
  }
  function SerializationException_init_$Init$_0(message, cause, $this) {
    IllegalArgumentException_init_$Init$_0(message, cause, $this);
    SerializationException.call($this);
    return $this;
  }
  function SerializationException() {
    captureStack(this, SerializationException);
  }
  function UnknownFieldException_init_$Init$(index, $this) {
    UnknownFieldException.call($this, 'An unknown field for index ' + index);
    return $this;
  }
  function UnknownFieldException_init_$Create$(index) {
    var tmp = UnknownFieldException_init_$Init$(index, objectCreate(protoOf(UnknownFieldException)));
    captureStack(tmp, UnknownFieldException_init_$Create$);
    return tmp;
  }
  function UnknownFieldException(message) {
    SerializationException_init_$Init$(message, this);
    captureStack(this, UnknownFieldException);
  }
  function MissingFieldException_init_$Init$(fieldNames, serialName, $this) {
    MissingFieldException.call($this, fieldNames.i() === 1 ? "Field '" + fieldNames.l(0) + "' is required for type with serial name '" + serialName + "', but it was missing" : 'Fields ' + fieldNames + " are required for type with serial name '" + serialName + "', but they were missing", null);
    return $this;
  }
  function MissingFieldException_init_$Create$(fieldNames, serialName) {
    var tmp = MissingFieldException_init_$Init$(fieldNames, serialName, objectCreate(protoOf(MissingFieldException)));
    captureStack(tmp, MissingFieldException_init_$Create$);
    return tmp;
  }
  function MissingFieldException(message, cause) {
    SerializationException_init_$Init$_0(message, cause, this);
    captureStack(this, MissingFieldException);
  }
  function serializer(_this__u8e3s4, type) {
    var tmp0_elvis_lhs = serializerByKTypeImpl(_this__u8e3s4, type, true);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      platformSpecificSerializerNotRegistered(kclass(type));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function serializerByKTypeImpl(_this__u8e3s4, type, failOnMissingTypeArgSerializer) {
    var rootClass = kclass(type);
    var isNullable = type.sb();
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = type.rb();
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$2;
      // Inline function 'kotlinx.serialization.serializerByKTypeImpl.<anonymous>' call
      var tmp$ret$1;
      $l$block: {
        // Inline function 'kotlin.requireNotNull' call
        var tmp0_requireNotNull = item.o4_1;
        // Inline function 'kotlin.contracts.contract' call
        if (tmp0_requireNotNull == null) {
          // Inline function 'kotlinx.serialization.serializerByKTypeImpl.<anonymous>.<anonymous>' call
          var message = 'Star projections in type arguments are not allowed, but had ' + type;
          throw IllegalArgumentException_init_$Create$(toString(message));
        } else {
          tmp$ret$1 = tmp0_requireNotNull;
          break $l$block;
        }
      }
      tmp$ret$2 = tmp$ret$1;
      tmp0_mapTo.a(tmp$ret$2);
    }
    var typeArguments = tmp0_mapTo;
    var tmp;
    if (typeArguments.p()) {
      var tmp0_elvis_lhs = serializerOrNull(rootClass);
      tmp = tmp0_elvis_lhs == null ? _this__u8e3s4.fs(rootClass) : tmp0_elvis_lhs;
    } else {
      tmp = builtinSerializer(_this__u8e3s4, typeArguments, rootClass, failOnMissingTypeArgSerializer);
    }
    var tmp1_safe_receiver = tmp;
    var tmp_0;
    if (tmp1_safe_receiver == null) {
      tmp_0 = null;
    } else {
      // Inline function 'kotlinx.serialization.internal.cast' call
      tmp_0 = (!(tmp1_safe_receiver == null) ? isInterface(tmp1_safe_receiver, KSerializer) : false) ? tmp1_safe_receiver : THROW_CCE();
    }
    var result = tmp_0;
    return result == null ? null : nullable(result, isNullable);
  }
  function serializerOrNull(_this__u8e3s4) {
    var tmp0_elvis_lhs = compiledSerializerImpl(_this__u8e3s4);
    return tmp0_elvis_lhs == null ? builtinSerializerOrNull(_this__u8e3s4) : tmp0_elvis_lhs;
  }
  function builtinSerializer(_this__u8e3s4, typeArguments, rootClass, failOnMissingTypeArgSerializer) {
    var tmp;
    if (failOnMissingTypeArgSerializer) {
      // Inline function 'kotlin.collections.map' call
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(typeArguments, 10));
      var tmp0_iterator = typeArguments.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        tmp$ret$0 = serializer(_this__u8e3s4, item);
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp = tmp0_mapTo;
    } else {
      // Inline function 'kotlin.collections.map' call
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(typeArguments, 10));
      var tmp0_iterator_0 = typeArguments.f();
      while (tmp0_iterator_0.g()) {
        var item_0 = tmp0_iterator_0.h();
        var tmp$ret$3;
        // Inline function 'kotlinx.serialization.builtinSerializer.<anonymous>' call
        var tmp0_elvis_lhs = serializerOrNull_0(_this__u8e3s4, item_0);
        var tmp_0;
        if (tmp0_elvis_lhs == null) {
          return null;
        } else {
          tmp_0 = tmp0_elvis_lhs;
        }
        tmp$ret$3 = tmp_0;
        tmp0_mapTo_0.a(tmp$ret$3);
      }
      tmp = tmp0_mapTo_0;
    }
    var serializers = tmp;
    var tmp_1;
    if (((rootClass.equals(getKClass(Collection)) ? true : rootClass.equals(getKClass(List))) ? true : rootClass.equals(getKClass(MutableList))) ? true : rootClass.equals(getKClass(ArrayList))) {
      tmp_1 = new ArrayListSerializer(serializers.l(0));
    } else if (rootClass.equals(getKClass(HashSet))) {
      tmp_1 = new HashSetSerializer(serializers.l(0));
    } else if ((rootClass.equals(getKClass(Set)) ? true : rootClass.equals(getKClass(MutableSet))) ? true : rootClass.equals(getKClass(LinkedHashSet))) {
      tmp_1 = new LinkedHashSetSerializer(serializers.l(0));
    } else if (rootClass.equals(getKClass(HashMap))) {
      tmp_1 = new HashMapSerializer(serializers.l(0), serializers.l(1));
    } else if ((rootClass.equals(getKClass(Map)) ? true : rootClass.equals(getKClass(MutableMap))) ? true : rootClass.equals(getKClass(LinkedHashMap))) {
      tmp_1 = new LinkedHashMapSerializer(serializers.l(0), serializers.l(1));
    } else if (rootClass.equals(getKClass(Entry))) {
      tmp_1 = MapEntrySerializer(serializers.l(0), serializers.l(1));
    } else if (rootClass.equals(getKClass(Pair))) {
      tmp_1 = PairSerializer(serializers.l(0), serializers.l(1));
    } else if (rootClass.equals(getKClass(Triple))) {
      tmp_1 = TripleSerializer(serializers.l(0), serializers.l(1), serializers.l(2));
    } else {
      if (isReferenceArray(rootClass)) {
        // Inline function 'kotlinx.serialization.internal.cast' call
        var tmp_2 = typeArguments.l(0).qb();
        var tmp0_cast = ArraySerializer((!(tmp_2 == null) ? isInterface(tmp_2, KClass) : false) ? tmp_2 : THROW_CCE(), serializers.l(0));
        return isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE();
      }
      var tmp$ret$7;
      // Inline function 'kotlin.collections.toTypedArray' call
      tmp$ret$7 = copyToArray(serializers);
      tmp_1 = constructSerializerForGivenTypeArgs(rootClass, tmp$ret$7.slice());
    }
    return tmp_1;
  }
  function nullable(_this__u8e3s4, shouldBeNullable) {
    if (shouldBeNullable)
      return get_nullable(_this__u8e3s4);
    return isInterface(_this__u8e3s4, KSerializer) ? _this__u8e3s4 : THROW_CCE();
  }
  function serializerOrNull_0(_this__u8e3s4, type) {
    return serializerByKTypeImpl(_this__u8e3s4, type, false);
  }
  function serializer_0(type) {
    return serializer(get_EmptySerializersModule(), type);
  }
  function serializer_1(_this__u8e3s4) {
    return StringSerializer_getInstance();
  }
  function serializer_2(_this__u8e3s4) {
    return CharSerializer_getInstance();
  }
  function CharArraySerializer() {
    return CharArraySerializer_getInstance();
  }
  function serializer_3(_this__u8e3s4) {
    return DoubleSerializer_getInstance();
  }
  function DoubleArraySerializer() {
    return DoubleArraySerializer_getInstance();
  }
  function serializer_4(_this__u8e3s4) {
    return FloatSerializer_getInstance();
  }
  function FloatArraySerializer() {
    return FloatArraySerializer_getInstance();
  }
  function serializer_5(_this__u8e3s4) {
    return LongSerializer_getInstance();
  }
  function LongArraySerializer() {
    return LongArraySerializer_getInstance();
  }
  function serializer_6(_this__u8e3s4) {
    return IntSerializer_getInstance();
  }
  function IntArraySerializer() {
    return IntArraySerializer_getInstance();
  }
  function serializer_7(_this__u8e3s4) {
    return ShortSerializer_getInstance();
  }
  function ShortArraySerializer() {
    return ShortArraySerializer_getInstance();
  }
  function serializer_8(_this__u8e3s4) {
    return ByteSerializer_getInstance();
  }
  function ByteArraySerializer() {
    return ByteArraySerializer_getInstance();
  }
  function serializer_9(_this__u8e3s4) {
    return BooleanSerializer_getInstance();
  }
  function BooleanArraySerializer() {
    return BooleanArraySerializer_getInstance();
  }
  function serializer_10(_this__u8e3s4) {
    return UnitSerializer_getInstance();
  }
  function serializer_11(_this__u8e3s4) {
    return UIntSerializer_getInstance();
  }
  function serializer_12(_this__u8e3s4) {
    return ULongSerializer_getInstance();
  }
  function serializer_13(_this__u8e3s4) {
    return UByteSerializer_getInstance();
  }
  function serializer_14(_this__u8e3s4) {
    return UShortSerializer_getInstance();
  }
  function MapEntrySerializer(keySerializer, valueSerializer) {
    return new MapEntrySerializer_0(keySerializer, valueSerializer);
  }
  function PairSerializer(keySerializer, valueSerializer) {
    return new PairSerializer_0(keySerializer, valueSerializer);
  }
  function TripleSerializer(aSerializer, bSerializer, cSerializer) {
    return new TripleSerializer_0(aSerializer, bSerializer, cSerializer);
  }
  function ArraySerializer(kClass, elementSerializer) {
    return new ReferenceArraySerializer(kClass, elementSerializer);
  }
  function get_nullable(_this__u8e3s4) {
    var tmp;
    if (_this__u8e3s4.as().gs()) {
      tmp = isInterface(_this__u8e3s4, KSerializer) ? _this__u8e3s4 : THROW_CCE();
    } else {
      tmp = new NullableSerializer(_this__u8e3s4);
    }
    return tmp;
  }
  function ListSerializer(elementSerializer) {
    return new ArrayListSerializer(elementSerializer);
  }
  function MapSerializer(keySerializer, valueSerializer) {
    return new LinkedHashMapSerializer(keySerializer, valueSerializer);
  }
  function SerialDescriptor() {
  }
  function get_elementDescriptors(_this__u8e3s4) {
    // Inline function 'kotlin.collections.Iterable' call
    return new _no_name_provided__qut3iv(_this__u8e3s4);
  }
  function elementDescriptors$1$1($this_elementDescriptors) {
    this.ps_1 = $this_elementDescriptors;
    this.os_1 = $this_elementDescriptors.ks();
  }
  protoOf(elementDescriptors$1$1).g = function () {
    return this.os_1 > 0;
  };
  protoOf(elementDescriptors$1$1).h = function () {
    var tmp = this.ps_1.ks();
    var tmp1 = this.os_1;
    this.os_1 = tmp1 - 1 | 0;
    return this.ps_1.ns(tmp - tmp1 | 0);
  };
  function _no_name_provided__qut3iv($this_elementDescriptors) {
    this.qs_1 = $this_elementDescriptors;
  }
  protoOf(_no_name_provided__qut3iv).f = function () {
    // Inline function 'kotlinx.serialization.descriptors.<get-elementDescriptors>.<anonymous>' call
    return new elementDescriptors$1$1(this.qs_1);
  };
  function buildSerialDescriptor(serialName, kind, typeParameters, builder) {
    var tmp;
    if (builder === VOID) {
      tmp = buildSerialDescriptor$lambda;
    } else {
      tmp = builder;
    }
    builder = tmp;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.text.isNotBlank' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!isBlank(serialName)) {
      // Inline function 'kotlinx.serialization.descriptors.buildSerialDescriptor.<anonymous>' call
      var message = 'Blank serial names are prohibited';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!equals(kind, CLASS_getInstance())) {
      // Inline function 'kotlinx.serialization.descriptors.buildSerialDescriptor.<anonymous>' call
      var message_0 = "For StructureKind.CLASS please use 'buildClassSerialDescriptor' instead";
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
    var sdBuilder = new ClassSerialDescriptorBuilder(serialName);
    builder(sdBuilder);
    return new SerialDescriptorImpl(serialName, kind, sdBuilder.us_1.i(), toList(typeParameters), sdBuilder);
  }
  function ClassSerialDescriptorBuilder(serialName) {
    this.rs_1 = serialName;
    this.ss_1 = false;
    this.ts_1 = emptyList();
    this.us_1 = ArrayList_init_$Create$_0();
    this.vs_1 = HashSet_init_$Create$();
    this.ws_1 = ArrayList_init_$Create$_0();
    this.xs_1 = ArrayList_init_$Create$_0();
    this.ys_1 = ArrayList_init_$Create$_0();
  }
  protoOf(ClassSerialDescriptorBuilder).zs = function (elementName, descriptor, annotations, isOptional) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!this.vs_1.a(elementName)) {
      // Inline function 'kotlinx.serialization.descriptors.ClassSerialDescriptorBuilder.element.<anonymous>' call
      var message = "Element with name '" + elementName + "' is already registered";
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.collections.plusAssign' call
    this.us_1.a(elementName);
    // Inline function 'kotlin.collections.plusAssign' call
    this.ws_1.a(descriptor);
    // Inline function 'kotlin.collections.plusAssign' call
    this.xs_1.a(annotations);
    // Inline function 'kotlin.collections.plusAssign' call
    this.ys_1.a(isOptional);
  };
  protoOf(ClassSerialDescriptorBuilder).at = function (elementName, descriptor, annotations, isOptional, $super) {
    annotations = annotations === VOID ? emptyList() : annotations;
    isOptional = isOptional === VOID ? false : isOptional;
    var tmp;
    if ($super === VOID) {
      this.zs(elementName, descriptor, annotations, isOptional);
      tmp = Unit_getInstance();
    } else {
      tmp = $super.zs.call(this, elementName, descriptor, annotations, isOptional);
    }
    return tmp;
  };
  function _get__hashCode__tgwhef($this) {
    // Inline function 'kotlin.getValue' call
    _hashCode$factory();
    return $this.mt_1.w();
  }
  function SerialDescriptorImpl$_hashCode$delegate$lambda(this$0) {
    return function () {
      return hashCodeImpl(this$0, this$0.lt_1);
    };
  }
  function SerialDescriptorImpl$toString$lambda(this$0) {
    return function (it) {
      return this$0.ls(it) + ': ' + this$0.ns(it).hs();
    };
  }
  function SerialDescriptorImpl(serialName, kind, elementsCount, typeParameters, builder) {
    this.bt_1 = serialName;
    this.ct_1 = kind;
    this.dt_1 = elementsCount;
    this.et_1 = builder.ts_1;
    this.ft_1 = toHashSet(builder.us_1);
    var tmp = this;
    // Inline function 'kotlin.collections.toTypedArray' call
    var tmp0_toTypedArray = builder.us_1;
    tmp.gt_1 = copyToArray(tmp0_toTypedArray);
    this.ht_1 = compactArray(builder.ws_1);
    var tmp_0 = this;
    // Inline function 'kotlin.collections.toTypedArray' call
    var tmp0_toTypedArray_0 = builder.xs_1;
    tmp_0.it_1 = copyToArray(tmp0_toTypedArray_0);
    this.jt_1 = toBooleanArray(builder.ys_1);
    var tmp_1 = this;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = withIndex(this.gt_1);
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$2;
      // Inline function 'kotlinx.serialization.descriptors.SerialDescriptorImpl.name2Index.<anonymous>' call
      tmp$ret$2 = to(item.i3_1, item.h3_1);
      tmp0_mapTo.a(tmp$ret$2);
    }
    tmp_1.kt_1 = toMap(tmp0_mapTo);
    this.lt_1 = compactArray(typeParameters);
    var tmp_2 = this;
    tmp_2.mt_1 = lazy(SerialDescriptorImpl$_hashCode$delegate$lambda(this));
  }
  protoOf(SerialDescriptorImpl).hs = function () {
    return this.bt_1;
  };
  protoOf(SerialDescriptorImpl).is = function () {
    return this.ct_1;
  };
  protoOf(SerialDescriptorImpl).ks = function () {
    return this.dt_1;
  };
  protoOf(SerialDescriptorImpl).nt = function () {
    return this.ft_1;
  };
  protoOf(SerialDescriptorImpl).ls = function (index) {
    return getChecked(this.gt_1, index);
  };
  protoOf(SerialDescriptorImpl).ms = function (name) {
    var tmp0_elvis_lhs = this.kt_1.u2(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      Companion_getInstance_1();
      tmp = -3;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  protoOf(SerialDescriptorImpl).ns = function (index) {
    return getChecked(this.ht_1, index);
  };
  protoOf(SerialDescriptorImpl).equals = function (other) {
    var tmp$ret$0;
    $l$block_5: {
      // Inline function 'kotlinx.serialization.internal.equalsImpl' call
      if (this === other) {
        tmp$ret$0 = true;
        break $l$block_5;
      }
      if (!(other instanceof SerialDescriptorImpl)) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.hs() === other.hs())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      // Inline function 'kotlinx.serialization.descriptors.SerialDescriptorImpl.equals.<anonymous>' call
      if (!contentEquals(this.lt_1, other.lt_1)) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.ks() === other.ks())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var inductionVariable = 0;
      var last = this.ks();
      if (inductionVariable < last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (!(this.ns(index).hs() === other.ns(index).hs())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
          if (!equals(this.ns(index).is(), other.ns(index).is())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
        }
         while (inductionVariable < last);
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  protoOf(SerialDescriptorImpl).hashCode = function () {
    return _get__hashCode__tgwhef(this);
  };
  protoOf(SerialDescriptorImpl).toString = function () {
    var tmp = until(0, this.dt_1);
    var tmp_0 = this.bt_1 + '(';
    return joinToString(tmp, ', ', tmp_0, ')', VOID, VOID, SerialDescriptorImpl$toString$lambda(this));
  };
  function buildClassSerialDescriptor(serialName, typeParameters, builderAction) {
    var tmp;
    if (builderAction === VOID) {
      tmp = buildClassSerialDescriptor$lambda;
    } else {
      tmp = builderAction;
    }
    builderAction = tmp;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.text.isNotBlank' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!isBlank(serialName)) {
      // Inline function 'kotlinx.serialization.descriptors.buildClassSerialDescriptor.<anonymous>' call
      var message = 'Blank serial names are prohibited';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    var sdBuilder = new ClassSerialDescriptorBuilder(serialName);
    builderAction(sdBuilder);
    return new SerialDescriptorImpl(serialName, CLASS_getInstance(), sdBuilder.us_1.i(), toList(typeParameters), sdBuilder);
  }
  function PrimitiveSerialDescriptor(serialName, kind) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.text.isNotBlank' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!isBlank(serialName)) {
      // Inline function 'kotlinx.serialization.descriptors.PrimitiveSerialDescriptor.<anonymous>' call
      var message = 'Blank serial names are prohibited';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    return PrimitiveDescriptorSafe(serialName, kind);
  }
  function buildSerialDescriptor$lambda($this$null) {
    return Unit_getInstance();
  }
  function buildClassSerialDescriptor$lambda($this$null) {
    return Unit_getInstance();
  }
  function _hashCode$factory() {
    return getPropertyCallableRef('_hashCode', 1, KProperty1, function (receiver) {
      return _get__hashCode__tgwhef(receiver);
    }, null);
  }
  function ENUM() {
    ENUM_instance = this;
    SerialKind.call(this);
  }
  var ENUM_instance;
  function ENUM_getInstance() {
    if (ENUM_instance == null)
      new ENUM();
    return ENUM_instance;
  }
  function SerialKind() {
  }
  protoOf(SerialKind).toString = function () {
    return ensureNotNull(getKClassFromExpression(this).eb());
  };
  protoOf(SerialKind).hashCode = function () {
    return getStringHashCode(this.toString());
  };
  function BOOLEAN() {
    BOOLEAN_instance = this;
    PrimitiveKind.call(this);
  }
  var BOOLEAN_instance;
  function BOOLEAN_getInstance() {
    if (BOOLEAN_instance == null)
      new BOOLEAN();
    return BOOLEAN_instance;
  }
  function BYTE() {
    BYTE_instance = this;
    PrimitiveKind.call(this);
  }
  var BYTE_instance;
  function BYTE_getInstance() {
    if (BYTE_instance == null)
      new BYTE();
    return BYTE_instance;
  }
  function CHAR() {
    CHAR_instance = this;
    PrimitiveKind.call(this);
  }
  var CHAR_instance;
  function CHAR_getInstance() {
    if (CHAR_instance == null)
      new CHAR();
    return CHAR_instance;
  }
  function SHORT() {
    SHORT_instance = this;
    PrimitiveKind.call(this);
  }
  var SHORT_instance;
  function SHORT_getInstance() {
    if (SHORT_instance == null)
      new SHORT();
    return SHORT_instance;
  }
  function INT() {
    INT_instance = this;
    PrimitiveKind.call(this);
  }
  var INT_instance;
  function INT_getInstance() {
    if (INT_instance == null)
      new INT();
    return INT_instance;
  }
  function LONG() {
    LONG_instance = this;
    PrimitiveKind.call(this);
  }
  var LONG_instance;
  function LONG_getInstance() {
    if (LONG_instance == null)
      new LONG();
    return LONG_instance;
  }
  function FLOAT() {
    FLOAT_instance = this;
    PrimitiveKind.call(this);
  }
  var FLOAT_instance;
  function FLOAT_getInstance() {
    if (FLOAT_instance == null)
      new FLOAT();
    return FLOAT_instance;
  }
  function DOUBLE() {
    DOUBLE_instance = this;
    PrimitiveKind.call(this);
  }
  var DOUBLE_instance;
  function DOUBLE_getInstance() {
    if (DOUBLE_instance == null)
      new DOUBLE();
    return DOUBLE_instance;
  }
  function STRING() {
    STRING_instance = this;
    PrimitiveKind.call(this);
  }
  var STRING_instance;
  function STRING_getInstance() {
    if (STRING_instance == null)
      new STRING();
    return STRING_instance;
  }
  function PrimitiveKind() {
    SerialKind.call(this);
  }
  function CLASS() {
    CLASS_instance = this;
    StructureKind.call(this);
  }
  var CLASS_instance;
  function CLASS_getInstance() {
    if (CLASS_instance == null)
      new CLASS();
    return CLASS_instance;
  }
  function LIST() {
    LIST_instance = this;
    StructureKind.call(this);
  }
  var LIST_instance;
  function LIST_getInstance() {
    if (LIST_instance == null)
      new LIST();
    return LIST_instance;
  }
  function MAP() {
    MAP_instance = this;
    StructureKind.call(this);
  }
  var MAP_instance;
  function MAP_getInstance() {
    if (MAP_instance == null)
      new MAP();
    return MAP_instance;
  }
  function OBJECT() {
    OBJECT_instance = this;
    StructureKind.call(this);
  }
  var OBJECT_instance;
  function OBJECT_getInstance() {
    if (OBJECT_instance == null)
      new OBJECT();
    return OBJECT_instance;
  }
  function StructureKind() {
    SerialKind.call(this);
  }
  function SEALED() {
    SEALED_instance = this;
    PolymorphicKind.call(this);
  }
  var SEALED_instance;
  function SEALED_getInstance() {
    if (SEALED_instance == null)
      new SEALED();
    return SEALED_instance;
  }
  function PolymorphicKind() {
    SerialKind.call(this);
  }
  function AbstractDecoder() {
  }
  protoOf(AbstractDecoder).ot = function () {
    throw SerializationException_init_$Create$('' + getKClassFromExpression(this) + " can't retrieve untyped values");
  };
  protoOf(AbstractDecoder).pt = function () {
    return true;
  };
  protoOf(AbstractDecoder).qt = function () {
    return null;
  };
  protoOf(AbstractDecoder).rt = function () {
    var tmp = this.ot();
    return typeof tmp === 'boolean' ? tmp : THROW_CCE();
  };
  protoOf(AbstractDecoder).st = function () {
    var tmp = this.ot();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  protoOf(AbstractDecoder).tt = function () {
    var tmp = this.ot();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  protoOf(AbstractDecoder).ut = function () {
    var tmp = this.ot();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  protoOf(AbstractDecoder).vt = function () {
    var tmp = this.ot();
    return tmp instanceof Long ? tmp : THROW_CCE();
  };
  protoOf(AbstractDecoder).wt = function () {
    var tmp = this.ot();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  protoOf(AbstractDecoder).xt = function () {
    var tmp = this.ot();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  protoOf(AbstractDecoder).yt = function () {
    var tmp = this.ot();
    return tmp instanceof Char ? tmp.p4_1 : THROW_CCE();
  };
  protoOf(AbstractDecoder).zt = function () {
    var tmp = this.ot();
    return typeof tmp === 'string' ? tmp : THROW_CCE();
  };
  protoOf(AbstractDecoder).au = function (inlineDescriptor) {
    return this;
  };
  protoOf(AbstractDecoder).bu = function (deserializer, previousValue) {
    return this.cu(deserializer);
  };
  protoOf(AbstractDecoder).du = function (descriptor) {
    return this;
  };
  protoOf(AbstractDecoder).eu = function (descriptor) {
  };
  protoOf(AbstractDecoder).fu = function (descriptor, index) {
    return this.rt();
  };
  protoOf(AbstractDecoder).gu = function (descriptor, index) {
    return this.st();
  };
  protoOf(AbstractDecoder).hu = function (descriptor, index) {
    return this.tt();
  };
  protoOf(AbstractDecoder).iu = function (descriptor, index) {
    return this.ut();
  };
  protoOf(AbstractDecoder).ju = function (descriptor, index) {
    return this.vt();
  };
  protoOf(AbstractDecoder).ku = function (descriptor, index) {
    return this.wt();
  };
  protoOf(AbstractDecoder).lu = function (descriptor, index) {
    return this.xt();
  };
  protoOf(AbstractDecoder).mu = function (descriptor, index) {
    return this.yt();
  };
  protoOf(AbstractDecoder).nu = function (descriptor, index) {
    return this.zt();
  };
  protoOf(AbstractDecoder).ou = function (descriptor, index, deserializer, previousValue) {
    return this.bu(deserializer, previousValue);
  };
  function AbstractEncoder() {
  }
  protoOf(AbstractEncoder).du = function (descriptor) {
    return this;
  };
  protoOf(AbstractEncoder).eu = function (descriptor) {
  };
  protoOf(AbstractEncoder).uu = function (descriptor, index) {
    return true;
  };
  protoOf(AbstractEncoder).vu = function (value) {
    throw SerializationException_init_$Create$('Non-serializable ' + getKClassFromExpression(value) + ' is not supported by ' + getKClassFromExpression(this) + ' encoder');
  };
  protoOf(AbstractEncoder).wu = function () {
    throw SerializationException_init_$Create$("'null' is not supported by default");
  };
  protoOf(AbstractEncoder).xu = function (value) {
    return this.vu(value);
  };
  protoOf(AbstractEncoder).yu = function (value) {
    return this.vu(value);
  };
  protoOf(AbstractEncoder).zu = function (value) {
    return this.vu(value);
  };
  protoOf(AbstractEncoder).av = function (value) {
    return this.vu(value);
  };
  protoOf(AbstractEncoder).bv = function (value) {
    return this.vu(value);
  };
  protoOf(AbstractEncoder).cv = function (value) {
    return this.vu(value);
  };
  protoOf(AbstractEncoder).dv = function (value) {
    return this.vu(value);
  };
  protoOf(AbstractEncoder).ev = function (value) {
    return this.vu(new Char(value));
  };
  protoOf(AbstractEncoder).fv = function (value) {
    return this.vu(value);
  };
  protoOf(AbstractEncoder).gv = function (inlineDescriptor) {
    return this;
  };
  protoOf(AbstractEncoder).hv = function (descriptor, index, value) {
    if (this.uu(descriptor, index)) {
      this.xu(value);
    }
  };
  protoOf(AbstractEncoder).iv = function (descriptor, index, value) {
    if (this.uu(descriptor, index)) {
      this.yu(value);
    }
  };
  protoOf(AbstractEncoder).jv = function (descriptor, index, value) {
    if (this.uu(descriptor, index)) {
      this.zu(value);
    }
  };
  protoOf(AbstractEncoder).kv = function (descriptor, index, value) {
    if (this.uu(descriptor, index)) {
      this.av(value);
    }
  };
  protoOf(AbstractEncoder).lv = function (descriptor, index, value) {
    if (this.uu(descriptor, index)) {
      this.bv(value);
    }
  };
  protoOf(AbstractEncoder).mv = function (descriptor, index, value) {
    if (this.uu(descriptor, index)) {
      this.cv(value);
    }
  };
  protoOf(AbstractEncoder).nv = function (descriptor, index, value) {
    if (this.uu(descriptor, index)) {
      this.dv(value);
    }
  };
  protoOf(AbstractEncoder).ov = function (descriptor, index, value) {
    if (this.uu(descriptor, index)) {
      this.ev(value);
    }
  };
  protoOf(AbstractEncoder).pv = function (descriptor, index, value) {
    if (this.uu(descriptor, index)) {
      this.fv(value);
    }
  };
  protoOf(AbstractEncoder).qv = function (descriptor, index, serializer, value) {
    if (this.uu(descriptor, index)) {
      this.rv(serializer, value);
    }
  };
  function Decoder() {
  }
  function Companion() {
    Companion_instance = this;
    this.uv_1 = -1;
    this.vv_1 = -3;
  }
  var Companion_instance;
  function Companion_getInstance_1() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function CompositeDecoder() {
  }
  function Encoder() {
  }
  function AbstractPolymorphicSerializer() {
  }
  protoOf(AbstractPolymorphicSerializer).wv = function (decoder, klassName) {
    return decoder.qu().xv(this.es(), klassName);
  };
  protoOf(AbstractPolymorphicSerializer).ds = function (encoder, value) {
    return encoder.qu().yv(this.es(), value);
  };
  function throwSubtypeNotRegistered(subClass, baseClass) {
    var tmp0_elvis_lhs = subClass.eb();
    throwSubtypeNotRegistered_0(tmp0_elvis_lhs == null ? '' + subClass : tmp0_elvis_lhs, baseClass);
  }
  function throwSubtypeNotRegistered_0(subClassName, baseClass) {
    var scope = "in the scope of '" + baseClass.eb() + "'";
    throw SerializationException_init_$Create$(subClassName == null ? 'Class discriminator was missing and no default polymorphic serializers were registered ' + scope : "Class '" + subClassName + "' is not registered for polymorphic serialization " + scope + '.\n' + "Mark the base class as 'sealed' or register the serializer explicitly.");
  }
  function CachedNames() {
  }
  function PrimitiveArrayDescriptor(primitive) {
    ListLikeDescriptor.call(this, primitive);
    this.bw_1 = primitive.hs() + 'Array';
  }
  protoOf(PrimitiveArrayDescriptor).hs = function () {
    return this.bw_1;
  };
  function ListLikeDescriptor(elementDescriptor) {
    this.cw_1 = elementDescriptor;
    this.dw_1 = 1;
  }
  protoOf(ListLikeDescriptor).is = function () {
    return LIST_getInstance();
  };
  protoOf(ListLikeDescriptor).ks = function () {
    return this.dw_1;
  };
  protoOf(ListLikeDescriptor).ls = function (index) {
    return index.toString();
  };
  protoOf(ListLikeDescriptor).ms = function (name) {
    var tmp0_elvis_lhs = toIntOrNull(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalArgumentException_init_$Create$(name + ' is not a valid list index');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  protoOf(ListLikeDescriptor).ns = function (index) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(index >= 0)) {
      // Inline function 'kotlinx.serialization.internal.ListLikeDescriptor.getElementDescriptor.<anonymous>' call
      var message = 'Illegal index ' + index + ', ' + this.hs() + ' expects only non-negative indices';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    return this.cw_1;
  };
  protoOf(ListLikeDescriptor).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof ListLikeDescriptor))
      return false;
    if (equals(this.cw_1, other.cw_1) ? this.hs() === other.hs() : false)
      return true;
    return false;
  };
  protoOf(ListLikeDescriptor).hashCode = function () {
    return imul(hashCode(this.cw_1), 31) + getStringHashCode(this.hs()) | 0;
  };
  protoOf(ListLikeDescriptor).toString = function () {
    return this.hs() + '(' + this.cw_1 + ')';
  };
  function ArrayListClassDesc(elementDesc) {
    ListLikeDescriptor.call(this, elementDesc);
  }
  protoOf(ArrayListClassDesc).hs = function () {
    return 'kotlin.collections.ArrayList';
  };
  function HashSetClassDesc(elementDesc) {
    ListLikeDescriptor.call(this, elementDesc);
  }
  protoOf(HashSetClassDesc).hs = function () {
    return 'kotlin.collections.HashSet';
  };
  function LinkedHashSetClassDesc(elementDesc) {
    ListLikeDescriptor.call(this, elementDesc);
  }
  protoOf(LinkedHashSetClassDesc).hs = function () {
    return 'kotlin.collections.LinkedHashSet';
  };
  function HashMapClassDesc(keyDesc, valueDesc) {
    MapLikeDescriptor.call(this, 'kotlin.collections.HashMap', keyDesc, valueDesc);
  }
  function LinkedHashMapClassDesc(keyDesc, valueDesc) {
    MapLikeDescriptor.call(this, 'kotlin.collections.LinkedHashMap', keyDesc, valueDesc);
  }
  function ArrayClassDesc(elementDesc) {
    ListLikeDescriptor.call(this, elementDesc);
  }
  protoOf(ArrayClassDesc).hs = function () {
    return 'kotlin.Array';
  };
  function MapLikeDescriptor(serialName, keyDescriptor, valueDescriptor) {
    this.kw_1 = serialName;
    this.lw_1 = keyDescriptor;
    this.mw_1 = valueDescriptor;
    this.nw_1 = 2;
  }
  protoOf(MapLikeDescriptor).hs = function () {
    return this.kw_1;
  };
  protoOf(MapLikeDescriptor).is = function () {
    return MAP_getInstance();
  };
  protoOf(MapLikeDescriptor).ks = function () {
    return this.nw_1;
  };
  protoOf(MapLikeDescriptor).ls = function (index) {
    return index.toString();
  };
  protoOf(MapLikeDescriptor).ms = function (name) {
    var tmp0_elvis_lhs = toIntOrNull(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalArgumentException_init_$Create$(name + ' is not a valid map index');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  protoOf(MapLikeDescriptor).ns = function (index) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(index >= 0)) {
      // Inline function 'kotlinx.serialization.internal.MapLikeDescriptor.getElementDescriptor.<anonymous>' call
      var message = 'Illegal index ' + index + ', ' + this.hs() + ' expects only non-negative indices';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    var tmp;
    switch (index % 2 | 0) {
      case 0:
        tmp = this.lw_1;
        break;
      case 1:
        tmp = this.mw_1;
        break;
      default:
        throw IllegalStateException_init_$Create$('Unreached');
    }
    return tmp;
  };
  protoOf(MapLikeDescriptor).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MapLikeDescriptor))
      return false;
    if (!(this.hs() === other.hs()))
      return false;
    if (!equals(this.lw_1, other.lw_1))
      return false;
    if (!equals(this.mw_1, other.mw_1))
      return false;
    return true;
  };
  protoOf(MapLikeDescriptor).hashCode = function () {
    var result = getStringHashCode(this.hs());
    result = imul(31, result) + hashCode(this.lw_1) | 0;
    result = imul(31, result) + hashCode(this.mw_1) | 0;
    return result;
  };
  protoOf(MapLikeDescriptor).toString = function () {
    return this.hs() + '(' + this.lw_1 + ', ' + this.mw_1 + ')';
  };
  function PrimitiveArraySerializer(primitiveSerializer) {
    ListLikeSerializer.call(this, primitiveSerializer);
    this.rw_1 = new PrimitiveArrayDescriptor(primitiveSerializer.as());
  }
  protoOf(PrimitiveArraySerializer).as = function () {
    return this.rw_1;
  };
  protoOf(PrimitiveArraySerializer).sw = function (_this__u8e3s4) {
    return _this__u8e3s4.tw();
  };
  protoOf(PrimitiveArraySerializer).uw = function (_this__u8e3s4) {
    return _this__u8e3s4.qa();
  };
  protoOf(PrimitiveArraySerializer).vw = function (_this__u8e3s4, size) {
    return _this__u8e3s4.u8(size);
  };
  protoOf(PrimitiveArraySerializer).ww = function (_this__u8e3s4) {
    // Inline function 'kotlin.error' call
    throw IllegalStateException_init_$Create$('This method lead to boxing and must not be used, use writeContents instead');
  };
  protoOf(PrimitiveArraySerializer).xw = function (_this__u8e3s4) {
    return this.ww((_this__u8e3s4 == null ? true : isObject(_this__u8e3s4)) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(PrimitiveArraySerializer).yw = function (_this__u8e3s4, index, element) {
    // Inline function 'kotlin.error' call
    throw IllegalStateException_init_$Create$('This method lead to boxing and must not be used, use Builder.append instead');
  };
  protoOf(PrimitiveArraySerializer).zw = function () {
    return this.bx(this.ax());
  };
  protoOf(PrimitiveArraySerializer).fx = function (encoder, value) {
    var size = this.gx(value);
    var composite = encoder.tv(this.rw_1, size);
    this.ex(composite, value, size);
    composite.eu(this.rw_1);
  };
  protoOf(PrimitiveArraySerializer).bs = function (encoder, value) {
    return this.fx(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  protoOf(PrimitiveArraySerializer).hx = function (encoder, value) {
    return this.fx(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  protoOf(PrimitiveArraySerializer).cs = function (decoder) {
    return this.ix(decoder, null);
  };
  function PrimitiveArrayBuilder() {
  }
  protoOf(PrimitiveArrayBuilder).lx = function (requiredCapacity, $super) {
    requiredCapacity = requiredCapacity === VOID ? this.tw() + 1 | 0 : requiredCapacity;
    var tmp;
    if ($super === VOID) {
      this.u8(requiredCapacity);
      tmp = Unit_getInstance();
    } else {
      tmp = $super.u8.call(this, requiredCapacity);
    }
    return tmp;
  };
  function ListLikeSerializer(elementSerializer) {
    AbstractCollectionSerializer.call(this);
    this.jx_1 = elementSerializer;
  }
  protoOf(ListLikeSerializer).hx = function (encoder, value) {
    var size = this.gx(value);
    var composite = encoder.tv(this.as(), size);
    var iterator = this.xw(value);
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        composite.qv(this.as(), index, this.jx_1, iterator.h());
      }
       while (inductionVariable < size);
    composite.eu(this.as());
  };
  protoOf(ListLikeSerializer).bs = function (encoder, value) {
    return this.hx(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  protoOf(ListLikeSerializer).kx = function (decoder, builder, startIndex, size) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(size >= 0)) {
      // Inline function 'kotlinx.serialization.internal.ListLikeSerializer.readAll.<anonymous>' call
      var message = 'Size must be known in advance when using READ_ALL';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.cx(decoder, startIndex + index | 0, builder, false);
      }
       while (inductionVariable < size);
  };
  protoOf(ListLikeSerializer).cx = function (decoder, index, builder, checkIndex) {
    this.yw(builder, index, decoder.pu(this.as(), index, this.jx_1));
  };
  function readSize($this, decoder, builder) {
    var size = decoder.tu($this.as());
    $this.vw(builder, size);
    return size;
  }
  function AbstractCollectionSerializer() {
  }
  protoOf(AbstractCollectionSerializer).ix = function (decoder, previous) {
    var tmp1_elvis_lhs = previous == null ? null : this.bx(previous);
    var builder = tmp1_elvis_lhs == null ? this.zw() : tmp1_elvis_lhs;
    var startIndex = this.sw(builder);
    var compositeDecoder = decoder.du(this.as());
    if (compositeDecoder.ru()) {
      this.kx(compositeDecoder, builder, startIndex, readSize(this, compositeDecoder, builder));
    } else {
      $l$loop: while (true) {
        var index = compositeDecoder.su(this.as());
        Companion_getInstance_1();
        if (index === -1)
          break $l$loop;
        this.dx(compositeDecoder, startIndex + index | 0, builder);
      }
    }
    compositeDecoder.eu(this.as());
    return this.uw(builder);
  };
  protoOf(AbstractCollectionSerializer).cs = function (decoder) {
    return this.ix(decoder, null);
  };
  protoOf(AbstractCollectionSerializer).dx = function (decoder, index, builder, checkIndex, $super) {
    checkIndex = checkIndex === VOID ? true : checkIndex;
    var tmp;
    if ($super === VOID) {
      this.cx(decoder, index, builder, checkIndex);
      tmp = Unit_getInstance();
    } else {
      tmp = $super.cx.call(this, decoder, index, builder, checkIndex);
    }
    return tmp;
  };
  function ArrayListSerializer(element) {
    ListLikeSerializer.call(this, element);
    this.nx_1 = new ArrayListClassDesc(element.as());
  }
  protoOf(ArrayListSerializer).as = function () {
    return this.nx_1;
  };
  protoOf(ArrayListSerializer).ox = function (_this__u8e3s4) {
    return _this__u8e3s4.i();
  };
  protoOf(ArrayListSerializer).gx = function (_this__u8e3s4) {
    return this.ox((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, List) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(ArrayListSerializer).px = function (_this__u8e3s4) {
    return _this__u8e3s4.f();
  };
  protoOf(ArrayListSerializer).xw = function (_this__u8e3s4) {
    return this.px((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, List) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(ArrayListSerializer).zw = function () {
    // Inline function 'kotlin.collections.arrayListOf' call
    return ArrayList_init_$Create$_0();
  };
  protoOf(ArrayListSerializer).qx = function (_this__u8e3s4) {
    return _this__u8e3s4.i();
  };
  protoOf(ArrayListSerializer).sw = function (_this__u8e3s4) {
    return this.qx(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(ArrayListSerializer).rx = function (_this__u8e3s4) {
    return _this__u8e3s4;
  };
  protoOf(ArrayListSerializer).uw = function (_this__u8e3s4) {
    return this.rx(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(ArrayListSerializer).sx = function (_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? ArrayList_init_$Create$_1(_this__u8e3s4) : tmp0_elvis_lhs;
  };
  protoOf(ArrayListSerializer).bx = function (_this__u8e3s4) {
    return this.sx((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, List) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(ArrayListSerializer).tx = function (_this__u8e3s4, size) {
    return _this__u8e3s4.u8(size);
  };
  protoOf(ArrayListSerializer).vw = function (_this__u8e3s4, size) {
    return this.tx(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE(), size);
  };
  protoOf(ArrayListSerializer).ux = function (_this__u8e3s4, index, element) {
    _this__u8e3s4.h8(index, element);
  };
  protoOf(ArrayListSerializer).yw = function (_this__u8e3s4, index, element) {
    var tmp = _this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE();
    return this.ux(tmp, index, (element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  function HashSetSerializer(eSerializer) {
    ListLikeSerializer.call(this, eSerializer);
    this.wx_1 = new HashSetClassDesc(eSerializer.as());
  }
  protoOf(HashSetSerializer).as = function () {
    return this.wx_1;
  };
  protoOf(HashSetSerializer).xx = function (_this__u8e3s4) {
    return _this__u8e3s4.i();
  };
  protoOf(HashSetSerializer).gx = function (_this__u8e3s4) {
    return this.xx((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Set) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(HashSetSerializer).yx = function (_this__u8e3s4) {
    return _this__u8e3s4.f();
  };
  protoOf(HashSetSerializer).xw = function (_this__u8e3s4) {
    return this.yx((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Set) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(HashSetSerializer).zw = function () {
    return HashSet_init_$Create$();
  };
  protoOf(HashSetSerializer).zx = function (_this__u8e3s4) {
    return _this__u8e3s4.i();
  };
  protoOf(HashSetSerializer).sw = function (_this__u8e3s4) {
    return this.zx(_this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(HashSetSerializer).ay = function (_this__u8e3s4) {
    return _this__u8e3s4;
  };
  protoOf(HashSetSerializer).uw = function (_this__u8e3s4) {
    return this.ay(_this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(HashSetSerializer).by = function (_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? HashSet_init_$Create$_0(_this__u8e3s4) : tmp0_elvis_lhs;
  };
  protoOf(HashSetSerializer).bx = function (_this__u8e3s4) {
    return this.by((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Set) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(HashSetSerializer).cy = function (_this__u8e3s4, size) {
  };
  protoOf(HashSetSerializer).vw = function (_this__u8e3s4, size) {
    return this.cy(_this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : THROW_CCE(), size);
  };
  protoOf(HashSetSerializer).dy = function (_this__u8e3s4, index, element) {
    _this__u8e3s4.a(element);
  };
  protoOf(HashSetSerializer).yw = function (_this__u8e3s4, index, element) {
    var tmp = _this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : THROW_CCE();
    return this.dy(tmp, index, (element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  function LinkedHashSetSerializer(eSerializer) {
    ListLikeSerializer.call(this, eSerializer);
    this.fy_1 = new LinkedHashSetClassDesc(eSerializer.as());
  }
  protoOf(LinkedHashSetSerializer).as = function () {
    return this.fy_1;
  };
  protoOf(LinkedHashSetSerializer).xx = function (_this__u8e3s4) {
    return _this__u8e3s4.i();
  };
  protoOf(LinkedHashSetSerializer).gx = function (_this__u8e3s4) {
    return this.xx((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Set) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(LinkedHashSetSerializer).yx = function (_this__u8e3s4) {
    return _this__u8e3s4.f();
  };
  protoOf(LinkedHashSetSerializer).xw = function (_this__u8e3s4) {
    return this.yx((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Set) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(LinkedHashSetSerializer).zw = function () {
    // Inline function 'kotlin.collections.linkedSetOf' call
    return LinkedHashSet_init_$Create$();
  };
  protoOf(LinkedHashSetSerializer).gy = function (_this__u8e3s4) {
    return _this__u8e3s4.i();
  };
  protoOf(LinkedHashSetSerializer).sw = function (_this__u8e3s4) {
    return this.gy(_this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(LinkedHashSetSerializer).hy = function (_this__u8e3s4) {
    return _this__u8e3s4;
  };
  protoOf(LinkedHashSetSerializer).uw = function (_this__u8e3s4) {
    return this.hy(_this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(LinkedHashSetSerializer).by = function (_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? LinkedHashSet_init_$Create$_0(_this__u8e3s4) : tmp0_elvis_lhs;
  };
  protoOf(LinkedHashSetSerializer).bx = function (_this__u8e3s4) {
    return this.by((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Set) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(LinkedHashSetSerializer).iy = function (_this__u8e3s4, size) {
  };
  protoOf(LinkedHashSetSerializer).vw = function (_this__u8e3s4, size) {
    return this.iy(_this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : THROW_CCE(), size);
  };
  protoOf(LinkedHashSetSerializer).jy = function (_this__u8e3s4, index, element) {
    _this__u8e3s4.a(element);
  };
  protoOf(LinkedHashSetSerializer).yw = function (_this__u8e3s4, index, element) {
    var tmp = _this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : THROW_CCE();
    return this.jy(tmp, index, (element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  function HashMapSerializer(kSerializer, vSerializer) {
    MapLikeSerializer.call(this, kSerializer, vSerializer);
    this.my_1 = new HashMapClassDesc(kSerializer.as(), vSerializer.as());
  }
  protoOf(HashMapSerializer).as = function () {
    return this.my_1;
  };
  protoOf(HashMapSerializer).ny = function (_this__u8e3s4) {
    return _this__u8e3s4.i();
  };
  protoOf(HashMapSerializer).gx = function (_this__u8e3s4) {
    return this.ny((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Map) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(HashMapSerializer).oy = function (_this__u8e3s4) {
    // Inline function 'kotlin.collections.iterator' call
    return _this__u8e3s4.u().f();
  };
  protoOf(HashMapSerializer).xw = function (_this__u8e3s4) {
    return this.oy((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Map) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(HashMapSerializer).zw = function () {
    return HashMap_init_$Create$();
  };
  protoOf(HashMapSerializer).py = function (_this__u8e3s4) {
    return _this__u8e3s4.i();
  };
  protoOf(HashMapSerializer).sw = function (_this__u8e3s4) {
    return this.py(_this__u8e3s4 instanceof HashMap ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(HashMapSerializer).qy = function (_this__u8e3s4) {
    return _this__u8e3s4;
  };
  protoOf(HashMapSerializer).uw = function (_this__u8e3s4) {
    return this.qy(_this__u8e3s4 instanceof HashMap ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(HashMapSerializer).ry = function (_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof HashMap ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? HashMap_init_$Create$_0(_this__u8e3s4) : tmp0_elvis_lhs;
  };
  protoOf(HashMapSerializer).bx = function (_this__u8e3s4) {
    return this.ry((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Map) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(HashMapSerializer).sy = function (_this__u8e3s4, size) {
  };
  protoOf(HashMapSerializer).vw = function (_this__u8e3s4, size) {
    return this.sy(_this__u8e3s4 instanceof HashMap ? _this__u8e3s4 : THROW_CCE(), size);
  };
  function LinkedHashMapSerializer(kSerializer, vSerializer) {
    MapLikeSerializer.call(this, kSerializer, vSerializer);
    this.xy_1 = new LinkedHashMapClassDesc(kSerializer.as(), vSerializer.as());
  }
  protoOf(LinkedHashMapSerializer).as = function () {
    return this.xy_1;
  };
  protoOf(LinkedHashMapSerializer).ny = function (_this__u8e3s4) {
    return _this__u8e3s4.i();
  };
  protoOf(LinkedHashMapSerializer).gx = function (_this__u8e3s4) {
    return this.ny((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Map) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(LinkedHashMapSerializer).oy = function (_this__u8e3s4) {
    // Inline function 'kotlin.collections.iterator' call
    return _this__u8e3s4.u().f();
  };
  protoOf(LinkedHashMapSerializer).xw = function (_this__u8e3s4) {
    return this.oy((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Map) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(LinkedHashMapSerializer).zw = function () {
    return LinkedHashMap_init_$Create$();
  };
  protoOf(LinkedHashMapSerializer).yy = function (_this__u8e3s4) {
    return _this__u8e3s4.i();
  };
  protoOf(LinkedHashMapSerializer).sw = function (_this__u8e3s4) {
    return this.yy(_this__u8e3s4 instanceof LinkedHashMap ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(LinkedHashMapSerializer).zy = function (_this__u8e3s4) {
    return _this__u8e3s4;
  };
  protoOf(LinkedHashMapSerializer).uw = function (_this__u8e3s4) {
    return this.zy(_this__u8e3s4 instanceof LinkedHashMap ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(LinkedHashMapSerializer).ry = function (_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof LinkedHashMap ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? LinkedHashMap_init_$Create$_0(_this__u8e3s4) : tmp0_elvis_lhs;
  };
  protoOf(LinkedHashMapSerializer).bx = function (_this__u8e3s4) {
    return this.ry((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Map) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(LinkedHashMapSerializer).az = function (_this__u8e3s4, size) {
  };
  protoOf(LinkedHashMapSerializer).vw = function (_this__u8e3s4, size) {
    return this.az(_this__u8e3s4 instanceof LinkedHashMap ? _this__u8e3s4 : THROW_CCE(), size);
  };
  function ReferenceArraySerializer(kClass, eSerializer) {
    ListLikeSerializer.call(this, eSerializer);
    this.cz_1 = kClass;
    this.dz_1 = new ArrayClassDesc(eSerializer.as());
  }
  protoOf(ReferenceArraySerializer).as = function () {
    return this.dz_1;
  };
  protoOf(ReferenceArraySerializer).ez = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  protoOf(ReferenceArraySerializer).gx = function (_this__u8e3s4) {
    return this.ez((!(_this__u8e3s4 == null) ? isArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(ReferenceArraySerializer).fz = function (_this__u8e3s4) {
    return arrayIterator(_this__u8e3s4);
  };
  protoOf(ReferenceArraySerializer).xw = function (_this__u8e3s4) {
    return this.fz((!(_this__u8e3s4 == null) ? isArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(ReferenceArraySerializer).zw = function () {
    // Inline function 'kotlin.collections.arrayListOf' call
    return ArrayList_init_$Create$_0();
  };
  protoOf(ReferenceArraySerializer).gz = function (_this__u8e3s4) {
    return _this__u8e3s4.i();
  };
  protoOf(ReferenceArraySerializer).sw = function (_this__u8e3s4) {
    return this.gz(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(ReferenceArraySerializer).hz = function (_this__u8e3s4) {
    return toNativeArrayImpl(_this__u8e3s4, this.cz_1);
  };
  protoOf(ReferenceArraySerializer).uw = function (_this__u8e3s4) {
    return this.hz(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(ReferenceArraySerializer).iz = function (_this__u8e3s4) {
    return ArrayList_init_$Create$_1(asList(_this__u8e3s4));
  };
  protoOf(ReferenceArraySerializer).bx = function (_this__u8e3s4) {
    return this.iz((!(_this__u8e3s4 == null) ? isArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(ReferenceArraySerializer).jz = function (_this__u8e3s4, size) {
    return _this__u8e3s4.u8(size);
  };
  protoOf(ReferenceArraySerializer).vw = function (_this__u8e3s4, size) {
    return this.jz(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE(), size);
  };
  protoOf(ReferenceArraySerializer).kz = function (_this__u8e3s4, index, element) {
    _this__u8e3s4.h8(index, element);
  };
  protoOf(ReferenceArraySerializer).yw = function (_this__u8e3s4, index, element) {
    var tmp = _this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE();
    return this.kz(tmp, index, (element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  function MapLikeSerializer(keySerializer, valueSerializer) {
    AbstractCollectionSerializer.call(this);
    this.ty_1 = keySerializer;
    this.uy_1 = valueSerializer;
  }
  protoOf(MapLikeSerializer).kx = function (decoder, builder, startIndex, size) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(size >= 0)) {
      // Inline function 'kotlinx.serialization.internal.MapLikeSerializer.readAll.<anonymous>' call
      var message = 'Size must be known in advance when using READ_ALL';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    var progression = step(until(0, imul(size, 2)), 2);
    var inductionVariable = progression.z_1;
    var last = progression.a1_1;
    var step_0 = progression.b1_1;
    if ((step_0 > 0 ? inductionVariable <= last : false) ? true : step_0 < 0 ? last <= inductionVariable : false)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + step_0 | 0;
        this.cx(decoder, startIndex + index | 0, builder, false);
      }
       while (!(index === last));
  };
  protoOf(MapLikeSerializer).cx = function (decoder, index, builder, checkIndex) {
    var key = decoder.pu(this.as(), index, this.ty_1);
    var tmp;
    if (checkIndex) {
      // Inline function 'kotlin.also' call
      var tmp0_also = decoder.su(this.as());
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlinx.serialization.internal.MapLikeSerializer.readElement.<anonymous>' call
      // Inline function 'kotlin.require' call
      // Inline function 'kotlin.contracts.contract' call
      if (!(tmp0_also === (index + 1 | 0))) {
        // Inline function 'kotlinx.serialization.internal.MapLikeSerializer.readElement.<anonymous>.<anonymous>' call
        var message = 'Value must follow key in a map, index for key: ' + index + ', returned index for value: ' + tmp0_also;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
      tmp = tmp0_also;
    } else {
      tmp = index + 1 | 0;
    }
    var vIndex = tmp;
    var tmp_0;
    var tmp_1;
    if (builder.o2(key)) {
      var tmp_2 = this.uy_1.as().is();
      tmp_1 = !(tmp_2 instanceof PrimitiveKind);
    } else {
      tmp_1 = false;
    }
    if (tmp_1) {
      tmp_0 = decoder.ou(this.as(), vIndex, this.uy_1, getValue(builder, key));
    } else {
      tmp_0 = decoder.pu(this.as(), vIndex, this.uy_1);
    }
    var value = tmp_0;
    // Inline function 'kotlin.collections.set' call
    builder.z3(key, value);
  };
  protoOf(MapLikeSerializer).hx = function (encoder, value) {
    var size = this.gx(value);
    var composite = encoder.tv(this.as(), size);
    var iterator = this.xw(value);
    var index = 0;
    // Inline function 'kotlin.collections.forEach' call
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = iterator;
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'kotlinx.serialization.internal.MapLikeSerializer.serialize.<anonymous>' call
      // Inline function 'kotlin.collections.component1' call
      var k = element.v();
      // Inline function 'kotlin.collections.component2' call
      var v = element.w();
      var tmp = this.as();
      var tmp0 = index;
      index = tmp0 + 1 | 0;
      composite.qv(tmp, tmp0, this.ty_1, k);
      var tmp_0 = this.as();
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      composite.qv(tmp_0, tmp1, this.uy_1, v);
    }
    composite.eu(this.as());
  };
  protoOf(MapLikeSerializer).bs = function (encoder, value) {
    return this.hx(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  function InlinePrimitiveDescriptor(name, primitiveSerializer) {
    return new InlineClassDescriptor(name, new InlinePrimitiveDescriptor$1(primitiveSerializer));
  }
  function InlineClassDescriptor(name, generatedSerializer) {
    PluginGeneratedSerialDescriptor.call(this, name, generatedSerializer, 1);
    this.xz_1 = true;
  }
  protoOf(InlineClassDescriptor).js = function () {
    return this.xz_1;
  };
  protoOf(InlineClassDescriptor).hashCode = function () {
    return imul(protoOf(PluginGeneratedSerialDescriptor).hashCode.call(this), 31);
  };
  protoOf(InlineClassDescriptor).equals = function (other) {
    var tmp$ret$0;
    $l$block_5: {
      // Inline function 'kotlinx.serialization.internal.equalsImpl' call
      if (this === other) {
        tmp$ret$0 = true;
        break $l$block_5;
      }
      if (!(other instanceof InlineClassDescriptor)) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.hs() === other.hs())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      // Inline function 'kotlinx.serialization.internal.InlineClassDescriptor.equals.<anonymous>' call
      if (!(other.xz_1 ? contentEquals(this.k10(), other.k10()) : false)) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.ks() === other.ks())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var inductionVariable = 0;
      var last = this.ks();
      if (inductionVariable < last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (!(this.ns(index).hs() === other.ns(index).hs())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
          if (!equals(this.ns(index).is(), other.ns(index).is())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
        }
         while (inductionVariable < last);
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  function InlinePrimitiveDescriptor$1($primitiveSerializer) {
    this.m10_1 = $primitiveSerializer;
  }
  protoOf(InlinePrimitiveDescriptor$1).n10 = function () {
    // Inline function 'kotlin.arrayOf' call
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    return [this.m10_1];
  };
  protoOf(InlinePrimitiveDescriptor$1).as = function () {
    // Inline function 'kotlin.error' call
    throw IllegalStateException_init_$Create$('unsupported');
  };
  protoOf(InlinePrimitiveDescriptor$1).bs = function (encoder, value) {
    // Inline function 'kotlin.error' call
    throw IllegalStateException_init_$Create$('unsupported');
  };
  protoOf(InlinePrimitiveDescriptor$1).cs = function (decoder) {
    // Inline function 'kotlin.error' call
    throw IllegalStateException_init_$Create$('unsupported');
  };
  function UIntSerializer() {
    UIntSerializer_instance = this;
    this.p10_1 = InlinePrimitiveDescriptor('kotlin.UInt', serializer_6(IntCompanionObject_getInstance()));
  }
  protoOf(UIntSerializer).as = function () {
    return this.p10_1;
  };
  protoOf(UIntSerializer).q10 = function (encoder, value) {
    var tmp0_safe_receiver = encoder.gv(this.p10_1);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      // Inline function 'kotlin.UInt.toInt' call
      tmp$ret$0 = _UInt___get_data__impl__f0vqqw(value);
      tmp0_safe_receiver.av(tmp$ret$0);
    }
  };
  protoOf(UIntSerializer).bs = function (encoder, value) {
    return this.q10(encoder, value instanceof UInt ? value.d6_1 : THROW_CCE());
  };
  protoOf(UIntSerializer).r10 = function (decoder) {
    // Inline function 'kotlin.toUInt' call
    var tmp0_toUInt = decoder.au(this.p10_1).ut();
    return _UInt___init__impl__l7qpdl(tmp0_toUInt);
  };
  protoOf(UIntSerializer).cs = function (decoder) {
    return new UInt(this.r10(decoder));
  };
  var UIntSerializer_instance;
  function UIntSerializer_getInstance() {
    if (UIntSerializer_instance == null)
      new UIntSerializer();
    return UIntSerializer_instance;
  }
  function ULongSerializer() {
    ULongSerializer_instance = this;
    this.s10_1 = InlinePrimitiveDescriptor('kotlin.ULong', serializer_5(Companion_getInstance()));
  }
  protoOf(ULongSerializer).as = function () {
    return this.s10_1;
  };
  protoOf(ULongSerializer).t10 = function (encoder, value) {
    var tmp0_safe_receiver = encoder.gv(this.s10_1);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      // Inline function 'kotlin.ULong.toLong' call
      tmp$ret$0 = _ULong___get_data__impl__fggpzb(value);
      tmp0_safe_receiver.bv(tmp$ret$0);
    }
  };
  protoOf(ULongSerializer).bs = function (encoder, value) {
    return this.t10(encoder, value instanceof ULong ? value.f1_1 : THROW_CCE());
  };
  protoOf(ULongSerializer).u10 = function (decoder) {
    // Inline function 'kotlin.toULong' call
    var tmp0_toULong = decoder.au(this.s10_1).vt();
    return _ULong___init__impl__c78o9k(tmp0_toULong);
  };
  protoOf(ULongSerializer).cs = function (decoder) {
    return new ULong(this.u10(decoder));
  };
  var ULongSerializer_instance;
  function ULongSerializer_getInstance() {
    if (ULongSerializer_instance == null)
      new ULongSerializer();
    return ULongSerializer_instance;
  }
  function UByteSerializer() {
    UByteSerializer_instance = this;
    this.v10_1 = InlinePrimitiveDescriptor('kotlin.UByte', serializer_8(ByteCompanionObject_getInstance()));
  }
  protoOf(UByteSerializer).as = function () {
    return this.v10_1;
  };
  protoOf(UByteSerializer).w10 = function (encoder, value) {
    var tmp0_safe_receiver = encoder.gv(this.v10_1);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      // Inline function 'kotlin.UByte.toByte' call
      tmp$ret$0 = _UByte___get_data__impl__jof9qr(value);
      tmp0_safe_receiver.yu(tmp$ret$0);
    }
  };
  protoOf(UByteSerializer).bs = function (encoder, value) {
    return this.w10(encoder, value instanceof UByte ? value.w5_1 : THROW_CCE());
  };
  protoOf(UByteSerializer).x10 = function (decoder) {
    // Inline function 'kotlin.toUByte' call
    var tmp0_toUByte = decoder.au(this.v10_1).st();
    return _UByte___init__impl__g9hnc4(tmp0_toUByte);
  };
  protoOf(UByteSerializer).cs = function (decoder) {
    return new UByte(this.x10(decoder));
  };
  var UByteSerializer_instance;
  function UByteSerializer_getInstance() {
    if (UByteSerializer_instance == null)
      new UByteSerializer();
    return UByteSerializer_instance;
  }
  function UShortSerializer() {
    UShortSerializer_instance = this;
    this.y10_1 = InlinePrimitiveDescriptor('kotlin.UShort', serializer_7(ShortCompanionObject_getInstance()));
  }
  protoOf(UShortSerializer).as = function () {
    return this.y10_1;
  };
  protoOf(UShortSerializer).z10 = function (encoder, value) {
    var tmp0_safe_receiver = encoder.gv(this.y10_1);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      // Inline function 'kotlin.UShort.toShort' call
      tmp$ret$0 = _UShort___get_data__impl__g0245(value);
      tmp0_safe_receiver.zu(tmp$ret$0);
    }
  };
  protoOf(UShortSerializer).bs = function (encoder, value) {
    return this.z10(encoder, value instanceof UShort ? value.z6_1 : THROW_CCE());
  };
  protoOf(UShortSerializer).a11 = function (decoder) {
    // Inline function 'kotlin.toUShort' call
    var tmp0_toUShort = decoder.au(this.y10_1).tt();
    return _UShort___init__impl__jigrne(tmp0_toUShort);
  };
  protoOf(UShortSerializer).cs = function (decoder) {
    return new UShort(this.a11(decoder));
  };
  var UShortSerializer_instance;
  function UShortSerializer_getInstance() {
    if (UShortSerializer_instance == null)
      new UShortSerializer();
    return UShortSerializer_instance;
  }
  function jsonCachedSerialNames(_this__u8e3s4) {
    return cachedSerialNames(_this__u8e3s4);
  }
  function NullableSerializer(serializer) {
    this.b11_1 = serializer;
    this.c11_1 = new SerialDescriptorForNullable(this.b11_1.as());
  }
  protoOf(NullableSerializer).as = function () {
    return this.c11_1;
  };
  protoOf(NullableSerializer).d11 = function (encoder, value) {
    if (!(value == null)) {
      encoder.sv();
      encoder.rv(this.b11_1, value);
    } else {
      encoder.wu();
    }
  };
  protoOf(NullableSerializer).bs = function (encoder, value) {
    return this.d11(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  protoOf(NullableSerializer).cs = function (decoder) {
    return decoder.pt() ? decoder.cu(this.b11_1) : decoder.qt();
  };
  protoOf(NullableSerializer).equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (!(other instanceof NullableSerializer))
      THROW_CCE();
    if (!equals(this.b11_1, other.b11_1))
      return false;
    return true;
  };
  protoOf(NullableSerializer).hashCode = function () {
    return hashCode(this.b11_1);
  };
  function SerialDescriptorForNullable(original) {
    this.e11_1 = original;
    this.f11_1 = this.e11_1.hs() + '?';
    this.g11_1 = cachedSerialNames(this.e11_1);
  }
  protoOf(SerialDescriptorForNullable).ns = function (index) {
    return this.e11_1.ns(index);
  };
  protoOf(SerialDescriptorForNullable).ms = function (name) {
    return this.e11_1.ms(name);
  };
  protoOf(SerialDescriptorForNullable).ls = function (index) {
    return this.e11_1.ls(index);
  };
  protoOf(SerialDescriptorForNullable).ks = function () {
    return this.e11_1.ks();
  };
  protoOf(SerialDescriptorForNullable).js = function () {
    return this.e11_1.js();
  };
  protoOf(SerialDescriptorForNullable).is = function () {
    return this.e11_1.is();
  };
  protoOf(SerialDescriptorForNullable).hs = function () {
    return this.f11_1;
  };
  protoOf(SerialDescriptorForNullable).nt = function () {
    return this.g11_1;
  };
  protoOf(SerialDescriptorForNullable).gs = function () {
    return true;
  };
  protoOf(SerialDescriptorForNullable).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SerialDescriptorForNullable))
      return false;
    if (!equals(this.e11_1, other.e11_1))
      return false;
    return true;
  };
  protoOf(SerialDescriptorForNullable).toString = function () {
    return '' + this.e11_1 + '?';
  };
  protoOf(SerialDescriptorForNullable).hashCode = function () {
    return imul(hashCode(this.e11_1), 31);
  };
  function ObjectSerializer(serialName, objectInstance) {
    this.h11_1 = objectInstance;
    this.i11_1 = buildSerialDescriptor(serialName, OBJECT_getInstance(), []);
  }
  protoOf(ObjectSerializer).as = function () {
    return this.i11_1;
  };
  protoOf(ObjectSerializer).bs = function (encoder, value) {
    encoder.du(this.i11_1).eu(this.i11_1);
  };
  protoOf(ObjectSerializer).cs = function (decoder) {
    decoder.du(this.i11_1).eu(this.i11_1);
    return this.h11_1;
  };
  function get_EMPTY_DESCRIPTOR_ARRAY() {
    _init_properties_Platform_common_kt__3qzecs();
    return EMPTY_DESCRIPTOR_ARRAY;
  }
  var EMPTY_DESCRIPTOR_ARRAY;
  function compactArray(_this__u8e3s4) {
    _init_properties_Platform_common_kt__3qzecs();
    // Inline function 'kotlin.takeUnless' call
    // Inline function 'kotlin.contracts.contract' call
    var tmp;
    // Inline function 'kotlinx.serialization.internal.compactArray.<anonymous>' call
    // Inline function 'kotlin.collections.isNullOrEmpty' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(_this__u8e3s4 == null ? true : _this__u8e3s4.p())) {
      tmp = _this__u8e3s4;
    } else {
      tmp = null;
    }
    var tmp0_safe_receiver = tmp;
    var tmp_0;
    if (tmp0_safe_receiver == null) {
      tmp_0 = null;
    } else {
      // Inline function 'kotlin.collections.toTypedArray' call
      tmp_0 = copyToArray(tmp0_safe_receiver);
    }
    var tmp1_elvis_lhs = tmp_0;
    return tmp1_elvis_lhs == null ? get_EMPTY_DESCRIPTOR_ARRAY() : tmp1_elvis_lhs;
  }
  function kclass(_this__u8e3s4) {
    _init_properties_Platform_common_kt__3qzecs();
    var t = _this__u8e3s4.qb();
    var tmp;
    if (!(t == null) ? isInterface(t, KClass) : false) {
      tmp = t;
    } else {
      var tmp0_error = 'Only KClass supported as classifier, got ' + t;
      throw IllegalStateException_init_$Create$(toString(tmp0_error));
    }
    var tmp_0 = tmp;
    return isInterface(tmp_0, KClass) ? tmp_0 : THROW_CCE();
  }
  function cachedSerialNames(_this__u8e3s4) {
    _init_properties_Platform_common_kt__3qzecs();
    if (isInterface(_this__u8e3s4, CachedNames))
      return _this__u8e3s4.nt();
    var result = HashSet_init_$Create$_1(_this__u8e3s4.ks());
    var inductionVariable = 0;
    var last = _this__u8e3s4.ks();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.collections.plusAssign' call
        var tmp0_plusAssign = _this__u8e3s4.ls(i);
        result.a(tmp0_plusAssign);
      }
       while (inductionVariable < last);
    return result;
  }
  var properties_initialized_Platform_common_kt_i7q4ty;
  function _init_properties_Platform_common_kt__3qzecs() {
    if (!properties_initialized_Platform_common_kt_i7q4ty) {
      properties_initialized_Platform_common_kt_i7q4ty = true;
      // Inline function 'kotlin.arrayOf' call
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      EMPTY_DESCRIPTOR_ARRAY = [];
    }
  }
  function throwMissingFieldException(seen, goldenMask, descriptor) {
    // Inline function 'kotlin.collections.mutableListOf' call
    var missingFields = ArrayList_init_$Create$_0();
    var missingFieldsBits = goldenMask & ~seen;
    var inductionVariable = 0;
    if (inductionVariable < 32)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!((missingFieldsBits & 1) === 0)) {
          // Inline function 'kotlin.collections.plusAssign' call
          var tmp0_plusAssign = descriptor.ls(i);
          missingFields.a(tmp0_plusAssign);
        }
        missingFieldsBits = missingFieldsBits >>> 1 | 0;
      }
       while (inductionVariable < 32);
    throw MissingFieldException_init_$Create$(missingFields, descriptor.hs());
  }
  function hashCodeImpl(_this__u8e3s4, typeParams) {
    var result = getStringHashCode(_this__u8e3s4.hs());
    result = imul(31, result) + contentHashCode(typeParams) | 0;
    var elementDescriptors = get_elementDescriptors(_this__u8e3s4);
    // Inline function 'kotlinx.serialization.internal.elementsHashCodeBy' call
    // Inline function 'kotlin.collections.fold' call
    var accumulator = 1;
    var tmp0_iterator = elementDescriptors.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'kotlinx.serialization.internal.elementsHashCodeBy.<anonymous>' call
      var tmp0_anonymous = accumulator;
      var tmp = imul(31, tmp0_anonymous);
      // Inline function 'kotlin.hashCode' call
      // Inline function 'kotlinx.serialization.internal.hashCodeImpl.<anonymous>' call
      var tmp0_safe_receiver = element.hs();
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
      accumulator = tmp + (tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs) | 0;
    }
    var namesHash = accumulator;
    // Inline function 'kotlinx.serialization.internal.elementsHashCodeBy' call
    // Inline function 'kotlin.collections.fold' call
    var accumulator_0 = 1;
    var tmp0_iterator_0 = elementDescriptors.f();
    while (tmp0_iterator_0.g()) {
      var element_0 = tmp0_iterator_0.h();
      // Inline function 'kotlinx.serialization.internal.elementsHashCodeBy.<anonymous>' call
      var tmp0_anonymous_0 = accumulator_0;
      var tmp_0 = imul(31, tmp0_anonymous_0);
      // Inline function 'kotlin.hashCode' call
      // Inline function 'kotlinx.serialization.internal.hashCodeImpl.<anonymous>' call
      var tmp0_safe_receiver_0 = element_0.is();
      var tmp1_elvis_lhs_0 = tmp0_safe_receiver_0 == null ? null : hashCode(tmp0_safe_receiver_0);
      accumulator_0 = tmp_0 + (tmp1_elvis_lhs_0 == null ? 0 : tmp1_elvis_lhs_0) | 0;
    }
    var kindHash = accumulator_0;
    result = imul(31, result) + namesHash | 0;
    result = imul(31, result) + kindHash | 0;
    return result;
  }
  function _get_indices__xyiwmu($this) {
    // Inline function 'kotlin.getValue' call
    indices$factory();
    return $this.g10_1.w();
  }
  function _get_childSerializers__7vnyfa($this) {
    // Inline function 'kotlin.getValue' call
    childSerializers$factory();
    return $this.h10_1.w();
  }
  function _get__hashCode__tgwhef_0($this) {
    // Inline function 'kotlin.getValue' call
    _hashCode$factory_0();
    return $this.j10_1.w();
  }
  function buildIndices($this) {
    var indices = HashMap_init_$Create$();
    var inductionVariable = 0;
    var last = $this.c10_1.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.collections.set' call
        var tmp0_set = $this.c10_1[i];
        indices.z3(tmp0_set, i);
      }
       while (inductionVariable <= last);
    return indices;
  }
  function PluginGeneratedSerialDescriptor$indices$delegate$lambda(this$0) {
    return function () {
      return buildIndices(this$0);
    };
  }
  function PluginGeneratedSerialDescriptor$childSerializers$delegate$lambda(this$0) {
    return function () {
      var tmp0_safe_receiver = this$0.zz_1;
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.n10();
      var tmp;
      if (tmp1_elvis_lhs == null) {
        var tmp$ret$0;
        // Inline function 'kotlin.emptyArray' call
        tmp$ret$0 = [];
        tmp = tmp$ret$0;
      } else {
        tmp = tmp1_elvis_lhs;
      }
      return tmp;
    };
  }
  function PluginGeneratedSerialDescriptor$typeParameterDescriptors$delegate$lambda(this$0) {
    return function () {
      var tmp0_safe_receiver = this$0.zz_1;
      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.o10();
      var tmp;
      if (tmp1_safe_receiver == null) {
        tmp = null;
      } else {
        var tmp$ret$2;
        // Inline function 'kotlin.collections.map' call
        var tmp$ret$1;
        // Inline function 'kotlin.collections.mapTo' call
        var tmp0_mapTo = ArrayList_init_$Create$(tmp1_safe_receiver.length);
        var tmp0_iterator = arrayIterator(tmp1_safe_receiver);
        while (tmp0_iterator.g()) {
          var item = tmp0_iterator.h();
          var tmp$ret$0;
          // Inline function 'kotlinx.serialization.internal.PluginGeneratedSerialDescriptor.typeParameterDescriptors$delegate.<anonymous>.<anonymous>' call
          tmp$ret$0 = item.as();
          tmp0_mapTo.a(tmp$ret$0);
        }
        tmp$ret$1 = tmp0_mapTo;
        tmp$ret$2 = tmp$ret$1;
        tmp = tmp$ret$2;
      }
      return compactArray(tmp);
    };
  }
  function PluginGeneratedSerialDescriptor$_hashCode$delegate$lambda(this$0) {
    return function () {
      return hashCodeImpl(this$0, this$0.k10());
    };
  }
  function PluginGeneratedSerialDescriptor$toString$lambda(this$0) {
    return function (it) {
      return it.v() + ': ' + this$0.ns(it.w()).hs();
    };
  }
  function PluginGeneratedSerialDescriptor(serialName, generatedSerializer, elementsCount) {
    generatedSerializer = generatedSerializer === VOID ? null : generatedSerializer;
    this.yz_1 = serialName;
    this.zz_1 = generatedSerializer;
    this.a10_1 = elementsCount;
    this.b10_1 = -1;
    var tmp = this;
    var tmp_0 = 0;
    var tmp_1 = this.a10_1;
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp_2 = fillArrayVal(Array(tmp_1), null);
    while (tmp_0 < tmp_1) {
      tmp_2[tmp_0] = '[UNINITIALIZED]';
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp.c10_1 = tmp_2;
    var tmp_3 = this;
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp0_arrayOfNulls = this.a10_1;
    tmp_3.d10_1 = fillArrayVal(Array(tmp0_arrayOfNulls), null);
    this.e10_1 = null;
    this.f10_1 = booleanArray(this.a10_1);
    var tmp_4 = this;
    tmp_4.g10_1 = lazy(PluginGeneratedSerialDescriptor$indices$delegate$lambda(this));
    var tmp_5 = this;
    tmp_5.h10_1 = lazy(PluginGeneratedSerialDescriptor$childSerializers$delegate$lambda(this));
    var tmp_6 = this;
    tmp_6.i10_1 = lazy(PluginGeneratedSerialDescriptor$typeParameterDescriptors$delegate$lambda(this));
    var tmp_7 = this;
    tmp_7.j10_1 = lazy(PluginGeneratedSerialDescriptor$_hashCode$delegate$lambda(this));
  }
  protoOf(PluginGeneratedSerialDescriptor).hs = function () {
    return this.yz_1;
  };
  protoOf(PluginGeneratedSerialDescriptor).ks = function () {
    return this.a10_1;
  };
  protoOf(PluginGeneratedSerialDescriptor).is = function () {
    return CLASS_getInstance();
  };
  protoOf(PluginGeneratedSerialDescriptor).nt = function () {
    return _get_indices__xyiwmu(this).v2();
  };
  protoOf(PluginGeneratedSerialDescriptor).k10 = function () {
    // Inline function 'kotlin.getValue' call
    typeParameterDescriptors$factory();
    return this.i10_1.w();
  };
  protoOf(PluginGeneratedSerialDescriptor).l10 = function (name, isOptional) {
    this.b10_1 = this.b10_1 + 1 | 0;
    this.c10_1[this.b10_1] = name;
    this.f10_1[this.b10_1] = isOptional;
    this.d10_1[this.b10_1] = null;
  };
  protoOf(PluginGeneratedSerialDescriptor).ns = function (index) {
    return getChecked(_get_childSerializers__7vnyfa(this), index).as();
  };
  protoOf(PluginGeneratedSerialDescriptor).ls = function (index) {
    return getChecked(this.c10_1, index);
  };
  protoOf(PluginGeneratedSerialDescriptor).ms = function (name) {
    var tmp0_elvis_lhs = _get_indices__xyiwmu(this).u2(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      Companion_getInstance_1();
      tmp = -3;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  protoOf(PluginGeneratedSerialDescriptor).equals = function (other) {
    var tmp$ret$0;
    $l$block_5: {
      // Inline function 'kotlinx.serialization.internal.equalsImpl' call
      if (this === other) {
        tmp$ret$0 = true;
        break $l$block_5;
      }
      if (!(other instanceof PluginGeneratedSerialDescriptor)) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.hs() === other.hs())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      // Inline function 'kotlinx.serialization.internal.PluginGeneratedSerialDescriptor.equals.<anonymous>' call
      if (!contentEquals(this.k10(), other.k10())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.ks() === other.ks())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var inductionVariable = 0;
      var last = this.ks();
      if (inductionVariable < last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (!(this.ns(index).hs() === other.ns(index).hs())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
          if (!equals(this.ns(index).is(), other.ns(index).is())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
        }
         while (inductionVariable < last);
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  protoOf(PluginGeneratedSerialDescriptor).hashCode = function () {
    return _get__hashCode__tgwhef_0(this);
  };
  protoOf(PluginGeneratedSerialDescriptor).toString = function () {
    var tmp = _get_indices__xyiwmu(this).u();
    var tmp_0 = this.hs() + '(';
    return joinToString(tmp, ', ', tmp_0, ')', VOID, VOID, PluginGeneratedSerialDescriptor$toString$lambda(this));
  };
  function indices$factory() {
    return getPropertyCallableRef('indices', 1, KProperty1, function (receiver) {
      return _get_indices__xyiwmu(receiver);
    }, null);
  }
  function childSerializers$factory() {
    return getPropertyCallableRef('childSerializers', 1, KProperty1, function (receiver) {
      return _get_childSerializers__7vnyfa(receiver);
    }, null);
  }
  function typeParameterDescriptors$factory() {
    return getPropertyCallableRef('typeParameterDescriptors', 1, KProperty1, function (receiver) {
      return receiver.k10();
    }, null);
  }
  function _hashCode$factory_0() {
    return getPropertyCallableRef('_hashCode', 1, KProperty1, function (receiver) {
      return _get__hashCode__tgwhef_0(receiver);
    }, null);
  }
  function get_EMPTY_SERIALIZER_ARRAY() {
    _init_properties_PluginHelperInterfaces_kt__xgvzfp();
    return EMPTY_SERIALIZER_ARRAY;
  }
  var EMPTY_SERIALIZER_ARRAY;
  function GeneratedSerializer() {
  }
  function SerializerFactory() {
  }
  var properties_initialized_PluginHelperInterfaces_kt_ap8in1;
  function _init_properties_PluginHelperInterfaces_kt__xgvzfp() {
    if (!properties_initialized_PluginHelperInterfaces_kt_ap8in1) {
      properties_initialized_PluginHelperInterfaces_kt_ap8in1 = true;
      // Inline function 'kotlin.arrayOf' call
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      EMPTY_SERIALIZER_ARRAY = [];
    }
  }
  function CharArraySerializer_0() {
    CharArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_2(Companion_getInstance_0()));
  }
  protoOf(CharArraySerializer_0).m11 = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  protoOf(CharArraySerializer_0).gx = function (_this__u8e3s4) {
    return this.m11((!(_this__u8e3s4 == null) ? isCharArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(CharArraySerializer_0).n11 = function (_this__u8e3s4) {
    return new CharArrayBuilder(_this__u8e3s4);
  };
  protoOf(CharArraySerializer_0).bx = function (_this__u8e3s4) {
    return this.n11((!(_this__u8e3s4 == null) ? isCharArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(CharArraySerializer_0).ax = function () {
    return charArray(0);
  };
  protoOf(CharArraySerializer_0).o11 = function (decoder, index, builder, checkIndex) {
    builder.r11(decoder.mu(this.rw_1, index));
  };
  protoOf(CharArraySerializer_0).cx = function (decoder, index, builder, checkIndex) {
    return this.o11(decoder, index, builder instanceof CharArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  protoOf(CharArraySerializer_0).s11 = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.ov(this.rw_1, i, content[i]);
      }
       while (inductionVariable < size);
  };
  protoOf(CharArraySerializer_0).ex = function (encoder, content, size) {
    return this.s11(encoder, (!(content == null) ? isCharArray(content) : false) ? content : THROW_CCE(), size);
  };
  var CharArraySerializer_instance;
  function CharArraySerializer_getInstance() {
    if (CharArraySerializer_instance == null)
      new CharArraySerializer_0();
    return CharArraySerializer_instance;
  }
  function DoubleArraySerializer_0() {
    DoubleArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_3(DoubleCompanionObject_getInstance()));
  }
  protoOf(DoubleArraySerializer_0).v11 = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  protoOf(DoubleArraySerializer_0).gx = function (_this__u8e3s4) {
    return this.v11((!(_this__u8e3s4 == null) ? isDoubleArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(DoubleArraySerializer_0).w11 = function (_this__u8e3s4) {
    return new DoubleArrayBuilder(_this__u8e3s4);
  };
  protoOf(DoubleArraySerializer_0).bx = function (_this__u8e3s4) {
    return this.w11((!(_this__u8e3s4 == null) ? isDoubleArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(DoubleArraySerializer_0).ax = function () {
    return new Float64Array(0);
  };
  protoOf(DoubleArraySerializer_0).x11 = function (decoder, index, builder, checkIndex) {
    builder.a12(decoder.lu(this.rw_1, index));
  };
  protoOf(DoubleArraySerializer_0).cx = function (decoder, index, builder, checkIndex) {
    return this.x11(decoder, index, builder instanceof DoubleArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  protoOf(DoubleArraySerializer_0).b12 = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.nv(this.rw_1, i, content[i]);
      }
       while (inductionVariable < size);
  };
  protoOf(DoubleArraySerializer_0).ex = function (encoder, content, size) {
    return this.b12(encoder, (!(content == null) ? isDoubleArray(content) : false) ? content : THROW_CCE(), size);
  };
  var DoubleArraySerializer_instance;
  function DoubleArraySerializer_getInstance() {
    if (DoubleArraySerializer_instance == null)
      new DoubleArraySerializer_0();
    return DoubleArraySerializer_instance;
  }
  function FloatArraySerializer_0() {
    FloatArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_4(FloatCompanionObject_getInstance()));
  }
  protoOf(FloatArraySerializer_0).e12 = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  protoOf(FloatArraySerializer_0).gx = function (_this__u8e3s4) {
    return this.e12((!(_this__u8e3s4 == null) ? isFloatArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(FloatArraySerializer_0).f12 = function (_this__u8e3s4) {
    return new FloatArrayBuilder(_this__u8e3s4);
  };
  protoOf(FloatArraySerializer_0).bx = function (_this__u8e3s4) {
    return this.f12((!(_this__u8e3s4 == null) ? isFloatArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(FloatArraySerializer_0).ax = function () {
    return new Float32Array(0);
  };
  protoOf(FloatArraySerializer_0).g12 = function (decoder, index, builder, checkIndex) {
    builder.j12(decoder.ku(this.rw_1, index));
  };
  protoOf(FloatArraySerializer_0).cx = function (decoder, index, builder, checkIndex) {
    return this.g12(decoder, index, builder instanceof FloatArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  protoOf(FloatArraySerializer_0).k12 = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.mv(this.rw_1, i, content[i]);
      }
       while (inductionVariable < size);
  };
  protoOf(FloatArraySerializer_0).ex = function (encoder, content, size) {
    return this.k12(encoder, (!(content == null) ? isFloatArray(content) : false) ? content : THROW_CCE(), size);
  };
  var FloatArraySerializer_instance;
  function FloatArraySerializer_getInstance() {
    if (FloatArraySerializer_instance == null)
      new FloatArraySerializer_0();
    return FloatArraySerializer_instance;
  }
  function LongArraySerializer_0() {
    LongArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_5(Companion_getInstance()));
  }
  protoOf(LongArraySerializer_0).n12 = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  protoOf(LongArraySerializer_0).gx = function (_this__u8e3s4) {
    return this.n12((!(_this__u8e3s4 == null) ? isLongArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(LongArraySerializer_0).o12 = function (_this__u8e3s4) {
    return new LongArrayBuilder(_this__u8e3s4);
  };
  protoOf(LongArraySerializer_0).bx = function (_this__u8e3s4) {
    return this.o12((!(_this__u8e3s4 == null) ? isLongArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(LongArraySerializer_0).ax = function () {
    return longArray(0);
  };
  protoOf(LongArraySerializer_0).p12 = function (decoder, index, builder, checkIndex) {
    builder.s12(decoder.ju(this.rw_1, index));
  };
  protoOf(LongArraySerializer_0).cx = function (decoder, index, builder, checkIndex) {
    return this.p12(decoder, index, builder instanceof LongArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  protoOf(LongArraySerializer_0).t12 = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.lv(this.rw_1, i, content[i]);
      }
       while (inductionVariable < size);
  };
  protoOf(LongArraySerializer_0).ex = function (encoder, content, size) {
    return this.t12(encoder, (!(content == null) ? isLongArray(content) : false) ? content : THROW_CCE(), size);
  };
  var LongArraySerializer_instance;
  function LongArraySerializer_getInstance() {
    if (LongArraySerializer_instance == null)
      new LongArraySerializer_0();
    return LongArraySerializer_instance;
  }
  function IntArraySerializer_0() {
    IntArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_6(IntCompanionObject_getInstance()));
  }
  protoOf(IntArraySerializer_0).w12 = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  protoOf(IntArraySerializer_0).gx = function (_this__u8e3s4) {
    return this.w12((!(_this__u8e3s4 == null) ? isIntArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(IntArraySerializer_0).x12 = function (_this__u8e3s4) {
    return new IntArrayBuilder(_this__u8e3s4);
  };
  protoOf(IntArraySerializer_0).bx = function (_this__u8e3s4) {
    return this.x12((!(_this__u8e3s4 == null) ? isIntArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(IntArraySerializer_0).ax = function () {
    return new Int32Array(0);
  };
  protoOf(IntArraySerializer_0).y12 = function (decoder, index, builder, checkIndex) {
    builder.b13(decoder.iu(this.rw_1, index));
  };
  protoOf(IntArraySerializer_0).cx = function (decoder, index, builder, checkIndex) {
    return this.y12(decoder, index, builder instanceof IntArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  protoOf(IntArraySerializer_0).c13 = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.kv(this.rw_1, i, content[i]);
      }
       while (inductionVariable < size);
  };
  protoOf(IntArraySerializer_0).ex = function (encoder, content, size) {
    return this.c13(encoder, (!(content == null) ? isIntArray(content) : false) ? content : THROW_CCE(), size);
  };
  var IntArraySerializer_instance;
  function IntArraySerializer_getInstance() {
    if (IntArraySerializer_instance == null)
      new IntArraySerializer_0();
    return IntArraySerializer_instance;
  }
  function ShortArraySerializer_0() {
    ShortArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_7(ShortCompanionObject_getInstance()));
  }
  protoOf(ShortArraySerializer_0).f13 = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  protoOf(ShortArraySerializer_0).gx = function (_this__u8e3s4) {
    return this.f13((!(_this__u8e3s4 == null) ? isShortArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(ShortArraySerializer_0).g13 = function (_this__u8e3s4) {
    return new ShortArrayBuilder(_this__u8e3s4);
  };
  protoOf(ShortArraySerializer_0).bx = function (_this__u8e3s4) {
    return this.g13((!(_this__u8e3s4 == null) ? isShortArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(ShortArraySerializer_0).ax = function () {
    return new Int16Array(0);
  };
  protoOf(ShortArraySerializer_0).h13 = function (decoder, index, builder, checkIndex) {
    builder.k13(decoder.hu(this.rw_1, index));
  };
  protoOf(ShortArraySerializer_0).cx = function (decoder, index, builder, checkIndex) {
    return this.h13(decoder, index, builder instanceof ShortArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  protoOf(ShortArraySerializer_0).l13 = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.jv(this.rw_1, i, content[i]);
      }
       while (inductionVariable < size);
  };
  protoOf(ShortArraySerializer_0).ex = function (encoder, content, size) {
    return this.l13(encoder, (!(content == null) ? isShortArray(content) : false) ? content : THROW_CCE(), size);
  };
  var ShortArraySerializer_instance;
  function ShortArraySerializer_getInstance() {
    if (ShortArraySerializer_instance == null)
      new ShortArraySerializer_0();
    return ShortArraySerializer_instance;
  }
  function ByteArraySerializer_0() {
    ByteArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_8(ByteCompanionObject_getInstance()));
  }
  protoOf(ByteArraySerializer_0).o13 = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  protoOf(ByteArraySerializer_0).gx = function (_this__u8e3s4) {
    return this.o13((!(_this__u8e3s4 == null) ? isByteArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(ByteArraySerializer_0).p13 = function (_this__u8e3s4) {
    return new ByteArrayBuilder(_this__u8e3s4);
  };
  protoOf(ByteArraySerializer_0).bx = function (_this__u8e3s4) {
    return this.p13((!(_this__u8e3s4 == null) ? isByteArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(ByteArraySerializer_0).ax = function () {
    return new Int8Array(0);
  };
  protoOf(ByteArraySerializer_0).q13 = function (decoder, index, builder, checkIndex) {
    builder.t13(decoder.gu(this.rw_1, index));
  };
  protoOf(ByteArraySerializer_0).cx = function (decoder, index, builder, checkIndex) {
    return this.q13(decoder, index, builder instanceof ByteArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  protoOf(ByteArraySerializer_0).u13 = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.iv(this.rw_1, i, content[i]);
      }
       while (inductionVariable < size);
  };
  protoOf(ByteArraySerializer_0).ex = function (encoder, content, size) {
    return this.u13(encoder, (!(content == null) ? isByteArray(content) : false) ? content : THROW_CCE(), size);
  };
  var ByteArraySerializer_instance;
  function ByteArraySerializer_getInstance() {
    if (ByteArraySerializer_instance == null)
      new ByteArraySerializer_0();
    return ByteArraySerializer_instance;
  }
  function BooleanArraySerializer_0() {
    BooleanArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_9(BooleanCompanionObject_getInstance()));
  }
  protoOf(BooleanArraySerializer_0).x13 = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  protoOf(BooleanArraySerializer_0).gx = function (_this__u8e3s4) {
    return this.x13((!(_this__u8e3s4 == null) ? isBooleanArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(BooleanArraySerializer_0).y13 = function (_this__u8e3s4) {
    return new BooleanArrayBuilder(_this__u8e3s4);
  };
  protoOf(BooleanArraySerializer_0).bx = function (_this__u8e3s4) {
    return this.y13((!(_this__u8e3s4 == null) ? isBooleanArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(BooleanArraySerializer_0).ax = function () {
    return booleanArray(0);
  };
  protoOf(BooleanArraySerializer_0).z13 = function (decoder, index, builder, checkIndex) {
    builder.c14(decoder.fu(this.rw_1, index));
  };
  protoOf(BooleanArraySerializer_0).cx = function (decoder, index, builder, checkIndex) {
    return this.z13(decoder, index, builder instanceof BooleanArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  protoOf(BooleanArraySerializer_0).d14 = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.hv(this.rw_1, i, content[i]);
      }
       while (inductionVariable < size);
  };
  protoOf(BooleanArraySerializer_0).ex = function (encoder, content, size) {
    return this.d14(encoder, (!(content == null) ? isBooleanArray(content) : false) ? content : THROW_CCE(), size);
  };
  var BooleanArraySerializer_instance;
  function BooleanArraySerializer_getInstance() {
    if (BooleanArraySerializer_instance == null)
      new BooleanArraySerializer_0();
    return BooleanArraySerializer_instance;
  }
  function CharArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.p11_1 = bufferWithData;
    this.q11_1 = bufferWithData.length;
    this.u8(10);
  }
  protoOf(CharArrayBuilder).tw = function () {
    return this.q11_1;
  };
  protoOf(CharArrayBuilder).u8 = function (requiredCapacity) {
    if (this.p11_1.length < requiredCapacity)
      this.p11_1 = copyOf(this.p11_1, coerceAtLeast(requiredCapacity, imul(this.p11_1.length, 2)));
  };
  protoOf(CharArrayBuilder).r11 = function (c) {
    this.lx();
    var tmp = this.p11_1;
    var tmp1 = this.q11_1;
    this.q11_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  protoOf(CharArrayBuilder).qa = function () {
    return copyOf(this.p11_1, this.q11_1);
  };
  function DoubleArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.y11_1 = bufferWithData;
    this.z11_1 = bufferWithData.length;
    this.u8(10);
  }
  protoOf(DoubleArrayBuilder).tw = function () {
    return this.z11_1;
  };
  protoOf(DoubleArrayBuilder).u8 = function (requiredCapacity) {
    if (this.y11_1.length < requiredCapacity)
      this.y11_1 = copyOf_0(this.y11_1, coerceAtLeast(requiredCapacity, imul(this.y11_1.length, 2)));
  };
  protoOf(DoubleArrayBuilder).a12 = function (c) {
    this.lx();
    var tmp = this.y11_1;
    var tmp1 = this.z11_1;
    this.z11_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  protoOf(DoubleArrayBuilder).qa = function () {
    return copyOf_0(this.y11_1, this.z11_1);
  };
  function FloatArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.h12_1 = bufferWithData;
    this.i12_1 = bufferWithData.length;
    this.u8(10);
  }
  protoOf(FloatArrayBuilder).tw = function () {
    return this.i12_1;
  };
  protoOf(FloatArrayBuilder).u8 = function (requiredCapacity) {
    if (this.h12_1.length < requiredCapacity)
      this.h12_1 = copyOf_1(this.h12_1, coerceAtLeast(requiredCapacity, imul(this.h12_1.length, 2)));
  };
  protoOf(FloatArrayBuilder).j12 = function (c) {
    this.lx();
    var tmp = this.h12_1;
    var tmp1 = this.i12_1;
    this.i12_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  protoOf(FloatArrayBuilder).qa = function () {
    return copyOf_1(this.h12_1, this.i12_1);
  };
  function LongArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.q12_1 = bufferWithData;
    this.r12_1 = bufferWithData.length;
    this.u8(10);
  }
  protoOf(LongArrayBuilder).tw = function () {
    return this.r12_1;
  };
  protoOf(LongArrayBuilder).u8 = function (requiredCapacity) {
    if (this.q12_1.length < requiredCapacity)
      this.q12_1 = copyOf_2(this.q12_1, coerceAtLeast(requiredCapacity, imul(this.q12_1.length, 2)));
  };
  protoOf(LongArrayBuilder).s12 = function (c) {
    this.lx();
    var tmp = this.q12_1;
    var tmp1 = this.r12_1;
    this.r12_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  protoOf(LongArrayBuilder).qa = function () {
    return copyOf_2(this.q12_1, this.r12_1);
  };
  function IntArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.z12_1 = bufferWithData;
    this.a13_1 = bufferWithData.length;
    this.u8(10);
  }
  protoOf(IntArrayBuilder).tw = function () {
    return this.a13_1;
  };
  protoOf(IntArrayBuilder).u8 = function (requiredCapacity) {
    if (this.z12_1.length < requiredCapacity)
      this.z12_1 = copyOf_3(this.z12_1, coerceAtLeast(requiredCapacity, imul(this.z12_1.length, 2)));
  };
  protoOf(IntArrayBuilder).b13 = function (c) {
    this.lx();
    var tmp = this.z12_1;
    var tmp1 = this.a13_1;
    this.a13_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  protoOf(IntArrayBuilder).qa = function () {
    return copyOf_3(this.z12_1, this.a13_1);
  };
  function ShortArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.i13_1 = bufferWithData;
    this.j13_1 = bufferWithData.length;
    this.u8(10);
  }
  protoOf(ShortArrayBuilder).tw = function () {
    return this.j13_1;
  };
  protoOf(ShortArrayBuilder).u8 = function (requiredCapacity) {
    if (this.i13_1.length < requiredCapacity)
      this.i13_1 = copyOf_4(this.i13_1, coerceAtLeast(requiredCapacity, imul(this.i13_1.length, 2)));
  };
  protoOf(ShortArrayBuilder).k13 = function (c) {
    this.lx();
    var tmp = this.i13_1;
    var tmp1 = this.j13_1;
    this.j13_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  protoOf(ShortArrayBuilder).qa = function () {
    return copyOf_4(this.i13_1, this.j13_1);
  };
  function ByteArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.r13_1 = bufferWithData;
    this.s13_1 = bufferWithData.length;
    this.u8(10);
  }
  protoOf(ByteArrayBuilder).tw = function () {
    return this.s13_1;
  };
  protoOf(ByteArrayBuilder).u8 = function (requiredCapacity) {
    if (this.r13_1.length < requiredCapacity)
      this.r13_1 = copyOf_5(this.r13_1, coerceAtLeast(requiredCapacity, imul(this.r13_1.length, 2)));
  };
  protoOf(ByteArrayBuilder).t13 = function (c) {
    this.lx();
    var tmp = this.r13_1;
    var tmp1 = this.s13_1;
    this.s13_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  protoOf(ByteArrayBuilder).qa = function () {
    return copyOf_5(this.r13_1, this.s13_1);
  };
  function BooleanArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.a14_1 = bufferWithData;
    this.b14_1 = bufferWithData.length;
    this.u8(10);
  }
  protoOf(BooleanArrayBuilder).tw = function () {
    return this.b14_1;
  };
  protoOf(BooleanArrayBuilder).u8 = function (requiredCapacity) {
    if (this.a14_1.length < requiredCapacity)
      this.a14_1 = copyOf_6(this.a14_1, coerceAtLeast(requiredCapacity, imul(this.a14_1.length, 2)));
  };
  protoOf(BooleanArrayBuilder).c14 = function (c) {
    this.lx();
    var tmp = this.a14_1;
    var tmp1 = this.b14_1;
    this.b14_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  protoOf(BooleanArrayBuilder).qa = function () {
    return copyOf_6(this.a14_1, this.b14_1);
  };
  function get_BUILTIN_SERIALIZERS() {
    _init_properties_Primitives_kt__k0eto4();
    return BUILTIN_SERIALIZERS;
  }
  var BUILTIN_SERIALIZERS;
  function StringSerializer() {
    StringSerializer_instance = this;
    this.e14_1 = new PrimitiveSerialDescriptor_0('kotlin.String', STRING_getInstance());
  }
  protoOf(StringSerializer).as = function () {
    return this.e14_1;
  };
  protoOf(StringSerializer).f14 = function (encoder, value) {
    return encoder.fv(value);
  };
  protoOf(StringSerializer).bs = function (encoder, value) {
    return this.f14(encoder, (!(value == null) ? typeof value === 'string' : false) ? value : THROW_CCE());
  };
  protoOf(StringSerializer).cs = function (decoder) {
    return decoder.zt();
  };
  var StringSerializer_instance;
  function StringSerializer_getInstance() {
    if (StringSerializer_instance == null)
      new StringSerializer();
    return StringSerializer_instance;
  }
  function CharSerializer() {
    CharSerializer_instance = this;
    this.g14_1 = new PrimitiveSerialDescriptor_0('kotlin.Char', CHAR_getInstance());
  }
  protoOf(CharSerializer).as = function () {
    return this.g14_1;
  };
  protoOf(CharSerializer).h14 = function (encoder, value) {
    return encoder.ev(value);
  };
  protoOf(CharSerializer).bs = function (encoder, value) {
    return this.h14(encoder, value instanceof Char ? value.p4_1 : THROW_CCE());
  };
  protoOf(CharSerializer).i14 = function (decoder) {
    return decoder.yt();
  };
  protoOf(CharSerializer).cs = function (decoder) {
    return new Char(this.i14(decoder));
  };
  var CharSerializer_instance;
  function CharSerializer_getInstance() {
    if (CharSerializer_instance == null)
      new CharSerializer();
    return CharSerializer_instance;
  }
  function DoubleSerializer() {
    DoubleSerializer_instance = this;
    this.j14_1 = new PrimitiveSerialDescriptor_0('kotlin.Double', DOUBLE_getInstance());
  }
  protoOf(DoubleSerializer).as = function () {
    return this.j14_1;
  };
  protoOf(DoubleSerializer).k14 = function (encoder, value) {
    return encoder.dv(value);
  };
  protoOf(DoubleSerializer).bs = function (encoder, value) {
    return this.k14(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
  };
  protoOf(DoubleSerializer).cs = function (decoder) {
    return decoder.xt();
  };
  var DoubleSerializer_instance;
  function DoubleSerializer_getInstance() {
    if (DoubleSerializer_instance == null)
      new DoubleSerializer();
    return DoubleSerializer_instance;
  }
  function FloatSerializer() {
    FloatSerializer_instance = this;
    this.l14_1 = new PrimitiveSerialDescriptor_0('kotlin.Float', FLOAT_getInstance());
  }
  protoOf(FloatSerializer).as = function () {
    return this.l14_1;
  };
  protoOf(FloatSerializer).m14 = function (encoder, value) {
    return encoder.cv(value);
  };
  protoOf(FloatSerializer).bs = function (encoder, value) {
    return this.m14(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
  };
  protoOf(FloatSerializer).cs = function (decoder) {
    return decoder.wt();
  };
  var FloatSerializer_instance;
  function FloatSerializer_getInstance() {
    if (FloatSerializer_instance == null)
      new FloatSerializer();
    return FloatSerializer_instance;
  }
  function LongSerializer() {
    LongSerializer_instance = this;
    this.n14_1 = new PrimitiveSerialDescriptor_0('kotlin.Long', LONG_getInstance());
  }
  protoOf(LongSerializer).as = function () {
    return this.n14_1;
  };
  protoOf(LongSerializer).o14 = function (encoder, value) {
    return encoder.bv(value);
  };
  protoOf(LongSerializer).bs = function (encoder, value) {
    return this.o14(encoder, value instanceof Long ? value : THROW_CCE());
  };
  protoOf(LongSerializer).cs = function (decoder) {
    return decoder.vt();
  };
  var LongSerializer_instance;
  function LongSerializer_getInstance() {
    if (LongSerializer_instance == null)
      new LongSerializer();
    return LongSerializer_instance;
  }
  function IntSerializer() {
    IntSerializer_instance = this;
    this.p14_1 = new PrimitiveSerialDescriptor_0('kotlin.Int', INT_getInstance());
  }
  protoOf(IntSerializer).as = function () {
    return this.p14_1;
  };
  protoOf(IntSerializer).q14 = function (encoder, value) {
    return encoder.av(value);
  };
  protoOf(IntSerializer).bs = function (encoder, value) {
    return this.q14(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
  };
  protoOf(IntSerializer).cs = function (decoder) {
    return decoder.ut();
  };
  var IntSerializer_instance;
  function IntSerializer_getInstance() {
    if (IntSerializer_instance == null)
      new IntSerializer();
    return IntSerializer_instance;
  }
  function ShortSerializer() {
    ShortSerializer_instance = this;
    this.r14_1 = new PrimitiveSerialDescriptor_0('kotlin.Short', SHORT_getInstance());
  }
  protoOf(ShortSerializer).as = function () {
    return this.r14_1;
  };
  protoOf(ShortSerializer).s14 = function (encoder, value) {
    return encoder.zu(value);
  };
  protoOf(ShortSerializer).bs = function (encoder, value) {
    return this.s14(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
  };
  protoOf(ShortSerializer).cs = function (decoder) {
    return decoder.tt();
  };
  var ShortSerializer_instance;
  function ShortSerializer_getInstance() {
    if (ShortSerializer_instance == null)
      new ShortSerializer();
    return ShortSerializer_instance;
  }
  function ByteSerializer() {
    ByteSerializer_instance = this;
    this.t14_1 = new PrimitiveSerialDescriptor_0('kotlin.Byte', BYTE_getInstance());
  }
  protoOf(ByteSerializer).as = function () {
    return this.t14_1;
  };
  protoOf(ByteSerializer).u14 = function (encoder, value) {
    return encoder.yu(value);
  };
  protoOf(ByteSerializer).bs = function (encoder, value) {
    return this.u14(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
  };
  protoOf(ByteSerializer).cs = function (decoder) {
    return decoder.st();
  };
  var ByteSerializer_instance;
  function ByteSerializer_getInstance() {
    if (ByteSerializer_instance == null)
      new ByteSerializer();
    return ByteSerializer_instance;
  }
  function BooleanSerializer() {
    BooleanSerializer_instance = this;
    this.v14_1 = new PrimitiveSerialDescriptor_0('kotlin.Boolean', BOOLEAN_getInstance());
  }
  protoOf(BooleanSerializer).as = function () {
    return this.v14_1;
  };
  protoOf(BooleanSerializer).w14 = function (encoder, value) {
    return encoder.xu(value);
  };
  protoOf(BooleanSerializer).bs = function (encoder, value) {
    return this.w14(encoder, (!(value == null) ? typeof value === 'boolean' : false) ? value : THROW_CCE());
  };
  protoOf(BooleanSerializer).cs = function (decoder) {
    return decoder.rt();
  };
  var BooleanSerializer_instance;
  function BooleanSerializer_getInstance() {
    if (BooleanSerializer_instance == null)
      new BooleanSerializer();
    return BooleanSerializer_instance;
  }
  function UnitSerializer() {
    UnitSerializer_instance = this;
    this.x14_1 = new ObjectSerializer('kotlin.Unit', Unit_getInstance());
  }
  protoOf(UnitSerializer).y14 = function (decoder) {
    this.x14_1.cs(decoder);
  };
  protoOf(UnitSerializer).cs = function (decoder) {
    this.y14(decoder);
    return Unit_getInstance();
  };
  protoOf(UnitSerializer).z14 = function (encoder, value) {
    this.x14_1.bs(encoder, Unit_getInstance());
  };
  protoOf(UnitSerializer).bs = function (encoder, value) {
    return this.z14(encoder, value instanceof Unit ? value : THROW_CCE());
  };
  protoOf(UnitSerializer).as = function () {
    return this.x14_1.i11_1;
  };
  var UnitSerializer_instance;
  function UnitSerializer_getInstance() {
    if (UnitSerializer_instance == null)
      new UnitSerializer();
    return UnitSerializer_instance;
  }
  function error($this) {
    throw IllegalStateException_init_$Create$('Primitive descriptor does not have elements');
  }
  function PrimitiveSerialDescriptor_0(serialName, kind) {
    this.a15_1 = serialName;
    this.b15_1 = kind;
  }
  protoOf(PrimitiveSerialDescriptor_0).hs = function () {
    return this.a15_1;
  };
  protoOf(PrimitiveSerialDescriptor_0).is = function () {
    return this.b15_1;
  };
  protoOf(PrimitiveSerialDescriptor_0).ks = function () {
    return 0;
  };
  protoOf(PrimitiveSerialDescriptor_0).ls = function (index) {
    error(this);
  };
  protoOf(PrimitiveSerialDescriptor_0).ms = function (name) {
    error(this);
  };
  protoOf(PrimitiveSerialDescriptor_0).ns = function (index) {
    error(this);
  };
  protoOf(PrimitiveSerialDescriptor_0).toString = function () {
    return 'PrimitiveDescriptor(' + this.a15_1 + ')';
  };
  function builtinSerializerOrNull(_this__u8e3s4) {
    _init_properties_Primitives_kt__k0eto4();
    var tmp = get_BUILTIN_SERIALIZERS().u2(_this__u8e3s4);
    return (tmp == null ? true : isInterface(tmp, KSerializer)) ? tmp : THROW_CCE();
  }
  function PrimitiveDescriptorSafe(serialName, kind) {
    _init_properties_Primitives_kt__k0eto4();
    checkName(serialName);
    return new PrimitiveSerialDescriptor_0(serialName, kind);
  }
  function checkName(serialName) {
    _init_properties_Primitives_kt__k0eto4();
    var keys = get_BUILTIN_SERIALIZERS().v2();
    var tmp0_iterator = keys.f();
    while (tmp0_iterator.g()) {
      var primitive = tmp0_iterator.h();
      var simpleName = capitalize(ensureNotNull(primitive.eb()));
      var qualifiedName = 'kotlin.' + simpleName;
      if (equals_0(serialName, qualifiedName, true) ? true : equals_0(serialName, simpleName, true)) {
        throw IllegalArgumentException_init_$Create$(trimIndent('\n                The name of serial descriptor should uniquely identify associated serializer.\n                For serial name ' + serialName + ' there already exist ' + capitalize(simpleName) + 'Serializer.\n                Please refer to SerialDescriptor documentation for additional information.\n            '));
      }
    }
  }
  var properties_initialized_Primitives_kt_6dpii6;
  function _init_properties_Primitives_kt__k0eto4() {
    if (!properties_initialized_Primitives_kt_6dpii6) {
      properties_initialized_Primitives_kt_6dpii6 = true;
      BUILTIN_SERIALIZERS = mapOf([to(PrimitiveClasses_getInstance().dc(), serializer_1(StringCompanionObject_getInstance())), to(getKClass(Char), serializer_2(Companion_getInstance_0())), to(PrimitiveClasses_getInstance().gc(), CharArraySerializer()), to(PrimitiveClasses_getInstance().bc(), serializer_3(DoubleCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().mc(), DoubleArraySerializer()), to(PrimitiveClasses_getInstance().ac(), serializer_4(FloatCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().lc(), FloatArraySerializer()), to(getKClass(Long), serializer_5(Companion_getInstance())), to(PrimitiveClasses_getInstance().kc(), LongArraySerializer()), to(PrimitiveClasses_getInstance().zb(), serializer_6(IntCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().jc(), IntArraySerializer()), to(PrimitiveClasses_getInstance().yb(), serializer_7(ShortCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().ic(), ShortArraySerializer()), to(PrimitiveClasses_getInstance().xb(), serializer_8(ByteCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().hc(), ByteArraySerializer()), to(PrimitiveClasses_getInstance().wb(), serializer_9(BooleanCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().fc(), BooleanArraySerializer()), to(getKClass(Unit), serializer_10(Unit_getInstance()))]);
    }
  }
  function NamedValueEncoder() {
    TaggedEncoder.call(this);
  }
  protoOf(NamedValueEncoder).d15 = function (_this__u8e3s4, index) {
    return this.f15(this.e15(_this__u8e3s4, index));
  };
  protoOf(NamedValueEncoder).f15 = function (nestedName) {
    var tmp0_elvis_lhs = this.h15();
    return this.i15(tmp0_elvis_lhs == null ? '' : tmp0_elvis_lhs, nestedName);
  };
  protoOf(NamedValueEncoder).e15 = function (descriptor, index) {
    return descriptor.ls(index);
  };
  protoOf(NamedValueEncoder).i15 = function (parentName, childName) {
    var tmp;
    // Inline function 'kotlin.text.isEmpty' call
    if (charSequenceLength(parentName) === 0) {
      tmp = childName;
    } else {
      tmp = parentName + '.' + childName;
    }
    return tmp;
  };
  function NamedValueDecoder() {
    TaggedDecoder.call(this);
  }
  protoOf(NamedValueDecoder).d15 = function (_this__u8e3s4, index) {
    return this.f15(this.e15(_this__u8e3s4, index));
  };
  protoOf(NamedValueDecoder).f15 = function (nestedName) {
    var tmp0_elvis_lhs = this.h15();
    return this.i15(tmp0_elvis_lhs == null ? '' : tmp0_elvis_lhs, nestedName);
  };
  protoOf(NamedValueDecoder).e15 = function (desc, index) {
    return desc.ls(index);
  };
  protoOf(NamedValueDecoder).i15 = function (parentName, childName) {
    var tmp;
    // Inline function 'kotlin.text.isEmpty' call
    if (charSequenceLength(parentName) === 0) {
      tmp = childName;
    } else {
      tmp = parentName + '.' + childName;
    }
    return tmp;
  };
  function encodeElement($this, desc, index) {
    var tag = $this.d15(desc, index);
    $this.w15(tag);
    return true;
  }
  function TaggedEncoder() {
    var tmp = this;
    // Inline function 'kotlin.collections.arrayListOf' call
    tmp.g15_1 = ArrayList_init_$Create$_0();
  }
  protoOf(TaggedEncoder).qu = function () {
    return get_EmptySerializersModule();
  };
  protoOf(TaggedEncoder).j15 = function (tag, value) {
    throw SerializationException_init_$Create$('Non-serializable ' + getKClassFromExpression(value) + ' is not supported by ' + getKClassFromExpression(this) + ' encoder');
  };
  protoOf(TaggedEncoder).k15 = function (tag) {
    throw SerializationException_init_$Create$('null is not supported');
  };
  protoOf(TaggedEncoder).l15 = function (tag, value) {
    return this.j15(tag, value);
  };
  protoOf(TaggedEncoder).m15 = function (tag, value) {
    return this.j15(tag, value);
  };
  protoOf(TaggedEncoder).n15 = function (tag, value) {
    return this.j15(tag, value);
  };
  protoOf(TaggedEncoder).o15 = function (tag, value) {
    return this.j15(tag, value);
  };
  protoOf(TaggedEncoder).p15 = function (tag, value) {
    return this.j15(tag, value);
  };
  protoOf(TaggedEncoder).q15 = function (tag, value) {
    return this.j15(tag, value);
  };
  protoOf(TaggedEncoder).r15 = function (tag, value) {
    return this.j15(tag, value);
  };
  protoOf(TaggedEncoder).s15 = function (tag, value) {
    return this.j15(tag, new Char(value));
  };
  protoOf(TaggedEncoder).t15 = function (tag, value) {
    return this.j15(tag, value);
  };
  protoOf(TaggedEncoder).u15 = function (tag, inlineDescriptor) {
    // Inline function 'kotlin.apply' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlinx.serialization.internal.TaggedEncoder.encodeTaggedInline.<anonymous>' call
    this.w15(tag);
    return this;
  };
  protoOf(TaggedEncoder).gv = function (inlineDescriptor) {
    return this.u15(this.x15(), inlineDescriptor);
  };
  protoOf(TaggedEncoder).sv = function () {
  };
  protoOf(TaggedEncoder).wu = function () {
    return this.k15(this.x15());
  };
  protoOf(TaggedEncoder).xu = function (value) {
    return this.r15(this.x15(), value);
  };
  protoOf(TaggedEncoder).yu = function (value) {
    return this.m15(this.x15(), value);
  };
  protoOf(TaggedEncoder).zu = function (value) {
    return this.n15(this.x15(), value);
  };
  protoOf(TaggedEncoder).av = function (value) {
    return this.l15(this.x15(), value);
  };
  protoOf(TaggedEncoder).bv = function (value) {
    return this.o15(this.x15(), value);
  };
  protoOf(TaggedEncoder).cv = function (value) {
    return this.p15(this.x15(), value);
  };
  protoOf(TaggedEncoder).dv = function (value) {
    return this.q15(this.x15(), value);
  };
  protoOf(TaggedEncoder).ev = function (value) {
    return this.s15(this.x15(), value);
  };
  protoOf(TaggedEncoder).fv = function (value) {
    return this.t15(this.x15(), value);
  };
  protoOf(TaggedEncoder).du = function (descriptor) {
    return this;
  };
  protoOf(TaggedEncoder).eu = function (descriptor) {
    // Inline function 'kotlin.collections.isNotEmpty' call
    if (!this.g15_1.p()) {
      this.x15();
    }
    this.v15(descriptor);
  };
  protoOf(TaggedEncoder).v15 = function (descriptor) {
  };
  protoOf(TaggedEncoder).hv = function (descriptor, index, value) {
    return this.r15(this.d15(descriptor, index), value);
  };
  protoOf(TaggedEncoder).iv = function (descriptor, index, value) {
    return this.m15(this.d15(descriptor, index), value);
  };
  protoOf(TaggedEncoder).jv = function (descriptor, index, value) {
    return this.n15(this.d15(descriptor, index), value);
  };
  protoOf(TaggedEncoder).kv = function (descriptor, index, value) {
    return this.l15(this.d15(descriptor, index), value);
  };
  protoOf(TaggedEncoder).lv = function (descriptor, index, value) {
    return this.o15(this.d15(descriptor, index), value);
  };
  protoOf(TaggedEncoder).mv = function (descriptor, index, value) {
    return this.p15(this.d15(descriptor, index), value);
  };
  protoOf(TaggedEncoder).nv = function (descriptor, index, value) {
    return this.q15(this.d15(descriptor, index), value);
  };
  protoOf(TaggedEncoder).ov = function (descriptor, index, value) {
    return this.s15(this.d15(descriptor, index), value);
  };
  protoOf(TaggedEncoder).pv = function (descriptor, index, value) {
    return this.t15(this.d15(descriptor, index), value);
  };
  protoOf(TaggedEncoder).qv = function (descriptor, index, serializer, value) {
    if (encodeElement(this, descriptor, index)) {
      this.rv(serializer, value);
    }
  };
  protoOf(TaggedEncoder).o16 = function () {
    return last(this.g15_1);
  };
  protoOf(TaggedEncoder).h15 = function () {
    return lastOrNull(this.g15_1);
  };
  protoOf(TaggedEncoder).w15 = function (name) {
    this.g15_1.a(name);
  };
  protoOf(TaggedEncoder).x15 = function () {
    var tmp;
    // Inline function 'kotlin.collections.isNotEmpty' call
    if (!this.g15_1.p()) {
      tmp = this.g15_1.y7(get_lastIndex(this.g15_1));
    } else {
      throw SerializationException_init_$Create$('No tag in stack for requested element');
    }
    return tmp;
  };
  function tagBlock($this, tag, block) {
    $this.w15(tag);
    var r = block();
    if (!$this.b16_1) {
      $this.x15();
    }
    $this.b16_1 = false;
    return r;
  }
  function TaggedDecoder$decodeSerializableElement$lambda(this$0, $deserializer, $previousValue) {
    return function () {
      return this$0.bu($deserializer, $previousValue);
    };
  }
  function TaggedDecoder() {
    var tmp = this;
    // Inline function 'kotlin.collections.arrayListOf' call
    tmp.a16_1 = ArrayList_init_$Create$_0();
    this.b16_1 = false;
  }
  protoOf(TaggedDecoder).qu = function () {
    return get_EmptySerializersModule();
  };
  protoOf(TaggedDecoder).c16 = function (tag) {
    throw SerializationException_init_$Create$('' + getKClassFromExpression(this) + " can't retrieve untyped values");
  };
  protoOf(TaggedDecoder).d16 = function (tag) {
    return true;
  };
  protoOf(TaggedDecoder).e16 = function (tag) {
    var tmp = this.c16(tag);
    return typeof tmp === 'boolean' ? tmp : THROW_CCE();
  };
  protoOf(TaggedDecoder).f16 = function (tag) {
    var tmp = this.c16(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  protoOf(TaggedDecoder).g16 = function (tag) {
    var tmp = this.c16(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  protoOf(TaggedDecoder).h16 = function (tag) {
    var tmp = this.c16(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  protoOf(TaggedDecoder).i16 = function (tag) {
    var tmp = this.c16(tag);
    return tmp instanceof Long ? tmp : THROW_CCE();
  };
  protoOf(TaggedDecoder).j16 = function (tag) {
    var tmp = this.c16(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  protoOf(TaggedDecoder).k16 = function (tag) {
    var tmp = this.c16(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  protoOf(TaggedDecoder).l16 = function (tag) {
    var tmp = this.c16(tag);
    return tmp instanceof Char ? tmp.p4_1 : THROW_CCE();
  };
  protoOf(TaggedDecoder).m16 = function (tag) {
    var tmp = this.c16(tag);
    return typeof tmp === 'string' ? tmp : THROW_CCE();
  };
  protoOf(TaggedDecoder).n16 = function (tag, inlineDescriptor) {
    // Inline function 'kotlin.apply' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlinx.serialization.internal.TaggedDecoder.decodeTaggedInline.<anonymous>' call
    this.w15(tag);
    return this;
  };
  protoOf(TaggedDecoder).bu = function (deserializer, previousValue) {
    return this.cu(deserializer);
  };
  protoOf(TaggedDecoder).au = function (inlineDescriptor) {
    return this.n16(this.x15(), inlineDescriptor);
  };
  protoOf(TaggedDecoder).pt = function () {
    var tmp0_elvis_lhs = this.h15();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var currentTag = tmp;
    return this.d16(currentTag);
  };
  protoOf(TaggedDecoder).qt = function () {
    return null;
  };
  protoOf(TaggedDecoder).rt = function () {
    return this.e16(this.x15());
  };
  protoOf(TaggedDecoder).st = function () {
    return this.f16(this.x15());
  };
  protoOf(TaggedDecoder).tt = function () {
    return this.g16(this.x15());
  };
  protoOf(TaggedDecoder).ut = function () {
    return this.h16(this.x15());
  };
  protoOf(TaggedDecoder).vt = function () {
    return this.i16(this.x15());
  };
  protoOf(TaggedDecoder).wt = function () {
    return this.j16(this.x15());
  };
  protoOf(TaggedDecoder).xt = function () {
    return this.k16(this.x15());
  };
  protoOf(TaggedDecoder).yt = function () {
    return this.l16(this.x15());
  };
  protoOf(TaggedDecoder).zt = function () {
    return this.m16(this.x15());
  };
  protoOf(TaggedDecoder).du = function (descriptor) {
    return this;
  };
  protoOf(TaggedDecoder).eu = function (descriptor) {
  };
  protoOf(TaggedDecoder).fu = function (descriptor, index) {
    return this.e16(this.d15(descriptor, index));
  };
  protoOf(TaggedDecoder).gu = function (descriptor, index) {
    return this.f16(this.d15(descriptor, index));
  };
  protoOf(TaggedDecoder).hu = function (descriptor, index) {
    return this.g16(this.d15(descriptor, index));
  };
  protoOf(TaggedDecoder).iu = function (descriptor, index) {
    return this.h16(this.d15(descriptor, index));
  };
  protoOf(TaggedDecoder).ju = function (descriptor, index) {
    return this.i16(this.d15(descriptor, index));
  };
  protoOf(TaggedDecoder).ku = function (descriptor, index) {
    return this.j16(this.d15(descriptor, index));
  };
  protoOf(TaggedDecoder).lu = function (descriptor, index) {
    return this.k16(this.d15(descriptor, index));
  };
  protoOf(TaggedDecoder).mu = function (descriptor, index) {
    return this.l16(this.d15(descriptor, index));
  };
  protoOf(TaggedDecoder).nu = function (descriptor, index) {
    return this.m16(this.d15(descriptor, index));
  };
  protoOf(TaggedDecoder).ou = function (descriptor, index, deserializer, previousValue) {
    var tmp = this.d15(descriptor, index);
    return tagBlock(this, tmp, TaggedDecoder$decodeSerializableElement$lambda(this, deserializer, previousValue));
  };
  protoOf(TaggedDecoder).h15 = function () {
    return lastOrNull(this.a16_1);
  };
  protoOf(TaggedDecoder).w15 = function (name) {
    this.a16_1.a(name);
  };
  protoOf(TaggedDecoder).x15 = function () {
    var r = this.a16_1.y7(get_lastIndex(this.a16_1));
    this.b16_1 = true;
    return r;
  };
  function get_NULL() {
    _init_properties_Tuples_kt__dz0qyd();
    return NULL;
  }
  var NULL;
  function MapEntry(key, value) {
    this.p16_1 = key;
    this.q16_1 = value;
  }
  protoOf(MapEntry).v = function () {
    return this.p16_1;
  };
  protoOf(MapEntry).w = function () {
    return this.q16_1;
  };
  protoOf(MapEntry).toString = function () {
    return 'MapEntry(key=' + this.p16_1 + ', value=' + this.q16_1 + ')';
  };
  protoOf(MapEntry).hashCode = function () {
    var result = this.p16_1 == null ? 0 : hashCode(this.p16_1);
    result = imul(result, 31) + (this.q16_1 == null ? 0 : hashCode(this.q16_1)) | 0;
    return result;
  };
  protoOf(MapEntry).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MapEntry))
      return false;
    var tmp0_other_with_cast = other instanceof MapEntry ? other : THROW_CCE();
    if (!equals(this.p16_1, tmp0_other_with_cast.p16_1))
      return false;
    if (!equals(this.q16_1, tmp0_other_with_cast.q16_1))
      return false;
    return true;
  };
  function MapEntrySerializer$descriptor$lambda($keySerializer, $valueSerializer) {
    return function ($this$buildSerialDescriptor) {
      $this$buildSerialDescriptor.at('key', $keySerializer.as());
      $this$buildSerialDescriptor.at('value', $valueSerializer.as());
      return Unit_getInstance();
    };
  }
  function MapEntrySerializer_0(keySerializer, valueSerializer) {
    KeyValueSerializer.call(this, keySerializer, valueSerializer);
    var tmp = this;
    var tmp_0 = MAP_getInstance();
    tmp.t16_1 = buildSerialDescriptor('kotlin.collections.Map.Entry', tmp_0, [], MapEntrySerializer$descriptor$lambda(keySerializer, valueSerializer));
  }
  protoOf(MapEntrySerializer_0).as = function () {
    return this.t16_1;
  };
  protoOf(MapEntrySerializer_0).u16 = function (_this__u8e3s4) {
    return _this__u8e3s4.v();
  };
  protoOf(MapEntrySerializer_0).v16 = function (_this__u8e3s4) {
    return this.u16((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Entry) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(MapEntrySerializer_0).w16 = function (_this__u8e3s4) {
    return _this__u8e3s4.w();
  };
  protoOf(MapEntrySerializer_0).x16 = function (_this__u8e3s4) {
    return this.w16((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Entry) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(MapEntrySerializer_0).y16 = function (key, value) {
    return new MapEntry(key, value);
  };
  function PairSerializer$descriptor$lambda($keySerializer, $valueSerializer) {
    return function ($this$buildClassSerialDescriptor) {
      $this$buildClassSerialDescriptor.at('first', $keySerializer.as());
      $this$buildClassSerialDescriptor.at('second', $valueSerializer.as());
      return Unit_getInstance();
    };
  }
  function PairSerializer_0(keySerializer, valueSerializer) {
    KeyValueSerializer.call(this, keySerializer, valueSerializer);
    var tmp = this;
    tmp.e17_1 = buildClassSerialDescriptor('kotlin.Pair', [], PairSerializer$descriptor$lambda(keySerializer, valueSerializer));
  }
  protoOf(PairSerializer_0).as = function () {
    return this.e17_1;
  };
  protoOf(PairSerializer_0).f17 = function (_this__u8e3s4) {
    return _this__u8e3s4.x3_1;
  };
  protoOf(PairSerializer_0).v16 = function (_this__u8e3s4) {
    return this.f17(_this__u8e3s4 instanceof Pair ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(PairSerializer_0).g17 = function (_this__u8e3s4) {
    return _this__u8e3s4.y3_1;
  };
  protoOf(PairSerializer_0).x16 = function (_this__u8e3s4) {
    return this.g17(_this__u8e3s4 instanceof Pair ? _this__u8e3s4 : THROW_CCE());
  };
  protoOf(PairSerializer_0).y16 = function (key, value) {
    return to(key, value);
  };
  function decodeSequentially_0($this, composite) {
    var a = composite.pu($this.k17_1, 0, $this.h17_1);
    var b = composite.pu($this.k17_1, 1, $this.i17_1);
    var c = composite.pu($this.k17_1, 2, $this.j17_1);
    composite.eu($this.k17_1);
    return new Triple(a, b, c);
  }
  function decodeStructure($this, composite) {
    var a = get_NULL();
    var b = get_NULL();
    var c = get_NULL();
    mainLoop: while (true) {
      var index = composite.su($this.k17_1);
      Companion_getInstance_1();
      if (index === -1) {
        break mainLoop;
      } else {
        if (index === 0) {
          a = composite.pu($this.k17_1, 0, $this.h17_1);
        } else {
          if (index === 1) {
            b = composite.pu($this.k17_1, 1, $this.i17_1);
          } else {
            if (index === 2) {
              c = composite.pu($this.k17_1, 2, $this.j17_1);
            } else {
              throw SerializationException_init_$Create$('Unexpected index ' + index);
            }
          }
        }
      }
    }
    composite.eu($this.k17_1);
    if (a === get_NULL())
      throw SerializationException_init_$Create$("Element 'first' is missing");
    if (b === get_NULL())
      throw SerializationException_init_$Create$("Element 'second' is missing");
    if (c === get_NULL())
      throw SerializationException_init_$Create$("Element 'third' is missing");
    var tmp = (a == null ? true : isObject(a)) ? a : THROW_CCE();
    var tmp_0 = (b == null ? true : isObject(b)) ? b : THROW_CCE();
    return new Triple(tmp, tmp_0, (c == null ? true : isObject(c)) ? c : THROW_CCE());
  }
  function TripleSerializer$descriptor$lambda(this$0) {
    return function ($this$buildClassSerialDescriptor) {
      $this$buildClassSerialDescriptor.at('first', this$0.h17_1.as());
      $this$buildClassSerialDescriptor.at('second', this$0.i17_1.as());
      $this$buildClassSerialDescriptor.at('third', this$0.j17_1.as());
      return Unit_getInstance();
    };
  }
  function TripleSerializer_0(aSerializer, bSerializer, cSerializer) {
    this.h17_1 = aSerializer;
    this.i17_1 = bSerializer;
    this.j17_1 = cSerializer;
    var tmp = this;
    tmp.k17_1 = buildClassSerialDescriptor('kotlin.Triple', [], TripleSerializer$descriptor$lambda(this));
  }
  protoOf(TripleSerializer_0).as = function () {
    return this.k17_1;
  };
  protoOf(TripleSerializer_0).l17 = function (encoder, value) {
    var structuredEncoder = encoder.du(this.k17_1);
    structuredEncoder.qv(this.k17_1, 0, this.h17_1, value.o5_1);
    structuredEncoder.qv(this.k17_1, 1, this.i17_1, value.p5_1);
    structuredEncoder.qv(this.k17_1, 2, this.j17_1, value.q5_1);
    structuredEncoder.eu(this.k17_1);
  };
  protoOf(TripleSerializer_0).bs = function (encoder, value) {
    return this.l17(encoder, value instanceof Triple ? value : THROW_CCE());
  };
  protoOf(TripleSerializer_0).cs = function (decoder) {
    var composite = decoder.du(this.k17_1);
    if (composite.ru()) {
      return decodeSequentially_0(this, composite);
    }
    return decodeStructure(this, composite);
  };
  function KeyValueSerializer(keySerializer, valueSerializer) {
    this.z16_1 = keySerializer;
    this.a17_1 = valueSerializer;
  }
  protoOf(KeyValueSerializer).b17 = function (encoder, value) {
    var structuredEncoder = encoder.du(this.as());
    structuredEncoder.qv(this.as(), 0, this.z16_1, this.v16(value));
    structuredEncoder.qv(this.as(), 1, this.a17_1, this.x16(value));
    structuredEncoder.eu(this.as());
  };
  protoOf(KeyValueSerializer).bs = function (encoder, value) {
    return this.b17(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  protoOf(KeyValueSerializer).cs = function (decoder) {
    var composite = decoder.du(this.as());
    if (composite.ru()) {
      var key = composite.pu(this.as(), 0, this.z16_1);
      var value = composite.pu(this.as(), 1, this.a17_1);
      return this.y16(key, value);
    }
    var key_0 = get_NULL();
    var value_0 = get_NULL();
    mainLoop: while (true) {
      var idx = composite.su(this.as());
      Companion_getInstance_1();
      if (idx === -1) {
        break mainLoop;
      } else {
        if (idx === 0) {
          key_0 = composite.pu(this.as(), 0, this.z16_1);
        } else {
          if (idx === 1) {
            value_0 = composite.pu(this.as(), 1, this.a17_1);
          } else {
            throw SerializationException_init_$Create$('Invalid index: ' + idx);
          }
        }
      }
    }
    composite.eu(this.as());
    if (key_0 === get_NULL())
      throw SerializationException_init_$Create$("Element 'key' is missing");
    if (value_0 === get_NULL())
      throw SerializationException_init_$Create$("Element 'value' is missing");
    var tmp = (key_0 == null ? true : isObject(key_0)) ? key_0 : THROW_CCE();
    return this.y16(tmp, (value_0 == null ? true : isObject(value_0)) ? value_0 : THROW_CCE());
  };
  var properties_initialized_Tuples_kt_3vs7ar;
  function _init_properties_Tuples_kt__dz0qyd() {
    if (!properties_initialized_Tuples_kt_3vs7ar) {
      properties_initialized_Tuples_kt_3vs7ar = true;
      NULL = new Object();
    }
  }
  function get_EmptySerializersModule() {
    _init_properties_SerializersModule_kt__u78ha3();
    return EmptySerializersModule;
  }
  var EmptySerializersModule;
  function SerializersModule() {
  }
  function SerialModuleImpl(class2Serializer, polyBase2Serializers, polyBase2NamedSerializers, polyBase2DefaultProvider) {
    SerializersModule.call(this);
    this.m17_1 = class2Serializer;
    this.n17_1 = polyBase2Serializers;
    this.o17_1 = polyBase2NamedSerializers;
    this.p17_1 = polyBase2DefaultProvider;
  }
  protoOf(SerialModuleImpl).yv = function (baseClass, value) {
    if (!isInstanceOf(value, baseClass))
      return null;
    var tmp0_safe_receiver = this.n17_1.u2(baseClass);
    var tmp = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.u2(getKClassFromExpression(value));
    return (!(tmp == null) ? isInterface(tmp, SerializationStrategy) : false) ? tmp : null;
  };
  protoOf(SerialModuleImpl).xv = function (baseClass, serializedClassName) {
    var tmp0_safe_receiver = this.o17_1.u2(baseClass);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.collections.get' call
      tmp = ((!(tmp0_safe_receiver == null) ? isInterface(tmp0_safe_receiver, Map) : false) ? tmp0_safe_receiver : THROW_CCE()).u2(serializedClassName);
    }
    var tmp_0 = tmp;
    var registered = (!(tmp_0 == null) ? isInterface(tmp_0, KSerializer) : false) ? tmp_0 : null;
    if (!(registered == null))
      return registered;
    var tmp_1 = this.p17_1.u2(baseClass);
    var tmp1_safe_receiver = (!(tmp_1 == null) ? typeof tmp_1 === 'function' : false) ? tmp_1 : null;
    return tmp1_safe_receiver == null ? null : tmp1_safe_receiver(serializedClassName);
  };
  protoOf(SerialModuleImpl).fs = function (kclass) {
    var tmp = this.m17_1.u2(kclass);
    return (!(tmp == null) ? isInterface(tmp, KSerializer) : false) ? tmp : null;
  };
  var properties_initialized_SerializersModule_kt_fjigjn;
  function _init_properties_SerializersModule_kt__u78ha3() {
    if (!properties_initialized_SerializersModule_kt_fjigjn) {
      properties_initialized_SerializersModule_kt_fjigjn = true;
      EmptySerializersModule = new SerialModuleImpl(emptyMap(), emptyMap(), emptyMap(), emptyMap());
    }
  }
  function SerializableWith(serializer) {
    this.q17_1 = serializer;
  }
  protoOf(SerializableWith).equals = function (other) {
    if (!(other instanceof SerializableWith))
      return false;
    var tmp0_other_with_cast = other instanceof SerializableWith ? other : THROW_CCE();
    if (!this.q17_1.equals(tmp0_other_with_cast.q17_1))
      return false;
    return true;
  };
  protoOf(SerializableWith).hashCode = function () {
    return imul(getStringHashCode('serializer'), 127) ^ this.q17_1.hashCode();
  };
  protoOf(SerializableWith).toString = function () {
    return '@kotlinx.serialization.SerializableWith(serializer=' + this.q17_1 + ')';
  };
  function isInstanceOf(_this__u8e3s4, kclass) {
    return kclass.fb(_this__u8e3s4);
  }
  function getChecked(_this__u8e3s4, index) {
    if (!(0 <= index ? index <= (_this__u8e3s4.length - 1 | 0) : false))
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' out of bounds ' + get_indices(_this__u8e3s4));
    return _this__u8e3s4[index];
  }
  function platformSpecificSerializerNotRegistered(_this__u8e3s4) {
    throw SerializationException_init_$Create$("Serializer for class '" + _this__u8e3s4.eb() + "' is not found.\n" + 'Mark the class as @Serializable or provide the serializer explicitly.\n' + 'On Kotlin/JS explicitly declared serializer should be used for interfaces and enums without @Serializable annotation');
  }
  function compiledSerializerImpl(_this__u8e3s4) {
    var tmp1_elvis_lhs = constructSerializerForGivenTypeArgs(_this__u8e3s4, []);
    var tmp;
    if (tmp1_elvis_lhs == null) {
      // Inline function 'kotlin.js.asDynamic' call
      var tmp0_safe_receiver = get_js(_this__u8e3s4).Companion;
      var tmp_0 = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.serializer();
      tmp = (!(tmp_0 == null) ? isInterface(tmp_0, KSerializer) : false) ? tmp_0 : null;
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  }
  function isReferenceArray(rootClass) {
    return rootClass.equals(PrimitiveClasses_getInstance().cc());
  }
  function constructSerializerForGivenTypeArgs(_this__u8e3s4, args) {
    var tmp;
    try {
      // Inline function 'kotlin.reflect.findAssociatedObject' call
      var assocObject = findAssociatedObject(_this__u8e3s4, getKClass(SerializableWith));
      var tmp_0;
      if (!(assocObject == null) ? isInterface(assocObject, KSerializer) : false) {
        tmp_0 = (!(assocObject == null) ? isInterface(assocObject, KSerializer) : false) ? assocObject : THROW_CCE();
      } else {
        if (!(assocObject == null) ? isInterface(assocObject, SerializerFactory) : false) {
          var tmp_1 = assocObject.j11(args.slice());
          tmp_0 = isInterface(tmp_1, KSerializer) ? tmp_1 : THROW_CCE();
        } else {
          tmp_0 = null;
        }
      }
      tmp = tmp_0;
    } catch ($p) {
      var tmp_2;
      var e = $p;
      tmp_2 = null;
      tmp = tmp_2;
    }
    return tmp;
  }
  function toNativeArrayImpl(_this__u8e3s4, eClass) {
    // Inline function 'kotlin.collections.toTypedArray' call
    return copyToArray(_this__u8e3s4);
  }
  //region block: post-declaration
  protoOf(SerialDescriptorImpl).gs = get_isNullable;
  protoOf(SerialDescriptorImpl).js = get_isInline;
  protoOf(AbstractDecoder).pu = decodeSerializableElement$default;
  protoOf(AbstractDecoder).cu = decodeSerializableValue;
  protoOf(AbstractDecoder).ru = decodeSequentially;
  protoOf(AbstractDecoder).tu = decodeCollectionSize;
  protoOf(AbstractEncoder).sv = encodeNotNullMark;
  protoOf(AbstractEncoder).tv = beginCollection;
  protoOf(AbstractEncoder).rv = encodeSerializableValue;
  protoOf(ListLikeDescriptor).gs = get_isNullable;
  protoOf(ListLikeDescriptor).js = get_isInline;
  protoOf(PrimitiveArrayDescriptor).gs = get_isNullable;
  protoOf(PrimitiveArrayDescriptor).js = get_isInline;
  protoOf(ArrayListClassDesc).gs = get_isNullable;
  protoOf(ArrayListClassDesc).js = get_isInline;
  protoOf(HashSetClassDesc).gs = get_isNullable;
  protoOf(HashSetClassDesc).js = get_isInline;
  protoOf(LinkedHashSetClassDesc).gs = get_isNullable;
  protoOf(LinkedHashSetClassDesc).js = get_isInline;
  protoOf(MapLikeDescriptor).gs = get_isNullable;
  protoOf(MapLikeDescriptor).js = get_isInline;
  protoOf(HashMapClassDesc).gs = get_isNullable;
  protoOf(HashMapClassDesc).js = get_isInline;
  protoOf(LinkedHashMapClassDesc).gs = get_isNullable;
  protoOf(LinkedHashMapClassDesc).js = get_isInline;
  protoOf(ArrayClassDesc).gs = get_isNullable;
  protoOf(ArrayClassDesc).js = get_isInline;
  protoOf(PluginGeneratedSerialDescriptor).gs = get_isNullable;
  protoOf(PluginGeneratedSerialDescriptor).js = get_isInline;
  protoOf(InlineClassDescriptor).gs = get_isNullable;
  protoOf(InlinePrimitiveDescriptor$1).o10 = typeParametersSerializers;
  protoOf(PrimitiveSerialDescriptor_0).gs = get_isNullable;
  protoOf(PrimitiveSerialDescriptor_0).js = get_isInline;
  protoOf(TaggedEncoder).tv = beginCollection;
  protoOf(TaggedEncoder).rv = encodeSerializableValue;
  protoOf(NamedValueEncoder).tv = beginCollection;
  protoOf(NamedValueEncoder).rv = encodeSerializableValue;
  protoOf(TaggedDecoder).pu = decodeSerializableElement$default;
  protoOf(TaggedDecoder).cu = decodeSerializableValue;
  protoOf(TaggedDecoder).ru = decodeSequentially;
  protoOf(TaggedDecoder).tu = decodeCollectionSize;
  protoOf(NamedValueDecoder).cu = decodeSerializableValue;
  protoOf(NamedValueDecoder).pu = decodeSerializableElement$default;
  protoOf(NamedValueDecoder).ru = decodeSequentially;
  protoOf(NamedValueDecoder).tu = decodeCollectionSize;
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = decodeSerializableElement$default;
  _.$_$.b = SerializationException_init_$Init$;
  _.$_$.c = UnknownFieldException_init_$Create$;
  _.$_$.d = SEALED_getInstance;
  _.$_$.e = STRING_getInstance;
  _.$_$.f = ENUM_getInstance;
  _.$_$.g = LIST_getInstance;
  _.$_$.h = MAP_getInstance;
  _.$_$.i = Companion_getInstance_1;
  _.$_$.j = IntSerializer_getInstance;
  _.$_$.k = StringSerializer_getInstance;
  _.$_$.l = ListSerializer;
  _.$_$.m = MapSerializer;
  _.$_$.n = serializer_1;
  _.$_$.o = serializer_14;
  _.$_$.p = serializer_11;
  _.$_$.q = serializer_13;
  _.$_$.r = serializer_12;
  _.$_$.s = PolymorphicKind;
  _.$_$.t = PrimitiveKind;
  _.$_$.u = PrimitiveSerialDescriptor;
  _.$_$.v = get_isInline;
  _.$_$.w = get_isNullable;
  _.$_$.x = SerialDescriptor;
  _.$_$.y = ENUM;
  _.$_$.z = buildSerialDescriptor;
  _.$_$.a1 = AbstractDecoder;
  _.$_$.b1 = AbstractEncoder;
  _.$_$.c1 = decodeCollectionSize;
  _.$_$.d1 = decodeSequentially;
  _.$_$.e1 = CompositeDecoder;
  _.$_$.f1 = decodeSerializableValue;
  _.$_$.g1 = Decoder;
  _.$_$.h1 = beginCollection;
  _.$_$.i1 = encodeNotNullMark;
  _.$_$.j1 = encodeSerializableValue;
  _.$_$.k1 = Encoder;
  _.$_$.l1 = AbstractPolymorphicSerializer;
  _.$_$.m1 = typeParametersSerializers;
  _.$_$.n1 = GeneratedSerializer;
  _.$_$.o1 = NamedValueDecoder;
  _.$_$.p1 = NamedValueEncoder;
  _.$_$.q1 = PluginGeneratedSerialDescriptor;
  _.$_$.r1 = jsonCachedSerialNames;
  _.$_$.s1 = throwMissingFieldException;
  _.$_$.t1 = get_EmptySerializersModule;
  _.$_$.u1 = DeserializationStrategy;
  _.$_$.v1 = KSerializer;
  _.$_$.w1 = SealedClassSerializer;
  _.$_$.x1 = SerializationException;
  _.$_$.y1 = SerializationStrategy;
  _.$_$.z1 = findPolymorphicSerializer;
  _.$_$.a2 = serializer_0;
  _.$_$.b2 = serializer;
  //endregion
  return _;
}));

//# sourceMappingURL=kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.js.map


/***/ }),

/***/ 683:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
  if (true)
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(72), __webpack_require__(15)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  else {}
}(this, function (_, kotlin_kotlin, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var protoOf = kotlin_kotlin.$_$.h8;
  var objectMeta = kotlin_kotlin.$_$.g8;
  var VOID = kotlin_kotlin.$_$.mb;
  var setMetadataFor = kotlin_kotlin.$_$.i8;
  var StringBuilder_init_$Create$ = kotlin_kotlin.$_$.y;
  var fillArrayVal = kotlin_kotlin.$_$.f7;
  var toString = kotlin_kotlin.$_$.m8;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.g1;
  var classMeta = kotlin_kotlin.$_$.c7;
  var Decoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.g1;
  var CompositeDecoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.e1;
  var interfaceMeta = kotlin_kotlin.$_$.j7;
  var THROW_CCE = kotlin_kotlin.$_$.oa;
  var equals = kotlin_kotlin.$_$.e7;
  var hashCode = kotlin_kotlin.$_$.i7;
  var joinToString = kotlin_kotlin.$_$.l5;
  var List = kotlin_kotlin.$_$.t3;
  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.o1;
  var Map = kotlin_kotlin.$_$.v3;
  var getKClassFromExpression = kotlin_kotlin.$_$.d;
  var getStringHashCode = kotlin_kotlin.$_$.h7;
  var toInt = kotlin_kotlin.$_$.s9;
  var toLong = kotlin_kotlin.$_$.u9;
  var toDouble = kotlin_kotlin.$_$.q9;
  var toLongOrNull = kotlin_kotlin.$_$.t9;
  var toDoubleOrNull = kotlin_kotlin.$_$.p9;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.e1;
  var Unit_getInstance = kotlin_kotlin.$_$.l3;
  var SEALED_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.d;
  var buildSerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.z;
  var KSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.v1;
  var isInterface = kotlin_kotlin.$_$.s7;
  var getKClass = kotlin_kotlin.$_$.e;
  var arrayOf = kotlin_kotlin.$_$.xa;
  var createKType = kotlin_kotlin.$_$.b;
  var createInvariantKTypeProjection = kotlin_kotlin.$_$.a;
  var serializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.a2;
  var SerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.x;
  var ListSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.l;
  var HashMap = kotlin_kotlin.$_$.p3;
  var PrimitiveClasses_getInstance = kotlin_kotlin.$_$.e3;
  var StringCompanionObject_getInstance = kotlin_kotlin.$_$.d3;
  var serializer_0 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.n;
  var MapSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.m;
  var STRING_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.e;
  var ENUM_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.f;
  var PrimitiveSerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.u;
  var toULongOrNull = kotlin_kotlin.$_$.aa;
  var Companion_getInstance = kotlin_kotlin.$_$.j3;
  var serializer_1 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.r;
  var _ULong___get_data__impl__fggpzb = kotlin_kotlin.$_$.j2;
  var ULong = kotlin_kotlin.$_$.ua;
  var lazy = kotlin_kotlin.$_$.bb;
  var get_isNullable = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.w;
  var get_isInline = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.v;
  var KProperty1 = kotlin_kotlin.$_$.v8;
  var getPropertyCallableRef = kotlin_kotlin.$_$.g7;
  var Encoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.k1;
  var get_EmptySerializersModule = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.t1;
  var captureStack = kotlin_kotlin.$_$.w6;
  var SerializationException = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.x1;
  var SerializationException_init_$Init$ = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.b;
  var coerceAtLeast = kotlin_kotlin.$_$.p8;
  var coerceAtMost = kotlin_kotlin.$_$.q8;
  var numberToChar = kotlin_kotlin.$_$.b8;
  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.t;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.l;
  var concatToString = kotlin_kotlin.$_$.y8;
  var copyOf = kotlin_kotlin.$_$.q4;
  var charSequenceGet = kotlin_kotlin.$_$.z6;
  var Char__toInt_impl_vasixd = kotlin_kotlin.$_$.r1;
  var Char = kotlin_kotlin.$_$.ea;
  var charArray = kotlin_kotlin.$_$.y6;
  var last = kotlin_kotlin.$_$.o5;
  var AbstractPolymorphicSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.l1;
  var DeserializationStrategy = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.u1;
  var isObject = kotlin_kotlin.$_$.v7;
  var findPolymorphicSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.z1;
  var SealedClassSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.w1;
  var jsonCachedSerialNames = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.r1;
  var ENUM = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.y;
  var PrimitiveKind = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.t;
  var PolymorphicKind = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.s;
  var Companion_getInstance_0 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.i;
  var AbstractDecoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.a1;
  var toByte = kotlin_kotlin.$_$.o9;
  var IllegalArgumentException = kotlin_kotlin.$_$.ja;
  var toShort = kotlin_kotlin.$_$.w9;
  var isFinite = kotlin_kotlin.$_$.ab;
  var isFinite_0 = kotlin_kotlin.$_$.za;
  var single = kotlin_kotlin.$_$.k9;
  var decodeSequentially = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.d1;
  var decodeCollectionSize = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.c1;
  var decodeSerializableElement$default = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.a;
  var toUInt = kotlin_kotlin.$_$.z9;
  var _UInt___get_data__impl__f0vqqw = kotlin_kotlin.$_$.x1;
  var toULong = kotlin_kotlin.$_$.ba;
  var toUByte = kotlin_kotlin.$_$.y9;
  var _UByte___get_data__impl__jof9qr = kotlin_kotlin.$_$.u1;
  var toUShort = kotlin_kotlin.$_$.ca;
  var _UShort___get_data__impl__g0245 = kotlin_kotlin.$_$.v2;
  var decodeSerializableValue = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.f1;
  var objectCreate = kotlin_kotlin.$_$.f8;
  var _UInt___init__impl__l7qpdl = kotlin_kotlin.$_$.w1;
  var UInt__toString_impl_dbgl21 = kotlin_kotlin.$_$.y1;
  var _ULong___init__impl__c78o9k = kotlin_kotlin.$_$.i2;
  var ULong__toString_impl_f9au7k = kotlin_kotlin.$_$.k2;
  var _UByte___init__impl__g9hnc4 = kotlin_kotlin.$_$.t1;
  var UByte__toString_impl_v72jg = kotlin_kotlin.$_$.v1;
  var _UShort___init__impl__jigrne = kotlin_kotlin.$_$.u2;
  var UShort__toString_impl_edaoee = kotlin_kotlin.$_$.w2;
  var AbstractEncoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.b1;
  var SerializationStrategy = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.y1;
  var toString_0 = kotlin_kotlin.$_$.s1;
  var encodeNotNullMark = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.i1;
  var beginCollection = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.h1;
  var Companion_getInstance_1 = kotlin_kotlin.$_$.i3;
  var serializer_2 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.p;
  var Companion_getInstance_2 = kotlin_kotlin.$_$.h3;
  var serializer_3 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.q;
  var Companion_getInstance_3 = kotlin_kotlin.$_$.k3;
  var serializer_4 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.o;
  var setOf = kotlin_kotlin.$_$.x5;
  var equals_0 = kotlin_kotlin.$_$.c9;
  var noWhenBranchMatchedException = kotlin_kotlin.$_$.cb;
  var NamedValueDecoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.o1;
  var LIST_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.g;
  var MAP_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.h;
  var IllegalArgumentException_init_$Create$_0 = kotlin_kotlin.$_$.c1;
  var ByteCompanionObject_getInstance = kotlin_kotlin.$_$.y2;
  var toByte_0 = kotlin_kotlin.$_$.j8;
  var ShortCompanionObject_getInstance = kotlin_kotlin.$_$.c3;
  var toShort_0 = kotlin_kotlin.$_$.l8;
  var getValue = kotlin_kotlin.$_$.h5;
  var toList = kotlin_kotlin.$_$.k6;
  var throwUninitializedPropertyAccessException = kotlin_kotlin.$_$.db;
  var encodeSerializableValue = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.j1;
  var NamedValueEncoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.p1;
  var Enum = kotlin_kotlin.$_$.ha;
  //endregion
  //region block: pre-declaration
  setMetadataFor(Json, 'Json', classMeta);
  setMetadataFor(Default, 'Default', objectMeta, Json);
  setMetadataFor(JsonDecoder, 'JsonDecoder', interfaceMeta, VOID, [Decoder, CompositeDecoder]);
  setMetadataFor(Companion, 'Companion', objectMeta);
  setMetadataFor(JsonElement, 'JsonElement', classMeta, VOID, VOID, VOID, {0: JsonElementSerializer_getInstance});
  setMetadataFor(Companion_0, 'Companion', objectMeta);
  setMetadataFor(JsonArray, 'JsonArray', classMeta, JsonElement, [JsonElement, List], VOID, {0: JsonArraySerializer_getInstance});
  setMetadataFor(Companion_1, 'Companion', objectMeta);
  setMetadataFor(JsonObject, 'JsonObject', classMeta, JsonElement, [JsonElement, Map], VOID, {0: JsonObjectSerializer_getInstance});
  setMetadataFor(JsonPrimitive, 'JsonPrimitive', classMeta, JsonElement, VOID, VOID, {0: JsonPrimitiveSerializer_getInstance});
  setMetadataFor(JsonNull, 'JsonNull', objectMeta, JsonPrimitive);
  setMetadataFor(Companion_2, 'Companion', objectMeta);
  setMetadataFor(JsonLiteral, 'JsonLiteral', classMeta, JsonPrimitive);
  setMetadataFor(JsonElementSerializer, 'JsonElementSerializer', objectMeta, VOID, [KSerializer]);
  setMetadataFor(JsonArrayDescriptor, 'JsonArrayDescriptor', objectMeta, VOID, [SerialDescriptor]);
  setMetadataFor(JsonArraySerializer, 'JsonArraySerializer', objectMeta, VOID, [KSerializer]);
  setMetadataFor(JsonObjectDescriptor, 'JsonObjectDescriptor', objectMeta, VOID, [SerialDescriptor]);
  setMetadataFor(JsonObjectSerializer, 'JsonObjectSerializer', objectMeta, VOID, [KSerializer]);
  setMetadataFor(JsonPrimitiveSerializer, 'JsonPrimitiveSerializer', objectMeta, VOID, [KSerializer]);
  setMetadataFor(JsonNullSerializer, 'JsonNullSerializer', objectMeta, VOID, [KSerializer]);
  setMetadataFor(JsonLiteralSerializer, 'JsonLiteralSerializer', objectMeta, VOID, [KSerializer]);
  setMetadataFor(defer$1, VOID, classMeta, VOID, [SerialDescriptor]);
  setMetadataFor(JsonEncoder, 'JsonEncoder', interfaceMeta, VOID, [Encoder]);
  setMetadataFor(JsonTransformingSerializer, 'JsonTransformingSerializer', classMeta, VOID, [KSerializer]);
  setMetadataFor(JsonConf, 'JsonConf', classMeta);
  setMetadataFor(JsonException, 'JsonException', classMeta, SerializationException);
  setMetadataFor(JsonEncodingException, 'JsonEncodingException', classMeta, JsonException);
  setMetadataFor(JsonDecodingException, 'JsonDecodingException', classMeta, JsonException);
  setMetadataFor(JsonParser, 'JsonParser', classMeta);
  setMetadataFor(JsonReader, 'JsonReader', classMeta);
  setMetadataFor(CharMappings, 'CharMappings', objectMeta);
  setMetadataFor(StreamingJsonDecoder, 'StreamingJsonDecoder', classMeta, AbstractDecoder, [JsonDecoder, AbstractDecoder]);
  setMetadataFor(JsonDecoderForUnsignedTypes, 'JsonDecoderForUnsignedTypes', classMeta, AbstractDecoder);
  setMetadataFor(Composer, 'Composer', classMeta);
  setMetadataFor(ComposerForUnsignedNumbers, 'ComposerForUnsignedNumbers', classMeta, Composer);
  setMetadataFor(StreamingJsonEncoder, 'StreamingJsonEncoder', classMeta, AbstractEncoder, [JsonEncoder, AbstractEncoder]);
  setMetadataFor(AbstractJsonTreeDecoder, 'AbstractJsonTreeDecoder', classMeta, NamedValueDecoder, [NamedValueDecoder, JsonDecoder]);
  setMetadataFor(JsonTreeDecoder, 'JsonTreeDecoder', classMeta, AbstractJsonTreeDecoder);
  setMetadataFor(JsonTreeListDecoder, 'JsonTreeListDecoder', classMeta, AbstractJsonTreeDecoder);
  setMetadataFor(JsonPrimitiveDecoder, 'JsonPrimitiveDecoder', classMeta, AbstractJsonTreeDecoder);
  setMetadataFor(JsonTreeMapDecoder, 'JsonTreeMapDecoder', classMeta, JsonTreeDecoder);
  setMetadataFor(AbstractJsonTreeEncoder, 'AbstractJsonTreeEncoder', classMeta, NamedValueEncoder, [NamedValueEncoder, JsonEncoder]);
  setMetadataFor(JsonTreeEncoder, 'JsonTreeEncoder', classMeta, AbstractJsonTreeEncoder);
  setMetadataFor(AbstractJsonTreeEncoder$encodeTaggedInline$1, VOID, classMeta, AbstractEncoder);
  setMetadataFor(JsonPrimitiveEncoder, 'JsonPrimitiveEncoder', classMeta, AbstractJsonTreeEncoder);
  setMetadataFor(JsonTreeListEncoder, 'JsonTreeListEncoder', classMeta, AbstractJsonTreeEncoder);
  setMetadataFor(JsonTreeMapEncoder, 'JsonTreeMapEncoder', classMeta, JsonTreeEncoder);
  setMetadataFor(WriteMode, 'WriteMode', classMeta, Enum);
  //endregion
  function Default() {
    Default_instance = this;
    Json.call(this, new JsonConf());
  }
  var Default_instance;
  function Default_getInstance() {
    if (Default_instance == null)
      new Default();
    return Default_instance;
  }
  function Json(configuration) {
    Default_getInstance();
    this.r17_1 = configuration;
  }
  protoOf(Json).qu = function () {
    return this.r17_1.f18_1;
  };
  protoOf(Json).s17 = function (serializer, value) {
    var result = StringBuilder_init_$Create$();
    var tmp = WriteMode_OBJ_getInstance();
    var tmp$ret$0;
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp0_arrayOfNulls = values().length;
    tmp$ret$0 = fillArrayVal(Array(tmp0_arrayOfNulls), null);
    var encoder = StreamingJsonEncoder_init_$Create$(result, this, tmp, tmp$ret$0);
    encoder.rv(serializer, value);
    return result.toString();
  };
  protoOf(Json).t17 = function (deserializer, string) {
    var reader = new JsonReader(string);
    var input = new StreamingJsonDecoder(this, WriteMode_OBJ_getInstance(), reader);
    var result = input.cu(deserializer);
    if (!reader.b19()) {
      // Inline function 'kotlin.error' call
      var tmp0_error = 'Reader has not consumed the whole input: ' + reader;
      throw IllegalStateException_init_$Create$(toString(tmp0_error));
    }
    return result;
  };
  protoOf(Json).u17 = function (deserializer, element) {
    return readJson(this, element, deserializer);
  };
  function JsonDecoder() {
  }
  function Companion() {
    Companion_instance = this;
  }
  var Companion_instance;
  function Companion_getInstance_4() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function JsonElement() {
    Companion_getInstance_4();
  }
  function Companion_0() {
    Companion_instance_0 = this;
  }
  var Companion_instance_0;
  function Companion_getInstance_5() {
    if (Companion_instance_0 == null)
      new Companion_0();
    return Companion_instance_0;
  }
  function JsonArray(content) {
    Companion_getInstance_5();
    JsonElement.call(this);
    this.e19_1 = content;
  }
  protoOf(JsonArray).f19 = function (element) {
    return this.e19_1.g1(element);
  };
  protoOf(JsonArray).g1 = function (element) {
    if (!(element instanceof JsonElement))
      return false;
    return this.f19(element instanceof JsonElement ? element : THROW_CCE());
  };
  protoOf(JsonArray).g19 = function (elements) {
    return this.e19_1.h1(elements);
  };
  protoOf(JsonArray).h1 = function (elements) {
    return this.g19(elements);
  };
  protoOf(JsonArray).l = function (index) {
    return this.e19_1.l(index);
  };
  protoOf(JsonArray).h19 = function (element) {
    return this.e19_1.v1(element);
  };
  protoOf(JsonArray).v1 = function (element) {
    if (!(element instanceof JsonElement))
      return -1;
    return this.h19(element instanceof JsonElement ? element : THROW_CCE());
  };
  protoOf(JsonArray).p = function () {
    return this.e19_1.p();
  };
  protoOf(JsonArray).f = function () {
    return this.e19_1.f();
  };
  protoOf(JsonArray).k = function (index) {
    return this.e19_1.k(index);
  };
  protoOf(JsonArray).s = function (fromIndex, toIndex) {
    return this.e19_1.s(fromIndex, toIndex);
  };
  protoOf(JsonArray).i = function () {
    return this.e19_1.i();
  };
  protoOf(JsonArray).equals = function (other) {
    return equals(this.e19_1, other);
  };
  protoOf(JsonArray).hashCode = function () {
    return hashCode(this.e19_1);
  };
  protoOf(JsonArray).toString = function () {
    return joinToString(this.e19_1, ',', '[', ']');
  };
  function Companion_1() {
    Companion_instance_1 = this;
  }
  var Companion_instance_1;
  function Companion_getInstance_6() {
    if (Companion_instance_1 == null)
      new Companion_1();
    return Companion_instance_1;
  }
  function JsonObject$toString$lambda(_name_for_destructuring_parameter_0__wldtmu) {
    // Inline function 'kotlin.collections.component1' call
    var k = _name_for_destructuring_parameter_0__wldtmu.v();
    // Inline function 'kotlin.collections.component2' call
    var v = _name_for_destructuring_parameter_0__wldtmu.w();
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var tmp0_apply = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlinx.serialization.json.JsonObject.toString.<anonymous>.<anonymous>' call
    printQuoted(tmp0_apply, k);
    tmp0_apply.q4(_Char___init__impl__6a9atx(58));
    tmp0_apply.uc(v);
    return tmp0_apply.toString();
  }
  function JsonObject(content) {
    Companion_getInstance_6();
    JsonElement.call(this);
    this.i19_1 = content;
  }
  protoOf(JsonObject).j19 = function (key) {
    return this.i19_1.o2(key);
  };
  protoOf(JsonObject).o2 = function (key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return false;
    return this.j19((!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE());
  };
  protoOf(JsonObject).k19 = function (key) {
    return this.i19_1.u2(key);
  };
  protoOf(JsonObject).u2 = function (key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return null;
    return this.k19((!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE());
  };
  protoOf(JsonObject).p = function () {
    return this.i19_1.p();
  };
  protoOf(JsonObject).u = function () {
    return this.i19_1.u();
  };
  protoOf(JsonObject).v2 = function () {
    return this.i19_1.v2();
  };
  protoOf(JsonObject).i = function () {
    return this.i19_1.i();
  };
  protoOf(JsonObject).w2 = function () {
    return this.i19_1.w2();
  };
  protoOf(JsonObject).equals = function (other) {
    return equals(this.i19_1, other);
  };
  protoOf(JsonObject).hashCode = function () {
    return hashCode(this.i19_1);
  };
  protoOf(JsonObject).toString = function () {
    var tmp = this.i19_1.u();
    return joinToString(tmp, ',', '{', '}', VOID, VOID, JsonObject$toString$lambda);
  };
  function JsonNull() {
    JsonNull_instance = this;
    JsonPrimitive.call(this);
    this.l19_1 = 'null';
  }
  protoOf(JsonNull).m19 = function () {
    return this.l19_1;
  };
  var JsonNull_instance;
  function JsonNull_getInstance() {
    if (JsonNull_instance == null)
      new JsonNull();
    return JsonNull_instance;
  }
  function Companion_2() {
    Companion_instance_2 = this;
  }
  var Companion_instance_2;
  function Companion_getInstance_7() {
    if (Companion_instance_2 == null)
      new Companion_2();
    return Companion_instance_2;
  }
  function JsonPrimitive() {
    Companion_getInstance_7();
    JsonElement.call(this);
  }
  protoOf(JsonPrimitive).toString = function () {
    return this.m19();
  };
  function JsonPrimitive_0(value) {
    if (value == null)
      return JsonNull_getInstance();
    return new JsonLiteral(value, false);
  }
  function JsonPrimitive_1(value) {
    if (value == null)
      return JsonNull_getInstance();
    return new JsonLiteral(value, false);
  }
  function JsonPrimitive_2(value) {
    if (value == null)
      return JsonNull_getInstance();
    return new JsonLiteral(value, true);
  }
  function JsonLiteral(body, isString) {
    JsonPrimitive.call(this);
    this.n19_1 = isString;
    this.o19_1 = toString(body);
  }
  protoOf(JsonLiteral).m19 = function () {
    return this.o19_1;
  };
  protoOf(JsonLiteral).toString = function () {
    var tmp;
    if (this.n19_1) {
      // Inline function 'kotlin.text.buildString' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlin.apply' call
      var tmp0_apply = StringBuilder_init_$Create$();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlinx.serialization.json.JsonLiteral.toString.<anonymous>' call
      printQuoted(tmp0_apply, this.o19_1);
      tmp = tmp0_apply.toString();
    } else {
      tmp = this.o19_1;
    }
    return tmp;
  };
  protoOf(JsonLiteral).equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (!(other instanceof JsonLiteral))
      THROW_CCE();
    if (!(this.n19_1 === other.n19_1))
      return false;
    if (!(this.o19_1 === other.o19_1))
      return false;
    return true;
  };
  protoOf(JsonLiteral).hashCode = function () {
    var result = this.n19_1 | 0;
    result = imul(31, result) + getStringHashCode(this.o19_1) | 0;
    return result;
  };
  function get_booleanOrNull(_this__u8e3s4) {
    return toBooleanStrictOrNull(_this__u8e3s4.m19());
  }
  function get_int(_this__u8e3s4) {
    return toInt(_this__u8e3s4.m19());
  }
  function get_long(_this__u8e3s4) {
    return toLong(_this__u8e3s4.m19());
  }
  function get_float(_this__u8e3s4) {
    // Inline function 'kotlin.text.toFloat' call
    var tmp0_toFloat = _this__u8e3s4.m19();
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    return toDouble(tmp0_toFloat);
  }
  function get_double(_this__u8e3s4) {
    return toDouble(_this__u8e3s4.m19());
  }
  function get_contentOrNull(_this__u8e3s4) {
    var tmp;
    if (_this__u8e3s4 instanceof JsonNull) {
      tmp = null;
    } else {
      tmp = _this__u8e3s4.m19();
    }
    return tmp;
  }
  function get_longOrNull(_this__u8e3s4) {
    return toLongOrNull(_this__u8e3s4.m19());
  }
  function get_doubleOrNull(_this__u8e3s4) {
    return toDoubleOrNull(_this__u8e3s4.m19());
  }
  function get_jsonPrimitive(_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof JsonPrimitive ? _this__u8e3s4 : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      error(_this__u8e3s4, 'JsonPrimitive');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function error(_this__u8e3s4, element) {
    throw IllegalArgumentException_init_$Create$('Element ' + getKClassFromExpression(_this__u8e3s4) + ' is not a ' + element);
  }
  function JsonElementSerializer$descriptor$lambda($this$buildSerialDescriptor) {
    $this$buildSerialDescriptor.at('JsonPrimitive', defer(JsonElementSerializer$descriptor$lambda$lambda));
    $this$buildSerialDescriptor.at('JsonNull', defer(JsonElementSerializer$descriptor$lambda$lambda_0));
    $this$buildSerialDescriptor.at('JsonLiteral', defer(JsonElementSerializer$descriptor$lambda$lambda_1));
    $this$buildSerialDescriptor.at('JsonObject', defer(JsonElementSerializer$descriptor$lambda$lambda_2));
    $this$buildSerialDescriptor.at('JsonArray', defer(JsonElementSerializer$descriptor$lambda$lambda_3));
    return Unit_getInstance();
  }
  function JsonElementSerializer$descriptor$lambda$lambda() {
    return JsonPrimitiveSerializer_getInstance().p19_1;
  }
  function JsonElementSerializer$descriptor$lambda$lambda_0() {
    return JsonNullSerializer_getInstance().q19_1;
  }
  function JsonElementSerializer$descriptor$lambda$lambda_1() {
    return JsonLiteralSerializer_getInstance().r19_1;
  }
  function JsonElementSerializer$descriptor$lambda$lambda_2() {
    return JsonObjectSerializer_getInstance().s19_1;
  }
  function JsonElementSerializer$descriptor$lambda$lambda_3() {
    return JsonArraySerializer_getInstance().t19_1;
  }
  function JsonElementSerializer() {
    JsonElementSerializer_instance = this;
    var tmp = this;
    var tmp_0 = SEALED_getInstance();
    tmp.u19_1 = buildSerialDescriptor('kotlinx.serialization.json.JsonElement', tmp_0, [], JsonElementSerializer$descriptor$lambda);
  }
  protoOf(JsonElementSerializer).as = function () {
    return this.u19_1;
  };
  protoOf(JsonElementSerializer).v19 = function (encoder, value) {
    verify(encoder);
    if (value instanceof JsonPrimitive) {
      encoder.rv(JsonPrimitiveSerializer_getInstance(), value);
    } else {
      if (value instanceof JsonObject) {
        encoder.rv(JsonObjectSerializer_getInstance(), value);
      } else {
        if (value instanceof JsonArray) {
          encoder.rv(JsonArraySerializer_getInstance(), value);
        }
      }
    }
  };
  protoOf(JsonElementSerializer).bs = function (encoder, value) {
    return this.v19(encoder, value instanceof JsonElement ? value : THROW_CCE());
  };
  protoOf(JsonElementSerializer).cs = function (decoder) {
    var input = asJsonDecoder(decoder);
    return input.d19();
  };
  var JsonElementSerializer_instance;
  function JsonElementSerializer_getInstance() {
    if (JsonElementSerializer_instance == null)
      new JsonElementSerializer();
    return JsonElementSerializer_instance;
  }
  function asJsonEncoder(_this__u8e3s4) {
    var tmp0_elvis_lhs = isInterface(_this__u8e3s4, JsonEncoder) ? _this__u8e3s4 : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalStateException_init_$Create$('This serializer can be used only with Json format.' + ('Expected Encoder to be JsonEncoder, got ' + getKClassFromExpression(_this__u8e3s4)));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function asJsonDecoder(_this__u8e3s4) {
    var tmp0_elvis_lhs = isInterface(_this__u8e3s4, JsonDecoder) ? _this__u8e3s4 : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalStateException_init_$Create$('This serializer can be used only with Json format.' + ('Expected Decoder to be JsonDecoder, got ' + getKClassFromExpression(_this__u8e3s4)));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function JsonArrayDescriptor() {
    JsonArrayDescriptor_instance = this;
    var tmp = this;
    // Inline function 'kotlinx.serialization.descriptors.serialDescriptor' call
    // Inline function 'kotlinx.serialization.serializer' call
    // Inline function 'kotlinx.serialization.internal.cast' call
    var tmp0_cast = serializer(createKType(getKClass(List), arrayOf([createInvariantKTypeProjection(createKType(getKClass(JsonElement), arrayOf([]), false))]), false));
    tmp.w19_1 = (isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE()).as();
    this.x19_1 = 'kotlinx.serialization.json.JsonArray';
  }
  protoOf(JsonArrayDescriptor).ns = function (index) {
    return this.w19_1.ns(index);
  };
  protoOf(JsonArrayDescriptor).ms = function (name) {
    return this.w19_1.ms(name);
  };
  protoOf(JsonArrayDescriptor).ls = function (index) {
    return this.w19_1.ls(index);
  };
  protoOf(JsonArrayDescriptor).ks = function () {
    return this.w19_1.ks();
  };
  protoOf(JsonArrayDescriptor).js = function () {
    return this.w19_1.js();
  };
  protoOf(JsonArrayDescriptor).gs = function () {
    return this.w19_1.gs();
  };
  protoOf(JsonArrayDescriptor).is = function () {
    return this.w19_1.is();
  };
  protoOf(JsonArrayDescriptor).hs = function () {
    return this.x19_1;
  };
  var JsonArrayDescriptor_instance;
  function JsonArrayDescriptor_getInstance() {
    if (JsonArrayDescriptor_instance == null)
      new JsonArrayDescriptor();
    return JsonArrayDescriptor_instance;
  }
  function JsonArraySerializer() {
    JsonArraySerializer_instance = this;
    this.t19_1 = JsonArrayDescriptor_getInstance();
  }
  protoOf(JsonArraySerializer).as = function () {
    return this.t19_1;
  };
  protoOf(JsonArraySerializer).y19 = function (encoder, value) {
    verify(encoder);
    ListSerializer(JsonElementSerializer_getInstance()).bs(encoder, value);
  };
  protoOf(JsonArraySerializer).bs = function (encoder, value) {
    return this.y19(encoder, value instanceof JsonArray ? value : THROW_CCE());
  };
  protoOf(JsonArraySerializer).cs = function (decoder) {
    verify_0(decoder);
    return new JsonArray(ListSerializer(JsonElementSerializer_getInstance()).cs(decoder));
  };
  var JsonArraySerializer_instance;
  function JsonArraySerializer_getInstance() {
    if (JsonArraySerializer_instance == null)
      new JsonArraySerializer();
    return JsonArraySerializer_instance;
  }
  function JsonObjectDescriptor() {
    JsonObjectDescriptor_instance = this;
    var tmp = this;
    // Inline function 'kotlinx.serialization.descriptors.serialDescriptor' call
    // Inline function 'kotlinx.serialization.serializer' call
    // Inline function 'kotlinx.serialization.internal.cast' call
    var tmp0_cast = serializer(createKType(getKClass(HashMap), arrayOf([createInvariantKTypeProjection(createKType(PrimitiveClasses_getInstance().dc(), arrayOf([]), false)), createInvariantKTypeProjection(createKType(getKClass(JsonElement), arrayOf([]), false))]), false));
    tmp.z19_1 = (isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE()).as();
    this.a1a_1 = 'kotlinx.serialization.json.JsonObject';
  }
  protoOf(JsonObjectDescriptor).ns = function (index) {
    return this.z19_1.ns(index);
  };
  protoOf(JsonObjectDescriptor).ms = function (name) {
    return this.z19_1.ms(name);
  };
  protoOf(JsonObjectDescriptor).ls = function (index) {
    return this.z19_1.ls(index);
  };
  protoOf(JsonObjectDescriptor).ks = function () {
    return this.z19_1.ks();
  };
  protoOf(JsonObjectDescriptor).js = function () {
    return this.z19_1.js();
  };
  protoOf(JsonObjectDescriptor).gs = function () {
    return this.z19_1.gs();
  };
  protoOf(JsonObjectDescriptor).is = function () {
    return this.z19_1.is();
  };
  protoOf(JsonObjectDescriptor).hs = function () {
    return this.a1a_1;
  };
  var JsonObjectDescriptor_instance;
  function JsonObjectDescriptor_getInstance() {
    if (JsonObjectDescriptor_instance == null)
      new JsonObjectDescriptor();
    return JsonObjectDescriptor_instance;
  }
  function JsonObjectSerializer() {
    JsonObjectSerializer_instance = this;
    this.s19_1 = JsonObjectDescriptor_getInstance();
  }
  protoOf(JsonObjectSerializer).as = function () {
    return this.s19_1;
  };
  protoOf(JsonObjectSerializer).b1a = function (encoder, value) {
    verify(encoder);
    MapSerializer(serializer_0(StringCompanionObject_getInstance()), JsonElementSerializer_getInstance()).bs(encoder, value);
  };
  protoOf(JsonObjectSerializer).bs = function (encoder, value) {
    return this.b1a(encoder, value instanceof JsonObject ? value : THROW_CCE());
  };
  protoOf(JsonObjectSerializer).cs = function (decoder) {
    verify_0(decoder);
    return new JsonObject(MapSerializer(serializer_0(StringCompanionObject_getInstance()), JsonElementSerializer_getInstance()).cs(decoder));
  };
  var JsonObjectSerializer_instance;
  function JsonObjectSerializer_getInstance() {
    if (JsonObjectSerializer_instance == null)
      new JsonObjectSerializer();
    return JsonObjectSerializer_instance;
  }
  function defer(deferred) {
    return new defer$1(deferred);
  }
  function JsonPrimitiveSerializer() {
    JsonPrimitiveSerializer_instance = this;
    this.p19_1 = buildSerialDescriptor('kotlinx.serialization.json.JsonPrimitive', STRING_getInstance(), []);
  }
  protoOf(JsonPrimitiveSerializer).as = function () {
    return this.p19_1;
  };
  protoOf(JsonPrimitiveSerializer).c1a = function (encoder, value) {
    verify(encoder);
    var tmp;
    if (value instanceof JsonNull) {
      encoder.rv(JsonNullSerializer_getInstance(), JsonNull_getInstance());
      tmp = Unit_getInstance();
    } else {
      var tmp_0 = JsonLiteralSerializer_getInstance();
      encoder.rv(tmp_0, value instanceof JsonLiteral ? value : THROW_CCE());
      tmp = Unit_getInstance();
    }
    return tmp;
  };
  protoOf(JsonPrimitiveSerializer).bs = function (encoder, value) {
    return this.c1a(encoder, value instanceof JsonPrimitive ? value : THROW_CCE());
  };
  protoOf(JsonPrimitiveSerializer).cs = function (decoder) {
    var result = asJsonDecoder(decoder).d19();
    if (!(result instanceof JsonPrimitive))
      throw JsonDecodingException_0(-1, 'Unexpected JSON element, expected JsonPrimitive, had ' + getKClassFromExpression(result), toString(result));
    return result;
  };
  var JsonPrimitiveSerializer_instance;
  function JsonPrimitiveSerializer_getInstance() {
    if (JsonPrimitiveSerializer_instance == null)
      new JsonPrimitiveSerializer();
    return JsonPrimitiveSerializer_instance;
  }
  function JsonNullSerializer() {
    JsonNullSerializer_instance = this;
    this.q19_1 = buildSerialDescriptor('kotlinx.serialization.json.JsonNull', ENUM_getInstance(), []);
  }
  protoOf(JsonNullSerializer).as = function () {
    return this.q19_1;
  };
  protoOf(JsonNullSerializer).d1a = function (encoder, value) {
    verify(encoder);
    encoder.wu();
  };
  protoOf(JsonNullSerializer).bs = function (encoder, value) {
    return this.d1a(encoder, value instanceof JsonNull ? value : THROW_CCE());
  };
  protoOf(JsonNullSerializer).cs = function (decoder) {
    verify_0(decoder);
    decoder.qt();
    return JsonNull_getInstance();
  };
  var JsonNullSerializer_instance;
  function JsonNullSerializer_getInstance() {
    if (JsonNullSerializer_instance == null)
      new JsonNullSerializer();
    return JsonNullSerializer_instance;
  }
  function JsonLiteralSerializer() {
    JsonLiteralSerializer_instance = this;
    this.r19_1 = PrimitiveSerialDescriptor('kotlinx.serialization.json.JsonLiteral', STRING_getInstance());
  }
  protoOf(JsonLiteralSerializer).as = function () {
    return this.r19_1;
  };
  protoOf(JsonLiteralSerializer).e1a = function (encoder, value) {
    verify(encoder);
    if (value.n19_1) {
      return encoder.fv(value.o19_1);
    }
    var tmp0_safe_receiver = get_longOrNull(value);
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return encoder.bv(tmp0_safe_receiver);
    }
    var tmp1_safe_receiver = toULongOrNull(value.o19_1);
    var tmp = tmp1_safe_receiver;
    if ((tmp == null ? null : new ULong(tmp)) == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      var tmp0_safe_receiver_0 = encoder.gv(serializer_1(Companion_getInstance()).as());
      if (tmp0_safe_receiver_0 == null)
        null;
      else {
        var tmp$ret$1;
        // Inline function 'kotlin.ULong.toLong' call
        tmp$ret$1 = _ULong___get_data__impl__fggpzb(tmp1_safe_receiver);
        tmp0_safe_receiver_0.bv(tmp$ret$1);
      }
      return Unit_getInstance();
    }
    var tmp2_safe_receiver = get_doubleOrNull(value);
    if (tmp2_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return encoder.dv(tmp2_safe_receiver);
    }
    var tmp3_safe_receiver = get_booleanOrNull(value);
    if (tmp3_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return encoder.xu(tmp3_safe_receiver);
    }
    encoder.fv(value.o19_1);
  };
  protoOf(JsonLiteralSerializer).bs = function (encoder, value) {
    return this.e1a(encoder, value instanceof JsonLiteral ? value : THROW_CCE());
  };
  protoOf(JsonLiteralSerializer).cs = function (decoder) {
    var result = asJsonDecoder(decoder).d19();
    if (!(result instanceof JsonLiteral))
      throw JsonDecodingException_0(-1, 'Unexpected JSON element, expected JsonLiteral, had ' + getKClassFromExpression(result), toString(result));
    return result;
  };
  var JsonLiteralSerializer_instance;
  function JsonLiteralSerializer_getInstance() {
    if (JsonLiteralSerializer_instance == null)
      new JsonLiteralSerializer();
    return JsonLiteralSerializer_instance;
  }
  function verify(encoder) {
    asJsonEncoder(encoder);
  }
  function verify_0(decoder) {
    asJsonDecoder(decoder);
  }
  function _get_original__l7ku1m($this) {
    // Inline function 'kotlin.getValue' call
    original$factory();
    return $this.f1a_1.w();
  }
  function defer$1($deferred) {
    this.f1a_1 = lazy($deferred);
  }
  protoOf(defer$1).hs = function () {
    return _get_original__l7ku1m(this).hs();
  };
  protoOf(defer$1).is = function () {
    return _get_original__l7ku1m(this).is();
  };
  protoOf(defer$1).ks = function () {
    return _get_original__l7ku1m(this).ks();
  };
  protoOf(defer$1).ls = function (index) {
    return _get_original__l7ku1m(this).ls(index);
  };
  protoOf(defer$1).ms = function (name) {
    return _get_original__l7ku1m(this).ms(name);
  };
  protoOf(defer$1).ns = function (index) {
    return _get_original__l7ku1m(this).ns(index);
  };
  function original$factory() {
    return getPropertyCallableRef('original', 1, KProperty1, function (receiver) {
      return _get_original__l7ku1m(receiver);
    }, null);
  }
  function JsonEncoder() {
  }
  function JsonTransformingSerializer(tSerializer) {
    this.h1a_1 = tSerializer;
  }
  protoOf(JsonTransformingSerializer).as = function () {
    return this.h1a_1.as();
  };
  protoOf(JsonTransformingSerializer).bs = function (encoder, value) {
    var output = asJsonEncoder(encoder);
    var element = writeJson(output.c19(), value, this.h1a_1);
    element = this.i1a(element);
    output.g1a(element);
  };
  protoOf(JsonTransformingSerializer).cs = function (decoder) {
    var input = asJsonDecoder(decoder);
    var element = input.d19();
    return input.c19().u17(this.h1a_1, this.j1a(element));
  };
  protoOf(JsonTransformingSerializer).j1a = function (element) {
    return element;
  };
  protoOf(JsonTransformingSerializer).i1a = function (element) {
    return element;
  };
  function JsonConf(encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, serializersModule) {
    encodeDefaults = encodeDefaults === VOID ? false : encodeDefaults;
    ignoreUnknownKeys = ignoreUnknownKeys === VOID ? false : ignoreUnknownKeys;
    isLenient = isLenient === VOID ? false : isLenient;
    allowStructuredMapKeys = allowStructuredMapKeys === VOID ? false : allowStructuredMapKeys;
    prettyPrint = prettyPrint === VOID ? false : prettyPrint;
    prettyPrintIndent = prettyPrintIndent === VOID ? '    ' : prettyPrintIndent;
    coerceInputValues = coerceInputValues === VOID ? false : coerceInputValues;
    useArrayPolymorphism = useArrayPolymorphism === VOID ? false : useArrayPolymorphism;
    classDiscriminator = classDiscriminator === VOID ? 'type' : classDiscriminator;
    allowSpecialFloatingPointValues = allowSpecialFloatingPointValues === VOID ? false : allowSpecialFloatingPointValues;
    serializersModule = serializersModule === VOID ? get_EmptySerializersModule() : serializersModule;
    this.v17_1 = encodeDefaults;
    this.w17_1 = ignoreUnknownKeys;
    this.x17_1 = isLenient;
    this.y17_1 = allowStructuredMapKeys;
    this.z17_1 = prettyPrint;
    this.a18_1 = prettyPrintIndent;
    this.b18_1 = coerceInputValues;
    this.c18_1 = useArrayPolymorphism;
    this.d18_1 = classDiscriminator;
    this.e18_1 = allowSpecialFloatingPointValues;
    this.f18_1 = serializersModule;
  }
  protoOf(JsonConf).toString = function () {
    return 'JsonConf(encodeDefaults=' + this.v17_1 + ', ignoreUnknownKeys=' + this.w17_1 + ', isLenient=' + this.x17_1 + ', allowStructuredMapKeys=' + this.y17_1 + ', prettyPrint=' + this.z17_1 + ', prettyPrintIndent=' + this.a18_1 + ', coerceInputValues=' + this.b18_1 + ', useArrayPolymorphism=' + this.c18_1 + ', classDiscriminator=' + this.d18_1 + ', allowSpecialFloatingPointValues=' + this.e18_1 + ', serializersModule=' + this.f18_1 + ')';
  };
  protoOf(JsonConf).hashCode = function () {
    var result = this.v17_1 | 0;
    result = imul(result, 31) + (this.w17_1 | 0) | 0;
    result = imul(result, 31) + (this.x17_1 | 0) | 0;
    result = imul(result, 31) + (this.y17_1 | 0) | 0;
    result = imul(result, 31) + (this.z17_1 | 0) | 0;
    result = imul(result, 31) + getStringHashCode(this.a18_1) | 0;
    result = imul(result, 31) + (this.b18_1 | 0) | 0;
    result = imul(result, 31) + (this.c18_1 | 0) | 0;
    result = imul(result, 31) + getStringHashCode(this.d18_1) | 0;
    result = imul(result, 31) + (this.e18_1 | 0) | 0;
    result = imul(result, 31) + hashCode(this.f18_1) | 0;
    return result;
  };
  protoOf(JsonConf).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof JsonConf))
      return false;
    var tmp0_other_with_cast = other instanceof JsonConf ? other : THROW_CCE();
    if (!(this.v17_1 === tmp0_other_with_cast.v17_1))
      return false;
    if (!(this.w17_1 === tmp0_other_with_cast.w17_1))
      return false;
    if (!(this.x17_1 === tmp0_other_with_cast.x17_1))
      return false;
    if (!(this.y17_1 === tmp0_other_with_cast.y17_1))
      return false;
    if (!(this.z17_1 === tmp0_other_with_cast.z17_1))
      return false;
    if (!(this.a18_1 === tmp0_other_with_cast.a18_1))
      return false;
    if (!(this.b18_1 === tmp0_other_with_cast.b18_1))
      return false;
    if (!(this.c18_1 === tmp0_other_with_cast.c18_1))
      return false;
    if (!(this.d18_1 === tmp0_other_with_cast.d18_1))
      return false;
    if (!(this.e18_1 === tmp0_other_with_cast.e18_1))
      return false;
    if (!equals(this.f18_1, tmp0_other_with_cast.f18_1))
      return false;
    return true;
  };
  function JsonEncodingException(message) {
    JsonException.call(this, message);
    captureStack(this, JsonEncodingException);
  }
  function InvalidFloatingPointEncoded(value, output) {
    return new JsonEncodingException('Unexpected special floating-point value ' + toString(value) + '. By default, ' + 'non-finite floating point values are prohibited because they do not conform JSON specification. ' + (get_specialFlowingValuesHint() + '\n') + ('Current output: ' + minify(output)));
  }
  function InvalidKeyKindException(keyDescriptor) {
    return new JsonEncodingException("Value of type '" + keyDescriptor.hs() + "' can't be used in JSON as a key in the map. " + ("It should have either primitive or enum kind, but its kind is '" + keyDescriptor.is() + "'.\n") + get_allowStructuredMapKeysHint());
  }
  function JsonDecodingException(message) {
    JsonException.call(this, message);
    captureStack(this, JsonDecodingException);
  }
  function JsonDecodingException_0(offset, message, input) {
    return JsonDecodingException_1(offset, message + '\nJSON input: ' + minify(input, offset));
  }
  function throwInvalidFloatingPointDecoded(_this__u8e3s4, result) {
    _this__u8e3s4.k1a('Unexpected special floating-point value ' + toString(result) + '. By default, ' + 'non-finite floating point values are prohibited because they do not conform JSON specification. ' + get_specialFlowingValuesHint());
  }
  function InvalidFloatingPointEncoded_0(value, key, output) {
    return new JsonEncodingException(unexpectedFpErrorMessage(value, key, output));
  }
  function InvalidFloatingPointDecoded(value, key, output) {
    return JsonDecodingException_1(-1, unexpectedFpErrorMessage(value, key, output));
  }
  function UnknownKeyException(key, input) {
    return JsonDecodingException_1(-1, "Encountered unknown key '" + key + "'.\n" + (get_ignoreUnknownKeysHint() + '\n') + ('Current input: ' + minify(input)));
  }
  function JsonException(message) {
    SerializationException_init_$Init$(message, this);
    captureStack(this, JsonException);
  }
  function minify(_this__u8e3s4, offset) {
    offset = offset === VOID ? -1 : offset;
    if (_this__u8e3s4.length < 200)
      return _this__u8e3s4;
    if (offset === -1) {
      var start = _this__u8e3s4.length - 60 | 0;
      if (start <= 0)
        return _this__u8e3s4;
      // Inline function 'kotlin.text.substring' call
      // Inline function 'kotlin.js.asDynamic' call
      return '.....' + _this__u8e3s4.substring(start);
    }
    var start_0 = offset - 30 | 0;
    var end = offset + 30 | 0;
    var prefix = start_0 <= 0 ? '' : '.....';
    var suffix = end >= _this__u8e3s4.length ? '' : '.....';
    // Inline function 'kotlin.text.substring' call
    var tmp0_substring = coerceAtLeast(start_0, 0);
    var tmp1_substring = coerceAtMost(end, _this__u8e3s4.length);
    // Inline function 'kotlin.js.asDynamic' call
    return prefix + _this__u8e3s4.substring(tmp0_substring, tmp1_substring) + suffix;
  }
  function JsonDecodingException_1(offset, message) {
    return new JsonDecodingException(offset >= 0 ? 'Unexpected JSON token at offset ' + offset + ': ' + message : message);
  }
  function unexpectedFpErrorMessage(value, key, output) {
    return 'Unexpected special floating-point value ' + toString(value) + ' with key ' + key + '. By default, ' + 'non-finite floating point values are prohibited because they do not conform JSON specification. ' + (get_specialFlowingValuesHint() + '\n') + ('Current output: ' + minify(output));
  }
  function readObject($this) {
    // Inline function 'kotlinx.serialization.json.internal.JsonReader.requireTokenClass' call
    var tmp0_requireTokenClass = $this.l1a_1;
    var tmp1_requireTokenClass = get_TC_BEGIN_OBJ();
    if (!(tmp0_requireTokenClass.w18_1 === tmp1_requireTokenClass)) {
      var tmp$ret$0;
      // Inline function 'kotlinx.serialization.json.internal.JsonParser.readObject.<anonymous>' call
      numberToChar(tmp0_requireTokenClass.w18_1);
      tmp$ret$0 = 'Expected start of the object';
      tmp0_requireTokenClass.n1a(tmp$ret$0, tmp0_requireTokenClass.x18_1);
    }
    $this.l1a_1.o1a();
    // Inline function 'kotlinx.serialization.json.internal.JsonReader.require' call
    var tmp3_require = $this.l1a_1;
    var tmp4_require = !($this.l1a_1.w18_1 === get_TC_COMMA());
    var tmp5_require = $this.l1a_1.v18_1;
    if (!tmp4_require) {
      var tmp$ret$1;
      // Inline function 'kotlinx.serialization.json.internal.JsonParser.readObject.<anonymous>' call
      tmp$ret$1 = 'Unexpected leading comma';
      tmp3_require.n1a(tmp$ret$1, tmp5_require);
    }
    // Inline function 'kotlin.collections.linkedMapOf' call
    var result = LinkedHashMap_init_$Create$();
    var valueExpected = false;
    while ($this.l1a_1.p1a()) {
      valueExpected = false;
      var key = $this.m1a_1 ? $this.l1a_1.r1a() : $this.l1a_1.q1a();
      // Inline function 'kotlinx.serialization.json.internal.JsonReader.requireTokenClass' call
      var tmp6_requireTokenClass = $this.l1a_1;
      var tmp7_requireTokenClass = get_TC_COLON();
      if (!(tmp6_requireTokenClass.w18_1 === tmp7_requireTokenClass)) {
        var tmp$ret$3;
        // Inline function 'kotlinx.serialization.json.internal.JsonParser.readObject.<anonymous>' call
        numberToChar(tmp6_requireTokenClass.w18_1);
        tmp$ret$3 = "Expected ':'";
        tmp6_requireTokenClass.n1a(tmp$ret$3, tmp6_requireTokenClass.x18_1);
      }
      $this.l1a_1.o1a();
      var element = $this.s1a();
      // Inline function 'kotlin.collections.set' call
      result.z3(key, element);
      if (!($this.l1a_1.w18_1 === get_TC_COMMA())) {
        // Inline function 'kotlinx.serialization.json.internal.JsonReader.requireTokenClass' call
        var tmp9_requireTokenClass = $this.l1a_1;
        var tmp10_requireTokenClass = get_TC_END_OBJ();
        if (!(tmp9_requireTokenClass.w18_1 === tmp10_requireTokenClass)) {
          var tmp$ret$4;
          // Inline function 'kotlinx.serialization.json.internal.JsonParser.readObject.<anonymous>' call
          numberToChar(tmp9_requireTokenClass.w18_1);
          tmp$ret$4 = 'Expected end of the object or comma';
          tmp9_requireTokenClass.n1a(tmp$ret$4, tmp9_requireTokenClass.x18_1);
        }
      } else {
        valueExpected = true;
        $this.l1a_1.o1a();
      }
    }
    // Inline function 'kotlinx.serialization.json.internal.JsonReader.require' call
    var tmp12_require = $this.l1a_1;
    var tmp13_require = !valueExpected ? $this.l1a_1.w18_1 === get_TC_END_OBJ() : false;
    var tmp14_require = $this.l1a_1.v18_1;
    if (!tmp13_require) {
      var tmp$ret$5;
      // Inline function 'kotlinx.serialization.json.internal.JsonParser.readObject.<anonymous>' call
      tmp$ret$5 = 'Expected end of the object';
      tmp12_require.n1a(tmp$ret$5, tmp14_require);
    }
    $this.l1a_1.o1a();
    return new JsonObject(result);
  }
  function readArray($this) {
    // Inline function 'kotlinx.serialization.json.internal.JsonReader.requireTokenClass' call
    var tmp0_requireTokenClass = $this.l1a_1;
    var tmp1_requireTokenClass = get_TC_BEGIN_LIST();
    if (!(tmp0_requireTokenClass.w18_1 === tmp1_requireTokenClass)) {
      var tmp$ret$0;
      // Inline function 'kotlinx.serialization.json.internal.JsonParser.readArray.<anonymous>' call
      numberToChar(tmp0_requireTokenClass.w18_1);
      tmp$ret$0 = 'Expected start of the array';
      tmp0_requireTokenClass.n1a(tmp$ret$0, tmp0_requireTokenClass.x18_1);
    }
    $this.l1a_1.o1a();
    // Inline function 'kotlinx.serialization.json.internal.JsonReader.require' call
    var tmp3_require = $this.l1a_1;
    var tmp4_require = !($this.l1a_1.w18_1 === get_TC_COMMA());
    var tmp5_require = $this.l1a_1.v18_1;
    if (!tmp4_require) {
      var tmp$ret$1;
      // Inline function 'kotlinx.serialization.json.internal.JsonParser.readArray.<anonymous>' call
      tmp$ret$1 = 'Unexpected leading comma';
      tmp3_require.n1a(tmp$ret$1, tmp5_require);
    }
    // Inline function 'kotlin.collections.arrayListOf' call
    var result = ArrayList_init_$Create$();
    var valueExpected = false;
    while ($this.l1a_1.p1a()) {
      valueExpected = false;
      var element = $this.s1a();
      result.a(element);
      if (!($this.l1a_1.w18_1 === get_TC_COMMA())) {
        // Inline function 'kotlinx.serialization.json.internal.JsonReader.requireTokenClass' call
        var tmp6_requireTokenClass = $this.l1a_1;
        var tmp7_requireTokenClass = get_TC_END_LIST();
        if (!(tmp6_requireTokenClass.w18_1 === tmp7_requireTokenClass)) {
          var tmp$ret$3;
          // Inline function 'kotlinx.serialization.json.internal.JsonParser.readArray.<anonymous>' call
          numberToChar(tmp6_requireTokenClass.w18_1);
          tmp$ret$3 = 'Expected end of the array or comma';
          tmp6_requireTokenClass.n1a(tmp$ret$3, tmp6_requireTokenClass.x18_1);
        }
      } else {
        valueExpected = true;
        $this.l1a_1.o1a();
      }
    }
    // Inline function 'kotlinx.serialization.json.internal.JsonReader.require' call
    var tmp9_require = $this.l1a_1;
    var tmp10_require = !valueExpected;
    var tmp11_require = $this.l1a_1.v18_1;
    if (!tmp10_require) {
      var tmp$ret$4;
      // Inline function 'kotlinx.serialization.json.internal.JsonParser.readArray.<anonymous>' call
      tmp$ret$4 = 'Unexpected trailing comma';
      tmp9_require.n1a(tmp$ret$4, tmp11_require);
    }
    $this.l1a_1.o1a();
    return new JsonArray(result);
  }
  function readValue($this, isString) {
    var tmp;
    if ($this.m1a_1) {
      tmp = $this.l1a_1.r1a();
    } else {
      tmp = isString ? $this.l1a_1.q1a() : $this.l1a_1.r1a();
    }
    var str = tmp;
    return new JsonLiteral(str, isString);
  }
  function JsonParser(configuration, reader) {
    this.l1a_1 = reader;
    this.m1a_1 = configuration.x17_1;
  }
  protoOf(JsonParser).s1a = function () {
    if (!this.l1a_1.p1a()) {
      this.l1a_1.k1a("Can't begin reading value from here");
    }
    var tmp0_subject = this.l1a_1.w18_1;
    var tmp;
    if (tmp0_subject === get_TC_NULL()) {
      // Inline function 'kotlin.also' call
      var tmp0_also = JsonNull_getInstance();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlinx.serialization.json.internal.JsonParser.read.<anonymous>' call
      this.l1a_1.o1a();
      tmp = tmp0_also;
    } else if (tmp0_subject === get_TC_STRING()) {
      tmp = readValue(this, true);
    } else if (tmp0_subject === get_TC_OTHER()) {
      tmp = readValue(this, false);
    } else if (tmp0_subject === get_TC_BEGIN_OBJ()) {
      tmp = readObject(this);
    } else if (tmp0_subject === get_TC_BEGIN_LIST()) {
      tmp = readArray(this);
    } else {
      this.l1a_1.k1a("Can't begin reading element, unexpected token");
    }
    return tmp;
  };
  function takeStringInternal($this, advance) {
    var tmp;
    if ($this.y18_1 < 0) {
      tmp = concatToString($this.a19_1, 0, 0 + $this.z18_1 | 0);
    } else {
      // Inline function 'kotlin.text.substring' call
      var tmp0_substring = $this.u18_1;
      var tmp1_substring = $this.y18_1;
      var tmp2_substring = $this.y18_1 + $this.z18_1 | 0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp = tmp0_substring.substring(tmp1_substring, tmp2_substring);
    }
    var prevStr = tmp;
    if (advance) {
      $this.o1a();
    }
    return prevStr;
  }
  function takeStringInternal$default($this, advance, $super) {
    advance = advance === VOID ? true : advance;
    return takeStringInternal($this, advance);
  }
  function append($this, ch) {
    if ($this.z18_1 >= $this.a19_1.length)
      $this.a19_1 = copyOf($this.a19_1, imul(2, $this.a19_1.length));
    var tmp = $this.a19_1;
    var tmp1 = $this.z18_1;
    $this.z18_1 = tmp1 + 1 | 0;
    tmp[tmp1] = ch;
  }
  function appendRange($this, source, fromIndex, toIndex) {
    var addLen = toIndex - fromIndex | 0;
    var oldLen = $this.z18_1;
    var newLen = oldLen + addLen | 0;
    if (newLen > $this.a19_1.length)
      $this.a19_1 = copyOf($this.a19_1, coerceAtLeast(newLen, imul(2, $this.a19_1.length)));
    var inductionVariable = 0;
    if (inductionVariable < addLen)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        $this.a19_1[oldLen + i | 0] = charSequenceGet(source, fromIndex + i | 0);
      }
       while (inductionVariable < addLen);
    $this.z18_1 = $this.z18_1 + addLen | 0;
  }
  function nextLiteral($this, source, startPos) {
    $this.x18_1 = startPos;
    $this.y18_1 = startPos;
    var currentPosition = startPos;
    while (currentPosition < source.length ? charToTokenClass(charSequenceGet(source, currentPosition)) === 0 : false) {
      currentPosition = currentPosition + 1 | 0;
    }
    $this.v18_1 = currentPosition;
    $this.z18_1 = currentPosition - $this.y18_1 | 0;
    $this.w18_1 = rangeEquals(source, $this.y18_1, $this.z18_1, 'null') ? 10 : 0;
  }
  function nextString($this, source, startPosition) {
    $this.x18_1 = startPosition;
    $this.z18_1 = 0;
    var currentPosition = startPosition + 1 | 0;
    if (currentPosition >= source.length) {
      $this.n1a('EOF', currentPosition);
    }
    var lastPosition = currentPosition;
    while (!(charSequenceGet(source, currentPosition) === _Char___init__impl__6a9atx(34))) {
      if (charSequenceGet(source, currentPosition) === _Char___init__impl__6a9atx(92)) {
        appendRange($this, source, lastPosition, currentPosition);
        var newPosition = appendEsc($this, source, currentPosition + 1 | 0);
        currentPosition = newPosition;
        lastPosition = newPosition;
      } else {
        currentPosition = currentPosition + 1 | 0;
        if (currentPosition >= source.length) {
          $this.n1a('EOF', currentPosition);
        }
      }
    }
    if (lastPosition === (startPosition + 1 | 0)) {
      $this.y18_1 = lastPosition;
      $this.z18_1 = currentPosition - lastPosition | 0;
    } else {
      appendRange($this, source, lastPosition, currentPosition);
      $this.y18_1 = -1;
    }
    $this.v18_1 = currentPosition + 1 | 0;
    $this.w18_1 = 1;
  }
  function appendEsc($this, source, startPosition) {
    var currentPosition = startPosition;
    // Inline function 'kotlinx.serialization.json.internal.JsonReader.require' call
    var tmp0_require = currentPosition < source.length;
    var tmp1_require = currentPosition;
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlinx.serialization.json.internal.JsonReader.appendEsc.<anonymous>' call
      tmp$ret$0 = 'Unexpected EOF after escape character';
      $this.n1a(tmp$ret$0, tmp1_require);
    }
    var tmp0 = currentPosition;
    currentPosition = tmp0 + 1 | 0;
    var currentChar = charSequenceGet(source, tmp0);
    if (currentChar === _Char___init__impl__6a9atx(117)) {
      return appendHex($this, source, currentPosition);
    }
    var c = escapeToChar(Char__toInt_impl_vasixd(currentChar));
    // Inline function 'kotlinx.serialization.json.internal.JsonReader.require' call
    var tmp2_require = !(c === _Char___init__impl__6a9atx(0));
    var tmp3_require = currentPosition;
    if (!tmp2_require) {
      var tmp$ret$1;
      // Inline function 'kotlinx.serialization.json.internal.JsonReader.appendEsc.<anonymous>' call
      tmp$ret$1 = "Invalid escaped char '" + new Char(currentChar) + "'";
      $this.n1a(tmp$ret$1, tmp3_require);
    }
    append($this, c);
    return currentPosition;
  }
  function appendHex($this, source, startPos) {
    var curPos = startPos;
    var tmp3 = curPos;
    curPos = tmp3 + 1 | 0;
    var tmp = fromHexChar($this, source, tmp3) << 12;
    var tmp2 = curPos;
    curPos = tmp2 + 1 | 0;
    var tmp_0 = tmp + (fromHexChar($this, source, tmp2) << 8) | 0;
    var tmp1 = curPos;
    curPos = tmp1 + 1 | 0;
    var tmp_1 = tmp_0 + (fromHexChar($this, source, tmp1) << 4) | 0;
    var tmp0 = curPos;
    curPos = tmp0 + 1 | 0;
    append($this, numberToChar(tmp_1 + fromHexChar($this, source, tmp0) | 0));
    return curPos;
  }
  function fromHexChar($this, source, currentPosition) {
    // Inline function 'kotlinx.serialization.json.internal.JsonReader.require' call
    if (!(currentPosition < source.length)) {
      var tmp$ret$0;
      // Inline function 'kotlinx.serialization.json.internal.JsonReader.fromHexChar.<anonymous>' call
      tmp$ret$0 = 'Unexpected EOF during unicode escape';
      $this.n1a(tmp$ret$0, currentPosition);
    }
    var curChar = charSequenceGet(source, currentPosition);
    var tmp;
    if (_Char___init__impl__6a9atx(48) <= curChar ? curChar <= _Char___init__impl__6a9atx(57) : false) {
      tmp = Char__toInt_impl_vasixd(curChar) - 48 | 0;
    } else if (_Char___init__impl__6a9atx(97) <= curChar ? curChar <= _Char___init__impl__6a9atx(102) : false) {
      tmp = (Char__toInt_impl_vasixd(curChar) - 97 | 0) + 10 | 0;
    } else if (_Char___init__impl__6a9atx(65) <= curChar ? curChar <= _Char___init__impl__6a9atx(70) : false) {
      tmp = (Char__toInt_impl_vasixd(curChar) - 65 | 0) + 10 | 0;
    } else {
      $this.k1a("Invalid toHexChar char '" + new Char(curChar) + "' in unicode escape");
    }
    return tmp;
  }
  function JsonReader(source) {
    this.u18_1 = source;
    this.v18_1 = 0;
    this.w18_1 = 12;
    this.x18_1 = 0;
    this.y18_1 = -1;
    this.z18_1 = 0;
    this.a19_1 = charArray(16);
    this.o1a();
  }
  protoOf(JsonReader).b19 = function () {
    return this.w18_1 === 12;
  };
  protoOf(JsonReader).p1a = function () {
    var tmp0_subject = this.w18_1;
    return ((((tmp0_subject === 8 ? true : tmp0_subject === 6) ? true : tmp0_subject === 0) ? true : tmp0_subject === 1) ? true : tmp0_subject === 10) ? true : false;
  };
  protoOf(JsonReader).r1a = function () {
    if (!(this.w18_1 === 0) ? !(this.w18_1 === 1) : false) {
      this.n1a('Expected string or non-null literal', this.x18_1);
    }
    return takeStringInternal$default(this);
  };
  protoOf(JsonReader).t1a = function (isLenient) {
    return (!(this.w18_1 === 1) ? !isLenient ? true : !(this.w18_1 === 0) : false) ? null : takeStringInternal(this, false);
  };
  protoOf(JsonReader).q1a = function () {
    var tmp0_subject = this.w18_1;
    if (tmp0_subject !== 1)
      if (tmp0_subject === 10) {
        this.n1a("Expected string literal but 'null' literal was found.\nUse 'coerceInputValues = true' in 'Json {}` builder to coerce nulls to default values.", this.x18_1);
      } else {
        this.n1a("Expected string literal with quotes.\nUse 'isLenient = true' in 'Json {}` builder to accept non-compliant JSON.", this.x18_1);
      }
    return takeStringInternal$default(this);
  };
  protoOf(JsonReader).u1a = function () {
    if (!(this.w18_1 === 0)) {
      this.n1a("Expected start of the unquoted boolean literal.\nUse 'isLenient = true' in 'Json {}` builder to accept non-compliant JSON.", this.x18_1);
    }
    return takeStringInternal$default(this);
  };
  protoOf(JsonReader).o1a = function () {
    var source = this.u18_1;
    var currentPosition = this.v18_1;
    while (currentPosition < source.length) {
      var ch = charSequenceGet(source, currentPosition);
      var tc = charToTokenClass(ch);
      if (tc === 3) {
        currentPosition = currentPosition + 1 | 0;
      } else if (tc === 0) {
        nextLiteral(this, source, currentPosition);
        return Unit_getInstance();
      } else if (tc === 1) {
        nextString(this, source, currentPosition);
        return Unit_getInstance();
      } else {
        this.x18_1 = currentPosition;
        this.w18_1 = tc;
        this.v18_1 = currentPosition + 1 | 0;
        return Unit_getInstance();
      }
    }
    this.x18_1 = currentPosition;
    this.w18_1 = 12;
  };
  protoOf(JsonReader).v1a = function () {
    if (!(this.w18_1 === 6) ? !(this.w18_1 === 8) : false) {
      this.o1a();
      return Unit_getInstance();
    }
    // Inline function 'kotlin.collections.mutableListOf' call
    var tokenStack = ArrayList_init_$Create$();
    $l$1: do {
      $l$0: do {
        var tmp0_subject = this.w18_1;
        if (tmp0_subject === 8 ? true : tmp0_subject === 6) {
          tokenStack.a(this.w18_1);
        } else if (tmp0_subject === 9) {
          if (!(last(tokenStack) === 8))
            throw JsonDecodingException_0(this.v18_1, 'found ] instead of }', this.u18_1);
          tokenStack.y7(tokenStack.i() - 1 | 0);
        } else if (tmp0_subject === 7) {
          if (!(last(tokenStack) === 6))
            throw JsonDecodingException_0(this.v18_1, 'found } instead of ]', this.u18_1);
          tokenStack.y7(tokenStack.i() - 1 | 0);
        }
        this.o1a();
      }
       while (false);
      var tmp$ret$1;
      // Inline function 'kotlin.collections.isNotEmpty' call
      tmp$ret$1 = !tokenStack.p();
    }
     while (tmp$ret$1);
  };
  protoOf(JsonReader).toString = function () {
    return "JsonReader(source='" + this.u18_1 + "', currentPosition=" + this.v18_1 + ', tokenClass=' + this.w18_1 + ', tokenPosition=' + this.x18_1 + ', offset=' + this.y18_1 + ')';
  };
  protoOf(JsonReader).n1a = function (message, position) {
    throw JsonDecodingException_0(position, message, this.u18_1);
  };
  protoOf(JsonReader).k1a = function (message, position, $super) {
    position = position === VOID ? this.v18_1 : position;
    return $super === VOID ? this.n1a(message, position) : $super.n1a.call(this, message, position);
  };
  function get_COLON() {
    return COLON;
  }
  var COLON;
  function get_INVALID() {
    return INVALID;
  }
  var INVALID;
  function get_COMMA() {
    return COMMA;
  }
  var COMMA;
  function get_NULL() {
    return NULL;
  }
  var NULL;
  function get_BEGIN_OBJ() {
    return BEGIN_OBJ;
  }
  var BEGIN_OBJ;
  function get_END_OBJ() {
    return END_OBJ;
  }
  var END_OBJ;
  function get_BEGIN_LIST() {
    return BEGIN_LIST;
  }
  var BEGIN_LIST;
  function get_END_LIST() {
    return END_LIST;
  }
  var END_LIST;
  function charToTokenClass(c) {
    return Char__toInt_impl_vasixd(c) < 126 ? CharMappings_getInstance().x1a_1[Char__toInt_impl_vasixd(c)] : 0;
  }
  function get_TC_BEGIN_LIST() {
    return TC_BEGIN_LIST;
  }
  var TC_BEGIN_LIST;
  function get_TC_BEGIN_OBJ() {
    return TC_BEGIN_OBJ;
  }
  var TC_BEGIN_OBJ;
  function get_TC_OTHER() {
    return TC_OTHER;
  }
  var TC_OTHER;
  function get_TC_STRING() {
    return TC_STRING;
  }
  var TC_STRING;
  function get_TC_NULL() {
    return TC_NULL;
  }
  var TC_NULL;
  function get_lenientHint() {
    return lenientHint;
  }
  var lenientHint;
  function rangeEquals(source, start, length, str) {
    var n = str.length;
    if (!(length === n))
      return false;
    var inductionVariable = 0;
    if (inductionVariable < n)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!(charSequenceGet(source, start + i | 0) === charSequenceGet(str, i)))
          return false;
      }
       while (inductionVariable < n);
    return true;
  }
  function get_STRING() {
    return STRING;
  }
  var STRING;
  function escapeToChar(c) {
    return c < 117 ? CharMappings_getInstance().w1a_1[c] : _Char___init__impl__6a9atx(0);
  }
  function get_TC_END_LIST() {
    return TC_END_LIST;
  }
  var TC_END_LIST;
  function get_TC_END_OBJ() {
    return TC_END_OBJ;
  }
  var TC_END_OBJ;
  function initEscape($this) {
    var inductionVariable = 0;
    if (inductionVariable <= 31)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        initC2ESC($this, i, _Char___init__impl__6a9atx(117));
      }
       while (inductionVariable <= 31);
    initC2ESC($this, 8, _Char___init__impl__6a9atx(98));
    initC2ESC($this, 9, _Char___init__impl__6a9atx(116));
    initC2ESC($this, 10, _Char___init__impl__6a9atx(110));
    initC2ESC($this, 12, _Char___init__impl__6a9atx(102));
    initC2ESC($this, 13, _Char___init__impl__6a9atx(114));
    initC2ESC_0($this, _Char___init__impl__6a9atx(47), _Char___init__impl__6a9atx(47));
    initC2ESC_0($this, _Char___init__impl__6a9atx(34), _Char___init__impl__6a9atx(34));
    initC2ESC_0($this, _Char___init__impl__6a9atx(92), _Char___init__impl__6a9atx(92));
  }
  function initCharToToken($this) {
    var inductionVariable = 0;
    if (inductionVariable <= 32)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        initC2TC($this, i, 11);
      }
       while (inductionVariable <= 32);
    initC2TC($this, 9, 3);
    initC2TC($this, 10, 3);
    initC2TC($this, 13, 3);
    initC2TC($this, 32, 3);
    initC2TC_0($this, _Char___init__impl__6a9atx(44), 4);
    initC2TC_0($this, _Char___init__impl__6a9atx(58), 5);
    initC2TC_0($this, _Char___init__impl__6a9atx(123), 6);
    initC2TC_0($this, _Char___init__impl__6a9atx(125), 7);
    initC2TC_0($this, _Char___init__impl__6a9atx(91), 8);
    initC2TC_0($this, _Char___init__impl__6a9atx(93), 9);
    initC2TC_0($this, _Char___init__impl__6a9atx(34), 1);
    initC2TC_0($this, _Char___init__impl__6a9atx(92), 2);
  }
  function initC2ESC($this, c, esc) {
    if (!(esc === _Char___init__impl__6a9atx(117))) {
      $this.w1a_1[Char__toInt_impl_vasixd(esc)] = numberToChar(c);
    }
  }
  function initC2ESC_0($this, c, esc) {
    return initC2ESC($this, Char__toInt_impl_vasixd(c), esc);
  }
  function initC2TC($this, c, cl) {
    $this.x1a_1[c] = cl;
  }
  function initC2TC_0($this, c, cl) {
    return initC2TC($this, Char__toInt_impl_vasixd(c), cl);
  }
  function CharMappings() {
    CharMappings_instance = this;
    this.w1a_1 = charArray(117);
    this.x1a_1 = new Int8Array(126);
    initEscape(this);
    initCharToToken(this);
  }
  var CharMappings_instance;
  function CharMappings_getInstance() {
    if (CharMappings_instance == null)
      new CharMappings();
    return CharMappings_instance;
  }
  function get_TC_COMMA() {
    return TC_COMMA;
  }
  var TC_COMMA;
  function get_TC_COLON() {
    return TC_COLON;
  }
  var TC_COLON;
  function get_ignoreUnknownKeysHint() {
    return ignoreUnknownKeysHint;
  }
  var ignoreUnknownKeysHint;
  function get_specialFlowingValuesHint() {
    return specialFlowingValuesHint;
  }
  var specialFlowingValuesHint;
  function get_allowStructuredMapKeysHint() {
    return allowStructuredMapKeysHint;
  }
  var allowStructuredMapKeysHint;
  function decodeSerializableValuePolymorphic(_this__u8e3s4, deserializer) {
    var tmp;
    if (!(deserializer instanceof AbstractPolymorphicSerializer)) {
      tmp = true;
    } else {
      tmp = _this__u8e3s4.c19().r17_1.c18_1;
    }
    if (tmp) {
      return deserializer.cs(_this__u8e3s4);
    }
    // Inline function 'kotlinx.serialization.json.internal.cast' call
    var tmp0_cast = _this__u8e3s4.d19();
    var tmp1_cast = deserializer.as();
    if (!(tmp0_cast instanceof JsonObject)) {
      throw JsonDecodingException_1(-1, 'Expected ' + getKClass(JsonObject) + ' as the serialized body of ' + tmp1_cast.hs() + ', but had ' + getKClassFromExpression(tmp0_cast));
    }
    var jsonTree = tmp0_cast;
    var discriminator = _this__u8e3s4.c19().r17_1.d18_1;
    var tmp0_safe_receiver = jsonTree.k19(discriminator);
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : get_jsonPrimitive(tmp0_safe_receiver);
    var type = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.m19();
    var tmp2_elvis_lhs = deserializer.wv(_this__u8e3s4, type);
    var tmp_0;
    if (tmp2_elvis_lhs == null) {
      throwSerializerNotFound(type, jsonTree);
    } else {
      tmp_0 = tmp2_elvis_lhs;
    }
    var actualSerializer = tmp_0;
    var tmp_1 = _this__u8e3s4.c19();
    return readPolymorphicJson(tmp_1, discriminator, jsonTree, isInterface(actualSerializer, DeserializationStrategy) ? actualSerializer : THROW_CCE());
  }
  function findActualSerializer(_this__u8e3s4, serializer, value) {
    var casted = serializer instanceof AbstractPolymorphicSerializer ? serializer : THROW_CCE();
    var actualSerializer = findPolymorphicSerializer(casted, _this__u8e3s4, isObject(value) ? value : THROW_CCE());
    validateIfSealed(casted, actualSerializer, _this__u8e3s4.c19().r17_1.d18_1);
    var kind = actualSerializer.as().is();
    checkKind(kind);
    return actualSerializer;
  }
  function throwSerializerNotFound(type, jsonTree) {
    var suffix = type == null ? "missing class discriminator ('null')" : "class discriminator '" + type + "'";
    throw JsonDecodingException_0(-1, 'Polymorphic serializer was not found for ' + suffix, jsonTree.toString());
  }
  function validateIfSealed(serializer, actualSerializer, classDiscriminator) {
    if (!(serializer instanceof SealedClassSerializer))
      return Unit_getInstance();
    if (jsonCachedSerialNames(actualSerializer.as()).g1(classDiscriminator)) {
      var baseName = serializer.as().hs();
      var actualName = actualSerializer.as().hs();
      // Inline function 'kotlin.error' call
      var tmp0_error = "Sealed class '" + actualName + "' cannot be serialized as base class '" + baseName + "' because" + (" it has property name that conflicts with JSON class discriminator '" + classDiscriminator + "'. ") + 'You can either change class discriminator in JsonConfiguration, ' + 'rename property with @SerialName annotation or fall back to array polymorphism';
      throw IllegalStateException_init_$Create$(toString(tmp0_error));
    }
  }
  function checkKind(kind) {
    if (kind instanceof ENUM) {
      // Inline function 'kotlin.error' call
      throw IllegalStateException_init_$Create$("Enums cannot be serialized polymorphically with 'type' parameter. You can use 'JsonBuilder.useArrayPolymorphism' instead");
    }
    if (kind instanceof PrimitiveKind) {
      // Inline function 'kotlin.error' call
      throw IllegalStateException_init_$Create$("Primitives cannot be serialized polymorphically with 'type' parameter. You can use 'JsonBuilder.useArrayPolymorphism' instead");
    }
    if (kind instanceof PolymorphicKind) {
      // Inline function 'kotlin.error' call
      throw IllegalStateException_init_$Create$('Actual serializer for polymorphic cannot be polymorphic itself');
    }
  }
  function findActualSerializer$accessor$1ad0flx(_this__u8e3s4, serializer, value) {
    return findActualSerializer(_this__u8e3s4, serializer, value);
  }
  function decodeMapIndex($this, tokenClass) {
    if (!(tokenClass === get_TC_COMMA()) ? ($this.s18_1 % 2 | 0) === 1 : false) {
      // Inline function 'kotlinx.serialization.json.internal.JsonReader.requireTokenClass' call
      var tmp0_requireTokenClass = $this.q18_1;
      var tmp1_requireTokenClass = get_TC_END_OBJ();
      if (!(tmp0_requireTokenClass.w18_1 === tmp1_requireTokenClass)) {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeMapIndex.<anonymous>' call
        numberToChar(tmp0_requireTokenClass.w18_1);
        tmp$ret$0 = 'Expected end of the object or comma';
        tmp0_requireTokenClass.n1a(tmp$ret$0, tmp0_requireTokenClass.x18_1);
      }
    }
    if (($this.s18_1 % 2 | 0) === 0) {
      // Inline function 'kotlinx.serialization.json.internal.JsonReader.requireTokenClass' call
      var tmp3_requireTokenClass = $this.q18_1;
      var tmp4_requireTokenClass = get_TC_COLON();
      if (!(tmp3_requireTokenClass.w18_1 === tmp4_requireTokenClass)) {
        var tmp$ret$1;
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeMapIndex.<anonymous>' call
        numberToChar(tmp3_requireTokenClass.w18_1);
        tmp$ret$1 = "Expected ':' after the key";
        tmp3_requireTokenClass.n1a(tmp$ret$1, tmp3_requireTokenClass.x18_1);
      }
      $this.q18_1.o1a();
    }
    var tmp;
    if (!$this.q18_1.p1a()) {
      // Inline function 'kotlinx.serialization.json.internal.JsonReader.require' call
      var tmp6_require = $this.q18_1;
      var tmp7_require = !(tokenClass === get_TC_COMMA());
      var tmp8_require = tmp6_require.v18_1;
      if (!tmp7_require) {
        var tmp$ret$2;
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeMapIndex.<anonymous>' call
        tmp$ret$2 = 'Unexpected trailing comma';
        tmp6_require.n1a(tmp$ret$2, tmp8_require);
      }
      Companion_getInstance_0();
      tmp = -1;
    } else {
      $this.s18_1 = $this.s18_1 + 1 | 0;
      tmp = $this.s18_1;
    }
    return tmp;
  }
  function coerceInputValue($this, descriptor, index) {
    var elementDescriptor = descriptor.ns(index);
    if ($this.q18_1.w18_1 === get_TC_NULL() ? !elementDescriptor.gs() : false)
      return true;
    if (equals(elementDescriptor.is(), ENUM_getInstance())) {
      var tmp0_elvis_lhs = $this.q18_1.t1a($this.t18_1.x17_1);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return false;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var enumValue = tmp;
      var enumIndex = elementDescriptor.ms(enumValue);
      Companion_getInstance_0();
      if (enumIndex === -3)
        return true;
    }
    return false;
  }
  function decodeObjectIndex($this, tokenClass, descriptor) {
    if (tokenClass === get_TC_COMMA() ? !$this.q18_1.p1a() : false) {
      $this.q18_1.k1a('Unexpected trailing comma');
    }
    while ($this.q18_1.p1a()) {
      $this.s18_1 = $this.s18_1 + 1 | 0;
      var key = $this.zt();
      // Inline function 'kotlinx.serialization.json.internal.JsonReader.requireTokenClass' call
      var tmp0_requireTokenClass = $this.q18_1;
      var tmp1_requireTokenClass = get_TC_COLON();
      if (!(tmp0_requireTokenClass.w18_1 === tmp1_requireTokenClass)) {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeObjectIndex.<anonymous>' call
        numberToChar(tmp0_requireTokenClass.w18_1);
        tmp$ret$0 = "Expected ':'";
        tmp0_requireTokenClass.n1a(tmp$ret$0, tmp0_requireTokenClass.x18_1);
      }
      $this.q18_1.o1a();
      var index = descriptor.ms(key);
      var tmp;
      Companion_getInstance_0();
      if (!(index === -3)) {
        var tmp_0;
        if ($this.t18_1.b18_1 ? coerceInputValue($this, descriptor, index) : false) {
          tmp_0 = false;
        } else {
          return index;
        }
        tmp = tmp_0;
      } else {
        tmp = true;
      }
      var isUnknown = tmp;
      if (isUnknown ? !$this.t18_1.w17_1 : false) {
        $this.q18_1.k1a("Encountered an unknown key '" + key + "'.\n" + get_ignoreUnknownKeysHint());
      } else {
        $this.q18_1.v1a();
      }
      if ($this.q18_1.w18_1 === get_TC_COMMA()) {
        $this.q18_1.o1a();
        // Inline function 'kotlinx.serialization.json.internal.JsonReader.require' call
        var tmp3_require = $this.q18_1;
        var tmp4_require = $this.q18_1.p1a();
        var tmp5_require = $this.q18_1.v18_1;
        if (!tmp4_require) {
          var tmp$ret$1;
          // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeObjectIndex.<anonymous>' call
          tmp$ret$1 = 'Unexpected trailing comma';
          tmp3_require.n1a(tmp$ret$1, tmp5_require);
        }
      }
    }
    Companion_getInstance_0();
    return -1;
  }
  function decodeListIndex($this, tokenClass) {
    if (!(tokenClass === get_TC_COMMA()) ? !($this.s18_1 === -1) : false) {
      // Inline function 'kotlinx.serialization.json.internal.JsonReader.requireTokenClass' call
      var tmp0_requireTokenClass = $this.q18_1;
      var tmp1_requireTokenClass = get_TC_END_LIST();
      if (!(tmp0_requireTokenClass.w18_1 === tmp1_requireTokenClass)) {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeListIndex.<anonymous>' call
        numberToChar(tmp0_requireTokenClass.w18_1);
        tmp$ret$0 = 'Expected end of the array or comma';
        tmp0_requireTokenClass.n1a(tmp$ret$0, tmp0_requireTokenClass.x18_1);
      }
    }
    var tmp;
    if (!$this.q18_1.p1a()) {
      // Inline function 'kotlinx.serialization.json.internal.JsonReader.require' call
      var tmp3_require = $this.q18_1;
      var tmp4_require = !(tokenClass === get_TC_COMMA());
      var tmp5_require = tmp3_require.v18_1;
      if (!tmp4_require) {
        var tmp$ret$1;
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeListIndex.<anonymous>' call
        tmp$ret$1 = 'Unexpected trailing comma';
        tmp3_require.n1a(tmp$ret$1, tmp5_require);
      }
      Companion_getInstance_0();
      tmp = -1;
    } else {
      $this.s18_1 = $this.s18_1 + 1 | 0;
      tmp = $this.s18_1;
    }
    return tmp;
  }
  function StreamingJsonDecoder(json, mode, reader) {
    AbstractDecoder.call(this);
    this.o18_1 = json;
    this.p18_1 = mode;
    this.q18_1 = reader;
    this.r18_1 = this.c19().qu();
    this.s18_1 = -1;
    this.t18_1 = this.c19().r17_1;
  }
  protoOf(StreamingJsonDecoder).c19 = function () {
    return this.o18_1;
  };
  protoOf(StreamingJsonDecoder).qu = function () {
    return this.r18_1;
  };
  protoOf(StreamingJsonDecoder).d19 = function () {
    return (new JsonParser(this.c19().r17_1, this.q18_1)).s1a();
  };
  protoOf(StreamingJsonDecoder).cu = function (deserializer) {
    return decodeSerializableValuePolymorphic(this, deserializer);
  };
  protoOf(StreamingJsonDecoder).du = function (descriptor) {
    var newMode = switchMode(this.c19(), descriptor);
    if (!(newMode.a1b_1 === get_INVALID())) {
      // Inline function 'kotlinx.serialization.json.internal.JsonReader.requireTokenClass' call
      var tmp0_requireTokenClass = this.q18_1;
      var tmp1_requireTokenClass = newMode.c1b_1;
      if (!(tmp0_requireTokenClass.w18_1 === tmp1_requireTokenClass)) {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.beginStructure.<anonymous>' call
        numberToChar(tmp0_requireTokenClass.w18_1);
        tmp$ret$0 = "Expected '" + new Char(newMode.a1b_1) + ', kind: ' + descriptor.is() + "'";
        tmp0_requireTokenClass.n1a(tmp$ret$0, tmp0_requireTokenClass.x18_1);
      }
      this.q18_1.o1a();
    }
    switch (newMode.m1_1) {
      case 1:
      case 2:
      case 3:
        return new StreamingJsonDecoder(this.c19(), newMode, this.q18_1);
      default:
        return this.p18_1.equals(newMode) ? this : new StreamingJsonDecoder(this.c19(), newMode, this.q18_1);
    }
  };
  protoOf(StreamingJsonDecoder).eu = function (descriptor) {
    if (!(this.p18_1.b1b_1 === get_INVALID())) {
      // Inline function 'kotlinx.serialization.json.internal.JsonReader.requireTokenClass' call
      var tmp0_requireTokenClass = this.q18_1;
      var tmp1_requireTokenClass = this.p18_1.d1b_1;
      if (!(tmp0_requireTokenClass.w18_1 === tmp1_requireTokenClass)) {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.endStructure.<anonymous>' call
        numberToChar(tmp0_requireTokenClass.w18_1);
        tmp$ret$0 = "Expected '" + new Char(this.p18_1.b1b_1) + "'";
        tmp0_requireTokenClass.n1a(tmp$ret$0, tmp0_requireTokenClass.x18_1);
      }
      this.q18_1.o1a();
    }
  };
  protoOf(StreamingJsonDecoder).pt = function () {
    return !(this.q18_1.w18_1 === get_TC_NULL());
  };
  protoOf(StreamingJsonDecoder).qt = function () {
    // Inline function 'kotlinx.serialization.json.internal.JsonReader.requireTokenClass' call
    var tmp0_requireTokenClass = this.q18_1;
    var tmp1_requireTokenClass = get_TC_NULL();
    if (!(tmp0_requireTokenClass.w18_1 === tmp1_requireTokenClass)) {
      var tmp$ret$0;
      // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeNull.<anonymous>' call
      numberToChar(tmp0_requireTokenClass.w18_1);
      tmp$ret$0 = "Expected 'null' literal";
      tmp0_requireTokenClass.n1a(tmp$ret$0, tmp0_requireTokenClass.x18_1);
    }
    this.q18_1.o1a();
    return null;
  };
  protoOf(StreamingJsonDecoder).su = function (descriptor) {
    var tokenClass = this.q18_1.w18_1;
    if (tokenClass === get_TC_COMMA()) {
      // Inline function 'kotlinx.serialization.json.internal.JsonReader.require' call
      var tmp0_require = this.q18_1;
      var tmp1_require = !(this.s18_1 === -1);
      var tmp2_require = this.q18_1.v18_1;
      if (!tmp1_require) {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeElementIndex.<anonymous>' call
        tmp$ret$0 = 'Unexpected leading comma';
        tmp0_require.n1a(tmp$ret$0, tmp2_require);
      }
      this.q18_1.o1a();
    }
    var tmp;
    switch (this.p18_1.m1_1) {
      case 1:
        tmp = decodeListIndex(this, tokenClass);
        break;
      case 2:
        tmp = decodeMapIndex(this, tokenClass);
        break;
      case 3:
        this.s18_1 = this.s18_1 + 1 | 0;
        var tmp_0;
        switch (this.s18_1) {
          case 0:
            tmp_0 = 0;
            break;
          case 1:
            tmp_0 = 1;
            break;
          default:
            Companion_getInstance_0();
            tmp_0 = -1;
            break;
        }

        tmp = tmp_0;
        break;
      default:
        tmp = decodeObjectIndex(this, tokenClass, descriptor);
        break;
    }
    return tmp;
  };
  protoOf(StreamingJsonDecoder).rt = function () {
    var tmp;
    if (this.t18_1.x17_1) {
      tmp = this.q18_1.r1a();
    } else {
      tmp = this.q18_1.u1a();
    }
    var string = tmp;
    var tmp0_safe_receiver = toBooleanStrictOrNull(string);
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return tmp0_safe_receiver;
    }
    this.q18_1.k1a("Failed to parse type 'boolean' for input '" + string + "'");
  };
  protoOf(StreamingJsonDecoder).st = function () {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var tmp0_parseString = this.q18_1;
      var input = tmp0_parseString.r1a();
      try {
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeByte.<anonymous>' call
        tmp$ret$1 = toByte(input);
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          tmp0_parseString.k1a("Failed to parse type 'byte' for input '" + input + "'");
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  protoOf(StreamingJsonDecoder).tt = function () {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var tmp0_parseString = this.q18_1;
      var input = tmp0_parseString.r1a();
      try {
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeShort.<anonymous>' call
        tmp$ret$1 = toShort(input);
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          tmp0_parseString.k1a("Failed to parse type 'short' for input '" + input + "'");
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  protoOf(StreamingJsonDecoder).ut = function () {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var tmp0_parseString = this.q18_1;
      var input = tmp0_parseString.r1a();
      try {
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeInt.<anonymous>' call
        tmp$ret$1 = toInt(input);
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          tmp0_parseString.k1a("Failed to parse type 'int' for input '" + input + "'");
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  protoOf(StreamingJsonDecoder).vt = function () {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var tmp0_parseString = this.q18_1;
      var input = tmp0_parseString.r1a();
      try {
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeLong.<anonymous>' call
        tmp$ret$1 = toLong(input);
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          tmp0_parseString.k1a("Failed to parse type 'long' for input '" + input + "'");
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  protoOf(StreamingJsonDecoder).wt = function () {
    var tmp$ret$4;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var tmp0_parseString = this.q18_1;
      var input = tmp0_parseString.r1a();
      try {
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeFloat.<anonymous>' call
        // Inline function 'kotlin.text.toFloat' call
        // Inline function 'kotlin.js.unsafeCast' call
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$4 = toDouble(input);
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          tmp0_parseString.k1a("Failed to parse type 'float' for input '" + input + "'");
        } else {
          throw $p;
        }
      }
    }
    var result = tmp$ret$4;
    var specialFp = this.c19().r17_1.e18_1;
    if (specialFp ? true : isFinite(result))
      return result;
    throwInvalidFloatingPointDecoded(this.q18_1, result);
  };
  protoOf(StreamingJsonDecoder).xt = function () {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var tmp0_parseString = this.q18_1;
      var input = tmp0_parseString.r1a();
      try {
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeDouble.<anonymous>' call
        tmp$ret$1 = toDouble(input);
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          tmp0_parseString.k1a("Failed to parse type 'double' for input '" + input + "'");
        } else {
          throw $p;
        }
      }
    }
    var result = tmp$ret$1;
    var specialFp = this.c19().r17_1.e18_1;
    if (specialFp ? true : isFinite_0(result))
      return result;
    throwInvalidFloatingPointDecoded(this.q18_1, result);
  };
  protoOf(StreamingJsonDecoder).yt = function () {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var tmp0_parseString = this.q18_1;
      var input = tmp0_parseString.r1a();
      try {
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeChar.<anonymous>' call
        tmp$ret$1 = single(input);
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          tmp0_parseString.k1a("Failed to parse type 'char' for input '" + input + "'");
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  protoOf(StreamingJsonDecoder).zt = function () {
    var tmp;
    if (this.t18_1.x17_1) {
      tmp = this.q18_1.r1a();
    } else {
      tmp = this.q18_1.q1a();
    }
    return tmp;
  };
  protoOf(StreamingJsonDecoder).au = function (inlineDescriptor) {
    return get_isUnsignedNumber(inlineDescriptor) ? new JsonDecoderForUnsignedTypes(this.q18_1, this.c19()) : this;
  };
  function JsonDecoderForUnsignedTypes(reader, json) {
    AbstractDecoder.call(this);
    this.e1b_1 = reader;
    this.f1b_1 = json.qu();
  }
  protoOf(JsonDecoderForUnsignedTypes).qu = function () {
    return this.f1b_1;
  };
  protoOf(JsonDecoderForUnsignedTypes).su = function (descriptor) {
    // Inline function 'kotlin.error' call
    throw IllegalStateException_init_$Create$('unsupported');
  };
  protoOf(JsonDecoderForUnsignedTypes).ut = function () {
    var tmp$ret$2;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var tmp0_parseString = this.e1b_1;
      var input = tmp0_parseString.r1a();
      try {
        // Inline function 'kotlinx.serialization.json.internal.JsonDecoderForUnsignedTypes.decodeInt.<anonymous>' call
        // Inline function 'kotlin.UInt.toInt' call
        var tmp0_toInt = toUInt(input);
        tmp$ret$2 = _UInt___get_data__impl__f0vqqw(tmp0_toInt);
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          tmp0_parseString.k1a("Failed to parse type 'UInt' for input '" + input + "'");
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$2;
  };
  protoOf(JsonDecoderForUnsignedTypes).vt = function () {
    var tmp$ret$2;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var tmp0_parseString = this.e1b_1;
      var input = tmp0_parseString.r1a();
      try {
        // Inline function 'kotlinx.serialization.json.internal.JsonDecoderForUnsignedTypes.decodeLong.<anonymous>' call
        // Inline function 'kotlin.ULong.toLong' call
        var tmp0_toLong = toULong(input);
        tmp$ret$2 = _ULong___get_data__impl__fggpzb(tmp0_toLong);
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          tmp0_parseString.k1a("Failed to parse type 'ULong' for input '" + input + "'");
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$2;
  };
  protoOf(JsonDecoderForUnsignedTypes).st = function () {
    var tmp$ret$2;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var tmp0_parseString = this.e1b_1;
      var input = tmp0_parseString.r1a();
      try {
        // Inline function 'kotlinx.serialization.json.internal.JsonDecoderForUnsignedTypes.decodeByte.<anonymous>' call
        // Inline function 'kotlin.UByte.toByte' call
        var tmp0_toByte = toUByte(input);
        tmp$ret$2 = _UByte___get_data__impl__jof9qr(tmp0_toByte);
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          tmp0_parseString.k1a("Failed to parse type 'UByte' for input '" + input + "'");
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$2;
  };
  protoOf(JsonDecoderForUnsignedTypes).tt = function () {
    var tmp$ret$2;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var tmp0_parseString = this.e1b_1;
      var input = tmp0_parseString.r1a();
      try {
        // Inline function 'kotlinx.serialization.json.internal.JsonDecoderForUnsignedTypes.decodeShort.<anonymous>' call
        // Inline function 'kotlin.UShort.toShort' call
        var tmp0_toShort = toUShort(input);
        tmp$ret$2 = _UShort___get_data__impl__g0245(tmp0_toShort);
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          tmp0_parseString.k1a("Failed to parse type 'UShort' for input '" + input + "'");
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$2;
  };
  function get_unsignedNumberDescriptors() {
    _init_properties_StreamingJsonEncoder_kt__pn1bsi();
    return unsignedNumberDescriptors;
  }
  var unsignedNumberDescriptors;
  function StreamingJsonEncoder_init_$Init$(output, json, mode, modeReuseCache, $this) {
    StreamingJsonEncoder.call($this, new Composer(output, json), json, mode, modeReuseCache);
    return $this;
  }
  function StreamingJsonEncoder_init_$Create$(output, json, mode, modeReuseCache) {
    return StreamingJsonEncoder_init_$Init$(output, json, mode, modeReuseCache, objectCreate(protoOf(StreamingJsonEncoder)));
  }
  function encodeTypeInfo($this, descriptor) {
    $this.g18_1.k1b();
    $this.fv($this.l18_1.d18_1);
    $this.g18_1.l1b(get_COLON());
    $this.g18_1.m1b();
    $this.fv(descriptor.hs());
  }
  function Composer(sb, json) {
    this.g1b_1 = sb;
    this.h1b_1 = json;
    this.i1b_1 = 0;
    this.j1b_1 = true;
  }
  protoOf(Composer).n1b = function () {
    this.j1b_1 = true;
    this.i1b_1 = this.i1b_1 + 1 | 0;
  };
  protoOf(Composer).o1b = function () {
    this.i1b_1 = this.i1b_1 - 1 | 0;
  };
  protoOf(Composer).k1b = function () {
    this.j1b_1 = false;
    if (this.h1b_1.r17_1.z17_1) {
      this.p1b('\n');
      // Inline function 'kotlin.repeat' call
      var tmp0_repeat = this.i1b_1;
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      if (inductionVariable < tmp0_repeat)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'kotlinx.serialization.json.internal.Composer.nextItem.<anonymous>' call
          this.p1b(this.h1b_1.r17_1.a18_1);
        }
         while (inductionVariable < tmp0_repeat);
    }
  };
  protoOf(Composer).m1b = function () {
    if (this.h1b_1.r17_1.z17_1) {
      this.l1b(_Char___init__impl__6a9atx(32));
    }
  };
  protoOf(Composer).l1b = function (v) {
    return this.g1b_1.q4(v);
  };
  protoOf(Composer).p1b = function (v) {
    return this.g1b_1.wc(v);
  };
  protoOf(Composer).q1b = function (v) {
    return this.g1b_1.uc(v);
  };
  protoOf(Composer).r1b = function (v) {
    return this.g1b_1.uc(v);
  };
  protoOf(Composer).s1b = function (v) {
    return this.g1b_1.uc(v);
  };
  protoOf(Composer).t1b = function (v) {
    return this.g1b_1.uc(v);
  };
  protoOf(Composer).u1b = function (v) {
    return this.g1b_1.uc(v);
  };
  protoOf(Composer).v1b = function (v) {
    return this.g1b_1.uc(v);
  };
  protoOf(Composer).w1b = function (v) {
    return this.g1b_1.vc(v);
  };
  protoOf(Composer).x1b = function (value) {
    return printQuoted(this.g1b_1, value);
  };
  function ComposerForUnsignedNumbers(sb, json) {
    Composer.call(this, sb, json);
  }
  protoOf(ComposerForUnsignedNumbers).u1b = function (v) {
    var tmp$ret$0;
    // Inline function 'kotlin.toUInt' call
    tmp$ret$0 = _UInt___init__impl__l7qpdl(v);
    return protoOf(Composer).p1b.call(this, UInt__toString_impl_dbgl21(tmp$ret$0));
  };
  protoOf(ComposerForUnsignedNumbers).v1b = function (v) {
    var tmp$ret$0;
    // Inline function 'kotlin.toULong' call
    tmp$ret$0 = _ULong___init__impl__c78o9k(v);
    return protoOf(Composer).p1b.call(this, ULong__toString_impl_f9au7k(tmp$ret$0));
  };
  protoOf(ComposerForUnsignedNumbers).s1b = function (v) {
    var tmp$ret$0;
    // Inline function 'kotlin.toUByte' call
    tmp$ret$0 = _UByte___init__impl__g9hnc4(v);
    return protoOf(Composer).p1b.call(this, UByte__toString_impl_v72jg(tmp$ret$0));
  };
  protoOf(ComposerForUnsignedNumbers).t1b = function (v) {
    var tmp$ret$0;
    // Inline function 'kotlin.toUShort' call
    tmp$ret$0 = _UShort___init__impl__jigrne(v);
    return protoOf(Composer).p1b.call(this, UShort__toString_impl_edaoee(tmp$ret$0));
  };
  function StreamingJsonEncoder(composer, json, mode, modeReuseCache) {
    AbstractEncoder.call(this);
    this.g18_1 = composer;
    this.h18_1 = json;
    this.i18_1 = mode;
    this.j18_1 = modeReuseCache;
    this.k18_1 = this.h18_1.qu();
    this.l18_1 = this.h18_1.r17_1;
    this.m18_1 = false;
    this.n18_1 = false;
    var i = this.i18_1.m1_1;
    if (!(this.j18_1 == null)) {
      if (!(this.j18_1[i] === null) ? true : !(this.j18_1[i] === this)) {
        this.j18_1[i] = this;
      }
    }
  }
  protoOf(StreamingJsonEncoder).c19 = function () {
    return this.h18_1;
  };
  protoOf(StreamingJsonEncoder).qu = function () {
    return this.k18_1;
  };
  protoOf(StreamingJsonEncoder).g1a = function (element) {
    this.rv(JsonElementSerializer_getInstance(), element);
  };
  protoOf(StreamingJsonEncoder).rv = function (serializer, value) {
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.encodePolymorphically' call
      var tmp;
      if (!(serializer instanceof AbstractPolymorphicSerializer)) {
        tmp = true;
      } else {
        tmp = this.c19().r17_1.c18_1;
      }
      if (tmp) {
        serializer.bs(this, value);
        break $l$block;
      }
      var tmp_0 = isInterface(serializer, SerializationStrategy) ? serializer : THROW_CCE();
      var actualSerializer = findActualSerializer$accessor$1ad0flx(this, tmp_0, isObject(value) ? value : THROW_CCE());
      // Inline function 'kotlinx.serialization.json.internal.StreamingJsonEncoder.encodeSerializableValue.<anonymous>' call
      this.n18_1 = true;
      actualSerializer.bs(this, value);
    }
  };
  protoOf(StreamingJsonEncoder).du = function (descriptor) {
    var newMode = switchMode(this.h18_1, descriptor);
    if (!(newMode.a1b_1 === get_INVALID())) {
      this.g18_1.l1b(newMode.a1b_1);
      this.g18_1.n1b();
    }
    if (this.n18_1) {
      this.n18_1 = false;
      encodeTypeInfo(this, descriptor);
    }
    if (this.i18_1.equals(newMode)) {
      return this;
    }
    var tmp0_safe_receiver = this.j18_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver[newMode.m1_1];
    return tmp1_elvis_lhs == null ? new StreamingJsonEncoder(this.g18_1, this.h18_1, newMode, this.j18_1) : tmp1_elvis_lhs;
  };
  protoOf(StreamingJsonEncoder).eu = function (descriptor) {
    if (!(this.i18_1.b1b_1 === get_INVALID())) {
      this.g18_1.o1b();
      this.g18_1.k1b();
      this.g18_1.l1b(this.i18_1.b1b_1);
    }
  };
  protoOf(StreamingJsonEncoder).uu = function (descriptor, index) {
    switch (this.i18_1.m1_1) {
      case 1:
        if (!this.g18_1.j1b_1) {
          this.g18_1.l1b(get_COMMA());
        }

        this.g18_1.k1b();
        break;
      case 2:
        if (!this.g18_1.j1b_1) {
          var tmp = this;
          var tmp_0;
          if ((index % 2 | 0) === 0) {
            this.g18_1.l1b(get_COMMA());
            this.g18_1.k1b();
            tmp_0 = true;
          } else {
            this.g18_1.l1b(get_COLON());
            this.g18_1.m1b();
            tmp_0 = false;
          }
          tmp.m18_1 = tmp_0;
        } else {
          this.m18_1 = true;
          this.g18_1.k1b();
        }

        break;
      case 3:
        if (index === 0)
          this.m18_1 = true;
        if (index === 1) {
          this.g18_1.l1b(get_COMMA());
          this.g18_1.m1b();
          this.m18_1 = false;
        }

        break;
      default:
        if (!this.g18_1.j1b_1) {
          this.g18_1.l1b(get_COMMA());
        }

        this.g18_1.k1b();
        this.fv(descriptor.ls(index));
        this.g18_1.l1b(get_COLON());
        this.g18_1.m1b();
        break;
    }
    return true;
  };
  protoOf(StreamingJsonEncoder).gv = function (inlineDescriptor) {
    return get_isUnsignedNumber(inlineDescriptor) ? new StreamingJsonEncoder(new ComposerForUnsignedNumbers(this.g18_1.g1b_1, this.g18_1.h1b_1), this.h18_1, this.i18_1, null) : this;
  };
  protoOf(StreamingJsonEncoder).wu = function () {
    this.g18_1.p1b(get_NULL());
  };
  protoOf(StreamingJsonEncoder).xu = function (value) {
    if (this.m18_1) {
      this.fv(value.toString());
    } else {
      this.g18_1.w1b(value);
    }
  };
  protoOf(StreamingJsonEncoder).yu = function (value) {
    if (this.m18_1) {
      this.fv(value.toString());
    } else {
      this.g18_1.s1b(value);
    }
  };
  protoOf(StreamingJsonEncoder).zu = function (value) {
    if (this.m18_1) {
      this.fv(value.toString());
    } else {
      this.g18_1.t1b(value);
    }
  };
  protoOf(StreamingJsonEncoder).av = function (value) {
    if (this.m18_1) {
      this.fv(value.toString());
    } else {
      this.g18_1.u1b(value);
    }
  };
  protoOf(StreamingJsonEncoder).bv = function (value) {
    if (this.m18_1) {
      this.fv(value.toString());
    } else {
      this.g18_1.v1b(value);
    }
  };
  protoOf(StreamingJsonEncoder).cv = function (value) {
    if (this.m18_1) {
      this.fv(value.toString());
    } else {
      this.g18_1.q1b(value);
    }
    if (!this.l18_1.e18_1 ? !isFinite(value) : false) {
      throw InvalidFloatingPointEncoded(value, this.g18_1.g1b_1.toString());
    }
  };
  protoOf(StreamingJsonEncoder).dv = function (value) {
    if (this.m18_1) {
      this.fv(value.toString());
    } else {
      this.g18_1.r1b(value);
    }
    if (!this.l18_1.e18_1 ? !isFinite_0(value) : false) {
      throw InvalidFloatingPointEncoded(value, this.g18_1.g1b_1.toString());
    }
  };
  protoOf(StreamingJsonEncoder).ev = function (value) {
    this.fv(toString_0(value));
  };
  protoOf(StreamingJsonEncoder).fv = function (value) {
    return this.g18_1.x1b(value);
  };
  function get_isUnsignedNumber(_this__u8e3s4) {
    _init_properties_StreamingJsonEncoder_kt__pn1bsi();
    return _this__u8e3s4.js() ? get_unsignedNumberDescriptors().g1(_this__u8e3s4) : false;
  }
  var properties_initialized_StreamingJsonEncoder_kt_6ifwwk;
  function _init_properties_StreamingJsonEncoder_kt__pn1bsi() {
    if (!properties_initialized_StreamingJsonEncoder_kt_6ifwwk) {
      properties_initialized_StreamingJsonEncoder_kt_6ifwwk = true;
      unsignedNumberDescriptors = setOf([serializer_2(Companion_getInstance_1()).as(), serializer_1(Companion_getInstance()).as(), serializer_3(Companion_getInstance_2()).as(), serializer_4(Companion_getInstance_3()).as()]);
    }
  }
  function get_ESCAPE_CHARS() {
    _init_properties_StringOps_kt__fcy1db();
    return ESCAPE_CHARS;
  }
  var ESCAPE_CHARS;
  function toHexChar(i) {
    _init_properties_StringOps_kt__fcy1db();
    var d = i & 15;
    return d < 10 ? numberToChar(d + 48 | 0) : numberToChar((d - 10 | 0) + 97 | 0);
  }
  function printQuoted(_this__u8e3s4, value) {
    _init_properties_StringOps_kt__fcy1db();
    _this__u8e3s4.q4(get_STRING());
    var lastPos = 0;
    var length = value.length;
    var inductionVariable = 0;
    if (inductionVariable < length)
      $l$loop_0: do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var c = Char__toInt_impl_vasixd(charSequenceGet(value, i));
        if (c >= get_ESCAPE_CHARS().length)
          continue $l$loop_0;
        var tmp1_elvis_lhs = get_ESCAPE_CHARS()[c];
        var tmp;
        if (tmp1_elvis_lhs == null) {
          continue $l$loop_0;
        } else {
          tmp = tmp1_elvis_lhs;
        }
        var esc = tmp;
        _this__u8e3s4.sc(value, lastPos, i);
        _this__u8e3s4.wc(esc);
        lastPos = i + 1 | 0;
      }
       while (inductionVariable < length);
    _this__u8e3s4.sc(value, lastPos, length);
    _this__u8e3s4.q4(get_STRING());
  }
  function toBooleanStrictOrNull(_this__u8e3s4) {
    _init_properties_StringOps_kt__fcy1db();
    return equals_0(_this__u8e3s4, 'true', true) ? true : equals_0(_this__u8e3s4, 'false', true) ? false : null;
  }
  var properties_initialized_StringOps_kt_wzaea7;
  function _init_properties_StringOps_kt__fcy1db() {
    if (!properties_initialized_StringOps_kt_wzaea7) {
      properties_initialized_StringOps_kt_wzaea7 = true;
      // Inline function 'kotlin.apply' call
      // Inline function 'kotlin.arrayOfNulls' call
      var tmp0_apply = fillArrayVal(Array(128), null);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlinx.serialization.json.internal.ESCAPE_CHARS.<anonymous>' call
      var inductionVariable = 0;
      if (inductionVariable <= 31)
        do {
          var c = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var c1 = toHexChar(c >> 12);
          var c2 = toHexChar(c >> 8);
          var c3 = toHexChar(c >> 4);
          var c4 = toHexChar(c);
          tmp0_apply[c] = '\\u' + new Char(c1) + new Char(c2) + new Char(c3) + new Char(c4);
        }
         while (inductionVariable <= 31);
      tmp0_apply[34] = '\\"';
      tmp0_apply[92] = '\\\\';
      tmp0_apply[9] = '\\t';
      tmp0_apply[8] = '\\b';
      tmp0_apply[10] = '\\n';
      tmp0_apply[13] = '\\r';
      tmp0_apply[12] = '\\f';
      ESCAPE_CHARS = tmp0_apply;
    }
  }
  function readJson(_this__u8e3s4, element, deserializer) {
    var tmp;
    if (element instanceof JsonObject) {
      tmp = new JsonTreeDecoder(_this__u8e3s4, element);
    } else {
      if (element instanceof JsonArray) {
        tmp = new JsonTreeListDecoder(_this__u8e3s4, element);
      } else {
        var tmp_0;
        if (element instanceof JsonLiteral) {
          tmp_0 = true;
        } else {
          tmp_0 = equals(element, JsonNull_getInstance());
        }
        if (tmp_0) {
          tmp = new JsonPrimitiveDecoder(_this__u8e3s4, element instanceof JsonPrimitive ? element : THROW_CCE());
        } else {
          noWhenBranchMatchedException();
        }
      }
    }
    var input = tmp;
    return input.cu(deserializer);
  }
  function currentObject($this) {
    var tmp0_safe_receiver = $this.h15();
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.currentObject.<anonymous>' call
      tmp = $this.h1c(tmp0_safe_receiver);
    }
    var tmp1_elvis_lhs = tmp;
    return tmp1_elvis_lhs == null ? $this.w() : tmp1_elvis_lhs;
  }
  function unparsedPrimitive($this, primitive) {
    throw JsonDecodingException_0(-1, "Failed to parse '" + primitive + "'", toString(currentObject($this)));
  }
  function AbstractJsonTreeDecoder(json, value) {
    NamedValueDecoder.call(this);
    this.e1c_1 = json;
    this.f1c_1 = value;
    this.g1c_1 = this.c19().r17_1;
  }
  protoOf(AbstractJsonTreeDecoder).c19 = function () {
    return this.e1c_1;
  };
  protoOf(AbstractJsonTreeDecoder).w = function () {
    return this.f1c_1;
  };
  protoOf(AbstractJsonTreeDecoder).qu = function () {
    return this.c19().qu();
  };
  protoOf(AbstractJsonTreeDecoder).d19 = function () {
    return currentObject(this);
  };
  protoOf(AbstractJsonTreeDecoder).cu = function (deserializer) {
    return decodeSerializableValuePolymorphic(this, deserializer);
  };
  protoOf(AbstractJsonTreeDecoder).i15 = function (parentName, childName) {
    return childName;
  };
  protoOf(AbstractJsonTreeDecoder).du = function (descriptor) {
    var currentObject_0 = currentObject(this);
    var tmp0_subject = descriptor.is();
    var tmp;
    var tmp_0;
    if (equals(tmp0_subject, LIST_getInstance())) {
      tmp_0 = true;
    } else {
      tmp_0 = tmp0_subject instanceof PolymorphicKind;
    }
    if (tmp_0) {
      var tmp_1 = this.c19();
      // Inline function 'kotlinx.serialization.json.internal.cast' call
      if (!(currentObject_0 instanceof JsonArray)) {
        throw JsonDecodingException_1(-1, 'Expected ' + getKClass(JsonArray) + ' as the serialized body of ' + descriptor.hs() + ', but had ' + getKClassFromExpression(currentObject_0));
      }
      tmp = new JsonTreeListDecoder(tmp_1, currentObject_0);
    } else {
      if (equals(tmp0_subject, MAP_getInstance())) {
        // Inline function 'kotlinx.serialization.json.internal.selectMapMode' call
        var tmp0_selectMapMode = this.c19();
        var keyDescriptor = descriptor.ns(0);
        var keyKind = keyDescriptor.is();
        var tmp_2;
        var tmp_3;
        if (keyKind instanceof PrimitiveKind) {
          tmp_3 = true;
        } else {
          tmp_3 = equals(keyKind, ENUM_getInstance());
        }
        if (tmp_3) {
          // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.beginStructure.<anonymous>' call
          var tmp_4 = this.c19();
          // Inline function 'kotlinx.serialization.json.internal.cast' call
          if (!(currentObject_0 instanceof JsonObject)) {
            throw JsonDecodingException_1(-1, 'Expected ' + getKClass(JsonObject) + ' as the serialized body of ' + descriptor.hs() + ', but had ' + getKClassFromExpression(currentObject_0));
          }
          tmp_2 = new JsonTreeMapDecoder(tmp_4, currentObject_0);
        } else {
          if (tmp0_selectMapMode.r17_1.y17_1) {
            // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.beginStructure.<anonymous>' call
            var tmp_5 = this.c19();
            // Inline function 'kotlinx.serialization.json.internal.cast' call
            if (!(currentObject_0 instanceof JsonArray)) {
              throw JsonDecodingException_1(-1, 'Expected ' + getKClass(JsonArray) + ' as the serialized body of ' + descriptor.hs() + ', but had ' + getKClassFromExpression(currentObject_0));
            }
            tmp_2 = new JsonTreeListDecoder(tmp_5, currentObject_0);
          } else {
            throw InvalidKeyKindException(keyDescriptor);
          }
        }
        tmp = tmp_2;
      } else {
        var tmp_6 = this.c19();
        // Inline function 'kotlinx.serialization.json.internal.cast' call
        if (!(currentObject_0 instanceof JsonObject)) {
          throw JsonDecodingException_1(-1, 'Expected ' + getKClass(JsonObject) + ' as the serialized body of ' + descriptor.hs() + ', but had ' + getKClassFromExpression(currentObject_0));
        }
        tmp = new JsonTreeDecoder(tmp_6, currentObject_0);
      }
    }
    return tmp;
  };
  protoOf(AbstractJsonTreeDecoder).eu = function (descriptor) {
  };
  protoOf(AbstractJsonTreeDecoder).pt = function () {
    var tmp = currentObject(this);
    return !(tmp instanceof JsonNull);
  };
  protoOf(AbstractJsonTreeDecoder).i1c = function (tag) {
    var currentElement = this.h1c(tag);
    var tmp0_elvis_lhs = currentElement instanceof JsonPrimitive ? currentElement : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw JsonDecodingException_0(-1, 'Expected JsonPrimitive at ' + tag + ', found ' + currentElement, toString(currentObject(this)));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  protoOf(AbstractJsonTreeDecoder).j1c = function (tag) {
    return !(this.h1c(tag) === JsonNull_getInstance());
  };
  protoOf(AbstractJsonTreeDecoder).d16 = function (tag) {
    return this.j1c((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  protoOf(AbstractJsonTreeDecoder).k1c = function (tag) {
    var value = this.i1c(tag);
    if (!this.c19().r17_1.x17_1) {
      var literal = value instanceof JsonLiteral ? value : THROW_CCE();
      if (literal.n19_1)
        throw JsonDecodingException_0(-1, "Boolean literal for key '" + tag + "' should be unquoted.\n" + get_lenientHint(), toString(currentObject(this)));
    }
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
      try {
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedBoolean.<anonymous>' call
        var tmp0_elvis_lhs = get_booleanOrNull(value);
        var tmp;
        if (tmp0_elvis_lhs == null) {
          throw IllegalArgumentException_init_$Create$_0();
        } else {
          tmp = tmp0_elvis_lhs;
        }
        var tmp0_elvis_lhs_0 = tmp;
        var tmp_0;
        if (tmp0_elvis_lhs_0 == null) {
          unparsedPrimitive(this, 'boolean');
        } else {
          tmp_0 = tmp0_elvis_lhs_0;
        }
        tmp$ret$1 = tmp_0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          unparsedPrimitive(this, 'boolean');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  protoOf(AbstractJsonTreeDecoder).e16 = function (tag) {
    return this.k1c((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  protoOf(AbstractJsonTreeDecoder).l1c = function (tag) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
      var tmp0_primitive = this.i1c(tag);
      try {
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedByte.<anonymous>' call
        var result = get_int(tmp0_primitive);
        var tmp;
        var containsLower = ByteCompanionObject_getInstance().MIN_VALUE;
        if (result <= ByteCompanionObject_getInstance().MAX_VALUE ? containsLower <= result : false) {
          tmp = toByte_0(result);
        } else {
          tmp = null;
        }
        var tmp0_elvis_lhs = tmp;
        var tmp_0;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'byte');
        } else {
          tmp_0 = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp_0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          unparsedPrimitive(this, 'byte');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  protoOf(AbstractJsonTreeDecoder).f16 = function (tag) {
    return this.l1c((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  protoOf(AbstractJsonTreeDecoder).m1c = function (tag) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
      var tmp0_primitive = this.i1c(tag);
      try {
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedShort.<anonymous>' call
        var result = get_int(tmp0_primitive);
        var tmp;
        var containsLower = ShortCompanionObject_getInstance().MIN_VALUE;
        if (result <= ShortCompanionObject_getInstance().MAX_VALUE ? containsLower <= result : false) {
          tmp = toShort_0(result);
        } else {
          tmp = null;
        }
        var tmp0_elvis_lhs = tmp;
        var tmp_0;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'short');
        } else {
          tmp_0 = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp_0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          unparsedPrimitive(this, 'short');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  protoOf(AbstractJsonTreeDecoder).g16 = function (tag) {
    return this.m1c((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  protoOf(AbstractJsonTreeDecoder).n1c = function (tag) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
      var tmp0_primitive = this.i1c(tag);
      try {
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedInt.<anonymous>' call
        var tmp0_elvis_lhs = get_int(tmp0_primitive);
        var tmp;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'int');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          unparsedPrimitive(this, 'int');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  protoOf(AbstractJsonTreeDecoder).h16 = function (tag) {
    return this.n1c((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  protoOf(AbstractJsonTreeDecoder).o1c = function (tag) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
      var tmp0_primitive = this.i1c(tag);
      try {
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedLong.<anonymous>' call
        var tmp0_elvis_lhs = get_long(tmp0_primitive);
        var tmp;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'long');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          unparsedPrimitive(this, 'long');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  protoOf(AbstractJsonTreeDecoder).i16 = function (tag) {
    return this.o1c((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  protoOf(AbstractJsonTreeDecoder).p1c = function (tag) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
      var tmp0_primitive = this.i1c(tag);
      try {
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedFloat.<anonymous>' call
        var tmp0_elvis_lhs = get_float(tmp0_primitive);
        var tmp;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'float');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          unparsedPrimitive(this, 'float');
        } else {
          throw $p;
        }
      }
    }
    var result = tmp$ret$1;
    var specialFp = this.c19().r17_1.e18_1;
    if (specialFp ? true : isFinite(result))
      return result;
    throw InvalidFloatingPointDecoded(result, tag, toString(currentObject(this)));
  };
  protoOf(AbstractJsonTreeDecoder).j16 = function (tag) {
    return this.p1c((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  protoOf(AbstractJsonTreeDecoder).q1c = function (tag) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
      var tmp0_primitive = this.i1c(tag);
      try {
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedDouble.<anonymous>' call
        var tmp0_elvis_lhs = get_double(tmp0_primitive);
        var tmp;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'double');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          unparsedPrimitive(this, 'double');
        } else {
          throw $p;
        }
      }
    }
    var result = tmp$ret$1;
    var specialFp = this.c19().r17_1.e18_1;
    if (specialFp ? true : isFinite_0(result))
      return result;
    throw InvalidFloatingPointDecoded(result, tag, toString(currentObject(this)));
  };
  protoOf(AbstractJsonTreeDecoder).k16 = function (tag) {
    return this.q1c((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  protoOf(AbstractJsonTreeDecoder).r1c = function (tag) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
      var tmp0_primitive = this.i1c(tag);
      try {
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedChar.<anonymous>' call
        var tmp0_elvis_lhs = single(tmp0_primitive.m19());
        var tmp;
        var tmp_0 = tmp0_elvis_lhs;
        if ((tmp_0 == null ? null : new Char(tmp_0)) == null) {
          unparsedPrimitive(this, 'char');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var e = $p;
          unparsedPrimitive(this, 'char');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  protoOf(AbstractJsonTreeDecoder).l16 = function (tag) {
    return this.r1c((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  protoOf(AbstractJsonTreeDecoder).s1c = function (tag) {
    var value = this.i1c(tag);
    if (!this.c19().r17_1.x17_1) {
      var literal = value instanceof JsonLiteral ? value : THROW_CCE();
      if (!literal.n19_1)
        throw JsonDecodingException_0(-1, "String literal for key '" + tag + "' should be quoted.\n" + get_lenientHint(), toString(currentObject(this)));
    }
    return value.m19();
  };
  protoOf(AbstractJsonTreeDecoder).m16 = function (tag) {
    return this.s1c((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  protoOf(AbstractJsonTreeDecoder).t1c = function (tag, inlineDescriptor) {
    return new JsonDecoderForUnsignedTypes(new JsonReader(this.i1c(tag).m19()), this.c19());
  };
  protoOf(AbstractJsonTreeDecoder).n16 = function (tag, inlineDescriptor) {
    return this.t1c((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), inlineDescriptor);
  };
  function coerceInputValue_0($this, descriptor, index, tag) {
    var elementDescriptor = descriptor.ns(index);
    var tmp;
    var tmp_0 = $this.h1c(tag);
    if (tmp_0 instanceof JsonNull) {
      tmp = !elementDescriptor.gs();
    } else {
      tmp = false;
    }
    if (tmp)
      return true;
    if (equals(elementDescriptor.is(), ENUM_getInstance())) {
      var tmp_1 = $this.h1c(tag);
      var tmp0_safe_receiver = tmp_1 instanceof JsonPrimitive ? tmp_1 : null;
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : get_contentOrNull(tmp0_safe_receiver);
      var tmp_2;
      if (tmp1_elvis_lhs == null) {
        return false;
      } else {
        tmp_2 = tmp1_elvis_lhs;
      }
      var enumValue = tmp_2;
      var enumIndex = elementDescriptor.ms(enumValue);
      Companion_getInstance_0();
      if (enumIndex === -3)
        return true;
    }
    return false;
  }
  function JsonTreeDecoder(json, value, polyDiscriminator, polyDescriptor) {
    polyDiscriminator = polyDiscriminator === VOID ? null : polyDiscriminator;
    polyDescriptor = polyDescriptor === VOID ? null : polyDescriptor;
    AbstractJsonTreeDecoder.call(this, json, value);
    this.z1c_1 = value;
    this.a1d_1 = polyDiscriminator;
    this.b1d_1 = polyDescriptor;
    this.c1d_1 = 0;
  }
  protoOf(JsonTreeDecoder).w = function () {
    return this.z1c_1;
  };
  protoOf(JsonTreeDecoder).su = function (descriptor) {
    while (this.c1d_1 < descriptor.ks()) {
      var tmp1 = this.c1d_1;
      this.c1d_1 = tmp1 + 1 | 0;
      var name = this.d15(descriptor, tmp1);
      var tmp;
      // Inline function 'kotlin.collections.contains' call
      var tmp0_contains = this.w();
      // Inline function 'kotlin.collections.containsKey' call
      if ((isInterface(tmp0_contains, Map) ? tmp0_contains : THROW_CCE()).o2(name)) {
        tmp = !this.g1c_1.b18_1 ? true : !coerceInputValue_0(this, descriptor, this.c1d_1 - 1 | 0, name);
      } else {
        tmp = false;
      }
      if (tmp) {
        return this.c1d_1 - 1 | 0;
      }
    }
    Companion_getInstance_0();
    return -1;
  };
  protoOf(JsonTreeDecoder).h1c = function (tag) {
    return getValue(this.w(), tag);
  };
  protoOf(JsonTreeDecoder).du = function (descriptor) {
    if (descriptor === this.b1d_1)
      return this;
    return protoOf(AbstractJsonTreeDecoder).du.call(this, descriptor);
  };
  protoOf(JsonTreeDecoder).eu = function (descriptor) {
    var tmp;
    if (this.g1c_1.w17_1) {
      tmp = true;
    } else {
      var tmp_0 = descriptor.is();
      tmp = tmp_0 instanceof PolymorphicKind;
    }
    if (tmp)
      return Unit_getInstance();
    var names = jsonCachedSerialNames(descriptor);
    var tmp0_iterator = this.w().v2().f();
    while (tmp0_iterator.g()) {
      var key = tmp0_iterator.h();
      if (!names.g1(key) ? !(key === this.a1d_1) : false) {
        throw UnknownKeyException(key, this.w().toString());
      }
    }
  };
  function JsonTreeListDecoder(json, value) {
    AbstractJsonTreeDecoder.call(this, json, value);
    this.i1d_1 = value;
    this.j1d_1 = this.i1d_1.i();
    this.k1d_1 = -1;
  }
  protoOf(JsonTreeListDecoder).w = function () {
    return this.i1d_1;
  };
  protoOf(JsonTreeListDecoder).e15 = function (desc, index) {
    return index.toString();
  };
  protoOf(JsonTreeListDecoder).h1c = function (tag) {
    return this.i1d_1.l(toInt(tag));
  };
  protoOf(JsonTreeListDecoder).su = function (descriptor) {
    while (this.k1d_1 < (this.j1d_1 - 1 | 0)) {
      this.k1d_1 = this.k1d_1 + 1 | 0;
      return this.k1d_1;
    }
    Companion_getInstance_0();
    return -1;
  };
  function JsonPrimitiveDecoder(json, value) {
    AbstractJsonTreeDecoder.call(this, json, value);
    this.q1d_1 = value;
    this.w15(get_PRIMITIVE_TAG());
  }
  protoOf(JsonPrimitiveDecoder).w = function () {
    return this.q1d_1;
  };
  protoOf(JsonPrimitiveDecoder).su = function (descriptor) {
    return 0;
  };
  protoOf(JsonPrimitiveDecoder).h1c = function (tag) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(tag === get_PRIMITIVE_TAG())) {
      // Inline function 'kotlinx.serialization.json.internal.JsonPrimitiveDecoder.currentElement.<anonymous>' call
      var message = "This input can only handle primitives with '" + get_PRIMITIVE_TAG() + "' tag";
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    return this.q1d_1;
  };
  function JsonTreeMapDecoder(json, value) {
    JsonTreeDecoder.call(this, json, value);
    this.a1e_1 = value;
    this.b1e_1 = toList(this.a1e_1.v2());
    this.c1e_1 = imul(this.b1e_1.i(), 2);
    this.d1e_1 = -1;
  }
  protoOf(JsonTreeMapDecoder).w = function () {
    return this.a1e_1;
  };
  protoOf(JsonTreeMapDecoder).e15 = function (desc, index) {
    var i = index / 2 | 0;
    return this.b1e_1.l(i);
  };
  protoOf(JsonTreeMapDecoder).su = function (descriptor) {
    while (this.d1e_1 < (this.c1e_1 - 1 | 0)) {
      this.d1e_1 = this.d1e_1 + 1 | 0;
      return this.d1e_1;
    }
    Companion_getInstance_0();
    return -1;
  };
  protoOf(JsonTreeMapDecoder).h1c = function (tag) {
    return (this.d1e_1 % 2 | 0) === 0 ? JsonPrimitive_2(tag) : getValue(this.a1e_1, tag);
  };
  protoOf(JsonTreeMapDecoder).eu = function (descriptor) {
  };
  function readPolymorphicJson(_this__u8e3s4, discriminator, element, deserializer) {
    return (new JsonTreeDecoder(_this__u8e3s4, element, discriminator, deserializer.as())).cu(deserializer);
  }
  function writeJson(_this__u8e3s4, value, serializer) {
    var result = {_v: null};
    var encoder = new JsonTreeEncoder(_this__u8e3s4, writeJson$lambda(result));
    encoder.rv(serializer, value);
    var tmp;
    if (result._v == null) {
      throwUninitializedPropertyAccessException('result');
    } else {
      tmp = result._v;
    }
    return tmp;
  }
  function JsonTreeEncoder(json, nodeConsumer) {
    AbstractJsonTreeEncoder.call(this, json, nodeConsumer);
    var tmp = this;
    // Inline function 'kotlin.collections.linkedMapOf' call
    tmp.o1e_1 = LinkedHashMap_init_$Create$();
  }
  protoOf(JsonTreeEncoder).p1e = function (key, element) {
    // Inline function 'kotlin.collections.set' call
    this.o1e_1.z3(key, element);
  };
  protoOf(JsonTreeEncoder).q1e = function () {
    return new JsonObject(this.o1e_1);
  };
  function AbstractJsonTreeEncoder$encodeTaggedInline$1(this$0, $tag) {
    this.e1f_1 = this$0;
    this.f1f_1 = $tag;
    AbstractEncoder.call(this);
    this.d1f_1 = this$0.f1e_1.qu();
  }
  protoOf(AbstractJsonTreeEncoder$encodeTaggedInline$1).qu = function () {
    return this.d1f_1;
  };
  protoOf(AbstractJsonTreeEncoder$encodeTaggedInline$1).g1f = function (s) {
    return this.e1f_1.p1e(this.f1f_1, new JsonLiteral(s, false));
  };
  protoOf(AbstractJsonTreeEncoder$encodeTaggedInline$1).av = function (value) {
    var tmp$ret$0;
    // Inline function 'kotlin.toUInt' call
    tmp$ret$0 = _UInt___init__impl__l7qpdl(value);
    return this.g1f(UInt__toString_impl_dbgl21(tmp$ret$0));
  };
  protoOf(AbstractJsonTreeEncoder$encodeTaggedInline$1).bv = function (value) {
    var tmp$ret$0;
    // Inline function 'kotlin.toULong' call
    tmp$ret$0 = _ULong___init__impl__c78o9k(value);
    return this.g1f(ULong__toString_impl_f9au7k(tmp$ret$0));
  };
  protoOf(AbstractJsonTreeEncoder$encodeTaggedInline$1).yu = function (value) {
    var tmp$ret$0;
    // Inline function 'kotlin.toUByte' call
    tmp$ret$0 = _UByte___init__impl__g9hnc4(value);
    return this.g1f(UByte__toString_impl_v72jg(tmp$ret$0));
  };
  protoOf(AbstractJsonTreeEncoder$encodeTaggedInline$1).zu = function (value) {
    var tmp$ret$0;
    // Inline function 'kotlin.toUShort' call
    tmp$ret$0 = _UShort___init__impl__jigrne(value);
    return this.g1f(UShort__toString_impl_edaoee(tmp$ret$0));
  };
  function AbstractJsonTreeEncoder$beginStructure$lambda(this$0) {
    return function (node) {
      this$0.p1e(this$0.o16(), node);
      return Unit_getInstance();
    };
  }
  function AbstractJsonTreeEncoder(json, nodeConsumer) {
    NamedValueEncoder.call(this);
    this.f1e_1 = json;
    this.g1e_1 = nodeConsumer;
    this.h1e_1 = this.f1e_1.r17_1;
    this.i1e_1 = false;
  }
  protoOf(AbstractJsonTreeEncoder).c19 = function () {
    return this.f1e_1;
  };
  protoOf(AbstractJsonTreeEncoder).qu = function () {
    return this.f1e_1.qu();
  };
  protoOf(AbstractJsonTreeEncoder).g1a = function (element) {
    this.rv(JsonElementSerializer_getInstance(), element);
  };
  protoOf(AbstractJsonTreeEncoder).i15 = function (parentName, childName) {
    return childName;
  };
  protoOf(AbstractJsonTreeEncoder).wu = function () {
    var tmp0_elvis_lhs = this.h15();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return this.g1e_1(JsonNull_getInstance());
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var tag = tmp;
    this.r1e(tag);
  };
  protoOf(AbstractJsonTreeEncoder).r1e = function (tag) {
    return this.p1e(tag, JsonNull_getInstance());
  };
  protoOf(AbstractJsonTreeEncoder).k15 = function (tag) {
    return this.r1e((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  protoOf(AbstractJsonTreeEncoder).s1e = function (tag, value) {
    return this.p1e(tag, JsonPrimitive_0(value));
  };
  protoOf(AbstractJsonTreeEncoder).l15 = function (tag, value) {
    return this.s1e((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  protoOf(AbstractJsonTreeEncoder).t1e = function (tag, value) {
    return this.p1e(tag, JsonPrimitive_0(value));
  };
  protoOf(AbstractJsonTreeEncoder).m15 = function (tag, value) {
    return this.t1e((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  protoOf(AbstractJsonTreeEncoder).u1e = function (tag, value) {
    return this.p1e(tag, JsonPrimitive_0(value));
  };
  protoOf(AbstractJsonTreeEncoder).n15 = function (tag, value) {
    return this.u1e((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  protoOf(AbstractJsonTreeEncoder).v1e = function (tag, value) {
    return this.p1e(tag, JsonPrimitive_0(value));
  };
  protoOf(AbstractJsonTreeEncoder).o15 = function (tag, value) {
    return this.v1e((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  protoOf(AbstractJsonTreeEncoder).w1e = function (tag, value) {
    this.p1e(tag, JsonPrimitive_0(value));
    if (!this.h1e_1.e18_1 ? !isFinite(value) : false) {
      throw InvalidFloatingPointEncoded_0(value, tag, toString(this.q1e()));
    }
  };
  protoOf(AbstractJsonTreeEncoder).p15 = function (tag, value) {
    return this.w1e((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  protoOf(AbstractJsonTreeEncoder).rv = function (serializer, value) {
    var tmp;
    if (!(this.h15() == null)) {
      tmp = true;
    } else {
      var tmp_0;
      var tmp_1 = serializer.as().is();
      if (!(tmp_1 instanceof PrimitiveKind)) {
        tmp_0 = !(serializer.as().is() === ENUM_getInstance());
      } else {
        tmp_0 = false;
      }
      tmp = tmp_0;
    }
    if (tmp) {
      $l$block: {
        // Inline function 'kotlinx.serialization.json.internal.encodePolymorphically' call
        var tmp_2;
        if (!(serializer instanceof AbstractPolymorphicSerializer)) {
          tmp_2 = true;
        } else {
          tmp_2 = this.c19().r17_1.c18_1;
        }
        if (tmp_2) {
          serializer.bs(this, value);
          break $l$block;
        }
        var tmp_3 = isInterface(serializer, SerializationStrategy) ? serializer : THROW_CCE();
        var actualSerializer = findActualSerializer$accessor$1ad0flx(this, tmp_3, isObject(value) ? value : THROW_CCE());
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeEncoder.encodeSerializableValue.<anonymous>' call
        this.i1e_1 = true;
        actualSerializer.bs(this, value);
      }
    } else {
      // Inline function 'kotlin.apply' call
      var tmp0_apply = new JsonPrimitiveEncoder(this.f1e_1, this.g1e_1);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeEncoder.encodeSerializableValue.<anonymous>' call
      tmp0_apply.rv(serializer, value);
      tmp0_apply.v15(serializer.as());
    }
  };
  protoOf(AbstractJsonTreeEncoder).x1e = function (tag, value) {
    this.p1e(tag, JsonPrimitive_0(value));
    if (!this.h1e_1.e18_1 ? !isFinite_0(value) : false) {
      throw InvalidFloatingPointEncoded_0(value, tag, toString(this.q1e()));
    }
  };
  protoOf(AbstractJsonTreeEncoder).q15 = function (tag, value) {
    return this.x1e((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  protoOf(AbstractJsonTreeEncoder).y1e = function (tag, value) {
    return this.p1e(tag, JsonPrimitive_1(value));
  };
  protoOf(AbstractJsonTreeEncoder).r15 = function (tag, value) {
    return this.y1e((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  protoOf(AbstractJsonTreeEncoder).z1e = function (tag, value) {
    return this.p1e(tag, JsonPrimitive_2(toString_0(value)));
  };
  protoOf(AbstractJsonTreeEncoder).s15 = function (tag, value) {
    return this.z1e((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  protoOf(AbstractJsonTreeEncoder).a1f = function (tag, value) {
    return this.p1e(tag, JsonPrimitive_2(value));
  };
  protoOf(AbstractJsonTreeEncoder).t15 = function (tag, value) {
    return this.a1f((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  protoOf(AbstractJsonTreeEncoder).b1f = function (tag, value) {
    this.p1e(tag, JsonPrimitive_2(toString(value)));
  };
  protoOf(AbstractJsonTreeEncoder).j15 = function (tag, value) {
    return this.b1f((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  protoOf(AbstractJsonTreeEncoder).c1f = function (tag, inlineDescriptor) {
    return new AbstractJsonTreeEncoder$encodeTaggedInline$1(this, tag);
  };
  protoOf(AbstractJsonTreeEncoder).u15 = function (tag, inlineDescriptor) {
    return this.c1f((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), inlineDescriptor);
  };
  protoOf(AbstractJsonTreeEncoder).du = function (descriptor) {
    var tmp;
    if (this.h15() == null) {
      tmp = this.g1e_1;
    } else {
      tmp = AbstractJsonTreeEncoder$beginStructure$lambda(this);
    }
    var consumer = tmp;
    var tmp0_subject = descriptor.is();
    var tmp_0;
    var tmp_1;
    if (equals(tmp0_subject, LIST_getInstance())) {
      tmp_1 = true;
    } else {
      tmp_1 = tmp0_subject instanceof PolymorphicKind;
    }
    if (tmp_1) {
      tmp_0 = new JsonTreeListEncoder(this.f1e_1, consumer);
    } else {
      if (equals(tmp0_subject, MAP_getInstance())) {
        // Inline function 'kotlinx.serialization.json.internal.selectMapMode' call
        var tmp0_selectMapMode = this.f1e_1;
        var keyDescriptor = descriptor.ns(0);
        var keyKind = keyDescriptor.is();
        var tmp_2;
        var tmp_3;
        if (keyKind instanceof PrimitiveKind) {
          tmp_3 = true;
        } else {
          tmp_3 = equals(keyKind, ENUM_getInstance());
        }
        if (tmp_3) {
          // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeEncoder.beginStructure.<anonymous>' call
          tmp_2 = new JsonTreeMapEncoder(this.f1e_1, consumer);
        } else {
          if (tmp0_selectMapMode.r17_1.y17_1) {
            // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeEncoder.beginStructure.<anonymous>' call
            tmp_2 = new JsonTreeListEncoder(this.f1e_1, consumer);
          } else {
            throw InvalidKeyKindException(keyDescriptor);
          }
        }
        tmp_0 = tmp_2;
      } else {
        tmp_0 = new JsonTreeEncoder(this.f1e_1, consumer);
      }
    }
    var encoder = tmp_0;
    if (this.i1e_1) {
      this.i1e_1 = false;
      encoder.p1e(this.h1e_1.d18_1, JsonPrimitive_2(descriptor.hs()));
    }
    return encoder;
  };
  protoOf(AbstractJsonTreeEncoder).v15 = function (descriptor) {
    this.g1e_1(this.q1e());
  };
  function JsonPrimitiveEncoder(json, nodeConsumer) {
    AbstractJsonTreeEncoder.call(this, json, nodeConsumer);
    this.m1f_1 = null;
    this.w15('primitive');
  }
  protoOf(JsonPrimitiveEncoder).p1e = function (key, element) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(key === 'primitive')) {
      // Inline function 'kotlinx.serialization.json.internal.JsonPrimitiveEncoder.putElement.<anonymous>' call
      var message = "This output can only consume primitives with 'primitive' tag";
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(this.m1f_1 == null)) {
      // Inline function 'kotlinx.serialization.json.internal.JsonPrimitiveEncoder.putElement.<anonymous>' call
      var message_0 = 'Primitive element was already recorded. Does call to .encodeXxx happen more than once?';
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
    this.m1f_1 = element;
  };
  protoOf(JsonPrimitiveEncoder).q1e = function () {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.requireNotNull' call
      var tmp0_requireNotNull = this.m1f_1;
      // Inline function 'kotlin.contracts.contract' call
      if (tmp0_requireNotNull == null) {
        // Inline function 'kotlinx.serialization.json.internal.JsonPrimitiveEncoder.getCurrent.<anonymous>' call
        var message = 'Primitive element has not been recorded. Is call to .encodeXxx is missing in serializer?';
        throw IllegalArgumentException_init_$Create$(toString(message));
      } else {
        tmp$ret$1 = tmp0_requireNotNull;
        break $l$block;
      }
    }
    return tmp$ret$1;
  };
  function JsonTreeListEncoder(json, nodeConsumer) {
    AbstractJsonTreeEncoder.call(this, json, nodeConsumer);
    var tmp = this;
    // Inline function 'kotlin.collections.arrayListOf' call
    tmp.s1f_1 = ArrayList_init_$Create$();
  }
  protoOf(JsonTreeListEncoder).e15 = function (descriptor, index) {
    return index.toString();
  };
  protoOf(JsonTreeListEncoder).p1e = function (key, element) {
    var idx = toInt(key);
    this.s1f_1.h8(idx, element);
  };
  protoOf(JsonTreeListEncoder).q1e = function () {
    return new JsonArray(this.s1f_1);
  };
  function _get_tag__e6h4qf($this) {
    var tmp = $this.z1f_1;
    if (!(tmp == null))
      return tmp;
    else {
      throwUninitializedPropertyAccessException('tag');
    }
  }
  function JsonTreeMapEncoder(json, nodeConsumer) {
    JsonTreeEncoder.call(this, json, nodeConsumer);
    this.a1g_1 = true;
  }
  protoOf(JsonTreeMapEncoder).p1e = function (key, element) {
    if (this.a1g_1) {
      var tmp = this;
      var tmp_0;
      if (element instanceof JsonPrimitive) {
        tmp_0 = element.m19();
      } else {
        if (element instanceof JsonObject) {
          throw InvalidKeyKindException(JsonObjectSerializer_getInstance().s19_1);
        } else {
          if (element instanceof JsonArray) {
            throw InvalidKeyKindException(JsonArraySerializer_getInstance().t19_1);
          } else {
            noWhenBranchMatchedException();
          }
        }
      }
      tmp.z1f_1 = tmp_0;
      this.a1g_1 = false;
    } else {
      // Inline function 'kotlin.collections.set' call
      var tmp0_set = this.o1e_1;
      var tmp1_set = _get_tag__e6h4qf(this);
      tmp0_set.z3(tmp1_set, element);
      this.a1g_1 = true;
    }
  };
  protoOf(JsonTreeMapEncoder).q1e = function () {
    return new JsonObject(this.o1e_1);
  };
  function get_PRIMITIVE_TAG() {
    return PRIMITIVE_TAG;
  }
  var PRIMITIVE_TAG;
  function writeJson$lambda($result) {
    return function (it) {
      $result._v = it;
      return Unit_getInstance();
    };
  }
  var WriteMode_OBJ_instance;
  var WriteMode_LIST_instance;
  var WriteMode_MAP_instance;
  var WriteMode_POLY_OBJ_instance;
  function values() {
    return [WriteMode_OBJ_getInstance(), WriteMode_LIST_getInstance(), WriteMode_MAP_getInstance(), WriteMode_POLY_OBJ_getInstance()];
  }
  var WriteMode_entriesInitialized;
  function WriteMode_initEntries() {
    if (WriteMode_entriesInitialized)
      return Unit_getInstance();
    WriteMode_entriesInitialized = true;
    WriteMode_OBJ_instance = new WriteMode('OBJ', 0, get_BEGIN_OBJ(), get_END_OBJ());
    WriteMode_LIST_instance = new WriteMode('LIST', 1, get_BEGIN_LIST(), get_END_LIST());
    WriteMode_MAP_instance = new WriteMode('MAP', 2, get_BEGIN_OBJ(), get_END_OBJ());
    WriteMode_POLY_OBJ_instance = new WriteMode('POLY_OBJ', 3, get_BEGIN_LIST(), get_END_LIST());
  }
  function WriteMode(name, ordinal, begin, end) {
    Enum.call(this, name, ordinal);
    this.a1b_1 = begin;
    this.b1b_1 = end;
    this.c1b_1 = charToTokenClass(this.a1b_1);
    this.d1b_1 = charToTokenClass(this.b1b_1);
  }
  function switchMode(_this__u8e3s4, desc) {
    var tmp0_subject = desc.is();
    var tmp;
    if (tmp0_subject instanceof PolymorphicKind) {
      tmp = WriteMode_POLY_OBJ_getInstance();
    } else {
      if (equals(tmp0_subject, LIST_getInstance())) {
        tmp = WriteMode_LIST_getInstance();
      } else {
        if (equals(tmp0_subject, MAP_getInstance())) {
          // Inline function 'kotlinx.serialization.json.internal.selectMapMode' call
          var keyDescriptor = desc.ns(0);
          var keyKind = keyDescriptor.is();
          var tmp_0;
          var tmp_1;
          if (keyKind instanceof PrimitiveKind) {
            tmp_1 = true;
          } else {
            tmp_1 = equals(keyKind, ENUM_getInstance());
          }
          if (tmp_1) {
            // Inline function 'kotlinx.serialization.json.internal.switchMode.<anonymous>' call
            tmp_0 = WriteMode_MAP_getInstance();
          } else {
            if (_this__u8e3s4.r17_1.y17_1) {
              // Inline function 'kotlinx.serialization.json.internal.switchMode.<anonymous>' call
              tmp_0 = WriteMode_LIST_getInstance();
            } else {
              throw InvalidKeyKindException(keyDescriptor);
            }
          }
          tmp = tmp_0;
        } else {
          tmp = WriteMode_OBJ_getInstance();
        }
      }
    }
    return tmp;
  }
  function WriteMode_OBJ_getInstance() {
    WriteMode_initEntries();
    return WriteMode_OBJ_instance;
  }
  function WriteMode_LIST_getInstance() {
    WriteMode_initEntries();
    return WriteMode_LIST_instance;
  }
  function WriteMode_MAP_getInstance() {
    WriteMode_initEntries();
    return WriteMode_MAP_instance;
  }
  function WriteMode_POLY_OBJ_getInstance() {
    WriteMode_initEntries();
    return WriteMode_POLY_OBJ_instance;
  }
  //region block: post-declaration
  protoOf(defer$1).gs = get_isNullable;
  protoOf(defer$1).js = get_isInline;
  protoOf(StreamingJsonDecoder).ru = decodeSequentially;
  protoOf(StreamingJsonDecoder).tu = decodeCollectionSize;
  protoOf(StreamingJsonDecoder).pu = decodeSerializableElement$default;
  protoOf(JsonDecoderForUnsignedTypes).cu = decodeSerializableValue;
  protoOf(JsonDecoderForUnsignedTypes).pu = decodeSerializableElement$default;
  protoOf(JsonDecoderForUnsignedTypes).ru = decodeSequentially;
  protoOf(JsonDecoderForUnsignedTypes).tu = decodeCollectionSize;
  protoOf(StreamingJsonEncoder).sv = encodeNotNullMark;
  protoOf(StreamingJsonEncoder).tv = beginCollection;
  protoOf(AbstractJsonTreeDecoder).pu = decodeSerializableElement$default;
  protoOf(AbstractJsonTreeDecoder).ru = decodeSequentially;
  protoOf(AbstractJsonTreeDecoder).tu = decodeCollectionSize;
  protoOf(JsonTreeDecoder).pu = decodeSerializableElement$default;
  protoOf(JsonTreeDecoder).ru = decodeSequentially;
  protoOf(JsonTreeDecoder).tu = decodeCollectionSize;
  protoOf(JsonTreeListDecoder).pu = decodeSerializableElement$default;
  protoOf(JsonTreeListDecoder).ru = decodeSequentially;
  protoOf(JsonTreeListDecoder).tu = decodeCollectionSize;
  protoOf(JsonPrimitiveDecoder).pu = decodeSerializableElement$default;
  protoOf(JsonPrimitiveDecoder).ru = decodeSequentially;
  protoOf(JsonPrimitiveDecoder).tu = decodeCollectionSize;
  protoOf(JsonTreeMapDecoder).pu = decodeSerializableElement$default;
  protoOf(JsonTreeMapDecoder).ru = decodeSequentially;
  protoOf(JsonTreeMapDecoder).tu = decodeCollectionSize;
  protoOf(AbstractJsonTreeEncoder).tv = beginCollection;
  protoOf(JsonTreeEncoder).tv = beginCollection;
  protoOf(AbstractJsonTreeEncoder$encodeTaggedInline$1).sv = encodeNotNullMark;
  protoOf(AbstractJsonTreeEncoder$encodeTaggedInline$1).tv = beginCollection;
  protoOf(AbstractJsonTreeEncoder$encodeTaggedInline$1).rv = encodeSerializableValue;
  protoOf(JsonPrimitiveEncoder).tv = beginCollection;
  protoOf(JsonTreeListEncoder).tv = beginCollection;
  protoOf(JsonTreeMapEncoder).tv = beginCollection;
  //endregion
  //region block: init
  COLON = _Char___init__impl__6a9atx(58);
  INVALID = _Char___init__impl__6a9atx(0);
  COMMA = _Char___init__impl__6a9atx(44);
  NULL = 'null';
  BEGIN_OBJ = _Char___init__impl__6a9atx(123);
  END_OBJ = _Char___init__impl__6a9atx(125);
  BEGIN_LIST = _Char___init__impl__6a9atx(91);
  END_LIST = _Char___init__impl__6a9atx(93);
  TC_BEGIN_LIST = 8;
  TC_BEGIN_OBJ = 6;
  TC_OTHER = 0;
  TC_STRING = 1;
  TC_NULL = 10;
  lenientHint = "Use 'isLenient = true' in 'Json {}` builder to accept non-compliant JSON.";
  STRING = _Char___init__impl__6a9atx(34);
  TC_END_LIST = 9;
  TC_END_OBJ = 7;
  TC_COMMA = 4;
  TC_COLON = 5;
  ignoreUnknownKeysHint = "Use 'ignoreUnknownKeys = true' in 'Json {}' builder to ignore unknown keys.";
  specialFlowingValuesHint = "It is possible to deserialize them using 'JsonBuilder.allowSpecialFloatingPointValues = true'";
  allowStructuredMapKeysHint = "Use 'allowStructuredMapKeys = true' in 'Json {}' builder to convert such maps to [key1, value1, key2, value2,...] arrays.";
  PRIMITIVE_TAG = 'primitive';
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = Default_getInstance;
  _.$_$.b = JsonArray;
  _.$_$.c = JsonObject;
  _.$_$.d = JsonTransformingSerializer;
  //endregion
  return _;
}));

//# sourceMappingURL=kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.js.map


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";

;// CONCATENATED MODULE: ./src/utils/ExhaustivityError.ts
class ExhaustivityError extends Error{// https://typescriptbook.jp/reference/statements/never#%E4%BE%8B%E5%A4%96%E3%81%AB%E3%82%88%E3%82%8B%E7%B6%B2%E7%BE%85%E6%80%A7%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF (例外による網羅性チェック)
constructor(value,message=`Unsupported type: ${value}`){super(message);}}
;// CONCATENATED MODULE: ./src/components/Calculator/WorkerContext/expose.ts
function expose(postMessage,getWorkerImpl){const postWorkerOutput=output=>{postMessage({type:"output",value:output});};const updateState=(...args)=>{// const [key, value] = args
const key=args[0];const value=args[1];const output={type:"updateState",key,value};postMessage(output);};const workerImpl=getWorkerImpl({postWorkerOutput,updateState});const call=input=>{const result=workerImpl.workerFunc[input.key](...input.args);const output={type:"funcResult",key:input.key,result:result,id:input.id};postMessage(output);};const onmessage=event=>{const input=event.data;switch(input.type){case"input":workerImpl.onWorkerInput(input.value);return;case"callFunc":call(input);return;default:throw new ExhaustivityError(input,"onmessage is not exhaustive!");}};return{onmessage};}
// EXTERNAL MODULE: ./node_modules/kohomology-js/kotlin/kohomology-js.js
var kohomology_js = __webpack_require__(617);
;// CONCATENATED MODULE: ./src/components/Calculator/styled/message.ts
const stringTypes=["text","math"];const messageTypes=["success","error"];function fromString(messageType,str){const styledString={stringType:"text",content:str};const options={dgaJson:null,plainString:str};return{messageType:messageType,strings:[styledString],plainString:str,options:options};}
;// CONCATENATED MODULE: ./src/components/Calculator/worker/styled.ts
function toStyledString(styledStringKt){const stringType=styledStringKt.stringType;if(!stringTypes.includes(stringType)){throw new Error(`Invalid stringType: ${stringType}`);}return{stringType:stringType,content:styledStringKt.content};}function toMessageOptions(messageOptionsKt){return{dgaJson:messageOptionsKt.dgaJson??null,plainString:messageOptionsKt.plainString};}function toStyledMessage(styledMessageKt){const messageType=styledMessageKt.messageType;if(!messageTypes.includes(messageType)){throw new Error(`Invalid messageType: ${messageType}`);}return{messageType:messageType,strings:styledMessageKt.strings.map(toStyledString),plainString:styledMessageKt.plainString,options:toMessageOptions(styledMessageKt.options)};}
;// CONCATENATED MODULE: ./src/components/Calculator/worker/KohomologyMessageHandler.ts
class KohomologyMessageHandler{dgaWrapper=null;constructor(postMessage,updateState,log,error){// this.onmessage = this.onmessage.bind(this)
this.log=log??((...messages)=>console.log(...messages));this.error=error??((...messages)=>console.error(...messages));this.postMessage=output=>{this.log("WorkerOutput",output);postMessage(output);};this.updateState=(...args)=>{this.log("updateState",...args);updateState(...args);};this.log("new KohomologyMessageHandler()");}onmessage(input){this.log("WorkerInput",input);this.notifyInfo({status:"computing",progress:null});try{switch(input.command){case"updateJson":this.updateJson(input.json);this.updateIdealJson("[]");this.showDgaInfo();this.showIdealInfo();break;case"updateIdealJson":this.updateIdealJson(input.idealJson);this.showIdealInfo();break;case"computeCohomology":this.computeCohomology(input.targetName,input.minDegree,input.maxDegree,input.showCohomology);break;case"computeCohomologyClass":this.computeCohomologyClass(input.targetName,input.cocycleString,input.showBasis);break;case"computeMinimalModel":this.computeMinimalModel(input.targetName,input.isomorphismUpTo);break;default:throw new ExhaustivityError(input,`Invalid command: ${input}`);}}catch(error){if(error instanceof Error){this.sendMessages(fromString("error",error.message));}this.error(error);}finally{this.notifyInfo({status:"idle"});}}updateJson(json){try{this.dgaWrapper=new kohomology_js.FreeDGAWrapper(json);this.updateState("json",json);}catch(error){this.dgaWrapper=null;throw error;}}updateIdealJson(idealJson){assertNotNull(this.dgaWrapper,"dgaWrapper is null");this.dgaWrapper.setIdeal(idealJson);this.updateState("idealJson",idealJson);}sendMessages(messages){if(messages instanceof Array){const output={command:"printMessages",messages:messages};this.postMessage(output);}else{const output={command:"printMessages",messages:[messages]};this.postMessage(output);}}notifyInfo(workerInfo){this.updateState("workerInfo",workerInfo);}computeCohomology(targetName,minDegree,maxDegree,showCohomology){assertNotNull(this.dgaWrapper,"dgaWrapper is null");this.sendMessages(toStyledMessage(this.dgaWrapper.computationHeader(targetName,minDegree,maxDegree)));this.notifyInfo({status:"computing",progress:0});let styledMessages=[];let previousTime=new Date().getTime();// in millisecond
for(let degree=minDegree;degree<=maxDegree;degree++){switch(showCohomology){// Don't send message immediately for performance reason.
// If styledMessages.push(...) is replaced with this.sendMessages(...),
// then the Calculator significantly slows down.
// This is because this.sendMessages(...) causes re-render of the component Calculator.
case"basis":styledMessages.push(toStyledMessage(this.dgaWrapper.computeCohomology(targetName,degree)));break;case"dim":styledMessages.push(toStyledMessage(this.dgaWrapper.computeCohomologyDim(targetName,degree)));break;}const currentTime=new Date().getTime();// in millisecond
if(currentTime-previousTime>500){previousTime=currentTime;this.sendMessages(styledMessages);const progress=(degree-minDegree+1)/(maxDegree-minDegree+1);this.notifyInfo({status:"computing",progress});styledMessages=[];}}this.sendMessages(styledMessages);}computeCohomologyClass(targetName,cocycleString,showBasis){assertNotNull(this.dgaWrapper,"dgaWrapper is null");this.notifyInfo({status:"computing",progress:null});this.sendMessages(toStyledMessage(this.dgaWrapper.computeCohomologyClass(targetName,cocycleString,showBasis)));}computeMinimalModel(targetName,isomorphismUpTo){assertNotNull(this.dgaWrapper,"dgaWrapper is null");this.notifyInfo({status:"computing",progress:null});const reportProgress=(currentIsomorphismUpTo,targetIsomorphismUpTo,currentNumberOfGenerators)=>{this.updateState("workerInfo",{status:"computing",progress:targetIsomorphismUpTo!==0?currentIsomorphismUpTo/targetIsomorphismUpTo:1,message:`Completed degree ${currentIsomorphismUpTo}/${targetIsomorphismUpTo}, `+`Generators: ${currentNumberOfGenerators}`});};this.sendMessages(this.dgaWrapper.computeMinimalModel(targetName,isomorphismUpTo,reportProgress).map(toStyledMessage));}showDgaInfo(){if(this.dgaWrapper===null){const message="[Error] Your DGA contains errors. Please fix them.";this.updateState("dgaInfo",[fromString("error",message)]);}else{this.updateState("dgaInfo",this.dgaWrapper.dgaInfo().map(toStyledMessage));}}showIdealInfo(){assertNotNull(this.dgaWrapper,"dgaWrapper is null");this.updateState("idealInfo",toStyledMessage(this.dgaWrapper.idealInfo()));}validateIdealGenerator(generator){assertNotNull(this.dgaWrapper,"dgaWrapper is null");const result=(0,kohomology_js.validateIdealGeneratorString)(this.dgaWrapper,generator);switch(result.type){case"success":return true;case"error":return result.message;default:throw new Error("This can't happen!");}}validateIdealGeneratorArray(generatorArray){assertNotNull(this.dgaWrapper,"dgaWrapper is null");const json=JSON.stringify(generatorArray);const result=(0,kohomology_js.validateIdealJson)(this.dgaWrapper,json);switch(result.type){case"success":return true;case"error":return result.message;default:throw new Error("This can't happen!");}}}function assertNotNull(value,errorMessage){if(value===null){throw new Error(errorMessage);}}
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./src/components/Calculator/worker/kohomology.worker.ts
// eslint-disable-next-line no-restricted-globals
const ctx=self;const exposed=expose(ctx.postMessage.bind(ctx),({postWorkerOutput,updateState})=>{const messageHandler=new KohomologyMessageHandler(postWorkerOutput,updateState);return{onWorkerInput:input=>messageHandler.onmessage(input),workerFunc:{validateIdealGenerator:generator=>messageHandler.validateIdealGenerator(generator),validateIdealGeneratorArray:generatorArray=>messageHandler.validateIdealGeneratorArray(generatorArray)}};});onmessage=exposed.onmessage;
})();

/******/ })()
;