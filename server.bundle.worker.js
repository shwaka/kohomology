/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 851:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
  if (true)
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(72), __webpack_require__(639), __webpack_require__(683), __webpack_require__(15), __webpack_require__(474), __webpack_require__(11)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  else {}
}(this, function (_, kotlin_kotlin, kotlin_com_github_h0tk3y_betterParse_better_parse, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core, kotlin_com_github_shwaka_parautil_parautil_parallel, kotlin_com_ionspin_kotlin_bignum) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var Exception_init_$Create$ = kotlin_kotlin.$_$.h1;
  var numberRangeToNumber = kotlin_kotlin.$_$.i8;
  var collectionSizeOrDefault = kotlin_kotlin.$_$.o4;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.q;
  var Pair = kotlin_kotlin.$_$.pa;
  var Unit_getInstance = kotlin_kotlin.$_$.r3;
  var ArrayList_init_$Create$_0 = kotlin_kotlin.$_$.r;
  var equals = kotlin_kotlin.$_$.m7;
  var flatten = kotlin_kotlin.$_$.p5;
  var NoSuchElementException_init_$Create$ = kotlin_kotlin.$_$.o1;
  var compareTo = kotlin_kotlin.$_$.l7;
  var objectMeta = kotlin_kotlin.$_$.n8;
  var THROW_CCE = kotlin_kotlin.$_$.ra;
  var classMeta = kotlin_kotlin.$_$.k7;
  var toString = kotlin_kotlin.$_$.r8;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.k1;
  var interfaceMeta = kotlin_kotlin.$_$.r7;
  var lazy = kotlin_kotlin.$_$.eb;
  var KProperty1 = kotlin_kotlin.$_$.a9;
  var getPropertyCallableRef = kotlin_kotlin.$_$.o7;
  var isInterface = kotlin_kotlin.$_$.a8;
  var Exception = kotlin_kotlin.$_$.la;
  var joinToString$default = kotlin_kotlin.$_$.k;
  var trimIndent = kotlin_kotlin.$_$.fa;
  var Exception_init_$Init$ = kotlin_kotlin.$_$.g1;
  var captureStack = kotlin_kotlin.$_$.e7;
  var ArithmeticException_init_$Create$ = kotlin_kotlin.$_$.f1;
  var parseToEnd = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.h;
  var noWhenBranchMatchedException = kotlin_kotlin.$_$.fb;
  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.z;
  var UnsupportedOperationException_init_$Create$ = kotlin_kotlin.$_$.t1;
  var Collection = kotlin_kotlin.$_$.u3;
  var toList = kotlin_kotlin.$_$.r6;
  var getKClassFromExpression = kotlin_kotlin.$_$.d;
  var hashCode = kotlin_kotlin.$_$.q7;
  var NotImplementedError = kotlin_kotlin.$_$.oa;
  var any = kotlin_kotlin.$_$.k4;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.m1;
  var listOf = kotlin_kotlin.$_$.x5;
  var toList_0 = kotlin_kotlin.$_$.q6;
  var plus = kotlin_kotlin.$_$.e6;
  var get_indices = kotlin_kotlin.$_$.r5;
  var contentEquals = kotlin_kotlin.$_$.q4;
  var contentHashCode = kotlin_kotlin.$_$.r4;
  var emptyList = kotlin_kotlin.$_$.k5;
  var get_indices_0 = kotlin_kotlin.$_$.t5;
  var sum = kotlin_kotlin.$_$.k6;
  var toIntArray = kotlin_kotlin.$_$.p6;
  var drop = kotlin_kotlin.$_$.i5;
  var getStringHashCode = kotlin_kotlin.$_$.p7;
  var Token = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.k;
  var charSequenceGet = kotlin_kotlin.$_$.h7;
  var get_category = kotlin_kotlin.$_$.d9;
  var charSequenceLength = kotlin_kotlin.$_$.i7;
  var toInt = kotlin_kotlin.$_$.u9;
  var TokenMatch = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.j;
  var Tuple2 = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.o;
  var Grammar = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.g;
  var literalToken$default = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.p;
  var use = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.f;
  var or = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.d;
  var skip = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.e;
  var parser = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.i;
  var listOf_0 = kotlin_kotlin.$_$.y5;
  var AndCombinator = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.a;
  var map = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.c;
  var SeparatedCombinator = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.b;
  var KProperty0 = kotlin_kotlin.$_$.z8;
  var Regex_init_$Create$ = kotlin_kotlin.$_$.d1;
  var RuntimeException = kotlin_kotlin.$_$.qa;
  var RuntimeException_init_$Init$ = kotlin_kotlin.$_$.r1;
  var emptyMap = kotlin_kotlin.$_$.l5;
  var until = kotlin_kotlin.$_$.x8;
  var zip = kotlin_kotlin.$_$.z6;
  var checkIndexOverflow = kotlin_kotlin.$_$.n4;
  var Grouping = kotlin_kotlin.$_$.v3;
  var eachCount = kotlin_kotlin.$_$.j5;
  var Char = kotlin_kotlin.$_$.ha;
  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.u1;
  var replaceFirst$default = kotlin_kotlin.$_$.m;
  var replace$default = kotlin_kotlin.$_$.n;
  var Default_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.a;
  var ListSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.m;
  var PluginGeneratedSerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.r1;
  var StringSerializer_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.l;
  var IntSerializer_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.k;
  var UnknownFieldException_init_$Create$ = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.d;
  var typeParametersSerializers = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.n1;
  var GeneratedSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.o1;
  var throwMissingFieldException = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.t1;
  var JsonTransformingSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.d;
  var to = kotlin_kotlin.$_$.ib;
  var mapOf = kotlin_kotlin.$_$.b6;
  var JsonObject = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.c;
  var JsonArray = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.b;
  var Enum = kotlin_kotlin.$_$.ka;
  var slice = kotlin_kotlin.$_$.g6;
  var distinct = kotlin_kotlin.$_$.g5;
  var NoSuchElementException_init_$Create$_0 = kotlin_kotlin.$_$.p1;
  var pmap = kotlin_com_github_shwaka_parautil_parautil_parallel.$_$.a;
  var toList_1 = kotlin_kotlin.$_$.s6;
  var sorted = kotlin_kotlin.$_$.j6;
  var sortedWith = kotlin_kotlin.$_$.i6;
  var withIndex = kotlin_kotlin.$_$.y6;
  var toMap = kotlin_kotlin.$_$.u6;
  var Comparator = kotlin_kotlin.$_$.ja;
  var compareValues = kotlin_kotlin.$_$.a7;
  var count = kotlin_kotlin.$_$.f5;
  var mapOf_0 = kotlin_kotlin.$_$.a6;
  var mapCapacity = kotlin_kotlin.$_$.z5;
  var LinkedHashMap_init_$Create$_0 = kotlin_kotlin.$_$.y;
  var filterNotNull = kotlin_kotlin.$_$.m5;
  var toMutableMap = kotlin_kotlin.$_$.v6;
  var plus_0 = kotlin_kotlin.$_$.d6;
  var IndexOutOfBoundsException_init_$Create$ = kotlin_kotlin.$_$.n1;
  var first = kotlin_kotlin.$_$.o5;
  var last = kotlin_kotlin.$_$.w5;
  var dropLast = kotlin_kotlin.$_$.h5;
  var takeLast = kotlin_kotlin.$_$.l6;
  var take = kotlin_kotlin.$_$.m6;
  var BigInteger_init_$Create$ = kotlin_com_ionspin_kotlin_bignum.$_$.a;
  var Companion_getInstance = kotlin_com_ionspin_kotlin_bignum.$_$.b;
  var getKClass = kotlin_kotlin.$_$.e;
  var removePrefix = kotlin_kotlin.$_$.m9;
  var CharCategory_LOWERCASE_LETTER_getInstance = kotlin_kotlin.$_$.h;
  var CharCategory_UPPERCASE_LETTER_getInstance = kotlin_kotlin.$_$.j;
  var CharCategory_OTHER_LETTER_getInstance = kotlin_kotlin.$_$.i;
  var CharCategory_DECIMAL_DIGIT_NUMBER_getInstance = kotlin_kotlin.$_$.g;
  var CharCategory_CONNECTOR_PUNCTUATION_getInstance = kotlin_kotlin.$_$.f;
  var toString_0 = kotlin_kotlin.$_$.hb;
  var addAll = kotlin_kotlin.$_$.j4;
  //endregion
  //region block: pre-declaration
  function get_field() {
    return this.x1j().e1k();
  }
  function fromVector(vector, degree) {
    return new GVector(vector, degree, this);
  }
  function fromBasisName(basisName, degree) {
    var vector = this.b1k(degree).g1w(basisName);
    return this.f1k(vector, degree);
  }
  function getBasis(degree) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = this.b1k(degree).h1w();
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.GVectorSpace.getBasis.<anonymous>' call
      tmp$ret$0 = this.f1k(item, degree);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function getBasisForAugmentedDegree(augmentedDegree) {
    var tmp0_elvis_lhs = this.a1k();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw new NotImplementedError('GVectorSpace.getBasisForAugmentedDegree() cannot be called since the property listDegreesForAugmentedDegree is null');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var listDegreesForAugmentedDegree = tmp;
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = listDegreesForAugmentedDegree(augmentedDegree);
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.GVectorSpace.getBasisForAugmentedDegree.<anonymous>' call
      tmp$ret$0 = this.i1k(item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    return flatten(tmp$ret$2);
  }
  function getZero(degree) {
    var vector = this.b1k(degree).i1w();
    return this.f1k(vector, degree);
  }
  function convertToGVector(gVectorOrZero, degree) {
    var tmp0_subject = gVectorOrZero;
    var tmp;
    if (tmp0_subject instanceof ZeroGVector) {
      tmp = this.j1k(degree);
    } else {
      if (tmp0_subject instanceof GVector) {
        tmp = gVectorOrZero;
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp;
  }
  function get(degree) {
    return this.b1k(this.y1j().oh(degree));
  }
  function fromVector_0(vector, degree) {
    return this.f1k(vector, this.y1j().oh(degree));
  }
  function getBasis_0(degree) {
    return this.i1k(this.y1j().oh(degree));
  }
  function getZero_0(degree) {
    return this.j1k(this.y1j().oh(degree));
  }
  function contains(gVector) {
    return equals(gVector.v1q_1.c1k(), this.c1k());
  }
  function contains_0(gVector) {
    return equals(gVector.f1w_1.c1k(), this.c1k());
  }
  function add(a, b) {
    if (!this.m1k(a))
      throw new IllegalContextException('The gVector ' + a + ' does not match the context');
    if (!this.m1k(b))
      throw new IllegalContextException('The gVector ' + b + ' does not match the context');
    if (!equals(a.u1q_1, b.u1q_1))
      throw ArithmeticException_init_$Create$('Cannot add two graded vectors of different degrees: ' + ('deg(' + a + ')=' + a.u1q_1 + ' and deg(' + b + ')=' + b.u1q_1));
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = a.t1q_1.n1u_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.dg.GVectorSpace.add.<anonymous>' call
    tmp$ret$0 = tmp0_run.j1w(a.t1q_1, b.t1q_1);
    tmp$ret$1 = tmp$ret$0;
    var vector = tmp$ret$1;
    return this.f1k(vector, a.u1q_1);
  }
  function subtract(a, b) {
    if (!this.m1k(a))
      throw new IllegalContextException('The gVector ' + a + ' does not match the context');
    if (!this.m1k(b))
      throw new IllegalContextException('The gVector ' + b + ' does not match the context');
    if (!equals(a.u1q_1, b.u1q_1))
      throw ArithmeticException_init_$Create$('Cannot subtract a graded vector from another one with a different degree: ' + ('deg(' + a + ')=' + a.u1q_1 + ' and deg(' + b + ')=' + b.u1q_1));
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = a.t1q_1.n1u_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.dg.GVectorSpace.subtract.<anonymous>' call
    tmp$ret$0 = tmp0_run.k1w(a.t1q_1, b.t1q_1);
    tmp$ret$1 = tmp$ret$0;
    var vector = tmp$ret$1;
    return this.f1k(vector, a.u1q_1);
  }
  function multiply(scalar, gVector) {
    if (!this.m1k(gVector))
      throw new IllegalContextException('The gVector ' + gVector + ' does not match the context');
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = gVector.t1q_1.n1u_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.dg.GVectorSpace.multiply.<anonymous>' call
    tmp$ret$0 = tmp0_run.l1w(scalar, gVector.t1q_1);
    tmp$ret$1 = tmp$ret$0;
    var vector = tmp$ret$1;
    return this.f1k(vector, gVector.u1q_1);
  }
  function divideByGVector(a, b) {
    if (!this.m1k(a))
      throw new IllegalContextException('The gVector ' + a + ' does not match the context');
    if (!this.m1k(b))
      throw new IllegalContextException('The gVector ' + b + ' does not match the context');
    if (!equals(a.u1q_1, b.u1q_1))
      throw ArithmeticException_init_$Create$('Cannot divide a graded vector by another one with a different degree: ' + ('deg(' + a + ')=' + a.u1q_1 + ' and deg(' + b + ')=' + b.u1q_1));
    if (b.dj())
      throw ArithmeticException_init_$Create$('Division by zero gVector');
    return this.b1k(a.u1q_1).m1w(a.t1q_1, b.t1q_1);
  }
  function cohomologyClassOf(cocycle) {
    return Companion_getInstance_11().a1n(this.i1j(), cocycle);
  }
  function cocycleRepresentativeOf(cohomologyClass) {
    var vector = cohomologyClass.t1q_1;
    var cohomologyOfTheDegree = this.i1j().b1k(cohomologyClass.u1q_1);
    var cocycle = cohomologyOfTheDegree.f1r().k1r(vector);
    return this.f1k(cocycle, cohomologyClass.u1q_1);
  }
  function multiply_0(a, b) {
    return this.j1j().l1u(a, b);
  }
  function multiply_1(a, b) {
    var tmp0_subject = a;
    var tmp;
    if (tmp0_subject instanceof ZeroGVector) {
      tmp = this.u1k();
    } else {
      if (tmp0_subject instanceof GVector) {
        var tmp1_subject = b;
        var tmp_0;
        if (tmp1_subject instanceof ZeroGVector) {
          tmp_0 = this.u1k();
        } else {
          if (tmp1_subject instanceof GVector) {
            tmp_0 = this.r1k(a, b);
          } else {
            noWhenBranchMatchedException();
          }
        }
        tmp = tmp_0;
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp;
  }
  function convertToScalar(gVector) {
    if (gVector.u1q_1.y1s()) {
      throw ArithmeticException_init_$Create$('Cannot convert ' + gVector + ' to a scalar since it has non-zero degree ' + gVector.u1q_1);
    }
    var tmp0_elvis_lhs = this.t1k(gVector, this.v1k());
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw ArithmeticException_init_$Create$('Cannot convert ' + gVector + ' to a scalar since it is not of a multiple of the unit');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function parse(generatorList, text) {
    var astNode = parseToEnd(GAlgebraElementASTGrammar_getInstance(), text);
    return getValueFromASTNode(this, generatorList, astNode);
  }
  function getIdeal(generatorList) {
    var generatingSubGVectorSpace = Companion_getInstance_31().z1s(this.u1j(), this, 'IdealGenerator(' + generatorList + ')', generatorList);
    var tmp;
    if (this.w1k()) {
      var tmp_0 = this.j1j();
      tmp = tmp_0.a1t(generatingSubGVectorSpace, null, 2, null);
    } else {
      var tmp_1 = this.j1j();
      var rightIdeal = tmp_1.a1t(generatingSubGVectorSpace, null, 2, null);
      var tmp_2 = this.j1j();
      tmp = tmp_2.a1t(null, rightIdeal, 1, null);
    }
    var idealAsSubGVectorSpace = tmp;
    return Companion_getInstance_26().b1t(this, idealAsSubGVectorSpace, generatorList);
  }
  function getQuotientByIdeal(ideal) {
    var tmp = Companion_getInstance_29();
    var tmp_0 = this.u1j();
    var quotGVectorSpace = tmp.c1t(tmp_0, this, ideal, null, null, 24, null);
    var multiplication = this.j1j().d1t(quotGVectorSpace, quotGVectorSpace, quotGVectorSpace);
    var unit = quotGVectorSpace.s1q().o1j(this.v1k());
    var tmp_1 = Companion_getInstance_28();
    var tmp_2 = this.u1j();
    return tmp_1.e1t(tmp_2, quotGVectorSpace, multiplication, unit, false, 16, null);
  }
  function getDGIdeal(generatorList) {
    var idealWithoutD = this.m1j(generatorList);
    var tmp0_iterator = generatorList.f();
    while (tmp0_iterator.g()) {
      var gVector = tmp0_iterator.h();
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this.c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp0_require = idealWithoutD.p1j(tmp0_run.n1j().o1j(gVector));
      // Inline function 'kotlin.contracts.contract' call
      var tmp;
      if (!tmp0_require) {
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.dg.DGAlgebra.getDGIdeal.<anonymous>.<anonymous>' call
        tmp$ret$0 = 'd(' + gVector + ')=' + tmp0_run.n1j().o1j(gVector) + ' must be contained in the ideal ' + idealWithoutD + 'to define dg ideal.';
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
      tmp$ret$1 = tmp;
    }
    var idealAsSubDGVectorSpace = Companion_getInstance_30().q1j(this, idealWithoutD);
    return Companion_getInstance_5().r1j(this, idealAsSubDGVectorSpace, generatorList);
  }
  function getQuotientByIdeal_0(ideal) {
    var quotGAlgebra = getQuotientByIdeal.call(this, ideal);
    return Companion_getInstance_27().t1j(this, quotGAlgebra);
  }
  function plus_1(_this__u8e3s4, other) {
    return this.e1k().q2n(_this__u8e3s4, other);
  }
  function minus(_this__u8e3s4, other) {
    return this.e1k().r2n(_this__u8e3s4, other);
  }
  function times(_this__u8e3s4, other) {
    return this.e1k().s2n(_this__u8e3s4, other);
  }
  function unaryMinus(_this__u8e3s4) {
    return this.e1k().t2n(_this__u8e3s4);
  }
  function div(_this__u8e3s4, other) {
    return this.e1k().u2n(_this__u8e3s4, other);
  }
  function div_0(_this__u8e3s4, other) {
    return this.e1k().u2n(this.e1k().oh(_this__u8e3s4), other);
  }
  function inv(_this__u8e3s4) {
    return this.e1k().u2n(this.n1m(), _this__u8e3s4);
  }
  function toScalar(_this__u8e3s4) {
    return this.e1k().oh(_this__u8e3s4);
  }
  function get_zero() {
    return this.e1k().m1m();
  }
  function get_one() {
    return this.e1k().n1m();
  }
  function sum_0(_this__u8e3s4) {
    var tmp$ret$1;
    // Inline function 'kotlin.collections.fold' call
    var tmp0_fold = this.m1m();
    var accumulator = tmp0_fold;
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.ScalarContext.sum.<anonymous>' call
      var tmp1__anonymous__uwfjfc = accumulator;
      tmp$ret$0 = this.t1l(tmp1__anonymous__uwfjfc, element);
      accumulator = tmp$ret$0;
    }
    tmp$ret$1 = accumulator;
    return tmp$ret$1;
  }
  function plus_2(_this__u8e3s4, other) {
    return this.x1j().i2m(_this__u8e3s4, other);
  }
  function minus_0(_this__u8e3s4, other) {
    return this.x1j().k2m(_this__u8e3s4, other);
  }
  function times_0(_this__u8e3s4, scalar) {
    return this.x1j().n2m(scalar, _this__u8e3s4);
  }
  function times_1(_this__u8e3s4, numVector) {
    return this.j1l(numVector, _this__u8e3s4);
  }
  function unaryMinus_0(_this__u8e3s4) {
    return this.x1j().r2m(_this__u8e3s4);
  }
  function get_0(_this__u8e3s4, ind) {
    return this.x1j().t2m(_this__u8e3s4, ind);
  }
  function get_zeroGVector() {
    return this.p1l().u1k();
  }
  function plus_3(_this__u8e3s4, other) {
    return this.p1l().o1k(_this__u8e3s4, other);
  }
  function plus_4(_this__u8e3s4, other) {
    var tmp0_subject = other;
    var tmp;
    if (tmp0_subject instanceof ZeroGVector) {
      tmp = _this__u8e3s4;
    } else {
      if (tmp0_subject instanceof GVector) {
        var tmp1_subject = _this__u8e3s4;
        var tmp_0;
        if (tmp1_subject instanceof ZeroGVector) {
          tmp_0 = other;
        } else {
          if (tmp1_subject instanceof GVector) {
            tmp_0 = this.p1l().o1k(_this__u8e3s4, other);
          } else {
            noWhenBranchMatchedException();
          }
        }
        tmp = tmp_0;
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp;
  }
  function minus_1(_this__u8e3s4, other) {
    return this.p1l().p1k(_this__u8e3s4, other);
  }
  function minus_2(_this__u8e3s4, other) {
    var tmp0_subject = other;
    var tmp;
    if (tmp0_subject instanceof ZeroGVector) {
      tmp = _this__u8e3s4;
    } else {
      if (tmp0_subject instanceof GVector) {
        var tmp1_subject = _this__u8e3s4;
        var tmp_0;
        if (tmp1_subject instanceof ZeroGVector) {
          tmp_0 = this.p1l().q1k(this.p1l().e1k().oh(-1), other);
        } else {
          if (tmp1_subject instanceof GVector) {
            tmp_0 = this.p1l().p1k(_this__u8e3s4, other);
          } else {
            noWhenBranchMatchedException();
          }
        }
        tmp = tmp_0;
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp;
  }
  function times_2(_this__u8e3s4, scalar) {
    return this.p1l().q1k(scalar, _this__u8e3s4);
  }
  function times_3(_this__u8e3s4, gVector) {
    return this.p1l().q1k(_this__u8e3s4, gVector);
  }
  function times_4(_this__u8e3s4, gVector) {
    return this.p1l().q1k(this.k1m(_this__u8e3s4), gVector);
  }
  function times_5(_this__u8e3s4, scalar) {
    var tmp0_subject = _this__u8e3s4;
    var tmp;
    if (tmp0_subject instanceof ZeroGVector) {
      tmp = this.p1l().u1k();
    } else {
      if (tmp0_subject instanceof GVector) {
        tmp = this.p1l().q1k(scalar, _this__u8e3s4);
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp;
  }
  function times_6(_this__u8e3s4, sign) {
    var tmp0_subject = sign;
    var tmp0 = tmp0_subject.d2_1;
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = _this__u8e3s4;
        break;
      case 1:
        tmp = this.y1l(_this__u8e3s4);
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function times_7(_this__u8e3s4, gVector) {
    return this.h1l(gVector, _this__u8e3s4);
  }
  function unaryMinus_1(_this__u8e3s4) {
    return this.p1l().q1k(this.k1m(-1), _this__u8e3s4);
  }
  function unaryMinus_2(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4;
    var tmp;
    if (tmp0_subject instanceof ZeroGVector) {
      tmp = this.p1l().u1k();
    } else {
      if (tmp0_subject instanceof GVector) {
        tmp = this.y1l(_this__u8e3s4);
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp;
  }
  function sum_1(_this__u8e3s4, degree) {
    var tmp;
    if (any(_this__u8e3s4)) {
      var tmp$ret$1;
      // Inline function 'kotlin.collections.reduce' call
      var iterator = _this__u8e3s4.f();
      if (!iterator.g())
        throw UnsupportedOperationException_init_$Create$("Empty collection can't be reduced.");
      var accumulator = iterator.h();
      while (iterator.g()) {
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.dg.GVectorContext.sum.<anonymous>' call
        var tmp0__anonymous__q1qw7t = accumulator;
        var tmp1__anonymous__uwfjfc = iterator.h();
        tmp$ret$0 = this.q1l(tmp0__anonymous__q1qw7t, tmp1__anonymous__uwfjfc);
        accumulator = tmp$ret$0;
      }
      tmp$ret$1 = accumulator;
      tmp = tmp$ret$1;
    } else {
      if (degree == null)
        throw IllegalArgumentException_init_$Create$('degree cannot be null when an iterator of GVector is empty');
      return this.p1l().j1k(degree);
    }
    return tmp;
  }
  function get_d() {
    return this.n1l().k1j();
  }
  function cohomologyClass(_this__u8e3s4) {
    return this.n1l().v1j(_this__u8e3s4);
  }
  function times_8(_this__u8e3s4, other) {
    return this.p1m().r1k(_this__u8e3s4, other);
  }
  function times_9(_this__u8e3s4, other) {
    return this.p1m().s1k(_this__u8e3s4, other);
  }
  function times_10(_this__u8e3s4, other) {
    return this.b1l().r1k(_this__u8e3s4, other);
  }
  function get_unit() {
    return this.h1n().v1k();
  }
  function pow(_this__u8e3s4, exponent) {
    var unit = this.h1n().v1k();
    var tmp;
    if (exponent === 0) {
      tmp = unit;
    } else if (exponent === 1) {
      tmp = _this__u8e3s4;
    } else if (exponent > 1) {
      var half = this.i1m(_this__u8e3s4, exponent / 2 | 0);
      var rem = (exponent % 2 | 0) === 1 ? _this__u8e3s4 : unit;
      tmp = this.c1l(this.c1l(half, half), rem);
    } else if (exponent < 0) {
      throw ArithmeticException_init_$Create$('Negative power in an algebra is not defined');
    } else {
      throw Exception_init_$Create$("This can't happen!");
    }
    return tmp;
  }
  function pow_0(_this__u8e3s4, exponent) {
    var tmp0_subject = _this__u8e3s4;
    var tmp;
    if (tmp0_subject instanceof GVector) {
      tmp = this.i1m(_this__u8e3s4, exponent);
    } else {
      if (tmp0_subject instanceof ZeroGVector) {
        var tmp_0;
        if (exponent === 0) {
          tmp_0 = this.h1n().v1k();
        } else if (exponent > 0) {
          tmp_0 = this.h1n().u1k();
        } else if (exponent < 0) {
          throw ArithmeticException_init_$Create$('Negative power in an algebra is not defined');
        } else {
          throw Exception_init_$Create$("This can't happen!");
        }
        tmp = tmp_0;
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp;
  }
  function toScalar_0(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4;
    var tmp;
    if (tmp0_subject instanceof GVector) {
      tmp = this.h1n().x1k(_this__u8e3s4);
    } else {
      if (tmp0_subject instanceof ZeroGVector) {
        tmp = this.m1m();
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp;
  }
  function product(_this__u8e3s4) {
    var tmp$ret$1;
    // Inline function 'kotlin.collections.fold' call
    var tmp0_fold = this.h1n().v1k();
    var accumulator = tmp0_fold;
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.GAlgebraContext.product.<anonymous>' call
      var tmp1__anonymous__uwfjfc = accumulator;
      tmp$ret$0 = this.c1l(tmp1__anonymous__uwfjfc, element);
      accumulator = tmp$ret$0;
    }
    tmp$ret$1 = accumulator;
    return tmp$ret$1;
  }
  function get_degreeGroup() {
    return this.o1n().y1j();
  }
  function invoke(gVector) {
    // Inline function 'kotlin.require' call
    var tmp0_require = this.o1n().m1k(gVector);
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.GLinearMap.invoke.<anonymous>' call
      tmp$ret$0 = 'Cannot evaluate ' + this + ' by ' + gVector + ' since it is not an element of ' + this.o1n() + ', but of ' + gVector.v1q_1;
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    var linearMap = this.b1k(gVector.u1q_1);
    // Inline function 'kotlin.require' call
    var tmp1_require = equals(gVector.t1q_1.n1u_1, linearMap.h1r_1);
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp1_require) {
      var tmp$ret$1;
      // Inline function 'com.github.shwaka.kohomology.dg.GLinearMap.invoke.<anonymous>' call
      tmp$ret$1 = 'Graded linear map contains a bug: getLinearMap returns incorrect linear map';
      var message_0 = tmp$ret$1;
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
    var newVector = linearMap.k1r(gVector.t1q_1);
    var tmp$ret$3;
    // Inline function 'kotlin.run' call
    var tmp2_run = this.y1j().c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$2;
    // Inline function 'com.github.shwaka.kohomology.dg.GLinearMap.invoke.<anonymous>' call
    tmp$ret$2 = tmp2_run.e1j(gVector.u1q_1, this.q1n());
    tmp$ret$3 = tmp$ret$2;
    var newDegree = tmp$ret$3;
    return this.p1n().f1k(newVector, newDegree);
  }
  function findPreimage(gVector) {
    if (!this.p1n().m1k(gVector))
      throw IllegalArgumentException_init_$Create$('Invalid gVector is given: ' + gVector + ' is not an element of ' + this.p1n());
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.y1j().c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.dg.GLinearMap.findPreimage.<anonymous>' call
    tmp$ret$0 = tmp0_run.f1u(gVector.u1q_1, this.q1n());
    tmp$ret$1 = tmp$ret$0;
    var sourceDegree = tmp$ret$1;
    var tmp0_safe_receiver = this.b1k(sourceDegree).j1v(gVector.t1q_1);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$3;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$2;
      // Inline function 'com.github.shwaka.kohomology.dg.GLinearMap.findPreimage.<anonymous>' call
      tmp$ret$2 = this.o1n().f1k(tmp0_safe_receiver, sourceDegree);
      tmp$ret$3 = tmp$ret$2;
      tmp = tmp$ret$3;
    }
    return tmp;
  }
  function kernel() {
    var tmp = Companion_getInstance_31();
    var tmp_0 = this.u1j();
    var tmp_1 = this.o1n();
    var tmp_2 = 'Ker(' + this.zc() + ')';
    return tmp.q1u(tmp_0, tmp_1, tmp_2, null, GLinearMap$kernel$lambda(this), 8, null);
  }
  function image() {
    var tmp = Companion_getInstance_31();
    var tmp_0 = this.u1j();
    var tmp_1 = this.p1n();
    var tmp_2 = 'Im(' + this.zc() + ')';
    return tmp.q1u(tmp_0, tmp_1, tmp_2, null, GLinearMap$image$lambda(this), 8, null);
  }
  function cokernel() {
    var tmp = Companion_getInstance_29();
    var tmp_0 = this.u1j();
    var tmp_1 = this.p1n();
    var tmp_2 = this.t1n();
    return tmp.c1t(tmp_0, tmp_1, tmp_2, null, 'Coker(' + this.zc() + ')', 8, null);
  }
  function induce(sourceSub, targetSub) {
    var gLinearMapDegree = this.q1n();
    var tmp = Companion_getInstance_21();
    var tmp_0 = this.q1n();
    var tmp_1 = this.u1j();
    var tmp_2 = this.zc();
    return tmp.f1v(sourceSub, targetSub, tmp_0, tmp_1, tmp_2, GLinearMap$induce$lambda(this, gLinearMapDegree, sourceSub, targetSub));
  }
  function induce_0(sourceQuot, targetQuot) {
    var gLinearMapDegree = this.q1n();
    var tmp = Companion_getInstance_21();
    var tmp_0 = this.q1n();
    var tmp_1 = this.u1j();
    var tmp_2 = this.zc();
    return tmp.f1v(sourceQuot, targetQuot, tmp_0, tmp_1, tmp_2, GLinearMap$induce$lambda_0(this, gLinearMapDegree, sourceQuot, targetQuot));
  }
  function induce_1(sourceSubQuot, targetSubQuot) {
    var gLinearMapDegree = this.q1n();
    var tmp = Companion_getInstance_21();
    var tmp_0 = this.q1n();
    var tmp_1 = this.u1j();
    var tmp_2 = this.zc();
    return tmp.f1v(sourceSubQuot, targetSubQuot, tmp_0, tmp_1, tmp_2, GLinearMap$induce$lambda_1(this, gLinearMapDegree, sourceSubQuot, targetSubQuot));
  }
  function induce_2(sourceQuot) {
    return Companion_getInstance_13().i1s(sourceQuot, induce_0.call(this, sourceQuot, sourceQuot));
  }
  function get_1(degree) {
    return this.b1k(this.y1j().oh(degree));
  }
  function subspaceContains(gVector) {
    var subQuotVectorSpace = this.b1k(gVector.u1q_1);
    return subQuotVectorSpace.o1z(gVector.t1q_1);
  }
  function ad(gVector) {
    var matrixSpace = this.o1p().u1j();
    var name = 'ad(' + gVector + ')';
    var tmp = Companion_getInstance_14();
    var tmp_0 = this.o1p();
    return tmp.l1s(tmp_0, gVector.u1q_1, matrixSpace, name, GLieAlgebraContext$ad$lambda(this, gVector));
  }
  function get_2(degree) {
    return this.b1k(this.y1j().oh(degree));
  }
  function subspaceContains_0(gVector) {
    var subQuotVectorSpace = this.b1k(gVector.u1q_1);
    return subQuotVectorSpace.o1z(gVector.t1q_1);
  }
  InvalidIdentifierException.prototype = Object.create(Exception.prototype);
  InvalidIdentifierException.prototype.constructor = InvalidIdentifierException;
  function isNotZero() {
    return !this.dj();
  }
  function get_3(degree) {
    return this.b1k(this.y1j().oh(degree));
  }
  function isNotZero_0() {
    return !this.dj();
  }
  function isOdd() {
    return !this.e22();
  }
  function koszulSign(other) {
    return Companion_getInstance_69().h22(this.e22() ? true : other.e22());
  }
  function get_zero_0() {
    return this.oh(0);
  }
  AugmentedDegreeContext.prototype = Object.create(DegreeContext.prototype);
  AugmentedDegreeContext.prototype.constructor = AugmentedDegreeContext;
  CharCategoryToken.prototype = Object.create(Token.prototype);
  CharCategoryToken.prototype.constructor = CharCategoryToken;
  GAlgebraElementASTGrammar.prototype = Object.create(Grammar.prototype);
  GAlgebraElementASTGrammar.prototype.constructor = GAlgebraElementASTGrammar;
  RegexToken.prototype = Object.create(Token.prototype);
  RegexToken.prototype.constructor = RegexToken;
  IllegalContextException.prototype = Object.create(RuntimeException.prototype);
  IllegalContextException.prototype.constructor = IllegalContextException;
  InvalidSizeException.prototype = Object.create(RuntimeException.prototype);
  InvalidSizeException.prototype.constructor = InvalidSizeException;
  function toProgress(targetIsomorphismUpTo) {
    return new MinimalModelProgress(this.a26(), targetIsomorphismUpTo, this.y25().i1o().i());
  }
  NextMMCalculator.prototype = Object.create(AbstractNextMMCalculator.prototype);
  NextMMCalculator.prototype.constructor = NextMMCalculator;
  CohomologicalNextMMCalculator.prototype = Object.create(NextMMCalculator.prototype);
  CohomologicalNextMMCalculator.prototype.constructor = CohomologicalNextMMCalculator;
  function get_generatorList() {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = this.t23();
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.<get-generatorList>.<anonymous>' call
      var monomial = Companion_getInstance_51().p2d(this.y1j(), this.t23(), item);
      tmp$ret$0 = this.h1k(monomial, item.q29_1);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function getDerivation(valueList, derivationDegree) {
    if (!(valueList.i() === this.t23().i()))
      throw new InvalidSizeException('Invalid size of the list of values of a derivation: ' + ('' + this.t23().i() + ' is expected but ' + valueList.i() + ' is given'));
    var tmp0_iterator = zip(this.t23(), valueList).f();
    while (tmp0_iterator.g()) {
      var tmp1_loop_parameter = tmp0_iterator.h();
      var indeterminate = tmp1_loop_parameter.a4();
      var value = tmp1_loop_parameter.b4();
      var tmp2_subject = value;
      if (tmp2_subject instanceof GVector) {
        var tmp$ret$1;
        // Inline function 'kotlin.run' call
        var tmp0_run = this.y1j().c1j();
        // Inline function 'kotlin.contracts.contract' call
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getDerivation.<anonymous>' call
        tmp$ret$0 = tmp0_run.e1j(indeterminate.q29_1, derivationDegree);
        tmp$ret$1 = tmp$ret$0;
        var expectedValueDegree = tmp$ret$1;
        // Inline function 'kotlin.require' call
        var tmp1_require = this.m1k(value);
        // Inline function 'kotlin.contracts.contract' call
        if (!tmp1_require) {
          var tmp$ret$2;
          // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getDerivation.<anonymous>' call
          tmp$ret$2 = 'Cannot construct Derivation ' + ('since the given value ' + value + ' is not an element of ' + this + ', but of ' + value.p1l());
          var message = tmp$ret$2;
          throw IllegalArgumentException_init_$Create$(toString(message));
        }
        // Inline function 'kotlin.require' call
        var tmp2_require = equals(value.u1q_1, expectedValueDegree);
        // Inline function 'kotlin.contracts.contract' call
        if (!tmp2_require) {
          var tmp$ret$3;
          // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getDerivation.<anonymous>' call
          tmp$ret$3 = 'Illegal degree: the degree of the value of ' + indeterminate + ' must be ' + ('' + indeterminate.q29_1 + ' + ' + derivationDegree + ' = ' + expectedValueDegree + ', ') + ('but ' + value.u1q_1 + ' was given');
          var message_0 = tmp$ret$3;
          throw IllegalArgumentException_init_$Create$(toString(message_0));
        }
      } else {
        if (tmp2_subject instanceof ZeroGVector) {
          // Inline function 'kotlin.require' call
          var tmp3_require = this.n1k(value);
          // Inline function 'kotlin.contracts.contract' call
          if (!tmp3_require) {
            var tmp$ret$4;
            // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getDerivation.<anonymous>' call
            tmp$ret$4 = 'Cannot construct Derivation ' + ('since zeroGVector.gVectorSpace is not an element of ' + this + ', but of ' + value.p1l());
            var message_1 = tmp$ret$4;
            throw IllegalArgumentException_init_$Create$(toString(message_1));
          }
        }
      }
    }
    var tmp$ret$9;
    // Inline function 'kotlin.collections.mapIndexed' call
    var tmp$ret$8;
    // Inline function 'kotlin.collections.mapIndexedTo' call
    var tmp0_mapIndexedTo = ArrayList_init_$Create$(collectionSizeOrDefault(valueList, 10));
    var index = 0;
    var tmp0_iterator_0 = valueList.f();
    while (tmp0_iterator_0.g()) {
      var item = tmp0_iterator_0.h();
      var tmp$ret$7;
      // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getDerivation.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      var tmp4__anonymous__pkmkx7 = checkIndexOverflow(tmp1);
      var tmp$ret$6;
      // Inline function 'kotlin.run' call
      var tmp0_run_0 = this.y1j().c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$5;
      // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getDerivation.<anonymous>.<anonymous>' call
      tmp$ret$5 = tmp0_run_0.e1j(this.t23().l(tmp4__anonymous__pkmkx7).q29_1, derivationDegree);
      tmp$ret$6 = tmp$ret$5;
      var valueDegree = tmp$ret$6;
      tmp$ret$7 = this.l1k(item, valueDegree);
      tmp0_mapIndexedTo.a(tmp$ret$7);
    }
    tmp$ret$8 = tmp0_mapIndexedTo;
    tmp$ret$9 = tmp$ret$8;
    var gVectorValueList = tmp$ret$9;
    var name = 'Derivation(' + joinToString$default(valueList, ', ', null, null, 0, null, FreeGAlgebra$getDerivation$lambda, 30, null) + ')';
    var tmp = Companion_getInstance_13();
    var tmp_0 = this.u1j();
    return tmp.j1s(this, derivationDegree, tmp_0, name, FreeGAlgebra$getDerivation$lambda_0(this, derivationDegree, gVectorValueList));
  }
  function getDerivation_0(valueList, derivationDegree) {
    return this.r29(valueList, this.y1j().oh(derivationDegree));
  }
  function getGAlgebraMap(target, valueList) {
    if (!(valueList.i() === this.t23().i()))
      throw new InvalidSizeException('Invalid size of the list of values of an algebra map');
    var tmp0_iterator = zip(this.t23(), valueList).f();
    while (tmp0_iterator.g()) {
      var tmp1_loop_parameter = tmp0_iterator.h();
      var indeterminate = tmp1_loop_parameter.a4();
      var value = tmp1_loop_parameter.b4();
      var tmp2_subject = value;
      if (tmp2_subject instanceof GVector) {
        // Inline function 'kotlin.require' call
        var tmp0_require = target.m1k(value);
        // Inline function 'kotlin.contracts.contract' call
        if (!tmp0_require) {
          var tmp$ret$0;
          // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getGAlgebraMap.<anonymous>' call
          tmp$ret$0 = 'Cannot construct GAlgebraMap ' + ('since the given value ' + value + ' is not an element of ' + target + ', but of ' + value.p1l());
          var message = tmp$ret$0;
          throw IllegalArgumentException_init_$Create$(toString(message));
        }
        // Inline function 'kotlin.require' call
        var tmp1_require = equals(value.u1q_1, indeterminate.q29_1);
        // Inline function 'kotlin.contracts.contract' call
        if (!tmp1_require) {
          var tmp$ret$1;
          // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getGAlgebraMap.<anonymous>' call
          tmp$ret$1 = 'Illegal degree: the degree of the value of ' + indeterminate + ' must be ' + indeterminate.q29_1 + ('but ' + value.u1q_1 + ' was given');
          var message_0 = tmp$ret$1;
          throw IllegalArgumentException_init_$Create$(toString(message_0));
        }
      } else {
        if (tmp2_subject instanceof ZeroGVector) {
          // Inline function 'kotlin.require' call
          var tmp2_require = target.n1k(value);
          // Inline function 'kotlin.contracts.contract' call
          if (!tmp2_require) {
            var tmp$ret$2;
            // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getGAlgebraMap.<anonymous>' call
            tmp$ret$2 = 'Cannot construct GAlgebraMap ' + ('since zeroGVector.gVectorSpace is not an element of ' + target + ', but of ' + value.p1l());
            var message_1 = tmp$ret$2;
            throw IllegalArgumentException_init_$Create$(toString(message_1));
          }
        }
      }
    }
    var tmp$ret$5;
    // Inline function 'kotlin.collections.mapIndexed' call
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapIndexedTo' call
    var tmp0_mapIndexedTo = ArrayList_init_$Create$(collectionSizeOrDefault(valueList, 10));
    var index = 0;
    var tmp0_iterator_0 = valueList.f();
    while (tmp0_iterator_0.g()) {
      var item = tmp0_iterator_0.h();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getGAlgebraMap.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      var tmp3__anonymous__ufb84q = checkIndexOverflow(tmp1);
      var valueDegree = this.t23().l(tmp3__anonymous__ufb84q).q29_1;
      tmp$ret$3 = target.l1k(item, valueDegree);
      tmp0_mapIndexedTo.a(tmp$ret$3);
    }
    tmp$ret$4 = tmp0_mapIndexedTo;
    tmp$ret$5 = tmp$ret$4;
    var gVectorValueList = tmp$ret$5;
    var name = 'AlgebraMap(' + joinToString$default(valueList, ', ', null, null, 0, null, FreeGAlgebra$getGAlgebraMap$lambda, 30, null) + ')';
    var tmp = Companion_getInstance_17();
    var tmp_0 = this.u1j();
    return tmp.w1t(this, target, tmp_0, name, FreeGAlgebra$getGAlgebraMap$lambda_0(this, target, gVectorValueList));
  }
  function containsIndeterminate(indeterminateIndex, element) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.any' call
      var tmp0_any = element.t1q_1.a1w();
      if (tmp0_any.p()) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp$ret$1;
      // Inline function 'kotlin.collections.iterator' call
      tmp$ret$1 = tmp0_any.d1().f();
      var tmp0_iterator = tmp$ret$1;
      while (tmp0_iterator.g()) {
        var element_0 = tmp0_iterator.h();
        var tmp$ret$3;
        // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.containsIndeterminate.<anonymous>' call
        var tmp$ret$2;
        // Inline function 'kotlin.collections.component1' call
        tmp$ret$2 = element_0.e1();
        var monomial = tmp$ret$2;
        tmp$ret$3 = monomial.q2d(indeterminateIndex);
        if (tmp$ret$3) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    return tmp$ret$0;
  }
  function parse_0(text) {
    var generatorList = this.r2a();
    return this.y1k(generatorList, text);
  }
  function getGeneratorsForParser() {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = zip(this.t23(), this.i1o());
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getGeneratorsForParser.<anonymous>' call
      var indeterminate = item.a4();
      var generator = item.b4();
      tmp$ret$0 = new Pair(indeterminate.p29_1.c22().q2a_1, generator);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function convertDegree(degreeMorphism) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = this.t23();
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.convertDegree.<anonymous>' call
      tmp$ret$0 = item.r2d(degreeMorphism);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var newIndeterminateList = tmp$ret$2;
    var tmp = Companion_getInstance_41();
    var tmp_0 = this.u1j();
    var tmp_1 = degreeMorphism.p1n();
    var newFreeGAlgebra = tmp.j2d(tmp_0, tmp_1, newIndeterminateList, null, 8, null);
    var freeMonoidMorphism = new FreeGMonoidMorphismByDegreeChange(this.e2b(), degreeMorphism);
    var tmp_2 = Companion_getInstance_22();
    var tmp_3 = this.u1j();
    var tmp_4 = this.zc() + ' (degree changed)';
    var gLinearMapWithDegreeChange = tmp_2.s1v(this, newFreeGAlgebra, degreeMorphism, tmp_3, tmp_4, FreeGAlgebra$convertDegree$lambda(freeMonoidMorphism));
    return new Pair(newFreeGAlgebra, gLinearMapWithDegreeChange);
  }
  function getDGAlgebraMap(target, valueList) {
    var gAlgebraMap = this.m2a(target, valueList);
    var tmp0_iterator = this.i1o().f();
    while (tmp0_iterator.g()) {
      var v = tmp0_iterator.h();
      var fdv = gAlgebraMap.o1j(this.k1j().o1j(v));
      var dfv = target.k1j().o1j(gAlgebraMap.o1j(v));
      if (!fdv.equals(dfv)) {
        throw IllegalArgumentException_init_$Create$('The given algebra map does not commute with the differential on the generator ' + v + ':\n' + ('f(d(' + v + ')) = ' + fdv + ', d(f(' + v + ')) = ' + dfv));
      }
    }
    return Companion_getInstance_3().i1n(this, target, gAlgebraMap);
  }
  function convertDegree_0(degreeMorphism) {
    var tmp0_container = convertDegree.call(this, degreeMorphism);
    var newFreeGAlgebra = tmp0_container.a4();
    var changeDegree = tmp0_container.b4();
    var tmp$ret$4;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = this.i1o();
    var tmp$ret$3;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$2;
      // Inline function 'com.github.shwaka.kohomology.free.FreeDGAlgebra.convertDegree.<anonymous>' call
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this.c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.FreeDGAlgebra.convertDegree.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.n1j().o1j(item);
      tmp$ret$1 = tmp$ret$0;
      var dv = tmp$ret$1;
      tmp$ret$2 = changeDegree.z1v(dv);
      tmp0_mapTo.a(tmp$ret$2);
    }
    tmp$ret$3 = tmp0_mapTo;
    tmp$ret$4 = tmp$ret$3;
    var differentialValueList = tmp$ret$4;
    var differential = newFreeGAlgebra.d2a(differentialValueList, 1);
    var newFreeDGAlgebra = Companion_getInstance_39().a2a(newFreeGAlgebra, differential);
    return new Pair(newFreeDGAlgebra, changeDegree);
  }
  function toIntDegree() {
    var degreeMorphism = new AugmentationDegreeMorphism(this.y1j());
    return this.n2a(degreeMorphism);
  }
  function toJson() {
    var intFreeDGA = this.o2a().z4_1;
    var tmp = PrintType_CODE_getInstance();
    var printer = Printer_init_$Create$(PrintConfig_init_$Create$(tmp, null, null, null, ShowShift_S_getInstance(), 14, null));
    var tmp$ret$4;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = zip(intFreeDGA.t23(), intFreeDGA.i1o());
    var tmp$ret$3;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$2;
      // Inline function 'com.github.shwaka.kohomology.free.FreeDGAlgebra.toJson.<anonymous>' call
      var indeterminate = item.a4();
      var generator = item.b4();
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = intFreeDGA.c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.FreeDGAlgebra.toJson.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.n1j().o1j(generator);
      tmp$ret$1 = tmp$ret$0;
      var differentialValue = tmp$ret$1;
      tmp$ret$2 = new GeneratorOfFreeDGA(indeterminate.p29_1.c22().q2a_1, indeterminate.q29_1, printer.u29(differentialValue));
      tmp0_mapTo.a(tmp$ret$2);
    }
    tmp$ret$3 = tmp0_mapTo;
    tmp$ret$4 = tmp$ret$3;
    var generatorList = tmp$ret$4;
    return generatorListToJson(generatorList);
  }
  function parse_1(text) {
    return this.h1n().z29(text);
  }
  GeneratorSerializer.prototype = Object.create(JsonTransformingSerializer.prototype);
  GeneratorSerializer.prototype.constructor = GeneratorSerializer;
  HomologicalNextMMCalculator.prototype = Object.create(NextMMCalculator.prototype);
  HomologicalNextMMCalculator.prototype.constructor = HomologicalNextMMCalculator;
  function toString_1(printConfig) {
    return toString(this);
  }
  MMIndeterminateType.prototype = Object.create(Enum.prototype);
  MMIndeterminateType.prototype.constructor = MMIndeterminateType;
  function listDegreesForAugmentedDegree(augmentedDegree) {
    throw new NotImplementedError('Monoid.listDegreesForAugmentedDegree() is not implemented for a general monoid');
  }
  function toString_2(printConfig) {
    return toString(this);
  }
  Zero_0.prototype = Object.create(SignedOrZero.prototype);
  Zero_0.prototype.constructor = Zero_0;
  Signed.prototype = Object.create(SignedOrZero.prototype);
  Signed.prototype.constructor = Signed;
  PositiveIndeterminateList.prototype = Object.create(IndeterminateList.prototype);
  PositiveIndeterminateList.prototype.constructor = PositiveIndeterminateList;
  NegativeIndeterminateList.prototype = Object.create(IndeterminateList.prototype);
  NegativeIndeterminateList.prototype.constructor = NegativeIndeterminateList;
  DecomposedSparseRowEchelonForm.prototype = Object.create(RowEchelonForm.prototype);
  DecomposedSparseRowEchelonForm.prototype.constructor = DecomposedSparseRowEchelonForm;
  function getIdentity(dim) {
    var one = this.e1k().n1m();
    var tmp$ret$2;
    // Inline function 'kotlin.collections.List' call
    var tmp$ret$1;
    // Inline function 'kotlin.collections.MutableList' call
    var list = ArrayList_init_$Create$(dim);
    // Inline function 'kotlin.repeat' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    if (inductionVariable < dim)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.collections.MutableList.<anonymous>' call
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.linalg.MatrixSpace.getIdentity.<anonymous>' call
        tmp$ret$0 = to(index, mapOf_0(to(index, one)));
        list.a(tmp$ret$0);
      }
       while (inductionVariable < dim);
    tmp$ret$1 = list;
    tmp$ret$2 = tmp$ret$1;
    var rowMap = toMap(tmp$ret$2);
    return this.g2k(rowMap, dim, dim);
  }
  function fromRowList$default(rowList, colCount, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      colCount = null;
    return $handler == null ? this.p2l(rowList, colCount) : $handler(rowList, colCount);
  }
  function fromColList(colList, rowCount) {
    var tmp;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.isNotEmpty' call
    tmp$ret$0 = !colList.p();
    if (tmp$ret$0) {
      tmp = colList.l(0).i();
    } else {
      if (!(rowCount == null)) {
        tmp = rowCount;
      } else {
        throw IllegalArgumentException_init_$Create$('Column list is empty and rowCount is not specified');
      }
    }
    var rowCountNonNull = tmp;
    var colCount = colList.i();
    var tmp$ret$6;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = until(0, rowCountNonNull);
    var tmp$ret$5;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.m1_1;
    var last = tmp0_map.n1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$4;
        // Inline function 'com.github.shwaka.kohomology.linalg.MatrixSpace.fromColList.<anonymous>' call
        var tmp$ret$3;
        // Inline function 'kotlin.collections.map' call
        var tmp0_map_0 = until(0, colCount);
        var tmp$ret$2;
        // Inline function 'kotlin.collections.mapTo' call
        var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
        var inductionVariable_0 = tmp0_map_0.m1_1;
        var last_0 = tmp0_map_0.n1_1;
        if (inductionVariable_0 <= last_0)
          do {
            var item_0 = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var tmp$ret$1;
            // Inline function 'com.github.shwaka.kohomology.linalg.MatrixSpace.fromColList.<anonymous>.<anonymous>' call
            tmp$ret$1 = colList.l(item_0).l(item);
            tmp0_mapTo_0.a(tmp$ret$1);
          }
           while (!(item_0 === last_0));
        tmp$ret$2 = tmp0_mapTo_0;
        tmp$ret$3 = tmp$ret$2;
        tmp$ret$4 = tmp$ret$3;
        tmp0_mapTo.a(tmp$ret$4);
      }
       while (!(item === last));
    tmp$ret$5 = tmp0_mapTo;
    tmp$ret$6 = tmp$ret$5;
    var rows = tmp$ret$6;
    return this.p2l(rows, colCount);
  }
  function fromColMap(colMap, rowCount, colCount) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp$ret$0 = LinkedHashMap_init_$Create$();
    var rowMap = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$1 = colMap.d1().f();
    var tmp0_iterator = tmp$ret$1;
    while (tmp0_iterator.g()) {
      var tmp1_loop_parameter = tmp0_iterator.h();
      var tmp$ret$2;
      // Inline function 'kotlin.collections.component1' call
      tmp$ret$2 = tmp1_loop_parameter.e1();
      var colInd = tmp$ret$2;
      var tmp$ret$3;
      // Inline function 'kotlin.collections.component2' call
      tmp$ret$3 = tmp1_loop_parameter.f1();
      var col = tmp$ret$3;
      var tmp$ret$4;
      // Inline function 'kotlin.collections.iterator' call
      tmp$ret$4 = col.d1().f();
      var tmp2_iterator = tmp$ret$4;
      while (tmp2_iterator.g()) {
        var tmp3_loop_parameter = tmp2_iterator.h();
        var tmp$ret$5;
        // Inline function 'kotlin.collections.component1' call
        tmp$ret$5 = tmp3_loop_parameter.e1();
        var rowInd = tmp$ret$5;
        var tmp$ret$6;
        // Inline function 'kotlin.collections.component2' call
        tmp$ret$6 = tmp3_loop_parameter.f1();
        var elm = tmp$ret$6;
        var tmp$ret$9;
        // Inline function 'kotlin.collections.getOrPut' call
        var value = rowMap.t(rowInd);
        var tmp;
        if (value == null) {
          var tmp$ret$8;
          // Inline function 'com.github.shwaka.kohomology.linalg.MatrixSpace.fromColMap.<anonymous>' call
          var tmp$ret$7;
          // Inline function 'kotlin.collections.mutableMapOf' call
          tmp$ret$7 = LinkedHashMap_init_$Create$();
          tmp$ret$8 = tmp$ret$7;
          var answer = tmp$ret$8;
          rowMap.u(rowInd, answer);
          tmp = answer;
        } else {
          tmp = value;
        }
        tmp$ret$9 = tmp;
        var row = tmp$ret$9;
        // Inline function 'kotlin.collections.set' call
        row.u(colInd, elm);
      }
    }
    return this.g2k(rowMap, rowCount, colCount);
  }
  function fromNumVectorList(numVectors, dim) {
    if (numVectors.p() ? dim == null : false)
      throw IllegalArgumentException_init_$Create$('Vector list is empty and dim is not specified');
    var tmp0_elvis_lhs = dim;
    var dimNotNull = tmp0_elvis_lhs == null ? numVectors.l(0).q25() : tmp0_elvis_lhs;
    var tmp$ret$3;
    // Inline function 'kotlin.collections.mapIndexedNotNull' call
    var tmp$ret$2;
    // Inline function 'kotlin.collections.mapIndexedNotNullTo' call
    var tmp1_mapIndexedNotNullTo = ArrayList_init_$Create$_0();
    // Inline function 'kotlin.collections.forEachIndexed' call
    var index = 0;
    var tmp0_iterator = numVectors.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      // Inline function 'kotlin.collections.mapIndexedNotNullTo.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      var tmp0__anonymous__q1qw7t = checkIndexOverflow(tmp1);
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.MatrixSpace.fromNumVectorList.<anonymous>' call
      tmp$ret$0 = item.dj() ? null : new Pair(tmp0__anonymous__q1qw7t, item.y2m());
      var tmp0_safe_receiver = tmp$ret$0;
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$1;
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        tmp1_mapIndexedNotNullTo.a(tmp0_safe_receiver);
        tmp$ret$1 = Unit_getInstance();
      }
    }
    tmp$ret$2 = tmp1_mapIndexedNotNullTo;
    tmp$ret$3 = tmp$ret$2;
    var colMap = toMap(tmp$ret$3);
    return this.b2m(colMap, dimNotNull, numVectors.i());
  }
  function toList_2() {
    var tmp$ret$5;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = until(0, this.c2m());
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.m1_1;
    var last = tmp0_map.n1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$3;
        // Inline function 'com.github.shwaka.kohomology.linalg.Matrix.toList.<anonymous>' call
        var tmp$ret$2;
        // Inline function 'kotlin.collections.map' call
        var tmp0_map_0 = until(0, this.d2m());
        var tmp$ret$1;
        // Inline function 'kotlin.collections.mapTo' call
        var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
        var inductionVariable_0 = tmp0_map_0.m1_1;
        var last_0 = tmp0_map_0.n1_1;
        if (inductionVariable_0 <= last_0)
          do {
            var item_0 = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var tmp$ret$0;
            // Inline function 'com.github.shwaka.kohomology.linalg.Matrix.toList.<anonymous>.<anonymous>' call
            tmp$ret$0 = this.n2l(item, item_0);
            tmp0_mapTo_0.a(tmp$ret$0);
          }
           while (!(item_0 === last_0));
        tmp$ret$1 = tmp0_mapTo_0;
        tmp$ret$2 = tmp$ret$1;
        tmp$ret$3 = tmp$ret$2;
        tmp0_mapTo.a(tmp$ret$3);
      }
       while (!(item === last));
    tmp$ret$4 = tmp0_mapTo;
    tmp$ret$5 = tmp$ret$4;
    return tmp$ret$5;
  }
  function toNumVectorList() {
    var tmp$ret$5;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = until(0, this.d2m());
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.m1_1;
    var last = tmp0_map.n1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$3;
        // Inline function 'com.github.shwaka.kohomology.linalg.Matrix.toNumVectorList.<anonymous>' call
        var tmp = this.x1j();
        var tmp$ret$2;
        // Inline function 'kotlin.collections.map' call
        var tmp0_map_0 = until(0, this.c2m());
        var tmp$ret$1;
        // Inline function 'kotlin.collections.mapTo' call
        var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
        var inductionVariable_0 = tmp0_map_0.m1_1;
        var last_0 = tmp0_map_0.n1_1;
        if (inductionVariable_0 <= last_0)
          do {
            var item_0 = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var tmp$ret$0;
            // Inline function 'com.github.shwaka.kohomology.linalg.Matrix.toNumVectorList.<anonymous>.<anonymous>' call
            tmp$ret$0 = this.n2l(item_0, item);
            tmp0_mapTo_0.a(tmp$ret$0);
          }
           while (!(item_0 === last_0));
        tmp$ret$1 = tmp0_mapTo_0;
        tmp$ret$2 = tmp$ret$1;
        tmp$ret$3 = tmp.h2l(tmp$ret$2);
        tmp0_mapTo.a(tmp$ret$3);
      }
       while (!(item === last));
    tmp$ret$4 = tmp0_mapTo;
    tmp$ret$5 = tmp$ret$4;
    return tmp$ret$5;
  }
  function getOneAtIndex(index, dim) {
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.e1k().c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.linalg.NumVectorSpace.getOneAtIndex.<anonymous>' call
    tmp$ret$0 = mapOf_0(to(index, tmp0_run.n1m()));
    tmp$ret$1 = tmp$ret$0;
    var valueMap = tmp$ret$1;
    return this.u2m(valueMap, dim);
  }
  function fromReducedValueMap(valueMap, dim) {
    return this.u2m(valueMap, dim);
  }
  DenseRowEchelonForm.prototype = Object.create(RowEchelonForm.prototype);
  DenseRowEchelonForm.prototype.constructor = DenseRowEchelonForm;
  function toString_3(printType, withSign) {
    return this.u2t(PrintConfig_init_$Create$(printType, null, null, null, null, 30, null), withSign);
  }
  function toString_4(printConfig) {
    return this.u2t(printConfig, true);
  }
  function isNotZero_1() {
    return !this.dj();
  }
  function unaryMinusOf(scalar) {
    return this.s2n(scalar, this.oh(-1));
  }
  function times_11(_this__u8e3s4, numVector) {
    return this.u1j().i2l(_this__u8e3s4, numVector);
  }
  function get_rowEchelonForm(_this__u8e3s4) {
    return this.u1j().l2l(_this__u8e3s4);
  }
  function rowSlice(_this__u8e3s4, rowRange) {
    return this.u1j().u2l(_this__u8e3s4, rowRange);
  }
  function colSlice(_this__u8e3s4, colRange) {
    return this.u1j().w2l(_this__u8e3s4, colRange);
  }
  function join(_this__u8e3s4) {
    if (_this__u8e3s4.p())
      throw IllegalArgumentException_init_$Create$('Empty list of matrices cannot be reduced');
    var tmp$ret$1;
    // Inline function 'kotlin.collections.reduce' call
    var iterator = _this__u8e3s4.f();
    if (!iterator.g())
      throw UnsupportedOperationException_init_$Create$("Empty collection can't be reduced.");
    var accumulator = iterator.h();
    while (iterator.g()) {
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.MatrixContext.join.<anonymous>' call
      var tmp0__anonymous__q1qw7t = accumulator;
      var tmp1__anonymous__uwfjfc = iterator.h();
      tmp$ret$0 = this.u1j().s2l(tmp0__anonymous__q1qw7t, tmp1__anonymous__uwfjfc);
      accumulator = tmp$ret$0;
    }
    tmp$ret$1 = accumulator;
    return tmp$ret$1;
  }
  function transpose(_this__u8e3s4) {
    return this.u1j().o2l(_this__u8e3s4);
  }
  function computeKernelBasis(_this__u8e3s4) {
    var rowEchelonForm = this.z2n(_this__u8e3s4);
    var dim = _this__u8e3s4.d2m();
    var pivots = rowEchelonForm.n2k();
    var firstNonZeroIndex = pivots.p() ? _this__u8e3s4.d2m() : pivots.l(0);
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = until(0, firstNonZeroIndex);
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.m1_1;
    var last = tmp0_map.n1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.linalg.MatrixContext.computeKernelBasis.<anonymous>' call
        tmp$ret$0 = _this__u8e3s4.x1j().v2m(item, dim);
        tmp0_mapTo.a(tmp$ret$0);
      }
       while (!(item === last));
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var trivialVectors = tmp$ret$2;
    var matrix = rowEchelonForm.m2k();
    var tmp$ret$8;
    // Inline function 'kotlin.collections.map' call
    var tmp1_map = get_indices_0(pivots);
    var tmp$ret$7;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
    var inductionVariable_0 = tmp1_map.m1_1;
    var last_0 = tmp1_map.n1_1;
    if (inductionVariable_0 <= last_0)
      do {
        var item_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var tmp$ret$6;
        // Inline function 'com.github.shwaka.kohomology.linalg.MatrixContext.computeKernelBasis.<anonymous>' call
        var start = pivots.l(item_0) + 1 | 0;
        var limit = (item_0 + 1 | 0) < pivots.i() ? pivots.l(item_0 + 1 | 0) : dim;
        var tmp$ret$5;
        // Inline function 'kotlin.collections.map' call
        var tmp0_map_0 = until(start, limit);
        var tmp$ret$4;
        // Inline function 'kotlin.collections.mapTo' call
        var tmp0_mapTo_1 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
        var inductionVariable_1 = tmp0_map_0.m1_1;
        var last_1 = tmp0_map_0.n1_1;
        if (inductionVariable_1 <= last_1)
          do {
            var item_1 = inductionVariable_1;
            inductionVariable_1 = inductionVariable_1 + 1 | 0;
            var tmp$ret$3;
            // Inline function 'com.github.shwaka.kohomology.linalg.MatrixContext.computeKernelBasis.<anonymous>.<anonymous>' call
            var numVector = _this__u8e3s4.x1j().v2m(item_1, dim);
            var inductionVariable_2 = item_0;
            if (0 <= inductionVariable_2)
              do {
                var q = inductionVariable_2;
                inductionVariable_2 = inductionVariable_2 + -1 | 0;
                numVector = this.w1l(numVector, this.j1l(_this__u8e3s4.x1j().v2m(pivots.l(q), dim), matrix.n2l(q, item_1)));
              }
               while (0 <= inductionVariable_2);
            tmp$ret$3 = numVector;
            tmp0_mapTo_1.a(tmp$ret$3);
          }
           while (!(item_1 === last_1));
        tmp$ret$4 = tmp0_mapTo_1;
        tmp$ret$5 = tmp$ret$4;
        tmp$ret$6 = tmp$ret$5;
        tmp0_mapTo_0.a(tmp$ret$6);
      }
       while (!(item_0 === last_0));
    tmp$ret$7 = tmp0_mapTo_0;
    tmp$ret$8 = tmp$ret$7;
    var vectorsForPivots = flatten(tmp$ret$8);
    return plus(trivialVectors, vectorsForPivots);
  }
  function findPreimage_0(_this__u8e3s4, numVector) {
    if (!(_this__u8e3s4.c2m() === numVector.q25()))
      throw new InvalidSizeException('Cannot consider preimage since numVector.dim != matrix.colCount');
    if (numVector.dj())
      return _this__u8e3s4.x1j().k1k(_this__u8e3s4.d2m());
    var pivots = this.z2n(_this__u8e3s4).n2k();
    var reducedTransformation = this.z2n(_this__u8e3s4).o2k();
    var transformedNumVector = this.b2o(reducedTransformation, numVector);
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.any' call
      var tmp0_any = until(pivots.i(), _this__u8e3s4.c2m());
      var tmp;
      if (isInterface(tmp0_any, Collection)) {
        tmp = tmp0_any.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var inductionVariable = tmp0_any.m1_1;
      var last = tmp0_any.n1_1;
      if (inductionVariable <= last)
        do {
          var element = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp$ret$1;
          // Inline function 'com.github.shwaka.kohomology.linalg.MatrixContext.findPreimage.<anonymous>' call
          tmp$ret$1 = !equals(this.e1m(transformedNumVector, element), this.m1m());
          if (tmp$ret$1) {
            tmp$ret$0 = true;
            break $l$block_0;
          }
        }
         while (!(element === last));
      tmp$ret$0 = false;
    }
    if (tmp$ret$0)
      return null;
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapIndexed' call
    var tmp$ret$3;
    // Inline function 'kotlin.collections.mapIndexedTo' call
    var tmp0_mapIndexedTo = ArrayList_init_$Create$(collectionSizeOrDefault(pivots, 10));
    var index = 0;
    var tmp0_iterator = pivots.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$2;
      // Inline function 'com.github.shwaka.kohomology.linalg.MatrixContext.findPreimage.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      var tmp1__anonymous__uwfjfc = checkIndexOverflow(tmp1);
      var value = this.e1m(transformedNumVector, tmp1__anonymous__uwfjfc);
      tmp$ret$2 = new Pair(item, value);
      tmp0_mapIndexedTo.a(tmp$ret$2);
    }
    tmp$ret$3 = tmp0_mapIndexedTo;
    tmp$ret$4 = tmp$ret$3;
    var valueMap = toMap(tmp$ret$4);
    return _this__u8e3s4.x1j().u2m(valueMap, _this__u8e3s4.d2m());
  }
  SparseMatrixSpace.prototype = Object.create(AbstractSparseMatrixSpace.prototype);
  SparseMatrixSpace.prototype.constructor = SparseMatrixSpace;
  DecomposedSparseMatrixSpace.prototype = Object.create(AbstractSparseMatrixSpace.prototype);
  DecomposedSparseMatrixSpace.prototype.constructor = DecomposedSparseMatrixSpace;
  SparseRowEchelonForm.prototype = Object.create(RowEchelonForm.prototype);
  SparseRowEchelonForm.prototype.constructor = SparseRowEchelonForm;
  PrintType.prototype = Object.create(Enum.prototype);
  PrintType.prototype.constructor = PrintType;
  ShowShift.prototype = Object.create(Enum.prototype);
  ShowShift.prototype.constructor = ShowShift;
  Sign.prototype = Object.create(Enum.prototype);
  Sign.prototype.constructor = Sign;
  function image_0(source1Sub, source2Sub) {
    var tmp$ret$5;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = source1Sub.h1u();
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.vectsp.BilinearMap.image.<anonymous>' call
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map_0 = source2Sub.h1u();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
      var tmp0_iterator_0 = tmp0_map_0.f();
      while (tmp0_iterator_0.g()) {
        var item_0 = tmp0_iterator_0.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.vectsp.BilinearMap.image.<anonymous>.<anonymous>' call
        tmp$ret$0 = this.o1u(item, item_0);
        tmp0_mapTo_0.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo_0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_mapTo.a(tmp$ret$3);
    }
    tmp$ret$4 = tmp0_mapTo;
    tmp$ret$5 = tmp$ret$4;
    var imageGenerator = flatten(tmp$ret$5);
    return Companion_getInstance_79().i1u(this.u1j(), this.p1n(), imageGenerator);
  }
  function get_dim() {
    return this.d1v().i();
  }
  function get_field_0() {
    return this.x1j().e1k();
  }
  function contains_1(vector) {
    return equals(vector.n1u_1, this);
  }
  function add_0(a, b) {
    if (!this.b2v(a))
      throw new IllegalContextException('The vector ' + a + ' is not contained in the vector space ' + this);
    if (!this.b2v(b))
      throw new IllegalContextException('The vector ' + b + ' is not contained in the vector space ' + this);
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.x1j().c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.vectsp.VectorSpace.add.<anonymous>' call
    tmp$ret$0 = new Vector(tmp0_run.s1l(a.m1u_1, b.m1u_1), this);
    tmp$ret$1 = tmp$ret$0;
    return tmp$ret$1;
  }
  function subtract_0(a, b) {
    if (!this.b2v(a))
      throw new IllegalContextException('The vector ' + a + ' is not contained in the vector space ' + this);
    if (!this.b2v(b))
      throw new IllegalContextException('The vector ' + b + ' is not contained in the vector space ' + this);
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.x1j().c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.vectsp.VectorSpace.subtract.<anonymous>' call
    tmp$ret$0 = new Vector(tmp0_run.w1l(a.m1u_1, b.m1u_1), this);
    tmp$ret$1 = tmp$ret$0;
    return tmp$ret$1;
  }
  function multiply_2(scalar, vector) {
    if (!this.e1k().m2m(scalar))
      throw new IllegalContextException('The scalar ' + scalar + ' does not match the context (' + this.e1k() + ')');
    if (!this.b2v(vector))
      throw new IllegalContextException('The vector ' + vector + ' is not contained in the vector space ' + this);
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.x1j().c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.vectsp.VectorSpace.multiply.<anonymous>' call
    tmp$ret$0 = new Vector(tmp0_run.j1l(vector.m1u_1, scalar), vector.n1u_1);
    tmp$ret$1 = tmp$ret$0;
    return tmp$ret$1;
  }
  function divideByVector(a, b) {
    if (!this.b2v(a))
      throw new IllegalContextException('The vector ' + a + ' is not contained in the vector space ' + this);
    if (!this.b2v(b))
      throw new IllegalContextException('The vector ' + b + ' is not contained in the vector space ' + this);
    if (b.dj())
      throw ArithmeticException_init_$Create$('Division by zero vector');
    return this.x1j().p2m(a.m1u_1, b.m1u_1);
  }
  function fromNumVector(numVector) {
    return new Vector(numVector, this);
  }
  function fromCoeffList(coeffList) {
    var numVector = this.x1j().h2l(coeffList);
    return this.t2v(numVector);
  }
  function fromBasisName_0(basisName) {
    var index = this.n2v(basisName);
    var coeffMap = mapOf_0(to(index, this.e1k().n1m()));
    var numVector = this.x1j().w2m(coeffMap, this.q25());
    return this.t2v(numVector);
  }
  function get_zeroVector() {
    return new Vector(this.x1j().k1k(this.q25()), this);
  }
  function getBasis_1() {
    var zero = this.e1k().m1m();
    var one = this.e1k().n1m();
    var tmp$ret$5;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = until(0, this.q25());
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.m1_1;
    var last = tmp0_map.n1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$3;
        // Inline function 'com.github.shwaka.kohomology.vectsp.VectorSpace.getBasis.<anonymous>' call
        var tmp$ret$2;
        // Inline function 'kotlin.collections.map' call
        var tmp0_map_0 = until(0, this.q25());
        var tmp$ret$1;
        // Inline function 'kotlin.collections.mapTo' call
        var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
        var inductionVariable_0 = tmp0_map_0.m1_1;
        var last_0 = tmp0_map_0.n1_1;
        if (inductionVariable_0 <= last_0)
          do {
            var item_0 = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var tmp$ret$0;
            // Inline function 'com.github.shwaka.kohomology.vectsp.VectorSpace.getBasis.<anonymous>.<anonymous>' call
            tmp$ret$0 = item === item_0 ? one : zero;
            tmp0_mapTo_0.a(tmp$ret$0);
          }
           while (!(item_0 === last_0));
        tmp$ret$1 = tmp0_mapTo_0;
        tmp$ret$2 = tmp$ret$1;
        var coeff = tmp$ret$2;
        tmp$ret$3 = this.u2v(coeff);
        tmp0_mapTo.a(tmp$ret$3);
      }
       while (!(item === last));
    tmp$ret$4 = tmp0_mapTo;
    tmp$ret$5 = tmp$ret$4;
    return tmp$ret$5;
  }
  function plus_5(_this__u8e3s4, other) {
    return this.q2y().q2v(_this__u8e3s4, other);
  }
  function minus_3(_this__u8e3s4, other) {
    return this.q2y().r2v(_this__u8e3s4, other);
  }
  function times_12(_this__u8e3s4, scalar) {
    return this.q2y().s2v(scalar, _this__u8e3s4);
  }
  function times_13(_this__u8e3s4, vector) {
    return this.q2y().s2v(_this__u8e3s4, vector);
  }
  function unaryMinus_3(_this__u8e3s4) {
    return new Vector(this.a1m(_this__u8e3s4.m1u_1), _this__u8e3s4.n1u_1);
  }
  function sum_2(_this__u8e3s4) {
    var tmp$ret$1;
    // Inline function 'kotlin.collections.fold' call
    var tmp0_fold = this.q2y().i1w();
    var accumulator = tmp0_fold;
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.VectorContext.sum.<anonymous>' call
      var tmp1__anonymous__uwfjfc = accumulator;
      tmp$ret$0 = this.j1w(tmp1__anonymous__uwfjfc, element);
      accumulator = tmp$ret$0;
    }
    tmp$ret$1 = accumulator;
    return tmp$ret$1;
  }
  //endregion
  function listIntPairsOfSum($this, sum, boundedness1, boundedness2) {
    var tmp;
    if (!(boundedness1.y1i_1 == null) ? !(boundedness2.y1i_1 == null) : false) {
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = numberRangeToNumber(boundedness1.y1i_1, sum - boundedness2.y1i_1 | 0);
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var inductionVariable = tmp0_map.m1_1;
      var last = tmp0_map.n1_1;
      if (inductionVariable <= last)
        do {
          var item = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp$ret$0;
          // Inline function 'com.github.shwaka.kohomology.dg.Companion.listIntPairsOfSum.<anonymous>' call
          tmp$ret$0 = new Pair(item, sum - item | 0);
          tmp0_mapTo.a(tmp$ret$0);
        }
         while (!(item === last));
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      tmp = tmp$ret$2;
    } else if (!(boundedness1.x1i_1 == null) ? !(boundedness2.x1i_1 == null) : false) {
      var tmp$ret$5;
      // Inline function 'kotlin.collections.map' call
      var tmp1_map = numberRangeToNumber(sum - boundedness2.x1i_1 | 0, boundedness1.x1i_1);
      var tmp$ret$4;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
      var inductionVariable_0 = tmp1_map.m1_1;
      var last_0 = tmp1_map.n1_1;
      if (inductionVariable_0 <= last_0)
        do {
          var item_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          var tmp$ret$3;
          // Inline function 'com.github.shwaka.kohomology.dg.Companion.listIntPairsOfSum.<anonymous>' call
          tmp$ret$3 = new Pair(item_0, sum - item_0 | 0);
          tmp0_mapTo_0.a(tmp$ret$3);
        }
         while (!(item_0 === last_0));
      tmp$ret$4 = tmp0_mapTo_0;
      tmp$ret$5 = tmp$ret$4;
      tmp = tmp$ret$5;
    } else {
      throw Exception_init_$Create$('Incompatible Boundedness: ' + boundedness1 + ', ' + boundedness2);
    }
    return tmp;
  }
  function Boundedness_init_$Init$(upperBound, lowerBound, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      upperBound = null;
    if (!(($mask0 & 2) === 0))
      lowerBound = null;
    Boundedness.call($this, upperBound, lowerBound);
    return $this;
  }
  function Boundedness_init_$Create$(upperBound, lowerBound, $mask0, $marker) {
    return Boundedness_init_$Init$(upperBound, lowerBound, $mask0, $marker, Object.create(Boundedness.prototype));
  }
  function Companion() {
    Companion_instance = this;
  }
  Companion.prototype.z1i = function (degreeGroup, degreeSum, boundedness1, boundedness2) {
    var intPairList = listIntPairsOfSum(this, degreeGroup.a1j(degreeSum), boundedness1, boundedness2);
    var tmp$ret$7;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$6;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(intPairList, 10));
    var tmp0_iterator = intPairList.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$5;
      // Inline function 'com.github.shwaka.kohomology.dg.Companion.listDegreePairsOfSum.<anonymous>' call
      var int1 = item.a4();
      var int2 = item.b4();
      var tmp$ret$4;
      // Inline function 'kotlin.collections.filter' call
      var tmp0_filter = directProductOf(degreeGroup.b1j(int1), degreeGroup.b1j(int2));
      var tmp$ret$3;
      // Inline function 'kotlin.collections.filterTo' call
      var tmp0_filterTo = ArrayList_init_$Create$_0();
      var tmp0_iterator_0 = tmp0_filter.f();
      while (tmp0_iterator_0.g()) {
        var element = tmp0_iterator_0.h();
        var tmp$ret$2;
        // Inline function 'com.github.shwaka.kohomology.dg.Companion.listDegreePairsOfSum.<anonymous>.<anonymous>' call
        var degree1 = element.a4();
        var degree2 = element.b4();
        var tmp$ret$1;
        // Inline function 'kotlin.run' call
        var tmp0_run = degreeGroup.c1j();
        // Inline function 'kotlin.contracts.contract' call
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.dg.Companion.listDegreePairsOfSum.<anonymous>.<anonymous>.<anonymous>' call
        tmp$ret$0 = equals(tmp0_run.e1j(degree1, degree2), degreeSum);
        tmp$ret$1 = tmp$ret$0;
        tmp$ret$2 = tmp$ret$1;
        if (tmp$ret$2) {
          tmp0_filterTo.a(element);
        }
      }
      tmp$ret$3 = tmp0_filterTo;
      tmp$ret$4 = tmp$ret$3;
      tmp$ret$5 = tmp$ret$4;
      tmp0_mapTo.a(tmp$ret$5);
    }
    tmp$ret$6 = tmp0_mapTo;
    tmp$ret$7 = tmp$ret$6;
    return flatten(tmp$ret$7);
  };
  Companion.prototype.f1j = function (degreeGroup, degreeList) {
    if (degreeList.p()) {
      return new Boundedness(0, 0);
    }
    var tmp$ret$2;
    // Inline function 'kotlin.collections.maxOf' call
    var iterator = degreeList.f();
    if (!iterator.g())
      throw NoSuchElementException_init_$Create$();
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.dg.Companion.fromDegreeList.<anonymous>' call
    var tmp0__anonymous__q1qw7t = iterator.h();
    tmp$ret$0 = degreeGroup.a1j(tmp0__anonymous__q1qw7t);
    var maxValue = tmp$ret$0;
    while (iterator.g()) {
      var tmp$ret$1;
      // Inline function 'com.github.shwaka.kohomology.dg.Companion.fromDegreeList.<anonymous>' call
      var tmp1__anonymous__uwfjfc = iterator.h();
      tmp$ret$1 = degreeGroup.a1j(tmp1__anonymous__uwfjfc);
      var v = tmp$ret$1;
      if (compareTo(maxValue, v) < 0) {
        maxValue = v;
      }
    }
    tmp$ret$2 = maxValue;
    var upperBound = tmp$ret$2;
    var tmp$ret$5;
    // Inline function 'kotlin.collections.minOf' call
    var iterator_0 = degreeList.f();
    if (!iterator_0.g())
      throw NoSuchElementException_init_$Create$();
    var tmp$ret$3;
    // Inline function 'com.github.shwaka.kohomology.dg.Companion.fromDegreeList.<anonymous>' call
    var tmp2__anonymous__z9zvc9 = iterator_0.h();
    tmp$ret$3 = degreeGroup.a1j(tmp2__anonymous__z9zvc9);
    var minValue = tmp$ret$3;
    while (iterator_0.g()) {
      var tmp$ret$4;
      // Inline function 'com.github.shwaka.kohomology.dg.Companion.fromDegreeList.<anonymous>' call
      var tmp3__anonymous__ufb84q = iterator_0.h();
      tmp$ret$4 = degreeGroup.a1j(tmp3__anonymous__ufb84q);
      var v_0 = tmp$ret$4;
      if (compareTo(minValue, v_0) > 0) {
        minValue = v_0;
      }
    }
    tmp$ret$5 = minValue;
    var lowerBound = tmp$ret$5;
    return new Boundedness(upperBound, lowerBound);
  };
  Companion.$metadata$ = objectMeta('Companion');
  var Companion_instance;
  function Companion_getInstance_0() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function Boundedness(upperBound, lowerBound) {
    Companion_getInstance_0();
    this.x1i_1 = upperBound;
    this.y1i_1 = lowerBound;
  }
  Boundedness.prototype.toString = function () {
    return 'Boundedness(upperBound=' + this.x1i_1 + ', lowerBound=' + this.y1i_1 + ')';
  };
  Boundedness.prototype.hashCode = function () {
    var result = this.x1i_1 == null ? 0 : this.x1i_1;
    result = imul(result, 31) + (this.y1i_1 == null ? 0 : this.y1i_1) | 0;
    return result;
  };
  Boundedness.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Boundedness))
      return false;
    var tmp0_other_with_cast = other instanceof Boundedness ? other : THROW_CCE();
    if (!(this.x1i_1 == tmp0_other_with_cast.x1i_1))
      return false;
    if (!(this.y1i_1 == tmp0_other_with_cast.y1i_1))
      return false;
    return true;
  };
  Boundedness.$metadata$ = classMeta('Boundedness');
  function Companion_0() {
    Companion_instance_0 = this;
  }
  Companion_0.prototype.g1j = function (gAlgebra, differential) {
    var dgMagma = Companion_getInstance_9().h1j(gAlgebra, differential);
    return new DGAlgebraImpl(gAlgebra, differential, dgMagma.i1j(), dgMagma.i1j().j1j());
  };
  Companion_0.$metadata$ = objectMeta('Companion');
  var Companion_instance_0;
  function Companion_getInstance_1() {
    if (Companion_instance_0 == null)
      new Companion_0();
    return Companion_instance_0;
  }
  function DGAlgebra() {
  }
  DGAlgebra.$metadata$ = interfaceMeta('DGAlgebra', [DGMagma, GAlgebra]);
  function Companion_1() {
    Companion_instance_1 = this;
  }
  Companion_1.prototype.a1l = function (dgAlgebra) {
    return new DGAlgebraContextImpl(dgAlgebra);
  };
  Companion_1.$metadata$ = objectMeta('Companion');
  var Companion_instance_1;
  function Companion_getInstance_2() {
    if (Companion_instance_1 == null)
      new Companion_1();
    return Companion_instance_1;
  }
  function DGAlgebraContext() {
  }
  DGAlgebraContext.$metadata$ = interfaceMeta('DGAlgebraContext', [DGMagmaContext, GAlgebraContext]);
  function DGAlgebraImpl$cohomology$delegate$lambda(this$0) {
    return function () {
      var cohomologyUnit = Companion_getInstance_11().a1n(this$0.s1m_1, this$0.q1m_1.v1k());
      return Companion_getInstance_32().b1n(this$0.x1m_1, this$0.s1m_1, this$0.t1m_1, cohomologyUnit, this$0.w1m_1);
    };
  }
  function DGAlgebraImpl(underlyingGAlgebra, differential, cohomologyGVectorSpace, cohomologyMultiplication) {
    this.q1m_1 = underlyingGAlgebra;
    this.r1m_1 = differential;
    this.s1m_1 = cohomologyGVectorSpace;
    this.t1m_1 = cohomologyMultiplication;
    this.u1m_1 = Companion_getInstance_2().a1l(this);
    this.v1m_1 = this.q1m_1.v1k();
    this.w1m_1 = this.q1m_1.w1k();
    this.x1m_1 = this.q1m_1.u1j();
    this.y1m_1 = this.q1m_1.j1j();
    var tmp = this;
    tmp.z1m_1 = lazy(DGAlgebraImpl$cohomology$delegate$lambda(this));
  }
  DGAlgebraImpl.prototype.k1j = function () {
    return this.r1m_1;
  };
  DGAlgebraImpl.prototype.d1k = function () {
    return this.q1m_1.d1k();
  };
  DGAlgebraImpl.prototype.y1j = function () {
    return this.q1m_1.y1j();
  };
  DGAlgebraImpl.prototype.e1k = function () {
    return this.q1m_1.e1k();
  };
  DGAlgebraImpl.prototype.z1j = function () {
    return this.q1m_1.z1j();
  };
  DGAlgebraImpl.prototype.a1k = function () {
    return this.q1m_1.a1k();
  };
  DGAlgebraImpl.prototype.zc = function () {
    return this.q1m_1.zc();
  };
  DGAlgebraImpl.prototype.x1j = function () {
    return this.q1m_1.x1j();
  };
  DGAlgebraImpl.prototype.c1k = function () {
    return this.q1m_1.c1k();
  };
  DGAlgebraImpl.prototype.u1k = function () {
    return this.q1m_1.u1k();
  };
  DGAlgebraImpl.prototype.o1k = function (a, b) {
    return this.q1m_1.o1k(a, b);
  };
  DGAlgebraImpl.prototype.m1k = function (gVector) {
    return this.q1m_1.m1k(gVector);
  };
  DGAlgebraImpl.prototype.n1k = function (gVector) {
    return this.q1m_1.n1k(gVector);
  };
  DGAlgebraImpl.prototype.l1k = function (gVectorOrZero, degree) {
    return this.q1m_1.l1k(gVectorOrZero, degree);
  };
  DGAlgebraImpl.prototype.t1k = function (a, b) {
    return this.q1m_1.t1k(a, b);
  };
  DGAlgebraImpl.prototype.h1k = function (basisName, degree) {
    return this.q1m_1.h1k(basisName, degree);
  };
  DGAlgebraImpl.prototype.f1k = function (vector, degree) {
    return this.q1m_1.f1k(vector, degree);
  };
  DGAlgebraImpl.prototype.g1k = function (vector, degree) {
    return this.q1m_1.g1k(vector, degree);
  };
  DGAlgebraImpl.prototype.b1k = function (degree) {
    return this.q1m_1.b1k(degree);
  };
  DGAlgebraImpl.prototype.l = function (degree) {
    return this.q1m_1.l(degree);
  };
  DGAlgebraImpl.prototype.i1k = function (degree) {
    return this.q1m_1.i1k(degree);
  };
  DGAlgebraImpl.prototype.j1k = function (degree) {
    return this.q1m_1.j1k(degree);
  };
  DGAlgebraImpl.prototype.k1k = function (degree) {
    return this.q1m_1.k1k(degree);
  };
  DGAlgebraImpl.prototype.q1k = function (scalar, gVector) {
    return this.q1m_1.q1k(scalar, gVector);
  };
  DGAlgebraImpl.prototype.p1k = function (a, b) {
    return this.q1m_1.p1k(a, b);
  };
  DGAlgebraImpl.prototype.toString = function () {
    return this.q1m_1.toString();
  };
  DGAlgebraImpl.prototype.c1n = function (printConfig) {
    return this.q1m_1.c1n(printConfig);
  };
  DGAlgebraImpl.prototype.c1j = function () {
    return this.u1m_1;
  };
  DGAlgebraImpl.prototype.v1k = function () {
    return this.v1m_1;
  };
  DGAlgebraImpl.prototype.w1k = function () {
    return this.w1m_1;
  };
  DGAlgebraImpl.prototype.u1j = function () {
    return this.x1m_1;
  };
  DGAlgebraImpl.prototype.j1j = function () {
    return this.y1m_1;
  };
  DGAlgebraImpl.prototype.i1j = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = cohomology$factory();
    tmp$ret$0 = this.z1m_1.f1();
    return tmp$ret$0;
  };
  DGAlgebraImpl.$metadata$ = classMeta('DGAlgebraImpl', [DGAlgebra, GVectorSpace]);
  function DGAlgebraContextImpl(dgAlgebra) {
    this.d1n_1 = dgAlgebra;
    this.e1n_1 = Companion_getInstance_10().g1n(dgAlgebra);
    this.f1n_1 = this.d1n_1;
  }
  DGAlgebraContextImpl.prototype.n1j = function () {
    return this.e1n_1.n1j();
  };
  DGAlgebraContextImpl.prototype.b1l = function () {
    return this.e1n_1.b1l();
  };
  DGAlgebraContextImpl.prototype.n1l = function () {
    return this.e1n_1.n1l();
  };
  DGAlgebraContextImpl.prototype.e1k = function () {
    return this.e1n_1.e1k();
  };
  DGAlgebraContextImpl.prototype.p1m = function () {
    return this.e1n_1.p1m();
  };
  DGAlgebraContextImpl.prototype.p1l = function () {
    return this.e1n_1.p1l();
  };
  DGAlgebraContextImpl.prototype.x1j = function () {
    return this.e1n_1.x1j();
  };
  DGAlgebraContextImpl.prototype.n1m = function () {
    return this.e1n_1.n1m();
  };
  DGAlgebraContextImpl.prototype.m1m = function () {
    return this.e1n_1.m1m();
  };
  DGAlgebraContextImpl.prototype.u1k = function () {
    return this.e1n_1.u1k();
  };
  DGAlgebraContextImpl.prototype.o1l = function (_this__u8e3s4) {
    return this.e1n_1.o1l(_this__u8e3s4);
  };
  DGAlgebraContextImpl.prototype.f1m = function (_this__u8e3s4, other) {
    return this.e1n_1.f1m(_this__u8e3s4, other);
  };
  DGAlgebraContextImpl.prototype.g1m = function (_this__u8e3s4, other) {
    return this.e1n_1.g1m(_this__u8e3s4, other);
  };
  DGAlgebraContextImpl.prototype.e1m = function (_this__u8e3s4, ind) {
    return this.e1n_1.e1m(_this__u8e3s4, ind);
  };
  DGAlgebraContextImpl.prototype.h1m = function (_this__u8e3s4) {
    return this.e1n_1.h1m(_this__u8e3s4);
  };
  DGAlgebraContextImpl.prototype.x1l = function (_this__u8e3s4, other) {
    return this.e1n_1.x1l(_this__u8e3s4, other);
  };
  DGAlgebraContextImpl.prototype.w1l = function (_this__u8e3s4, other) {
    return this.e1n_1.w1l(_this__u8e3s4, other);
  };
  DGAlgebraContextImpl.prototype.u1l = function (_this__u8e3s4, other) {
    return this.e1n_1.u1l(_this__u8e3s4, other);
  };
  DGAlgebraContextImpl.prototype.v1l = function (_this__u8e3s4, other) {
    return this.e1n_1.v1l(_this__u8e3s4, other);
  };
  DGAlgebraContextImpl.prototype.t1l = function (_this__u8e3s4, other) {
    return this.e1n_1.t1l(_this__u8e3s4, other);
  };
  DGAlgebraContextImpl.prototype.s1l = function (_this__u8e3s4, other) {
    return this.e1n_1.s1l(_this__u8e3s4, other);
  };
  DGAlgebraContextImpl.prototype.q1l = function (_this__u8e3s4, other) {
    return this.e1n_1.q1l(_this__u8e3s4, other);
  };
  DGAlgebraContextImpl.prototype.r1l = function (_this__u8e3s4, other) {
    return this.e1n_1.r1l(_this__u8e3s4, other);
  };
  DGAlgebraContextImpl.prototype.d1m = function (_this__u8e3s4) {
    return this.e1n_1.d1m(_this__u8e3s4);
  };
  DGAlgebraContextImpl.prototype.c1m = function (_this__u8e3s4, degree) {
    return this.e1n_1.c1m(_this__u8e3s4, degree);
  };
  DGAlgebraContextImpl.prototype.l1l = function (_this__u8e3s4, other) {
    return this.e1n_1.l1l(_this__u8e3s4, other);
  };
  DGAlgebraContextImpl.prototype.k1l = function (_this__u8e3s4, numVector) {
    return this.e1n_1.k1l(_this__u8e3s4, numVector);
  };
  DGAlgebraContextImpl.prototype.e1l = function (_this__u8e3s4, gVector) {
    return this.e1n_1.e1l(_this__u8e3s4, gVector);
  };
  DGAlgebraContextImpl.prototype.j1l = function (_this__u8e3s4, scalar) {
    return this.e1n_1.j1l(_this__u8e3s4, scalar);
  };
  DGAlgebraContextImpl.prototype.d1l = function (_this__u8e3s4, scalar) {
    return this.e1n_1.d1l(_this__u8e3s4, scalar);
  };
  DGAlgebraContextImpl.prototype.c1l = function (_this__u8e3s4, other) {
    return this.e1n_1.c1l(_this__u8e3s4, other);
  };
  DGAlgebraContextImpl.prototype.h1l = function (_this__u8e3s4, sign) {
    return this.e1n_1.h1l(_this__u8e3s4, sign);
  };
  DGAlgebraContextImpl.prototype.g1l = function (_this__u8e3s4, scalar) {
    return this.e1n_1.g1l(_this__u8e3s4, scalar);
  };
  DGAlgebraContextImpl.prototype.m1l = function (_this__u8e3s4, other) {
    return this.e1n_1.m1l(_this__u8e3s4, other);
  };
  DGAlgebraContextImpl.prototype.i1l = function (_this__u8e3s4, gVector) {
    return this.e1n_1.i1l(_this__u8e3s4, gVector);
  };
  DGAlgebraContextImpl.prototype.f1l = function (_this__u8e3s4, gVector) {
    return this.e1n_1.f1l(_this__u8e3s4, gVector);
  };
  DGAlgebraContextImpl.prototype.k1m = function (_this__u8e3s4) {
    return this.e1n_1.k1m(_this__u8e3s4);
  };
  DGAlgebraContextImpl.prototype.b1m = function (_this__u8e3s4) {
    return this.e1n_1.b1m(_this__u8e3s4);
  };
  DGAlgebraContextImpl.prototype.a1m = function (_this__u8e3s4) {
    return this.e1n_1.a1m(_this__u8e3s4);
  };
  DGAlgebraContextImpl.prototype.y1l = function (_this__u8e3s4) {
    return this.e1n_1.y1l(_this__u8e3s4);
  };
  DGAlgebraContextImpl.prototype.z1l = function (_this__u8e3s4) {
    return this.e1n_1.z1l(_this__u8e3s4);
  };
  DGAlgebraContextImpl.prototype.h1n = function () {
    return this.f1n_1;
  };
  DGAlgebraContextImpl.$metadata$ = classMeta('DGAlgebraContextImpl', [DGAlgebraContext, DGMagmaContext]);
  function cohomology$factory() {
    return getPropertyCallableRef('cohomology', 1, KProperty1, function (receiver) {
      return receiver.i1j();
    }, null);
  }
  function Companion_2() {
    Companion_instance_2 = this;
  }
  Companion_2.prototype.i1n = function (source, target, gLinearMap) {
    return new DGAlgebraMapImpl(source, target, gLinearMap);
  };
  Companion_2.$metadata$ = objectMeta('Companion');
  var Companion_instance_2;
  function Companion_getInstance_3() {
    if (Companion_instance_2 == null)
      new Companion_2();
    return Companion_instance_2;
  }
  function DGAlgebraMap() {
  }
  DGAlgebraMap.$metadata$ = interfaceMeta('DGAlgebraMap', [DGLinearMap, GAlgebraMap]);
  function DGAlgebraMapImpl(source, target, gLinearMap) {
    this.k1n_1 = source;
    this.l1n_1 = target;
    this.m1n_1 = Companion_getInstance_8().n1n(source, target, gLinearMap);
  }
  DGAlgebraMapImpl.prototype.o1n = function () {
    return this.k1n_1;
  };
  DGAlgebraMapImpl.prototype.p1n = function () {
    return this.l1n_1;
  };
  DGAlgebraMapImpl.prototype.q1n = function () {
    return this.m1n_1.q1n();
  };
  DGAlgebraMapImpl.prototype.y1j = function () {
    return this.m1n_1.y1j();
  };
  DGAlgebraMapImpl.prototype.j1n = function () {
    return this.m1n_1.j1n();
  };
  DGAlgebraMapImpl.prototype.u1j = function () {
    return this.m1n_1.u1j();
  };
  DGAlgebraMapImpl.prototype.zc = function () {
    return this.m1n_1.zc();
  };
  DGAlgebraMapImpl.prototype.r1n = function () {
    return this.m1n_1.r1n();
  };
  DGAlgebraMapImpl.prototype.s1n = function (gVector) {
    return this.m1n_1.s1n(gVector);
  };
  DGAlgebraMapImpl.prototype.b1k = function (degree) {
    return this.m1n_1.b1k(degree);
  };
  DGAlgebraMapImpl.prototype.t1n = function () {
    return this.m1n_1.t1n();
  };
  DGAlgebraMapImpl.prototype.u1n = function (sourceQuot, targetQuot) {
    return this.m1n_1.u1n(sourceQuot, targetQuot);
  };
  DGAlgebraMapImpl.prototype.v1n = function (sourceSub, targetSub) {
    return this.m1n_1.v1n(sourceSub, targetSub);
  };
  DGAlgebraMapImpl.prototype.w1n = function (sourceSubQuot, targetSubQuot) {
    return this.m1n_1.w1n(sourceSubQuot, targetSubQuot);
  };
  DGAlgebraMapImpl.prototype.o1j = function (gVector) {
    return this.m1n_1.o1j(gVector);
  };
  DGAlgebraMapImpl.prototype.x1n = function () {
    return this.m1n_1.x1n();
  };
  DGAlgebraMapImpl.$metadata$ = classMeta('DGAlgebraMapImpl', [DGAlgebraMap, DGLinearMap]);
  function Companion_3() {
    Companion_instance_3 = this;
  }
  Companion_3.prototype.y1n = function (source, gLinearMap) {
    return new DGDerivationImpl(source, gLinearMap);
  };
  Companion_3.$metadata$ = objectMeta('Companion');
  var Companion_instance_3;
  function Companion_getInstance_4() {
    if (Companion_instance_3 == null)
      new Companion_3();
    return Companion_instance_3;
  }
  function DGDerivation() {
  }
  DGDerivation.$metadata$ = interfaceMeta('DGDerivation', [DGLinearMap, Derivation]);
  function DGDerivationImpl(source, gLinearMap) {
    this.z1n_1 = source;
    this.a1o_1 = Companion_getInstance_8().n1n(source, source, gLinearMap);
    this.b1o_1 = this.z1n_1;
  }
  DGDerivationImpl.prototype.o1n = function () {
    return this.z1n_1;
  };
  DGDerivationImpl.prototype.q1n = function () {
    return this.a1o_1.q1n();
  };
  DGDerivationImpl.prototype.y1j = function () {
    return this.a1o_1.y1j();
  };
  DGDerivationImpl.prototype.j1n = function () {
    return this.a1o_1.j1n();
  };
  DGDerivationImpl.prototype.u1j = function () {
    return this.a1o_1.u1j();
  };
  DGDerivationImpl.prototype.zc = function () {
    return this.a1o_1.zc();
  };
  DGDerivationImpl.prototype.r1n = function () {
    return this.a1o_1.r1n();
  };
  DGDerivationImpl.prototype.c1o = function (gVector) {
    return this.a1o_1.s1n(gVector);
  };
  DGDerivationImpl.prototype.s1n = function (gVector) {
    return this.c1o(gVector);
  };
  DGDerivationImpl.prototype.b1k = function (degree) {
    return this.a1o_1.b1k(degree);
  };
  DGDerivationImpl.prototype.t1n = function () {
    return this.a1o_1.t1n();
  };
  DGDerivationImpl.prototype.d1o = function (sourceQuot, targetQuot) {
    return this.a1o_1.u1n(sourceQuot, targetQuot);
  };
  DGDerivationImpl.prototype.u1n = function (sourceQuot, targetQuot) {
    return this.d1o(sourceQuot, targetQuot);
  };
  DGDerivationImpl.prototype.e1o = function (sourceSub, targetSub) {
    return this.a1o_1.v1n(sourceSub, targetSub);
  };
  DGDerivationImpl.prototype.v1n = function (sourceSub, targetSub) {
    return this.e1o(sourceSub, targetSub);
  };
  DGDerivationImpl.prototype.f1o = function (sourceSubQuot, targetSubQuot) {
    return this.a1o_1.w1n(sourceSubQuot, targetSubQuot);
  };
  DGDerivationImpl.prototype.w1n = function (sourceSubQuot, targetSubQuot) {
    return this.f1o(sourceSubQuot, targetSubQuot);
  };
  DGDerivationImpl.prototype.g1o = function (gVector) {
    return this.a1o_1.o1j(gVector);
  };
  DGDerivationImpl.prototype.o1j = function (gVector) {
    return this.g1o(gVector);
  };
  DGDerivationImpl.prototype.x1n = function () {
    return this.a1o_1.x1n();
  };
  DGDerivationImpl.prototype.p1n = function () {
    return this.b1o_1;
  };
  DGDerivationImpl.$metadata$ = classMeta('DGDerivationImpl', [DGDerivation, DGLinearMap]);
  function Companion_4() {
    Companion_instance_4 = this;
  }
  Companion_4.prototype.r1j = function (totalDGAlgebra, subDGVectorSpace, generatorList) {
    return new DGIdealImpl(totalDGAlgebra, subDGVectorSpace, generatorList);
  };
  Companion_4.$metadata$ = objectMeta('Companion');
  var Companion_instance_4;
  function Companion_getInstance_5() {
    if (Companion_instance_4 == null)
      new Companion_4();
    return Companion_instance_4;
  }
  function DGIdeal() {
  }
  DGIdeal.$metadata$ = interfaceMeta('DGIdeal', [SubDGVectorSpace, Ideal]);
  function DGIdealImpl(totalGVectorSpace, subDGVectorSpace, generatorList) {
    this.j1o_1 = totalGVectorSpace;
    this.k1o_1 = generatorList;
    this.l1o_1 = subDGVectorSpace;
    // Inline function 'kotlin.require' call
    var tmp0_require = equals(this.j1o_1.c1k(), subDGVectorSpace.m1o().c1k());
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.DGIdealImpl.<anonymous>' call
      tmp$ret$0 = 'subGVectorSpace.totalGVectorSpace (' + subDGVectorSpace.m1o() + ')' + ('must be the same as totalGVectorSpace (' + this.j1o_1 + ')');
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
  }
  DGIdealImpl.prototype.m1o = function () {
    return this.j1o_1;
  };
  DGIdealImpl.prototype.i1o = function () {
    return this.k1o_1;
  };
  DGIdealImpl.prototype.d1k = function () {
    return this.l1o_1.d1k();
  };
  DGIdealImpl.prototype.i1j = function () {
    return this.l1o_1.i1j();
  };
  DGIdealImpl.prototype.c1j = function () {
    return this.l1o_1.c1j();
  };
  DGIdealImpl.prototype.y1j = function () {
    return this.l1o_1.y1j();
  };
  DGIdealImpl.prototype.k1j = function () {
    return this.l1o_1.k1j();
  };
  DGIdealImpl.prototype.e1k = function () {
    return this.l1o_1.e1k();
  };
  DGIdealImpl.prototype.z1j = function () {
    return this.l1o_1.z1j();
  };
  DGIdealImpl.prototype.n1o = function () {
    return this.l1o_1.n1o();
  };
  DGIdealImpl.prototype.a1k = function () {
    return this.l1o_1.a1k();
  };
  DGIdealImpl.prototype.u1j = function () {
    return this.l1o_1.u1j();
  };
  DGIdealImpl.prototype.x1j = function () {
    return this.l1o_1.x1j();
  };
  DGIdealImpl.prototype.c1k = function () {
    return this.l1o_1.c1k();
  };
  DGIdealImpl.prototype.u1k = function () {
    return this.l1o_1.u1k();
  };
  DGIdealImpl.prototype.o1o = function (a, b) {
    return this.l1o_1.o1k(a, b);
  };
  DGIdealImpl.prototype.o1k = function (a, b) {
    return this.o1o(a, b);
  };
  DGIdealImpl.prototype.p1o = function (cocycle) {
    return this.l1o_1.v1j(cocycle);
  };
  DGIdealImpl.prototype.v1j = function (cocycle) {
    return this.p1o(cocycle);
  };
  DGIdealImpl.prototype.q1o = function (gVector) {
    return this.l1o_1.m1k(gVector);
  };
  DGIdealImpl.prototype.m1k = function (gVector) {
    return this.q1o(gVector);
  };
  DGIdealImpl.prototype.r1o = function (gVector) {
    return this.l1o_1.n1k(gVector);
  };
  DGIdealImpl.prototype.n1k = function (gVector) {
    return this.r1o(gVector);
  };
  DGIdealImpl.prototype.s1o = function (gVectorOrZero, degree) {
    return this.l1o_1.l1k(gVectorOrZero, degree);
  };
  DGIdealImpl.prototype.l1k = function (gVectorOrZero, degree) {
    return this.s1o(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  DGIdealImpl.prototype.t1o = function (a, b) {
    return this.l1o_1.t1k(a, b);
  };
  DGIdealImpl.prototype.t1k = function (a, b) {
    return this.t1o(a, b);
  };
  DGIdealImpl.prototype.u1o = function (basisName, degree) {
    return this.l1o_1.h1k(basisName, degree);
  };
  DGIdealImpl.prototype.h1k = function (basisName, degree) {
    var tmp = basisName instanceof SubBasis ? basisName : THROW_CCE();
    return this.u1o(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  DGIdealImpl.prototype.v1o = function (vector, degree) {
    return this.l1o_1.f1k(vector, degree);
  };
  DGIdealImpl.prototype.f1k = function (vector, degree) {
    return this.v1o(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  DGIdealImpl.prototype.w1o = function (vector, degree) {
    return this.l1o_1.g1k(vector, degree);
  };
  DGIdealImpl.prototype.g1k = function (vector, degree) {
    return this.w1o(vector, degree);
  };
  DGIdealImpl.prototype.b1k = function (degree) {
    return this.l1o_1.b1k(degree);
  };
  DGIdealImpl.prototype.i1k = function (degree) {
    return this.l1o_1.i1k(degree);
  };
  DGIdealImpl.prototype.x1o = function (degree) {
    return this.l1o_1.x1o(degree);
  };
  DGIdealImpl.prototype.j1k = function (degree) {
    return this.l1o_1.j1k(degree);
  };
  DGIdealImpl.prototype.k1k = function (degree) {
    return this.l1o_1.k1k(degree);
  };
  DGIdealImpl.prototype.y1o = function (scalar, gVector) {
    return this.l1o_1.q1k(scalar, gVector);
  };
  DGIdealImpl.prototype.q1k = function (scalar, gVector) {
    return this.y1o(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  DGIdealImpl.prototype.p1j = function (gVector) {
    return this.l1o_1.p1j(gVector);
  };
  DGIdealImpl.prototype.z1o = function (a, b) {
    return this.l1o_1.p1k(a, b);
  };
  DGIdealImpl.prototype.p1k = function (a, b) {
    return this.z1o(a, b);
  };
  DGIdealImpl.prototype.l = function (degree) {
    return get_1.call(this, degree);
  };
  DGIdealImpl.prototype.zc = function () {
    return this.toString();
  };
  DGIdealImpl.prototype.toString = function () {
    var tmp = PrintType_PLAIN_getInstance();
    return this.c1n(PrintConfig_init_$Create$(tmp, null, null, null, null, 30, null));
  };
  DGIdealImpl.prototype.c1n = function (printConfig) {
    return idealToString('DGIdeal', this.k1o_1, printConfig);
  };
  DGIdealImpl.$metadata$ = classMeta('DGIdealImpl', [DGIdeal, SubDGVectorSpace]);
  function Companion_5() {
    Companion_instance_5 = this;
  }
  Companion_5.prototype.a1p = function (gLieAlgebra, differential) {
    var dgMagma = Companion_getInstance_9().h1j(gLieAlgebra, differential);
    return new DGLieAlgebraImpl(gLieAlgebra, differential, dgMagma.i1j(), dgMagma.i1j().j1j());
  };
  Companion_5.$metadata$ = objectMeta('Companion');
  var Companion_instance_5;
  function Companion_getInstance_6() {
    if (Companion_instance_5 == null)
      new Companion_5();
    return Companion_instance_5;
  }
  function DGLieAlgebra() {
  }
  DGLieAlgebra.$metadata$ = interfaceMeta('DGLieAlgebra', [DGMagma, GLieAlgebra]);
  function Companion_6() {
    Companion_instance_6 = this;
  }
  Companion_6.prototype.b1p = function (dgLieAlgebra) {
    return new DGLieAlgebraContextImpl(dgLieAlgebra);
  };
  Companion_6.$metadata$ = objectMeta('Companion');
  var Companion_instance_6;
  function Companion_getInstance_7() {
    if (Companion_instance_6 == null)
      new Companion_6();
    return Companion_instance_6;
  }
  function DGLieAlgebraContext() {
  }
  DGLieAlgebraContext.$metadata$ = interfaceMeta('DGLieAlgebraContext', [DGMagmaContext, GLieAlgebraContext]);
  function DGLieAlgebraImpl$cohomology$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_33().k1p(this$0.h1p_1, this$0.e1p_1, this$0.f1p_1);
    };
  }
  function DGLieAlgebraImpl(underlyingGLieAlgebra, differential, cohomologyGVectorSpace, cohomologyMultiplication) {
    this.c1p_1 = underlyingGLieAlgebra;
    this.d1p_1 = differential;
    this.e1p_1 = cohomologyGVectorSpace;
    this.f1p_1 = cohomologyMultiplication;
    this.g1p_1 = Companion_getInstance_7().b1p(this);
    this.h1p_1 = this.c1p_1.u1j();
    this.i1p_1 = this.c1p_1.j1j();
    var tmp = this;
    tmp.j1p_1 = lazy(DGLieAlgebraImpl$cohomology$delegate$lambda(this));
  }
  DGLieAlgebraImpl.prototype.k1j = function () {
    return this.d1p_1;
  };
  DGLieAlgebraImpl.prototype.d1k = function () {
    return this.c1p_1.d1k();
  };
  DGLieAlgebraImpl.prototype.y1j = function () {
    return this.c1p_1.y1j();
  };
  DGLieAlgebraImpl.prototype.e1k = function () {
    return this.c1p_1.e1k();
  };
  DGLieAlgebraImpl.prototype.z1j = function () {
    return this.c1p_1.z1j();
  };
  DGLieAlgebraImpl.prototype.a1k = function () {
    return this.c1p_1.a1k();
  };
  DGLieAlgebraImpl.prototype.zc = function () {
    return this.c1p_1.zc();
  };
  DGLieAlgebraImpl.prototype.x1j = function () {
    return this.c1p_1.x1j();
  };
  DGLieAlgebraImpl.prototype.c1k = function () {
    return this.c1p_1.c1k();
  };
  DGLieAlgebraImpl.prototype.u1k = function () {
    return this.c1p_1.u1k();
  };
  DGLieAlgebraImpl.prototype.o1k = function (a, b) {
    return this.c1p_1.o1k(a, b);
  };
  DGLieAlgebraImpl.prototype.m1k = function (gVector) {
    return this.c1p_1.m1k(gVector);
  };
  DGLieAlgebraImpl.prototype.n1k = function (gVector) {
    return this.c1p_1.n1k(gVector);
  };
  DGLieAlgebraImpl.prototype.l1k = function (gVectorOrZero, degree) {
    return this.c1p_1.l1k(gVectorOrZero, degree);
  };
  DGLieAlgebraImpl.prototype.t1k = function (a, b) {
    return this.c1p_1.t1k(a, b);
  };
  DGLieAlgebraImpl.prototype.h1k = function (basisName, degree) {
    return this.c1p_1.h1k(basisName, degree);
  };
  DGLieAlgebraImpl.prototype.f1k = function (vector, degree) {
    return this.c1p_1.f1k(vector, degree);
  };
  DGLieAlgebraImpl.prototype.g1k = function (vector, degree) {
    return this.c1p_1.g1k(vector, degree);
  };
  DGLieAlgebraImpl.prototype.b1k = function (degree) {
    return this.c1p_1.b1k(degree);
  };
  DGLieAlgebraImpl.prototype.l = function (degree) {
    return this.c1p_1.l(degree);
  };
  DGLieAlgebraImpl.prototype.i1k = function (degree) {
    return this.c1p_1.i1k(degree);
  };
  DGLieAlgebraImpl.prototype.j1k = function (degree) {
    return this.c1p_1.j1k(degree);
  };
  DGLieAlgebraImpl.prototype.k1k = function (degree) {
    return this.c1p_1.k1k(degree);
  };
  DGLieAlgebraImpl.prototype.q1k = function (scalar, gVector) {
    return this.c1p_1.q1k(scalar, gVector);
  };
  DGLieAlgebraImpl.prototype.p1k = function (a, b) {
    return this.c1p_1.p1k(a, b);
  };
  DGLieAlgebraImpl.prototype.toString = function () {
    return this.c1p_1.toString();
  };
  DGLieAlgebraImpl.prototype.c1n = function (printConfig) {
    return this.c1p_1.c1n(printConfig);
  };
  DGLieAlgebraImpl.prototype.c1j = function () {
    return this.g1p_1;
  };
  DGLieAlgebraImpl.prototype.u1j = function () {
    return this.h1p_1;
  };
  DGLieAlgebraImpl.prototype.j1j = function () {
    return this.i1p_1;
  };
  DGLieAlgebraImpl.prototype.i1j = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = cohomology$factory_0();
    tmp$ret$0 = this.j1p_1.f1();
    return tmp$ret$0;
  };
  DGLieAlgebraImpl.$metadata$ = classMeta('DGLieAlgebraImpl', [DGLieAlgebra, GVectorSpace]);
  function DGLieAlgebraContextImpl(dgLieAlgebra) {
    this.l1p_1 = dgLieAlgebra;
    this.m1p_1 = Companion_getInstance_10().g1n(dgLieAlgebra);
    this.n1p_1 = this.l1p_1;
  }
  DGLieAlgebraContextImpl.prototype.n1j = function () {
    return this.m1p_1.n1j();
  };
  DGLieAlgebraContextImpl.prototype.b1l = function () {
    return this.m1p_1.b1l();
  };
  DGLieAlgebraContextImpl.prototype.n1l = function () {
    return this.m1p_1.n1l();
  };
  DGLieAlgebraContextImpl.prototype.e1k = function () {
    return this.m1p_1.e1k();
  };
  DGLieAlgebraContextImpl.prototype.p1m = function () {
    return this.m1p_1.p1m();
  };
  DGLieAlgebraContextImpl.prototype.p1l = function () {
    return this.m1p_1.p1l();
  };
  DGLieAlgebraContextImpl.prototype.x1j = function () {
    return this.m1p_1.x1j();
  };
  DGLieAlgebraContextImpl.prototype.n1m = function () {
    return this.m1p_1.n1m();
  };
  DGLieAlgebraContextImpl.prototype.m1m = function () {
    return this.m1p_1.m1m();
  };
  DGLieAlgebraContextImpl.prototype.u1k = function () {
    return this.m1p_1.u1k();
  };
  DGLieAlgebraContextImpl.prototype.o1l = function (_this__u8e3s4) {
    return this.m1p_1.o1l(_this__u8e3s4);
  };
  DGLieAlgebraContextImpl.prototype.f1m = function (_this__u8e3s4, other) {
    return this.m1p_1.f1m(_this__u8e3s4, other);
  };
  DGLieAlgebraContextImpl.prototype.g1m = function (_this__u8e3s4, other) {
    return this.m1p_1.g1m(_this__u8e3s4, other);
  };
  DGLieAlgebraContextImpl.prototype.e1m = function (_this__u8e3s4, ind) {
    return this.m1p_1.e1m(_this__u8e3s4, ind);
  };
  DGLieAlgebraContextImpl.prototype.h1m = function (_this__u8e3s4) {
    return this.m1p_1.h1m(_this__u8e3s4);
  };
  DGLieAlgebraContextImpl.prototype.x1l = function (_this__u8e3s4, other) {
    return this.m1p_1.x1l(_this__u8e3s4, other);
  };
  DGLieAlgebraContextImpl.prototype.w1l = function (_this__u8e3s4, other) {
    return this.m1p_1.w1l(_this__u8e3s4, other);
  };
  DGLieAlgebraContextImpl.prototype.u1l = function (_this__u8e3s4, other) {
    return this.m1p_1.u1l(_this__u8e3s4, other);
  };
  DGLieAlgebraContextImpl.prototype.v1l = function (_this__u8e3s4, other) {
    return this.m1p_1.v1l(_this__u8e3s4, other);
  };
  DGLieAlgebraContextImpl.prototype.t1l = function (_this__u8e3s4, other) {
    return this.m1p_1.t1l(_this__u8e3s4, other);
  };
  DGLieAlgebraContextImpl.prototype.s1l = function (_this__u8e3s4, other) {
    return this.m1p_1.s1l(_this__u8e3s4, other);
  };
  DGLieAlgebraContextImpl.prototype.q1l = function (_this__u8e3s4, other) {
    return this.m1p_1.q1l(_this__u8e3s4, other);
  };
  DGLieAlgebraContextImpl.prototype.r1l = function (_this__u8e3s4, other) {
    return this.m1p_1.r1l(_this__u8e3s4, other);
  };
  DGLieAlgebraContextImpl.prototype.d1m = function (_this__u8e3s4) {
    return this.m1p_1.d1m(_this__u8e3s4);
  };
  DGLieAlgebraContextImpl.prototype.c1m = function (_this__u8e3s4, degree) {
    return this.m1p_1.c1m(_this__u8e3s4, degree);
  };
  DGLieAlgebraContextImpl.prototype.l1l = function (_this__u8e3s4, other) {
    return this.m1p_1.l1l(_this__u8e3s4, other);
  };
  DGLieAlgebraContextImpl.prototype.k1l = function (_this__u8e3s4, numVector) {
    return this.m1p_1.k1l(_this__u8e3s4, numVector);
  };
  DGLieAlgebraContextImpl.prototype.e1l = function (_this__u8e3s4, gVector) {
    return this.m1p_1.e1l(_this__u8e3s4, gVector);
  };
  DGLieAlgebraContextImpl.prototype.j1l = function (_this__u8e3s4, scalar) {
    return this.m1p_1.j1l(_this__u8e3s4, scalar);
  };
  DGLieAlgebraContextImpl.prototype.d1l = function (_this__u8e3s4, scalar) {
    return this.m1p_1.d1l(_this__u8e3s4, scalar);
  };
  DGLieAlgebraContextImpl.prototype.c1l = function (_this__u8e3s4, other) {
    return this.m1p_1.c1l(_this__u8e3s4, other);
  };
  DGLieAlgebraContextImpl.prototype.h1l = function (_this__u8e3s4, sign) {
    return this.m1p_1.h1l(_this__u8e3s4, sign);
  };
  DGLieAlgebraContextImpl.prototype.g1l = function (_this__u8e3s4, scalar) {
    return this.m1p_1.g1l(_this__u8e3s4, scalar);
  };
  DGLieAlgebraContextImpl.prototype.m1l = function (_this__u8e3s4, other) {
    return this.m1p_1.m1l(_this__u8e3s4, other);
  };
  DGLieAlgebraContextImpl.prototype.i1l = function (_this__u8e3s4, gVector) {
    return this.m1p_1.i1l(_this__u8e3s4, gVector);
  };
  DGLieAlgebraContextImpl.prototype.f1l = function (_this__u8e3s4, gVector) {
    return this.m1p_1.f1l(_this__u8e3s4, gVector);
  };
  DGLieAlgebraContextImpl.prototype.k1m = function (_this__u8e3s4) {
    return this.m1p_1.k1m(_this__u8e3s4);
  };
  DGLieAlgebraContextImpl.prototype.b1m = function (_this__u8e3s4) {
    return this.m1p_1.b1m(_this__u8e3s4);
  };
  DGLieAlgebraContextImpl.prototype.a1m = function (_this__u8e3s4) {
    return this.m1p_1.a1m(_this__u8e3s4);
  };
  DGLieAlgebraContextImpl.prototype.y1l = function (_this__u8e3s4) {
    return this.m1p_1.y1l(_this__u8e3s4);
  };
  DGLieAlgebraContextImpl.prototype.z1l = function (_this__u8e3s4) {
    return this.m1p_1.z1l(_this__u8e3s4);
  };
  DGLieAlgebraContextImpl.prototype.o1p = function () {
    return this.n1p_1;
  };
  DGLieAlgebraContextImpl.$metadata$ = classMeta('DGLieAlgebraContextImpl', [DGLieAlgebraContext, DGMagmaContext]);
  function cohomology$factory_0() {
    return getPropertyCallableRef('cohomology', 1, KProperty1, function (receiver) {
      return receiver.i1j();
    }, null);
  }
  function Companion_7() {
    Companion_instance_7 = this;
  }
  Companion_7.prototype.n1n = function (source, target, gLinearMap) {
    return new DGLinearMapImpl(source, target, gLinearMap);
  };
  Companion_7.$metadata$ = objectMeta('Companion');
  var Companion_instance_7;
  function Companion_getInstance_8() {
    if (Companion_instance_7 == null)
      new Companion_7();
    return Companion_instance_7;
  }
  function DGLinearMap() {
  }
  DGLinearMap.$metadata$ = interfaceMeta('DGLinearMap', [GLinearMap]);
  function DGLinearMapImpl$inducedMapOnCohomology$delegate$lambda(this$0) {
    return function () {
      return this$0.w1n(this$0.q1p_1.i1j(), this$0.r1p_1.i1j());
    };
  }
  function DGLinearMapImpl(source, target, gLinearMap) {
    this.q1p_1 = source;
    this.r1p_1 = target;
    this.s1p_1 = gLinearMap;
    // Inline function 'kotlin.require' call
    var tmp0_require = equals(this.q1p_1.c1k(), gLinearMap.o1n().c1k());
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.DGLinearMapImpl.<anonymous>' call
      tmp$ret$0 = 'The source DGVectorSpace does not match to the source GVectorSpace of GLinearMap';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.require' call
    var tmp1_require = equals(this.r1p_1.c1k(), gLinearMap.p1n().c1k());
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp1_require) {
      var tmp$ret$1;
      // Inline function 'com.github.shwaka.kohomology.dg.DGLinearMapImpl.<anonymous>' call
      tmp$ret$1 = 'The target DGVectorSpace does not match to the target GVectorSpace of GLinearMap';
      var message_0 = tmp$ret$1;
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
    var tmp = this;
    tmp.t1p_1 = lazy(DGLinearMapImpl$inducedMapOnCohomology$delegate$lambda(this));
  }
  DGLinearMapImpl.prototype.o1n = function () {
    return this.q1p_1;
  };
  DGLinearMapImpl.prototype.p1n = function () {
    return this.r1p_1;
  };
  DGLinearMapImpl.prototype.q1n = function () {
    return this.s1p_1.q1n();
  };
  DGLinearMapImpl.prototype.y1j = function () {
    return this.s1p_1.y1j();
  };
  DGLinearMapImpl.prototype.u1j = function () {
    return this.s1p_1.u1j();
  };
  DGLinearMapImpl.prototype.zc = function () {
    return this.s1p_1.zc();
  };
  DGLinearMapImpl.prototype.r1n = function () {
    return this.s1p_1.r1n();
  };
  DGLinearMapImpl.prototype.s1n = function (gVector) {
    return this.s1p_1.s1n(gVector);
  };
  DGLinearMapImpl.prototype.b1k = function (degree) {
    return this.s1p_1.b1k(degree);
  };
  DGLinearMapImpl.prototype.t1n = function () {
    return this.s1p_1.t1n();
  };
  DGLinearMapImpl.prototype.u1n = function (sourceQuot, targetQuot) {
    return this.s1p_1.u1n(sourceQuot, targetQuot);
  };
  DGLinearMapImpl.prototype.v1n = function (sourceSub, targetSub) {
    return this.s1p_1.v1n(sourceSub, targetSub);
  };
  DGLinearMapImpl.prototype.w1n = function (sourceSubQuot, targetSubQuot) {
    return this.s1p_1.w1n(sourceSubQuot, targetSubQuot);
  };
  DGLinearMapImpl.prototype.o1j = function (gVector) {
    return this.s1p_1.o1j(gVector);
  };
  DGLinearMapImpl.prototype.x1n = function () {
    return this.s1p_1.x1n();
  };
  DGLinearMapImpl.prototype.j1n = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = inducedMapOnCohomology$factory();
    tmp$ret$0 = this.t1p_1.f1();
    return tmp$ret$0;
  };
  DGLinearMapImpl.$metadata$ = classMeta('DGLinearMapImpl', [DGLinearMap, GLinearMap]);
  function inducedMapOnCohomology$factory() {
    return getPropertyCallableRef('inducedMapOnCohomology', 1, KProperty1, function (receiver) {
      return receiver.j1n();
    }, null);
  }
  function Companion_8() {
    Companion_instance_8 = this;
  }
  Companion_8.prototype.h1j = function (gMagma, differential) {
    var dgVectorSpace = Companion_getInstance_11().u1p(gMagma, differential);
    return new DGMagmaImpl(gMagma, differential, gMagma.j1j(), dgVectorSpace.i1j());
  };
  Companion_8.$metadata$ = objectMeta('Companion');
  var Companion_instance_8;
  function Companion_getInstance_9() {
    if (Companion_instance_8 == null)
      new Companion_8();
    return Companion_instance_8;
  }
  function DGMagma() {
  }
  DGMagma.$metadata$ = interfaceMeta('DGMagma', [DGVectorSpace, GMagma]);
  function Companion_9() {
    Companion_instance_9 = this;
  }
  Companion_9.prototype.g1n = function (dgMagma) {
    return new DGMagmaContextImpl(dgMagma);
  };
  Companion_9.$metadata$ = objectMeta('Companion');
  var Companion_instance_9;
  function Companion_getInstance_10() {
    if (Companion_instance_9 == null)
      new Companion_9();
    return Companion_instance_9;
  }
  function DGMagmaContext() {
  }
  DGMagmaContext.$metadata$ = interfaceMeta('DGMagmaContext', [DGVectorContext, GMagmaContext]);
  function getCohomologyMultiplication($this) {
    return $this.w1p_1.l1q($this.x1p_1, $this.x1p_1, $this.x1p_1);
  }
  function DGMagmaImpl$cohomology$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_34().k1p(this$0.a1q_1, this$0.x1p_1, getCohomologyMultiplication(this$0));
    };
  }
  function DGMagmaImpl(gVectorSpace, differential, multiplication, cohomologyGVectorSpace) {
    this.v1p_1 = differential;
    this.w1p_1 = multiplication;
    this.x1p_1 = cohomologyGVectorSpace;
    this.y1p_1 = gVectorSpace;
    this.z1p_1 = Companion_getInstance_10().g1n(this);
    this.a1q_1 = this.v1p_1.u1j();
    var tmp = this;
    tmp.b1q_1 = lazy(DGMagmaImpl$cohomology$delegate$lambda(this));
  }
  DGMagmaImpl.prototype.k1j = function () {
    return this.v1p_1;
  };
  DGMagmaImpl.prototype.j1j = function () {
    return this.w1p_1;
  };
  DGMagmaImpl.prototype.d1k = function () {
    return this.y1p_1.d1k();
  };
  DGMagmaImpl.prototype.y1j = function () {
    return this.y1p_1.y1j();
  };
  DGMagmaImpl.prototype.e1k = function () {
    return this.y1p_1.e1k();
  };
  DGMagmaImpl.prototype.z1j = function () {
    return this.y1p_1.z1j();
  };
  DGMagmaImpl.prototype.a1k = function () {
    return this.y1p_1.a1k();
  };
  DGMagmaImpl.prototype.zc = function () {
    return this.y1p_1.zc();
  };
  DGMagmaImpl.prototype.x1j = function () {
    return this.y1p_1.x1j();
  };
  DGMagmaImpl.prototype.c1k = function () {
    return this.y1p_1.c1k();
  };
  DGMagmaImpl.prototype.u1k = function () {
    return this.y1p_1.u1k();
  };
  DGMagmaImpl.prototype.o1k = function (a, b) {
    return this.y1p_1.o1k(a, b);
  };
  DGMagmaImpl.prototype.m1k = function (gVector) {
    return this.y1p_1.m1k(gVector);
  };
  DGMagmaImpl.prototype.n1k = function (gVector) {
    return this.y1p_1.n1k(gVector);
  };
  DGMagmaImpl.prototype.l1k = function (gVectorOrZero, degree) {
    return this.y1p_1.l1k(gVectorOrZero, degree);
  };
  DGMagmaImpl.prototype.t1k = function (a, b) {
    return this.y1p_1.t1k(a, b);
  };
  DGMagmaImpl.prototype.h1k = function (basisName, degree) {
    return this.y1p_1.h1k(basisName, degree);
  };
  DGMagmaImpl.prototype.f1k = function (vector, degree) {
    return this.y1p_1.f1k(vector, degree);
  };
  DGMagmaImpl.prototype.g1k = function (vector, degree) {
    return this.y1p_1.g1k(vector, degree);
  };
  DGMagmaImpl.prototype.b1k = function (degree) {
    return this.y1p_1.b1k(degree);
  };
  DGMagmaImpl.prototype.l = function (degree) {
    return this.y1p_1.l(degree);
  };
  DGMagmaImpl.prototype.i1k = function (degree) {
    return this.y1p_1.i1k(degree);
  };
  DGMagmaImpl.prototype.j1k = function (degree) {
    return this.y1p_1.j1k(degree);
  };
  DGMagmaImpl.prototype.k1k = function (degree) {
    return this.y1p_1.k1k(degree);
  };
  DGMagmaImpl.prototype.q1k = function (scalar, gVector) {
    return this.y1p_1.q1k(scalar, gVector);
  };
  DGMagmaImpl.prototype.p1k = function (a, b) {
    return this.y1p_1.p1k(a, b);
  };
  DGMagmaImpl.prototype.toString = function () {
    return this.y1p_1.toString();
  };
  DGMagmaImpl.prototype.c1n = function (printConfig) {
    return this.y1p_1.c1n(printConfig);
  };
  DGMagmaImpl.prototype.c1j = function () {
    return this.z1p_1;
  };
  DGMagmaImpl.prototype.i1j = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = cohomology$factory_1();
    tmp$ret$0 = this.b1q_1.f1();
    return tmp$ret$0;
  };
  DGMagmaImpl.$metadata$ = classMeta('DGMagmaImpl', [DGMagma, GVectorSpace]);
  function DGMagmaContextImpl(dgMagma) {
    this.m1q_1 = dgMagma;
    this.n1q_1 = this.m1q_1;
    this.o1q_1 = this.m1q_1;
    this.p1q_1 = this.o1q_1;
    this.q1q_1 = this.o1q_1.x1j();
    this.r1q_1 = this.o1q_1.e1k();
  }
  DGMagmaContextImpl.prototype.b1l = function () {
    return this.m1q_1;
  };
  DGMagmaContextImpl.prototype.n1l = function () {
    return this.n1q_1;
  };
  DGMagmaContextImpl.prototype.p1m = function () {
    return this.o1q_1;
  };
  DGMagmaContextImpl.prototype.p1l = function () {
    return this.p1q_1;
  };
  DGMagmaContextImpl.prototype.x1j = function () {
    return this.q1q_1;
  };
  DGMagmaContextImpl.prototype.e1k = function () {
    return this.r1q_1;
  };
  DGMagmaContextImpl.$metadata$ = classMeta('DGMagmaContextImpl', [DGMagmaContext]);
  function cohomology$factory_1() {
    return getPropertyCallableRef('cohomology', 1, KProperty1, function (receiver) {
      return receiver.i1j();
    }, null);
  }
  function getCohomology($this, gVectorSpace, differential) {
    return new Cohomology(gVectorSpace, differential);
  }
  function Companion_10() {
    Companion_instance_10 = this;
  }
  Companion_10.prototype.u1p = function (gVectorSpace, differential) {
    var cohomology = getCohomology(Companion_getInstance_11(), gVectorSpace, differential);
    return new DGVectorSpaceImpl(gVectorSpace, differential, cohomology);
  };
  Companion_10.prototype.a1n = function (cohomology, cocycle) {
    // Inline function 'kotlin.require' call
    var tmp0_require = cohomology.p1j(cocycle);
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.Companion.getCohomologyClass.<anonymous>' call
      tmp$ret$0 = '' + cocycle + ' is not a cocycle';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    return cohomology.s1q().o1j(cocycle);
  };
  Companion_10.$metadata$ = objectMeta('Companion');
  var Companion_instance_10;
  function Companion_getInstance_11() {
    if (Companion_instance_10 == null)
      new Companion_10();
    return Companion_instance_10;
  }
  function DGVectorSpace() {
  }
  DGVectorSpace.$metadata$ = interfaceMeta('DGVectorSpace', [GVectorSpace]);
  function Companion_11() {
    Companion_instance_11 = this;
  }
  Companion_11.prototype.l1r = function (dgVectorSpace) {
    return new DGVectorContextImpl(dgVectorSpace);
  };
  Companion_11.$metadata$ = objectMeta('Companion');
  var Companion_instance_11;
  function Companion_getInstance_12() {
    if (Companion_instance_11 == null)
      new Companion_11();
    return Companion_instance_11;
  }
  function DGVectorContext() {
  }
  DGVectorContext.$metadata$ = interfaceMeta('DGVectorContext', [GVectorContext]);
  function DGVectorSpaceImpl(gVectorSpace, differential, cohomology) {
    this.m1r_1 = differential;
    this.n1r_1 = cohomology;
    this.o1r_1 = gVectorSpace;
    this.p1r_1 = Companion_getInstance_12().l1r(this);
    this.q1r_1 = gVectorSpace.c1k();
  }
  DGVectorSpaceImpl.prototype.k1j = function () {
    return this.m1r_1;
  };
  DGVectorSpaceImpl.prototype.i1j = function () {
    return this.n1r_1;
  };
  DGVectorSpaceImpl.prototype.d1k = function () {
    return this.o1r_1.d1k();
  };
  DGVectorSpaceImpl.prototype.y1j = function () {
    return this.o1r_1.y1j();
  };
  DGVectorSpaceImpl.prototype.e1k = function () {
    return this.o1r_1.e1k();
  };
  DGVectorSpaceImpl.prototype.z1j = function () {
    return this.o1r_1.z1j();
  };
  DGVectorSpaceImpl.prototype.a1k = function () {
    return this.o1r_1.a1k();
  };
  DGVectorSpaceImpl.prototype.zc = function () {
    return this.o1r_1.zc();
  };
  DGVectorSpaceImpl.prototype.x1j = function () {
    return this.o1r_1.x1j();
  };
  DGVectorSpaceImpl.prototype.u1k = function () {
    return this.o1r_1.u1k();
  };
  DGVectorSpaceImpl.prototype.o1k = function (a, b) {
    return this.o1r_1.o1k(a, b);
  };
  DGVectorSpaceImpl.prototype.m1k = function (gVector) {
    return this.o1r_1.m1k(gVector);
  };
  DGVectorSpaceImpl.prototype.n1k = function (gVector) {
    return this.o1r_1.n1k(gVector);
  };
  DGVectorSpaceImpl.prototype.l1k = function (gVectorOrZero, degree) {
    return this.o1r_1.l1k(gVectorOrZero, degree);
  };
  DGVectorSpaceImpl.prototype.t1k = function (a, b) {
    return this.o1r_1.t1k(a, b);
  };
  DGVectorSpaceImpl.prototype.h1k = function (basisName, degree) {
    return this.o1r_1.h1k(basisName, degree);
  };
  DGVectorSpaceImpl.prototype.f1k = function (vector, degree) {
    return this.o1r_1.f1k(vector, degree);
  };
  DGVectorSpaceImpl.prototype.g1k = function (vector, degree) {
    return this.o1r_1.g1k(vector, degree);
  };
  DGVectorSpaceImpl.prototype.b1k = function (degree) {
    return this.o1r_1.b1k(degree);
  };
  DGVectorSpaceImpl.prototype.l = function (degree) {
    return this.o1r_1.l(degree);
  };
  DGVectorSpaceImpl.prototype.i1k = function (degree) {
    return this.o1r_1.i1k(degree);
  };
  DGVectorSpaceImpl.prototype.j1k = function (degree) {
    return this.o1r_1.j1k(degree);
  };
  DGVectorSpaceImpl.prototype.k1k = function (degree) {
    return this.o1r_1.k1k(degree);
  };
  DGVectorSpaceImpl.prototype.q1k = function (scalar, gVector) {
    return this.o1r_1.q1k(scalar, gVector);
  };
  DGVectorSpaceImpl.prototype.p1k = function (a, b) {
    return this.o1r_1.p1k(a, b);
  };
  DGVectorSpaceImpl.prototype.c1n = function (printConfig) {
    return this.o1r_1.c1n(printConfig);
  };
  DGVectorSpaceImpl.prototype.c1j = function () {
    return this.p1r_1;
  };
  DGVectorSpaceImpl.prototype.c1k = function () {
    return this.q1r_1;
  };
  DGVectorSpaceImpl.prototype.toString = function () {
    var name = this.zc();
    return '(' + name + ', d)';
  };
  DGVectorSpaceImpl.$metadata$ = classMeta('DGVectorSpaceImpl', [DGVectorSpace, GVectorSpace]);
  function Cohomology(gVectorSpace, differential) {
    this.r1r_1 = gVectorSpace;
    var tmp = this;
    var tmp_0 = Companion_getInstance_35();
    var tmp_1 = differential.u1j();
    var tmp_2 = differential.x1n();
    var tmp_3 = differential.t1n();
    tmp.s1r_1 = tmp_0.t1r(tmp_1, gVectorSpace, tmp_2, tmp_3, null, 'H(' + gVectorSpace.zc() + ')', 16, null);
  }
  Cohomology.prototype.d1k = function () {
    return this.s1r_1.d1k();
  };
  Cohomology.prototype.c1j = function () {
    return this.s1r_1.c1j();
  };
  Cohomology.prototype.y1j = function () {
    return this.s1r_1.y1j();
  };
  Cohomology.prototype.e1k = function () {
    return this.s1r_1.e1k();
  };
  Cohomology.prototype.z1j = function () {
    return this.s1r_1.z1j();
  };
  Cohomology.prototype.a1k = function () {
    return this.s1r_1.a1k();
  };
  Cohomology.prototype.zc = function () {
    return this.s1r_1.zc();
  };
  Cohomology.prototype.x1j = function () {
    return this.s1r_1.x1j();
  };
  Cohomology.prototype.s1q = function () {
    return this.s1r_1.s1q();
  };
  Cohomology.prototype.c1k = function () {
    return this.s1r_1.c1k();
  };
  Cohomology.prototype.u1k = function () {
    return this.s1r_1.u1k();
  };
  Cohomology.prototype.u1r = function (a, b) {
    return this.s1r_1.o1k(a, b);
  };
  Cohomology.prototype.o1k = function (a, b) {
    return this.u1r(a, b);
  };
  Cohomology.prototype.v1r = function (gVector) {
    return this.s1r_1.m1k(gVector);
  };
  Cohomology.prototype.m1k = function (gVector) {
    return this.v1r(gVector);
  };
  Cohomology.prototype.w1r = function (gVector) {
    return this.s1r_1.n1k(gVector);
  };
  Cohomology.prototype.n1k = function (gVector) {
    return this.w1r(gVector);
  };
  Cohomology.prototype.x1r = function (gVectorOrZero, degree) {
    return this.s1r_1.l1k(gVectorOrZero, degree);
  };
  Cohomology.prototype.l1k = function (gVectorOrZero, degree) {
    return this.x1r(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  Cohomology.prototype.y1r = function (a, b) {
    return this.s1r_1.t1k(a, b);
  };
  Cohomology.prototype.t1k = function (a, b) {
    return this.y1r(a, b);
  };
  Cohomology.prototype.z1r = function (basisName, degree) {
    return this.s1r_1.h1k(basisName, degree);
  };
  Cohomology.prototype.h1k = function (basisName, degree) {
    var tmp = basisName instanceof SubQuotBasis ? basisName : THROW_CCE();
    return this.z1r(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  Cohomology.prototype.a1s = function (vector, degree) {
    return this.s1r_1.f1k(vector, degree);
  };
  Cohomology.prototype.f1k = function (vector, degree) {
    return this.a1s(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  Cohomology.prototype.b1s = function (vector, degree) {
    return this.s1r_1.g1k(vector, degree);
  };
  Cohomology.prototype.g1k = function (vector, degree) {
    return this.b1s(vector, degree);
  };
  Cohomology.prototype.b1k = function (degree) {
    return this.s1r_1.b1k(degree);
  };
  Cohomology.prototype.l = function (degree) {
    return this.s1r_1.l(degree);
  };
  Cohomology.prototype.i1k = function (degree) {
    return this.s1r_1.i1k(degree);
  };
  Cohomology.prototype.x1o = function (degree) {
    return this.s1r_1.x1o(degree);
  };
  Cohomology.prototype.c1s = function (augmentedDegree) {
    return this.s1r_1.c1s(augmentedDegree);
  };
  Cohomology.prototype.j1k = function (degree) {
    return this.s1r_1.j1k(degree);
  };
  Cohomology.prototype.k1k = function (degree) {
    return this.s1r_1.k1k(degree);
  };
  Cohomology.prototype.d1s = function (scalar, gVector) {
    return this.s1r_1.q1k(scalar, gVector);
  };
  Cohomology.prototype.q1k = function (scalar, gVector) {
    return this.d1s(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  Cohomology.prototype.p1j = function (gVector) {
    return this.s1r_1.p1j(gVector);
  };
  Cohomology.prototype.e1s = function (a, b) {
    return this.s1r_1.p1k(a, b);
  };
  Cohomology.prototype.p1k = function (a, b) {
    return this.e1s(a, b);
  };
  Cohomology.prototype.toString = function () {
    var tmp = PrintType_PLAIN_getInstance();
    return this.c1n(PrintConfig_init_$Create$(tmp, null, null, null, null, 30, null));
  };
  Cohomology.prototype.c1n = function (printConfig) {
    return 'H(' + this.r1r_1.c1n(printConfig) + ')';
  };
  Cohomology.$metadata$ = classMeta('Cohomology', [SubQuotGVectorSpace]);
  function DGVectorContextImpl(dgVectorSpace) {
    this.f1s_1 = dgVectorSpace;
    this.g1s_1 = Companion_getInstance_25().h1s(dgVectorSpace);
  }
  DGVectorContextImpl.prototype.n1l = function () {
    return this.f1s_1;
  };
  DGVectorContextImpl.prototype.e1k = function () {
    return this.g1s_1.e1k();
  };
  DGVectorContextImpl.prototype.p1l = function () {
    return this.g1s_1.p1l();
  };
  DGVectorContextImpl.prototype.x1j = function () {
    return this.g1s_1.x1j();
  };
  DGVectorContextImpl.prototype.n1m = function () {
    return this.g1s_1.n1m();
  };
  DGVectorContextImpl.prototype.m1m = function () {
    return this.g1s_1.m1m();
  };
  DGVectorContextImpl.prototype.u1k = function () {
    return this.g1s_1.u1k();
  };
  DGVectorContextImpl.prototype.f1m = function (_this__u8e3s4, other) {
    return this.g1s_1.f1m(_this__u8e3s4, other);
  };
  DGVectorContextImpl.prototype.g1m = function (_this__u8e3s4, other) {
    return this.g1s_1.g1m(_this__u8e3s4, other);
  };
  DGVectorContextImpl.prototype.e1m = function (_this__u8e3s4, ind) {
    return this.g1s_1.e1m(_this__u8e3s4, ind);
  };
  DGVectorContextImpl.prototype.h1m = function (_this__u8e3s4) {
    return this.g1s_1.h1m(_this__u8e3s4);
  };
  DGVectorContextImpl.prototype.x1l = function (_this__u8e3s4, other) {
    return this.g1s_1.x1l(_this__u8e3s4, other);
  };
  DGVectorContextImpl.prototype.w1l = function (_this__u8e3s4, other) {
    return this.g1s_1.w1l(_this__u8e3s4, other);
  };
  DGVectorContextImpl.prototype.u1l = function (_this__u8e3s4, other) {
    return this.g1s_1.u1l(_this__u8e3s4, other);
  };
  DGVectorContextImpl.prototype.v1l = function (_this__u8e3s4, other) {
    return this.g1s_1.v1l(_this__u8e3s4, other);
  };
  DGVectorContextImpl.prototype.t1l = function (_this__u8e3s4, other) {
    return this.g1s_1.t1l(_this__u8e3s4, other);
  };
  DGVectorContextImpl.prototype.s1l = function (_this__u8e3s4, other) {
    return this.g1s_1.s1l(_this__u8e3s4, other);
  };
  DGVectorContextImpl.prototype.q1l = function (_this__u8e3s4, other) {
    return this.g1s_1.q1l(_this__u8e3s4, other);
  };
  DGVectorContextImpl.prototype.r1l = function (_this__u8e3s4, other) {
    return this.g1s_1.r1l(_this__u8e3s4, other);
  };
  DGVectorContextImpl.prototype.d1m = function (_this__u8e3s4) {
    return this.g1s_1.d1m(_this__u8e3s4);
  };
  DGVectorContextImpl.prototype.c1m = function (_this__u8e3s4, degree) {
    return this.g1s_1.c1m(_this__u8e3s4, degree);
  };
  DGVectorContextImpl.prototype.l1l = function (_this__u8e3s4, other) {
    return this.g1s_1.l1l(_this__u8e3s4, other);
  };
  DGVectorContextImpl.prototype.k1l = function (_this__u8e3s4, numVector) {
    return this.g1s_1.k1l(_this__u8e3s4, numVector);
  };
  DGVectorContextImpl.prototype.e1l = function (_this__u8e3s4, gVector) {
    return this.g1s_1.e1l(_this__u8e3s4, gVector);
  };
  DGVectorContextImpl.prototype.j1l = function (_this__u8e3s4, scalar) {
    return this.g1s_1.j1l(_this__u8e3s4, scalar);
  };
  DGVectorContextImpl.prototype.d1l = function (_this__u8e3s4, scalar) {
    return this.g1s_1.d1l(_this__u8e3s4, scalar);
  };
  DGVectorContextImpl.prototype.h1l = function (_this__u8e3s4, sign) {
    return this.g1s_1.h1l(_this__u8e3s4, sign);
  };
  DGVectorContextImpl.prototype.g1l = function (_this__u8e3s4, scalar) {
    return this.g1s_1.g1l(_this__u8e3s4, scalar);
  };
  DGVectorContextImpl.prototype.i1l = function (_this__u8e3s4, gVector) {
    return this.g1s_1.i1l(_this__u8e3s4, gVector);
  };
  DGVectorContextImpl.prototype.f1l = function (_this__u8e3s4, gVector) {
    return this.g1s_1.f1l(_this__u8e3s4, gVector);
  };
  DGVectorContextImpl.prototype.k1m = function (_this__u8e3s4) {
    return this.g1s_1.k1m(_this__u8e3s4);
  };
  DGVectorContextImpl.prototype.b1m = function (_this__u8e3s4) {
    return this.g1s_1.b1m(_this__u8e3s4);
  };
  DGVectorContextImpl.prototype.a1m = function (_this__u8e3s4) {
    return this.g1s_1.a1m(_this__u8e3s4);
  };
  DGVectorContextImpl.prototype.y1l = function (_this__u8e3s4) {
    return this.g1s_1.y1l(_this__u8e3s4);
  };
  DGVectorContextImpl.prototype.z1l = function (_this__u8e3s4) {
    return this.g1s_1.z1l(_this__u8e3s4);
  };
  DGVectorContextImpl.$metadata$ = classMeta('DGVectorContextImpl', [DGVectorContext, GVectorContext]);
  function Companion_12() {
    Companion_instance_12 = this;
  }
  Companion_12.prototype.i1s = function (source, gLinearMap) {
    return new DerivationImpl(source, gLinearMap);
  };
  Companion_12.prototype.j1s = function (source, degree, matrixSpace, name, getGVectors) {
    var gLinearMap = Companion_getInstance_21().k1s(source, source, degree, matrixSpace, name, getGVectors);
    return new DerivationImpl(source, gLinearMap);
  };
  Companion_12.$metadata$ = objectMeta('Companion');
  var Companion_instance_12;
  function Companion_getInstance_13() {
    if (Companion_instance_12 == null)
      new Companion_12();
    return Companion_instance_12;
  }
  function Derivation() {
  }
  Derivation.$metadata$ = interfaceMeta('Derivation', [MagmaDerivation]);
  function Companion_13() {
    Companion_instance_13 = this;
  }
  Companion_13.prototype.l1s = function (source, degree, matrixSpace, name, getGVectors) {
    var gLinearMap = Companion_getInstance_21().k1s(source, source, degree, matrixSpace, name, getGVectors);
    return new LieDerivationImpl(source, gLinearMap);
  };
  Companion_13.$metadata$ = objectMeta('Companion');
  var Companion_instance_13;
  function Companion_getInstance_14() {
    if (Companion_instance_13 == null)
      new Companion_13();
    return Companion_instance_13;
  }
  function LieDerivation() {
  }
  LieDerivation.$metadata$ = interfaceMeta('LieDerivation', [MagmaDerivation]);
  function Companion_14() {
    Companion_instance_14 = this;
  }
  Companion_14.prototype.m1s = function (source, gLinearMap) {
    return new MagmaDerivationImpl(source, gLinearMap);
  };
  Companion_14.$metadata$ = objectMeta('Companion');
  var Companion_instance_14;
  function Companion_getInstance_15() {
    if (Companion_instance_14 == null)
      new Companion_14();
    return Companion_instance_14;
  }
  function MagmaDerivation() {
  }
  MagmaDerivation.$metadata$ = interfaceMeta('MagmaDerivation', [GLinearMap]);
  function DerivationImpl(source, gLinearMap) {
    this.n1s_1 = source;
    this.o1s_1 = Companion_getInstance_15().m1s(source, gLinearMap);
    this.p1s_1 = this.n1s_1;
  }
  DerivationImpl.prototype.o1n = function () {
    return this.n1s_1;
  };
  DerivationImpl.prototype.q1n = function () {
    return this.o1s_1.q1n();
  };
  DerivationImpl.prototype.y1j = function () {
    return this.o1s_1.y1j();
  };
  DerivationImpl.prototype.u1j = function () {
    return this.o1s_1.u1j();
  };
  DerivationImpl.prototype.zc = function () {
    return this.o1s_1.zc();
  };
  DerivationImpl.prototype.r1n = function () {
    return this.o1s_1.r1n();
  };
  DerivationImpl.prototype.c1o = function (gVector) {
    return this.o1s_1.s1n(gVector);
  };
  DerivationImpl.prototype.s1n = function (gVector) {
    return this.c1o(gVector);
  };
  DerivationImpl.prototype.b1k = function (degree) {
    return this.o1s_1.b1k(degree);
  };
  DerivationImpl.prototype.t1n = function () {
    return this.o1s_1.t1n();
  };
  DerivationImpl.prototype.d1o = function (sourceQuot, targetQuot) {
    return this.o1s_1.u1n(sourceQuot, targetQuot);
  };
  DerivationImpl.prototype.u1n = function (sourceQuot, targetQuot) {
    return this.d1o(sourceQuot, targetQuot);
  };
  DerivationImpl.prototype.e1o = function (sourceSub, targetSub) {
    return this.o1s_1.v1n(sourceSub, targetSub);
  };
  DerivationImpl.prototype.v1n = function (sourceSub, targetSub) {
    return this.e1o(sourceSub, targetSub);
  };
  DerivationImpl.prototype.f1o = function (sourceSubQuot, targetSubQuot) {
    return this.o1s_1.w1n(sourceSubQuot, targetSubQuot);
  };
  DerivationImpl.prototype.w1n = function (sourceSubQuot, targetSubQuot) {
    return this.f1o(sourceSubQuot, targetSubQuot);
  };
  DerivationImpl.prototype.g1o = function (gVector) {
    return this.o1s_1.o1j(gVector);
  };
  DerivationImpl.prototype.o1j = function (gVector) {
    return this.g1o(gVector);
  };
  DerivationImpl.prototype.x1n = function () {
    return this.o1s_1.x1n();
  };
  DerivationImpl.prototype.p1n = function () {
    return this.p1s_1;
  };
  DerivationImpl.$metadata$ = classMeta('DerivationImpl', [Derivation, MagmaDerivation]);
  function LieDerivationImpl(source, gLinearMap) {
    this.q1s_1 = source;
    this.r1s_1 = Companion_getInstance_15().m1s(source, gLinearMap);
    this.s1s_1 = this.q1s_1;
  }
  LieDerivationImpl.prototype.o1n = function () {
    return this.q1s_1;
  };
  LieDerivationImpl.prototype.q1n = function () {
    return this.r1s_1.q1n();
  };
  LieDerivationImpl.prototype.y1j = function () {
    return this.r1s_1.y1j();
  };
  LieDerivationImpl.prototype.u1j = function () {
    return this.r1s_1.u1j();
  };
  LieDerivationImpl.prototype.zc = function () {
    return this.r1s_1.zc();
  };
  LieDerivationImpl.prototype.r1n = function () {
    return this.r1s_1.r1n();
  };
  LieDerivationImpl.prototype.c1o = function (gVector) {
    return this.r1s_1.s1n(gVector);
  };
  LieDerivationImpl.prototype.s1n = function (gVector) {
    return this.c1o(gVector);
  };
  LieDerivationImpl.prototype.b1k = function (degree) {
    return this.r1s_1.b1k(degree);
  };
  LieDerivationImpl.prototype.t1n = function () {
    return this.r1s_1.t1n();
  };
  LieDerivationImpl.prototype.d1o = function (sourceQuot, targetQuot) {
    return this.r1s_1.u1n(sourceQuot, targetQuot);
  };
  LieDerivationImpl.prototype.u1n = function (sourceQuot, targetQuot) {
    return this.d1o(sourceQuot, targetQuot);
  };
  LieDerivationImpl.prototype.e1o = function (sourceSub, targetSub) {
    return this.r1s_1.v1n(sourceSub, targetSub);
  };
  LieDerivationImpl.prototype.v1n = function (sourceSub, targetSub) {
    return this.e1o(sourceSub, targetSub);
  };
  LieDerivationImpl.prototype.f1o = function (sourceSubQuot, targetSubQuot) {
    return this.r1s_1.w1n(sourceSubQuot, targetSubQuot);
  };
  LieDerivationImpl.prototype.w1n = function (sourceSubQuot, targetSubQuot) {
    return this.f1o(sourceSubQuot, targetSubQuot);
  };
  LieDerivationImpl.prototype.g1o = function (gVector) {
    return this.r1s_1.o1j(gVector);
  };
  LieDerivationImpl.prototype.o1j = function (gVector) {
    return this.g1o(gVector);
  };
  LieDerivationImpl.prototype.x1n = function () {
    return this.r1s_1.x1n();
  };
  LieDerivationImpl.prototype.p1n = function () {
    return this.s1s_1;
  };
  LieDerivationImpl.$metadata$ = classMeta('LieDerivationImpl', [LieDerivation, MagmaDerivation]);
  function MagmaDerivationImpl(source, gLinearMap) {
    this.t1s_1 = source;
    this.u1s_1 = gLinearMap;
    this.v1s_1 = this.t1s_1;
    // Inline function 'kotlin.require' call
    var tmp0_require = equals(gLinearMap.o1n(), this.t1s_1);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlin.require.<anonymous>' call
      tmp$ret$0 = 'Failed requirement.';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.require' call
    var tmp1_require = equals(gLinearMap.p1n(), this.t1s_1);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp1_require) {
      var tmp$ret$1;
      // Inline function 'kotlin.require.<anonymous>' call
      tmp$ret$1 = 'Failed requirement.';
      var message_0 = tmp$ret$1;
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
  }
  MagmaDerivationImpl.prototype.o1n = function () {
    return this.t1s_1;
  };
  MagmaDerivationImpl.prototype.q1n = function () {
    return this.u1s_1.q1n();
  };
  MagmaDerivationImpl.prototype.y1j = function () {
    return this.u1s_1.y1j();
  };
  MagmaDerivationImpl.prototype.u1j = function () {
    return this.u1s_1.u1j();
  };
  MagmaDerivationImpl.prototype.zc = function () {
    return this.u1s_1.zc();
  };
  MagmaDerivationImpl.prototype.r1n = function () {
    return this.u1s_1.r1n();
  };
  MagmaDerivationImpl.prototype.c1o = function (gVector) {
    return this.u1s_1.s1n(gVector);
  };
  MagmaDerivationImpl.prototype.s1n = function (gVector) {
    return this.c1o(gVector);
  };
  MagmaDerivationImpl.prototype.b1k = function (degree) {
    return this.u1s_1.b1k(degree);
  };
  MagmaDerivationImpl.prototype.t1n = function () {
    return this.u1s_1.t1n();
  };
  MagmaDerivationImpl.prototype.d1o = function (sourceQuot, targetQuot) {
    return this.u1s_1.u1n(sourceQuot, targetQuot);
  };
  MagmaDerivationImpl.prototype.u1n = function (sourceQuot, targetQuot) {
    return this.d1o(sourceQuot, targetQuot);
  };
  MagmaDerivationImpl.prototype.e1o = function (sourceSub, targetSub) {
    return this.u1s_1.v1n(sourceSub, targetSub);
  };
  MagmaDerivationImpl.prototype.v1n = function (sourceSub, targetSub) {
    return this.e1o(sourceSub, targetSub);
  };
  MagmaDerivationImpl.prototype.f1o = function (sourceSubQuot, targetSubQuot) {
    return this.u1s_1.w1n(sourceSubQuot, targetSubQuot);
  };
  MagmaDerivationImpl.prototype.w1n = function (sourceSubQuot, targetSubQuot) {
    return this.f1o(sourceSubQuot, targetSubQuot);
  };
  MagmaDerivationImpl.prototype.g1o = function (gVector) {
    return this.u1s_1.o1j(gVector);
  };
  MagmaDerivationImpl.prototype.o1j = function (gVector) {
    return this.g1o(gVector);
  };
  MagmaDerivationImpl.prototype.x1n = function () {
    return this.u1s_1.x1n();
  };
  MagmaDerivationImpl.prototype.p1n = function () {
    return this.v1s_1;
  };
  MagmaDerivationImpl.$metadata$ = classMeta('MagmaDerivationImpl', [MagmaDerivation, GLinearMap]);
  function InvalidIdentifierException(identifierName, validIdentifierNames) {
    Exception_init_$Init$(trimIndent('\n        Invalid generator name: ' + identifierName + '\n        Valid names are: ' + joinToString$default(validIdentifierNames, ', ', null, null, 0, null, null, 62, null) + '\n    '), this);
    this.w1s_1 = identifierName;
    this.x1s_1 = validIdentifierNames;
    captureStack(this, InvalidIdentifierException);
  }
  InvalidIdentifierException.$metadata$ = classMeta('InvalidIdentifierException', undefined, undefined, undefined, undefined, Exception.prototype);
  function GAlgebra() {
  }
  GAlgebra.$metadata$ = interfaceMeta('GAlgebra', [GMagma]);
  function Companion_15() {
    Companion_instance_15 = this;
  }
  Companion_15.prototype.f1t = function (gAlgebra) {
    return new GAlgebraContextImpl(gAlgebra);
  };
  Companion_15.$metadata$ = objectMeta('Companion');
  var Companion_instance_15;
  function Companion_getInstance_16() {
    if (Companion_instance_15 == null)
      new Companion_15();
    return Companion_instance_15;
  }
  function GAlgebraContext() {
  }
  GAlgebraContext.$metadata$ = interfaceMeta('GAlgebraContext', [GMagmaContext]);
  function getValueFromASTNode(_this__u8e3s4, generatorList, astNode) {
    var tmp0_subject = astNode;
    var tmp;
    if (tmp0_subject instanceof Zero) {
      tmp = _this__u8e3s4.u1k();
    } else {
      if (tmp0_subject instanceof Identifier) {
        var tmp$ret$2;
        // Inline function 'kotlin.collections.find' call
        var tmp$ret$1;
        $l$block: {
          // Inline function 'kotlin.collections.firstOrNull' call
          var tmp0_iterator = generatorList.f();
          while (tmp0_iterator.g()) {
            var element = tmp0_iterator.h();
            var tmp$ret$0;
            // Inline function 'com.github.shwaka.kohomology.dg.getValueFromASTNode.<anonymous>' call
            tmp$ret$0 = element.z4_1 === astNode.s1t_1;
            if (tmp$ret$0) {
              tmp$ret$1 = element;
              break $l$block;
            }
          }
          tmp$ret$1 = null;
        }
        tmp$ret$2 = tmp$ret$1;
        var tmp1_safe_receiver = tmp$ret$2;
        var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.a5_1;
        var tmp_0;
        if (tmp2_elvis_lhs == null) {
          var tmp$ret$5;
          // Inline function 'kotlin.collections.map' call
          var tmp$ret$4;
          // Inline function 'kotlin.collections.mapTo' call
          var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(generatorList, 10));
          var tmp0_iterator_0 = generatorList.f();
          while (tmp0_iterator_0.g()) {
            var item = tmp0_iterator_0.h();
            var tmp$ret$3;
            // Inline function 'com.github.shwaka.kohomology.dg.getValueFromASTNode.<anonymous>' call
            tmp$ret$3 = item.z4_1;
            tmp0_mapTo.a(tmp$ret$3);
          }
          tmp$ret$4 = tmp0_mapTo;
          tmp$ret$5 = tmp$ret$4;
          throw new InvalidIdentifierException(astNode.s1t_1, tmp$ret$5);
        } else {
          tmp_0 = tmp2_elvis_lhs;
        }
        tmp = tmp_0;
      } else {
        if (tmp0_subject instanceof NatNumber) {
          var tmp_1;
          if (astNode.r1t_1 === 0) {
            tmp_1 = _this__u8e3s4.u1k();
          } else {
            var scalar = _this__u8e3s4.e1k().oh(astNode.r1t_1);
            var tmp$ret$7;
            // Inline function 'kotlin.run' call
            var tmp0_run = _this__u8e3s4.c1j();
            // Inline function 'kotlin.contracts.contract' call
            var tmp$ret$6;
            // Inline function 'com.github.shwaka.kohomology.dg.getValueFromASTNode.<anonymous>' call
            tmp$ret$6 = tmp0_run.e1l(scalar, tmp0_run.v1k());
            tmp$ret$7 = tmp$ret$6;
            tmp_1 = tmp$ret$7;
          }
          tmp = tmp_1;
        } else {
          if (tmp0_subject instanceof Divide) {
            var numeratorValue = getValueFromASTNode(_this__u8e3s4, generatorList, astNode.p1t_1);
            var denominatorValue = getValueFromASTNode(_this__u8e3s4, generatorList, astNode.q1t_1);
            var tmp$ret$9;
            // Inline function 'kotlin.run' call
            var tmp1_run = _this__u8e3s4.c1j();
            // Inline function 'kotlin.contracts.contract' call
            var tmp$ret$8;
            // Inline function 'com.github.shwaka.kohomology.dg.getValueFromASTNode.<anonymous>' call
            tmp$ret$8 = tmp1_run.g1l(numeratorValue, tmp1_run.g1m(1, tmp1_run.l1m(denominatorValue)));
            tmp$ret$9 = tmp$ret$8;
            tmp = tmp$ret$9;
          } else {
            if (tmp0_subject instanceof UnaryMinus) {
              var valueWithoutMinus = getValueFromASTNode(_this__u8e3s4, generatorList, astNode.o1t_1);
              var tmp$ret$11;
              // Inline function 'kotlin.run' call
              var tmp2_run = _this__u8e3s4.c1j();
              // Inline function 'kotlin.contracts.contract' call
              var tmp$ret$10;
              // Inline function 'com.github.shwaka.kohomology.dg.getValueFromASTNode.<anonymous>' call
              tmp$ret$10 = tmp2_run.z1l(valueWithoutMinus);
              tmp$ret$11 = tmp$ret$10;
              tmp = tmp$ret$11;
            } else {
              if (tmp0_subject instanceof Power) {
                var baseValue = getValueFromASTNode(_this__u8e3s4, generatorList, astNode.m1t_1);
                var tmp$ret$13;
                // Inline function 'kotlin.run' call
                var tmp3_run = _this__u8e3s4.c1j();
                // Inline function 'kotlin.contracts.contract' call
                var tmp$ret$12;
                // Inline function 'com.github.shwaka.kohomology.dg.getValueFromASTNode.<anonymous>' call
                tmp$ret$12 = tmp3_run.j1m(baseValue, astNode.n1t_1);
                tmp$ret$13 = tmp$ret$12;
                tmp = tmp$ret$13;
              } else {
                if (tmp0_subject instanceof Multiply) {
                  var leftValue = getValueFromASTNode(_this__u8e3s4, generatorList, astNode.k1t_1);
                  var rightValue = getValueFromASTNode(_this__u8e3s4, generatorList, astNode.l1t_1);
                  var tmp$ret$15;
                  // Inline function 'kotlin.run' call
                  var tmp4_run = _this__u8e3s4.c1j();
                  // Inline function 'kotlin.contracts.contract' call
                  var tmp$ret$14;
                  // Inline function 'com.github.shwaka.kohomology.dg.getValueFromASTNode.<anonymous>' call
                  tmp$ret$14 = tmp4_run.m1l(leftValue, rightValue);
                  tmp$ret$15 = tmp$ret$14;
                  tmp = tmp$ret$15;
                } else {
                  if (tmp0_subject instanceof Subtract) {
                    var leftValue_0 = getValueFromASTNode(_this__u8e3s4, generatorList, astNode.i1t_1);
                    var rightValue_0 = getValueFromASTNode(_this__u8e3s4, generatorList, astNode.j1t_1);
                    var tmp$ret$17;
                    // Inline function 'kotlin.run' call
                    var tmp5_run = _this__u8e3s4.c1j();
                    // Inline function 'kotlin.contracts.contract' call
                    var tmp$ret$16;
                    // Inline function 'com.github.shwaka.kohomology.dg.getValueFromASTNode.<anonymous>' call
                    tmp$ret$16 = tmp5_run.v1l(leftValue_0, rightValue_0);
                    tmp$ret$17 = tmp$ret$16;
                    tmp = tmp$ret$17;
                  } else {
                    if (tmp0_subject instanceof Sum) {
                      var leftValue_1 = getValueFromASTNode(_this__u8e3s4, generatorList, astNode.g1t_1);
                      var rightValue_1 = getValueFromASTNode(_this__u8e3s4, generatorList, astNode.h1t_1);
                      var tmp$ret$19;
                      // Inline function 'kotlin.run' call
                      var tmp6_run = _this__u8e3s4.c1j();
                      // Inline function 'kotlin.contracts.contract' call
                      var tmp$ret$18;
                      // Inline function 'com.github.shwaka.kohomology.dg.getValueFromASTNode.<anonymous>' call
                      tmp$ret$18 = tmp6_run.r1l(leftValue_1, rightValue_1);
                      tmp$ret$19 = tmp$ret$18;
                      tmp = tmp$ret$19;
                    } else {
                      noWhenBranchMatchedException();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return tmp;
  }
  function GAlgebraContextImpl(gAlgebra) {
    this.t1t_1 = gAlgebra;
    this.u1t_1 = Companion_getInstance_23().v1t(gAlgebra);
  }
  GAlgebraContextImpl.prototype.h1n = function () {
    return this.t1t_1;
  };
  GAlgebraContextImpl.prototype.e1k = function () {
    return this.u1t_1.e1k();
  };
  GAlgebraContextImpl.prototype.p1m = function () {
    return this.u1t_1.p1m();
  };
  GAlgebraContextImpl.prototype.p1l = function () {
    return this.u1t_1.p1l();
  };
  GAlgebraContextImpl.prototype.x1j = function () {
    return this.u1t_1.x1j();
  };
  GAlgebraContextImpl.prototype.n1m = function () {
    return this.u1t_1.n1m();
  };
  GAlgebraContextImpl.prototype.m1m = function () {
    return this.u1t_1.m1m();
  };
  GAlgebraContextImpl.prototype.u1k = function () {
    return this.u1t_1.u1k();
  };
  GAlgebraContextImpl.prototype.f1m = function (_this__u8e3s4, other) {
    return this.u1t_1.f1m(_this__u8e3s4, other);
  };
  GAlgebraContextImpl.prototype.g1m = function (_this__u8e3s4, other) {
    return this.u1t_1.g1m(_this__u8e3s4, other);
  };
  GAlgebraContextImpl.prototype.e1m = function (_this__u8e3s4, ind) {
    return this.u1t_1.e1m(_this__u8e3s4, ind);
  };
  GAlgebraContextImpl.prototype.h1m = function (_this__u8e3s4) {
    return this.u1t_1.h1m(_this__u8e3s4);
  };
  GAlgebraContextImpl.prototype.x1l = function (_this__u8e3s4, other) {
    return this.u1t_1.x1l(_this__u8e3s4, other);
  };
  GAlgebraContextImpl.prototype.w1l = function (_this__u8e3s4, other) {
    return this.u1t_1.w1l(_this__u8e3s4, other);
  };
  GAlgebraContextImpl.prototype.u1l = function (_this__u8e3s4, other) {
    return this.u1t_1.u1l(_this__u8e3s4, other);
  };
  GAlgebraContextImpl.prototype.v1l = function (_this__u8e3s4, other) {
    return this.u1t_1.v1l(_this__u8e3s4, other);
  };
  GAlgebraContextImpl.prototype.t1l = function (_this__u8e3s4, other) {
    return this.u1t_1.t1l(_this__u8e3s4, other);
  };
  GAlgebraContextImpl.prototype.s1l = function (_this__u8e3s4, other) {
    return this.u1t_1.s1l(_this__u8e3s4, other);
  };
  GAlgebraContextImpl.prototype.q1l = function (_this__u8e3s4, other) {
    return this.u1t_1.q1l(_this__u8e3s4, other);
  };
  GAlgebraContextImpl.prototype.r1l = function (_this__u8e3s4, other) {
    return this.u1t_1.r1l(_this__u8e3s4, other);
  };
  GAlgebraContextImpl.prototype.d1m = function (_this__u8e3s4) {
    return this.u1t_1.d1m(_this__u8e3s4);
  };
  GAlgebraContextImpl.prototype.c1m = function (_this__u8e3s4, degree) {
    return this.u1t_1.c1m(_this__u8e3s4, degree);
  };
  GAlgebraContextImpl.prototype.l1l = function (_this__u8e3s4, other) {
    return this.u1t_1.l1l(_this__u8e3s4, other);
  };
  GAlgebraContextImpl.prototype.k1l = function (_this__u8e3s4, numVector) {
    return this.u1t_1.k1l(_this__u8e3s4, numVector);
  };
  GAlgebraContextImpl.prototype.e1l = function (_this__u8e3s4, gVector) {
    return this.u1t_1.e1l(_this__u8e3s4, gVector);
  };
  GAlgebraContextImpl.prototype.j1l = function (_this__u8e3s4, scalar) {
    return this.u1t_1.j1l(_this__u8e3s4, scalar);
  };
  GAlgebraContextImpl.prototype.d1l = function (_this__u8e3s4, scalar) {
    return this.u1t_1.d1l(_this__u8e3s4, scalar);
  };
  GAlgebraContextImpl.prototype.c1l = function (_this__u8e3s4, other) {
    return this.u1t_1.c1l(_this__u8e3s4, other);
  };
  GAlgebraContextImpl.prototype.h1l = function (_this__u8e3s4, sign) {
    return this.u1t_1.h1l(_this__u8e3s4, sign);
  };
  GAlgebraContextImpl.prototype.g1l = function (_this__u8e3s4, scalar) {
    return this.u1t_1.g1l(_this__u8e3s4, scalar);
  };
  GAlgebraContextImpl.prototype.m1l = function (_this__u8e3s4, other) {
    return this.u1t_1.m1l(_this__u8e3s4, other);
  };
  GAlgebraContextImpl.prototype.i1l = function (_this__u8e3s4, gVector) {
    return this.u1t_1.i1l(_this__u8e3s4, gVector);
  };
  GAlgebraContextImpl.prototype.f1l = function (_this__u8e3s4, gVector) {
    return this.u1t_1.f1l(_this__u8e3s4, gVector);
  };
  GAlgebraContextImpl.prototype.k1m = function (_this__u8e3s4) {
    return this.u1t_1.k1m(_this__u8e3s4);
  };
  GAlgebraContextImpl.prototype.b1m = function (_this__u8e3s4) {
    return this.u1t_1.b1m(_this__u8e3s4);
  };
  GAlgebraContextImpl.prototype.a1m = function (_this__u8e3s4) {
    return this.u1t_1.a1m(_this__u8e3s4);
  };
  GAlgebraContextImpl.prototype.y1l = function (_this__u8e3s4) {
    return this.u1t_1.y1l(_this__u8e3s4);
  };
  GAlgebraContextImpl.prototype.z1l = function (_this__u8e3s4) {
    return this.u1t_1.z1l(_this__u8e3s4);
  };
  GAlgebraContextImpl.$metadata$ = classMeta('GAlgebraContextImpl', [GAlgebraContext, GMagmaContext]);
  function Companion_16() {
    Companion_instance_16 = this;
  }
  Companion_16.prototype.w1t = function (source, target, matrixSpace, name, getGVectors) {
    var getLinearMap = Companion_getInstance_21().x1t(source, target, 0, matrixSpace, getGVectors);
    return new GAlgebraMapImpl(source, target, matrixSpace, name, getLinearMap);
  };
  Companion_16.$metadata$ = objectMeta('Companion');
  var Companion_instance_16;
  function Companion_getInstance_17() {
    if (Companion_instance_16 == null)
      new Companion_16();
    return Companion_instance_16;
  }
  function GAlgebraMap() {
  }
  GAlgebraMap.$metadata$ = interfaceMeta('GAlgebraMap', [GLinearMap]);
  function GAlgebraMapImpl(source, target, matrixSpace, name, getLinearMap) {
    this.y1t_1 = source;
    this.z1t_1 = target;
    this.a1u_1 = Companion_getInstance_21().b1u(source, target, 0, matrixSpace, name, getLinearMap);
  }
  GAlgebraMapImpl.prototype.o1n = function () {
    return this.y1t_1;
  };
  GAlgebraMapImpl.prototype.p1n = function () {
    return this.z1t_1;
  };
  GAlgebraMapImpl.prototype.q1n = function () {
    return this.a1u_1.q1n();
  };
  GAlgebraMapImpl.prototype.y1j = function () {
    return this.a1u_1.y1j();
  };
  GAlgebraMapImpl.prototype.u1j = function () {
    return this.a1u_1.u1j();
  };
  GAlgebraMapImpl.prototype.zc = function () {
    return this.a1u_1.zc();
  };
  GAlgebraMapImpl.prototype.r1n = function () {
    return this.a1u_1.r1n();
  };
  GAlgebraMapImpl.prototype.s1n = function (gVector) {
    return this.a1u_1.s1n(gVector);
  };
  GAlgebraMapImpl.prototype.b1k = function (degree) {
    return this.a1u_1.b1k(degree);
  };
  GAlgebraMapImpl.prototype.t1n = function () {
    return this.a1u_1.t1n();
  };
  GAlgebraMapImpl.prototype.u1n = function (sourceQuot, targetQuot) {
    return this.a1u_1.u1n(sourceQuot, targetQuot);
  };
  GAlgebraMapImpl.prototype.v1n = function (sourceSub, targetSub) {
    return this.a1u_1.v1n(sourceSub, targetSub);
  };
  GAlgebraMapImpl.prototype.w1n = function (sourceSubQuot, targetSubQuot) {
    return this.a1u_1.w1n(sourceSubQuot, targetSubQuot);
  };
  GAlgebraMapImpl.prototype.o1j = function (gVector) {
    return this.a1u_1.o1j(gVector);
  };
  GAlgebraMapImpl.prototype.x1n = function () {
    return this.a1u_1.x1n();
  };
  GAlgebraMapImpl.$metadata$ = classMeta('GAlgebraMapImpl', [GAlgebraMap, GLinearMap]);
  function GBilinearMap_init_$Init$(matrixSpace, source1, source2, target, degree, name, getBilinearMap, $this) {
    GBilinearMap.call($this, matrixSpace, source1, source2, target, source1.y1j().oh(degree), name, getBilinearMap);
    return $this;
  }
  function GBilinearMap_init_$Create$(matrixSpace, source1, source2, target, degree, name, getBilinearMap) {
    return GBilinearMap_init_$Init$(matrixSpace, source1, source2, target, degree, name, getBilinearMap, Object.create(GBilinearMap.prototype));
  }
  function Companion_17() {
    Companion_instance_17 = this;
  }
  Companion_17.$metadata$ = objectMeta('Companion');
  var Companion_instance_17;
  function Companion_getInstance_18() {
    if (Companion_instance_17 == null)
      new Companion_17();
    return Companion_instance_17;
  }
  function GBilinearMap$induce$lambda(this$0, $source1Quot, $source2Quot, $targetQuot) {
    return function (p, q) {
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.k1q_1.c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.GBilinearMap.induce.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.e1j(p, q);
      tmp$ret$1 = tmp$ret$0;
      var pPlusQ = tmp$ret$1;
      return this$0.c1u(p, q).d1u($source1Quot.b1k(p), $source2Quot.b1k(q), $targetQuot.b1k(pPlusQ));
    };
  }
  function GBilinearMap$induce$lambda_0(this$0, $source1SubQuot, $source2SubQuot, $targetSubQuot) {
    return function (p, q) {
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.k1q_1.c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.GBilinearMap.induce.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.e1j(p, q);
      tmp$ret$1 = tmp$ret$0;
      var pPlusQ = tmp$ret$1;
      return this$0.c1u(p, q).e1u($source1SubQuot.b1k(p), $source2SubQuot.b1k(q), $targetSubQuot.b1k(pPlusQ));
    };
  }
  function GBilinearMap$image$lambda(this$0, $source1Sub, $source2Sub) {
    return function (targetDegree) {
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.k1q_1.c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.GBilinearMap.image.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.f1u(targetDegree, this$0.g1q_1);
      tmp$ret$1 = tmp$ret$0;
      var sourceDegree = tmp$ret$1;
      var degreePairList = Companion_getInstance_0().z1i(this$0.k1q_1, sourceDegree, $source1Sub.d1k(), $source2Sub.d1k());
      var tmp$ret$4;
      // Inline function 'kotlin.collections.map' call
      var tmp$ret$3;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(degreePairList, 10));
      var tmp0_iterator = degreePairList.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$2;
        // Inline function 'com.github.shwaka.kohomology.dg.GBilinearMap.image.<anonymous>.<anonymous>' call
        var p = item.a4();
        var q = item.b4();
        tmp$ret$2 = this$0.c1u(p, q).g1u($source1Sub.b1k(p), $source2Sub.b1k(q)).h1u();
        tmp0_mapTo.a(tmp$ret$2);
      }
      tmp$ret$3 = tmp0_mapTo;
      tmp$ret$4 = tmp$ret$3;
      var generator = flatten(tmp$ret$4);
      return Companion_getInstance_79().i1u(this$0.c1q_1, this$0.f1q_1.b1k(targetDegree), generator);
    };
  }
  function GBilinearMap(matrixSpace, source1, source2, target, degree, name, getBilinearMap) {
    Companion_getInstance_18();
    this.c1q_1 = matrixSpace;
    this.d1q_1 = source1;
    this.e1q_1 = source2;
    this.f1q_1 = target;
    this.g1q_1 = degree;
    this.h1q_1 = name;
    this.i1q_1 = getBilinearMap;
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp$ret$0 = LinkedHashMap_init_$Create$();
    tmp.j1q_1 = tmp$ret$0;
    this.k1q_1 = this.d1q_1.y1j();
  }
  GBilinearMap.prototype.j1u = function () {
    return this.d1q_1;
  };
  GBilinearMap.prototype.k1u = function () {
    return this.e1q_1;
  };
  GBilinearMap.prototype.q1n = function () {
    return this.g1q_1;
  };
  GBilinearMap.prototype.c1u = function (p, q) {
    var tmp$ret$1;
    // Inline function 'kotlin.collections.getOrPut' call
    var tmp0_getOrPut = this.j1q_1;
    var tmp1_getOrPut = new Pair(p, q);
    var value = tmp0_getOrPut.t(tmp1_getOrPut);
    var tmp;
    if (value == null) {
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.GBilinearMap.get.<anonymous>' call
      tmp$ret$0 = this.i1q_1(p, q);
      var answer = tmp$ret$0;
      tmp0_getOrPut.u(tmp1_getOrPut, answer);
      tmp = answer;
    } else {
      tmp = value;
    }
    tmp$ret$1 = tmp;
    return tmp$ret$1;
  };
  GBilinearMap.prototype.l1u = function (gVector1, gVector2) {
    // Inline function 'kotlin.require' call
    var tmp0_require = equals(gVector1.v1q_1.c1k(), this.d1q_1.c1k());
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.GBilinearMap.invoke.<anonymous>' call
      tmp$ret$0 = 'Cannot compute the value of the bilinear map ' + this + '; ' + ('the first argument ' + gVector1 + ' should be an element of ' + this.d1q_1);
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.require' call
    var tmp1_require = equals(gVector2.v1q_1.c1k(), this.e1q_1.c1k());
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp1_require) {
      var tmp$ret$1;
      // Inline function 'com.github.shwaka.kohomology.dg.GBilinearMap.invoke.<anonymous>' call
      tmp$ret$1 = 'Cannot compute the value of the bilinear map ' + this + '; ' + ('the second argument ' + gVector2 + ' should be an element of ' + this.e1q_1);
      var message_0 = tmp$ret$1;
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
    var bilinearMap = this.c1u(gVector1.u1q_1, gVector2.u1q_1);
    // Inline function 'kotlin.require' call
    var tmp2_require = equals(gVector1.t1q_1.n1u_1, bilinearMap.j1u());
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp2_require) {
      var tmp$ret$2;
      // Inline function 'com.github.shwaka.kohomology.dg.GBilinearMap.invoke.<anonymous>' call
      tmp$ret$2 = 'Graded bilinear map contains a bug: ' + ('gVector1.vector is an element of ' + gVector1.t1q_1.n1u_1 + ', ') + ('but bilinearMap.source1 is ' + bilinearMap.j1u());
      var message_1 = tmp$ret$2;
      throw IllegalArgumentException_init_$Create$(toString(message_1));
    }
    // Inline function 'kotlin.require' call
    var tmp3_require = equals(gVector2.t1q_1.n1u_1, bilinearMap.k1u());
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp3_require) {
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.dg.GBilinearMap.invoke.<anonymous>' call
      tmp$ret$3 = 'Graded bilinear map contains a bug: ' + ('gVector2.vector is an element of ' + gVector2.t1q_1.n1u_1 + ', ') + ('but bilinearMap.source2 is ' + bilinearMap.k1u());
      var message_2 = tmp$ret$3;
      throw IllegalArgumentException_init_$Create$(toString(message_2));
    }
    var newVector = bilinearMap.o1u(gVector1.t1q_1, gVector2.t1q_1);
    var tmp$ret$5;
    // Inline function 'kotlin.run' call
    var tmp4_run = this.k1q_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$4;
    // Inline function 'com.github.shwaka.kohomology.dg.GBilinearMap.invoke.<anonymous>' call
    tmp$ret$4 = tmp4_run.e1j(tmp4_run.e1j(gVector1.u1q_1, gVector2.u1q_1), this.g1q_1);
    tmp$ret$5 = tmp$ret$4;
    var newDegree = tmp$ret$5;
    return this.f1q_1.f1k(newVector, newDegree);
  };
  GBilinearMap.prototype.d1t = function (source1Quot, source2Quot, targetQuot) {
    return new GBilinearMap(this.c1q_1, source1Quot, source2Quot, targetQuot, this.g1q_1, this.h1q_1, GBilinearMap$induce$lambda(this, source1Quot, source2Quot, targetQuot));
  };
  GBilinearMap.prototype.l1q = function (source1SubQuot, source2SubQuot, targetSubQuot) {
    return new GBilinearMap(this.c1q_1, source1SubQuot, source2SubQuot, targetSubQuot, this.g1q_1, this.h1q_1, GBilinearMap$induce$lambda_0(this, source1SubQuot, source2SubQuot, targetSubQuot));
  };
  GBilinearMap.prototype.p1u = function (source1Sub, source2Sub) {
    var tmp = this.k1q_1;
    if (!isInterface(tmp, AugmentedDegreeGroup)) {
      throw UnsupportedOperationException_init_$Create$('GBilinearMap.image can be computed only when its degreeGroup is an instance of AugmentedDegreeGroup');
    }
    var tmp_0 = Companion_getInstance_31();
    var tmp_1 = 'Im(' + this.h1q_1;
    return tmp_0.q1u(this.c1q_1, this.f1q_1, tmp_1, null, GBilinearMap$image$lambda(this, source1Sub, source2Sub), 8, null);
  };
  GBilinearMap.prototype.a1t = function (source1Sub, source2Sub, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      source1Sub = asSubGVectorSpace(this.d1q_1, this.c1q_1);
    if (!(($mask0 & 2) === 0))
      source2Sub = asSubGVectorSpace(this.e1q_1, this.c1q_1);
    return this.p1u(source1Sub, source2Sub);
  };
  GBilinearMap.prototype.toString = function () {
    return this.h1q_1;
  };
  GBilinearMap.$metadata$ = classMeta('GBilinearMap');
  function GLieAlgebra$Companion$invoke$lambda(it) {
    return Companion_getInstance_68().r1u(it);
  }
  function GLieAlgebra$Companion$invoke$lambda_0($getMultiplication) {
    return function (p, q) {
      return $getMultiplication(p, q);
    };
  }
  function Companion_18() {
    Companion_instance_18 = this;
  }
  Companion_18.prototype.s1u = function (matrixSpace, degreeGroup, name, getVectorSpace, getMultiplication, getInternalPrintConfig, listDegreesForAugmentedDegree, boundedness) {
    var gVectorSpace = Companion_getInstance_24().t1u(matrixSpace.x1j(), degreeGroup, name, getInternalPrintConfig, listDegreesForAugmentedDegree, boundedness, getVectorSpace);
    var bilinearMapName = 'LieBracket(' + name + ')';
    var multiplication = GBilinearMap_init_$Create$(matrixSpace, gVectorSpace, gVectorSpace, gVectorSpace, 0, bilinearMapName, GLieAlgebra$Companion$invoke$lambda_0(getMultiplication));
    return new GLieAlgebraImpl(matrixSpace, gVectorSpace, multiplication);
  };
  Companion_18.prototype.u1u = function (matrixSpace, degreeGroup, name, getVectorSpace, getMultiplication, getInternalPrintConfig, listDegreesForAugmentedDegree, boundedness, $mask0, $handler) {
    if (!(($mask0 & 32) === 0)) {
      getInternalPrintConfig = GLieAlgebra$Companion$invoke$lambda;
    }
    if (!(($mask0 & 64) === 0))
      listDegreesForAugmentedDegree = null;
    if (!(($mask0 & 128) === 0)) {
      boundedness = Boundedness_init_$Create$(null, null, 3, null);
    }
    return this.s1u(matrixSpace, degreeGroup, name, getVectorSpace, getMultiplication, getInternalPrintConfig, listDegreesForAugmentedDegree, boundedness);
  };
  Companion_18.$metadata$ = objectMeta('Companion');
  var Companion_instance_18;
  function Companion_getInstance_19() {
    if (Companion_instance_18 == null)
      new Companion_18();
    return Companion_instance_18;
  }
  function GLieAlgebra() {
  }
  GLieAlgebra.$metadata$ = interfaceMeta('GLieAlgebra', [GMagma]);
  function Companion_19() {
    Companion_instance_19 = this;
  }
  Companion_19.prototype.v1u = function (gLieAlgebra) {
    return new GLieAlgebraContextImpl(gLieAlgebra);
  };
  Companion_19.$metadata$ = objectMeta('Companion');
  var Companion_instance_19;
  function Companion_getInstance_20() {
    if (Companion_instance_19 == null)
      new Companion_19();
    return Companion_instance_19;
  }
  function GLieAlgebraContext$ad$lambda(this$0, $gVector) {
    return function (degree) {
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = this$0.o1p().i1k(degree);
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var tmp0_iterator = tmp0_map.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.dg.GLieAlgebraContext.ad.<anonymous>.<anonymous>' call
        tmp$ret$0 = this$0.c1l($gVector, item);
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      return tmp$ret$2;
    };
  }
  function GLieAlgebraContext() {
  }
  GLieAlgebraContext.$metadata$ = interfaceMeta('GLieAlgebraContext', [GMagmaContext]);
  function GLieAlgebraImpl(matrixSpace, gVectorSpace, multiplication) {
    this.w1u_1 = matrixSpace;
    this.x1u_1 = multiplication;
    this.y1u_1 = gVectorSpace;
    this.z1u_1 = Companion_getInstance_20().v1u(this);
    this.a1v_1 = this;
  }
  GLieAlgebraImpl.prototype.u1j = function () {
    return this.w1u_1;
  };
  GLieAlgebraImpl.prototype.j1j = function () {
    return this.x1u_1;
  };
  GLieAlgebraImpl.prototype.d1k = function () {
    return this.y1u_1.d1k();
  };
  GLieAlgebraImpl.prototype.y1j = function () {
    return this.y1u_1.y1j();
  };
  GLieAlgebraImpl.prototype.e1k = function () {
    return this.y1u_1.e1k();
  };
  GLieAlgebraImpl.prototype.z1j = function () {
    return this.y1u_1.z1j();
  };
  GLieAlgebraImpl.prototype.a1k = function () {
    return this.y1u_1.a1k();
  };
  GLieAlgebraImpl.prototype.zc = function () {
    return this.y1u_1.zc();
  };
  GLieAlgebraImpl.prototype.x1j = function () {
    return this.y1u_1.x1j();
  };
  GLieAlgebraImpl.prototype.c1k = function () {
    return this.y1u_1.c1k();
  };
  GLieAlgebraImpl.prototype.u1k = function () {
    return this.y1u_1.u1k();
  };
  GLieAlgebraImpl.prototype.o1k = function (a, b) {
    return this.y1u_1.o1k(a, b);
  };
  GLieAlgebraImpl.prototype.m1k = function (gVector) {
    return this.y1u_1.m1k(gVector);
  };
  GLieAlgebraImpl.prototype.n1k = function (gVector) {
    return this.y1u_1.n1k(gVector);
  };
  GLieAlgebraImpl.prototype.l1k = function (gVectorOrZero, degree) {
    return this.y1u_1.l1k(gVectorOrZero, degree);
  };
  GLieAlgebraImpl.prototype.t1k = function (a, b) {
    return this.y1u_1.t1k(a, b);
  };
  GLieAlgebraImpl.prototype.h1k = function (basisName, degree) {
    return this.y1u_1.h1k(basisName, degree);
  };
  GLieAlgebraImpl.prototype.f1k = function (vector, degree) {
    return this.y1u_1.f1k(vector, degree);
  };
  GLieAlgebraImpl.prototype.g1k = function (vector, degree) {
    return this.y1u_1.g1k(vector, degree);
  };
  GLieAlgebraImpl.prototype.b1k = function (degree) {
    return this.y1u_1.b1k(degree);
  };
  GLieAlgebraImpl.prototype.l = function (degree) {
    return this.y1u_1.l(degree);
  };
  GLieAlgebraImpl.prototype.i1k = function (degree) {
    return this.y1u_1.i1k(degree);
  };
  GLieAlgebraImpl.prototype.j1k = function (degree) {
    return this.y1u_1.j1k(degree);
  };
  GLieAlgebraImpl.prototype.k1k = function (degree) {
    return this.y1u_1.k1k(degree);
  };
  GLieAlgebraImpl.prototype.q1k = function (scalar, gVector) {
    return this.y1u_1.q1k(scalar, gVector);
  };
  GLieAlgebraImpl.prototype.p1k = function (a, b) {
    return this.y1u_1.p1k(a, b);
  };
  GLieAlgebraImpl.prototype.toString = function () {
    return this.y1u_1.toString();
  };
  GLieAlgebraImpl.prototype.c1n = function (printConfig) {
    return this.y1u_1.c1n(printConfig);
  };
  GLieAlgebraImpl.prototype.c1j = function () {
    return this.z1u_1;
  };
  GLieAlgebraImpl.$metadata$ = classMeta('GLieAlgebraImpl', [GLieAlgebra, GVectorSpace]);
  function GLieAlgebraContextImpl(gLieAlgebra) {
    this.b1v_1 = gLieAlgebra;
    this.c1v_1 = Companion_getInstance_23().v1t(gLieAlgebra);
  }
  GLieAlgebraContextImpl.prototype.o1p = function () {
    return this.b1v_1;
  };
  GLieAlgebraContextImpl.prototype.e1k = function () {
    return this.c1v_1.e1k();
  };
  GLieAlgebraContextImpl.prototype.p1m = function () {
    return this.c1v_1.p1m();
  };
  GLieAlgebraContextImpl.prototype.p1l = function () {
    return this.c1v_1.p1l();
  };
  GLieAlgebraContextImpl.prototype.x1j = function () {
    return this.c1v_1.x1j();
  };
  GLieAlgebraContextImpl.prototype.n1m = function () {
    return this.c1v_1.n1m();
  };
  GLieAlgebraContextImpl.prototype.m1m = function () {
    return this.c1v_1.m1m();
  };
  GLieAlgebraContextImpl.prototype.u1k = function () {
    return this.c1v_1.u1k();
  };
  GLieAlgebraContextImpl.prototype.f1m = function (_this__u8e3s4, other) {
    return this.c1v_1.f1m(_this__u8e3s4, other);
  };
  GLieAlgebraContextImpl.prototype.g1m = function (_this__u8e3s4, other) {
    return this.c1v_1.g1m(_this__u8e3s4, other);
  };
  GLieAlgebraContextImpl.prototype.e1m = function (_this__u8e3s4, ind) {
    return this.c1v_1.e1m(_this__u8e3s4, ind);
  };
  GLieAlgebraContextImpl.prototype.h1m = function (_this__u8e3s4) {
    return this.c1v_1.h1m(_this__u8e3s4);
  };
  GLieAlgebraContextImpl.prototype.x1l = function (_this__u8e3s4, other) {
    return this.c1v_1.x1l(_this__u8e3s4, other);
  };
  GLieAlgebraContextImpl.prototype.w1l = function (_this__u8e3s4, other) {
    return this.c1v_1.w1l(_this__u8e3s4, other);
  };
  GLieAlgebraContextImpl.prototype.u1l = function (_this__u8e3s4, other) {
    return this.c1v_1.u1l(_this__u8e3s4, other);
  };
  GLieAlgebraContextImpl.prototype.v1l = function (_this__u8e3s4, other) {
    return this.c1v_1.v1l(_this__u8e3s4, other);
  };
  GLieAlgebraContextImpl.prototype.t1l = function (_this__u8e3s4, other) {
    return this.c1v_1.t1l(_this__u8e3s4, other);
  };
  GLieAlgebraContextImpl.prototype.s1l = function (_this__u8e3s4, other) {
    return this.c1v_1.s1l(_this__u8e3s4, other);
  };
  GLieAlgebraContextImpl.prototype.q1l = function (_this__u8e3s4, other) {
    return this.c1v_1.q1l(_this__u8e3s4, other);
  };
  GLieAlgebraContextImpl.prototype.r1l = function (_this__u8e3s4, other) {
    return this.c1v_1.r1l(_this__u8e3s4, other);
  };
  GLieAlgebraContextImpl.prototype.d1m = function (_this__u8e3s4) {
    return this.c1v_1.d1m(_this__u8e3s4);
  };
  GLieAlgebraContextImpl.prototype.c1m = function (_this__u8e3s4, degree) {
    return this.c1v_1.c1m(_this__u8e3s4, degree);
  };
  GLieAlgebraContextImpl.prototype.l1l = function (_this__u8e3s4, other) {
    return this.c1v_1.l1l(_this__u8e3s4, other);
  };
  GLieAlgebraContextImpl.prototype.k1l = function (_this__u8e3s4, numVector) {
    return this.c1v_1.k1l(_this__u8e3s4, numVector);
  };
  GLieAlgebraContextImpl.prototype.e1l = function (_this__u8e3s4, gVector) {
    return this.c1v_1.e1l(_this__u8e3s4, gVector);
  };
  GLieAlgebraContextImpl.prototype.j1l = function (_this__u8e3s4, scalar) {
    return this.c1v_1.j1l(_this__u8e3s4, scalar);
  };
  GLieAlgebraContextImpl.prototype.d1l = function (_this__u8e3s4, scalar) {
    return this.c1v_1.d1l(_this__u8e3s4, scalar);
  };
  GLieAlgebraContextImpl.prototype.c1l = function (_this__u8e3s4, other) {
    return this.c1v_1.c1l(_this__u8e3s4, other);
  };
  GLieAlgebraContextImpl.prototype.h1l = function (_this__u8e3s4, sign) {
    return this.c1v_1.h1l(_this__u8e3s4, sign);
  };
  GLieAlgebraContextImpl.prototype.g1l = function (_this__u8e3s4, scalar) {
    return this.c1v_1.g1l(_this__u8e3s4, scalar);
  };
  GLieAlgebraContextImpl.prototype.m1l = function (_this__u8e3s4, other) {
    return this.c1v_1.m1l(_this__u8e3s4, other);
  };
  GLieAlgebraContextImpl.prototype.i1l = function (_this__u8e3s4, gVector) {
    return this.c1v_1.i1l(_this__u8e3s4, gVector);
  };
  GLieAlgebraContextImpl.prototype.f1l = function (_this__u8e3s4, gVector) {
    return this.c1v_1.f1l(_this__u8e3s4, gVector);
  };
  GLieAlgebraContextImpl.prototype.k1m = function (_this__u8e3s4) {
    return this.c1v_1.k1m(_this__u8e3s4);
  };
  GLieAlgebraContextImpl.prototype.b1m = function (_this__u8e3s4) {
    return this.c1v_1.b1m(_this__u8e3s4);
  };
  GLieAlgebraContextImpl.prototype.a1m = function (_this__u8e3s4) {
    return this.c1v_1.a1m(_this__u8e3s4);
  };
  GLieAlgebraContextImpl.prototype.y1l = function (_this__u8e3s4) {
    return this.c1v_1.y1l(_this__u8e3s4);
  };
  GLieAlgebraContextImpl.prototype.z1l = function (_this__u8e3s4) {
    return this.c1v_1.z1l(_this__u8e3s4);
  };
  GLieAlgebraContextImpl.$metadata$ = classMeta('GLieAlgebraContextImpl', [GLieAlgebraContext, GMagmaContext]);
  function createGetLinearMap($this, source, target, degree, matrixSpace, getGVectors) {
    if (!equals(source.y1j(), target.y1j()))
      throw IllegalArgumentException_init_$Create$('Cannot consider a linear map between graded vector spaces with different degree groups');
    return GLinearMap$Companion$createGetLinearMap$lambda(source, degree, target, getGVectors, matrixSpace);
  }
  function GLinearMap$Companion$createGetLinearMap$lambda($source, $degree, $target, $getGVectors, $matrixSpace) {
    return function (k) {
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = $source.y1j().c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.Companion.createGetLinearMap.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.e1j(k, $degree);
      tmp$ret$1 = tmp$ret$0;
      var l = tmp$ret$1;
      var sourceVectorSpace = $source.b1k(k);
      var targetVectorSpace = $target.b1k(l);
      var gVectorValueList = $getGVectors(k);
      var tmp;
      var tmp$ret$2;
      $l$block_0: {
        // Inline function 'kotlin.collections.any' call
        var tmp_0;
        if (isInterface(gVectorValueList, Collection)) {
          tmp_0 = gVectorValueList.p();
        } else {
          tmp_0 = false;
        }
        if (tmp_0) {
          tmp$ret$2 = false;
          break $l$block_0;
        }
        var tmp0_iterator = gVectorValueList.f();
        while (tmp0_iterator.g()) {
          var element = tmp0_iterator.h();
          var tmp$ret$3;
          // Inline function 'com.github.shwaka.kohomology.dg.Companion.createGetLinearMap.<anonymous>.<anonymous>' call
          tmp$ret$3 = !$target.m1k(element);
          if (tmp$ret$3) {
            tmp$ret$2 = true;
            break $l$block_0;
          }
        }
        tmp$ret$2 = false;
      }
      if (tmp$ret$2) {
        throw new IllegalContextException('The value list contains an element not contained in ' + $target);
      }
      var tmp_1;
      var tmp$ret$4;
      $l$block_2: {
        // Inline function 'kotlin.collections.any' call
        var tmp_2;
        if (isInterface(gVectorValueList, Collection)) {
          tmp_2 = gVectorValueList.p();
        } else {
          tmp_2 = false;
        }
        if (tmp_2) {
          tmp$ret$4 = false;
          break $l$block_2;
        }
        var tmp0_iterator_0 = gVectorValueList.f();
        while (tmp0_iterator_0.g()) {
          var element_0 = tmp0_iterator_0.h();
          var tmp$ret$5;
          // Inline function 'com.github.shwaka.kohomology.dg.Companion.createGetLinearMap.<anonymous>.<anonymous>' call
          tmp$ret$5 = !equals(element_0.u1q_1, l);
          if (tmp$ret$5) {
            tmp$ret$4 = true;
            break $l$block_2;
          }
        }
        tmp$ret$4 = false;
      }
      if (tmp$ret$4) {
        throw IllegalArgumentException_init_$Create$('The value list contains an element with wrong degree');
      }
      var tmp_3;
      if (!(sourceVectorSpace.d1v().i() === gVectorValueList.i())) {
        throw new InvalidSizeException('The value list has incompatible size');
      }
      var tmp$ret$8;
      // Inline function 'kotlin.collections.map' call
      var tmp$ret$7;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(gVectorValueList, 10));
      var tmp0_iterator_1 = gVectorValueList.f();
      while (tmp0_iterator_1.g()) {
        var item = tmp0_iterator_1.h();
        var tmp$ret$6;
        // Inline function 'com.github.shwaka.kohomology.dg.Companion.createGetLinearMap.<anonymous>.<anonymous>' call
        tmp$ret$6 = item.t1q_1;
        tmp0_mapTo.a(tmp$ret$6);
      }
      tmp$ret$7 = tmp0_mapTo;
      tmp$ret$8 = tmp$ret$7;
      var valueList = tmp$ret$8;
      return Companion_getInstance_71().e1v(sourceVectorSpace, targetVectorSpace, $matrixSpace, valueList);
    };
  }
  function Companion_20() {
    Companion_instance_20 = this;
  }
  Companion_20.prototype.f1v = function (source, target, degree, matrixSpace, name, getLinearMap) {
    return new GLinearMapImpl(source, target, degree, matrixSpace, name, getLinearMap);
  };
  Companion_20.prototype.b1u = function (source, target, degree, matrixSpace, name, getLinearMap) {
    return new GLinearMapImpl(source, target, source.y1j().oh(degree), matrixSpace, name, getLinearMap);
  };
  Companion_20.prototype.x1t = function (source, target, degree, matrixSpace, getGVectors) {
    return createGetLinearMap(this, source, target, source.y1j().oh(degree), matrixSpace, getGVectors);
  };
  Companion_20.prototype.k1s = function (source, target, degree, matrixSpace, name, getGVectors) {
    var getLinearMap = createGetLinearMap(this, source, target, degree, matrixSpace, getGVectors);
    return Companion_getInstance_21().f1v(source, target, degree, matrixSpace, name, getLinearMap);
  };
  Companion_20.$metadata$ = objectMeta('Companion');
  var Companion_instance_20;
  function Companion_getInstance_21() {
    if (Companion_instance_20 == null)
      new Companion_20();
    return Companion_instance_20;
  }
  function GLinearMap$kernel$lambda(this$0) {
    return function (degree) {
      return this$0.b1k(degree).x1n();
    };
  }
  function GLinearMap$image$lambda(this$0) {
    return function (degree) {
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.y1j().c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.GLinearMap.image.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.f1u(degree, this$0.q1n());
      tmp$ret$1 = tmp$ret$0;
      var sourceDegree = tmp$ret$1;
      return this$0.b1k(sourceDegree).t1n();
    };
  }
  function GLinearMap$induce$lambda(this$0, $gLinearMapDegree, $sourceSub, $targetSub) {
    return function (degree) {
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.y1j().c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.GLinearMap.induce.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.e1j(degree, $gLinearMapDegree);
      tmp$ret$1 = tmp$ret$0;
      var targetDegree = tmp$ret$1;
      return this$0.b1k(degree).g1v($sourceSub.b1k(degree), $targetSub.b1k(targetDegree));
    };
  }
  function GLinearMap$induce$lambda_0(this$0, $gLinearMapDegree, $sourceQuot, $targetQuot) {
    return function (degree) {
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.y1j().c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.GLinearMap.induce.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.e1j(degree, $gLinearMapDegree);
      tmp$ret$1 = tmp$ret$0;
      var targetDegree = tmp$ret$1;
      return this$0.b1k(degree).h1v($sourceQuot.b1k(degree), $targetQuot.b1k(targetDegree));
    };
  }
  function GLinearMap$induce$lambda_1(this$0, $gLinearMapDegree, $sourceSubQuot, $targetSubQuot) {
    return function (degree) {
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.y1j().c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.GLinearMap.induce.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.e1j(degree, $gLinearMapDegree);
      tmp$ret$1 = tmp$ret$0;
      var targetDegree = tmp$ret$1;
      return this$0.b1k(degree).i1v($sourceSubQuot.b1k(degree), $targetSubQuot.b1k(targetDegree));
    };
  }
  function GLinearMap() {
  }
  GLinearMap.$metadata$ = interfaceMeta('GLinearMap');
  function GLinearMapImpl(source, target, degree, matrixSpace, name, getLinearMap) {
    this.k1v_1 = source;
    this.l1v_1 = target;
    this.m1v_1 = degree;
    this.n1v_1 = matrixSpace;
    this.o1v_1 = name;
    this.p1v_1 = getLinearMap;
    if (!equals(this.k1v_1.y1j(), this.l1v_1.y1j()))
      throw IllegalArgumentException_init_$Create$('Cannot consider a linear map between graded vector spaces with different degree groups');
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp$ret$0 = LinkedHashMap_init_$Create$();
    tmp.q1v_1 = tmp$ret$0;
  }
  GLinearMapImpl.prototype.o1n = function () {
    return this.k1v_1;
  };
  GLinearMapImpl.prototype.p1n = function () {
    return this.l1v_1;
  };
  GLinearMapImpl.prototype.q1n = function () {
    return this.m1v_1;
  };
  GLinearMapImpl.prototype.u1j = function () {
    return this.n1v_1;
  };
  GLinearMapImpl.prototype.zc = function () {
    return this.o1v_1;
  };
  GLinearMapImpl.prototype.b1k = function (degree) {
    var tmp$ret$1;
    // Inline function 'kotlin.collections.getOrPut' call
    var tmp0_getOrPut = this.q1v_1;
    var value = tmp0_getOrPut.t(degree);
    var tmp;
    if (value == null) {
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.GLinearMapImpl.get.<anonymous>' call
      tmp$ret$0 = this.p1v_1(degree);
      var answer = tmp$ret$0;
      tmp0_getOrPut.u(degree, answer);
      tmp = answer;
    } else {
      tmp = value;
    }
    tmp$ret$1 = tmp;
    return tmp$ret$1;
  };
  GLinearMapImpl.prototype.toString = function () {
    return this.o1v_1;
  };
  GLinearMapImpl.$metadata$ = classMeta('GLinearMapImpl', [GLinearMap]);
  function GLinearMapWithDegreeChange$Companion$invoke$lambda($basisMap, $degreeMorphism, $target) {
    return function (basisName, degree) {
      var targetBasisName = $basisMap(basisName);
      var targetDegree = $degreeMorphism.r1v(degree);
      return $target.h1k(targetBasisName, targetDegree);
    };
  }
  function Companion_21() {
    Companion_instance_21 = this;
  }
  Companion_21.prototype.s1v = function (source, target, degreeMorphism, matrixSpace, name, basisMap) {
    return new GLinearMapWithDegreeChange(source, target, degreeMorphism, matrixSpace, name, GLinearMapWithDegreeChange$Companion$invoke$lambda(basisMap, degreeMorphism, target));
  };
  Companion_21.$metadata$ = objectMeta('Companion');
  var Companion_instance_21;
  function Companion_getInstance_22() {
    if (Companion_instance_21 == null)
      new Companion_21();
    return Companion_instance_21;
  }
  function GLinearMapWithDegreeChange(source, target, degreeMorphism, matrixSpace, name, getValueOnBasis) {
    Companion_getInstance_22();
    this.t1v_1 = source;
    this.u1v_1 = target;
    this.v1v_1 = degreeMorphism;
    this.w1v_1 = matrixSpace;
    this.x1v_1 = name;
    this.y1v_1 = getValueOnBasis;
  }
  GLinearMapWithDegreeChange.prototype.z1v = function (gVector) {
    if (!this.t1v_1.m1k(gVector))
      throw new IllegalContextException('Invalid graded vector is given as an argument for a graded linear map with degree change');
    var targetDegree = this.v1v_1.r1v(gVector.u1q_1);
    var tmp$ret$4;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.u1v_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$3;
    // Inline function 'com.github.shwaka.kohomology.dg.GLinearMapWithDegreeChange.invoke.<anonymous>' call
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = toList(gVector.t1q_1.a1w());
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.GLinearMapWithDegreeChange.invoke.<anonymous>.<anonymous>' call
      var basisName = item.a4();
      var coeff = item.b4();
      tmp$ret$0 = tmp0_run.d1l(this.y1v_1(basisName, gVector.u1q_1), coeff);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp0_run.c1m(tmp$ret$2, targetDegree);
    tmp$ret$4 = tmp$ret$3;
    return tmp$ret$4;
  };
  GLinearMapWithDegreeChange.prototype.toString = function () {
    return this.x1v_1;
  };
  GLinearMapWithDegreeChange.$metadata$ = classMeta('GLinearMapWithDegreeChange');
  function GMagma() {
  }
  GMagma.$metadata$ = interfaceMeta('GMagma', [GVectorSpace]);
  function Companion_22() {
    Companion_instance_22 = this;
  }
  Companion_22.prototype.v1t = function (gMagma) {
    return new GMagmaContextImpl(gMagma);
  };
  Companion_22.$metadata$ = objectMeta('Companion');
  var Companion_instance_22;
  function Companion_getInstance_23() {
    if (Companion_instance_22 == null)
      new Companion_22();
    return Companion_instance_22;
  }
  function GMagmaContext() {
  }
  GMagmaContext.$metadata$ = interfaceMeta('GMagmaContext', [GVectorContext]);
  function GMagmaContextImpl(gMagma) {
    this.b1w_1 = gMagma;
    this.c1w_1 = Companion_getInstance_25().h1s(gMagma);
  }
  GMagmaContextImpl.prototype.p1m = function () {
    return this.b1w_1;
  };
  GMagmaContextImpl.prototype.e1k = function () {
    return this.c1w_1.e1k();
  };
  GMagmaContextImpl.prototype.p1l = function () {
    return this.c1w_1.p1l();
  };
  GMagmaContextImpl.prototype.x1j = function () {
    return this.c1w_1.x1j();
  };
  GMagmaContextImpl.prototype.n1m = function () {
    return this.c1w_1.n1m();
  };
  GMagmaContextImpl.prototype.m1m = function () {
    return this.c1w_1.m1m();
  };
  GMagmaContextImpl.prototype.u1k = function () {
    return this.c1w_1.u1k();
  };
  GMagmaContextImpl.prototype.f1m = function (_this__u8e3s4, other) {
    return this.c1w_1.f1m(_this__u8e3s4, other);
  };
  GMagmaContextImpl.prototype.g1m = function (_this__u8e3s4, other) {
    return this.c1w_1.g1m(_this__u8e3s4, other);
  };
  GMagmaContextImpl.prototype.e1m = function (_this__u8e3s4, ind) {
    return this.c1w_1.e1m(_this__u8e3s4, ind);
  };
  GMagmaContextImpl.prototype.h1m = function (_this__u8e3s4) {
    return this.c1w_1.h1m(_this__u8e3s4);
  };
  GMagmaContextImpl.prototype.x1l = function (_this__u8e3s4, other) {
    return this.c1w_1.x1l(_this__u8e3s4, other);
  };
  GMagmaContextImpl.prototype.w1l = function (_this__u8e3s4, other) {
    return this.c1w_1.w1l(_this__u8e3s4, other);
  };
  GMagmaContextImpl.prototype.u1l = function (_this__u8e3s4, other) {
    return this.c1w_1.u1l(_this__u8e3s4, other);
  };
  GMagmaContextImpl.prototype.v1l = function (_this__u8e3s4, other) {
    return this.c1w_1.v1l(_this__u8e3s4, other);
  };
  GMagmaContextImpl.prototype.t1l = function (_this__u8e3s4, other) {
    return this.c1w_1.t1l(_this__u8e3s4, other);
  };
  GMagmaContextImpl.prototype.s1l = function (_this__u8e3s4, other) {
    return this.c1w_1.s1l(_this__u8e3s4, other);
  };
  GMagmaContextImpl.prototype.q1l = function (_this__u8e3s4, other) {
    return this.c1w_1.q1l(_this__u8e3s4, other);
  };
  GMagmaContextImpl.prototype.r1l = function (_this__u8e3s4, other) {
    return this.c1w_1.r1l(_this__u8e3s4, other);
  };
  GMagmaContextImpl.prototype.d1m = function (_this__u8e3s4) {
    return this.c1w_1.d1m(_this__u8e3s4);
  };
  GMagmaContextImpl.prototype.c1m = function (_this__u8e3s4, degree) {
    return this.c1w_1.c1m(_this__u8e3s4, degree);
  };
  GMagmaContextImpl.prototype.l1l = function (_this__u8e3s4, other) {
    return this.c1w_1.l1l(_this__u8e3s4, other);
  };
  GMagmaContextImpl.prototype.k1l = function (_this__u8e3s4, numVector) {
    return this.c1w_1.k1l(_this__u8e3s4, numVector);
  };
  GMagmaContextImpl.prototype.e1l = function (_this__u8e3s4, gVector) {
    return this.c1w_1.e1l(_this__u8e3s4, gVector);
  };
  GMagmaContextImpl.prototype.j1l = function (_this__u8e3s4, scalar) {
    return this.c1w_1.j1l(_this__u8e3s4, scalar);
  };
  GMagmaContextImpl.prototype.d1l = function (_this__u8e3s4, scalar) {
    return this.c1w_1.d1l(_this__u8e3s4, scalar);
  };
  GMagmaContextImpl.prototype.h1l = function (_this__u8e3s4, sign) {
    return this.c1w_1.h1l(_this__u8e3s4, sign);
  };
  GMagmaContextImpl.prototype.g1l = function (_this__u8e3s4, scalar) {
    return this.c1w_1.g1l(_this__u8e3s4, scalar);
  };
  GMagmaContextImpl.prototype.i1l = function (_this__u8e3s4, gVector) {
    return this.c1w_1.i1l(_this__u8e3s4, gVector);
  };
  GMagmaContextImpl.prototype.f1l = function (_this__u8e3s4, gVector) {
    return this.c1w_1.f1l(_this__u8e3s4, gVector);
  };
  GMagmaContextImpl.prototype.k1m = function (_this__u8e3s4) {
    return this.c1w_1.k1m(_this__u8e3s4);
  };
  GMagmaContextImpl.prototype.b1m = function (_this__u8e3s4) {
    return this.c1w_1.b1m(_this__u8e3s4);
  };
  GMagmaContextImpl.prototype.a1m = function (_this__u8e3s4) {
    return this.c1w_1.a1m(_this__u8e3s4);
  };
  GMagmaContextImpl.prototype.y1l = function (_this__u8e3s4) {
    return this.c1w_1.y1l(_this__u8e3s4);
  };
  GMagmaContextImpl.prototype.z1l = function (_this__u8e3s4) {
    return this.c1w_1.z1l(_this__u8e3s4);
  };
  GMagmaContextImpl.$metadata$ = classMeta('GMagmaContextImpl', [GMagmaContext, GVectorContext]);
  function GVectorOrZero() {
  }
  GVectorOrZero.$metadata$ = interfaceMeta('GVectorOrZero');
  function GVector(vector, degree, gVectorSpace) {
    this.t1q_1 = vector;
    this.u1q_1 = degree;
    this.v1q_1 = gVectorSpace;
  }
  GVector.prototype.d1w = function () {
    return this.t1q_1;
  };
  GVector.prototype.q1n = function () {
    return this.u1q_1;
  };
  GVector.prototype.p1l = function () {
    return this.v1q_1;
  };
  GVector.prototype.dj = function () {
    return this.t1q_1.dj();
  };
  GVector.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null)
      return false;
    if (!getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof GVector)
      other;
    else
      THROW_CCE();
    if (!this.t1q_1.equals(other.t1q_1))
      return false;
    if (!equals(this.u1q_1, other.u1q_1))
      return false;
    if (!equals(this.v1q_1.c1k(), other.v1q_1.c1k()))
      return false;
    return true;
  };
  GVector.prototype.hashCode = function () {
    var result = this.t1q_1.hashCode();
    result = imul(31, result) + hashCode(this.u1q_1) | 0;
    result = imul(31, result) + hashCode(this.v1q_1) | 0;
    return result;
  };
  GVector.prototype.toString = function () {
    return this.c1n(PrintConfig_init_$Create$(null, null, null, null, null, 31, null));
  };
  GVector.prototype.c1n = function (printConfig) {
    var internalPrintConfig = this.v1q_1.z1j()(printConfig);
    return this.t1q_1.e1w(printConfig, internalPrintConfig);
  };
  GVector.$metadata$ = classMeta('GVector', [GVectorOrZero, Printable]);
  function ZeroGVector(gVectorSpace) {
    this.f1w_1 = gVectorSpace;
  }
  ZeroGVector.prototype.p1l = function () {
    return this.f1w_1;
  };
  ZeroGVector.prototype.dj = function () {
    return true;
  };
  ZeroGVector.prototype.toString = function () {
    return '0';
  };
  ZeroGVector.prototype.hashCode = function () {
    return hashCode(this.f1w_1);
  };
  ZeroGVector.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null)
      return false;
    if (!getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof ZeroGVector)
      other;
    else
      THROW_CCE();
    return equals(this.f1w_1.c1k(), other.f1w_1.c1k());
  };
  ZeroGVector.$metadata$ = classMeta('ZeroGVector', [GVectorOrZero]);
  function Companion_23() {
    Companion_instance_23 = this;
  }
  Companion_23.prototype.t1u = function (numVectorSpace, degreeGroup, name, getInternalPrintConfig, listDegreesForAugmentedDegree, boundedness, getVectorSpace) {
    return new GVectorSpaceImpl(numVectorSpace, degreeGroup, name, getInternalPrintConfig, listDegreesForAugmentedDegree, boundedness, getVectorSpace);
  };
  Companion_23.$metadata$ = objectMeta('Companion');
  var Companion_instance_23;
  function Companion_getInstance_24() {
    if (Companion_instance_23 == null)
      new Companion_23();
    return Companion_instance_23;
  }
  function GVectorSpace() {
  }
  GVectorSpace.$metadata$ = interfaceMeta('GVectorSpace', [Printable]);
  function Companion_24() {
    Companion_instance_24 = this;
  }
  Companion_24.prototype.h1s = function (gVectorSpace) {
    return new GVectorContextImpl(gVectorSpace);
  };
  Companion_24.$metadata$ = objectMeta('Companion');
  var Companion_instance_24;
  function Companion_getInstance_25() {
    if (Companion_instance_24 == null)
      new Companion_24();
    return Companion_instance_24;
  }
  function GVectorContext() {
  }
  GVectorContext.$metadata$ = interfaceMeta('GVectorContext', [NumVectorContext]);
  function GVectorSpaceImpl(numVectorSpace, degreeGroup, name, getInternalPrintConfig, listDegreesForAugmentedDegree, boundedness, getVectorSpace) {
    this.n1w_1 = numVectorSpace;
    this.o1w_1 = degreeGroup;
    this.p1w_1 = name;
    this.q1w_1 = getInternalPrintConfig;
    this.r1w_1 = listDegreesForAugmentedDegree;
    this.s1w_1 = boundedness;
    this.t1w_1 = getVectorSpace;
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp$ret$0 = LinkedHashMap_init_$Create$();
    tmp.u1w_1 = tmp$ret$0;
    this.v1w_1 = Companion_getInstance_25().h1s(this);
    this.w1w_1 = this;
    this.x1w_1 = new ZeroGVector(this);
  }
  GVectorSpaceImpl.prototype.x1j = function () {
    return this.n1w_1;
  };
  GVectorSpaceImpl.prototype.y1j = function () {
    return this.o1w_1;
  };
  GVectorSpaceImpl.prototype.zc = function () {
    return this.p1w_1;
  };
  GVectorSpaceImpl.prototype.z1j = function () {
    return this.q1w_1;
  };
  GVectorSpaceImpl.prototype.a1k = function () {
    return this.r1w_1;
  };
  GVectorSpaceImpl.prototype.d1k = function () {
    return this.s1w_1;
  };
  GVectorSpaceImpl.prototype.c1j = function () {
    return this.v1w_1;
  };
  GVectorSpaceImpl.prototype.c1k = function () {
    return this.w1w_1;
  };
  GVectorSpaceImpl.prototype.u1k = function () {
    return this.x1w_1;
  };
  GVectorSpaceImpl.prototype.b1k = function (degree) {
    var tmp$ret$1;
    // Inline function 'kotlin.collections.getOrPut' call
    var tmp0_getOrPut = this.u1w_1;
    var value = tmp0_getOrPut.t(degree);
    var tmp;
    if (value == null) {
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.GVectorSpaceImpl.get.<anonymous>' call
      tmp$ret$0 = this.t1w_1(degree);
      var answer = tmp$ret$0;
      tmp0_getOrPut.u(degree, answer);
      tmp = answer;
    } else {
      tmp = value;
    }
    tmp$ret$1 = tmp;
    return tmp$ret$1;
  };
  GVectorSpaceImpl.prototype.toString = function () {
    return this.p1w_1;
  };
  GVectorSpaceImpl.prototype.c1n = function (printConfig) {
    return this.p1w_1;
  };
  GVectorSpaceImpl.$metadata$ = classMeta('GVectorSpaceImpl', [GVectorSpace]);
  function GVectorContextImpl(gVectorSpace) {
    this.y1w_1 = gVectorSpace;
    this.z1w_1 = Companion_getInstance_57().a1x(gVectorSpace.x1j());
  }
  GVectorContextImpl.prototype.p1l = function () {
    return this.y1w_1;
  };
  GVectorContextImpl.prototype.e1k = function () {
    return this.z1w_1.e1k();
  };
  GVectorContextImpl.prototype.x1j = function () {
    return this.z1w_1.x1j();
  };
  GVectorContextImpl.prototype.n1m = function () {
    return this.z1w_1.n1m();
  };
  GVectorContextImpl.prototype.m1m = function () {
    return this.z1w_1.m1m();
  };
  GVectorContextImpl.prototype.f1m = function (_this__u8e3s4, other) {
    return this.z1w_1.f1m(_this__u8e3s4, other);
  };
  GVectorContextImpl.prototype.g1m = function (_this__u8e3s4, other) {
    return this.z1w_1.g1m(_this__u8e3s4, other);
  };
  GVectorContextImpl.prototype.e1m = function (_this__u8e3s4, ind) {
    return this.z1w_1.e1m(_this__u8e3s4, ind);
  };
  GVectorContextImpl.prototype.h1m = function (_this__u8e3s4) {
    return this.z1w_1.h1m(_this__u8e3s4);
  };
  GVectorContextImpl.prototype.x1l = function (_this__u8e3s4, other) {
    return this.z1w_1.x1l(_this__u8e3s4, other);
  };
  GVectorContextImpl.prototype.w1l = function (_this__u8e3s4, other) {
    return this.z1w_1.w1l(_this__u8e3s4, other);
  };
  GVectorContextImpl.prototype.t1l = function (_this__u8e3s4, other) {
    return this.z1w_1.t1l(_this__u8e3s4, other);
  };
  GVectorContextImpl.prototype.s1l = function (_this__u8e3s4, other) {
    return this.z1w_1.s1l(_this__u8e3s4, other);
  };
  GVectorContextImpl.prototype.d1m = function (_this__u8e3s4) {
    return this.z1w_1.d1m(_this__u8e3s4);
  };
  GVectorContextImpl.prototype.l1l = function (_this__u8e3s4, other) {
    return this.z1w_1.l1l(_this__u8e3s4, other);
  };
  GVectorContextImpl.prototype.k1l = function (_this__u8e3s4, numVector) {
    return this.z1w_1.k1l(_this__u8e3s4, numVector);
  };
  GVectorContextImpl.prototype.j1l = function (_this__u8e3s4, scalar) {
    return this.z1w_1.j1l(_this__u8e3s4, scalar);
  };
  GVectorContextImpl.prototype.k1m = function (_this__u8e3s4) {
    return this.z1w_1.k1m(_this__u8e3s4);
  };
  GVectorContextImpl.prototype.b1m = function (_this__u8e3s4) {
    return this.z1w_1.b1m(_this__u8e3s4);
  };
  GVectorContextImpl.prototype.a1m = function (_this__u8e3s4) {
    return this.z1w_1.a1m(_this__u8e3s4);
  };
  GVectorContextImpl.$metadata$ = classMeta('GVectorContextImpl', [GVectorContext, NumVectorContext]);
  function Companion_25() {
    Companion_instance_25 = this;
  }
  Companion_25.prototype.b1t = function (totalGAlgebra, subGVectorSpace, generatorList) {
    return new IdealImpl(totalGAlgebra, subGVectorSpace, generatorList);
  };
  Companion_25.$metadata$ = objectMeta('Companion');
  var Companion_instance_25;
  function Companion_getInstance_26() {
    if (Companion_instance_25 == null)
      new Companion_25();
    return Companion_instance_25;
  }
  function Ideal() {
  }
  Ideal.$metadata$ = interfaceMeta('Ideal', [SubGVectorSpace]);
  function idealToString(className, generatorList, printConfig) {
    var tmp0_subject = printConfig.b1x_1;
    var tmp0 = tmp0_subject.d2_1;
    var tmp;
    switch (tmp0) {
      case 0:
        var generatorsString = joinToString$default(generatorList, ', ', null, null, 0, null, null, 62, null);
        tmp = className + '(' + generatorsString + ')';
        break;
      case 1:
        var generatorsString_0 = joinToString$default(generatorList, ', ', null, null, 0, null, idealToString$lambda(printConfig), 30, null);
        tmp = '\\mathrm{' + className + '}(' + generatorsString_0 + ')';
        break;
      case 2:
        throw UnsupportedOperationException_init_$Create$(className + ' does not support PrintType.CODE');
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function IdealImpl(totalGVectorSpace, subGVectorSpace, generatorList) {
    this.g1x_1 = totalGVectorSpace;
    this.h1x_1 = generatorList;
    this.i1x_1 = subGVectorSpace;
    // Inline function 'kotlin.require' call
    var tmp0_require = equals(this.g1x_1.c1k(), subGVectorSpace.m1o().c1k());
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.IdealImpl.<anonymous>' call
      tmp$ret$0 = 'subGVectorSpace.totalGVectorSpace (' + subGVectorSpace.m1o() + ')' + ('must be the same as totalGVectorSpace (' + this.g1x_1 + ')');
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
  }
  IdealImpl.prototype.m1o = function () {
    return this.g1x_1;
  };
  IdealImpl.prototype.d1k = function () {
    return this.i1x_1.d1k();
  };
  IdealImpl.prototype.c1j = function () {
    return this.i1x_1.c1j();
  };
  IdealImpl.prototype.y1j = function () {
    return this.i1x_1.y1j();
  };
  IdealImpl.prototype.e1k = function () {
    return this.i1x_1.e1k();
  };
  IdealImpl.prototype.z1j = function () {
    return this.i1x_1.z1j();
  };
  IdealImpl.prototype.n1o = function () {
    return this.i1x_1.n1o();
  };
  IdealImpl.prototype.a1k = function () {
    return this.i1x_1.a1k();
  };
  IdealImpl.prototype.u1j = function () {
    return this.i1x_1.u1j();
  };
  IdealImpl.prototype.x1j = function () {
    return this.i1x_1.x1j();
  };
  IdealImpl.prototype.c1k = function () {
    return this.i1x_1.c1k();
  };
  IdealImpl.prototype.u1k = function () {
    return this.i1x_1.u1k();
  };
  IdealImpl.prototype.o1o = function (a, b) {
    return this.i1x_1.o1k(a, b);
  };
  IdealImpl.prototype.o1k = function (a, b) {
    return this.o1o(a, b);
  };
  IdealImpl.prototype.q1o = function (gVector) {
    return this.i1x_1.m1k(gVector);
  };
  IdealImpl.prototype.m1k = function (gVector) {
    return this.q1o(gVector);
  };
  IdealImpl.prototype.r1o = function (gVector) {
    return this.i1x_1.n1k(gVector);
  };
  IdealImpl.prototype.n1k = function (gVector) {
    return this.r1o(gVector);
  };
  IdealImpl.prototype.s1o = function (gVectorOrZero, degree) {
    return this.i1x_1.l1k(gVectorOrZero, degree);
  };
  IdealImpl.prototype.l1k = function (gVectorOrZero, degree) {
    return this.s1o(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  IdealImpl.prototype.t1o = function (a, b) {
    return this.i1x_1.t1k(a, b);
  };
  IdealImpl.prototype.t1k = function (a, b) {
    return this.t1o(a, b);
  };
  IdealImpl.prototype.u1o = function (basisName, degree) {
    return this.i1x_1.h1k(basisName, degree);
  };
  IdealImpl.prototype.h1k = function (basisName, degree) {
    var tmp = basisName instanceof SubBasis ? basisName : THROW_CCE();
    return this.u1o(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  IdealImpl.prototype.v1o = function (vector, degree) {
    return this.i1x_1.f1k(vector, degree);
  };
  IdealImpl.prototype.f1k = function (vector, degree) {
    return this.v1o(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  IdealImpl.prototype.w1o = function (vector, degree) {
    return this.i1x_1.g1k(vector, degree);
  };
  IdealImpl.prototype.g1k = function (vector, degree) {
    return this.w1o(vector, degree);
  };
  IdealImpl.prototype.b1k = function (degree) {
    return this.i1x_1.b1k(degree);
  };
  IdealImpl.prototype.l = function (degree) {
    return this.i1x_1.l(degree);
  };
  IdealImpl.prototype.i1k = function (degree) {
    return this.i1x_1.i1k(degree);
  };
  IdealImpl.prototype.x1o = function (degree) {
    return this.i1x_1.x1o(degree);
  };
  IdealImpl.prototype.j1k = function (degree) {
    return this.i1x_1.j1k(degree);
  };
  IdealImpl.prototype.k1k = function (degree) {
    return this.i1x_1.k1k(degree);
  };
  IdealImpl.prototype.y1o = function (scalar, gVector) {
    return this.i1x_1.q1k(scalar, gVector);
  };
  IdealImpl.prototype.q1k = function (scalar, gVector) {
    return this.y1o(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  IdealImpl.prototype.p1j = function (gVector) {
    return this.i1x_1.p1j(gVector);
  };
  IdealImpl.prototype.z1o = function (a, b) {
    return this.i1x_1.p1k(a, b);
  };
  IdealImpl.prototype.p1k = function (a, b) {
    return this.z1o(a, b);
  };
  IdealImpl.prototype.zc = function () {
    return this.toString();
  };
  IdealImpl.prototype.toString = function () {
    var tmp = PrintType_PLAIN_getInstance();
    return this.c1n(PrintConfig_init_$Create$(tmp, null, null, null, null, 30, null));
  };
  IdealImpl.prototype.c1n = function (printConfig) {
    return idealToString('Ideal', this.h1x_1, printConfig);
  };
  IdealImpl.$metadata$ = classMeta('IdealImpl', [Ideal, SubGVectorSpace]);
  function idealToString$lambda($printConfig) {
    return function (it) {
      return it.c1n($printConfig);
    };
  }
  function Companion_26() {
    Companion_instance_26 = this;
  }
  Companion_26.prototype.t1j = function (totalDGAlgebra, quotGAlgebra) {
    return new QuotDGAlgebraImpl(totalDGAlgebra, quotGAlgebra);
  };
  Companion_26.$metadata$ = objectMeta('Companion');
  var Companion_instance_26;
  function Companion_getInstance_27() {
    if (Companion_instance_26 == null)
      new Companion_26();
    return Companion_instance_26;
  }
  function QuotDGAlgebra() {
  }
  QuotDGAlgebra.$metadata$ = interfaceMeta('QuotDGAlgebra', [DGAlgebra, QuotGAlgebra, QuotDGVectorSpace]);
  function QuotDGAlgebraImpl$cohomology$delegate$lambda(this$0) {
    return function () {
      var cohomologyUnit = Companion_getInstance_11().a1n(this$0.n1x_1, this$0.j1x_1.v1k());
      return Companion_getInstance_32().b1n(this$0.s1x_1, this$0.n1x_1, this$0.o1x_1, cohomologyUnit, this$0.r1x_1);
    };
  }
  function QuotDGAlgebraImpl$projection$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_8().n1n(this$0.k1x_1, this$0, this$0.j1x_1.s1q());
    };
  }
  function QuotDGAlgebraImpl(totalDGAlgebra, underlyingGAlgebra) {
    this.j1x_1 = underlyingGAlgebra;
    this.k1x_1 = totalDGAlgebra;
    this.l1x_1 = totalDGAlgebra.k1j().h1o(this.j1x_1);
    this.m1x_1 = Companion_getInstance_9().h1j(this.j1x_1, this.l1x_1);
    this.n1x_1 = this.m1x_1.i1j();
    this.o1x_1 = this.m1x_1.i1j().j1j();
    this.p1x_1 = Companion_getInstance_2().a1l(this);
    this.q1x_1 = this.j1x_1.v1k();
    this.r1x_1 = this.j1x_1.w1k();
    this.s1x_1 = this.j1x_1.u1j();
    this.t1x_1 = this.j1x_1.j1j();
    var tmp = this;
    tmp.u1x_1 = lazy(QuotDGAlgebraImpl$cohomology$delegate$lambda(this));
    var tmp_0 = this;
    tmp_0.v1x_1 = lazy(QuotDGAlgebraImpl$projection$delegate$lambda(this));
  }
  QuotDGAlgebraImpl.prototype.d1k = function () {
    return this.j1x_1.d1k();
  };
  QuotDGAlgebraImpl.prototype.y1j = function () {
    return this.j1x_1.y1j();
  };
  QuotDGAlgebraImpl.prototype.e1k = function () {
    return this.j1x_1.e1k();
  };
  QuotDGAlgebraImpl.prototype.z1j = function () {
    return this.j1x_1.z1j();
  };
  QuotDGAlgebraImpl.prototype.a1k = function () {
    return this.j1x_1.a1k();
  };
  QuotDGAlgebraImpl.prototype.zc = function () {
    return this.j1x_1.zc();
  };
  QuotDGAlgebraImpl.prototype.x1j = function () {
    return this.j1x_1.x1j();
  };
  QuotDGAlgebraImpl.prototype.f1r = function () {
    return this.j1x_1.f1r();
  };
  QuotDGAlgebraImpl.prototype.c1k = function () {
    return this.j1x_1.c1k();
  };
  QuotDGAlgebraImpl.prototype.u1k = function () {
    return this.j1x_1.u1k();
  };
  QuotDGAlgebraImpl.prototype.w1x = function (a, b) {
    return this.j1x_1.o1k(a, b);
  };
  QuotDGAlgebraImpl.prototype.o1k = function (a, b) {
    return this.w1x(a, b);
  };
  QuotDGAlgebraImpl.prototype.x1x = function (gVector) {
    return this.j1x_1.m1k(gVector);
  };
  QuotDGAlgebraImpl.prototype.m1k = function (gVector) {
    return this.x1x(gVector);
  };
  QuotDGAlgebraImpl.prototype.y1x = function (gVector) {
    return this.j1x_1.n1k(gVector);
  };
  QuotDGAlgebraImpl.prototype.n1k = function (gVector) {
    return this.y1x(gVector);
  };
  QuotDGAlgebraImpl.prototype.z1x = function (gVectorOrZero, degree) {
    return this.j1x_1.l1k(gVectorOrZero, degree);
  };
  QuotDGAlgebraImpl.prototype.l1k = function (gVectorOrZero, degree) {
    return this.z1x(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  QuotDGAlgebraImpl.prototype.a1y = function (a, b) {
    return this.j1x_1.t1k(a, b);
  };
  QuotDGAlgebraImpl.prototype.t1k = function (a, b) {
    return this.a1y(a, b);
  };
  QuotDGAlgebraImpl.prototype.b1y = function (basisName, degree) {
    return this.j1x_1.h1k(basisName, degree);
  };
  QuotDGAlgebraImpl.prototype.h1k = function (basisName, degree) {
    var tmp = basisName instanceof QuotBasis ? basisName : THROW_CCE();
    return this.b1y(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  QuotDGAlgebraImpl.prototype.c1y = function (vector, degree) {
    return this.j1x_1.f1k(vector, degree);
  };
  QuotDGAlgebraImpl.prototype.f1k = function (vector, degree) {
    return this.c1y(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  QuotDGAlgebraImpl.prototype.d1y = function (vector, degree) {
    return this.j1x_1.g1k(vector, degree);
  };
  QuotDGAlgebraImpl.prototype.g1k = function (vector, degree) {
    return this.d1y(vector, degree);
  };
  QuotDGAlgebraImpl.prototype.b1k = function (degree) {
    return this.j1x_1.b1k(degree);
  };
  QuotDGAlgebraImpl.prototype.l = function (degree) {
    return this.j1x_1.l(degree);
  };
  QuotDGAlgebraImpl.prototype.i1k = function (degree) {
    return this.j1x_1.i1k(degree);
  };
  QuotDGAlgebraImpl.prototype.x1o = function (degree) {
    return this.j1x_1.x1o(degree);
  };
  QuotDGAlgebraImpl.prototype.j1k = function (degree) {
    return this.j1x_1.j1k(degree);
  };
  QuotDGAlgebraImpl.prototype.k1k = function (degree) {
    return this.j1x_1.k1k(degree);
  };
  QuotDGAlgebraImpl.prototype.e1y = function (scalar, gVector) {
    return this.j1x_1.q1k(scalar, gVector);
  };
  QuotDGAlgebraImpl.prototype.q1k = function (scalar, gVector) {
    return this.e1y(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  QuotDGAlgebraImpl.prototype.f1y = function (a, b) {
    return this.j1x_1.p1k(a, b);
  };
  QuotDGAlgebraImpl.prototype.p1k = function (a, b) {
    return this.f1y(a, b);
  };
  QuotDGAlgebraImpl.prototype.toString = function () {
    return this.j1x_1.toString();
  };
  QuotDGAlgebraImpl.prototype.c1n = function (printConfig) {
    return this.j1x_1.c1n(printConfig);
  };
  QuotDGAlgebraImpl.prototype.k1j = function () {
    return this.l1x_1;
  };
  QuotDGAlgebraImpl.prototype.c1j = function () {
    return this.p1x_1;
  };
  QuotDGAlgebraImpl.prototype.v1k = function () {
    return this.q1x_1;
  };
  QuotDGAlgebraImpl.prototype.w1k = function () {
    return this.r1x_1;
  };
  QuotDGAlgebraImpl.prototype.u1j = function () {
    return this.s1x_1;
  };
  QuotDGAlgebraImpl.prototype.j1j = function () {
    return this.t1x_1;
  };
  QuotDGAlgebraImpl.prototype.i1j = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = cohomology$factory_2();
    tmp$ret$0 = this.u1x_1.f1();
    return tmp$ret$0;
  };
  QuotDGAlgebraImpl.prototype.s1q = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = projection$factory();
    tmp$ret$0 = this.v1x_1.f1();
    return tmp$ret$0;
  };
  QuotDGAlgebraImpl.$metadata$ = classMeta('QuotDGAlgebraImpl', [QuotDGAlgebra, QuotGVectorSpace]);
  function cohomology$factory_2() {
    return getPropertyCallableRef('cohomology', 1, KProperty1, function (receiver) {
      return receiver.i1j();
    }, null);
  }
  function projection$factory() {
    return getPropertyCallableRef('projection', 1, KProperty1, function (receiver) {
      return receiver.s1q();
    }, null);
  }
  function QuotDGVectorSpace() {
  }
  QuotDGVectorSpace.$metadata$ = interfaceMeta('QuotDGVectorSpace', [DGVectorSpace, QuotGVectorSpace]);
  function Companion_27() {
    Companion_instance_27 = this;
  }
  Companion_27.prototype.g1y = function (matrixSpace, quotGVectorSpace, multiplication, unit, isCommutative) {
    return new QuotGAlgebraImpl(matrixSpace, quotGVectorSpace, multiplication, unit, isCommutative);
  };
  Companion_27.prototype.e1t = function (matrixSpace, quotGVectorSpace, multiplication, unit, isCommutative, $mask0, $handler) {
    if (!(($mask0 & 16) === 0))
      isCommutative = false;
    return this.g1y(matrixSpace, quotGVectorSpace, multiplication, unit, isCommutative);
  };
  Companion_27.$metadata$ = objectMeta('Companion');
  var Companion_instance_27;
  function Companion_getInstance_28() {
    if (Companion_instance_27 == null)
      new Companion_27();
    return Companion_instance_27;
  }
  function QuotGAlgebra() {
  }
  QuotGAlgebra.$metadata$ = interfaceMeta('QuotGAlgebra', [GAlgebra, QuotGMagma]);
  function QuotGAlgebraImpl(matrixSpace, quotGVectorSpace, multiplication, unit, isCommutative) {
    this.h1y_1 = matrixSpace;
    this.i1y_1 = multiplication;
    this.j1y_1 = unit;
    this.k1y_1 = isCommutative;
    this.l1y_1 = quotGVectorSpace;
    this.m1y_1 = Companion_getInstance_16().f1t(this);
    this.n1y_1 = this;
  }
  QuotGAlgebraImpl.prototype.u1j = function () {
    return this.h1y_1;
  };
  QuotGAlgebraImpl.prototype.j1j = function () {
    return this.i1y_1;
  };
  QuotGAlgebraImpl.prototype.v1k = function () {
    return this.j1y_1;
  };
  QuotGAlgebraImpl.prototype.w1k = function () {
    return this.k1y_1;
  };
  QuotGAlgebraImpl.prototype.d1k = function () {
    return this.l1y_1.d1k();
  };
  QuotGAlgebraImpl.prototype.y1j = function () {
    return this.l1y_1.y1j();
  };
  QuotGAlgebraImpl.prototype.e1k = function () {
    return this.l1y_1.e1k();
  };
  QuotGAlgebraImpl.prototype.z1j = function () {
    return this.l1y_1.z1j();
  };
  QuotGAlgebraImpl.prototype.a1k = function () {
    return this.l1y_1.a1k();
  };
  QuotGAlgebraImpl.prototype.zc = function () {
    return this.l1y_1.zc();
  };
  QuotGAlgebraImpl.prototype.x1j = function () {
    return this.l1y_1.x1j();
  };
  QuotGAlgebraImpl.prototype.s1q = function () {
    return this.l1y_1.s1q();
  };
  QuotGAlgebraImpl.prototype.f1r = function () {
    return this.l1y_1.f1r();
  };
  QuotGAlgebraImpl.prototype.c1k = function () {
    return this.l1y_1.c1k();
  };
  QuotGAlgebraImpl.prototype.u1k = function () {
    return this.l1y_1.u1k();
  };
  QuotGAlgebraImpl.prototype.w1x = function (a, b) {
    return this.l1y_1.o1k(a, b);
  };
  QuotGAlgebraImpl.prototype.o1k = function (a, b) {
    return this.w1x(a, b);
  };
  QuotGAlgebraImpl.prototype.x1x = function (gVector) {
    return this.l1y_1.m1k(gVector);
  };
  QuotGAlgebraImpl.prototype.m1k = function (gVector) {
    return this.x1x(gVector);
  };
  QuotGAlgebraImpl.prototype.y1x = function (gVector) {
    return this.l1y_1.n1k(gVector);
  };
  QuotGAlgebraImpl.prototype.n1k = function (gVector) {
    return this.y1x(gVector);
  };
  QuotGAlgebraImpl.prototype.z1x = function (gVectorOrZero, degree) {
    return this.l1y_1.l1k(gVectorOrZero, degree);
  };
  QuotGAlgebraImpl.prototype.l1k = function (gVectorOrZero, degree) {
    return this.z1x(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  QuotGAlgebraImpl.prototype.a1y = function (a, b) {
    return this.l1y_1.t1k(a, b);
  };
  QuotGAlgebraImpl.prototype.t1k = function (a, b) {
    return this.a1y(a, b);
  };
  QuotGAlgebraImpl.prototype.b1y = function (basisName, degree) {
    return this.l1y_1.h1k(basisName, degree);
  };
  QuotGAlgebraImpl.prototype.h1k = function (basisName, degree) {
    var tmp = basisName instanceof QuotBasis ? basisName : THROW_CCE();
    return this.b1y(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  QuotGAlgebraImpl.prototype.c1y = function (vector, degree) {
    return this.l1y_1.f1k(vector, degree);
  };
  QuotGAlgebraImpl.prototype.f1k = function (vector, degree) {
    return this.c1y(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  QuotGAlgebraImpl.prototype.d1y = function (vector, degree) {
    return this.l1y_1.g1k(vector, degree);
  };
  QuotGAlgebraImpl.prototype.g1k = function (vector, degree) {
    return this.d1y(vector, degree);
  };
  QuotGAlgebraImpl.prototype.b1k = function (degree) {
    return this.l1y_1.b1k(degree);
  };
  QuotGAlgebraImpl.prototype.l = function (degree) {
    return this.l1y_1.l(degree);
  };
  QuotGAlgebraImpl.prototype.i1k = function (degree) {
    return this.l1y_1.i1k(degree);
  };
  QuotGAlgebraImpl.prototype.x1o = function (degree) {
    return this.l1y_1.x1o(degree);
  };
  QuotGAlgebraImpl.prototype.j1k = function (degree) {
    return this.l1y_1.j1k(degree);
  };
  QuotGAlgebraImpl.prototype.k1k = function (degree) {
    return this.l1y_1.k1k(degree);
  };
  QuotGAlgebraImpl.prototype.e1y = function (scalar, gVector) {
    return this.l1y_1.q1k(scalar, gVector);
  };
  QuotGAlgebraImpl.prototype.q1k = function (scalar, gVector) {
    return this.e1y(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  QuotGAlgebraImpl.prototype.f1y = function (a, b) {
    return this.l1y_1.p1k(a, b);
  };
  QuotGAlgebraImpl.prototype.p1k = function (a, b) {
    return this.f1y(a, b);
  };
  QuotGAlgebraImpl.prototype.toString = function () {
    return this.l1y_1.toString();
  };
  QuotGAlgebraImpl.prototype.c1n = function (printConfig) {
    return this.l1y_1.c1n(printConfig);
  };
  QuotGAlgebraImpl.prototype.c1j = function () {
    return this.m1y_1;
  };
  QuotGAlgebraImpl.$metadata$ = classMeta('QuotGAlgebraImpl', [QuotGAlgebra, QuotGVectorSpace]);
  function QuotGMagma() {
  }
  QuotGMagma.$metadata$ = interfaceMeta('QuotGMagma', [GMagma, QuotGVectorSpace]);
  function Companion_28() {
    Companion_instance_28 = this;
  }
  Companion_28.prototype.o1y = function (matrixSpace, totalGVectorSpace, quotientGenerator, boundedness, name) {
    return new QuotGVectorSpaceImpl(matrixSpace, totalGVectorSpace, quotientGenerator, boundedness, name);
  };
  Companion_28.prototype.c1t = function (matrixSpace, totalGVectorSpace, quotientGenerator, boundedness, name, $mask0, $handler) {
    if (!(($mask0 & 8) === 0))
      boundedness = totalGVectorSpace.d1k();
    if (!(($mask0 & 16) === 0))
      name = totalGVectorSpace.zc() + '/' + quotientGenerator.zc();
    return this.o1y(matrixSpace, totalGVectorSpace, quotientGenerator, boundedness, name);
  };
  Companion_28.$metadata$ = objectMeta('Companion');
  var Companion_instance_28;
  function Companion_getInstance_29() {
    if (Companion_instance_28 == null)
      new Companion_28();
    return Companion_instance_28;
  }
  function QuotGVectorSpace() {
  }
  QuotGVectorSpace.$metadata$ = interfaceMeta('QuotGVectorSpace', [GVectorSpace]);
  function QuotGVectorSpaceImpl$section$delegate$lambda$lambda(this$0) {
    return function (degree) {
      return this$0.b1k(degree).f1r();
    };
  }
  function QuotGVectorSpaceImpl$section$delegate$lambda(this$0) {
    return function () {
      var tmp = Companion_getInstance_21();
      var tmp_0 = this$0.v1y_1.m1m();
      return tmp.f1v(this$0, this$0.q1y_1, tmp_0, this$0.p1y_1, 'inclusion', QuotGVectorSpaceImpl$section$delegate$lambda$lambda(this$0));
    };
  }
  function QuotGVectorSpaceImpl$projection$delegate$lambda$lambda(this$0) {
    return function (degree) {
      return this$0.b1k(degree).s1q();
    };
  }
  function QuotGVectorSpaceImpl$projection$delegate$lambda(this$0) {
    return function () {
      var tmp = Companion_getInstance_21();
      var tmp_0 = this$0.v1y_1.m1m();
      return tmp.f1v(this$0.q1y_1, this$0, tmp_0, this$0.p1y_1, 'inclusion', QuotGVectorSpaceImpl$projection$delegate$lambda$lambda(this$0));
    };
  }
  function QuotGVectorSpaceImpl(matrixSpace, totalGVectorSpace, quotientGenerator, boundedness, name) {
    this.p1y_1 = matrixSpace;
    this.q1y_1 = totalGVectorSpace;
    this.r1y_1 = quotientGenerator;
    this.s1y_1 = boundedness;
    this.t1y_1 = name;
    this.u1y_1 = this.q1y_1.x1j();
    this.v1y_1 = this.q1y_1.y1j();
    this.w1y_1 = Companion_getInstance_72().e1z(this.q1y_1.z1j());
    this.x1y_1 = this.q1y_1.a1k();
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp$ret$0 = LinkedHashMap_init_$Create$();
    tmp.y1y_1 = tmp$ret$0;
    this.z1y_1 = Companion_getInstance_25().h1s(this);
    this.a1z_1 = this;
    this.b1z_1 = new ZeroGVector(this);
    var tmp_0 = this;
    tmp_0.c1z_1 = lazy(QuotGVectorSpaceImpl$section$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.d1z_1 = lazy(QuotGVectorSpaceImpl$projection$delegate$lambda(this));
  }
  QuotGVectorSpaceImpl.prototype.u1j = function () {
    return this.p1y_1;
  };
  QuotGVectorSpaceImpl.prototype.m1o = function () {
    return this.q1y_1;
  };
  QuotGVectorSpaceImpl.prototype.d1k = function () {
    return this.s1y_1;
  };
  QuotGVectorSpaceImpl.prototype.zc = function () {
    return this.t1y_1;
  };
  QuotGVectorSpaceImpl.prototype.x1j = function () {
    return this.u1y_1;
  };
  QuotGVectorSpaceImpl.prototype.y1j = function () {
    return this.v1y_1;
  };
  QuotGVectorSpaceImpl.prototype.z1j = function () {
    return this.w1y_1;
  };
  QuotGVectorSpaceImpl.prototype.a1k = function () {
    return this.x1y_1;
  };
  QuotGVectorSpaceImpl.prototype.c1j = function () {
    return this.z1y_1;
  };
  QuotGVectorSpaceImpl.prototype.c1k = function () {
    return this.a1z_1;
  };
  QuotGVectorSpaceImpl.prototype.u1k = function () {
    return this.b1z_1;
  };
  QuotGVectorSpaceImpl.prototype.f1r = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = section$factory();
    tmp$ret$0 = this.c1z_1.f1();
    return tmp$ret$0;
  };
  QuotGVectorSpaceImpl.prototype.s1q = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = projection$factory_0();
    tmp$ret$0 = this.d1z_1.f1();
    return tmp$ret$0;
  };
  QuotGVectorSpaceImpl.prototype.b1k = function (degree) {
    var tmp$ret$1;
    // Inline function 'kotlin.collections.getOrPut' call
    var tmp0_getOrPut = this.y1y_1;
    var value = tmp0_getOrPut.t(degree);
    var tmp;
    if (value == null) {
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.QuotGVectorSpaceImpl.get.<anonymous>' call
      tmp$ret$0 = Companion_getInstance_73().f1z(this.p1y_1, this.q1y_1.b1k(degree), this.r1y_1.b1k(degree));
      var answer = tmp$ret$0;
      tmp0_getOrPut.u(degree, answer);
      tmp = answer;
    } else {
      tmp = value;
    }
    tmp$ret$1 = tmp;
    return tmp$ret$1;
  };
  QuotGVectorSpaceImpl.prototype.l = function (degree) {
    return this.b1k(this.v1y_1.oh(degree));
  };
  QuotGVectorSpaceImpl.prototype.toString = function () {
    var tmp = PrintType_PLAIN_getInstance();
    return this.c1n(PrintConfig_init_$Create$(tmp, null, null, null, null, 30, null));
  };
  QuotGVectorSpaceImpl.prototype.c1n = function (printConfig) {
    var total = this.q1y_1.c1n(printConfig);
    var quot = this.r1y_1.c1n(printConfig);
    return total + '/' + quot;
  };
  QuotGVectorSpaceImpl.$metadata$ = classMeta('QuotGVectorSpaceImpl', [QuotGVectorSpace]);
  function section$factory() {
    return getPropertyCallableRef('section', 1, KProperty1, function (receiver) {
      return receiver.f1r();
    }, null);
  }
  function projection$factory_0() {
    return getPropertyCallableRef('projection', 1, KProperty1, function (receiver) {
      return receiver.s1q();
    }, null);
  }
  function Companion_29() {
    Companion_instance_29 = this;
  }
  Companion_29.prototype.q1j = function (totalDGVectorSpace, subGVectorSpace) {
    return new SubDGVectorSpaceImpl(totalDGVectorSpace, subGVectorSpace);
  };
  Companion_29.$metadata$ = objectMeta('Companion');
  var Companion_instance_29;
  function Companion_getInstance_30() {
    if (Companion_instance_29 == null)
      new Companion_29();
    return Companion_instance_29;
  }
  function SubDGVectorSpace() {
  }
  SubDGVectorSpace.$metadata$ = interfaceMeta('SubDGVectorSpace', [DGVectorSpace, SubGVectorSpace]);
  function SubDGVectorSpaceImpl$cohomology$delegate$lambda(this$0) {
    return function () {
      var dgVectorSpace = Companion_getInstance_11().u1p(this$0.g1z_1, this$0.i1z_1);
      return dgVectorSpace.i1j();
    };
  }
  function SubDGVectorSpaceImpl$inclusion$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_8().n1n(this$0, this$0.h1z_1, this$0.g1z_1.n1o());
    };
  }
  function SubDGVectorSpaceImpl(totalDGVectorSpace, underlyingGVectorSpace) {
    this.g1z_1 = underlyingGVectorSpace;
    this.h1z_1 = totalDGVectorSpace;
    this.i1z_1 = totalDGVectorSpace.k1j().v1n(this.g1z_1, this.g1z_1);
    this.j1z_1 = Companion_getInstance_12().l1r(this);
    this.k1z_1 = this.g1z_1.u1j();
    var tmp = this;
    tmp.l1z_1 = lazy(SubDGVectorSpaceImpl$cohomology$delegate$lambda(this));
    var tmp_0 = this;
    tmp_0.m1z_1 = lazy(SubDGVectorSpaceImpl$inclusion$delegate$lambda(this));
  }
  SubDGVectorSpaceImpl.prototype.c1k = function () {
    return this.g1z_1;
  };
  SubDGVectorSpaceImpl.prototype.d1k = function () {
    return this.g1z_1.d1k();
  };
  SubDGVectorSpaceImpl.prototype.y1j = function () {
    return this.g1z_1.y1j();
  };
  SubDGVectorSpaceImpl.prototype.e1k = function () {
    return this.g1z_1.e1k();
  };
  SubDGVectorSpaceImpl.prototype.z1j = function () {
    return this.g1z_1.z1j();
  };
  SubDGVectorSpaceImpl.prototype.a1k = function () {
    return this.g1z_1.a1k();
  };
  SubDGVectorSpaceImpl.prototype.zc = function () {
    return this.g1z_1.zc();
  };
  SubDGVectorSpaceImpl.prototype.x1j = function () {
    return this.g1z_1.x1j();
  };
  SubDGVectorSpaceImpl.prototype.u1k = function () {
    return this.g1z_1.u1k();
  };
  SubDGVectorSpaceImpl.prototype.o1o = function (a, b) {
    return this.g1z_1.o1k(a, b);
  };
  SubDGVectorSpaceImpl.prototype.o1k = function (a, b) {
    return this.o1o(a, b);
  };
  SubDGVectorSpaceImpl.prototype.q1o = function (gVector) {
    return this.g1z_1.m1k(gVector);
  };
  SubDGVectorSpaceImpl.prototype.m1k = function (gVector) {
    return this.q1o(gVector);
  };
  SubDGVectorSpaceImpl.prototype.r1o = function (gVector) {
    return this.g1z_1.n1k(gVector);
  };
  SubDGVectorSpaceImpl.prototype.n1k = function (gVector) {
    return this.r1o(gVector);
  };
  SubDGVectorSpaceImpl.prototype.s1o = function (gVectorOrZero, degree) {
    return this.g1z_1.l1k(gVectorOrZero, degree);
  };
  SubDGVectorSpaceImpl.prototype.l1k = function (gVectorOrZero, degree) {
    return this.s1o(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  SubDGVectorSpaceImpl.prototype.t1o = function (a, b) {
    return this.g1z_1.t1k(a, b);
  };
  SubDGVectorSpaceImpl.prototype.t1k = function (a, b) {
    return this.t1o(a, b);
  };
  SubDGVectorSpaceImpl.prototype.u1o = function (basisName, degree) {
    return this.g1z_1.h1k(basisName, degree);
  };
  SubDGVectorSpaceImpl.prototype.h1k = function (basisName, degree) {
    var tmp = basisName instanceof SubBasis ? basisName : THROW_CCE();
    return this.u1o(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  SubDGVectorSpaceImpl.prototype.v1o = function (vector, degree) {
    return this.g1z_1.f1k(vector, degree);
  };
  SubDGVectorSpaceImpl.prototype.f1k = function (vector, degree) {
    return this.v1o(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  SubDGVectorSpaceImpl.prototype.w1o = function (vector, degree) {
    return this.g1z_1.g1k(vector, degree);
  };
  SubDGVectorSpaceImpl.prototype.g1k = function (vector, degree) {
    return this.w1o(vector, degree);
  };
  SubDGVectorSpaceImpl.prototype.b1k = function (degree) {
    return this.g1z_1.b1k(degree);
  };
  SubDGVectorSpaceImpl.prototype.l = function (degree) {
    return this.g1z_1.l(degree);
  };
  SubDGVectorSpaceImpl.prototype.i1k = function (degree) {
    return this.g1z_1.i1k(degree);
  };
  SubDGVectorSpaceImpl.prototype.x1o = function (degree) {
    return this.g1z_1.x1o(degree);
  };
  SubDGVectorSpaceImpl.prototype.j1k = function (degree) {
    return this.g1z_1.j1k(degree);
  };
  SubDGVectorSpaceImpl.prototype.k1k = function (degree) {
    return this.g1z_1.k1k(degree);
  };
  SubDGVectorSpaceImpl.prototype.y1o = function (scalar, gVector) {
    return this.g1z_1.q1k(scalar, gVector);
  };
  SubDGVectorSpaceImpl.prototype.q1k = function (scalar, gVector) {
    return this.y1o(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  SubDGVectorSpaceImpl.prototype.p1j = function (gVector) {
    return this.g1z_1.p1j(gVector);
  };
  SubDGVectorSpaceImpl.prototype.z1o = function (a, b) {
    return this.g1z_1.p1k(a, b);
  };
  SubDGVectorSpaceImpl.prototype.p1k = function (a, b) {
    return this.z1o(a, b);
  };
  SubDGVectorSpaceImpl.prototype.toString = function () {
    return this.g1z_1.toString();
  };
  SubDGVectorSpaceImpl.prototype.c1n = function (printConfig) {
    return this.g1z_1.c1n(printConfig);
  };
  SubDGVectorSpaceImpl.prototype.m1o = function () {
    return this.h1z_1;
  };
  SubDGVectorSpaceImpl.prototype.k1j = function () {
    return this.i1z_1;
  };
  SubDGVectorSpaceImpl.prototype.c1j = function () {
    return this.j1z_1;
  };
  SubDGVectorSpaceImpl.prototype.u1j = function () {
    return this.k1z_1;
  };
  SubDGVectorSpaceImpl.prototype.i1j = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = cohomology$factory_3();
    tmp$ret$0 = this.l1z_1.f1();
    return tmp$ret$0;
  };
  SubDGVectorSpaceImpl.prototype.n1o = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = inclusion$factory();
    tmp$ret$0 = this.m1z_1.f1();
    return tmp$ret$0;
  };
  SubDGVectorSpaceImpl.$metadata$ = classMeta('SubDGVectorSpaceImpl', [SubDGVectorSpace, SubGVectorSpace]);
  function cohomology$factory_3() {
    return getPropertyCallableRef('cohomology', 1, KProperty1, function (receiver) {
      return receiver.i1j();
    }, null);
  }
  function inclusion$factory() {
    return getPropertyCallableRef('inclusion', 1, KProperty1, function (receiver) {
      return receiver.n1o();
    }, null);
  }
  function SubGVectorSpace$Companion$fromList$lambda($gVectorList, $matrixSpace, $totalGVectorSpace) {
    return function (degree) {
      var tmp$ret$5;
      // Inline function 'kotlin.collections.map' call
      var tmp$ret$2;
      // Inline function 'kotlin.collections.filter' call
      var tmp$ret$1;
      // Inline function 'kotlin.collections.filterTo' call
      var tmp0_filterTo = ArrayList_init_$Create$_0();
      var tmp0_iterator = $gVectorList.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.dg.Companion.fromList.<anonymous>.<anonymous>' call
        tmp$ret$0 = equals(element.u1q_1, degree);
        if (tmp$ret$0) {
          tmp0_filterTo.a(element);
        }
      }
      tmp$ret$1 = tmp0_filterTo;
      tmp$ret$2 = tmp$ret$1;
      var tmp0_map = tmp$ret$2;
      var tmp$ret$4;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var tmp0_iterator_0 = tmp0_map.f();
      while (tmp0_iterator_0.g()) {
        var item = tmp0_iterator_0.h();
        var tmp$ret$3;
        // Inline function 'com.github.shwaka.kohomology.dg.Companion.fromList.<anonymous>.<anonymous>' call
        tmp$ret$3 = item.t1q_1;
        tmp0_mapTo.a(tmp$ret$3);
      }
      tmp$ret$4 = tmp0_mapTo;
      tmp$ret$5 = tmp$ret$4;
      var vectorListForDegree = tmp$ret$5;
      return Companion_getInstance_79().i1u($matrixSpace, $totalGVectorSpace.b1k(degree), vectorListForDegree);
    };
  }
  function Companion_30() {
    Companion_instance_30 = this;
  }
  Companion_30.prototype.n1z = function (matrixSpace, totalGVectorSpace, name, boundedness, getVectorSpace) {
    return new SubGVectorSpaceImpl(matrixSpace, totalGVectorSpace, name, boundedness, getVectorSpace);
  };
  Companion_30.prototype.q1u = function (matrixSpace, totalGVectorSpace, name, boundedness, getVectorSpace, $mask0, $handler) {
    if (!(($mask0 & 8) === 0))
      boundedness = totalGVectorSpace.d1k();
    return this.n1z(matrixSpace, totalGVectorSpace, name, boundedness, getVectorSpace);
  };
  Companion_30.prototype.z1s = function (matrixSpace, totalGVectorSpace, name, gVectorList) {
    var degreeGroup = totalGVectorSpace.y1j();
    var tmp;
    if (isInterface(degreeGroup, AugmentedDegreeGroup)) {
      var tmp_0 = Companion_getInstance_0();
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(gVectorList, 10));
      var tmp0_iterator = gVectorList.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.dg.Companion.fromList.<anonymous>' call
        tmp$ret$0 = item.u1q_1;
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      tmp = tmp_0.f1j(degreeGroup, tmp$ret$2);
    } else {
      tmp = Boundedness_init_$Create$(null, null, 3, null);
    }
    var boundedness = tmp;
    return new SubGVectorSpaceImpl(matrixSpace, totalGVectorSpace, name, boundedness, SubGVectorSpace$Companion$fromList$lambda(gVectorList, matrixSpace, totalGVectorSpace));
  };
  Companion_30.$metadata$ = objectMeta('Companion');
  var Companion_instance_30;
  function Companion_getInstance_31() {
    if (Companion_instance_30 == null)
      new Companion_30();
    return Companion_instance_30;
  }
  function SubGVectorSpace() {
  }
  SubGVectorSpace.$metadata$ = interfaceMeta('SubGVectorSpace', [GVectorSpace]);
  function asSubGVectorSpace(_this__u8e3s4, matrixSpace) {
    return new WholeSubGVectorSpace(matrixSpace, _this__u8e3s4);
  }
  function SubGVectorSpaceImpl$inclusion$delegate$lambda$lambda(this$0) {
    return function (degree) {
      return this$0.b1k(degree).n1o();
    };
  }
  function SubGVectorSpaceImpl$inclusion$delegate$lambda(this$0) {
    return function () {
      var tmp = Companion_getInstance_21();
      var tmp_0 = this$0.v1z_1.m1m();
      return tmp.f1v(this$0, this$0.q1z_1, tmp_0, this$0.p1z_1, 'inclusion', SubGVectorSpaceImpl$inclusion$delegate$lambda$lambda(this$0));
    };
  }
  function SubGVectorSpaceImpl$retraction$delegate$lambda$lambda(this$0) {
    return function (degree) {
      return this$0.b1k(degree).e20();
    };
  }
  function SubGVectorSpaceImpl$retraction$delegate$lambda(this$0) {
    return function () {
      var tmp = Companion_getInstance_21();
      var tmp_0 = this$0.v1z_1.m1m();
      return tmp.f1v(this$0.q1z_1, this$0, tmp_0, this$0.p1z_1, 'inclusion', SubGVectorSpaceImpl$retraction$delegate$lambda$lambda(this$0));
    };
  }
  function SubGVectorSpaceImpl(matrixSpace, totalGVectorSpace, name, boundedness, getVectorSpace) {
    this.p1z_1 = matrixSpace;
    this.q1z_1 = totalGVectorSpace;
    this.r1z_1 = name;
    this.s1z_1 = boundedness;
    this.t1z_1 = getVectorSpace;
    this.u1z_1 = this.q1z_1.x1j();
    this.v1z_1 = this.q1z_1.y1j();
    this.w1z_1 = Companion_getInstance_78().e1z(this.q1z_1.z1j());
    this.x1z_1 = this.q1z_1.a1k();
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp$ret$0 = LinkedHashMap_init_$Create$();
    tmp.y1z_1 = tmp$ret$0;
    this.z1z_1 = Companion_getInstance_25().h1s(this);
    this.a20_1 = this;
    this.b20_1 = new ZeroGVector(this);
    var tmp_0 = this;
    tmp_0.c20_1 = lazy(SubGVectorSpaceImpl$inclusion$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.d20_1 = lazy(SubGVectorSpaceImpl$retraction$delegate$lambda(this));
  }
  SubGVectorSpaceImpl.prototype.u1j = function () {
    return this.p1z_1;
  };
  SubGVectorSpaceImpl.prototype.m1o = function () {
    return this.q1z_1;
  };
  SubGVectorSpaceImpl.prototype.zc = function () {
    return this.r1z_1;
  };
  SubGVectorSpaceImpl.prototype.d1k = function () {
    return this.s1z_1;
  };
  SubGVectorSpaceImpl.prototype.x1j = function () {
    return this.u1z_1;
  };
  SubGVectorSpaceImpl.prototype.y1j = function () {
    return this.v1z_1;
  };
  SubGVectorSpaceImpl.prototype.z1j = function () {
    return this.w1z_1;
  };
  SubGVectorSpaceImpl.prototype.a1k = function () {
    return this.x1z_1;
  };
  SubGVectorSpaceImpl.prototype.c1j = function () {
    return this.z1z_1;
  };
  SubGVectorSpaceImpl.prototype.c1k = function () {
    return this.a20_1;
  };
  SubGVectorSpaceImpl.prototype.u1k = function () {
    return this.b20_1;
  };
  SubGVectorSpaceImpl.prototype.n1o = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = inclusion$factory_0();
    tmp$ret$0 = this.c20_1.f1();
    return tmp$ret$0;
  };
  SubGVectorSpaceImpl.prototype.b1k = function (degree) {
    var tmp$ret$1;
    // Inline function 'kotlin.collections.getOrPut' call
    var tmp0_getOrPut = this.y1z_1;
    var value = tmp0_getOrPut.t(degree);
    var tmp;
    if (value == null) {
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.SubGVectorSpaceImpl.get.<anonymous>' call
      tmp$ret$0 = this.t1z_1(degree);
      var answer = tmp$ret$0;
      tmp0_getOrPut.u(degree, answer);
      tmp = answer;
    } else {
      tmp = value;
    }
    tmp$ret$1 = tmp;
    var result = tmp$ret$1;
    if (!equals(result.f20(), this.q1z_1.b1k(degree))) {
      throw IllegalStateException_init_$Create$('The vector space ' + result + ' must be contained in ' + this.q1z_1.b1k(degree));
    }
    return result;
  };
  SubGVectorSpaceImpl.prototype.l = function (degree) {
    return this.b1k(this.v1z_1.oh(degree));
  };
  SubGVectorSpaceImpl.prototype.toString = function () {
    var tmp = PrintType_PLAIN_getInstance();
    return this.c1n(PrintConfig_init_$Create$(tmp, null, null, null, null, 30, null));
  };
  SubGVectorSpaceImpl.prototype.c1n = function (printConfig) {
    return this.r1z_1;
  };
  SubGVectorSpaceImpl.$metadata$ = classMeta('SubGVectorSpaceImpl', [SubGVectorSpace]);
  function WholeSubGVectorSpace$inclusion$delegate$lambda$lambda(this$0) {
    return function (degree) {
      return this$0.b1k(degree).n1o();
    };
  }
  function WholeSubGVectorSpace$inclusion$delegate$lambda(this$0) {
    return function () {
      var tmp = Companion_getInstance_21();
      var tmp_0 = this$0.j20_1.m1m();
      return tmp.f1v(this$0, this$0.h20_1, tmp_0, this$0.g20_1, 'inclusion', WholeSubGVectorSpace$inclusion$delegate$lambda$lambda(this$0));
    };
  }
  function WholeSubGVectorSpace$retraction$delegate$lambda$lambda(this$0) {
    return function (degree) {
      return this$0.b1k(degree).e20();
    };
  }
  function WholeSubGVectorSpace$retraction$delegate$lambda(this$0) {
    return function () {
      var tmp = Companion_getInstance_21();
      var tmp_0 = this$0.j20_1.m1m();
      return tmp.f1v(this$0.h20_1, this$0, tmp_0, this$0.g20_1, 'inclusion', WholeSubGVectorSpace$retraction$delegate$lambda$lambda(this$0));
    };
  }
  function WholeSubGVectorSpace(matrixSpace, totalGVectorSpace) {
    this.g20_1 = matrixSpace;
    this.h20_1 = totalGVectorSpace;
    this.i20_1 = this.h20_1.x1j();
    this.j20_1 = this.h20_1.y1j();
    this.k20_1 = this.h20_1.zc();
    this.l20_1 = Companion_getInstance_78().e1z(this.h20_1.z1j());
    this.m20_1 = this.h20_1.a1k();
    this.n20_1 = this.h20_1.d1k();
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp$ret$0 = LinkedHashMap_init_$Create$();
    tmp.o20_1 = tmp$ret$0;
    this.p20_1 = Companion_getInstance_25().h1s(this);
    this.q20_1 = this;
    this.r20_1 = new ZeroGVector(this);
    var tmp_0 = this;
    tmp_0.s20_1 = lazy(WholeSubGVectorSpace$inclusion$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.t20_1 = lazy(WholeSubGVectorSpace$retraction$delegate$lambda(this));
  }
  WholeSubGVectorSpace.prototype.u1j = function () {
    return this.g20_1;
  };
  WholeSubGVectorSpace.prototype.m1o = function () {
    return this.h20_1;
  };
  WholeSubGVectorSpace.prototype.x1j = function () {
    return this.i20_1;
  };
  WholeSubGVectorSpace.prototype.y1j = function () {
    return this.j20_1;
  };
  WholeSubGVectorSpace.prototype.zc = function () {
    return this.k20_1;
  };
  WholeSubGVectorSpace.prototype.z1j = function () {
    return this.l20_1;
  };
  WholeSubGVectorSpace.prototype.a1k = function () {
    return this.m20_1;
  };
  WholeSubGVectorSpace.prototype.d1k = function () {
    return this.n20_1;
  };
  WholeSubGVectorSpace.prototype.c1j = function () {
    return this.p20_1;
  };
  WholeSubGVectorSpace.prototype.c1k = function () {
    return this.q20_1;
  };
  WholeSubGVectorSpace.prototype.u1k = function () {
    return this.r20_1;
  };
  WholeSubGVectorSpace.prototype.n1o = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = inclusion$factory_1();
    tmp$ret$0 = this.s20_1.f1();
    return tmp$ret$0;
  };
  WholeSubGVectorSpace.prototype.b1k = function (degree) {
    var tmp$ret$1;
    // Inline function 'kotlin.collections.getOrPut' call
    var tmp0_getOrPut = this.o20_1;
    var value = tmp0_getOrPut.t(degree);
    var tmp;
    if (value == null) {
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.WholeSubGVectorSpace.get.<anonymous>' call
      tmp$ret$0 = asSubVectorSpace(this.h20_1.b1k(degree), this.g20_1);
      var answer = tmp$ret$0;
      tmp0_getOrPut.u(degree, answer);
      tmp = answer;
    } else {
      tmp = value;
    }
    tmp$ret$1 = tmp;
    return tmp$ret$1;
  };
  WholeSubGVectorSpace.prototype.l = function (degree) {
    return this.b1k(this.j20_1.oh(degree));
  };
  WholeSubGVectorSpace.prototype.toString = function () {
    var tmp = PrintType_PLAIN_getInstance();
    return this.c1n(PrintConfig_init_$Create$(tmp, null, null, null, null, 30, null));
  };
  WholeSubGVectorSpace.prototype.c1n = function (printConfig) {
    var totalString = this.h20_1.c1n(printConfig);
    return 'WholeSubGVectorSpace(' + totalString + ')';
  };
  WholeSubGVectorSpace.$metadata$ = classMeta('WholeSubGVectorSpace', [SubGVectorSpace]);
  function inclusion$factory_0() {
    return getPropertyCallableRef('inclusion', 1, KProperty1, function (receiver) {
      return receiver.n1o();
    }, null);
  }
  function inclusion$factory_1() {
    return getPropertyCallableRef('inclusion', 1, KProperty1, function (receiver) {
      return receiver.n1o();
    }, null);
  }
  function Companion_31() {
    Companion_instance_31 = this;
  }
  Companion_31.prototype.b1n = function (matrixSpace, subQuotGVectorSpace, multiplication, unit, isCommutative) {
    return new SubQuotGAlgebraImpl(matrixSpace, subQuotGVectorSpace, multiplication, unit, isCommutative);
  };
  Companion_31.$metadata$ = objectMeta('Companion');
  var Companion_instance_31;
  function Companion_getInstance_32() {
    if (Companion_instance_31 == null)
      new Companion_31();
    return Companion_instance_31;
  }
  function SubQuotGAlgebra() {
  }
  SubQuotGAlgebra.$metadata$ = interfaceMeta('SubQuotGAlgebra', [GAlgebra, SubQuotGMagma]);
  function SubQuotGAlgebraImpl(matrixSpace, subQuotGVectorSpace, multiplication, unit, isCommutative) {
    this.u20_1 = matrixSpace;
    this.v20_1 = multiplication;
    this.w20_1 = unit;
    this.x20_1 = isCommutative;
    this.y20_1 = subQuotGVectorSpace;
    this.z20_1 = Companion_getInstance_16().f1t(this);
    this.a21_1 = this;
  }
  SubQuotGAlgebraImpl.prototype.u1j = function () {
    return this.u20_1;
  };
  SubQuotGAlgebraImpl.prototype.j1j = function () {
    return this.v20_1;
  };
  SubQuotGAlgebraImpl.prototype.v1k = function () {
    return this.w20_1;
  };
  SubQuotGAlgebraImpl.prototype.w1k = function () {
    return this.x20_1;
  };
  SubQuotGAlgebraImpl.prototype.d1k = function () {
    return this.y20_1.d1k();
  };
  SubQuotGAlgebraImpl.prototype.y1j = function () {
    return this.y20_1.y1j();
  };
  SubQuotGAlgebraImpl.prototype.e1k = function () {
    return this.y20_1.e1k();
  };
  SubQuotGAlgebraImpl.prototype.z1j = function () {
    return this.y20_1.z1j();
  };
  SubQuotGAlgebraImpl.prototype.a1k = function () {
    return this.y20_1.a1k();
  };
  SubQuotGAlgebraImpl.prototype.zc = function () {
    return this.y20_1.zc();
  };
  SubQuotGAlgebraImpl.prototype.x1j = function () {
    return this.y20_1.x1j();
  };
  SubQuotGAlgebraImpl.prototype.s1q = function () {
    return this.y20_1.s1q();
  };
  SubQuotGAlgebraImpl.prototype.c1k = function () {
    return this.y20_1.c1k();
  };
  SubQuotGAlgebraImpl.prototype.u1k = function () {
    return this.y20_1.u1k();
  };
  SubQuotGAlgebraImpl.prototype.u1r = function (a, b) {
    return this.y20_1.o1k(a, b);
  };
  SubQuotGAlgebraImpl.prototype.o1k = function (a, b) {
    return this.u1r(a, b);
  };
  SubQuotGAlgebraImpl.prototype.v1r = function (gVector) {
    return this.y20_1.m1k(gVector);
  };
  SubQuotGAlgebraImpl.prototype.m1k = function (gVector) {
    return this.v1r(gVector);
  };
  SubQuotGAlgebraImpl.prototype.w1r = function (gVector) {
    return this.y20_1.n1k(gVector);
  };
  SubQuotGAlgebraImpl.prototype.n1k = function (gVector) {
    return this.w1r(gVector);
  };
  SubQuotGAlgebraImpl.prototype.x1r = function (gVectorOrZero, degree) {
    return this.y20_1.l1k(gVectorOrZero, degree);
  };
  SubQuotGAlgebraImpl.prototype.l1k = function (gVectorOrZero, degree) {
    return this.x1r(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  SubQuotGAlgebraImpl.prototype.y1r = function (a, b) {
    return this.y20_1.t1k(a, b);
  };
  SubQuotGAlgebraImpl.prototype.t1k = function (a, b) {
    return this.y1r(a, b);
  };
  SubQuotGAlgebraImpl.prototype.z1r = function (basisName, degree) {
    return this.y20_1.h1k(basisName, degree);
  };
  SubQuotGAlgebraImpl.prototype.h1k = function (basisName, degree) {
    var tmp = basisName instanceof SubQuotBasis ? basisName : THROW_CCE();
    return this.z1r(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  SubQuotGAlgebraImpl.prototype.a1s = function (vector, degree) {
    return this.y20_1.f1k(vector, degree);
  };
  SubQuotGAlgebraImpl.prototype.f1k = function (vector, degree) {
    return this.a1s(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  SubQuotGAlgebraImpl.prototype.b1s = function (vector, degree) {
    return this.y20_1.g1k(vector, degree);
  };
  SubQuotGAlgebraImpl.prototype.g1k = function (vector, degree) {
    return this.b1s(vector, degree);
  };
  SubQuotGAlgebraImpl.prototype.b1k = function (degree) {
    return this.y20_1.b1k(degree);
  };
  SubQuotGAlgebraImpl.prototype.l = function (degree) {
    return this.y20_1.l(degree);
  };
  SubQuotGAlgebraImpl.prototype.i1k = function (degree) {
    return this.y20_1.i1k(degree);
  };
  SubQuotGAlgebraImpl.prototype.x1o = function (degree) {
    return this.y20_1.x1o(degree);
  };
  SubQuotGAlgebraImpl.prototype.c1s = function (augmentedDegree) {
    return this.y20_1.c1s(augmentedDegree);
  };
  SubQuotGAlgebraImpl.prototype.j1k = function (degree) {
    return this.y20_1.j1k(degree);
  };
  SubQuotGAlgebraImpl.prototype.k1k = function (degree) {
    return this.y20_1.k1k(degree);
  };
  SubQuotGAlgebraImpl.prototype.d1s = function (scalar, gVector) {
    return this.y20_1.q1k(scalar, gVector);
  };
  SubQuotGAlgebraImpl.prototype.q1k = function (scalar, gVector) {
    return this.d1s(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  SubQuotGAlgebraImpl.prototype.p1j = function (gVector) {
    return this.y20_1.p1j(gVector);
  };
  SubQuotGAlgebraImpl.prototype.e1s = function (a, b) {
    return this.y20_1.p1k(a, b);
  };
  SubQuotGAlgebraImpl.prototype.p1k = function (a, b) {
    return this.e1s(a, b);
  };
  SubQuotGAlgebraImpl.prototype.toString = function () {
    return this.y20_1.toString();
  };
  SubQuotGAlgebraImpl.prototype.c1n = function (printConfig) {
    return this.y20_1.c1n(printConfig);
  };
  SubQuotGAlgebraImpl.prototype.c1j = function () {
    return this.z20_1;
  };
  SubQuotGAlgebraImpl.$metadata$ = classMeta('SubQuotGAlgebraImpl', [SubQuotGAlgebra, SubQuotGVectorSpace]);
  function Companion_32() {
    Companion_instance_32 = this;
  }
  Companion_32.prototype.k1p = function (matrixSpace, subQuotGVectorSpace, multiplication) {
    return new SubQuotGLieAlgebraImpl(matrixSpace, subQuotGVectorSpace, multiplication);
  };
  Companion_32.$metadata$ = objectMeta('Companion');
  var Companion_instance_32;
  function Companion_getInstance_33() {
    if (Companion_instance_32 == null)
      new Companion_32();
    return Companion_instance_32;
  }
  function SubQuotGLieAlgebra() {
  }
  SubQuotGLieAlgebra.$metadata$ = interfaceMeta('SubQuotGLieAlgebra', [GLieAlgebra, SubQuotGMagma]);
  function SubQuotGLieAlgebraImpl(matrixSpace, subQuotGVectorSpace, multiplication) {
    this.b21_1 = matrixSpace;
    this.c21_1 = multiplication;
    this.d21_1 = subQuotGVectorSpace;
    this.e21_1 = Companion_getInstance_20().v1u(this);
    this.f21_1 = this;
  }
  SubQuotGLieAlgebraImpl.prototype.u1j = function () {
    return this.b21_1;
  };
  SubQuotGLieAlgebraImpl.prototype.j1j = function () {
    return this.c21_1;
  };
  SubQuotGLieAlgebraImpl.prototype.d1k = function () {
    return this.d21_1.d1k();
  };
  SubQuotGLieAlgebraImpl.prototype.y1j = function () {
    return this.d21_1.y1j();
  };
  SubQuotGLieAlgebraImpl.prototype.e1k = function () {
    return this.d21_1.e1k();
  };
  SubQuotGLieAlgebraImpl.prototype.z1j = function () {
    return this.d21_1.z1j();
  };
  SubQuotGLieAlgebraImpl.prototype.a1k = function () {
    return this.d21_1.a1k();
  };
  SubQuotGLieAlgebraImpl.prototype.zc = function () {
    return this.d21_1.zc();
  };
  SubQuotGLieAlgebraImpl.prototype.x1j = function () {
    return this.d21_1.x1j();
  };
  SubQuotGLieAlgebraImpl.prototype.s1q = function () {
    return this.d21_1.s1q();
  };
  SubQuotGLieAlgebraImpl.prototype.c1k = function () {
    return this.d21_1.c1k();
  };
  SubQuotGLieAlgebraImpl.prototype.u1k = function () {
    return this.d21_1.u1k();
  };
  SubQuotGLieAlgebraImpl.prototype.u1r = function (a, b) {
    return this.d21_1.o1k(a, b);
  };
  SubQuotGLieAlgebraImpl.prototype.o1k = function (a, b) {
    return this.u1r(a, b);
  };
  SubQuotGLieAlgebraImpl.prototype.v1r = function (gVector) {
    return this.d21_1.m1k(gVector);
  };
  SubQuotGLieAlgebraImpl.prototype.m1k = function (gVector) {
    return this.v1r(gVector);
  };
  SubQuotGLieAlgebraImpl.prototype.w1r = function (gVector) {
    return this.d21_1.n1k(gVector);
  };
  SubQuotGLieAlgebraImpl.prototype.n1k = function (gVector) {
    return this.w1r(gVector);
  };
  SubQuotGLieAlgebraImpl.prototype.x1r = function (gVectorOrZero, degree) {
    return this.d21_1.l1k(gVectorOrZero, degree);
  };
  SubQuotGLieAlgebraImpl.prototype.l1k = function (gVectorOrZero, degree) {
    return this.x1r(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  SubQuotGLieAlgebraImpl.prototype.y1r = function (a, b) {
    return this.d21_1.t1k(a, b);
  };
  SubQuotGLieAlgebraImpl.prototype.t1k = function (a, b) {
    return this.y1r(a, b);
  };
  SubQuotGLieAlgebraImpl.prototype.z1r = function (basisName, degree) {
    return this.d21_1.h1k(basisName, degree);
  };
  SubQuotGLieAlgebraImpl.prototype.h1k = function (basisName, degree) {
    var tmp = basisName instanceof SubQuotBasis ? basisName : THROW_CCE();
    return this.z1r(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  SubQuotGLieAlgebraImpl.prototype.a1s = function (vector, degree) {
    return this.d21_1.f1k(vector, degree);
  };
  SubQuotGLieAlgebraImpl.prototype.f1k = function (vector, degree) {
    return this.a1s(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  SubQuotGLieAlgebraImpl.prototype.b1s = function (vector, degree) {
    return this.d21_1.g1k(vector, degree);
  };
  SubQuotGLieAlgebraImpl.prototype.g1k = function (vector, degree) {
    return this.b1s(vector, degree);
  };
  SubQuotGLieAlgebraImpl.prototype.b1k = function (degree) {
    return this.d21_1.b1k(degree);
  };
  SubQuotGLieAlgebraImpl.prototype.l = function (degree) {
    return this.d21_1.l(degree);
  };
  SubQuotGLieAlgebraImpl.prototype.i1k = function (degree) {
    return this.d21_1.i1k(degree);
  };
  SubQuotGLieAlgebraImpl.prototype.x1o = function (degree) {
    return this.d21_1.x1o(degree);
  };
  SubQuotGLieAlgebraImpl.prototype.c1s = function (augmentedDegree) {
    return this.d21_1.c1s(augmentedDegree);
  };
  SubQuotGLieAlgebraImpl.prototype.j1k = function (degree) {
    return this.d21_1.j1k(degree);
  };
  SubQuotGLieAlgebraImpl.prototype.k1k = function (degree) {
    return this.d21_1.k1k(degree);
  };
  SubQuotGLieAlgebraImpl.prototype.d1s = function (scalar, gVector) {
    return this.d21_1.q1k(scalar, gVector);
  };
  SubQuotGLieAlgebraImpl.prototype.q1k = function (scalar, gVector) {
    return this.d1s(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  SubQuotGLieAlgebraImpl.prototype.p1j = function (gVector) {
    return this.d21_1.p1j(gVector);
  };
  SubQuotGLieAlgebraImpl.prototype.e1s = function (a, b) {
    return this.d21_1.p1k(a, b);
  };
  SubQuotGLieAlgebraImpl.prototype.p1k = function (a, b) {
    return this.e1s(a, b);
  };
  SubQuotGLieAlgebraImpl.prototype.toString = function () {
    return this.d21_1.toString();
  };
  SubQuotGLieAlgebraImpl.prototype.c1n = function (printConfig) {
    return this.d21_1.c1n(printConfig);
  };
  SubQuotGLieAlgebraImpl.prototype.c1j = function () {
    return this.e21_1;
  };
  SubQuotGLieAlgebraImpl.$metadata$ = classMeta('SubQuotGLieAlgebraImpl', [SubQuotGLieAlgebra, SubQuotGVectorSpace]);
  function Companion_33() {
    Companion_instance_33 = this;
  }
  Companion_33.prototype.k1p = function (matrixSpace, subQuotGVectorSpace, multiplication) {
    return new SubQuotGMagmaImpl(matrixSpace, subQuotGVectorSpace, multiplication);
  };
  Companion_33.$metadata$ = objectMeta('Companion');
  var Companion_instance_33;
  function Companion_getInstance_34() {
    if (Companion_instance_33 == null)
      new Companion_33();
    return Companion_instance_33;
  }
  function SubQuotGMagma() {
  }
  SubQuotGMagma.$metadata$ = interfaceMeta('SubQuotGMagma', [GMagma, SubQuotGVectorSpace]);
  function SubQuotGMagmaImpl(matrixSpace, subQuotGVectorSpace, multiplication) {
    this.g21_1 = matrixSpace;
    this.h21_1 = multiplication;
    this.i21_1 = subQuotGVectorSpace;
    this.j21_1 = Companion_getInstance_23().v1t(this);
  }
  SubQuotGMagmaImpl.prototype.j1j = function () {
    return this.h21_1;
  };
  SubQuotGMagmaImpl.prototype.d1k = function () {
    return this.i21_1.d1k();
  };
  SubQuotGMagmaImpl.prototype.y1j = function () {
    return this.i21_1.y1j();
  };
  SubQuotGMagmaImpl.prototype.e1k = function () {
    return this.i21_1.e1k();
  };
  SubQuotGMagmaImpl.prototype.z1j = function () {
    return this.i21_1.z1j();
  };
  SubQuotGMagmaImpl.prototype.a1k = function () {
    return this.i21_1.a1k();
  };
  SubQuotGMagmaImpl.prototype.zc = function () {
    return this.i21_1.zc();
  };
  SubQuotGMagmaImpl.prototype.x1j = function () {
    return this.i21_1.x1j();
  };
  SubQuotGMagmaImpl.prototype.s1q = function () {
    return this.i21_1.s1q();
  };
  SubQuotGMagmaImpl.prototype.c1k = function () {
    return this.i21_1.c1k();
  };
  SubQuotGMagmaImpl.prototype.u1k = function () {
    return this.i21_1.u1k();
  };
  SubQuotGMagmaImpl.prototype.u1r = function (a, b) {
    return this.i21_1.o1k(a, b);
  };
  SubQuotGMagmaImpl.prototype.o1k = function (a, b) {
    return this.u1r(a, b);
  };
  SubQuotGMagmaImpl.prototype.v1r = function (gVector) {
    return this.i21_1.m1k(gVector);
  };
  SubQuotGMagmaImpl.prototype.m1k = function (gVector) {
    return this.v1r(gVector);
  };
  SubQuotGMagmaImpl.prototype.w1r = function (gVector) {
    return this.i21_1.n1k(gVector);
  };
  SubQuotGMagmaImpl.prototype.n1k = function (gVector) {
    return this.w1r(gVector);
  };
  SubQuotGMagmaImpl.prototype.x1r = function (gVectorOrZero, degree) {
    return this.i21_1.l1k(gVectorOrZero, degree);
  };
  SubQuotGMagmaImpl.prototype.l1k = function (gVectorOrZero, degree) {
    return this.x1r(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  SubQuotGMagmaImpl.prototype.y1r = function (a, b) {
    return this.i21_1.t1k(a, b);
  };
  SubQuotGMagmaImpl.prototype.t1k = function (a, b) {
    return this.y1r(a, b);
  };
  SubQuotGMagmaImpl.prototype.z1r = function (basisName, degree) {
    return this.i21_1.h1k(basisName, degree);
  };
  SubQuotGMagmaImpl.prototype.h1k = function (basisName, degree) {
    var tmp = basisName instanceof SubQuotBasis ? basisName : THROW_CCE();
    return this.z1r(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  SubQuotGMagmaImpl.prototype.a1s = function (vector, degree) {
    return this.i21_1.f1k(vector, degree);
  };
  SubQuotGMagmaImpl.prototype.f1k = function (vector, degree) {
    return this.a1s(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  SubQuotGMagmaImpl.prototype.b1s = function (vector, degree) {
    return this.i21_1.g1k(vector, degree);
  };
  SubQuotGMagmaImpl.prototype.g1k = function (vector, degree) {
    return this.b1s(vector, degree);
  };
  SubQuotGMagmaImpl.prototype.b1k = function (degree) {
    return this.i21_1.b1k(degree);
  };
  SubQuotGMagmaImpl.prototype.l = function (degree) {
    return this.i21_1.l(degree);
  };
  SubQuotGMagmaImpl.prototype.i1k = function (degree) {
    return this.i21_1.i1k(degree);
  };
  SubQuotGMagmaImpl.prototype.x1o = function (degree) {
    return this.i21_1.x1o(degree);
  };
  SubQuotGMagmaImpl.prototype.c1s = function (augmentedDegree) {
    return this.i21_1.c1s(augmentedDegree);
  };
  SubQuotGMagmaImpl.prototype.j1k = function (degree) {
    return this.i21_1.j1k(degree);
  };
  SubQuotGMagmaImpl.prototype.k1k = function (degree) {
    return this.i21_1.k1k(degree);
  };
  SubQuotGMagmaImpl.prototype.d1s = function (scalar, gVector) {
    return this.i21_1.q1k(scalar, gVector);
  };
  SubQuotGMagmaImpl.prototype.q1k = function (scalar, gVector) {
    return this.d1s(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  SubQuotGMagmaImpl.prototype.p1j = function (gVector) {
    return this.i21_1.p1j(gVector);
  };
  SubQuotGMagmaImpl.prototype.e1s = function (a, b) {
    return this.i21_1.p1k(a, b);
  };
  SubQuotGMagmaImpl.prototype.p1k = function (a, b) {
    return this.e1s(a, b);
  };
  SubQuotGMagmaImpl.prototype.toString = function () {
    return this.i21_1.toString();
  };
  SubQuotGMagmaImpl.prototype.c1n = function (printConfig) {
    return this.i21_1.c1n(printConfig);
  };
  SubQuotGMagmaImpl.prototype.c1j = function () {
    return this.j21_1;
  };
  SubQuotGMagmaImpl.$metadata$ = classMeta('SubQuotGMagmaImpl', [SubQuotGMagma, SubQuotGVectorSpace]);
  function Companion_34() {
    Companion_instance_34 = this;
  }
  Companion_34.prototype.k21 = function (matrixSpace, totalGVectorSpace, subspaceGenerator, quotientGenerator, boundedness, name) {
    return new SubQuotGVectorSpaceImpl(matrixSpace, totalGVectorSpace, subspaceGenerator, quotientGenerator, name, boundedness);
  };
  Companion_34.prototype.t1r = function (matrixSpace, totalGVectorSpace, subspaceGenerator, quotientGenerator, boundedness, name, $mask0, $handler) {
    if (!(($mask0 & 16) === 0))
      boundedness = totalGVectorSpace.d1k();
    if (!(($mask0 & 32) === 0))
      name = subspaceGenerator.zc() + '/' + quotientGenerator.zc();
    return this.k21(matrixSpace, totalGVectorSpace, subspaceGenerator, quotientGenerator, boundedness, name);
  };
  Companion_34.$metadata$ = objectMeta('Companion');
  var Companion_instance_34;
  function Companion_getInstance_35() {
    if (Companion_instance_34 == null)
      new Companion_34();
    return Companion_instance_34;
  }
  function SubQuotGVectorSpace() {
  }
  SubQuotGVectorSpace.$metadata$ = interfaceMeta('SubQuotGVectorSpace', [GVectorSpace]);
  function SubQuotGVectorSpaceImpl$projection$delegate$lambda$lambda(this$0) {
    return function (degree) {
      return this$0.b1k(degree).s1q();
    };
  }
  function SubQuotGVectorSpaceImpl$projection$delegate$lambda(this$0) {
    return function () {
      var tmp = Companion_getInstance_21();
      var tmp_0 = this$0.s21_1.m1m();
      return tmp.f1v(this$0.m21_1, this$0, tmp_0, this$0.l21_1, 'projection', SubQuotGVectorSpaceImpl$projection$delegate$lambda$lambda(this$0));
    };
  }
  function SubQuotGVectorSpaceImpl$section$delegate$lambda$lambda(this$0) {
    return function (degree) {
      return this$0.b1k(degree).f1r();
    };
  }
  function SubQuotGVectorSpaceImpl$section$delegate$lambda(this$0) {
    return function () {
      var tmp = Companion_getInstance_21();
      var tmp_0 = this$0.s21_1.m1m();
      return tmp.f1v(this$0, this$0.m21_1, tmp_0, this$0.l21_1, 'section', SubQuotGVectorSpaceImpl$section$delegate$lambda$lambda(this$0));
    };
  }
  function SubQuotGVectorSpaceImpl(matrixSpace, totalGVectorSpace, subspaceGenerator, quotientGenerator, name, boundedness) {
    this.l21_1 = matrixSpace;
    this.m21_1 = totalGVectorSpace;
    this.n21_1 = subspaceGenerator;
    this.o21_1 = quotientGenerator;
    this.p21_1 = name;
    this.q21_1 = boundedness;
    this.r21_1 = this.m21_1.x1j();
    this.s21_1 = this.m21_1.y1j();
    this.t21_1 = Companion_getInstance_75().e1z(this.m21_1.z1j());
    this.u21_1 = this.m21_1.a1k();
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp$ret$0 = LinkedHashMap_init_$Create$();
    tmp.v21_1 = tmp$ret$0;
    this.w21_1 = Companion_getInstance_25().h1s(this);
    this.x21_1 = this;
    this.y21_1 = new ZeroGVector(this);
    var tmp_0 = this;
    tmp_0.z21_1 = lazy(SubQuotGVectorSpaceImpl$projection$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.a22_1 = lazy(SubQuotGVectorSpaceImpl$section$delegate$lambda(this));
  }
  SubQuotGVectorSpaceImpl.prototype.u1j = function () {
    return this.l21_1;
  };
  SubQuotGVectorSpaceImpl.prototype.m1o = function () {
    return this.m21_1;
  };
  SubQuotGVectorSpaceImpl.prototype.zc = function () {
    return this.p21_1;
  };
  SubQuotGVectorSpaceImpl.prototype.d1k = function () {
    return this.q21_1;
  };
  SubQuotGVectorSpaceImpl.prototype.x1j = function () {
    return this.r21_1;
  };
  SubQuotGVectorSpaceImpl.prototype.y1j = function () {
    return this.s21_1;
  };
  SubQuotGVectorSpaceImpl.prototype.z1j = function () {
    return this.t21_1;
  };
  SubQuotGVectorSpaceImpl.prototype.a1k = function () {
    return this.u21_1;
  };
  SubQuotGVectorSpaceImpl.prototype.c1j = function () {
    return this.w21_1;
  };
  SubQuotGVectorSpaceImpl.prototype.c1k = function () {
    return this.x21_1;
  };
  SubQuotGVectorSpaceImpl.prototype.u1k = function () {
    return this.y21_1;
  };
  SubQuotGVectorSpaceImpl.prototype.s1q = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = projection$factory_1();
    tmp$ret$0 = this.z21_1.f1();
    return tmp$ret$0;
  };
  SubQuotGVectorSpaceImpl.prototype.b1k = function (degree) {
    var tmp$ret$1;
    // Inline function 'kotlin.collections.getOrPut' call
    var tmp0_getOrPut = this.v21_1;
    var value = tmp0_getOrPut.t(degree);
    var tmp;
    if (value == null) {
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.SubQuotGVectorSpaceImpl.get.<anonymous>' call
      tmp$ret$0 = Companion_getInstance_76().b22(this.l21_1, this.m21_1.b1k(degree), this.n21_1.b1k(degree), this.o21_1.b1k(degree));
      var answer = tmp$ret$0;
      tmp0_getOrPut.u(degree, answer);
      tmp = answer;
    } else {
      tmp = value;
    }
    tmp$ret$1 = tmp;
    return tmp$ret$1;
  };
  SubQuotGVectorSpaceImpl.prototype.l = function (degree) {
    return this.b1k(this.s21_1.oh(degree));
  };
  SubQuotGVectorSpaceImpl.prototype.toString = function () {
    var tmp = PrintType_PLAIN_getInstance();
    return this.c1n(PrintConfig_init_$Create$(tmp, null, null, null, null, 30, null));
  };
  SubQuotGVectorSpaceImpl.prototype.c1n = function (printConfig) {
    var sub = this.n21_1.c1n(printConfig);
    var quot = this.o21_1.c1n(printConfig);
    return sub + '/' + quot;
  };
  SubQuotGVectorSpaceImpl.$metadata$ = classMeta('SubQuotGVectorSpaceImpl', [SubQuotGVectorSpace]);
  function projection$factory_1() {
    return getPropertyCallableRef('projection', 1, KProperty1, function (receiver) {
      return receiver.s1q();
    }, null);
  }
  function Degree() {
  }
  Degree.$metadata$ = interfaceMeta('Degree');
  function DegreeGroup() {
  }
  DegreeGroup.$metadata$ = interfaceMeta('DegreeGroup');
  function AugmentedDegreeGroup() {
  }
  AugmentedDegreeGroup.$metadata$ = interfaceMeta('AugmentedDegreeGroup', [DegreeGroup, AugmentedDegreeGroupOperations]);
  function AugmentedDegreeContext(group) {
    DegreeContext.call(this, group);
    this.m22_1 = group;
  }
  AugmentedDegreeContext.prototype.a1j = function (degree) {
    return this.m22_1.a1j(degree);
  };
  AugmentedDegreeContext.prototype.n22 = function (_this__u8e3s4) {
    return this.a1j(_this__u8e3s4);
  };
  AugmentedDegreeContext.$metadata$ = classMeta('AugmentedDegreeContext', [AugmentedDegreeGroupOperations], undefined, undefined, undefined, DegreeContext.prototype);
  function AugmentedDegreeMorphism() {
  }
  AugmentedDegreeMorphism.$metadata$ = interfaceMeta('AugmentedDegreeMorphism', [DegreeMorphism]);
  function AugmentationDegreeMorphism(source) {
    this.u22_1 = source;
    this.v22_1 = IntDegreeGroup_getInstance();
  }
  AugmentationDegreeMorphism.prototype.p1n = function () {
    return this.v22_1;
  };
  AugmentationDegreeMorphism.prototype.w22 = function (degree) {
    return new IntDegree(this.u22_1.a1j(degree));
  };
  AugmentationDegreeMorphism.prototype.r1v = function (degree) {
    return this.w22(isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  AugmentationDegreeMorphism.$metadata$ = classMeta('AugmentationDegreeMorphism', [AugmentedDegreeMorphism]);
  function DegreeMorphism() {
  }
  DegreeMorphism.$metadata$ = interfaceMeta('DegreeMorphism');
  function DegreeContext(group) {
    this.d1j_1 = group;
  }
  DegreeContext.prototype.c1j = function () {
    return this.d1j_1.c1j();
  };
  DegreeContext.prototype.m1m = function () {
    return this.d1j_1.m1m();
  };
  DegreeContext.prototype.i22 = function (degree1, degree2) {
    return this.d1j_1.i22(degree1, degree2);
  };
  DegreeContext.prototype.oh = function (n) {
    return this.d1j_1.oh(n);
  };
  DegreeContext.prototype.k22 = function (degree, n) {
    return this.d1j_1.k22(degree, n);
  };
  DegreeContext.prototype.j22 = function (degree1, degree2) {
    return this.d1j_1.j22(degree1, degree2);
  };
  DegreeContext.prototype.o22 = function (_this__u8e3s4) {
    return this.oh(_this__u8e3s4);
  };
  DegreeContext.prototype.e1j = function (_this__u8e3s4, other) {
    return this.i22(_this__u8e3s4, other);
  };
  DegreeContext.prototype.p22 = function (_this__u8e3s4, other) {
    return this.i22(_this__u8e3s4, this.o22(other));
  };
  DegreeContext.prototype.f1u = function (_this__u8e3s4, other) {
    return this.j22(_this__u8e3s4, other);
  };
  DegreeContext.prototype.q22 = function (_this__u8e3s4, n) {
    return this.k22(_this__u8e3s4, n);
  };
  DegreeContext.prototype.r22 = function (_this__u8e3s4, degree) {
    return this.k22(degree, _this__u8e3s4);
  };
  DegreeContext.prototype.s22 = function (_this__u8e3s4) {
    return this.k22(_this__u8e3s4, -1);
  };
  DegreeContext.prototype.t22 = function (_this__u8e3s4) {
    var tmp$ret$1;
    // Inline function 'kotlin.collections.fold' call
    var tmp0_fold = this.m1m();
    var accumulator = tmp0_fold;
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.degree.DegreeContext.sum.<anonymous>' call
      var tmp1__anonymous__uwfjfc = accumulator;
      tmp$ret$0 = this.e1j(tmp1__anonymous__uwfjfc, element);
      accumulator = tmp$ret$0;
    }
    tmp$ret$1 = accumulator;
    return tmp$ret$1;
  };
  DegreeContext.$metadata$ = classMeta('DegreeContext', [DegreeGroup]);
  function AugmentedDegreeGroupOperations() {
  }
  AugmentedDegreeGroupOperations.$metadata$ = interfaceMeta('AugmentedDegreeGroupOperations');
  function IntDegree(value) {
    this.x22_1 = value;
  }
  IntDegree.prototype.c22 = function () {
    return Companion_getInstance_67().oh(this.x22_1);
  };
  IntDegree.prototype.e22 = function () {
    return (this.x22_1 % 2 | 0) === 0;
  };
  IntDegree.prototype.dj = function () {
    return this.x22_1 === 0;
  };
  IntDegree.prototype.d22 = function () {
    return this.x22_1 === 1;
  };
  IntDegree.prototype.toString = function () {
    return this.x22_1.toString();
  };
  IntDegree.prototype.hashCode = function () {
    return this.x22_1;
  };
  IntDegree.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof IntDegree))
      return false;
    var tmp0_other_with_cast = other instanceof IntDegree ? other : THROW_CCE();
    if (!(this.x22_1 === tmp0_other_with_cast.x22_1))
      return false;
    return true;
  };
  IntDegree.$metadata$ = classMeta('IntDegree', [Degree]);
  function IntDegreeGroup$context$delegate$lambda(this$0) {
    return function () {
      return new AugmentedDegreeContext(this$0);
    };
  }
  function IntDegreeGroup() {
    IntDegreeGroup_instance = this;
    var tmp = this;
    tmp.z22_1 = lazy(IntDegreeGroup$context$delegate$lambda(this));
  }
  IntDegreeGroup.prototype.c1j = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = context$factory();
    tmp$ret$0 = this.z22_1.f1();
    return tmp$ret$0;
  };
  IntDegreeGroup.prototype.oh = function (n) {
    return new IntDegree(n);
  };
  IntDegreeGroup.prototype.a23 = function (degree) {
    return degree.x22_1;
  };
  IntDegreeGroup.prototype.a1j = function (degree) {
    return this.a23(degree instanceof IntDegree ? degree : THROW_CCE());
  };
  IntDegreeGroup.prototype.b23 = function (degree1, degree2) {
    return new IntDegree(degree1.x22_1 + degree2.x22_1 | 0);
  };
  IntDegreeGroup.prototype.i22 = function (degree1, degree2) {
    var tmp = degree1 instanceof IntDegree ? degree1 : THROW_CCE();
    return this.b23(tmp, degree2 instanceof IntDegree ? degree2 : THROW_CCE());
  };
  IntDegreeGroup.prototype.c23 = function (degree1, degree2) {
    return new IntDegree(degree1.x22_1 - degree2.x22_1 | 0);
  };
  IntDegreeGroup.prototype.j22 = function (degree1, degree2) {
    var tmp = degree1 instanceof IntDegree ? degree1 : THROW_CCE();
    return this.c23(tmp, degree2 instanceof IntDegree ? degree2 : THROW_CCE());
  };
  IntDegreeGroup.prototype.d23 = function (degree, n) {
    return new IntDegree(imul(degree.x22_1, n));
  };
  IntDegreeGroup.prototype.k22 = function (degree, n) {
    return this.d23(degree instanceof IntDegree ? degree : THROW_CCE(), n);
  };
  IntDegreeGroup.prototype.b1j = function (augmentedDegree) {
    return listOf(new IntDegree(augmentedDegree));
  };
  IntDegreeGroup.$metadata$ = objectMeta('IntDegreeGroup', [AugmentedDegreeGroup]);
  var IntDegreeGroup_instance;
  function IntDegreeGroup_getInstance() {
    if (IntDegreeGroup_instance == null)
      new IntDegreeGroup();
    return IntDegreeGroup_instance;
  }
  function context$factory() {
    return getPropertyCallableRef('context', 1, KProperty1, function (receiver) {
      return receiver.c1j();
    }, null);
  }
  function MultiDegree$isEven$lambda(this$0) {
    return function (it) {
      return this$0.i23_1.e23_1.l(it).toString();
    };
  }
  function MultiDegree(group, constantTerm, coeffList) {
    this.i23_1 = group;
    this.j23_1 = constantTerm;
    this.k23_1 = coeffList;
  }
  MultiDegree.prototype.l23 = function () {
    return this.i23_1;
  };
  MultiDegree.prototype.m23 = function () {
    return this.j23_1;
  };
  MultiDegree.prototype.n23 = function () {
    return this.k23_1;
  };
  MultiDegree.prototype.c22 = function () {
    return Companion_getInstance_67().o23(plus(listOf(this.j23_1), toList_0(this.k23_1)));
  };
  MultiDegree.prototype.e22 = function () {
    var tmp$ret$4;
    // Inline function 'kotlin.let' call
    var tmp$ret$2;
    // Inline function 'kotlin.collections.filter' call
    var tmp0_filter = get_indices(this.k23_1);
    var tmp$ret$1;
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo = ArrayList_init_$Create$_0();
    var inductionVariable = tmp0_filter.m1_1;
    var last = tmp0_filter.n1_1;
    if (inductionVariable <= last)
      do {
        var element = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegree.isEven.<anonymous>' call
        tmp$ret$0 = isOdd_0(this.k23_1[element]);
        if (tmp$ret$0) {
          tmp0_filterTo.a(element);
        }
      }
       while (!(element === last));
    tmp$ret$1 = tmp0_filterTo;
    tmp$ret$2 = tmp$ret$1;
    var tmp1_let = tmp$ret$2;
    // Inline function 'kotlin.contracts.contract' call
    var tmp;
    var tmp$ret$3;
    // Inline function 'kotlin.collections.isNotEmpty' call
    tmp$ret$3 = !tmp1_let.p();
    if (tmp$ret$3) {
      var oddIndeterminateString = joinToString$default(tmp1_let, ', ', null, null, 0, null, MultiDegree$isEven$lambda(this), 30, null);
      throw ArithmeticException_init_$Create$('Cannot determine the parity of ' + this + ', since the coefficients of ' + oddIndeterminateString + ' are odd');
    }
    tmp$ret$4 = tmp;
    return isEven(this.j23_1);
  };
  MultiDegree.prototype.dj = function () {
    var tmp;
    if (this.j23_1 === 0) {
      var tmp$ret$1;
      $l$block: {
        // Inline function 'kotlin.collections.all' call
        var tmp0_all = this.k23_1;
        var indexedObject = tmp0_all;
        var inductionVariable = 0;
        var last = indexedObject.length;
        while (inductionVariable < last) {
          var element = indexedObject[inductionVariable];
          inductionVariable = inductionVariable + 1 | 0;
          var tmp$ret$0;
          // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegree.isZero.<anonymous>' call
          tmp$ret$0 = element === 0;
          if (!tmp$ret$0) {
            tmp$ret$1 = false;
            break $l$block;
          }
        }
        tmp$ret$1 = true;
      }
      tmp = tmp$ret$1;
    } else {
      tmp = false;
    }
    return tmp;
  };
  MultiDegree.prototype.d22 = function () {
    var tmp;
    if (this.j23_1 === 1) {
      var tmp$ret$1;
      $l$block: {
        // Inline function 'kotlin.collections.all' call
        var tmp0_all = this.k23_1;
        var indexedObject = tmp0_all;
        var inductionVariable = 0;
        var last = indexedObject.length;
        while (inductionVariable < last) {
          var element = indexedObject[inductionVariable];
          inductionVariable = inductionVariable + 1 | 0;
          var tmp$ret$0;
          // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegree.isOne.<anonymous>' call
          tmp$ret$0 = element === 0;
          if (!tmp$ret$0) {
            tmp$ret$1 = false;
            break $l$block;
          }
        }
        tmp$ret$1 = true;
      }
      tmp = tmp$ret$1;
    } else {
      tmp = false;
    }
    return tmp;
  };
  MultiDegree.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof MultiDegree)
      other;
    else
      THROW_CCE();
    if (!this.i23_1.equals(other.i23_1))
      return false;
    if (!(this.j23_1 === other.j23_1))
      return false;
    if (!contentEquals(this.k23_1, other.k23_1))
      return false;
    return true;
  };
  MultiDegree.prototype.hashCode = function () {
    var result = this.i23_1.hashCode();
    result = imul(31, result) + this.j23_1 | 0;
    result = imul(31, result) + contentHashCode(this.k23_1) | 0;
    return result;
  };
  MultiDegree.prototype.toString = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.isEmpty' call
    var tmp0_isEmpty = this.k23_1;
    tmp$ret$0 = tmp0_isEmpty.length === 0;
    if (tmp$ret$0) {
      return this.j23_1.toString();
    }
    var tmp;
    if (!(this.j23_1 === 0)) {
      tmp = listOf('' + this.j23_1);
    } else {
      tmp = emptyList();
    }
    var stringListForConstantTerm = tmp;
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapNotNull' call
    var tmp1_mapNotNull = get_indices(this.k23_1);
    var tmp$ret$3;
    // Inline function 'kotlin.collections.mapNotNullTo' call
    var tmp0_mapNotNullTo = ArrayList_init_$Create$_0();
    // Inline function 'kotlin.collections.forEach' call
    var inductionVariable = tmp1_mapNotNull.m1_1;
    var last = tmp1_mapNotNull.n1_1;
    if (inductionVariable <= last)
      do {
        var element = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.collections.mapNotNullTo.<anonymous>' call
        var tmp$ret$1;
        // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegree.toString.<anonymous>' call
        var coeff = this.k23_1[element];
        switch (coeff) {
          case 0:
            tmp$ret$1 = null;
            break;
          case 1:
            tmp$ret$1 = this.i23_1.e23_1.l(element).p23_1;
            break;
          default:
            tmp$ret$1 = '' + coeff + this.i23_1.e23_1.l(element).p23_1;
            break;
        }
        var tmp0_safe_receiver = tmp$ret$1;
        if (tmp0_safe_receiver == null)
          null;
        else {
          var tmp$ret$2;
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          tmp0_mapNotNullTo.a(tmp0_safe_receiver);
          tmp$ret$2 = Unit_getInstance();
        }
      }
       while (!(element === last));
    tmp$ret$3 = tmp0_mapNotNullTo;
    tmp$ret$4 = tmp$ret$3;
    var stringListForCoeff = tmp$ret$4;
    var stringList = plus(stringListForConstantTerm, stringListForCoeff);
    var tmp_0;
    if (stringList.p()) {
      tmp_0 = '0';
    } else {
      tmp_0 = joinToString$default(stringList, ' + ', null, null, 0, null, null, 62, null);
    }
    return tmp_0;
  };
  MultiDegree.$metadata$ = classMeta('MultiDegree', [Degree]);
  function oneAtIndex($this, index) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.List' call
    var tmp0_List = $this.g23_1;
    var tmp$ret$1;
    // Inline function 'kotlin.collections.MutableList' call
    var list = ArrayList_init_$Create$(tmp0_List);
    // Inline function 'kotlin.repeat' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    if (inductionVariable < tmp0_List)
      do {
        var index_0 = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.collections.MutableList.<anonymous>' call
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegreeGroup.oneAtIndex.<anonymous>' call
        tmp$ret$0 = index_0 === index ? 1 : 0;
        list.a(tmp$ret$0);
      }
       while (inductionVariable < tmp0_List);
    tmp$ret$1 = list;
    tmp$ret$2 = tmp$ret$1;
    return $this.r23(tmp$ret$2);
  }
  function listAllDegreesInternal($this, augmentedDegree, index) {
    if (index < 0 ? true : index > $this.g23_1)
      throw Exception_init_$Create$("This can't happen! (illegal index: " + index + ')');
    if (index === $this.g23_1) {
      return augmentedDegree === 0 ? listOf($this.m1m()) : emptyList();
    }
    var cacheKey = new Pair(augmentedDegree, index);
    var tmp$ret$6;
    // Inline function 'kotlin.collections.getOrPut' call
    var tmp0_getOrPut = $this.h23_1;
    var value = tmp0_getOrPut.t(cacheKey);
    var tmp;
    if (value == null) {
      var tmp$ret$5;
      // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegreeGroup.listAllDegreesInternal.<anonymous>' call
      var newAugmentedDegree = augmentedDegree - $this.s23(oneAtIndex($this, index)) | 0;
      var tmp_0;
      if (newAugmentedDegree >= 0) {
        var tmp$ret$4;
        // Inline function 'kotlin.collections.map' call
        var tmp0_map = listAllDegreesInternal($this, newAugmentedDegree, index);
        var tmp$ret$3;
        // Inline function 'kotlin.collections.mapTo' call
        var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
        var tmp0_iterator = tmp0_map.f();
        while (tmp0_iterator.g()) {
          var item = tmp0_iterator.h();
          var tmp$ret$2;
          // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegreeGroup.listAllDegreesInternal.<anonymous>.<anonymous>' call
          var tmp$ret$1;
          // Inline function 'kotlin.run' call
          var tmp0_run = $this.c1j();
          // Inline function 'kotlin.contracts.contract' call
          var tmp$ret$0;
          // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegreeGroup.listAllDegreesInternal.<anonymous>.<anonymous>.<anonymous>' call
          tmp$ret$0 = tmp0_run.e1j(item, oneAtIndex($this, index));
          tmp$ret$1 = tmp$ret$0;
          tmp$ret$2 = tmp$ret$1;
          tmp0_mapTo.a(tmp$ret$2);
        }
        tmp$ret$3 = tmp0_mapTo;
        tmp$ret$4 = tmp$ret$3;
        tmp_0 = tmp$ret$4;
      } else {
        tmp_0 = emptyList();
      }
      var listWithNonZeroAtIndex = tmp_0;
      var listWithZeroAtIndex = listAllDegreesInternal($this, augmentedDegree, index + 1 | 0);
      tmp$ret$5 = plus(listWithNonZeroAtIndex, listWithZeroAtIndex);
      var answer = tmp$ret$5;
      tmp0_getOrPut.u(cacheKey, answer);
      tmp = answer;
    } else {
      tmp = value;
    }
    tmp$ret$6 = tmp;
    return tmp$ret$6;
  }
  function MultiDegreeGroup$context$delegate$lambda(this$0) {
    return function () {
      return new AugmentedDegreeContext(this$0);
    };
  }
  function MultiDegreeGroup(indeterminateList) {
    this.e23_1 = indeterminateList;
    var tmp = this;
    tmp.f23_1 = lazy(MultiDegreeGroup$context$delegate$lambda(this));
    this.g23_1 = this.e23_1.i() + 1 | 0;
    var tmp_0 = this;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp$ret$0 = LinkedHashMap_init_$Create$();
    tmp_0.h23_1 = tmp$ret$0;
  }
  MultiDegreeGroup.prototype.t23 = function () {
    return this.e23_1;
  };
  MultiDegreeGroup.prototype.c1j = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = context$factory_0();
    tmp$ret$0 = this.f23_1.f1();
    return tmp$ret$0;
  };
  MultiDegreeGroup.prototype.i1o = function () {
    var tmp$ret$5;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = get_indices_0(this.e23_1);
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.m1_1;
    var last = tmp0_map.n1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$3;
        // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegreeGroup.<get-generatorList>.<anonymous>' call
        var tmp$ret$2;
        // Inline function 'kotlin.collections.List' call
        var tmp0_List = this.e23_1.i();
        var tmp$ret$1;
        // Inline function 'kotlin.collections.MutableList' call
        var list = ArrayList_init_$Create$(tmp0_List);
        // Inline function 'kotlin.repeat' call
        // Inline function 'kotlin.contracts.contract' call
        var inductionVariable_0 = 0;
        if (inductionVariable_0 < tmp0_List)
          do {
            var index = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            // Inline function 'kotlin.collections.MutableList.<anonymous>' call
            var tmp$ret$0;
            // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegreeGroup.<get-generatorList>.<anonymous>.<anonymous>' call
            tmp$ret$0 = item === index ? 1 : 0;
            list.a(tmp$ret$0);
          }
           while (inductionVariable_0 < tmp0_List);
        tmp$ret$1 = list;
        tmp$ret$2 = tmp$ret$1;
        var coeffList = tmp$ret$2;
        tmp$ret$3 = this.u23(0, coeffList);
        tmp0_mapTo.a(tmp$ret$3);
      }
       while (!(item === last));
    tmp$ret$4 = tmp0_mapTo;
    tmp$ret$5 = tmp$ret$4;
    return tmp$ret$5;
  };
  MultiDegreeGroup.prototype.oh = function (n) {
    var tmp = 0;
    var tmp_0 = this.e23_1.i();
    var tmp_1 = new Int32Array(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegreeGroup.fromInt.<anonymous>' call
      tmp$ret$0 = 0;
      tmp_1[tmp_2] = tmp$ret$0;
      tmp = tmp + 1 | 0;
    }
    return new MultiDegree(this, n, tmp_1);
  };
  MultiDegreeGroup.prototype.s23 = function (degree) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = get_indices(degree.k23_1);
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.m1_1;
    var last = tmp0_map.n1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegreeGroup.augmentation.<anonymous>' call
        tmp$ret$0 = imul(degree.k23_1[item], this.e23_1.l(item).q23_1);
        tmp0_mapTo.a(tmp$ret$0);
      }
       while (!(item === last));
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    return degree.j23_1 + sum(tmp$ret$2) | 0;
  };
  MultiDegreeGroup.prototype.a1j = function (degree) {
    return this.s23(degree instanceof MultiDegree ? degree : THROW_CCE());
  };
  MultiDegreeGroup.prototype.v23 = function (degree1, degree2) {
    if (!degree1.i23_1.equals(this))
      throw new IllegalContextException('' + degree1 + ' is not an element of ' + this);
    if (!degree2.i23_1.equals(this))
      throw new IllegalContextException('' + degree2 + ' is not an element of ' + this);
    var tmp = 0;
    var tmp_0 = this.e23_1.i();
    var tmp_1 = new Int32Array(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegreeGroup.add.<anonymous>' call
      tmp$ret$0 = degree1.k23_1[tmp_2] + degree2.k23_1[tmp_2] | 0;
      tmp_1[tmp_2] = tmp$ret$0;
      tmp = tmp + 1 | 0;
    }
    var coeffList = tmp_1;
    return new MultiDegree(this, degree1.j23_1 + degree2.j23_1 | 0, coeffList);
  };
  MultiDegreeGroup.prototype.i22 = function (degree1, degree2) {
    var tmp = degree1 instanceof MultiDegree ? degree1 : THROW_CCE();
    return this.v23(tmp, degree2 instanceof MultiDegree ? degree2 : THROW_CCE());
  };
  MultiDegreeGroup.prototype.w23 = function (degree1, degree2) {
    if (!degree1.i23_1.equals(this))
      throw new IllegalContextException('' + degree1 + ' is not an element of ' + this);
    if (!degree2.i23_1.equals(this))
      throw new IllegalContextException('' + degree2 + ' is not an element of ' + this);
    var tmp = 0;
    var tmp_0 = this.e23_1.i();
    var tmp_1 = new Int32Array(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegreeGroup.subtract.<anonymous>' call
      tmp$ret$0 = degree1.k23_1[tmp_2] - degree2.k23_1[tmp_2] | 0;
      tmp_1[tmp_2] = tmp$ret$0;
      tmp = tmp + 1 | 0;
    }
    var coeffList = tmp_1;
    return new MultiDegree(this, degree1.j23_1 - degree2.j23_1 | 0, coeffList);
  };
  MultiDegreeGroup.prototype.j22 = function (degree1, degree2) {
    var tmp = degree1 instanceof MultiDegree ? degree1 : THROW_CCE();
    return this.w23(tmp, degree2 instanceof MultiDegree ? degree2 : THROW_CCE());
  };
  MultiDegreeGroup.prototype.x23 = function (degree, n) {
    if (!degree.i23_1.equals(this))
      throw new IllegalContextException('' + degree + ' is not an element of ' + this);
    var tmp = 0;
    var tmp_0 = this.e23_1.i();
    var tmp_1 = new Int32Array(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegreeGroup.multiply.<anonymous>' call
      tmp$ret$0 = imul(degree.k23_1[tmp_2], n);
      tmp_1[tmp_2] = tmp$ret$0;
      tmp = tmp + 1 | 0;
    }
    var coeffList = tmp_1;
    return new MultiDegree(this, imul(degree.j23_1, n), coeffList);
  };
  MultiDegreeGroup.prototype.k22 = function (degree, n) {
    return this.x23(degree instanceof MultiDegree ? degree : THROW_CCE(), n);
  };
  MultiDegreeGroup.prototype.u23 = function (constantTerm, coeffList) {
    if (!(coeffList.i() === this.e23_1.i()))
      throw IllegalArgumentException_init_$Create$('The length of ' + coeffList + ' should be ' + this.e23_1.i() + ', but ' + coeffList.i() + ' was given');
    return new MultiDegree(this, constantTerm, toIntArray(coeffList));
  };
  MultiDegreeGroup.prototype.r23 = function (coeffList) {
    if (!(coeffList.i() === (this.e23_1.i() + 1 | 0)))
      throw IllegalArgumentException_init_$Create$('The length of ' + coeffList + ' should be ' + (this.e23_1.i() + 1 | 0) + ', but ' + coeffList.i() + ' was given');
    return new MultiDegree(this, coeffList.l(0), toIntArray(drop(coeffList, 1)));
  };
  MultiDegreeGroup.prototype.b1j = function (augmentedDegree) {
    return listAllDegreesInternal(this, augmentedDegree, 0);
  };
  MultiDegreeGroup.prototype.y23 = function (degree) {
    return degree.i23_1.equals(this);
  };
  MultiDegreeGroup.prototype.toString = function () {
    return 'MultiDegreeGroup(indeterminateList=' + this.e23_1 + ')';
  };
  MultiDegreeGroup.prototype.hashCode = function () {
    return hashCode(this.e23_1);
  };
  MultiDegreeGroup.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MultiDegreeGroup))
      return false;
    var tmp0_other_with_cast = other instanceof MultiDegreeGroup ? other : THROW_CCE();
    if (!equals(this.e23_1, tmp0_other_with_cast.e23_1))
      return false;
    return true;
  };
  MultiDegreeGroup.$metadata$ = classMeta('MultiDegreeGroup', [AugmentedDegreeGroup]);
  function DegreeIndeterminate(name, defaultValue) {
    this.p23_1 = name;
    this.q23_1 = defaultValue;
  }
  DegreeIndeterminate.prototype.zc = function () {
    return this.p23_1;
  };
  DegreeIndeterminate.prototype.z23 = function () {
    return this.q23_1;
  };
  DegreeIndeterminate.prototype.toString = function () {
    return 'DegreeIndeterminate(name=' + this.p23_1 + ', defaultValue=' + this.q23_1 + ')';
  };
  DegreeIndeterminate.prototype.hashCode = function () {
    var result = getStringHashCode(this.p23_1);
    result = imul(result, 31) + this.q23_1 | 0;
    return result;
  };
  DegreeIndeterminate.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof DegreeIndeterminate))
      return false;
    var tmp0_other_with_cast = other instanceof DegreeIndeterminate ? other : THROW_CCE();
    if (!(this.p23_1 === tmp0_other_with_cast.p23_1))
      return false;
    if (!(this.q23_1 === tmp0_other_with_cast.q23_1))
      return false;
    return true;
  };
  DegreeIndeterminate.$metadata$ = classMeta('DegreeIndeterminate');
  function MultiDegreeMorphism(source, target, values) {
    this.a24_1 = source;
    this.b24_1 = target;
    this.c24_1 = values;
    if (!(this.c24_1.i() === this.a24_1.e23_1.i()))
      throw IllegalArgumentException_init_$Create$('values.size should be equal to source.indeterminateList.size');
  }
  MultiDegreeMorphism.prototype.p1n = function () {
    return this.b24_1;
  };
  MultiDegreeMorphism.prototype.d24 = function (degree) {
    if (!this.a24_1.y23(degree))
      throw IllegalArgumentException_init_$Create$('The degree ' + degree + ' is not an element of the group ' + this.a24_1);
    var tmp$ret$4;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.b24_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$3;
    // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegreeMorphism.invoke.<anonymous>' call
    var tmp = this.b24_1.oh(degree.j23_1);
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = get_indices(degree.k23_1);
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.m1_1;
    var last = tmp0_map.n1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.dg.degree.MultiDegreeMorphism.invoke.<anonymous>.<anonymous>' call
        tmp$ret$0 = tmp0_run.r22(degree.k23_1[item], this.c24_1.l(item));
        tmp0_mapTo.a(tmp$ret$0);
      }
       while (!(item === last));
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp0_run.e1j(tmp, tmp0_run.t22(tmp$ret$2));
    tmp$ret$4 = tmp$ret$3;
    return tmp$ret$4;
  };
  MultiDegreeMorphism.prototype.r1v = function (degree) {
    return this.d24(degree instanceof MultiDegree ? degree : THROW_CCE());
  };
  MultiDegreeMorphism.$metadata$ = classMeta('MultiDegreeMorphism', [AugmentedDegreeMorphism]);
  function InclusionFromIntDegreeToMultiDegree(target) {
    this.e24_1 = target;
    this.f24_1 = IntDegreeGroup_getInstance();
  }
  InclusionFromIntDegreeToMultiDegree.prototype.p1n = function () {
    return this.e24_1;
  };
  InclusionFromIntDegreeToMultiDegree.prototype.g24 = function (degree) {
    return this.e24_1.oh(degree.x22_1);
  };
  InclusionFromIntDegreeToMultiDegree.prototype.r1v = function (degree) {
    return this.g24(degree instanceof IntDegree ? degree : THROW_CCE());
  };
  InclusionFromIntDegreeToMultiDegree.$metadata$ = classMeta('InclusionFromIntDegreeToMultiDegree', [AugmentedDegreeMorphism]);
  function context$factory_0() {
    return getPropertyCallableRef('context', 1, KProperty1, function (receiver) {
      return receiver.c1j();
    }, null);
  }
  function Zero() {
    Zero_instance = this;
  }
  Zero.$metadata$ = objectMeta('Zero', [ASTNode]);
  var Zero_instance;
  function Zero_getInstance() {
    if (Zero_instance == null)
      new Zero();
    return Zero_instance;
  }
  function Identifier(name) {
    this.s1t_1 = name;
  }
  Identifier.prototype.zc = function () {
    return this.s1t_1;
  };
  Identifier.prototype.toString = function () {
    return 'Identifier(name=' + this.s1t_1 + ')';
  };
  Identifier.prototype.hashCode = function () {
    return getStringHashCode(this.s1t_1);
  };
  Identifier.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Identifier))
      return false;
    var tmp0_other_with_cast = other instanceof Identifier ? other : THROW_CCE();
    if (!(this.s1t_1 === tmp0_other_with_cast.s1t_1))
      return false;
    return true;
  };
  Identifier.$metadata$ = classMeta('Identifier', [ASTNode]);
  function NatNumber(value) {
    this.r1t_1 = value;
  }
  NatNumber.prototype.toString = function () {
    return 'NatNumber(value=' + this.r1t_1 + ')';
  };
  NatNumber.prototype.hashCode = function () {
    return this.r1t_1;
  };
  NatNumber.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof NatNumber))
      return false;
    var tmp0_other_with_cast = other instanceof NatNumber ? other : THROW_CCE();
    if (!(this.r1t_1 === tmp0_other_with_cast.r1t_1))
      return false;
    return true;
  };
  NatNumber.$metadata$ = classMeta('NatNumber', [ASTNode]);
  function UnaryMinus(value) {
    this.o1t_1 = value;
  }
  UnaryMinus.prototype.toString = function () {
    return 'UnaryMinus(value=' + this.o1t_1 + ')';
  };
  UnaryMinus.prototype.hashCode = function () {
    return hashCode(this.o1t_1);
  };
  UnaryMinus.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof UnaryMinus))
      return false;
    var tmp0_other_with_cast = other instanceof UnaryMinus ? other : THROW_CCE();
    if (!equals(this.o1t_1, tmp0_other_with_cast.o1t_1))
      return false;
    return true;
  };
  UnaryMinus.$metadata$ = classMeta('UnaryMinus', [ASTNode]);
  function Power(base, exponent) {
    this.m1t_1 = base;
    this.n1t_1 = exponent;
  }
  Power.prototype.h24 = function () {
    return this.n1t_1;
  };
  Power.prototype.toString = function () {
    return 'Power(base=' + this.m1t_1 + ', exponent=' + this.n1t_1 + ')';
  };
  Power.prototype.hashCode = function () {
    var result = hashCode(this.m1t_1);
    result = imul(result, 31) + this.n1t_1 | 0;
    return result;
  };
  Power.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Power))
      return false;
    var tmp0_other_with_cast = other instanceof Power ? other : THROW_CCE();
    if (!equals(this.m1t_1, tmp0_other_with_cast.m1t_1))
      return false;
    if (!(this.n1t_1 === tmp0_other_with_cast.n1t_1))
      return false;
    return true;
  };
  Power.$metadata$ = classMeta('Power', [ASTNode]);
  function Divide(numerator, denominator) {
    this.p1t_1 = numerator;
    this.q1t_1 = denominator;
  }
  Divide.prototype.toString = function () {
    return 'Divide(numerator=' + this.p1t_1 + ', denominator=' + this.q1t_1 + ')';
  };
  Divide.prototype.hashCode = function () {
    var result = hashCode(this.p1t_1);
    result = imul(result, 31) + hashCode(this.q1t_1) | 0;
    return result;
  };
  Divide.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Divide))
      return false;
    var tmp0_other_with_cast = other instanceof Divide ? other : THROW_CCE();
    if (!equals(this.p1t_1, tmp0_other_with_cast.p1t_1))
      return false;
    if (!equals(this.q1t_1, tmp0_other_with_cast.q1t_1))
      return false;
    return true;
  };
  Divide.$metadata$ = classMeta('Divide', [ASTNode]);
  function Multiply(left, right) {
    this.k1t_1 = left;
    this.l1t_1 = right;
  }
  Multiply.prototype.toString = function () {
    return 'Multiply(left=' + this.k1t_1 + ', right=' + this.l1t_1 + ')';
  };
  Multiply.prototype.hashCode = function () {
    var result = hashCode(this.k1t_1);
    result = imul(result, 31) + hashCode(this.l1t_1) | 0;
    return result;
  };
  Multiply.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Multiply))
      return false;
    var tmp0_other_with_cast = other instanceof Multiply ? other : THROW_CCE();
    if (!equals(this.k1t_1, tmp0_other_with_cast.k1t_1))
      return false;
    if (!equals(this.l1t_1, tmp0_other_with_cast.l1t_1))
      return false;
    return true;
  };
  Multiply.$metadata$ = classMeta('Multiply', [ASTNode]);
  function Subtract(left, right) {
    this.i1t_1 = left;
    this.j1t_1 = right;
  }
  Subtract.prototype.toString = function () {
    return 'Subtract(left=' + this.i1t_1 + ', right=' + this.j1t_1 + ')';
  };
  Subtract.prototype.hashCode = function () {
    var result = hashCode(this.i1t_1);
    result = imul(result, 31) + hashCode(this.j1t_1) | 0;
    return result;
  };
  Subtract.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Subtract))
      return false;
    var tmp0_other_with_cast = other instanceof Subtract ? other : THROW_CCE();
    if (!equals(this.i1t_1, tmp0_other_with_cast.i1t_1))
      return false;
    if (!equals(this.j1t_1, tmp0_other_with_cast.j1t_1))
      return false;
    return true;
  };
  Subtract.$metadata$ = classMeta('Subtract', [ASTNode]);
  function Sum(left, right) {
    this.g1t_1 = left;
    this.h1t_1 = right;
  }
  Sum.prototype.toString = function () {
    return 'Sum(left=' + this.g1t_1 + ', right=' + this.h1t_1 + ')';
  };
  Sum.prototype.hashCode = function () {
    var result = hashCode(this.g1t_1);
    result = imul(result, 31) + hashCode(this.h1t_1) | 0;
    return result;
  };
  Sum.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Sum))
      return false;
    var tmp0_other_with_cast = other instanceof Sum ? other : THROW_CCE();
    if (!equals(this.g1t_1, tmp0_other_with_cast.g1t_1))
      return false;
    if (!equals(this.h1t_1, tmp0_other_with_cast.h1t_1))
      return false;
    return true;
  };
  Sum.$metadata$ = classMeta('Sum', [ASTNode]);
  function ASTNode() {
  }
  ASTNode.$metadata$ = interfaceMeta('ASTNode');
  function CharCategoryToken_init_$Init$(name, firstCharCategoryList, nonFirstCharCategoryList, ignored, $mask0, $marker, $this) {
    if (!(($mask0 & 8) === 0))
      ignored = false;
    CharCategoryToken.call($this, name, firstCharCategoryList, nonFirstCharCategoryList, ignored);
    return $this;
  }
  function CharCategoryToken_init_$Create$(name, firstCharCategoryList, nonFirstCharCategoryList, ignored, $mask0, $marker) {
    return CharCategoryToken_init_$Init$(name, firstCharCategoryList, nonFirstCharCategoryList, ignored, $mask0, $marker, Object.create(CharCategoryToken.prototype));
  }
  function CharCategoryToken(name, firstCharCategoryList, nonFirstCharCategoryList, ignored) {
    Token.call(this, name, ignored);
    this.k24_1 = firstCharCategoryList;
    this.l24_1 = nonFirstCharCategoryList;
  }
  CharCategoryToken.prototype.m1h = function (input, fromIndex) {
    if (!this.k24_1.x1(get_category(charSequenceGet(input, fromIndex)))) {
      return 0;
    }
    var index = fromIndex + 1 | 0;
    while (index < charSequenceLength(input) ? this.l24_1.x1(get_category(charSequenceGet(input, index))) : false) {
      var tmp0 = index;
      index = tmp0 + 1 | 0;
    }
    return index - fromIndex | 0;
  };
  CharCategoryToken.prototype.toString = function () {
    var tmp0_elvis_lhs = this.t1g_1;
    return (tmp0_elvis_lhs == null ? '' : tmp0_elvis_lhs) + ' (' + this.k24_1 + ', ' + this.l24_1 + ')' + (this.u1g_1 ? ' [ignorable]' : '');
  };
  CharCategoryToken.$metadata$ = classMeta('CharCategoryToken', undefined, undefined, undefined, undefined, Token.prototype);
  function charCategoryToken(firstCharCategoryList, nonFirstCharCategoryList) {
    return CharCategoryToken_init_$Create$(null, firstCharCategoryList, nonFirstCharCategoryList, false, 8, null);
  }
  function _get_zero__dhgbs3($this) {
    return $this.y1g($this.p24_1, $this, zero$factory_0());
  }
  function _get_id__ndc34g($this) {
    return $this.y1g($this.q24_1, $this, id$factory_0());
  }
  function _get_nat__e6db4g($this) {
    return $this.y1g($this.r24_1, $this, nat$factory_0());
  }
  function _get_lpar__d9xvsm($this) {
    return $this.y1g($this.s24_1, $this, lpar$factory_0());
  }
  function _get_rpar__dd8ncs($this) {
    return $this.y1g($this.t24_1, $this, rpar$factory_0());
  }
  function _get_mul__e6d2rx($this) {
    return $this.y1g($this.u24_1, $this, mul$factory_0());
  }
  function _get_pow__e6evjt($this) {
    return $this.y1g($this.v24_1, $this, pow$factory_0());
  }
  function _get_div__e6738g($this) {
    return $this.y1g($this.w24_1, $this, div$factory_0());
  }
  function _get_minus__e92hlr($this) {
    return $this.y1g($this.x24_1, $this, minus$factory_0());
  }
  function _get_plus__dc2x2p($this) {
    return $this.y1g($this.y24_1, $this, plus$factory_0());
  }
  function _get_ws__ndcdv3($this) {
    return $this.y1g($this.z24_1, $this, ws$factory_0());
  }
  function _get_idParser__4cqmtr($this) {
    return $this.w1g($this.a25_1, $this, idParser$factory_0());
  }
  function _get_natParser__86xlm9($this) {
    return $this.w1g($this.b25_1, $this, natParser$factory_0());
  }
  function _get_parenParser__kd1lns($this) {
    return $this.w1g($this.c25_1, $this, parenParser$factory_0());
  }
  function _get_minusParser__naumde($this) {
    return $this.w1g($this.d25_1, $this, minusParser$factory_0());
  }
  function _get_termParser__9ktxa8($this) {
    return $this.w1g($this.e25_1, $this, termParser$factory_0());
  }
  function _get_powerParser__cj0rqr($this) {
    return $this.w1g($this.f25_1, $this, powerParser$factory_0());
  }
  function _get_mulDivChain__rkka6b($this) {
    return $this.w1g($this.g25_1, $this, mulDivChain$factory_1());
  }
  function _get_subSumChain__3rvi9x($this) {
    return $this.w1g($this.h25_1, $this, subSumChain$factory_0());
  }
  function GAlgebraElementASTGrammar$idParser$delegate$lambda($this$null) {
    return new Identifier($this$null.f1i());
  }
  function GAlgebraElementASTGrammar$idParser$delegate$lambda_0($this$null) {
    return Zero_getInstance();
  }
  function GAlgebraElementASTGrammar$natParser$delegate$lambda($this$null) {
    return new NatNumber(toInt($this$null.f1i()));
  }
  function GAlgebraElementASTGrammar$parenParser$delegate$lambda(_name_for_destructuring_parameter_0__wldtmu) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.component1' call
    tmp$ret$0 = _name_for_destructuring_parameter_0__wldtmu.l(0);
    var b = tmp$ret$0;
    return (!(b == null) ? isInterface(b, ASTNode) : false) ? b : THROW_CCE();
  }
  function GAlgebraElementASTGrammar$parenParser$delegate$lambda_0(_name_for_destructuring_parameter_0__wldtmu) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.component1' call
    tmp$ret$0 = _name_for_destructuring_parameter_0__wldtmu.l(0);
    var a = tmp$ret$0;
    return (!(a == null) ? isInterface(a, ASTNode) : false) ? a : THROW_CCE();
  }
  function GAlgebraElementASTGrammar$minusParser$delegate$lambda(_name_for_destructuring_parameter_0__wldtmu) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.component1' call
    tmp$ret$0 = _name_for_destructuring_parameter_0__wldtmu.l(0);
    var b = tmp$ret$0;
    return (!(b == null) ? isInterface(b, ASTNode) : false) ? b : THROW_CCE();
  }
  function GAlgebraElementASTGrammar$minusParser$delegate$lambda_0(it) {
    return new UnaryMinus(it);
  }
  function GAlgebraElementASTGrammar$minusParser$delegate$lambda_1(_name_for_destructuring_parameter_0__wldtmu) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.component1' call
    tmp$ret$0 = _name_for_destructuring_parameter_0__wldtmu.l(0);
    var b = tmp$ret$0;
    return (!(b == null) ? isInterface(b, ASTNode) : false) ? b : THROW_CCE();
  }
  function GAlgebraElementASTGrammar$minusParser$delegate$lambda_2(it) {
    return new UnaryMinus(it);
  }
  function GAlgebraElementASTGrammar$powerParser$delegate$lambda(_name_for_destructuring_parameter_0__wldtmu) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.component1' call
    tmp$ret$0 = _name_for_destructuring_parameter_0__wldtmu.l(0);
    var a = tmp$ret$0;
    return (!(a == null) ? isInterface(a, ASTNode) : false) ? a : THROW_CCE();
  }
  function GAlgebraElementASTGrammar$powerParser$delegate$lambda_0(_name_for_destructuring_parameter_0__wldtmu) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.component1' call
    tmp$ret$0 = _name_for_destructuring_parameter_0__wldtmu.l(0);
    var a1 = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.collections.component2' call
    tmp$ret$1 = _name_for_destructuring_parameter_0__wldtmu.l(1);
    var a2 = tmp$ret$1;
    var tmp = (!(a1 == null) ? isInterface(a1, ASTNode) : false) ? a1 : THROW_CCE();
    return new Tuple2(tmp, a2 instanceof TokenMatch ? a2 : THROW_CCE());
  }
  function GAlgebraElementASTGrammar$powerParser$delegate$lambda_1(_name_for_destructuring_parameter_0__wldtmu) {
    var node = _name_for_destructuring_parameter_0__wldtmu.a4();
    var n = _name_for_destructuring_parameter_0__wldtmu.b4();
    return new Power(node, toInt(n.f1i()));
  }
  function GAlgebraElementASTGrammar$mulDivChain$delegate$lambda($this$null) {
    return $this$null.w1h_1;
  }
  function GAlgebraElementASTGrammar$mulDivChain$delegate$lambda_0(left, op, right) {
    var tmp0_subject = op;
    var tmp;
    if (equals(tmp0_subject, _get_mul__e6d2rx(GAlgebraElementASTGrammar_getInstance()))) {
      tmp = new Multiply(left, right);
    } else if (equals(tmp0_subject, _get_div__e6738g(GAlgebraElementASTGrammar_getInstance()))) {
      tmp = new Divide(left, right);
    } else {
      throw Exception_init_$Create$("This can't happen!");
    }
    return tmp;
  }
  function GAlgebraElementASTGrammar$mulDivChain$delegate$lambda_1($tmp2_leftAssociative) {
    return function (it) {
      return it.i1g($tmp2_leftAssociative);
    };
  }
  function GAlgebraElementASTGrammar$subSumChain$delegate$lambda($this$null) {
    return $this$null.w1h_1;
  }
  function GAlgebraElementASTGrammar$subSumChain$delegate$lambda_0(left, op, right) {
    var tmp0_subject = op;
    var tmp;
    if (equals(tmp0_subject, _get_plus__dc2x2p(GAlgebraElementASTGrammar_getInstance()))) {
      tmp = new Sum(left, right);
    } else if (equals(tmp0_subject, _get_minus__e92hlr(GAlgebraElementASTGrammar_getInstance()))) {
      tmp = new Subtract(left, right);
    } else {
      throw Exception_init_$Create$("This can't happen!");
    }
    return tmp;
  }
  function GAlgebraElementASTGrammar$subSumChain$delegate$lambda_1($tmp2_leftAssociative) {
    return function (it) {
      return it.i1g($tmp2_leftAssociative);
    };
  }
  function GAlgebraElementASTGrammar() {
    GAlgebraElementASTGrammar_instance = this;
    Grammar.call(this);
    var tmp = this;
    tmp.p24_1 = this.x1g(literalToken$default('zero', false, 2, null), this, zero$factory());
    this.q24_1 = this.x1g(charCategoryToken(Companion_getInstance_66().j25_1, Companion_getInstance_67().y22_1), this, id$factory());
    var tmp_0 = this;
    tmp_0.r24_1 = this.x1g(regexToken$default('\\d+', false, 2, null), this, nat$factory());
    var tmp_1 = this;
    tmp_1.s24_1 = this.x1g(literalToken$default('(', false, 2, null), this, lpar$factory());
    var tmp_2 = this;
    tmp_2.t24_1 = this.x1g(literalToken$default(')', false, 2, null), this, rpar$factory());
    var tmp_3 = this;
    tmp_3.u24_1 = this.x1g(literalToken$default('*', false, 2, null), this, mul$factory());
    var tmp_4 = this;
    tmp_4.v24_1 = this.x1g(literalToken$default('^', false, 2, null), this, pow$factory());
    var tmp_5 = this;
    tmp_5.w24_1 = this.x1g(literalToken$default('/', false, 2, null), this, div$factory());
    var tmp_6 = this;
    tmp_6.x24_1 = this.x1g(literalToken$default('-', false, 2, null), this, minus$factory());
    var tmp_7 = this;
    tmp_7.y24_1 = this.x1g(literalToken$default('+', false, 2, null), this, plus$factory());
    this.z24_1 = this.x1g(regexToken('\\s*', true), this, ws$factory());
    var tmp_8 = this;
    var tmp_9 = _get_id__ndc34g(this);
    var tmp_10 = use(tmp_9, GAlgebraElementASTGrammar$idParser$delegate$lambda);
    var tmp_11 = _get_zero__dhgbs3(this);
    tmp_8.a25_1 = this.v1g(or(tmp_10, use(tmp_11, GAlgebraElementASTGrammar$idParser$delegate$lambda_0)), this, idParser$factory());
    var tmp_12 = this;
    var tmp_13 = _get_nat__e6db4g(this);
    tmp_12.b25_1 = this.v1g(use(tmp_13, GAlgebraElementASTGrammar$natParser$delegate$lambda), this, natParser$factory());
    var tmp_14 = this;
    var tmp$ret$1;
    // Inline function 'com.github.h0tk3y.betterParse.combinators.and' call
    var tmp$ret$0;
    // Inline function 'com.github.h0tk3y.betterParse.combinators.and' call
    var tmp0_and = skip(_get_lpar__d9xvsm(this));
    var tmp1_and = parser(rootParser$factory(this));
    var tmp_15 = listOf_0([tmp0_and, tmp1_and]);
    tmp$ret$0 = new AndCombinator(tmp_15, GAlgebraElementASTGrammar$parenParser$delegate$lambda);
    var tmp2_and = tmp$ret$0;
    var tmp3_and = skip(_get_rpar__dd8ncs(this));
    var tmp_16 = listOf_0([tmp2_and, tmp3_and]);
    tmp$ret$1 = new AndCombinator(tmp_16, GAlgebraElementASTGrammar$parenParser$delegate$lambda_0);
    tmp_14.c25_1 = this.v1g(tmp$ret$1, this, parenParser$factory());
    var tmp_17 = this;
    var tmp$ret$2;
    // Inline function 'com.github.h0tk3y.betterParse.combinators.and' call
    var tmp0_and_0 = skip(_get_minus__e92hlr(this));
    var tmp1_and_0 = _get_parenParser__kd1lns(this);
    var tmp_18 = listOf_0([tmp0_and_0, tmp1_and_0]);
    tmp$ret$2 = new AndCombinator(tmp_18, GAlgebraElementASTGrammar$minusParser$delegate$lambda);
    var tmp_19 = tmp$ret$2;
    var tmp_20 = map(tmp_19, GAlgebraElementASTGrammar$minusParser$delegate$lambda_0);
    var tmp$ret$3;
    // Inline function 'com.github.h0tk3y.betterParse.combinators.and' call
    var tmp2_and_0 = skip(_get_minus__e92hlr(this));
    var tmp3_and_0 = parser(mulDivChain$factory(this));
    var tmp_21 = listOf_0([tmp2_and_0, tmp3_and_0]);
    tmp$ret$3 = new AndCombinator(tmp_21, GAlgebraElementASTGrammar$minusParser$delegate$lambda_1);
    var tmp_22 = tmp$ret$3;
    tmp_17.d25_1 = this.v1g(or(tmp_20, map(tmp_22, GAlgebraElementASTGrammar$minusParser$delegate$lambda_2)), this, minusParser$factory());
    this.e25_1 = this.v1g(or(or(or(_get_natParser__86xlm9(this), _get_idParser__4cqmtr(this)), _get_minusParser__naumde(this)), _get_parenParser__kd1lns(this)), this, termParser$factory());
    var tmp_23 = this;
    var tmp$ret$5;
    // Inline function 'com.github.h0tk3y.betterParse.combinators.and' call
    var tmp$ret$4;
    // Inline function 'com.github.h0tk3y.betterParse.combinators.and' call
    var tmp0_and_1 = _get_termParser__9ktxa8(this);
    var tmp1_and_1 = skip(_get_pow__e6evjt(this));
    var tmp_24 = listOf_0([tmp0_and_1, tmp1_and_1]);
    tmp$ret$4 = new AndCombinator(tmp_24, GAlgebraElementASTGrammar$powerParser$delegate$lambda);
    var tmp2_and_1 = tmp$ret$4;
    var tmp3_and_1 = _get_nat__e6db4g(this);
    var tmp_25 = plus(tmp2_and_1.w1f_1, listOf(tmp3_and_1));
    tmp$ret$5 = new AndCombinator(tmp_25, GAlgebraElementASTGrammar$powerParser$delegate$lambda_0);
    var tmp_26 = tmp$ret$5;
    tmp_23.f25_1 = this.v1g(or(map(tmp_26, GAlgebraElementASTGrammar$powerParser$delegate$lambda_1), _get_termParser__9ktxa8(this)), this, powerParser$factory());
    var tmp_27 = this;
    var tmp$ret$7;
    // Inline function 'com.github.h0tk3y.betterParse.combinators.leftAssociative' call
    var tmp0_leftAssociative = _get_powerParser__cj0rqr(this);
    var tmp_28 = or(_get_mul__e6d2rx(this), _get_div__e6738g(this));
    var tmp1_leftAssociative = use(tmp_28, GAlgebraElementASTGrammar$mulDivChain$delegate$lambda);
    var tmp2_leftAssociative = GAlgebraElementASTGrammar$mulDivChain$delegate$lambda_0;
    var tmp$ret$6;
    // Inline function 'com.github.h0tk3y.betterParse.combinators.separated' call
    tmp$ret$6 = new SeparatedCombinator(tmp0_leftAssociative, tmp1_leftAssociative, false);
    var tmp_29 = tmp$ret$6;
    tmp$ret$7 = map(tmp_29, GAlgebraElementASTGrammar$mulDivChain$delegate$lambda_1(tmp2_leftAssociative));
    tmp_27.g25_1 = this.v1g(tmp$ret$7, this, mulDivChain$factory_0());
    var tmp_30 = this;
    var tmp$ret$9;
    // Inline function 'com.github.h0tk3y.betterParse.combinators.leftAssociative' call
    var tmp0_leftAssociative_0 = _get_mulDivChain__rkka6b(this);
    var tmp_31 = or(_get_plus__dc2x2p(this), _get_minus__e92hlr(this));
    var tmp1_leftAssociative_0 = use(tmp_31, GAlgebraElementASTGrammar$subSumChain$delegate$lambda);
    var tmp2_leftAssociative_0 = GAlgebraElementASTGrammar$subSumChain$delegate$lambda_0;
    var tmp$ret$8;
    // Inline function 'com.github.h0tk3y.betterParse.combinators.separated' call
    tmp$ret$8 = new SeparatedCombinator(tmp0_leftAssociative_0, tmp1_leftAssociative_0, false);
    var tmp_32 = tmp$ret$8;
    tmp$ret$9 = map(tmp_32, GAlgebraElementASTGrammar$subSumChain$delegate$lambda_1(tmp2_leftAssociative_0));
    tmp_30.h25_1 = this.v1g(tmp$ret$9, this, subSumChain$factory());
    this.i25_1 = this.v1g(_get_subSumChain__3rvi9x(this), this, rootParser$factory_0());
  }
  GAlgebraElementASTGrammar.prototype.p1g = function () {
    return this.w1g(this.i25_1, this, rootParser$factory_1());
  };
  GAlgebraElementASTGrammar.$metadata$ = objectMeta('GAlgebraElementASTGrammar', undefined, undefined, undefined, undefined, Grammar.prototype);
  var GAlgebraElementASTGrammar_instance;
  function GAlgebraElementASTGrammar_getInstance() {
    if (GAlgebraElementASTGrammar_instance == null)
      new GAlgebraElementASTGrammar();
    return GAlgebraElementASTGrammar_instance;
  }
  function zero$factory() {
    return getPropertyCallableRef('zero', 1, KProperty1, function (receiver) {
      return _get_zero__dhgbs3(receiver);
    }, null);
  }
  function id$factory() {
    return getPropertyCallableRef('id', 1, KProperty1, function (receiver) {
      return _get_id__ndc34g(receiver);
    }, null);
  }
  function nat$factory() {
    return getPropertyCallableRef('nat', 1, KProperty1, function (receiver) {
      return _get_nat__e6db4g(receiver);
    }, null);
  }
  function lpar$factory() {
    return getPropertyCallableRef('lpar', 1, KProperty1, function (receiver) {
      return _get_lpar__d9xvsm(receiver);
    }, null);
  }
  function rpar$factory() {
    return getPropertyCallableRef('rpar', 1, KProperty1, function (receiver) {
      return _get_rpar__dd8ncs(receiver);
    }, null);
  }
  function mul$factory() {
    return getPropertyCallableRef('mul', 1, KProperty1, function (receiver) {
      return _get_mul__e6d2rx(receiver);
    }, null);
  }
  function pow$factory() {
    return getPropertyCallableRef('pow', 1, KProperty1, function (receiver) {
      return _get_pow__e6evjt(receiver);
    }, null);
  }
  function div$factory() {
    return getPropertyCallableRef('div', 1, KProperty1, function (receiver) {
      return _get_div__e6738g(receiver);
    }, null);
  }
  function minus$factory() {
    return getPropertyCallableRef('minus', 1, KProperty1, function (receiver) {
      return _get_minus__e92hlr(receiver);
    }, null);
  }
  function plus$factory() {
    return getPropertyCallableRef('plus', 1, KProperty1, function (receiver) {
      return _get_plus__dc2x2p(receiver);
    }, null);
  }
  function ws$factory() {
    return getPropertyCallableRef('ws', 1, KProperty1, function (receiver) {
      return _get_ws__ndcdv3(receiver);
    }, null);
  }
  function idParser$factory() {
    return getPropertyCallableRef('idParser', 1, KProperty1, function (receiver) {
      return _get_idParser__4cqmtr(receiver);
    }, null);
  }
  function natParser$factory() {
    return getPropertyCallableRef('natParser', 1, KProperty1, function (receiver) {
      return _get_natParser__86xlm9(receiver);
    }, null);
  }
  function rootParser$factory($b0) {
    return getPropertyCallableRef('rootParser', 0, KProperty0, function () {
      return $b0.p1g();
    }, null);
  }
  function parenParser$factory() {
    return getPropertyCallableRef('parenParser', 1, KProperty1, function (receiver) {
      return _get_parenParser__kd1lns(receiver);
    }, null);
  }
  function mulDivChain$factory($b0) {
    return getPropertyCallableRef('mulDivChain', 0, KProperty0, function () {
      return _get_mulDivChain__rkka6b($b0);
    }, null);
  }
  function minusParser$factory() {
    return getPropertyCallableRef('minusParser', 1, KProperty1, function (receiver) {
      return _get_minusParser__naumde(receiver);
    }, null);
  }
  function termParser$factory() {
    return getPropertyCallableRef('termParser', 1, KProperty1, function (receiver) {
      return _get_termParser__9ktxa8(receiver);
    }, null);
  }
  function powerParser$factory() {
    return getPropertyCallableRef('powerParser', 1, KProperty1, function (receiver) {
      return _get_powerParser__cj0rqr(receiver);
    }, null);
  }
  function mulDivChain$factory_0() {
    return getPropertyCallableRef('mulDivChain', 1, KProperty1, function (receiver) {
      return _get_mulDivChain__rkka6b(receiver);
    }, null);
  }
  function subSumChain$factory() {
    return getPropertyCallableRef('subSumChain', 1, KProperty1, function (receiver) {
      return _get_subSumChain__3rvi9x(receiver);
    }, null);
  }
  function rootParser$factory_0() {
    return getPropertyCallableRef('rootParser', 1, KProperty1, function (receiver) {
      return receiver.p1g();
    }, null);
  }
  function zero$factory_0() {
    return getPropertyCallableRef('zero', 1, KProperty1, function (receiver) {
      return _get_zero__dhgbs3(receiver);
    }, null);
  }
  function id$factory_0() {
    return getPropertyCallableRef('id', 1, KProperty1, function (receiver) {
      return _get_id__ndc34g(receiver);
    }, null);
  }
  function nat$factory_0() {
    return getPropertyCallableRef('nat', 1, KProperty1, function (receiver) {
      return _get_nat__e6db4g(receiver);
    }, null);
  }
  function lpar$factory_0() {
    return getPropertyCallableRef('lpar', 1, KProperty1, function (receiver) {
      return _get_lpar__d9xvsm(receiver);
    }, null);
  }
  function rpar$factory_0() {
    return getPropertyCallableRef('rpar', 1, KProperty1, function (receiver) {
      return _get_rpar__dd8ncs(receiver);
    }, null);
  }
  function mul$factory_0() {
    return getPropertyCallableRef('mul', 1, KProperty1, function (receiver) {
      return _get_mul__e6d2rx(receiver);
    }, null);
  }
  function pow$factory_0() {
    return getPropertyCallableRef('pow', 1, KProperty1, function (receiver) {
      return _get_pow__e6evjt(receiver);
    }, null);
  }
  function div$factory_0() {
    return getPropertyCallableRef('div', 1, KProperty1, function (receiver) {
      return _get_div__e6738g(receiver);
    }, null);
  }
  function minus$factory_0() {
    return getPropertyCallableRef('minus', 1, KProperty1, function (receiver) {
      return _get_minus__e92hlr(receiver);
    }, null);
  }
  function plus$factory_0() {
    return getPropertyCallableRef('plus', 1, KProperty1, function (receiver) {
      return _get_plus__dc2x2p(receiver);
    }, null);
  }
  function ws$factory_0() {
    return getPropertyCallableRef('ws', 1, KProperty1, function (receiver) {
      return _get_ws__ndcdv3(receiver);
    }, null);
  }
  function idParser$factory_0() {
    return getPropertyCallableRef('idParser', 1, KProperty1, function (receiver) {
      return _get_idParser__4cqmtr(receiver);
    }, null);
  }
  function natParser$factory_0() {
    return getPropertyCallableRef('natParser', 1, KProperty1, function (receiver) {
      return _get_natParser__86xlm9(receiver);
    }, null);
  }
  function parenParser$factory_0() {
    return getPropertyCallableRef('parenParser', 1, KProperty1, function (receiver) {
      return _get_parenParser__kd1lns(receiver);
    }, null);
  }
  function minusParser$factory_0() {
    return getPropertyCallableRef('minusParser', 1, KProperty1, function (receiver) {
      return _get_minusParser__naumde(receiver);
    }, null);
  }
  function termParser$factory_0() {
    return getPropertyCallableRef('termParser', 1, KProperty1, function (receiver) {
      return _get_termParser__9ktxa8(receiver);
    }, null);
  }
  function powerParser$factory_0() {
    return getPropertyCallableRef('powerParser', 1, KProperty1, function (receiver) {
      return _get_powerParser__cj0rqr(receiver);
    }, null);
  }
  function mulDivChain$factory_1() {
    return getPropertyCallableRef('mulDivChain', 1, KProperty1, function (receiver) {
      return _get_mulDivChain__rkka6b(receiver);
    }, null);
  }
  function subSumChain$factory_0() {
    return getPropertyCallableRef('subSumChain', 1, KProperty1, function (receiver) {
      return _get_subSumChain__3rvi9x(receiver);
    }, null);
  }
  function rootParser$factory_1() {
    return getPropertyCallableRef('rootParser', 1, KProperty1, function (receiver) {
      return receiver.p1g();
    }, null);
  }
  function RegexToken_init_$Init$(name, pattern, ignored, $this) {
    RegexToken.call($this, name, Regex_init_$Create$(pattern), ignored);
    return $this;
  }
  function RegexToken_init_$Create$(name, pattern, ignored) {
    return RegexToken_init_$Init$(name, pattern, ignored, Object.create(RegexToken.prototype));
  }
  function RegexToken(name, regex, ignored) {
    Token.call(this, name, ignored);
    this.m25_1 = regex;
  }
  RegexToken.prototype.m1h = function (input, fromIndex) {
    var matchResult = this.m25_1.of(input, fromIndex);
    if (!(matchResult == null) ? matchResult.y6().m1_1 === fromIndex : false) {
      return (matchResult.y6().n1_1 - fromIndex | 0) + 1 | 0;
    }
    return 0;
  };
  RegexToken.prototype.toString = function () {
    var tmp0_elvis_lhs = this.t1g_1;
    return (tmp0_elvis_lhs == null ? '' : tmp0_elvis_lhs) + ' [' + this.m25_1.jf_1 + ']' + (this.u1g_1 ? ' [ignorable]' : '');
  };
  RegexToken.$metadata$ = classMeta('RegexToken', undefined, undefined, undefined, undefined, Token.prototype);
  function regexToken(pattern, ignore) {
    return RegexToken_init_$Create$(null, pattern, ignore);
  }
  function regexToken$default(pattern, ignore, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignore = false;
    return regexToken(pattern, ignore);
  }
  function IllegalContextException(message) {
    RuntimeException_init_$Init$(message, this);
    captureStack(this, IllegalContextException);
  }
  IllegalContextException.$metadata$ = classMeta('IllegalContextException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function InvalidSizeException(message) {
    RuntimeException_init_$Init$(message, this);
    captureStack(this, InvalidSizeException);
  }
  InvalidSizeException.$metadata$ = classMeta('InvalidSizeException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function getInitial($this, targetDGAlgebra) {
    var tmp = Companion_getInstance_39();
    var tmp_0 = targetDGAlgebra.u1j();
    var tmp_1 = emptyList();
    var freeDGAlgebra = tmp.n25(tmp_0, tmp_1, null, CohomologicalMinimalModel$Companion$getInitial$lambda, 4, null);
    var dgAlgebraMap = freeDGAlgebra.o25(targetDGAlgebra, emptyList());
    return new CohomologicalMinimalModel(targetDGAlgebra, freeDGAlgebra, dgAlgebraMap, 1);
  }
  function CohomologicalMinimalModel$Companion$getInitial$lambda($this$fromMap, _anonymous_parameter_0__qggqh8) {
    return emptyMap();
  }
  function Companion_35() {
    Companion_instance_35 = this;
  }
  Companion_35.prototype.p25 = function (targetDGAlgebra, isomorphismUpTo, reportProgress) {
    // Inline function 'kotlin.require' call
    var tmp0_require = targetDGAlgebra.d1k().y1i_1 === 0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.Companion.of.<anonymous>' call
      tmp$ret$0 = 'targetDGAlgebra must be bounded below by 0';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.require' call
    var tmp1_require = targetDGAlgebra.l(0).q25() === 1;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp1_require) {
      var tmp$ret$1;
      // Inline function 'com.github.shwaka.kohomology.free.Companion.of.<anonymous>' call
      tmp$ret$1 = 'targetDGAlgebra[0].dim must be 1 (i.e. contains only the unit)';
      var message_0 = tmp$ret$1;
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
    // Inline function 'kotlin.require' call
    var tmp2_require = targetDGAlgebra.i1j().l(1).q25() === 0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp2_require) {
      var tmp$ret$2;
      // Inline function 'com.github.shwaka.kohomology.free.Companion.of.<anonymous>' call
      tmp$ret$2 = 'The 1-st cohomology of targetDGAlgebra must be 0 (i.e. 1-connected)';
      var message_1 = tmp$ret$2;
      throw IllegalArgumentException_init_$Create$(toString(message_1));
    }
    var minimalModel = getInitial(this, targetDGAlgebra);
    reportProgress(minimalModel.r25(isomorphismUpTo));
    while (minimalModel.v25_1 < isomorphismUpTo) {
      minimalModel = minimalModel.w25();
      reportProgress(minimalModel.r25(isomorphismUpTo));
    }
    return minimalModel;
  };
  Companion_35.$metadata$ = objectMeta('Companion');
  var Companion_instance_35;
  function Companion_getInstance_36() {
    if (Companion_instance_35 == null)
      new Companion_35();
    return Companion_instance_35;
  }
  function CohomologicalMinimalModel(targetDGAlgebra, freeDGAlgebra, dgAlgebraMap, isomorphismUpTo) {
    Companion_getInstance_36();
    this.s25_1 = targetDGAlgebra;
    this.t25_1 = freeDGAlgebra;
    this.u25_1 = dgAlgebraMap;
    this.v25_1 = isomorphismUpTo;
  }
  CohomologicalMinimalModel.prototype.x25 = function () {
    return this.s25_1;
  };
  CohomologicalMinimalModel.prototype.y25 = function () {
    return this.t25_1;
  };
  CohomologicalMinimalModel.prototype.z25 = function () {
    return this.u25_1;
  };
  CohomologicalMinimalModel.prototype.a26 = function () {
    return this.v25_1;
  };
  CohomologicalMinimalModel.prototype.w25 = function () {
    var calculator = new CohomologicalNextMMCalculator(this);
    return calculator.l26();
  };
  CohomologicalMinimalModel.prototype.toString = function () {
    return 'CohomologicalMinimalModel(targetDGAlgebra=' + this.s25_1 + ', freeDGAlgebra=' + this.t25_1 + ', dgAlgebraMap=' + this.u25_1 + ', isomorphismUpTo=' + this.v25_1 + ')';
  };
  CohomologicalMinimalModel.prototype.hashCode = function () {
    var result = hashCode(this.s25_1);
    result = imul(result, 31) + hashCode(this.t25_1) | 0;
    result = imul(result, 31) + hashCode(this.u25_1) | 0;
    result = imul(result, 31) + this.v25_1 | 0;
    return result;
  };
  CohomologicalMinimalModel.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CohomologicalMinimalModel))
      return false;
    var tmp0_other_with_cast = other instanceof CohomologicalMinimalModel ? other : THROW_CCE();
    if (!equals(this.s25_1, tmp0_other_with_cast.s25_1))
      return false;
    if (!equals(this.t25_1, tmp0_other_with_cast.t25_1))
      return false;
    if (!equals(this.u25_1, tmp0_other_with_cast.u25_1))
      return false;
    if (!(this.v25_1 === tmp0_other_with_cast.v25_1))
      return false;
    return true;
  };
  CohomologicalMinimalModel.$metadata$ = classMeta('CohomologicalMinimalModel', [MinimalModel]);
  function CohomologicalNextMMCalculator(minimalModel) {
    NextMMCalculator.call(this, minimalModel);
  }
  CohomologicalNextMMCalculator.prototype.w26 = function () {
    return this.b26_1.a26() + 1 | 0;
  };
  CohomologicalNextMMCalculator.prototype.x26 = function () {
    return this.b26_1.a26() + 1 | 0;
  };
  CohomologicalNextMMCalculator.prototype.y26 = function (targetDGAlgebra, freeDGAlgebra, dgAlgebraMap, isomorphismUpTo) {
    return new CohomologicalMinimalModel(targetDGAlgebra, freeDGAlgebra, dgAlgebraMap, isomorphismUpTo);
  };
  CohomologicalNextMMCalculator.prototype.z26 = function (targetDGAlgebra, freeDGAlgebra, dgAlgebraMap, isomorphismUpTo) {
    return this.y26(targetDGAlgebra, freeDGAlgebra, dgAlgebraMap, isomorphismUpTo);
  };
  CohomologicalNextMMCalculator.$metadata$ = classMeta('CohomologicalNextMMCalculator', undefined, undefined, undefined, undefined, NextMMCalculator.prototype);
  function Companion_36() {
    Companion_instance_36 = this;
  }
  Companion_36.prototype.n27 = function (freeDGAlgebra) {
    var factory = new DerivationDGLieAlgebraFactory(freeDGAlgebra);
    return new DerivationDGLieAlgebra(factory);
  };
  Companion_36.$metadata$ = objectMeta('Companion');
  var Companion_instance_36;
  function Companion_getInstance_37() {
    if (Companion_instance_36 == null)
      new Companion_36();
    return Companion_instance_36;
  }
  function DerivationDGLieAlgebra(factory) {
    Companion_getInstance_37();
    this.o27_1 = factory;
    this.p27_1 = Companion_getInstance_6().a1p(factory.v27_1, factory.w27_1);
    this.q27_1 = this.o27_1.s27_1;
    this.r27_1 = this.o27_1.v27_1;
  }
  DerivationDGLieAlgebra.prototype.d1k = function () {
    return this.p27_1.d1k();
  };
  DerivationDGLieAlgebra.prototype.i1j = function () {
    return this.p27_1.i1j();
  };
  DerivationDGLieAlgebra.prototype.c1j = function () {
    return this.p27_1.c1j();
  };
  DerivationDGLieAlgebra.prototype.y1j = function () {
    return this.p27_1.y1j();
  };
  DerivationDGLieAlgebra.prototype.k1j = function () {
    return this.p27_1.k1j();
  };
  DerivationDGLieAlgebra.prototype.e1k = function () {
    return this.p27_1.e1k();
  };
  DerivationDGLieAlgebra.prototype.z1j = function () {
    return this.p27_1.z1j();
  };
  DerivationDGLieAlgebra.prototype.a1k = function () {
    return this.p27_1.a1k();
  };
  DerivationDGLieAlgebra.prototype.u1j = function () {
    return this.p27_1.u1j();
  };
  DerivationDGLieAlgebra.prototype.j1j = function () {
    return this.p27_1.j1j();
  };
  DerivationDGLieAlgebra.prototype.zc = function () {
    return this.p27_1.zc();
  };
  DerivationDGLieAlgebra.prototype.x1j = function () {
    return this.p27_1.x1j();
  };
  DerivationDGLieAlgebra.prototype.c1k = function () {
    return this.p27_1.c1k();
  };
  DerivationDGLieAlgebra.prototype.u1k = function () {
    return this.p27_1.u1k();
  };
  DerivationDGLieAlgebra.prototype.x27 = function (a, b) {
    return this.p27_1.o1k(a, b);
  };
  DerivationDGLieAlgebra.prototype.o1k = function (a, b) {
    return this.x27(a, b);
  };
  DerivationDGLieAlgebra.prototype.y27 = function (cocycle) {
    return this.p27_1.v1j(cocycle);
  };
  DerivationDGLieAlgebra.prototype.v1j = function (cocycle) {
    return this.y27(cocycle);
  };
  DerivationDGLieAlgebra.prototype.z27 = function (gVector) {
    return this.p27_1.m1k(gVector);
  };
  DerivationDGLieAlgebra.prototype.m1k = function (gVector) {
    return this.z27(gVector);
  };
  DerivationDGLieAlgebra.prototype.a28 = function (gVector) {
    return this.p27_1.n1k(gVector);
  };
  DerivationDGLieAlgebra.prototype.n1k = function (gVector) {
    return this.a28(gVector);
  };
  DerivationDGLieAlgebra.prototype.b28 = function (gVectorOrZero, degree) {
    return this.p27_1.l1k(gVectorOrZero, degree);
  };
  DerivationDGLieAlgebra.prototype.l1k = function (gVectorOrZero, degree) {
    return this.b28(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  DerivationDGLieAlgebra.prototype.c28 = function (a, b) {
    return this.p27_1.t1k(a, b);
  };
  DerivationDGLieAlgebra.prototype.t1k = function (a, b) {
    return this.c28(a, b);
  };
  DerivationDGLieAlgebra.prototype.d28 = function (basisName, degree) {
    return this.p27_1.h1k(basisName, degree);
  };
  DerivationDGLieAlgebra.prototype.h1k = function (basisName, degree) {
    var tmp = basisName instanceof DirectSumBasis ? basisName : THROW_CCE();
    return this.d28(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  DerivationDGLieAlgebra.prototype.e28 = function (vector, degree) {
    return this.p27_1.f1k(vector, degree);
  };
  DerivationDGLieAlgebra.prototype.f1k = function (vector, degree) {
    return this.e28(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  DerivationDGLieAlgebra.prototype.f28 = function (vector, degree) {
    return this.p27_1.g1k(vector, degree);
  };
  DerivationDGLieAlgebra.prototype.g1k = function (vector, degree) {
    return this.f28(vector, degree);
  };
  DerivationDGLieAlgebra.prototype.b1k = function (degree) {
    return this.p27_1.b1k(degree);
  };
  DerivationDGLieAlgebra.prototype.l = function (degree) {
    return this.p27_1.l(degree);
  };
  DerivationDGLieAlgebra.prototype.i1k = function (degree) {
    return this.p27_1.i1k(degree);
  };
  DerivationDGLieAlgebra.prototype.j1k = function (degree) {
    return this.p27_1.j1k(degree);
  };
  DerivationDGLieAlgebra.prototype.k1k = function (degree) {
    return this.p27_1.k1k(degree);
  };
  DerivationDGLieAlgebra.prototype.g28 = function (scalar, gVector) {
    return this.p27_1.q1k(scalar, gVector);
  };
  DerivationDGLieAlgebra.prototype.q1k = function (scalar, gVector) {
    return this.g28(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  DerivationDGLieAlgebra.prototype.h28 = function (a, b) {
    return this.p27_1.r1k(a, b);
  };
  DerivationDGLieAlgebra.prototype.r1k = function (a, b) {
    return this.h28(a, b);
  };
  DerivationDGLieAlgebra.prototype.i28 = function (a, b) {
    return this.p27_1.s1k(a, b);
  };
  DerivationDGLieAlgebra.prototype.s1k = function (a, b) {
    return this.i28(a, b);
  };
  DerivationDGLieAlgebra.prototype.j28 = function (a, b) {
    return this.p27_1.p1k(a, b);
  };
  DerivationDGLieAlgebra.prototype.p1k = function (a, b) {
    return this.j28(a, b);
  };
  DerivationDGLieAlgebra.prototype.c1n = function (printConfig) {
    var gLieAlgebraString = this.r27_1.c1n(printConfig);
    return '(' + gLieAlgebraString + ', d)';
  };
  DerivationDGLieAlgebra.prototype.toString = function () {
    return '(' + this.r27_1 + ', d)';
  };
  DerivationDGLieAlgebra.$metadata$ = classMeta('DerivationDGLieAlgebra', [DGLieAlgebra, Printable]);
  function DerivationDGLieAlgebraFactory(freeDGAlgebra) {
    this.s27_1 = freeDGAlgebra;
    this.t27_1 = this.s27_1.u1j();
    this.u27_1 = this.s27_1.y1j();
    this.v27_1 = Companion_getInstance_38().n28(this.s27_1);
    var tmp = this;
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.v27_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.free.DerivationDGLieAlgebraFactory.differential.<anonymous>' call
    var differentialAsGVector = this.v27_1.o28(this.s27_1.k1j());
    tmp$ret$0 = tmp0_run.p1p(differentialAsGVector);
    tmp$ret$1 = tmp$ret$0;
    tmp.w27_1 = tmp$ret$1;
  }
  DerivationDGLieAlgebraFactory.prototype.y25 = function () {
    return this.s27_1;
  };
  DerivationDGLieAlgebraFactory.prototype.o1p = function () {
    return this.v27_1;
  };
  DerivationDGLieAlgebraFactory.$metadata$ = classMeta('DerivationDGLieAlgebraFactory');
  function Companion_37() {
    Companion_instance_37 = this;
  }
  Companion_37.prototype.n28 = function (freeGAlgebra) {
    var factory = new DerivationGLieAlgebraFactory(freeGAlgebra);
    return new DerivationGLieAlgebra(factory);
  };
  Companion_37.$metadata$ = objectMeta('Companion');
  var Companion_instance_37;
  function Companion_getInstance_38() {
    if (Companion_instance_37 == null)
      new Companion_37();
    return Companion_instance_37;
  }
  function DerivationGLieAlgebraFactory$getVectorSpace$ref($boundThis) {
    var l = function (p0) {
      return $boundThis.u28(p0);
    };
    l.callableName = 'getVectorSpace';
    return l;
  }
  function DerivationGLieAlgebraFactory$getMultiplication$ref($boundThis) {
    var l = function (p0, p1) {
      return $boundThis.v28(p0, p1);
    };
    l.callableName = 'getMultiplication';
    return l;
  }
  function DerivationGLieAlgebraFactory$getInternalPrintConfig$ref($boundThis) {
    var l = function (p0) {
      return $boundThis.w28(p0);
    };
    l.callableName = 'getInternalPrintConfig';
    return l;
  }
  function DerivationGLieAlgebra(factory) {
    Companion_getInstance_38();
    this.k28_1 = factory;
    var tmp = this;
    var tmp_0 = Companion_getInstance_19();
    var tmp_1 = DerivationGLieAlgebraFactory$getVectorSpace$ref(factory);
    var tmp_2 = DerivationGLieAlgebraFactory$getMultiplication$ref(factory);
    var tmp_3 = DerivationGLieAlgebraFactory$getInternalPrintConfig$ref(factory);
    tmp.l28_1 = tmp_0.u1u(factory.q28_1, factory.r28_1, factory.s28_1, tmp_1, tmp_2, tmp_3, null, null, 192, null);
    this.m28_1 = this.k28_1.p28_1;
  }
  DerivationGLieAlgebra.prototype.d1k = function () {
    return this.l28_1.d1k();
  };
  DerivationGLieAlgebra.prototype.c1j = function () {
    return this.l28_1.c1j();
  };
  DerivationGLieAlgebra.prototype.y1j = function () {
    return this.l28_1.y1j();
  };
  DerivationGLieAlgebra.prototype.e1k = function () {
    return this.l28_1.e1k();
  };
  DerivationGLieAlgebra.prototype.z1j = function () {
    return this.l28_1.z1j();
  };
  DerivationGLieAlgebra.prototype.a1k = function () {
    return this.l28_1.a1k();
  };
  DerivationGLieAlgebra.prototype.u1j = function () {
    return this.l28_1.u1j();
  };
  DerivationGLieAlgebra.prototype.j1j = function () {
    return this.l28_1.j1j();
  };
  DerivationGLieAlgebra.prototype.zc = function () {
    return this.l28_1.zc();
  };
  DerivationGLieAlgebra.prototype.x1j = function () {
    return this.l28_1.x1j();
  };
  DerivationGLieAlgebra.prototype.c1k = function () {
    return this.l28_1.c1k();
  };
  DerivationGLieAlgebra.prototype.u1k = function () {
    return this.l28_1.u1k();
  };
  DerivationGLieAlgebra.prototype.x27 = function (a, b) {
    return this.l28_1.o1k(a, b);
  };
  DerivationGLieAlgebra.prototype.o1k = function (a, b) {
    return this.x27(a, b);
  };
  DerivationGLieAlgebra.prototype.z27 = function (gVector) {
    return this.l28_1.m1k(gVector);
  };
  DerivationGLieAlgebra.prototype.m1k = function (gVector) {
    return this.z27(gVector);
  };
  DerivationGLieAlgebra.prototype.a28 = function (gVector) {
    return this.l28_1.n1k(gVector);
  };
  DerivationGLieAlgebra.prototype.n1k = function (gVector) {
    return this.a28(gVector);
  };
  DerivationGLieAlgebra.prototype.b28 = function (gVectorOrZero, degree) {
    return this.l28_1.l1k(gVectorOrZero, degree);
  };
  DerivationGLieAlgebra.prototype.l1k = function (gVectorOrZero, degree) {
    return this.b28(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  DerivationGLieAlgebra.prototype.c28 = function (a, b) {
    return this.l28_1.t1k(a, b);
  };
  DerivationGLieAlgebra.prototype.t1k = function (a, b) {
    return this.c28(a, b);
  };
  DerivationGLieAlgebra.prototype.d28 = function (basisName, degree) {
    return this.l28_1.h1k(basisName, degree);
  };
  DerivationGLieAlgebra.prototype.h1k = function (basisName, degree) {
    var tmp = basisName instanceof DirectSumBasis ? basisName : THROW_CCE();
    return this.d28(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  DerivationGLieAlgebra.prototype.e28 = function (vector, degree) {
    return this.l28_1.f1k(vector, degree);
  };
  DerivationGLieAlgebra.prototype.f1k = function (vector, degree) {
    return this.e28(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  DerivationGLieAlgebra.prototype.f28 = function (vector, degree) {
    return this.l28_1.g1k(vector, degree);
  };
  DerivationGLieAlgebra.prototype.g1k = function (vector, degree) {
    return this.f28(vector, degree);
  };
  DerivationGLieAlgebra.prototype.b1k = function (degree) {
    return this.l28_1.b1k(degree);
  };
  DerivationGLieAlgebra.prototype.l = function (degree) {
    return this.l28_1.l(degree);
  };
  DerivationGLieAlgebra.prototype.i1k = function (degree) {
    return this.l28_1.i1k(degree);
  };
  DerivationGLieAlgebra.prototype.j1k = function (degree) {
    return this.l28_1.j1k(degree);
  };
  DerivationGLieAlgebra.prototype.k1k = function (degree) {
    return this.l28_1.k1k(degree);
  };
  DerivationGLieAlgebra.prototype.g28 = function (scalar, gVector) {
    return this.l28_1.q1k(scalar, gVector);
  };
  DerivationGLieAlgebra.prototype.q1k = function (scalar, gVector) {
    return this.g28(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  DerivationGLieAlgebra.prototype.h28 = function (a, b) {
    return this.l28_1.r1k(a, b);
  };
  DerivationGLieAlgebra.prototype.r1k = function (a, b) {
    return this.h28(a, b);
  };
  DerivationGLieAlgebra.prototype.i28 = function (a, b) {
    return this.l28_1.s1k(a, b);
  };
  DerivationGLieAlgebra.prototype.s1k = function (a, b) {
    return this.i28(a, b);
  };
  DerivationGLieAlgebra.prototype.j28 = function (a, b) {
    return this.l28_1.p1k(a, b);
  };
  DerivationGLieAlgebra.prototype.p1k = function (a, b) {
    return this.j28(a, b);
  };
  DerivationGLieAlgebra.prototype.toString = function () {
    return this.l28_1.toString();
  };
  DerivationGLieAlgebra.prototype.o28 = function (derivation) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = this.m28_1.i1o();
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.DerivationGLieAlgebra.derivationToGVector.<anonymous>' call
      tmp$ret$0 = derivation.o1j(item).t1q_1;
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var valueList = tmp$ret$2;
    var vector = this.k28_1.u28(derivation.q1n()).h29(valueList);
    return this.e28(vector, derivation.q1n());
  };
  DerivationGLieAlgebra.prototype.c1n = function (printConfig) {
    var tmp0_subject = printConfig.b1x_1;
    var tmp0 = tmp0_subject.d2_1;
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = 'Der';
        break;
      case 1:
        tmp = '\\mathrm{Der}';
        break;
      case 2:
        throw UnsupportedOperationException_init_$Create$('DerivationGLieAlgebra does not support PrintType.CODE');
      default:
        noWhenBranchMatchedException();
        break;
    }
    var der = tmp;
    return der + '(' + this.m28_1.i29().c1n(printConfig) + ')';
  };
  DerivationGLieAlgebra.$metadata$ = classMeta('DerivationGLieAlgebra', [GLieAlgebra, Printable]);
  function generateGetValue($this, target) {
    return DerivationGLieAlgebraFactory$generateGetValue$lambda($this, target);
  }
  function toDerivation(_this__u8e3s4, $this) {
    var freeGAlgebra = $this.p28_1;
    var size = freeGAlgebra.t23().i();
    var basisDegree = _this__u8e3s4.k29_1.q1n();
    var index = _this__u8e3s4.j29_1;
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = freeGAlgebra.y1j().c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.free.DerivationGLieAlgebraFactory.toDerivation.<anonymous>' call
    tmp$ret$0 = tmp0_run.f1u(basisDegree, freeGAlgebra.t23().l(index).q29_1);
    tmp$ret$1 = tmp$ret$0;
    var derivationDegree = tmp$ret$1;
    var tmp$ret$4;
    // Inline function 'kotlin.collections.map' call
    var tmp1_map = until(0, size);
    var tmp$ret$3;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
    var inductionVariable = tmp1_map.m1_1;
    var last = tmp1_map.n1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$2;
        // Inline function 'com.github.shwaka.kohomology.free.DerivationGLieAlgebraFactory.toDerivation.<anonymous>' call
        var tmp;
        if (item === index) {
          tmp = freeGAlgebra.h1k(_this__u8e3s4.k29_1, basisDegree);
        } else {
          tmp = freeGAlgebra.u1k();
        }
        tmp$ret$2 = tmp;
        tmp0_mapTo.a(tmp$ret$2);
      }
       while (!(item === last));
    tmp$ret$3 = tmp0_mapTo;
    tmp$ret$4 = tmp$ret$3;
    var valueList = tmp$ret$4;
    return freeGAlgebra.r29(valueList, derivationDegree);
  }
  function DerivationGLieAlgebraFactory$getInternalPrintConfig$lambda($indeterminateList, $p) {
    return function (directSumBasis) {
      var from = $indeterminateList.l(directSumBasis.j29_1);
      var to = directSumBasis.k29_1;
      return '(' + $p.u29(from) + ', ' + $p.u29(to) + ')';
    };
  }
  function DerivationGLieAlgebraFactory$getInternalPrintConfig$ref_0($boundThis) {
    var l = function (p0) {
      return $boundThis.w28(p0);
    };
    l.callableName = 'getInternalPrintConfig';
    return l;
  }
  function DerivationGLieAlgebraFactory$generateGetValue$lambda(this$0, $target) {
    return function (derivationBasis1, derivationBasis2) {
      var derivation1 = toDerivation(derivationBasis1, this$0);
      var derivation2 = toDerivation(derivationBasis2, this$0);
      var sign = derivation1.q1n().g22(derivation2.q1n());
      var tmp$ret$7;
      // Inline function 'kotlin.collections.map' call
      var tmp$ret$4;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.p28_1.c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.free.DerivationGLieAlgebraFactory.generateGetValue.<anonymous>.<anonymous>' call
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = this$0.p28_1.i1o();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var tmp0_iterator = tmp0_map.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.free.DerivationGLieAlgebraFactory.generateGetValue.<anonymous>.<anonymous>.<anonymous>' call
        tmp$ret$0 = tmp0_run.u1l(derivation1.o1j(derivation2.o1j(item)), tmp0_run.i1l(sign, derivation2.o1j(derivation1.o1j(item))));
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp$ret$4 = tmp$ret$3;
      var tmp1_map = tmp$ret$4;
      var tmp$ret$6;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
      var tmp0_iterator_0 = tmp1_map.f();
      while (tmp0_iterator_0.g()) {
        var item_0 = tmp0_iterator_0.h();
        var tmp$ret$5;
        // Inline function 'com.github.shwaka.kohomology.free.DerivationGLieAlgebraFactory.generateGetValue.<anonymous>.<anonymous>' call
        tmp$ret$5 = item_0.t1q_1;
        tmp0_mapTo_0.a(tmp$ret$5);
      }
      tmp$ret$6 = tmp0_mapTo_0;
      tmp$ret$7 = tmp$ret$6;
      var valueList = tmp$ret$7;
      return $target.h29(valueList);
    };
  }
  function DerivationGLieAlgebraFactory(freeGAlgebra) {
    this.p28_1 = freeGAlgebra;
    this.q28_1 = this.p28_1.u1j();
    this.r28_1 = this.p28_1.y1j();
    this.s28_1 = 'Der(' + this.p28_1.zc() + ')';
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp$ret$0 = LinkedHashMap_init_$Create$();
    tmp.t28_1 = tmp$ret$0;
  }
  DerivationGLieAlgebraFactory.prototype.v29 = function () {
    return this.p28_1;
  };
  DerivationGLieAlgebraFactory.prototype.y1j = function () {
    return this.r28_1;
  };
  DerivationGLieAlgebraFactory.prototype.w28 = function (printConfig) {
    var p = Printer_init_$Create$(printConfig);
    var indeterminateList = this.p28_1.t23();
    var tmp = DerivationGLieAlgebraFactory$getInternalPrintConfig$lambda(indeterminateList, p);
    return InternalPrintConfig_init_$Create$(null, tmp, null, 5, null);
  };
  DerivationGLieAlgebraFactory.prototype.u28 = function (derivationDegree) {
    var tmp$ret$9;
    // Inline function 'kotlin.collections.getOrPut' call
    var tmp0_getOrPut = this.t28_1;
    var value = tmp0_getOrPut.t(derivationDegree);
    var tmp;
    if (value == null) {
      var tmp$ret$8;
      // Inline function 'com.github.shwaka.kohomology.free.DerivationGLieAlgebraFactory.getVectorSpace.<anonymous>' call
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = this.p28_1.t23();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var tmp0_iterator = tmp0_map.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.free.DerivationGLieAlgebraFactory.getVectorSpace.<anonymous>.<anonymous>' call
        tmp$ret$0 = item.q29_1;
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      var generatorDegreeList = tmp$ret$2;
      var tmp$ret$7;
      // Inline function 'kotlin.run' call
      var tmp1_run = this.r28_1.c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$6;
      // Inline function 'com.github.shwaka.kohomology.free.DerivationGLieAlgebraFactory.getVectorSpace.<anonymous>.<anonymous>' call
      var tmp$ret$5;
      // Inline function 'kotlin.collections.map' call
      var tmp$ret$4;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(generatorDegreeList, 10));
      var tmp0_iterator_0 = generatorDegreeList.f();
      while (tmp0_iterator_0.g()) {
        var item_0 = tmp0_iterator_0.h();
        var tmp$ret$3;
        // Inline function 'com.github.shwaka.kohomology.free.DerivationGLieAlgebraFactory.getVectorSpace.<anonymous>.<anonymous>.<anonymous>' call
        tmp$ret$3 = this.p28_1.b1k(tmp1_run.e1j(item_0, derivationDegree));
        tmp0_mapTo_0.a(tmp$ret$3);
      }
      tmp$ret$4 = tmp0_mapTo_0;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp$ret$7 = tmp$ret$6;
      var vectorSpaceList = tmp$ret$7;
      var tmp_0 = this.p28_1.u1j();
      tmp$ret$8 = DirectSum_init_$Create$(vectorSpaceList, tmp_0, DerivationGLieAlgebraFactory$getInternalPrintConfig$ref_0(this));
      var answer = tmp$ret$8;
      tmp0_getOrPut.u(derivationDegree, answer);
      tmp = answer;
    } else {
      tmp = value;
    }
    tmp$ret$9 = tmp;
    return tmp$ret$9;
  };
  DerivationGLieAlgebraFactory.prototype.v28 = function (derivationDegree1, derivationDegree2) {
    var source1 = this.u28(derivationDegree1);
    var source2 = this.u28(derivationDegree2);
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.r28_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.free.DerivationGLieAlgebraFactory.getMultiplication.<anonymous>' call
    tmp$ret$0 = tmp0_run.e1j(derivationDegree1, derivationDegree2);
    tmp$ret$1 = tmp$ret$0;
    var target = this.u28(tmp$ret$1);
    return ValueBilinearMap_init_$Create$(source1, source2, target, this.q28_1, generateGetValue(this, target));
  };
  DerivationGLieAlgebraFactory.$metadata$ = classMeta('DerivationGLieAlgebraFactory');
  function InternalPrintConfig$Companion$default$ref($boundThis) {
    var l = function (p0) {
      return $boundThis.r1u(p0);
    };
    l.callableName = 'default';
    return l;
  }
  function FreeDGAlgebra$Companion$fromMap$lambda($getDifferentialValueMap) {
    return function ($this$null, generatorList) {
      var valueMap = $getDifferentialValueMap($this$null, generatorList);
      var tmp$ret$4;
      // Inline function 'kotlin.collections.map' call
      var tmp$ret$3;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(generatorList, 10));
      var tmp0_iterator = generatorList.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$2;
        // Inline function 'com.github.shwaka.kohomology.free.Companion.fromMap.<anonymous>.<anonymous>' call
        var tmp$ret$1;
        // Inline function 'kotlin.collections.getOrElse' call
        var tmp0_elvis_lhs = valueMap.t(item);
        var tmp;
        if (tmp0_elvis_lhs == null) {
          var tmp$ret$0;
          // Inline function 'com.github.shwaka.kohomology.free.Companion.fromMap.<anonymous>.<anonymous>.<anonymous>' call
          tmp$ret$0 = $this$null.u1k();
          tmp = tmp$ret$0;
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        tmp$ret$2 = tmp$ret$1;
        tmp0_mapTo.a(tmp$ret$2);
      }
      tmp$ret$3 = tmp0_mapTo;
      tmp$ret$4 = tmp$ret$3;
      return tmp$ret$4;
    };
  }
  function InternalPrintConfig$Companion$default$ref_0($boundThis) {
    var l = function (p0) {
      return $boundThis.r1u(p0);
    };
    l.callableName = 'default';
    return l;
  }
  function FreeDGAlgebra$Companion$fromList$lambda($generatorList) {
    return function ($this$null, it) {
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault($generatorList, 10));
      var tmp0_iterator = $generatorList.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.free.Companion.fromList.<anonymous>.<anonymous>' call
        tmp$ret$0 = $this$null.z29(item.y29_1);
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      return tmp$ret$2;
    };
  }
  function Companion_38() {
    Companion_instance_38 = this;
  }
  Companion_38.prototype.a2a = function (gAlgebra, differential) {
    return new FreeDGAlgebraImpl(gAlgebra, differential);
  };
  Companion_38.prototype.b2a = function (matrixSpace, degreeGroup, indeterminateList, getInternalPrintConfig, getDifferentialValueList) {
    var freeGAlgebra = Companion_getInstance_41().c2a(matrixSpace, degreeGroup, indeterminateList, getInternalPrintConfig);
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = freeGAlgebra.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.free.Companion.fromList.<anonymous>' call
    tmp$ret$0 = getDifferentialValueList(tmp0_run, freeGAlgebra.i1o());
    tmp$ret$1 = tmp$ret$0;
    var valueList = tmp$ret$1;
    var differential = freeGAlgebra.d2a(valueList, 1);
    var inductionVariable = 0;
    var last = valueList.i() - 1 | 0;
    if (inductionVariable <= last)
      $l$loop: do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var value = valueList.l(i);
        if (!(value instanceof GVector))
          continue $l$loop;
        var tmp$ret$2;
        $l$block_0: {
          // Inline function 'kotlin.collections.any' call
          var tmp1_any = until(i, valueList.i());
          var tmp;
          if (isInterface(tmp1_any, Collection)) {
            tmp = tmp1_any.p();
          } else {
            tmp = false;
          }
          if (tmp) {
            tmp$ret$2 = false;
            break $l$block_0;
          }
          var inductionVariable_0 = tmp1_any.m1_1;
          var last_0 = tmp1_any.n1_1;
          if (inductionVariable_0 <= last_0)
            do {
              var element = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              var tmp$ret$3;
              // Inline function 'com.github.shwaka.kohomology.free.Companion.fromList.<anonymous>' call
              tmp$ret$3 = freeGAlgebra.e2a(element, value);
              if (tmp$ret$3) {
                tmp$ret$2 = true;
                break $l$block_0;
              }
            }
             while (!(element === last_0));
          tmp$ret$2 = false;
        }
        if (tmp$ret$2) {
          throw IllegalArgumentException_init_$Create$('The generator list of a FreeDGAlgebra should be sorted along a Sullivan filtration');
        }
        var dValue = differential.o1j(value);
        if (dValue.y1s())
          throw IllegalArgumentException_init_$Create$('d(' + indeterminateList.l(i) + ') must be a cocycle, ' + ('but your input is ' + value + ' with d(d(' + indeterminateList.l(i) + ')) = d(' + value + ') = ' + dValue + ' (!= 0)'));
      }
       while (inductionVariable <= last);
    return new FreeDGAlgebraImpl(freeGAlgebra, differential);
  };
  Companion_38.prototype.f2a = function (matrixSpace, degreeGroup, indeterminateList, getDifferentialValueList) {
    var tmp = Companion_getInstance_39();
    return tmp.b2a(matrixSpace, degreeGroup, indeterminateList, InternalPrintConfig$Companion$default$ref(Companion_getInstance_68()), getDifferentialValueList);
  };
  Companion_38.prototype.g2a = function (matrixSpace, degreeGroup, indeterminateList, getInternalPrintConfig, getDifferentialValueMap) {
    var getDifferentialValueList = FreeDGAlgebra$Companion$fromMap$lambda(getDifferentialValueMap);
    return Companion_getInstance_39().b2a(matrixSpace, degreeGroup, indeterminateList, getInternalPrintConfig, getDifferentialValueList);
  };
  Companion_38.prototype.h2a = function (matrixSpace, indeterminateList, getInternalPrintConfig, getDifferentialValueMap) {
    return Companion_getInstance_39().g2a(matrixSpace, IntDegreeGroup_getInstance(), indeterminateList, getInternalPrintConfig, getDifferentialValueMap);
  };
  Companion_38.prototype.n25 = function (matrixSpace, indeterminateList, getInternalPrintConfig, getDifferentialValueMap, $mask0, $handler) {
    if (!(($mask0 & 4) === 0)) {
      getInternalPrintConfig = InternalPrintConfig$Companion$default$ref_0(Companion_getInstance_68());
    }
    return this.h2a(matrixSpace, indeterminateList, getInternalPrintConfig, getDifferentialValueMap);
  };
  Companion_38.prototype.i2a = function (matrixSpace, degreeGroup, generatorList) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(generatorList, 10));
    var tmp0_iterator = generatorList.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.Companion.fromList.<anonymous>' call
      tmp$ret$0 = item.j2a();
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var indeterminateList = tmp$ret$2;
    var getDifferentialValueList = FreeDGAlgebra$Companion$fromList$lambda(generatorList);
    return Companion_getInstance_39().f2a(matrixSpace, degreeGroup, indeterminateList, getDifferentialValueList);
  };
  Companion_38.prototype.k2a = function (matrixSpace, generatorList) {
    return Companion_getInstance_39().i2a(matrixSpace, IntDegreeGroup_getInstance(), generatorList);
  };
  Companion_38.prototype.l2a = function (matrixSpace, json) {
    var generatorList = jsonToGeneratorList(json);
    return Companion_getInstance_39().k2a(matrixSpace, generatorList);
  };
  Companion_38.$metadata$ = objectMeta('Companion');
  var Companion_instance_38;
  function Companion_getInstance_39() {
    if (Companion_instance_38 == null)
      new Companion_38();
    return Companion_instance_38;
  }
  function FreeDGAlgebra() {
  }
  FreeDGAlgebra.$metadata$ = interfaceMeta('FreeDGAlgebra', [DGAlgebra, FreeGAlgebra]);
  function Companion_39() {
    Companion_instance_39 = this;
  }
  Companion_39.prototype.n27 = function (dgAlgebra) {
    return new FreeDGAlgebraContextImpl(dgAlgebra);
  };
  Companion_39.$metadata$ = objectMeta('Companion');
  var Companion_instance_39;
  function Companion_getInstance_40() {
    if (Companion_instance_39 == null)
      new Companion_39();
    return Companion_instance_39;
  }
  function FreeDGAlgebraContext() {
  }
  FreeDGAlgebraContext.$metadata$ = interfaceMeta('FreeDGAlgebraContext', [DGAlgebraContext, FreeGAlgebraContext]);
  function _get_dgAlgebra__ci9nm4($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = dgAlgebra$factory();
    tmp$ret$0 = $this.c2b_1.f1();
    return tmp$ret$0;
  }
  function FreeDGAlgebraImpl$dgAlgebra$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_1().g1j(this$0.s2a_1, this$0.t2a_1);
    };
  }
  function FreeDGAlgebraImpl$cohomology$delegate$lambda(this$0) {
    return function () {
      return _get_dgAlgebra__ci9nm4(this$0).i1j();
    };
  }
  function FreeDGAlgebraImpl(underlyingGAlgebra, differential) {
    this.s2a_1 = underlyingGAlgebra;
    this.t2a_1 = differential;
    this.u2a_1 = Companion_getInstance_40().n27(this);
    this.v2a_1 = this.s2a_1.v1k();
    this.w2a_1 = true;
    this.x2a_1 = this.s2a_1.u1j();
    this.y2a_1 = this.s2a_1.j1j();
    this.z2a_1 = this.s2a_1.y1j();
    this.a2b_1 = this.s2a_1.t23();
    this.b2b_1 = this.s2a_1.e2b();
    var tmp = this;
    tmp.c2b_1 = lazy(FreeDGAlgebraImpl$dgAlgebra$delegate$lambda(this));
    var tmp_0 = this;
    tmp_0.d2b_1 = lazy(FreeDGAlgebraImpl$cohomology$delegate$lambda(this));
  }
  FreeDGAlgebraImpl.prototype.i29 = function () {
    return this.s2a_1;
  };
  FreeDGAlgebraImpl.prototype.k1j = function () {
    return this.t2a_1;
  };
  FreeDGAlgebraImpl.prototype.d1k = function () {
    return this.s2a_1.d1k();
  };
  FreeDGAlgebraImpl.prototype.e1k = function () {
    return this.s2a_1.e1k();
  };
  FreeDGAlgebraImpl.prototype.z1j = function () {
    return this.s2a_1.z1j();
  };
  FreeDGAlgebraImpl.prototype.a1k = function () {
    return this.s2a_1.a1k();
  };
  FreeDGAlgebraImpl.prototype.zc = function () {
    return this.s2a_1.zc();
  };
  FreeDGAlgebraImpl.prototype.x1j = function () {
    return this.s2a_1.x1j();
  };
  FreeDGAlgebraImpl.prototype.c1k = function () {
    return this.s2a_1.c1k();
  };
  FreeDGAlgebraImpl.prototype.u1k = function () {
    return this.s2a_1.u1k();
  };
  FreeDGAlgebraImpl.prototype.f2b = function (a, b) {
    return this.s2a_1.o1k(a, b);
  };
  FreeDGAlgebraImpl.prototype.o1k = function (a, b) {
    return this.f2b(a, b);
  };
  FreeDGAlgebraImpl.prototype.g2b = function (a, b) {
    return this.f2b(a, b);
  };
  FreeDGAlgebraImpl.prototype.h2b = function (gVector) {
    return this.s2a_1.m1k(gVector);
  };
  FreeDGAlgebraImpl.prototype.m1k = function (gVector) {
    return this.h2b(gVector);
  };
  FreeDGAlgebraImpl.prototype.i2b = function (gVector) {
    return this.h2b(gVector);
  };
  FreeDGAlgebraImpl.prototype.j2b = function (gVector) {
    return this.s2a_1.n1k(gVector);
  };
  FreeDGAlgebraImpl.prototype.n1k = function (gVector) {
    return this.j2b(gVector);
  };
  FreeDGAlgebraImpl.prototype.k2b = function (gVector) {
    return this.j2b(gVector);
  };
  FreeDGAlgebraImpl.prototype.l2b = function (gVectorOrZero, degree) {
    return this.s2a_1.l1k(gVectorOrZero, degree);
  };
  FreeDGAlgebraImpl.prototype.l1k = function (gVectorOrZero, degree) {
    return this.l2b(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  FreeDGAlgebraImpl.prototype.m2b = function (gVectorOrZero, degree) {
    return this.l2b(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  FreeDGAlgebraImpl.prototype.n2b = function (a, b) {
    return this.s2a_1.t1k(a, b);
  };
  FreeDGAlgebraImpl.prototype.t1k = function (a, b) {
    return this.n2b(a, b);
  };
  FreeDGAlgebraImpl.prototype.o2b = function (a, b) {
    return this.n2b(a, b);
  };
  FreeDGAlgebraImpl.prototype.p2b = function (basisName, degree) {
    return this.s2a_1.h1k(basisName, degree);
  };
  FreeDGAlgebraImpl.prototype.h1k = function (basisName, degree) {
    var tmp = basisName instanceof Monomial ? basisName : THROW_CCE();
    return this.p2b(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  FreeDGAlgebraImpl.prototype.q2b = function (basisName, degree) {
    var tmp = basisName instanceof Monomial ? basisName : THROW_CCE();
    return this.p2b(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  FreeDGAlgebraImpl.prototype.r2b = function (vector, degree) {
    return this.s2a_1.f1k(vector, degree);
  };
  FreeDGAlgebraImpl.prototype.f1k = function (vector, degree) {
    return this.r2b(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  FreeDGAlgebraImpl.prototype.s2b = function (vector, degree) {
    return this.r2b(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  FreeDGAlgebraImpl.prototype.t2b = function (vector, degree) {
    return this.s2a_1.g1k(vector, degree);
  };
  FreeDGAlgebraImpl.prototype.g1k = function (vector, degree) {
    return this.t2b(vector, degree);
  };
  FreeDGAlgebraImpl.prototype.u2b = function (vector, degree) {
    return this.t2b(vector, degree);
  };
  FreeDGAlgebraImpl.prototype.b1k = function (degree) {
    return this.s2a_1.b1k(degree);
  };
  FreeDGAlgebraImpl.prototype.l = function (degree) {
    return this.s2a_1.l(degree);
  };
  FreeDGAlgebraImpl.prototype.i1k = function (degree) {
    return this.s2a_1.i1k(degree);
  };
  FreeDGAlgebraImpl.prototype.j1k = function (degree) {
    return this.s2a_1.j1k(degree);
  };
  FreeDGAlgebraImpl.prototype.k1k = function (degree) {
    return this.s2a_1.k1k(degree);
  };
  FreeDGAlgebraImpl.prototype.v2b = function (scalar, gVector) {
    return this.s2a_1.q1k(scalar, gVector);
  };
  FreeDGAlgebraImpl.prototype.q1k = function (scalar, gVector) {
    return this.v2b(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  FreeDGAlgebraImpl.prototype.w2b = function (scalar, gVector) {
    return this.v2b(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  FreeDGAlgebraImpl.prototype.x2b = function (a, b) {
    return this.s2a_1.p1k(a, b);
  };
  FreeDGAlgebraImpl.prototype.p1k = function (a, b) {
    return this.x2b(a, b);
  };
  FreeDGAlgebraImpl.prototype.y2b = function (a, b) {
    return this.x2b(a, b);
  };
  FreeDGAlgebraImpl.prototype.c1j = function () {
    return this.u2a_1;
  };
  FreeDGAlgebraImpl.prototype.v1k = function () {
    return this.v2a_1;
  };
  FreeDGAlgebraImpl.prototype.w1k = function () {
    return this.w2a_1;
  };
  FreeDGAlgebraImpl.prototype.u1j = function () {
    return this.x2a_1;
  };
  FreeDGAlgebraImpl.prototype.j1j = function () {
    return this.y2a_1;
  };
  FreeDGAlgebraImpl.prototype.y1j = function () {
    return this.z2a_1;
  };
  FreeDGAlgebraImpl.prototype.t23 = function () {
    return this.a2b_1;
  };
  FreeDGAlgebraImpl.prototype.e2b = function () {
    return this.b2b_1;
  };
  FreeDGAlgebraImpl.prototype.i1j = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = cohomology$factory_4();
    tmp$ret$0 = this.d2b_1.f1();
    return tmp$ret$0;
  };
  FreeDGAlgebraImpl.prototype.toString = function () {
    var tmp = PrintType_PLAIN_getInstance();
    return this.c1n(PrintConfig_init_$Create$(tmp, null, null, null, null, 30, null));
  };
  FreeDGAlgebraImpl.prototype.c1n = function (printConfig) {
    return '(' + this.s2a_1.c1n(printConfig) + ', d)';
  };
  FreeDGAlgebraImpl.$metadata$ = classMeta('FreeDGAlgebraImpl', [FreeDGAlgebra, GVectorSpace]);
  function FreeDGAlgebraContextImpl(dgAlgebra) {
    this.z2b_1 = dgAlgebra;
    this.a2c_1 = Companion_getInstance_2().a1l(dgAlgebra);
    this.b2c_1 = this.z2b_1;
  }
  FreeDGAlgebraContextImpl.prototype.n1j = function () {
    return this.a2c_1.n1j();
  };
  FreeDGAlgebraContextImpl.prototype.b1l = function () {
    return this.a2c_1.b1l();
  };
  FreeDGAlgebraContextImpl.prototype.n1l = function () {
    return this.a2c_1.n1l();
  };
  FreeDGAlgebraContextImpl.prototype.e1k = function () {
    return this.a2c_1.e1k();
  };
  FreeDGAlgebraContextImpl.prototype.p1m = function () {
    return this.a2c_1.p1m();
  };
  FreeDGAlgebraContextImpl.prototype.p1l = function () {
    return this.a2c_1.p1l();
  };
  FreeDGAlgebraContextImpl.prototype.x1j = function () {
    return this.a2c_1.x1j();
  };
  FreeDGAlgebraContextImpl.prototype.n1m = function () {
    return this.a2c_1.n1m();
  };
  FreeDGAlgebraContextImpl.prototype.v1k = function () {
    return this.a2c_1.v1k();
  };
  FreeDGAlgebraContextImpl.prototype.m1m = function () {
    return this.a2c_1.m1m();
  };
  FreeDGAlgebraContextImpl.prototype.u1k = function () {
    return this.a2c_1.u1k();
  };
  FreeDGAlgebraContextImpl.prototype.c2c = function (_this__u8e3s4) {
    return this.a2c_1.o1l(_this__u8e3s4);
  };
  FreeDGAlgebraContextImpl.prototype.o1l = function (_this__u8e3s4) {
    return this.c2c(_this__u8e3s4);
  };
  FreeDGAlgebraContextImpl.prototype.f1m = function (_this__u8e3s4, other) {
    return this.a2c_1.f1m(_this__u8e3s4, other);
  };
  FreeDGAlgebraContextImpl.prototype.g1m = function (_this__u8e3s4, other) {
    return this.a2c_1.g1m(_this__u8e3s4, other);
  };
  FreeDGAlgebraContextImpl.prototype.e1m = function (_this__u8e3s4, ind) {
    return this.a2c_1.e1m(_this__u8e3s4, ind);
  };
  FreeDGAlgebraContextImpl.prototype.h1m = function (_this__u8e3s4) {
    return this.a2c_1.h1m(_this__u8e3s4);
  };
  FreeDGAlgebraContextImpl.prototype.x1l = function (_this__u8e3s4, other) {
    return this.a2c_1.x1l(_this__u8e3s4, other);
  };
  FreeDGAlgebraContextImpl.prototype.w1l = function (_this__u8e3s4, other) {
    return this.a2c_1.w1l(_this__u8e3s4, other);
  };
  FreeDGAlgebraContextImpl.prototype.d2c = function (_this__u8e3s4, other) {
    return this.a2c_1.u1l(_this__u8e3s4, other);
  };
  FreeDGAlgebraContextImpl.prototype.u1l = function (_this__u8e3s4, other) {
    return this.d2c(_this__u8e3s4, other);
  };
  FreeDGAlgebraContextImpl.prototype.e2c = function (_this__u8e3s4, other) {
    return this.a2c_1.v1l(_this__u8e3s4, other);
  };
  FreeDGAlgebraContextImpl.prototype.v1l = function (_this__u8e3s4, other) {
    return this.e2c(_this__u8e3s4, other);
  };
  FreeDGAlgebraContextImpl.prototype.t1l = function (_this__u8e3s4, other) {
    return this.a2c_1.t1l(_this__u8e3s4, other);
  };
  FreeDGAlgebraContextImpl.prototype.s1l = function (_this__u8e3s4, other) {
    return this.a2c_1.s1l(_this__u8e3s4, other);
  };
  FreeDGAlgebraContextImpl.prototype.f2c = function (_this__u8e3s4, other) {
    return this.a2c_1.q1l(_this__u8e3s4, other);
  };
  FreeDGAlgebraContextImpl.prototype.q1l = function (_this__u8e3s4, other) {
    return this.f2c(_this__u8e3s4, other);
  };
  FreeDGAlgebraContextImpl.prototype.g2c = function (_this__u8e3s4, other) {
    return this.a2c_1.r1l(_this__u8e3s4, other);
  };
  FreeDGAlgebraContextImpl.prototype.r1l = function (_this__u8e3s4, other) {
    return this.g2c(_this__u8e3s4, other);
  };
  FreeDGAlgebraContextImpl.prototype.h2c = function (_this__u8e3s4, exponent) {
    return this.a2c_1.i1m(_this__u8e3s4, exponent);
  };
  FreeDGAlgebraContextImpl.prototype.i1m = function (_this__u8e3s4, exponent) {
    return this.h2c(_this__u8e3s4, exponent);
  };
  FreeDGAlgebraContextImpl.prototype.i2c = function (_this__u8e3s4, exponent) {
    return this.a2c_1.j1m(_this__u8e3s4, exponent);
  };
  FreeDGAlgebraContextImpl.prototype.j1m = function (_this__u8e3s4, exponent) {
    return this.i2c(_this__u8e3s4, exponent);
  };
  FreeDGAlgebraContextImpl.prototype.j2c = function (_this__u8e3s4) {
    return this.a2c_1.o1m(_this__u8e3s4);
  };
  FreeDGAlgebraContextImpl.prototype.o1m = function (_this__u8e3s4) {
    return this.j2c(_this__u8e3s4);
  };
  FreeDGAlgebraContextImpl.prototype.d1m = function (_this__u8e3s4) {
    return this.a2c_1.d1m(_this__u8e3s4);
  };
  FreeDGAlgebraContextImpl.prototype.k2c = function (_this__u8e3s4, degree) {
    return this.a2c_1.c1m(_this__u8e3s4, degree);
  };
  FreeDGAlgebraContextImpl.prototype.c1m = function (_this__u8e3s4, degree) {
    return this.k2c(_this__u8e3s4, (degree == null ? true : isInterface(degree, Degree)) ? degree : THROW_CCE());
  };
  FreeDGAlgebraContextImpl.prototype.l1l = function (_this__u8e3s4, other) {
    return this.a2c_1.l1l(_this__u8e3s4, other);
  };
  FreeDGAlgebraContextImpl.prototype.k1l = function (_this__u8e3s4, numVector) {
    return this.a2c_1.k1l(_this__u8e3s4, numVector);
  };
  FreeDGAlgebraContextImpl.prototype.l2c = function (_this__u8e3s4, gVector) {
    return this.a2c_1.e1l(_this__u8e3s4, gVector);
  };
  FreeDGAlgebraContextImpl.prototype.e1l = function (_this__u8e3s4, gVector) {
    return this.l2c(isInterface(_this__u8e3s4, Scalar) ? _this__u8e3s4 : THROW_CCE(), gVector);
  };
  FreeDGAlgebraContextImpl.prototype.j1l = function (_this__u8e3s4, scalar) {
    return this.a2c_1.j1l(_this__u8e3s4, scalar);
  };
  FreeDGAlgebraContextImpl.prototype.m2c = function (_this__u8e3s4, scalar) {
    return this.a2c_1.d1l(_this__u8e3s4, scalar);
  };
  FreeDGAlgebraContextImpl.prototype.d1l = function (_this__u8e3s4, scalar) {
    return this.m2c(_this__u8e3s4, isInterface(scalar, Scalar) ? scalar : THROW_CCE());
  };
  FreeDGAlgebraContextImpl.prototype.n2c = function (_this__u8e3s4, other) {
    return this.a2c_1.c1l(_this__u8e3s4, other);
  };
  FreeDGAlgebraContextImpl.prototype.c1l = function (_this__u8e3s4, other) {
    return this.n2c(_this__u8e3s4, other);
  };
  FreeDGAlgebraContextImpl.prototype.o2c = function (_this__u8e3s4, sign) {
    return this.a2c_1.h1l(_this__u8e3s4, sign);
  };
  FreeDGAlgebraContextImpl.prototype.h1l = function (_this__u8e3s4, sign) {
    return this.o2c(_this__u8e3s4, sign);
  };
  FreeDGAlgebraContextImpl.prototype.p2c = function (_this__u8e3s4, scalar) {
    return this.a2c_1.g1l(_this__u8e3s4, scalar);
  };
  FreeDGAlgebraContextImpl.prototype.g1l = function (_this__u8e3s4, scalar) {
    return this.p2c(_this__u8e3s4, isInterface(scalar, Scalar) ? scalar : THROW_CCE());
  };
  FreeDGAlgebraContextImpl.prototype.q2c = function (_this__u8e3s4, other) {
    return this.a2c_1.m1l(_this__u8e3s4, other);
  };
  FreeDGAlgebraContextImpl.prototype.m1l = function (_this__u8e3s4, other) {
    return this.q2c(_this__u8e3s4, other);
  };
  FreeDGAlgebraContextImpl.prototype.r2c = function (_this__u8e3s4, gVector) {
    return this.a2c_1.i1l(_this__u8e3s4, gVector);
  };
  FreeDGAlgebraContextImpl.prototype.i1l = function (_this__u8e3s4, gVector) {
    return this.r2c(_this__u8e3s4, gVector);
  };
  FreeDGAlgebraContextImpl.prototype.s2c = function (_this__u8e3s4, gVector) {
    return this.a2c_1.f1l(_this__u8e3s4, gVector);
  };
  FreeDGAlgebraContextImpl.prototype.f1l = function (_this__u8e3s4, gVector) {
    return this.s2c(_this__u8e3s4, gVector);
  };
  FreeDGAlgebraContextImpl.prototype.t2c = function (_this__u8e3s4) {
    return this.a2c_1.l1m(_this__u8e3s4);
  };
  FreeDGAlgebraContextImpl.prototype.l1m = function (_this__u8e3s4) {
    return this.t2c(_this__u8e3s4);
  };
  FreeDGAlgebraContextImpl.prototype.k1m = function (_this__u8e3s4) {
    return this.a2c_1.k1m(_this__u8e3s4);
  };
  FreeDGAlgebraContextImpl.prototype.b1m = function (_this__u8e3s4) {
    return this.a2c_1.b1m(_this__u8e3s4);
  };
  FreeDGAlgebraContextImpl.prototype.a1m = function (_this__u8e3s4) {
    return this.a2c_1.a1m(_this__u8e3s4);
  };
  FreeDGAlgebraContextImpl.prototype.u2c = function (_this__u8e3s4) {
    return this.a2c_1.y1l(_this__u8e3s4);
  };
  FreeDGAlgebraContextImpl.prototype.y1l = function (_this__u8e3s4) {
    return this.u2c(_this__u8e3s4);
  };
  FreeDGAlgebraContextImpl.prototype.v2c = function (_this__u8e3s4) {
    return this.a2c_1.z1l(_this__u8e3s4);
  };
  FreeDGAlgebraContextImpl.prototype.z1l = function (_this__u8e3s4) {
    return this.v2c(_this__u8e3s4);
  };
  FreeDGAlgebraContextImpl.prototype.h1n = function () {
    return this.b2c_1;
  };
  FreeDGAlgebraContextImpl.$metadata$ = classMeta('FreeDGAlgebraContextImpl', [FreeDGAlgebraContext, DGAlgebraContext]);
  function dgAlgebra$factory() {
    return getPropertyCallableRef('dgAlgebra', 1, KProperty1, function (receiver) {
      return _get_dgAlgebra__ci9nm4(receiver);
    }, null);
  }
  function cohomology$factory_4() {
    return getPropertyCallableRef('cohomology', 1, KProperty1, function (receiver) {
      return receiver.i1j();
    }, null);
  }
  function InternalPrintConfig$Companion$default$ref_1($boundThis) {
    var l = function (p0) {
      return $boundThis.r1u(p0);
    };
    l.callableName = 'default';
    return l;
  }
  function getDerivationValue($this, valueList, monomial, valueDegree) {
    var tmp$ret$9;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = $this.e2b().d2d(monomial);
    var tmp$ret$8;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$7;
      // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getDerivationValue.<anonymous>' call
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map_0 = get_indices_0($this.t23());
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
      var inductionVariable = tmp0_map_0.m1_1;
      var last = tmp0_map_0.n1_1;
      if (inductionVariable <= last)
        do {
          var item_0 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp$ret$0;
          // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getDerivationValue.<anonymous>.<anonymous>' call
          tmp$ret$0 = item_0 === item.i2d_1 ? item.g2d_1 - 1 | 0 : 0;
          tmp0_mapTo_0.a(tmp$ret$0);
        }
         while (!(item_0 === last));
      tmp$ret$1 = tmp0_mapTo_0;
      tmp$ret$2 = tmp$ret$1;
      var derivedSeparatedExponentList = tmp$ret$2;
      var derivedSeparatedMonomial = Monomial_init_$Create$($this.y1j(), $this.t23(), derivedSeparatedExponentList);
      var tmp$ret$4;
      // Inline function 'kotlin.run' call
      var tmp1_run = $this.c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getDerivationValue.<anonymous>.<anonymous>' call
      tmp$ret$3 = tmp1_run.c1l(tmp1_run.f1l(item.g2d_1, $this.h1k(derivedSeparatedMonomial, derivedSeparatedMonomial.q1n())), valueList.l(item.i2d_1));
      tmp$ret$4 = tmp$ret$3;
      var derivedSeparatedGVector = tmp$ret$4;
      var remainingGVector = $this.h1k(item.e2d_1, item.e2d_1.q1n());
      var tmp$ret$6;
      // Inline function 'kotlin.run' call
      var tmp2_run = $this.c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$5;
      // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getDerivationValue.<anonymous>.<anonymous>' call
      tmp$ret$5 = tmp2_run.h1l(tmp2_run.c1l(derivedSeparatedGVector, remainingGVector), item.h2d_1);
      tmp$ret$6 = tmp$ret$5;
      tmp$ret$7 = tmp$ret$6;
      tmp0_mapTo.a(tmp$ret$7);
    }
    tmp$ret$8 = tmp0_mapTo;
    tmp$ret$9 = tmp$ret$8;
    var terms = tmp$ret$9;
    var tmp$ret$11;
    // Inline function 'kotlin.run' call
    var tmp1_run_0 = $this.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$10;
    // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getDerivationValue.<anonymous>' call
    tmp$ret$10 = tmp1_run_0.c1m(terms, valueDegree);
    tmp$ret$11 = tmp$ret$10;
    return tmp$ret$11;
  }
  function getAlgebraMapValue($this, target, valueList, monomial) {
    var tmp$ret$4;
    // Inline function 'kotlin.run' call
    var tmp0_run = target.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$3;
    // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getAlgebraMapValue.<anonymous>' call
    var tmp$ret$2;
    // Inline function 'kotlin.collections.mapIndexed' call
    var tmp0_mapIndexed = monomial.n29_1;
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapIndexedTo' call
    var tmp0_mapIndexedTo = ArrayList_init_$Create$(tmp0_mapIndexed.length);
    var index = 0;
    var indexedObject = tmp0_mapIndexed;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var item = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getAlgebraMapValue.<anonymous>.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      var tmp1__anonymous__uwfjfc = tmp1;
      tmp$ret$0 = tmp0_run.i1m(valueList.l(tmp1__anonymous__uwfjfc), item);
      tmp0_mapIndexedTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapIndexedTo;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp0_run.o1m(tmp$ret$2);
    tmp$ret$4 = tmp$ret$3;
    return tmp$ret$4;
  }
  function Companion_40() {
    Companion_instance_40 = this;
  }
  Companion_40.prototype.c2a = function (matrixSpace, degreeGroup, indeterminateList, getInternalPrintConfig) {
    return new FreeGAlgebraImpl(matrixSpace, degreeGroup, indeterminateList, getInternalPrintConfig);
  };
  Companion_40.prototype.j2d = function (matrixSpace, degreeGroup, indeterminateList, getInternalPrintConfig, $mask0, $handler) {
    if (!(($mask0 & 8) === 0)) {
      getInternalPrintConfig = InternalPrintConfig$Companion$default$ref_1(Companion_getInstance_68());
    }
    return this.c2a(matrixSpace, degreeGroup, indeterminateList, getInternalPrintConfig);
  };
  Companion_40.prototype.k2d = function (matrixSpace, indeterminateList) {
    var tmp = Companion_getInstance_41();
    var tmp_0 = IntDegreeGroup_getInstance();
    return tmp.j2d(matrixSpace, tmp_0, indeterminateList, null, 8, null);
  };
  Companion_40.$metadata$ = objectMeta('Companion');
  var Companion_instance_40;
  function Companion_getInstance_41() {
    if (Companion_instance_40 == null)
      new Companion_40();
    return Companion_instance_40;
  }
  function FreeGAlgebra$getDerivation$lambda(it) {
    return toString(it);
  }
  function FreeGAlgebra$getDerivation$lambda_0(this$0, $derivationDegree, $gVectorValueList) {
    return function (k) {
      var sourceVectorSpace = this$0.b1k(k);
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.y1j().c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getDerivation.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.e1j(k, $derivationDegree);
      tmp$ret$1 = tmp$ret$0;
      var targetDegree = tmp$ret$1;
      var tmp$ret$4;
      // Inline function 'kotlin.collections.map' call
      var tmp1_map = sourceVectorSpace.d1v();
      var tmp$ret$3;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
      var tmp0_iterator = tmp1_map.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$2;
        // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getDerivation.<anonymous>.<anonymous>' call
        tmp$ret$2 = getDerivationValue(this$0, $gVectorValueList, item, targetDegree);
        tmp0_mapTo.a(tmp$ret$2);
      }
      tmp$ret$3 = tmp0_mapTo;
      tmp$ret$4 = tmp$ret$3;
      return tmp$ret$4;
    };
  }
  function FreeGAlgebra$getGAlgebraMap$lambda(it) {
    return toString(it);
  }
  function FreeGAlgebra$getGAlgebraMap$lambda_0(this$0, $target, $gVectorValueList) {
    return function (k) {
      var sourceVectorSpace = this$0.b1k(k);
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = sourceVectorSpace.d1v();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var tmp0_iterator = tmp0_map.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebra.getGAlgebraMap.<anonymous>.<anonymous>' call
        var gVectorValue = getAlgebraMapValue(this$0, $target, $gVectorValueList, item);
        tmp$ret$0 = gVectorValue;
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      return tmp$ret$2;
    };
  }
  function FreeGAlgebra$convertDegree$lambda($freeMonoidMorphism) {
    return function (monomial) {
      return $freeMonoidMorphism.o2d(monomial);
    };
  }
  function FreeGAlgebra() {
  }
  FreeGAlgebra.$metadata$ = interfaceMeta('FreeGAlgebra', [MonoidGAlgebra, Printable]);
  function Companion_41() {
    Companion_instance_41 = this;
  }
  Companion_41.prototype.n28 = function (gAlgebra) {
    return new FreeGAlgebraContextImpl(gAlgebra);
  };
  Companion_41.$metadata$ = objectMeta('Companion');
  var Companion_instance_41;
  function Companion_getInstance_42() {
    if (Companion_instance_41 == null)
      new Companion_41();
    return Companion_instance_41;
  }
  function FreeGAlgebraContext() {
  }
  FreeGAlgebraContext.$metadata$ = interfaceMeta('FreeGAlgebraContext', [GAlgebraContext]);
  function getName($this, indeterminateList) {
    var indeterminateString = joinToString$default(indeterminateList, ', ', null, null, 0, null, FreeGAlgebraImpl$Companion$getName$lambda, 30, null);
    return '\u039B(' + indeterminateString + ')';
  }
  function FreeGAlgebraImpl$Companion$getName$lambda(it) {
    return it.toString();
  }
  function Companion_42() {
    Companion_instance_42 = this;
  }
  Companion_42.$metadata$ = objectMeta('Companion');
  var Companion_instance_42;
  function Companion_getInstance_43() {
    if (Companion_instance_42 == null)
      new Companion_42();
    return Companion_instance_42;
  }
  function _no_name_provided__qut3iv($tmp0_groupingBy) {
    this.s2d_1 = $tmp0_groupingBy;
  }
  _no_name_provided__qut3iv.prototype.a1 = function () {
    return this.s2d_1.f();
  };
  _no_name_provided__qut3iv.prototype.t2d = function (element) {
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebraImpl.<anonymous>' call
    tmp$ret$0 = element;
    return tmp$ret$0;
  };
  _no_name_provided__qut3iv.prototype.b1 = function (element) {
    return this.t2d(element instanceof Indeterminate ? element : THROW_CCE());
  };
  _no_name_provided__qut3iv.$metadata$ = classMeta(undefined, [Grouping]);
  function FreeGAlgebraImpl$toString$lambda($printConfig) {
    return function (it) {
      return it.c1n($printConfig);
    };
  }
  function FreeGAlgebraImpl(matrixSpace, degreeGroup, indeterminateList, getInternalPrintConfig) {
    Companion_getInstance_43();
    this.u2d_1 = degreeGroup;
    this.v2d_1 = indeterminateList;
    this.w2d_1 = Companion_getInstance_48().z2d(matrixSpace, degreeGroup, new FreeGMonoid(degreeGroup, indeterminateList), getName(Companion_getInstance_43(), indeterminateList), getInternalPrintConfig);
    var tmp$ret$8;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$4;
    // Inline function 'kotlin.collections.filter' call
    var tmp$ret$0;
    // Inline function 'kotlin.collections.groupingBy' call
    var tmp0_groupingBy = this.v2d_1;
    tmp$ret$0 = new _no_name_provided__qut3iv(tmp0_groupingBy);
    var tmp1_filter = eachCount(tmp$ret$0);
    var tmp$ret$3;
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo = LinkedHashMap_init_$Create$();
    var tmp$ret$1;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$1 = tmp1_filter.d1().f();
    var tmp0_iterator = tmp$ret$1;
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp$ret$2;
      // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebraImpl.<anonymous>' call
      tmp$ret$2 = element.f1() > 1;
      if (tmp$ret$2) {
        tmp0_filterTo.u(element.e1(), element.f1());
      }
    }
    tmp$ret$3 = tmp0_filterTo;
    tmp$ret$4 = tmp$ret$3;
    var tmp2_map = tmp$ret$4;
    var tmp$ret$7;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(tmp2_map.i());
    var tmp$ret$5;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$5 = tmp2_map.d1().f();
    var tmp0_iterator_0 = tmp$ret$5;
    while (tmp0_iterator_0.g()) {
      var item = tmp0_iterator_0.h();
      var tmp$ret$6;
      // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebraImpl.<anonymous>' call
      tmp$ret$6 = item.e1();
      tmp0_mapTo.a(tmp$ret$6);
    }
    tmp$ret$7 = tmp0_mapTo;
    tmp$ret$8 = tmp$ret$7;
    var duplicatedIndeterminateList = tmp$ret$8;
    // Inline function 'kotlin.require' call
    var tmp3_require = duplicatedIndeterminateList.p();
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp3_require) {
      var tmp$ret$9;
      // Inline function 'com.github.shwaka.kohomology.free.FreeGAlgebraImpl.<anonymous>' call
      tmp$ret$9 = 'indeterminateList contains duplicates: ' + duplicatedIndeterminateList;
      var message = tmp$ret$9;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    this.x2d_1 = Companion_getInstance_42().n28(this);
    this.y2d_1 = this;
  }
  FreeGAlgebraImpl.prototype.y1j = function () {
    return this.u2d_1;
  };
  FreeGAlgebraImpl.prototype.t23 = function () {
    return this.v2d_1;
  };
  FreeGAlgebraImpl.prototype.d1k = function () {
    return this.w2d_1.d1k();
  };
  FreeGAlgebraImpl.prototype.e1k = function () {
    return this.w2d_1.e1k();
  };
  FreeGAlgebraImpl.prototype.z1j = function () {
    return this.w2d_1.z1j();
  };
  FreeGAlgebraImpl.prototype.w1k = function () {
    return this.w2d_1.w1k();
  };
  FreeGAlgebraImpl.prototype.a1k = function () {
    return this.w2d_1.a1k();
  };
  FreeGAlgebraImpl.prototype.u1j = function () {
    return this.w2d_1.u1j();
  };
  FreeGAlgebraImpl.prototype.e2b = function () {
    return this.w2d_1.e2b();
  };
  FreeGAlgebraImpl.prototype.j1j = function () {
    return this.w2d_1.j1j();
  };
  FreeGAlgebraImpl.prototype.zc = function () {
    return this.w2d_1.zc();
  };
  FreeGAlgebraImpl.prototype.x1j = function () {
    return this.w2d_1.x1j();
  };
  FreeGAlgebraImpl.prototype.c1k = function () {
    return this.w2d_1.c1k();
  };
  FreeGAlgebraImpl.prototype.v1k = function () {
    return this.w2d_1.v1k();
  };
  FreeGAlgebraImpl.prototype.u1k = function () {
    return this.w2d_1.u1k();
  };
  FreeGAlgebraImpl.prototype.f2b = function (a, b) {
    return this.w2d_1.o1k(a, b);
  };
  FreeGAlgebraImpl.prototype.o1k = function (a, b) {
    return this.f2b(a, b);
  };
  FreeGAlgebraImpl.prototype.g2b = function (a, b) {
    return this.f2b(a, b);
  };
  FreeGAlgebraImpl.prototype.h2b = function (gVector) {
    return this.w2d_1.m1k(gVector);
  };
  FreeGAlgebraImpl.prototype.m1k = function (gVector) {
    return this.h2b(gVector);
  };
  FreeGAlgebraImpl.prototype.i2b = function (gVector) {
    return this.h2b(gVector);
  };
  FreeGAlgebraImpl.prototype.j2b = function (gVector) {
    return this.w2d_1.n1k(gVector);
  };
  FreeGAlgebraImpl.prototype.n1k = function (gVector) {
    return this.j2b(gVector);
  };
  FreeGAlgebraImpl.prototype.k2b = function (gVector) {
    return this.j2b(gVector);
  };
  FreeGAlgebraImpl.prototype.l2b = function (gVectorOrZero, degree) {
    return this.w2d_1.l1k(gVectorOrZero, degree);
  };
  FreeGAlgebraImpl.prototype.l1k = function (gVectorOrZero, degree) {
    return this.l2b(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  FreeGAlgebraImpl.prototype.m2b = function (gVectorOrZero, degree) {
    return this.l2b(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  FreeGAlgebraImpl.prototype.a2e = function (gVector) {
    return this.w2d_1.x1k(gVector);
  };
  FreeGAlgebraImpl.prototype.x1k = function (gVector) {
    return this.a2e(gVector);
  };
  FreeGAlgebraImpl.prototype.b2e = function (gVector) {
    return this.a2e(gVector);
  };
  FreeGAlgebraImpl.prototype.n2b = function (a, b) {
    return this.w2d_1.t1k(a, b);
  };
  FreeGAlgebraImpl.prototype.t1k = function (a, b) {
    return this.n2b(a, b);
  };
  FreeGAlgebraImpl.prototype.o2b = function (a, b) {
    return this.n2b(a, b);
  };
  FreeGAlgebraImpl.prototype.p2b = function (basisName, degree) {
    return this.w2d_1.h1k(basisName, degree);
  };
  FreeGAlgebraImpl.prototype.h1k = function (basisName, degree) {
    var tmp = basisName instanceof Monomial ? basisName : THROW_CCE();
    return this.p2b(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  FreeGAlgebraImpl.prototype.q2b = function (basisName, degree) {
    var tmp = basisName instanceof Monomial ? basisName : THROW_CCE();
    return this.p2b(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  FreeGAlgebraImpl.prototype.r2b = function (vector, degree) {
    return this.w2d_1.f1k(vector, degree);
  };
  FreeGAlgebraImpl.prototype.f1k = function (vector, degree) {
    return this.r2b(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  FreeGAlgebraImpl.prototype.s2b = function (vector, degree) {
    return this.r2b(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  FreeGAlgebraImpl.prototype.t2b = function (vector, degree) {
    return this.w2d_1.g1k(vector, degree);
  };
  FreeGAlgebraImpl.prototype.g1k = function (vector, degree) {
    return this.t2b(vector, degree);
  };
  FreeGAlgebraImpl.prototype.u2b = function (vector, degree) {
    return this.t2b(vector, degree);
  };
  FreeGAlgebraImpl.prototype.b1k = function (degree) {
    return this.w2d_1.b1k(degree);
  };
  FreeGAlgebraImpl.prototype.l = function (degree) {
    return this.w2d_1.l(degree);
  };
  FreeGAlgebraImpl.prototype.i1k = function (degree) {
    return this.w2d_1.i1k(degree);
  };
  FreeGAlgebraImpl.prototype.c2e = function (ideal) {
    return this.w2d_1.z1k(ideal);
  };
  FreeGAlgebraImpl.prototype.z1k = function (ideal) {
    return this.c2e(ideal);
  };
  FreeGAlgebraImpl.prototype.d2e = function (ideal) {
    return this.c2e(ideal);
  };
  FreeGAlgebraImpl.prototype.j1k = function (degree) {
    return this.w2d_1.j1k(degree);
  };
  FreeGAlgebraImpl.prototype.k1k = function (degree) {
    return this.w2d_1.k1k(degree);
  };
  FreeGAlgebraImpl.prototype.v2b = function (scalar, gVector) {
    return this.w2d_1.q1k(scalar, gVector);
  };
  FreeGAlgebraImpl.prototype.q1k = function (scalar, gVector) {
    return this.v2b(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  FreeGAlgebraImpl.prototype.w2b = function (scalar, gVector) {
    return this.v2b(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  FreeGAlgebraImpl.prototype.e2e = function (a, b) {
    return this.w2d_1.r1k(a, b);
  };
  FreeGAlgebraImpl.prototype.r1k = function (a, b) {
    return this.e2e(a, b);
  };
  FreeGAlgebraImpl.prototype.f2e = function (a, b) {
    return this.e2e(a, b);
  };
  FreeGAlgebraImpl.prototype.g2e = function (a, b) {
    return this.w2d_1.s1k(a, b);
  };
  FreeGAlgebraImpl.prototype.s1k = function (a, b) {
    return this.g2e(a, b);
  };
  FreeGAlgebraImpl.prototype.h2e = function (a, b) {
    return this.g2e(a, b);
  };
  FreeGAlgebraImpl.prototype.i2e = function (generatorList, text) {
    return this.w2d_1.y1k(generatorList, text);
  };
  FreeGAlgebraImpl.prototype.y1k = function (generatorList, text) {
    return this.i2e(generatorList, text);
  };
  FreeGAlgebraImpl.prototype.j2e = function (generatorList, text) {
    return this.i2e(generatorList, text);
  };
  FreeGAlgebraImpl.prototype.x2b = function (a, b) {
    return this.w2d_1.p1k(a, b);
  };
  FreeGAlgebraImpl.prototype.p1k = function (a, b) {
    return this.x2b(a, b);
  };
  FreeGAlgebraImpl.prototype.y2b = function (a, b) {
    return this.x2b(a, b);
  };
  FreeGAlgebraImpl.prototype.toString = function () {
    return this.w2d_1.toString();
  };
  FreeGAlgebraImpl.prototype.c1j = function () {
    return this.x2d_1;
  };
  FreeGAlgebraImpl.prototype.i29 = function () {
    return this.y2d_1;
  };
  FreeGAlgebraImpl.prototype.c1n = function (printConfig) {
    var indeterminateString = joinToString$default(this.v2d_1, ', ', null, null, 0, null, FreeGAlgebraImpl$toString$lambda(printConfig), 30, null);
    return '\u039B(' + indeterminateString + ')';
  };
  FreeGAlgebraImpl.$metadata$ = classMeta('FreeGAlgebraImpl', [FreeGAlgebra, MonoidGAlgebra]);
  function FreeGAlgebraContextImpl(gAlgebra) {
    this.k2e_1 = gAlgebra;
    this.l2e_1 = Companion_getInstance_16().f1t(gAlgebra);
  }
  FreeGAlgebraContextImpl.prototype.h1n = function () {
    return this.k2e_1;
  };
  FreeGAlgebraContextImpl.prototype.e1k = function () {
    return this.l2e_1.e1k();
  };
  FreeGAlgebraContextImpl.prototype.p1m = function () {
    return this.l2e_1.p1m();
  };
  FreeGAlgebraContextImpl.prototype.p1l = function () {
    return this.l2e_1.p1l();
  };
  FreeGAlgebraContextImpl.prototype.x1j = function () {
    return this.l2e_1.x1j();
  };
  FreeGAlgebraContextImpl.prototype.n1m = function () {
    return this.l2e_1.n1m();
  };
  FreeGAlgebraContextImpl.prototype.v1k = function () {
    return this.l2e_1.v1k();
  };
  FreeGAlgebraContextImpl.prototype.m1m = function () {
    return this.l2e_1.m1m();
  };
  FreeGAlgebraContextImpl.prototype.u1k = function () {
    return this.l2e_1.u1k();
  };
  FreeGAlgebraContextImpl.prototype.f1m = function (_this__u8e3s4, other) {
    return this.l2e_1.f1m(_this__u8e3s4, other);
  };
  FreeGAlgebraContextImpl.prototype.g1m = function (_this__u8e3s4, other) {
    return this.l2e_1.g1m(_this__u8e3s4, other);
  };
  FreeGAlgebraContextImpl.prototype.e1m = function (_this__u8e3s4, ind) {
    return this.l2e_1.e1m(_this__u8e3s4, ind);
  };
  FreeGAlgebraContextImpl.prototype.h1m = function (_this__u8e3s4) {
    return this.l2e_1.h1m(_this__u8e3s4);
  };
  FreeGAlgebraContextImpl.prototype.x1l = function (_this__u8e3s4, other) {
    return this.l2e_1.x1l(_this__u8e3s4, other);
  };
  FreeGAlgebraContextImpl.prototype.w1l = function (_this__u8e3s4, other) {
    return this.l2e_1.w1l(_this__u8e3s4, other);
  };
  FreeGAlgebraContextImpl.prototype.d2c = function (_this__u8e3s4, other) {
    return this.l2e_1.u1l(_this__u8e3s4, other);
  };
  FreeGAlgebraContextImpl.prototype.u1l = function (_this__u8e3s4, other) {
    return this.d2c(_this__u8e3s4, other);
  };
  FreeGAlgebraContextImpl.prototype.e2c = function (_this__u8e3s4, other) {
    return this.l2e_1.v1l(_this__u8e3s4, other);
  };
  FreeGAlgebraContextImpl.prototype.v1l = function (_this__u8e3s4, other) {
    return this.e2c(_this__u8e3s4, other);
  };
  FreeGAlgebraContextImpl.prototype.t1l = function (_this__u8e3s4, other) {
    return this.l2e_1.t1l(_this__u8e3s4, other);
  };
  FreeGAlgebraContextImpl.prototype.s1l = function (_this__u8e3s4, other) {
    return this.l2e_1.s1l(_this__u8e3s4, other);
  };
  FreeGAlgebraContextImpl.prototype.f2c = function (_this__u8e3s4, other) {
    return this.l2e_1.q1l(_this__u8e3s4, other);
  };
  FreeGAlgebraContextImpl.prototype.q1l = function (_this__u8e3s4, other) {
    return this.f2c(_this__u8e3s4, other);
  };
  FreeGAlgebraContextImpl.prototype.g2c = function (_this__u8e3s4, other) {
    return this.l2e_1.r1l(_this__u8e3s4, other);
  };
  FreeGAlgebraContextImpl.prototype.r1l = function (_this__u8e3s4, other) {
    return this.g2c(_this__u8e3s4, other);
  };
  FreeGAlgebraContextImpl.prototype.h2c = function (_this__u8e3s4, exponent) {
    return this.l2e_1.i1m(_this__u8e3s4, exponent);
  };
  FreeGAlgebraContextImpl.prototype.i1m = function (_this__u8e3s4, exponent) {
    return this.h2c(_this__u8e3s4, exponent);
  };
  FreeGAlgebraContextImpl.prototype.i2c = function (_this__u8e3s4, exponent) {
    return this.l2e_1.j1m(_this__u8e3s4, exponent);
  };
  FreeGAlgebraContextImpl.prototype.j1m = function (_this__u8e3s4, exponent) {
    return this.i2c(_this__u8e3s4, exponent);
  };
  FreeGAlgebraContextImpl.prototype.j2c = function (_this__u8e3s4) {
    return this.l2e_1.o1m(_this__u8e3s4);
  };
  FreeGAlgebraContextImpl.prototype.o1m = function (_this__u8e3s4) {
    return this.j2c(_this__u8e3s4);
  };
  FreeGAlgebraContextImpl.prototype.d1m = function (_this__u8e3s4) {
    return this.l2e_1.d1m(_this__u8e3s4);
  };
  FreeGAlgebraContextImpl.prototype.k2c = function (_this__u8e3s4, degree) {
    return this.l2e_1.c1m(_this__u8e3s4, degree);
  };
  FreeGAlgebraContextImpl.prototype.c1m = function (_this__u8e3s4, degree) {
    return this.k2c(_this__u8e3s4, (degree == null ? true : isInterface(degree, Degree)) ? degree : THROW_CCE());
  };
  FreeGAlgebraContextImpl.prototype.l1l = function (_this__u8e3s4, other) {
    return this.l2e_1.l1l(_this__u8e3s4, other);
  };
  FreeGAlgebraContextImpl.prototype.k1l = function (_this__u8e3s4, numVector) {
    return this.l2e_1.k1l(_this__u8e3s4, numVector);
  };
  FreeGAlgebraContextImpl.prototype.l2c = function (_this__u8e3s4, gVector) {
    return this.l2e_1.e1l(_this__u8e3s4, gVector);
  };
  FreeGAlgebraContextImpl.prototype.e1l = function (_this__u8e3s4, gVector) {
    return this.l2c(isInterface(_this__u8e3s4, Scalar) ? _this__u8e3s4 : THROW_CCE(), gVector);
  };
  FreeGAlgebraContextImpl.prototype.j1l = function (_this__u8e3s4, scalar) {
    return this.l2e_1.j1l(_this__u8e3s4, scalar);
  };
  FreeGAlgebraContextImpl.prototype.m2c = function (_this__u8e3s4, scalar) {
    return this.l2e_1.d1l(_this__u8e3s4, scalar);
  };
  FreeGAlgebraContextImpl.prototype.d1l = function (_this__u8e3s4, scalar) {
    return this.m2c(_this__u8e3s4, isInterface(scalar, Scalar) ? scalar : THROW_CCE());
  };
  FreeGAlgebraContextImpl.prototype.n2c = function (_this__u8e3s4, other) {
    return this.l2e_1.c1l(_this__u8e3s4, other);
  };
  FreeGAlgebraContextImpl.prototype.c1l = function (_this__u8e3s4, other) {
    return this.n2c(_this__u8e3s4, other);
  };
  FreeGAlgebraContextImpl.prototype.o2c = function (_this__u8e3s4, sign) {
    return this.l2e_1.h1l(_this__u8e3s4, sign);
  };
  FreeGAlgebraContextImpl.prototype.h1l = function (_this__u8e3s4, sign) {
    return this.o2c(_this__u8e3s4, sign);
  };
  FreeGAlgebraContextImpl.prototype.p2c = function (_this__u8e3s4, scalar) {
    return this.l2e_1.g1l(_this__u8e3s4, scalar);
  };
  FreeGAlgebraContextImpl.prototype.g1l = function (_this__u8e3s4, scalar) {
    return this.p2c(_this__u8e3s4, isInterface(scalar, Scalar) ? scalar : THROW_CCE());
  };
  FreeGAlgebraContextImpl.prototype.q2c = function (_this__u8e3s4, other) {
    return this.l2e_1.m1l(_this__u8e3s4, other);
  };
  FreeGAlgebraContextImpl.prototype.m1l = function (_this__u8e3s4, other) {
    return this.q2c(_this__u8e3s4, other);
  };
  FreeGAlgebraContextImpl.prototype.r2c = function (_this__u8e3s4, gVector) {
    return this.l2e_1.i1l(_this__u8e3s4, gVector);
  };
  FreeGAlgebraContextImpl.prototype.i1l = function (_this__u8e3s4, gVector) {
    return this.r2c(_this__u8e3s4, gVector);
  };
  FreeGAlgebraContextImpl.prototype.s2c = function (_this__u8e3s4, gVector) {
    return this.l2e_1.f1l(_this__u8e3s4, gVector);
  };
  FreeGAlgebraContextImpl.prototype.f1l = function (_this__u8e3s4, gVector) {
    return this.s2c(_this__u8e3s4, gVector);
  };
  FreeGAlgebraContextImpl.prototype.t2c = function (_this__u8e3s4) {
    return this.l2e_1.l1m(_this__u8e3s4);
  };
  FreeGAlgebraContextImpl.prototype.l1m = function (_this__u8e3s4) {
    return this.t2c(_this__u8e3s4);
  };
  FreeGAlgebraContextImpl.prototype.k1m = function (_this__u8e3s4) {
    return this.l2e_1.k1m(_this__u8e3s4);
  };
  FreeGAlgebraContextImpl.prototype.b1m = function (_this__u8e3s4) {
    return this.l2e_1.b1m(_this__u8e3s4);
  };
  FreeGAlgebraContextImpl.prototype.a1m = function (_this__u8e3s4) {
    return this.l2e_1.a1m(_this__u8e3s4);
  };
  FreeGAlgebraContextImpl.prototype.u2c = function (_this__u8e3s4) {
    return this.l2e_1.y1l(_this__u8e3s4);
  };
  FreeGAlgebraContextImpl.prototype.y1l = function (_this__u8e3s4) {
    return this.u2c(_this__u8e3s4);
  };
  FreeGAlgebraContextImpl.prototype.v2c = function (_this__u8e3s4) {
    return this.l2e_1.z1l(_this__u8e3s4);
  };
  FreeGAlgebraContextImpl.prototype.z1l = function (_this__u8e3s4) {
    return this.v2c(_this__u8e3s4);
  };
  FreeGAlgebraContextImpl.$metadata$ = classMeta('FreeGAlgebraContextImpl', [FreeGAlgebraContext, GAlgebraContext]);
  function convertNameToTex($this, name) {
    var tmp$ret$1;
    // Inline function 'kotlin.text.count' call
    var count = 0;
    var indexedObject = name;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var element = charSequenceGet(indexedObject, inductionVariable);
      inductionVariable = inductionVariable + 1 | 0;
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.Companion.convertNameToTex.<anonymous>' call
      tmp$ret$0 = equals(new Char(element), new Char(_Char___init__impl__6a9atx(95)));
      if (tmp$ret$0) {
        count = count + 1 | 0;
      }
    }
    tmp$ret$1 = count;
    var underscoreCount = tmp$ret$1;
    if (underscoreCount <= 1) {
      return name;
    }
    var tmp = replaceFirst$default(name, '_', '{', false, 4, null);
    var tmp_0 = replace$default(tmp, '_', ',', false, 4, null);
    return replace$default(tmp_0, '{', '_{', false, 4, null) + '}';
  }
  function Companion_43() {
    Companion_instance_43 = this;
  }
  Companion_43.$metadata$ = objectMeta('Companion');
  var Companion_instance_43;
  function Companion_getInstance_44() {
    if (Companion_instance_43 == null)
      new Companion_43();
    return Companion_instance_43;
  }
  function GeneratorOfFreeDGA(name, degree, differentialValue) {
    Companion_getInstance_44();
    this.w29_1 = name;
    this.x29_1 = degree;
    this.y29_1 = differentialValue;
  }
  GeneratorOfFreeDGA.prototype.zc = function () {
    return this.w29_1;
  };
  GeneratorOfFreeDGA.prototype.q1n = function () {
    return this.x29_1;
  };
  GeneratorOfFreeDGA.prototype.m2e = function () {
    return this.y29_1;
  };
  GeneratorOfFreeDGA.prototype.j2a = function () {
    return Indeterminate_1(this.w29_1, convertNameToTex(Companion_getInstance_44(), this.w29_1), this.x29_1);
  };
  GeneratorOfFreeDGA.prototype.toString = function () {
    return 'GeneratorOfFreeDGA(name=' + this.w29_1 + ', degree=' + this.x29_1 + ', differentialValue=' + this.y29_1 + ')';
  };
  GeneratorOfFreeDGA.prototype.hashCode = function () {
    var result = getStringHashCode(this.w29_1);
    result = imul(result, 31) + hashCode(this.x29_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.y29_1) | 0;
    return result;
  };
  GeneratorOfFreeDGA.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof GeneratorOfFreeDGA))
      return false;
    var tmp0_other_with_cast = other instanceof GeneratorOfFreeDGA ? other : THROW_CCE();
    if (!(this.w29_1 === tmp0_other_with_cast.w29_1))
      return false;
    if (!equals(this.x29_1, tmp0_other_with_cast.x29_1))
      return false;
    if (!(this.y29_1 === tmp0_other_with_cast.y29_1))
      return false;
    return true;
  };
  GeneratorOfFreeDGA.$metadata$ = classMeta('GeneratorOfFreeDGA');
  function jsonToGeneratorList(json) {
    var serializableGeneratorList = Default_getInstance().rr(ListSerializer(GeneratorSerializer_getInstance()), json);
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(serializableGeneratorList, 10));
    var tmp0_iterator = serializableGeneratorList.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.jsonToGeneratorList.<anonymous>' call
      tmp$ret$0 = item.q2e();
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function generatorListToJson(generatorList) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(generatorList, 10));
    var tmp0_iterator = generatorList.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.generatorListToJson.<anonymous>' call
      tmp$ret$0 = Companion_getInstance_45().r2e(item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var serializableGeneratorList = tmp$ret$2;
    return Default_getInstance().j17(ListSerializer(GeneratorSerializer_getInstance()), serializableGeneratorList);
  }
  function Companion_44() {
    Companion_instance_44 = this;
  }
  Companion_44.prototype.r2e = function (generatorOfFreeDGA) {
    return new SerializableGenerator(generatorOfFreeDGA.w29_1, generatorOfFreeDGA.x29_1.x22_1, generatorOfFreeDGA.y29_1);
  };
  Companion_44.prototype.s2e = function () {
    return $serializer_getInstance();
  };
  Companion_44.$metadata$ = objectMeta('Companion');
  var Companion_instance_44;
  function Companion_getInstance_45() {
    if (Companion_instance_44 == null)
      new Companion_44();
    return Companion_instance_44;
  }
  function $serializer() {
    $serializer_instance = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('com.github.shwaka.kohomology.free.SerializableGenerator', this, 3);
    tmp0_serialDesc.b10('name', false);
    tmp0_serialDesc.b10('degree', false);
    tmp0_serialDesc.b10('differentialValue', false);
    this.t2e_1 = tmp0_serialDesc;
  }
  $serializer.prototype.mr = function () {
    return this.t2e_1;
  };
  $serializer.prototype.d10 = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [StringSerializer_getInstance(), IntSerializer_getInstance(), StringSerializer_getInstance()];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  $serializer.prototype.or = function (decoder) {
    var tmp0_desc = this.t2e_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = 0;
    var tmp6_local2 = null;
    var tmp7_input = decoder.rt(tmp0_desc);
    if (tmp7_input.eu()) {
      tmp4_local0 = tmp7_input.bu(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp7_input.wt(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp7_input.bu(tmp0_desc, 2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp7_input.fu(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp7_input.bu(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp7_input.wt(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp7_input.bu(tmp0_desc, 2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp7_input.st(tmp0_desc);
    return SerializableGenerator_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
  };
  $serializer.prototype.u2e = function (encoder, value) {
    var tmp0_desc = this.t2e_1;
    var tmp1_output = encoder.rt(tmp0_desc);
    tmp1_output.cv(tmp0_desc, 0, value.n2e_1);
    tmp1_output.xu(tmp0_desc, 1, value.o2e_1);
    tmp1_output.cv(tmp0_desc, 2, value.p2e_1);
    tmp1_output.st(tmp0_desc);
  };
  $serializer.prototype.nr = function (encoder, value) {
    return this.u2e(encoder, value instanceof SerializableGenerator ? value : THROW_CCE());
  };
  $serializer.$metadata$ = objectMeta('$serializer', [GeneratedSerializer]);
  var $serializer_instance;
  function $serializer_getInstance() {
    if ($serializer_instance == null)
      new $serializer();
    return $serializer_instance;
  }
  function SerializableGenerator_init_$Init$(seen1, name, degree, differentialValue, serializationConstructorMarker, $this) {
    if (!(7 === (7 & seen1))) {
      throwMissingFieldException(seen1, 7, $serializer_getInstance().t2e_1);
    }
    $this.n2e_1 = name;
    $this.o2e_1 = degree;
    $this.p2e_1 = differentialValue;
    return $this;
  }
  function SerializableGenerator_init_$Create$(seen1, name, degree, differentialValue, serializationConstructorMarker) {
    return SerializableGenerator_init_$Init$(seen1, name, degree, differentialValue, serializationConstructorMarker, Object.create(SerializableGenerator.prototype));
  }
  function SerializableGenerator(name, degree, differentialValue) {
    Companion_getInstance_45();
    this.n2e_1 = name;
    this.o2e_1 = degree;
    this.p2e_1 = differentialValue;
  }
  SerializableGenerator.prototype.q2e = function () {
    return new GeneratorOfFreeDGA(this.n2e_1, new IntDegree(this.o2e_1), this.p2e_1);
  };
  SerializableGenerator.prototype.toString = function () {
    return 'SerializableGenerator(name=' + this.n2e_1 + ', degree=' + this.o2e_1 + ', differentialValue=' + this.p2e_1 + ')';
  };
  SerializableGenerator.prototype.hashCode = function () {
    var result = getStringHashCode(this.n2e_1);
    result = imul(result, 31) + this.o2e_1 | 0;
    result = imul(result, 31) + getStringHashCode(this.p2e_1) | 0;
    return result;
  };
  SerializableGenerator.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SerializableGenerator))
      return false;
    var tmp0_other_with_cast = other instanceof SerializableGenerator ? other : THROW_CCE();
    if (!(this.n2e_1 === tmp0_other_with_cast.n2e_1))
      return false;
    if (!(this.o2e_1 === tmp0_other_with_cast.o2e_1))
      return false;
    if (!(this.p2e_1 === tmp0_other_with_cast.p2e_1))
      return false;
    return true;
  };
  SerializableGenerator.$metadata$ = classMeta('SerializableGenerator', undefined, undefined, {0: $serializer_getInstance});
  function GeneratorSerializer() {
    GeneratorSerializer_instance = this;
    JsonTransformingSerializer.call(this, Companion_getInstance_45().s2e());
  }
  GeneratorSerializer.prototype.z19 = function (element) {
    var tmp;
    if (element instanceof JsonArray) {
      tmp = new JsonObject(mapOf([to('name', element.l(0)), to('degree', element.l(1)), to('differentialValue', element.l(2))]));
    } else {
      tmp = element;
    }
    return tmp;
  };
  GeneratorSerializer.prototype.y19 = function (element) {
    var tmp;
    var tmp_0;
    var tmp_1;
    var tmp_2;
    if (element instanceof JsonObject) {
      tmp_2 = element.z18('name');
    } else {
      tmp_2 = false;
    }
    if (tmp_2) {
      tmp_1 = element.z18('degree');
    } else {
      tmp_1 = false;
    }
    if (tmp_1) {
      tmp_0 = element.z18('differentialValue');
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      var tmp0_elvis_lhs = element.a19('name');
      var tmp_3;
      if (tmp0_elvis_lhs == null) {
        throw Exception_init_$Create$("This can't happen!");
      } else {
        tmp_3 = tmp0_elvis_lhs;
      }
      var name = tmp_3;
      var tmp1_elvis_lhs = element.a19('degree');
      var tmp_4;
      if (tmp1_elvis_lhs == null) {
        throw Exception_init_$Create$("This can't happen!");
      } else {
        tmp_4 = tmp1_elvis_lhs;
      }
      var degree = tmp_4;
      var tmp2_elvis_lhs = element.a19('differentialValue');
      var tmp_5;
      if (tmp2_elvis_lhs == null) {
        throw Exception_init_$Create$("This can't happen!");
      } else {
        tmp_5 = tmp2_elvis_lhs;
      }
      var differentialValue = tmp_5;
      tmp = new JsonArray(listOf_0([name, degree, differentialValue]));
    } else {
      tmp = element;
    }
    return tmp;
  };
  GeneratorSerializer.$metadata$ = objectMeta('GeneratorSerializer', undefined, undefined, undefined, undefined, JsonTransformingSerializer.prototype);
  var GeneratorSerializer_instance;
  function GeneratorSerializer_getInstance() {
    if (GeneratorSerializer_instance == null)
      new GeneratorSerializer();
    return GeneratorSerializer_instance;
  }
  function getInitial_0($this, targetDGAlgebra) {
    var tmp = Companion_getInstance_39();
    var tmp_0 = targetDGAlgebra.u1j();
    var tmp_1 = emptyList();
    var freeDGAlgebra = tmp.n25(tmp_0, tmp_1, null, HomologicalMinimalModel$Companion$getInitial$lambda, 4, null);
    var dgAlgebraMap = freeDGAlgebra.o25(targetDGAlgebra, emptyList());
    return new HomologicalMinimalModel(targetDGAlgebra, freeDGAlgebra, dgAlgebraMap, 1);
  }
  function HomologicalMinimalModel$Companion$getInitial$lambda($this$fromMap, _anonymous_parameter_0__qggqh8) {
    return emptyMap();
  }
  function Companion_45() {
    Companion_instance_45 = this;
  }
  Companion_45.prototype.p25 = function (targetDGAlgebra, isomorphismUpTo, reportProgress) {
    // Inline function 'kotlin.require' call
    var tmp0_require = targetDGAlgebra.d1k().x1i_1 === 0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.Companion.of.<anonymous>' call
      tmp$ret$0 = 'targetDGAlgebra must be bounded above by 0';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.require' call
    var tmp1_require = targetDGAlgebra.l(0).q25() === 1;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp1_require) {
      var tmp$ret$1;
      // Inline function 'com.github.shwaka.kohomology.free.Companion.of.<anonymous>' call
      tmp$ret$1 = 'targetDGAlgebra[0].dim must be 1 (i.e. contains only the unit)';
      var message_0 = tmp$ret$1;
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
    var minimalModel = getInitial_0(this, targetDGAlgebra);
    reportProgress(minimalModel.r25(isomorphismUpTo));
    while (minimalModel.z2e_1 > isomorphismUpTo) {
      minimalModel = minimalModel.w25();
      reportProgress(minimalModel.r25(isomorphismUpTo));
    }
    return minimalModel;
  };
  Companion_45.$metadata$ = objectMeta('Companion');
  var Companion_instance_45;
  function Companion_getInstance_46() {
    if (Companion_instance_45 == null)
      new Companion_45();
    return Companion_instance_45;
  }
  function HomologicalMinimalModel(targetDGAlgebra, freeDGAlgebra, dgAlgebraMap, isomorphismUpTo) {
    Companion_getInstance_46();
    this.w2e_1 = targetDGAlgebra;
    this.x2e_1 = freeDGAlgebra;
    this.y2e_1 = dgAlgebraMap;
    this.z2e_1 = isomorphismUpTo;
  }
  HomologicalMinimalModel.prototype.x25 = function () {
    return this.w2e_1;
  };
  HomologicalMinimalModel.prototype.y25 = function () {
    return this.x2e_1;
  };
  HomologicalMinimalModel.prototype.z25 = function () {
    return this.y2e_1;
  };
  HomologicalMinimalModel.prototype.a26 = function () {
    return this.z2e_1;
  };
  HomologicalMinimalModel.prototype.w25 = function () {
    var calculator = new HomologicalNextMMCalculator(this);
    return calculator.l26();
  };
  HomologicalMinimalModel.prototype.toString = function () {
    return 'HomologicalMinimalModel(targetDGAlgebra=' + this.w2e_1 + ', freeDGAlgebra=' + this.x2e_1 + ', dgAlgebraMap=' + this.y2e_1 + ', isomorphismUpTo=' + this.z2e_1 + ')';
  };
  HomologicalMinimalModel.prototype.hashCode = function () {
    var result = hashCode(this.w2e_1);
    result = imul(result, 31) + hashCode(this.x2e_1) | 0;
    result = imul(result, 31) + hashCode(this.y2e_1) | 0;
    result = imul(result, 31) + this.z2e_1 | 0;
    return result;
  };
  HomologicalMinimalModel.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof HomologicalMinimalModel))
      return false;
    var tmp0_other_with_cast = other instanceof HomologicalMinimalModel ? other : THROW_CCE();
    if (!equals(this.w2e_1, tmp0_other_with_cast.w2e_1))
      return false;
    if (!equals(this.x2e_1, tmp0_other_with_cast.x2e_1))
      return false;
    if (!equals(this.y2e_1, tmp0_other_with_cast.y2e_1))
      return false;
    if (!(this.z2e_1 === tmp0_other_with_cast.z2e_1))
      return false;
    return true;
  };
  HomologicalMinimalModel.$metadata$ = classMeta('HomologicalMinimalModel', [MinimalModel]);
  function HomologicalNextMMCalculator(minimalModel) {
    NextMMCalculator.call(this, minimalModel);
  }
  HomologicalNextMMCalculator.prototype.w26 = function () {
    return this.b26_1.a26() - 1 | 0;
  };
  HomologicalNextMMCalculator.prototype.x26 = function () {
    return this.b26_1.a26() - 2 | 0;
  };
  HomologicalNextMMCalculator.prototype.y26 = function (targetDGAlgebra, freeDGAlgebra, dgAlgebraMap, isomorphismUpTo) {
    return new HomologicalMinimalModel(targetDGAlgebra, freeDGAlgebra, dgAlgebraMap, isomorphismUpTo);
  };
  HomologicalNextMMCalculator.prototype.z26 = function (targetDGAlgebra, freeDGAlgebra, dgAlgebraMap, isomorphismUpTo) {
    return this.y26(targetDGAlgebra, freeDGAlgebra, dgAlgebraMap, isomorphismUpTo);
  };
  HomologicalNextMMCalculator.$metadata$ = classMeta('HomologicalNextMMCalculator', undefined, undefined, undefined, undefined, NextMMCalculator.prototype);
  function MMIndeterminateName(degree, index, totalNumberInDegree, type) {
    this.k2f_1 = degree;
    this.l2f_1 = index;
    this.m2f_1 = totalNumberInDegree;
    this.n2f_1 = type;
    // Inline function 'kotlin.require' call
    var tmp0_require = this.l2f_1 >= 0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.MMIndeterminateName.<anonymous>' call
      tmp$ret$0 = 'index must be non-negative, but ' + this.l2f_1 + ' was given';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.require' call
    var tmp1_require = this.l2f_1 < this.m2f_1;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp1_require) {
      var tmp$ret$1;
      // Inline function 'com.github.shwaka.kohomology.free.MMIndeterminateName.<anonymous>' call
      tmp$ret$1 = 'index must be less than totalNumberInDegree, ' + ('but the given values were ' + this.l2f_1 + ' and ' + this.m2f_1);
      var message_0 = tmp$ret$1;
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
  }
  MMIndeterminateName.prototype.z3 = function () {
    return this.l2f_1;
  };
  MMIndeterminateName.prototype.o2f = function () {
    return this.m2f_1;
  };
  MMIndeterminateName.prototype.c22 = function () {
    var tmp = PrintType_PLAIN_getInstance();
    var printConfig = PrintConfig_init_$Create$(tmp, null, null, null, null, 30, null);
    return new Identifier_0(this.c1n(printConfig));
  };
  MMIndeterminateName.prototype.c1n = function (printConfig) {
    var tmp0_subject = this.n2f_1;
    var tmp0 = tmp0_subject.d2_1;
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = 'v';
        break;
      case 1:
        tmp = 'w';
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    var char = tmp;
    var tmp1_subject = this.m2f_1;
    var tmp_0;
    if (tmp1_subject === 1) {
      var tmp2_subject = printConfig.b1x_1;
      var tmp0_0 = tmp2_subject.d2_1;
      var tmp_1;
      switch (tmp0_0) {
        case 0:
        case 2:
          tmp_1 = char + '_' + this.k2f_1;
          break;
        case 1:
          tmp_1 = char + '_{' + this.k2f_1 + '}';
          break;
        default:
          noWhenBranchMatchedException();
          break;
      }
      tmp_0 = tmp_1;
    } else {
      var tmp3_subject = printConfig.b1x_1;
      var tmp0_1 = tmp3_subject.d2_1;
      var tmp_2;
      switch (tmp0_1) {
        case 0:
        case 2:
          tmp_2 = char + '_' + this.k2f_1 + '_' + this.l2f_1;
          break;
        case 1:
          tmp_2 = char + '_{' + this.k2f_1 + ',' + this.l2f_1 + '}';
          break;
        default:
          noWhenBranchMatchedException();
          break;
      }
      tmp_0 = tmp_2;
    }
    return tmp_0;
  };
  MMIndeterminateName.prototype.toString = function () {
    var tmp = PrintType_PLAIN_getInstance();
    return this.c1n(PrintConfig_init_$Create$(tmp, null, null, null, null, 30, null));
  };
  MMIndeterminateName.prototype.hashCode = function () {
    var result = this.k2f_1;
    result = imul(result, 31) + this.l2f_1 | 0;
    result = imul(result, 31) + this.m2f_1 | 0;
    result = imul(result, 31) + this.n2f_1.hashCode() | 0;
    return result;
  };
  MMIndeterminateName.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MMIndeterminateName))
      return false;
    var tmp0_other_with_cast = other instanceof MMIndeterminateName ? other : THROW_CCE();
    if (!(this.k2f_1 === tmp0_other_with_cast.k2f_1))
      return false;
    if (!(this.l2f_1 === tmp0_other_with_cast.l2f_1))
      return false;
    if (!(this.m2f_1 === tmp0_other_with_cast.m2f_1))
      return false;
    if (!this.n2f_1.equals(tmp0_other_with_cast.n2f_1))
      return false;
    return true;
  };
  MMIndeterminateName.$metadata$ = classMeta('MMIndeterminateName', [IndeterminateName]);
  var MMIndeterminateType_COCYCLE_instance;
  var MMIndeterminateType_COCHAIN_instance;
  var MMIndeterminateType_entriesInitialized;
  function MMIndeterminateType_initEntries() {
    if (MMIndeterminateType_entriesInitialized)
      return Unit_getInstance();
    MMIndeterminateType_entriesInitialized = true;
    MMIndeterminateType_COCYCLE_instance = new MMIndeterminateType('COCYCLE', 0);
    MMIndeterminateType_COCHAIN_instance = new MMIndeterminateType('COCHAIN', 1);
  }
  function MMIndeterminateType(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  MMIndeterminateType.$metadata$ = classMeta('MMIndeterminateType', undefined, undefined, undefined, undefined, Enum.prototype);
  function MMIndeterminateType_COCYCLE_getInstance() {
    MMIndeterminateType_initEntries();
    return MMIndeterminateType_COCYCLE_instance;
  }
  function MMIndeterminateType_COCHAIN_getInstance() {
    MMIndeterminateType_initEntries();
    return MMIndeterminateType_COCHAIN_instance;
  }
  function Companion_46() {
    Companion_instance_46 = this;
  }
  Companion_46.prototype.p25 = function (targetDGAlgebra, isomorphismUpTo, reportProgress) {
    if (!(targetDGAlgebra.d1k().y1i_1 == null) ? targetDGAlgebra.d1k().y1i_1 === 0 : false) {
      return Companion_getInstance_36().p25(targetDGAlgebra, isomorphismUpTo, reportProgress);
    }
    if (!(targetDGAlgebra.d1k().x1i_1 == null) ? targetDGAlgebra.d1k().x1i_1 === 0 : false) {
      return Companion_getInstance_46().p25(targetDGAlgebra, isomorphismUpTo, reportProgress);
    }
    throw IllegalArgumentException_init_$Create$('Cannot compute minimal model of ' + targetDGAlgebra + ' ' + 'since it is not concentrated in non-positive or non-negative degrees');
  };
  Companion_46.$metadata$ = objectMeta('Companion');
  var Companion_instance_46;
  function Companion_getInstance_47() {
    if (Companion_instance_46 == null)
      new Companion_46();
    return Companion_instance_46;
  }
  function MinimalModel() {
  }
  MinimalModel.$metadata$ = interfaceMeta('MinimalModel', [GenericMinimalModel]);
  function MinimalModelProgress(currentIsomorphismUpTo, targetIsomorphismUpTo, currentNumberOfGenerators) {
    this.p2f_1 = currentIsomorphismUpTo;
    this.q2f_1 = targetIsomorphismUpTo;
    this.r2f_1 = currentNumberOfGenerators;
  }
  MinimalModelProgress.prototype.toString = function () {
    return 'MinimalModelProgress(currentIsomorphismUpTo=' + this.p2f_1 + ', targetIsomorphismUpTo=' + this.q2f_1 + ', currentNumberOfGenerators=' + this.r2f_1 + ')';
  };
  MinimalModelProgress.prototype.hashCode = function () {
    var result = this.p2f_1;
    result = imul(result, 31) + this.q2f_1 | 0;
    result = imul(result, 31) + this.r2f_1 | 0;
    return result;
  };
  MinimalModelProgress.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MinimalModelProgress))
      return false;
    var tmp0_other_with_cast = other instanceof MinimalModelProgress ? other : THROW_CCE();
    if (!(this.p2f_1 === tmp0_other_with_cast.p2f_1))
      return false;
    if (!(this.q2f_1 === tmp0_other_with_cast.q2f_1))
      return false;
    if (!(this.r2f_1 === tmp0_other_with_cast.r2f_1))
      return false;
    return true;
  };
  MinimalModelProgress.$metadata$ = classMeta('MinimalModelProgress');
  function Companion_47() {
    Companion_instance_47 = this;
  }
  Companion_47.prototype.z2d = function (matrixSpace, degreeGroup, monoid, name, getInternalPrintConfig) {
    return MonoidGAlgebraImpl_init_$Create$(matrixSpace, degreeGroup, monoid, name, getInternalPrintConfig);
  };
  Companion_47.$metadata$ = objectMeta('Companion');
  var Companion_instance_47;
  function Companion_getInstance_48() {
    if (Companion_instance_47 == null)
      new Companion_47();
    return Companion_instance_47;
  }
  function MonoidGAlgebra() {
  }
  MonoidGAlgebra.$metadata$ = interfaceMeta('MonoidGAlgebra', [GAlgebra]);
  function MonoidGAlgebraImpl_init_$Init$(matrixSpace, degreeGroup, monoid, name, getInternalPrintConfig, $this) {
    MonoidGAlgebraImpl.call($this, new MonoidGAlgebraFactory(matrixSpace, degreeGroup, monoid, name, getInternalPrintConfig));
    return $this;
  }
  function MonoidGAlgebraImpl_init_$Create$(matrixSpace, degreeGroup, monoid, name, getInternalPrintConfig) {
    return MonoidGAlgebraImpl_init_$Init$(matrixSpace, degreeGroup, monoid, name, getInternalPrintConfig, Object.create(MonoidGAlgebraImpl.prototype));
  }
  function MonoidGAlgebraImpl(factory) {
    this.s2f_1 = factory.h2g_1;
    this.t2f_1 = factory.b2g_1;
    this.u2f_1 = factory.i2g_1;
    this.v2f_1 = factory.j2g_1;
    this.w2f_1 = factory.d2g_1.w1k();
    this.x2f_1 = factory.d2g_1;
    this.y2f_1 = Companion_getInstance_16().f1t(this);
    this.z2f_1 = factory.h2g_1;
    this.a2g_1 = this;
  }
  MonoidGAlgebraImpl.prototype.d1k = function () {
    return this.s2f_1.d1k();
  };
  MonoidGAlgebraImpl.prototype.y1j = function () {
    return this.s2f_1.y1j();
  };
  MonoidGAlgebraImpl.prototype.e1k = function () {
    return this.s2f_1.e1k();
  };
  MonoidGAlgebraImpl.prototype.z1j = function () {
    return this.s2f_1.z1j();
  };
  MonoidGAlgebraImpl.prototype.a1k = function () {
    return this.s2f_1.a1k();
  };
  MonoidGAlgebraImpl.prototype.zc = function () {
    return this.s2f_1.zc();
  };
  MonoidGAlgebraImpl.prototype.x1j = function () {
    return this.s2f_1.x1j();
  };
  MonoidGAlgebraImpl.prototype.u1k = function () {
    return this.s2f_1.u1k();
  };
  MonoidGAlgebraImpl.prototype.g2b = function (a, b) {
    return this.s2f_1.o1k(a, b);
  };
  MonoidGAlgebraImpl.prototype.o1k = function (a, b) {
    return this.g2b(a, b);
  };
  MonoidGAlgebraImpl.prototype.i2b = function (gVector) {
    return this.s2f_1.m1k(gVector);
  };
  MonoidGAlgebraImpl.prototype.m1k = function (gVector) {
    return this.i2b(gVector);
  };
  MonoidGAlgebraImpl.prototype.k2b = function (gVector) {
    return this.s2f_1.n1k(gVector);
  };
  MonoidGAlgebraImpl.prototype.n1k = function (gVector) {
    return this.k2b(gVector);
  };
  MonoidGAlgebraImpl.prototype.m2b = function (gVectorOrZero, degree) {
    return this.s2f_1.l1k(gVectorOrZero, degree);
  };
  MonoidGAlgebraImpl.prototype.l1k = function (gVectorOrZero, degree) {
    return this.m2b(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  MonoidGAlgebraImpl.prototype.o2b = function (a, b) {
    return this.s2f_1.t1k(a, b);
  };
  MonoidGAlgebraImpl.prototype.t1k = function (a, b) {
    return this.o2b(a, b);
  };
  MonoidGAlgebraImpl.prototype.q2b = function (basisName, degree) {
    return this.s2f_1.h1k(basisName, degree);
  };
  MonoidGAlgebraImpl.prototype.h1k = function (basisName, degree) {
    var tmp = isInterface(basisName, GMonoidElement) ? basisName : THROW_CCE();
    return this.q2b(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  MonoidGAlgebraImpl.prototype.s2b = function (vector, degree) {
    return this.s2f_1.f1k(vector, degree);
  };
  MonoidGAlgebraImpl.prototype.f1k = function (vector, degree) {
    return this.s2b(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  MonoidGAlgebraImpl.prototype.u2b = function (vector, degree) {
    return this.s2f_1.g1k(vector, degree);
  };
  MonoidGAlgebraImpl.prototype.g1k = function (vector, degree) {
    return this.u2b(vector, degree);
  };
  MonoidGAlgebraImpl.prototype.b1k = function (degree) {
    return this.s2f_1.b1k(degree);
  };
  MonoidGAlgebraImpl.prototype.l = function (degree) {
    return this.s2f_1.l(degree);
  };
  MonoidGAlgebraImpl.prototype.i1k = function (degree) {
    return this.s2f_1.i1k(degree);
  };
  MonoidGAlgebraImpl.prototype.j1k = function (degree) {
    return this.s2f_1.j1k(degree);
  };
  MonoidGAlgebraImpl.prototype.k1k = function (degree) {
    return this.s2f_1.k1k(degree);
  };
  MonoidGAlgebraImpl.prototype.w2b = function (scalar, gVector) {
    return this.s2f_1.q1k(scalar, gVector);
  };
  MonoidGAlgebraImpl.prototype.q1k = function (scalar, gVector) {
    return this.w2b(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  MonoidGAlgebraImpl.prototype.y2b = function (a, b) {
    return this.s2f_1.p1k(a, b);
  };
  MonoidGAlgebraImpl.prototype.p1k = function (a, b) {
    return this.y2b(a, b);
  };
  MonoidGAlgebraImpl.prototype.toString = function () {
    return this.s2f_1.toString();
  };
  MonoidGAlgebraImpl.prototype.c1n = function (printConfig) {
    return this.s2f_1.c1n(printConfig);
  };
  MonoidGAlgebraImpl.prototype.u1j = function () {
    return this.t2f_1;
  };
  MonoidGAlgebraImpl.prototype.j1j = function () {
    return this.u2f_1;
  };
  MonoidGAlgebraImpl.prototype.v1k = function () {
    return this.v2f_1;
  };
  MonoidGAlgebraImpl.prototype.w1k = function () {
    return this.w2f_1;
  };
  MonoidGAlgebraImpl.prototype.e2b = function () {
    return this.x2f_1;
  };
  MonoidGAlgebraImpl.prototype.c1j = function () {
    return this.y2f_1;
  };
  MonoidGAlgebraImpl.prototype.c1k = function () {
    return this.z2f_1;
  };
  MonoidGAlgebraImpl.$metadata$ = classMeta('MonoidGAlgebraImpl', [MonoidGAlgebra, GVectorSpace]);
  function getBasisNames($this, degree) {
    return $this.d2g_1.k2g(degree);
  }
  function getVectorSpace($this, degree) {
    var tmp$ret$1;
    // Inline function 'kotlin.collections.getOrPut' call
    var tmp0_getOrPut = $this.g2g_1;
    var value = tmp0_getOrPut.t(degree);
    var tmp;
    if (value == null) {
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.MonoidGAlgebraFactory.getVectorSpace.<anonymous>' call
      var tmp_0 = Companion_getInstance_82();
      var tmp_1 = $this.b2g_1.x1j();
      var tmp_2 = getBasisNames($this, degree);
      tmp$ret$0 = tmp_0.l2g(tmp_1, tmp_2, null, 4, null);
      var answer = tmp$ret$0;
      tmp0_getOrPut.u(degree, answer);
      tmp = answer;
    } else {
      tmp = value;
    }
    tmp$ret$1 = tmp;
    return tmp$ret$1;
  }
  function getVectorSpace_0($this, degree) {
    return getVectorSpace($this, $this.c2g_1.oh(degree));
  }
  function getMultiplication($this, p, q) {
    var source1 = getVectorSpace($this, p);
    var source2 = getVectorSpace($this, q);
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = $this.c2g_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.free.MonoidGAlgebraFactory.getMultiplication.<anonymous>' call
    tmp$ret$0 = tmp0_run.e1j(p, q);
    tmp$ret$1 = tmp$ret$0;
    var target = getVectorSpace($this, tmp$ret$1);
    return ValueBilinearMap_init_$Create$(source1, source2, target, $this.b2g_1, generateGetValue_0($this, target));
  }
  function generateGetValue_0($this, target) {
    return MonoidGAlgebraFactory$generateGetValue$lambda($this, target);
  }
  function listDegreesForAugmentedDegree_0($this, augmentedDegree) {
    return $this.d2g_1.m2g(augmentedDegree);
  }
  function MonoidGAlgebraFactory$listDegreesForAugmentedDegree$ref($boundThis) {
    var l = function (p0) {
      return listDegreesForAugmentedDegree_0($boundThis, p0);
    };
    l.callableName = 'listDegreesForAugmentedDegree';
    return l;
  }
  function MonoidGAlgebraFactory$getVectorSpace$ref($boundThis) {
    var l = function (p0) {
      return getVectorSpace($boundThis, p0);
    };
    l.callableName = 'getVectorSpace';
    return l;
  }
  function MonoidGAlgebraFactory$multiplication$lambda(this$0) {
    return function (p, q) {
      return getMultiplication(this$0, p, q);
    };
  }
  function MonoidGAlgebraFactory$generateGetValue$lambda(this$0, $target) {
    return function (monoidElement1, monoidElement2) {
      var tmp$ret$3;
      // Inline function 'kotlin.let' call
      var tmp0_let = this$0.d2g_1.n2g(monoidElement1, monoidElement2);
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$2;
      // Inline function 'com.github.shwaka.kohomology.free.MonoidGAlgebraFactory.generateGetValue.<anonymous>.<anonymous>' call
      var tmp0_subject = tmp0_let;
      var tmp;
      if (tmp0_subject instanceof Zero_0) {
        tmp = $target.i1w();
      } else {
        if (tmp0_subject instanceof Signed) {
          var tmp1_container = tmp0_let;
          var monoidElement = tmp1_container.a4();
          var sign = tmp1_container.b4();
          var vectorWithoutSign = $target.g1w(monoidElement);
          var tmp2_subject = sign;
          var tmp0 = tmp2_subject.d2_1;
          var tmp_0;
          switch (tmp0) {
            case 0:
              tmp_0 = vectorWithoutSign;
              break;
            case 1:
              var tmp$ret$1;
              // Inline function 'kotlin.run' call
              var tmp0_run = $target.c1j();
              // Inline function 'kotlin.contracts.contract' call
              var tmp$ret$0;
              // Inline function 'com.github.shwaka.kohomology.free.MonoidGAlgebraFactory.generateGetValue.<anonymous>.<anonymous>.<anonymous>' call
              tmp$ret$0 = tmp0_run.q2g(vectorWithoutSign);
              tmp$ret$1 = tmp$ret$0;

              tmp_0 = tmp$ret$1;
              break;
            default:
              noWhenBranchMatchedException();
              break;
          }
          tmp = tmp_0;
        } else {
          noWhenBranchMatchedException();
        }
      }
      tmp$ret$2 = tmp;
      tmp$ret$3 = tmp$ret$2;
      return tmp$ret$3;
    };
  }
  function MonoidGAlgebraFactory(matrixSpace, degreeGroup, monoid, name, getInternalPrintConfig) {
    this.b2g_1 = matrixSpace;
    this.c2g_1 = degreeGroup;
    this.d2g_1 = monoid;
    this.e2g_1 = name;
    this.f2g_1 = getInternalPrintConfig;
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp$ret$0 = LinkedHashMap_init_$Create$();
    tmp.g2g_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp_1 = Companion_getInstance_24();
    var tmp_2 = this.b2g_1.x1j();
    var tmp_3 = MonoidGAlgebraFactory$listDegreesForAugmentedDegree$ref(this);
    var tmp_4 = this.d2g_1.d1k();
    tmp_0.h2g_1 = tmp_1.t1u(tmp_2, this.c2g_1, this.e2g_1, this.f2g_1, tmp_3, tmp_4, MonoidGAlgebraFactory$getVectorSpace$ref(this));
    var tmp_5 = this;
    var tmp_6 = 'Multiplication(' + this.e2g_1 + ')';
    tmp_5.i2g_1 = GBilinearMap_init_$Create$(this.b2g_1, this.h2g_1, this.h2g_1, this.h2g_1, 0, tmp_6, MonoidGAlgebraFactory$multiplication$lambda(this));
    this.j2g_1 = this.h2g_1.g1k(getVectorSpace_0(this, 0).g1w(this.d2g_1.v1k()), 0);
  }
  MonoidGAlgebraFactory.prototype.u1j = function () {
    return this.b2g_1;
  };
  MonoidGAlgebraFactory.$metadata$ = classMeta('MonoidGAlgebraFactory');
  function GenericMinimalModel() {
  }
  GenericMinimalModel.$metadata$ = interfaceMeta('GenericMinimalModel');
  function NextMMCalculator(minimalModel) {
    AbstractNextMMCalculator.call(this, minimalModel);
  }
  NextMMCalculator.prototype.k27 = function (degree, index, totalNumberInDegree, type) {
    return new MMIndeterminateName(degree, index, totalNumberInDegree, type);
  };
  NextMMCalculator.prototype.l27 = function (indeterminate) {
    return indeterminate;
  };
  NextMMCalculator.prototype.r2g = function (indeterminate) {
    return this.l27(indeterminate);
  };
  NextMMCalculator.$metadata$ = classMeta('NextMMCalculator', undefined, undefined, undefined, undefined, AbstractNextMMCalculator.prototype);
  function _get_cocyclesToHit__t6r0oe($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = cocyclesToHit$factory();
    tmp$ret$0 = $this.d26_1.f1();
    return tmp$ret$0;
  }
  function _get_cocyclesToKill__imudo9($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = cocyclesToKill$factory();
    tmp$ret$0 = $this.e26_1.f1();
    return tmp$ret$0;
  }
  function _get_nextIndeterminateList__u3rl4l($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = nextIndeterminateList$factory();
    tmp$ret$0 = $this.f26_1.f1();
    return tmp$ret$0;
  }
  function _get_nextFreeGAlgebra__9tj7cb($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = nextFreeGAlgebra$factory();
    tmp$ret$0 = $this.g26_1.f1();
    return tmp$ret$0;
  }
  function _get_inclusionToNext__jhd24n($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = inclusionToNext$factory();
    tmp$ret$0 = $this.h26_1.f1();
    return tmp$ret$0;
  }
  function _get_nextDifferential__sjy3r1($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = nextDifferential$factory();
    tmp$ret$0 = $this.i26_1.f1();
    return tmp$ret$0;
  }
  function _get_nextFreeDGAlgebra__za5qmj($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = nextFreeDGAlgebra$factory();
    tmp$ret$0 = $this.j26_1.f1();
    return tmp$ret$0;
  }
  function _get_nextDGAlgebraMap__94gpcv($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = nextDGAlgebraMap$factory();
    tmp$ret$0 = $this.k26_1.f1();
    return tmp$ret$0;
  }
  function AbstractNextMMCalculator$nextMinimalModel$delegate$lambda(this$0) {
    return function () {
      return this$0.z26(this$0.b26_1.x25(), _get_nextFreeDGAlgebra__za5qmj(this$0), _get_nextDGAlgebraMap__94gpcv(this$0), this$0.w26());
    };
  }
  function AbstractNextMMCalculator$cocyclesToHit$delegate$lambda(this$0) {
    return function () {
      var degree = this$0.x26();
      var targetDGAlgebra = this$0.b26_1.x25();
      var inducedMapOnCohomology = this$0.b26_1.z25().j1n();
      var cokernel = inducedMapOnCohomology.r1n();
      var section = cokernel.f1r();
      var tmp$ret$5;
      // Inline function 'kotlin.collections.map' call
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = cokernel.x1o(degree);
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var tmp0_iterator = tmp0_map.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.free.AbstractNextMMCalculator.cocyclesToHit$delegate.<anonymous>.<anonymous>' call
        tmp$ret$0 = section.o1j(item);
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      var tmp1_map = tmp$ret$2;
      var tmp$ret$4;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
      var tmp0_iterator_0 = tmp1_map.f();
      while (tmp0_iterator_0.g()) {
        var item_0 = tmp0_iterator_0.h();
        var tmp$ret$3;
        // Inline function 'com.github.shwaka.kohomology.free.AbstractNextMMCalculator.cocyclesToHit$delegate.<anonymous>.<anonymous>' call
        tmp$ret$3 = targetDGAlgebra.w1j(item_0);
        tmp0_mapTo_0.a(tmp$ret$3);
      }
      tmp$ret$4 = tmp0_mapTo_0;
      tmp$ret$5 = tmp$ret$4;
      return tmp$ret$5;
    };
  }
  function AbstractNextMMCalculator$cocyclesToKill$delegate$lambda(this$0) {
    return function () {
      var degree = this$0.x26();
      var inducedMapOnCohomology = this$0.b26_1.z25().j1n();
      var kernel = inducedMapOnCohomology.x1n();
      var incl = kernel.n1o();
      var tmp$ret$5;
      // Inline function 'kotlin.collections.map' call
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = kernel.x1o(degree + 1 | 0);
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var tmp0_iterator = tmp0_map.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.free.AbstractNextMMCalculator.cocyclesToKill$delegate.<anonymous>.<anonymous>' call
        tmp$ret$0 = incl.o1j(item);
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      var tmp1_map = tmp$ret$2;
      var tmp$ret$4;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
      var tmp0_iterator_0 = tmp1_map.f();
      while (tmp0_iterator_0.g()) {
        var item_0 = tmp0_iterator_0.h();
        var tmp$ret$3;
        // Inline function 'com.github.shwaka.kohomology.free.AbstractNextMMCalculator.cocyclesToKill$delegate.<anonymous>.<anonymous>' call
        tmp$ret$3 = this$0.b26_1.y25().w1j(item_0);
        tmp0_mapTo_0.a(tmp$ret$3);
      }
      tmp$ret$4 = tmp0_mapTo_0;
      tmp$ret$5 = tmp$ret$4;
      return tmp$ret$5;
    };
  }
  function AbstractNextMMCalculator$nextIndeterminateList$delegate$lambda(this$0) {
    return function () {
      var degree = this$0.x26();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = this$0.b26_1.y25().t23();
      var tmp$ret$0;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var tmp0_iterator = tmp0_map.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        tmp0_mapTo.a(this$0.r2g(item));
      }
      tmp$ret$0 = tmp0_mapTo;
      tmp$ret$1 = tmp$ret$0;
      var tmp = tmp$ret$1;
      var tmp$ret$4;
      // Inline function 'kotlin.collections.map' call
      var tmp1_map = until(0, _get_cocyclesToHit__t6r0oe(this$0).i());
      var tmp$ret$3;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
      var inductionVariable = tmp1_map.m1_1;
      var last = tmp1_map.n1_1;
      if (inductionVariable <= last)
        do {
          var item_0 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp$ret$2;
          // Inline function 'com.github.shwaka.kohomology.free.AbstractNextMMCalculator.nextIndeterminateList$delegate.<anonymous>.<anonymous>' call
          var name = this$0.k27(degree, item_0, _get_cocyclesToHit__t6r0oe(this$0).i(), MMIndeterminateType_COCYCLE_getInstance());
          tmp$ret$2 = Indeterminate_2(name, degree);
          tmp0_mapTo_0.a(tmp$ret$2);
        }
         while (!(item_0 === last));
      tmp$ret$3 = tmp0_mapTo_0;
      tmp$ret$4 = tmp$ret$3;
      var tmp_0 = plus(tmp, tmp$ret$4);
      var tmp$ret$7;
      // Inline function 'kotlin.collections.map' call
      var tmp2_map = until(0, _get_cocyclesToKill__imudo9(this$0).i());
      var tmp$ret$6;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_1 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp2_map, 10));
      var inductionVariable_0 = tmp2_map.m1_1;
      var last_0 = tmp2_map.n1_1;
      if (inductionVariable_0 <= last_0)
        do {
          var item_1 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          var tmp$ret$5;
          // Inline function 'com.github.shwaka.kohomology.free.AbstractNextMMCalculator.nextIndeterminateList$delegate.<anonymous>.<anonymous>' call
          var name_0 = this$0.k27(degree, item_1, _get_cocyclesToKill__imudo9(this$0).i(), MMIndeterminateType_COCHAIN_getInstance());
          tmp$ret$5 = Indeterminate_2(name_0, degree);
          tmp0_mapTo_1.a(tmp$ret$5);
        }
         while (!(item_1 === last_0));
      tmp$ret$6 = tmp0_mapTo_1;
      tmp$ret$7 = tmp$ret$6;
      return plus(tmp_0, tmp$ret$7);
    };
  }
  function AbstractNextMMCalculator$nextFreeGAlgebra$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_41().k2d(this$0.b26_1.y25().u1j(), _get_nextIndeterminateList__u3rl4l(this$0));
    };
  }
  function AbstractNextMMCalculator$inclusionToNext$delegate$lambda(this$0) {
    return function () {
      var valueList = slice(_get_nextFreeGAlgebra__9tj7cb(this$0).i1o(), get_indices_0(this$0.b26_1.y25().i1o()));
      return this$0.b26_1.y25().m2a(_get_nextFreeGAlgebra__9tj7cb(this$0), valueList);
    };
  }
  function AbstractNextMMCalculator$nextDifferential$delegate$lambda(this$0) {
    return function () {
      var degree = this$0.x26() + 1 | 0;
      var incl = _get_inclusionToNext__jhd24n(this$0);
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = this$0.b26_1.y25().i1o();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var tmp0_iterator = tmp0_map.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.free.AbstractNextMMCalculator.nextDifferential$delegate.<anonymous>.<anonymous>' call
        tmp$ret$0 = incl.o1j(this$0.b26_1.y25().k1j().o1j(item));
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      var tmp = tmp$ret$2;
      var tmp$ret$5;
      // Inline function 'kotlin.collections.List' call
      var tmp1_List = _get_cocyclesToHit__t6r0oe(this$0).i();
      var tmp$ret$4;
      // Inline function 'kotlin.collections.MutableList' call
      var list = ArrayList_init_$Create$(tmp1_List);
      // Inline function 'kotlin.repeat' call
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      if (inductionVariable < tmp1_List)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'kotlin.collections.MutableList.<anonymous>' call
          var tmp$ret$3;
          // Inline function 'com.github.shwaka.kohomology.free.AbstractNextMMCalculator.nextDifferential$delegate.<anonymous>.<anonymous>' call
          tmp$ret$3 = _get_nextFreeGAlgebra__9tj7cb(this$0).k1k(degree);
          list.a(tmp$ret$3);
        }
         while (inductionVariable < tmp1_List);
      tmp$ret$4 = list;
      tmp$ret$5 = tmp$ret$4;
      var tmp_0 = plus(tmp, tmp$ret$5);
      var tmp$ret$8;
      // Inline function 'kotlin.collections.map' call
      var tmp2_map = _get_cocyclesToKill__imudo9(this$0);
      var tmp$ret$7;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp2_map, 10));
      var tmp0_iterator_0 = tmp2_map.f();
      while (tmp0_iterator_0.g()) {
        var item_0 = tmp0_iterator_0.h();
        var tmp$ret$6;
        // Inline function 'com.github.shwaka.kohomology.free.AbstractNextMMCalculator.nextDifferential$delegate.<anonymous>.<anonymous>' call
        tmp$ret$6 = incl.o1j(item_0);
        tmp0_mapTo_0.a(tmp$ret$6);
      }
      tmp$ret$7 = tmp0_mapTo_0;
      tmp$ret$8 = tmp$ret$7;
      var differentialValueList = plus(tmp_0, tmp$ret$8);
      return _get_nextFreeGAlgebra__9tj7cb(this$0).d2a(differentialValueList, 1);
    };
  }
  function AbstractNextMMCalculator$nextFreeDGAlgebra$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_39().a2a(_get_nextFreeGAlgebra__9tj7cb(this$0), _get_nextDifferential__sjy3r1(this$0));
    };
  }
  function AbstractNextMMCalculator$nextDGAlgebraMap$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = this$0.b26_1.y25().i1o();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var tmp0_iterator = tmp0_map.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.free.AbstractNextMMCalculator.nextDGAlgebraMap$delegate.<anonymous>.<anonymous>' call
        tmp$ret$0 = this$0.b26_1.z25().o1j(item);
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      var tmp = plus(tmp$ret$2, _get_cocyclesToHit__t6r0oe(this$0));
      var tmp$ret$5;
      // Inline function 'kotlin.collections.map' call
      var tmp1_map = _get_cocyclesToKill__imudo9(this$0);
      var tmp$ret$4;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
      var tmp0_iterator_0 = tmp1_map.f();
      while (tmp0_iterator_0.g()) {
        var item_0 = tmp0_iterator_0.h();
        var tmp$ret$3;
        // Inline function 'com.github.shwaka.kohomology.free.AbstractNextMMCalculator.nextDGAlgebraMap$delegate.<anonymous>.<anonymous>' call
        var targetCoboundary = this$0.b26_1.z25().o1j(item_0);
        var tmp0_elvis_lhs = this$0.b26_1.x25().k1j().s1n(targetCoboundary);
        var tmp_0;
        if (tmp0_elvis_lhs == null) {
          throw IllegalStateException_init_$Create$("This can't happen! Failed to find preimage of d.");
        } else {
          tmp_0 = tmp0_elvis_lhs;
        }
        var boundingTargetCochain = tmp_0;
        tmp$ret$3 = boundingTargetCochain;
        tmp0_mapTo_0.a(tmp$ret$3);
      }
      tmp$ret$4 = tmp0_mapTo_0;
      tmp$ret$5 = tmp$ret$4;
      var dgAlgebraMapValueList = plus(tmp, tmp$ret$5);
      return _get_nextFreeDGAlgebra__za5qmj(this$0).o25(this$0.b26_1.x25(), dgAlgebraMapValueList);
    };
  }
  function AbstractNextMMCalculator(minimalModel) {
    this.b26_1 = minimalModel;
    var tmp = this;
    tmp.c26_1 = lazy(AbstractNextMMCalculator$nextMinimalModel$delegate$lambda(this));
    var tmp_0 = this;
    tmp_0.d26_1 = lazy(AbstractNextMMCalculator$cocyclesToHit$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.e26_1 = lazy(AbstractNextMMCalculator$cocyclesToKill$delegate$lambda(this));
    var tmp_2 = this;
    tmp_2.f26_1 = lazy(AbstractNextMMCalculator$nextIndeterminateList$delegate$lambda(this));
    var tmp_3 = this;
    tmp_3.g26_1 = lazy(AbstractNextMMCalculator$nextFreeGAlgebra$delegate$lambda(this));
    var tmp_4 = this;
    tmp_4.h26_1 = lazy(AbstractNextMMCalculator$inclusionToNext$delegate$lambda(this));
    var tmp_5 = this;
    tmp_5.i26_1 = lazy(AbstractNextMMCalculator$nextDifferential$delegate$lambda(this));
    var tmp_6 = this;
    tmp_6.j26_1 = lazy(AbstractNextMMCalculator$nextFreeDGAlgebra$delegate$lambda(this));
    var tmp_7 = this;
    tmp_7.k26_1 = lazy(AbstractNextMMCalculator$nextDGAlgebraMap$delegate$lambda(this));
  }
  AbstractNextMMCalculator.prototype.m27 = function () {
    return this.b26_1;
  };
  AbstractNextMMCalculator.prototype.l26 = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = nextMinimalModel$factory();
    tmp$ret$0 = this.c26_1.f1();
    return tmp$ret$0;
  };
  AbstractNextMMCalculator.$metadata$ = classMeta('AbstractNextMMCalculator');
  function nextMinimalModel$factory() {
    return getPropertyCallableRef('nextMinimalModel', 1, KProperty1, function (receiver) {
      return receiver.l26();
    }, null);
  }
  function cocyclesToHit$factory() {
    return getPropertyCallableRef('cocyclesToHit', 1, KProperty1, function (receiver) {
      return _get_cocyclesToHit__t6r0oe(receiver);
    }, null);
  }
  function cocyclesToKill$factory() {
    return getPropertyCallableRef('cocyclesToKill', 1, KProperty1, function (receiver) {
      return _get_cocyclesToKill__imudo9(receiver);
    }, null);
  }
  function nextIndeterminateList$factory() {
    return getPropertyCallableRef('nextIndeterminateList', 1, KProperty1, function (receiver) {
      return _get_nextIndeterminateList__u3rl4l(receiver);
    }, null);
  }
  function nextFreeGAlgebra$factory() {
    return getPropertyCallableRef('nextFreeGAlgebra', 1, KProperty1, function (receiver) {
      return _get_nextFreeGAlgebra__9tj7cb(receiver);
    }, null);
  }
  function inclusionToNext$factory() {
    return getPropertyCallableRef('inclusionToNext', 1, KProperty1, function (receiver) {
      return _get_inclusionToNext__jhd24n(receiver);
    }, null);
  }
  function nextDifferential$factory() {
    return getPropertyCallableRef('nextDifferential', 1, KProperty1, function (receiver) {
      return _get_nextDifferential__sjy3r1(receiver);
    }, null);
  }
  function nextFreeDGAlgebra$factory() {
    return getPropertyCallableRef('nextFreeDGAlgebra', 1, KProperty1, function (receiver) {
      return _get_nextFreeDGAlgebra__za5qmj(receiver);
    }, null);
  }
  function nextDGAlgebraMap$factory() {
    return getPropertyCallableRef('nextDGAlgebraMap', 1, KProperty1, function (receiver) {
      return _get_nextDGAlgebraMap__94gpcv(receiver);
    }, null);
  }
  function Companion_48() {
    Companion_instance_48 = this;
  }
  Companion_48.$metadata$ = objectMeta('Companion');
  var Companion_instance_48;
  function Companion_getInstance_49() {
    if (Companion_instance_48 == null)
      new Companion_48();
    return Companion_instance_48;
  }
  function addExponentLists($this, exponentList1, exponentList2) {
    var tmp = 0;
    var tmp_0 = exponentList1.length;
    var tmp_1 = new Int32Array(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.monoid.FreeGMonoid.addExponentLists.<anonymous>' call
      tmp$ret$0 = exponentList1[tmp_2] + exponentList2[tmp_2] | 0;
      tmp_1[tmp_2] = tmp$ret$0;
      tmp = tmp + 1 | 0;
    }
    return tmp_1;
  }
  function _get_monomialListGeneratorWithAugmentedDegree__ota534($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = monomialListGeneratorWithAugmentedDegree$factory();
    tmp$ret$0 = $this.c2d_1.f1();
    return tmp$ret$0;
  }
  function listElementsForAugmentedDegree($this, augmentedDegree) {
    var elementListWithIntDegree = _get_monomialListGeneratorWithAugmentedDegree__ota534($this).w2g(new IntDegree(augmentedDegree));
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(elementListWithIntDegree, 10));
    var tmp0_iterator = elementListWithIntDegree.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.monoid.FreeGMonoid.listElementsForAugmentedDegree.<anonymous>' call
      tmp$ret$0 = new Monomial($this.w2c_1, $this.x2c_1, item.n29_1);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function separate($this, monomial, index) {
    var separatedExponent = monomial.n29_1[index];
    if (separatedExponent === 0)
      return null;
    var tmp = 0;
    var tmp_0 = monomial.n29_1.length;
    var tmp_1 = new Int32Array(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.monoid.FreeGMonoid.separate.<anonymous>' call
      tmp$ret$0 = tmp_2 === index ? 0 : monomial.n29_1[tmp_2];
      tmp_1[tmp_2] = tmp$ret$0;
      tmp = tmp + 1 | 0;
    }
    var remainingExponentList = tmp_1;
    var remainingMonomial = new Monomial($this.w2c_1, $this.x2c_1, remainingExponentList);
    var separatedIndeterminate = $this.x2c_1.l(index);
    var tmp_3 = 0;
    var tmp_4 = monomial.n29_1.length;
    var tmp_5 = new Int32Array(tmp_4);
    while (tmp_3 < tmp_4) {
      var tmp_6 = tmp_3;
      var tmp$ret$1;
      // Inline function 'com.github.shwaka.kohomology.free.monoid.FreeGMonoid.separate.<anonymous>' call
      tmp$ret$1 = tmp_6 === index ? monomial.n29_1[tmp_6] : 0;
      tmp_5[tmp_6] = tmp$ret$1;
      tmp_3 = tmp_3 + 1 | 0;
    }
    var separatedExponentList = tmp_5;
    var multipliedMonomialOrZero = $this.c2h(new Monomial($this.w2c_1, $this.x2c_1, separatedExponentList), remainingMonomial);
    var tmp0_subject = multipliedMonomialOrZero;
    var tmp_7;
    if (tmp0_subject instanceof Signed) {
      tmp_7 = multipliedMonomialOrZero.p2g_1;
    } else {
      if (tmp0_subject instanceof Zero_0) {
        throw Exception_init_$Create$("This can't happen!");
      } else {
        noWhenBranchMatchedException();
      }
    }
    var sign = tmp_7;
    return new MonomialSeparation(remainingMonomial, separatedIndeterminate, separatedExponent, sign, index);
  }
  function FreeGMonoid$indeterminateList$delegate$lambda(this$0) {
    return function () {
      return this$0.x2c_1.d2h();
    };
  }
  function FreeGMonoid$boundedness$delegate$lambda(this$0) {
    return function () {
      var tmp;
      if (this$0.x2c_1.f2h()) {
        tmp = this$0.x2c_1.e2h();
      } else {
        tmp = null;
      }
      var bound = tmp;
      var tmp0_subject = this$0.x2c_1;
      var tmp_0;
      if (tmp0_subject instanceof PositiveIndeterminateList) {
        tmp_0 = new Boundedness(bound, 0);
      } else {
        if (tmp0_subject instanceof NegativeIndeterminateList) {
          tmp_0 = new Boundedness(0, bound);
        } else {
          noWhenBranchMatchedException();
        }
      }
      return tmp_0;
    };
  }
  function FreeGMonoid$monomialListGeneratorWithAugmentedDegree$delegate$lambda$lambda(this$0) {
    return function (indeterminate) {
      return Indeterminate_2(indeterminate.p29_1, this$0.w2c_1.a1j(indeterminate.q29_1));
    };
  }
  function FreeGMonoid$monomialListGeneratorWithAugmentedDegree$delegate$lambda(this$0) {
    return function () {
      var indeterminateRawList = this$0.x2c_1.g2h(FreeGMonoid$monomialListGeneratorWithAugmentedDegree$delegate$lambda$lambda(this$0));
      var indeterminateListWithAugDeg = Companion_getInstance_50().h2h(IntDegreeGroup_getInstance(), indeterminateRawList);
      return new MonomialListGenerator(IntDegreeGroup_getInstance(), indeterminateListWithAugDeg);
    };
  }
  function FreeGMonoid(degreeGroup, indeterminateList) {
    Companion_getInstance_49();
    this.w2c_1 = degreeGroup;
    this.x2c_1 = Companion_getInstance_50().h2h(this.w2c_1, indeterminateList);
    var tmp = this;
    tmp.y2c_1 = lazy(FreeGMonoid$indeterminateList$delegate$lambda(this));
    var tmp_0 = this;
    var tmp_1 = 0;
    var tmp_2 = this.x2c_1.i();
    var tmp_3 = new Int32Array(tmp_2);
    while (tmp_1 < tmp_2) {
      var tmp_4 = tmp_1;
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.monoid.FreeGMonoid.unit.<anonymous>' call
      tmp$ret$0 = 0;
      tmp_3[tmp_4] = tmp$ret$0;
      tmp_1 = tmp_1 + 1 | 0;
    }
    tmp_0.z2c_1 = new Monomial(this.w2c_1, this.x2c_1, tmp_3);
    this.a2d_1 = true;
    var tmp_5 = this;
    tmp_5.b2d_1 = lazy(FreeGMonoid$boundedness$delegate$lambda(this));
    var tmp_6 = this;
    tmp_6.c2d_1 = lazy(FreeGMonoid$monomialListGeneratorWithAugmentedDegree$delegate$lambda(this));
  }
  FreeGMonoid.prototype.y1j = function () {
    return this.w2c_1;
  };
  FreeGMonoid.prototype.t23 = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = indeterminateList$factory();
    tmp$ret$0 = this.y2c_1.f1();
    return tmp$ret$0;
  };
  FreeGMonoid.prototype.v1k = function () {
    return this.z2c_1;
  };
  FreeGMonoid.prototype.w1k = function () {
    return this.a2d_1;
  };
  FreeGMonoid.prototype.d1k = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = boundedness$factory();
    tmp$ret$0 = this.b2d_1.f1();
    return tmp$ret$0;
  };
  FreeGMonoid.prototype.i2h = function (exponentList) {
    return new Monomial(this.w2c_1, this.x2c_1, exponentList);
  };
  FreeGMonoid.prototype.c2h = function (monoidElement1, monoidElement2) {
    var size = this.x2c_1.i();
    var exponentList = addExponentLists(this, monoidElement1.n29_1, monoidElement2.n29_1);
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (this.x2c_1.l(i).q29_1.f22() ? exponentList[i] >= 2 : false)
          return Zero_getInstance_0();
      }
       while (inductionVariable < size);
    var sign = Sign_PLUS_getInstance();
    var inductionVariable_0 = 0;
    if (inductionVariable_0 < size)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        if (this.x2c_1.l(i_0).q29_1.f22() ? monoidElement1.n29_1[i_0] === 1 : false) {
          var inductionVariable_1 = 0;
          if (inductionVariable_1 < i_0)
            do {
              var j = inductionVariable_1;
              inductionVariable_1 = inductionVariable_1 + 1 | 0;
              if (this.x2c_1.l(j).q29_1.f22() ? monoidElement2.n29_1[j] === 1 : false) {
                sign = sign.a6();
              }
            }
             while (inductionVariable_1 < i_0);
        }
      }
       while (inductionVariable_0 < size);
    var monomial = new Monomial(this.w2c_1, this.x2c_1, exponentList);
    return new Signed(monomial, sign);
  };
  FreeGMonoid.prototype.n2g = function (monoidElement1, monoidElement2) {
    var tmp = monoidElement1 instanceof Monomial ? monoidElement1 : THROW_CCE();
    return this.c2h(tmp, monoidElement2 instanceof Monomial ? monoidElement2 : THROW_CCE());
  };
  FreeGMonoid.prototype.k2g = function (degree) {
    var augmentedDegree = this.w2c_1.a1j(degree);
    var tmp$ret$2;
    // Inline function 'kotlin.collections.filter' call
    var tmp0_filter = listElementsForAugmentedDegree(this, augmentedDegree);
    var tmp$ret$1;
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo = ArrayList_init_$Create$_0();
    var tmp0_iterator = tmp0_filter.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.monoid.FreeGMonoid.listElements.<anonymous>' call
      tmp$ret$0 = equals(element.q1n(), degree);
      if (tmp$ret$0) {
        tmp0_filterTo.a(element);
      }
    }
    tmp$ret$1 = tmp0_filterTo;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  FreeGMonoid.prototype.m2g = function (augmentedDegree) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = listElementsForAugmentedDegree(this, augmentedDegree);
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.monoid.FreeGMonoid.listDegreesForAugmentedDegree.<anonymous>' call
      tmp$ret$0 = item.q1n();
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    return distinct(tmp$ret$2);
  };
  FreeGMonoid.prototype.d2d = function (monomial) {
    var tmp$ret$3;
    // Inline function 'kotlin.collections.mapNotNull' call
    var tmp0_mapNotNull = this.x2c_1.z2g_1;
    var tmp$ret$2;
    // Inline function 'kotlin.collections.mapNotNullTo' call
    var tmp0_mapNotNullTo = ArrayList_init_$Create$_0();
    // Inline function 'kotlin.collections.forEach' call
    var inductionVariable = tmp0_mapNotNull.m1_1;
    var last = tmp0_mapNotNull.n1_1;
    if (inductionVariable <= last)
      do {
        var element = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.collections.mapNotNullTo.<anonymous>' call
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.free.monoid.FreeGMonoid.allSeparations.<anonymous>' call
        tmp$ret$0 = separate(this, monomial, element);
        var tmp0_safe_receiver = tmp$ret$0;
        if (tmp0_safe_receiver == null)
          null;
        else {
          var tmp$ret$1;
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          tmp0_mapNotNullTo.a(tmp0_safe_receiver);
          tmp$ret$1 = Unit_getInstance();
        }
      }
       while (!(element === last));
    tmp$ret$2 = tmp0_mapNotNullTo;
    tmp$ret$3 = tmp$ret$2;
    return tmp$ret$3;
  };
  FreeGMonoid.prototype.toString = function () {
    var indeterminateListString = this.x2c_1.m2h(', ', null, 2, null);
    return 'FreeGMonoid(' + indeterminateListString + ')';
  };
  FreeGMonoid.$metadata$ = classMeta('FreeGMonoid', [GMonoid]);
  function MonomialSeparation(remainingMonomial, separatedIndeterminate, separatedExponent, sign, index) {
    this.e2d_1 = remainingMonomial;
    this.f2d_1 = separatedIndeterminate;
    this.g2d_1 = separatedExponent;
    this.h2d_1 = sign;
    this.i2d_1 = index;
    if (this.g2d_1 <= 0)
      throw Exception_init_$Create$('separatedExponent must be positive');
  }
  MonomialSeparation.prototype.n2h = function () {
    return this.e2d_1;
  };
  MonomialSeparation.prototype.o2h = function () {
    return this.g2d_1;
  };
  MonomialSeparation.prototype.p2h = function () {
    return this.h2d_1;
  };
  MonomialSeparation.prototype.z3 = function () {
    return this.i2d_1;
  };
  MonomialSeparation.prototype.toString = function () {
    return 'MonomialSeparation(remainingMonomial=' + this.e2d_1 + ', separatedIndeterminate=' + this.f2d_1 + ', separatedExponent=' + this.g2d_1 + ', sign=' + this.h2d_1 + ', index=' + this.i2d_1 + ')';
  };
  MonomialSeparation.prototype.hashCode = function () {
    var result = this.e2d_1.hashCode();
    result = imul(result, 31) + this.f2d_1.hashCode() | 0;
    result = imul(result, 31) + this.g2d_1 | 0;
    result = imul(result, 31) + this.h2d_1.hashCode() | 0;
    result = imul(result, 31) + this.i2d_1 | 0;
    return result;
  };
  MonomialSeparation.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MonomialSeparation))
      return false;
    var tmp0_other_with_cast = other instanceof MonomialSeparation ? other : THROW_CCE();
    if (!this.e2d_1.equals(tmp0_other_with_cast.e2d_1))
      return false;
    if (!this.f2d_1.equals(tmp0_other_with_cast.f2d_1))
      return false;
    if (!(this.g2d_1 === tmp0_other_with_cast.g2d_1))
      return false;
    if (!this.h2d_1.equals(tmp0_other_with_cast.h2d_1))
      return false;
    if (!(this.i2d_1 === tmp0_other_with_cast.i2d_1))
      return false;
    return true;
  };
  MonomialSeparation.$metadata$ = classMeta('MonomialSeparation');
  function FreeGMonoidMorphismByDegreeChange(source, degreeMorphism) {
    this.l2d_1 = source;
    this.m2d_1 = degreeMorphism;
    var tmp = this;
    var tmp$ret$4;
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$3;
    // Inline function 'com.github.shwaka.kohomology.free.monoid.FreeGMonoidMorphismByDegreeChange.target.<anonymous>' call
    var targetDegreeGroup = this.m2d_1.p1n();
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = this.l2d_1.t23();
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.monoid.FreeGMonoidMorphismByDegreeChange.target.<anonymous>.<anonymous>' call
      tmp$ret$0 = item.r2d(this.m2d_1);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var targetIndeterminateList = tmp$ret$2;
    tmp$ret$3 = new FreeGMonoid(targetDegreeGroup, targetIndeterminateList);
    tmp$ret$4 = tmp$ret$3;
    tmp.n2d_1 = tmp$ret$4;
  }
  FreeGMonoidMorphismByDegreeChange.prototype.o1n = function () {
    return this.l2d_1;
  };
  FreeGMonoidMorphismByDegreeChange.prototype.q2h = function () {
    return this.m2d_1;
  };
  FreeGMonoidMorphismByDegreeChange.prototype.o2d = function (monoidElement) {
    return this.n2d_1.i2h(monoidElement.n29_1);
  };
  FreeGMonoidMorphismByDegreeChange.$metadata$ = classMeta('FreeGMonoidMorphismByDegreeChange', [GMonoidMorphismWithDegreeChange]);
  function listMonomialsInternal($this, degree, index) {
    if (index < 0 ? true : index > $this.t2g_1.i())
      throw Exception_init_$Create$("This can't happen! (illegal index: " + index + ')');
    if (index === $this.t2g_1.i()) {
      return degree.dj() ? listOf($this.v2g_1) : emptyList();
    }
    var cacheKey = new Pair(degree, index);
    var tmp$ret$7;
    // Inline function 'kotlin.collections.getOrPut' call
    var tmp0_getOrPut = $this.u2g_1;
    var value = tmp0_getOrPut.t(cacheKey);
    var tmp;
    if (value == null) {
      var tmp$ret$6;
      // Inline function 'com.github.shwaka.kohomology.free.monoid.MonomialListGenerator.listMonomialsInternal.<anonymous>' call
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = $this.s2g_1.c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.monoid.MonomialListGenerator.listMonomialsInternal.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.f1u(degree, $this.t2g_1.l(index).q29_1);
      tmp$ret$1 = tmp$ret$0;
      var newDegree = tmp$ret$1;
      var tmp_0;
      if ($this.t2g_1.s2h(newDegree)) {
        var tmp$ret$5;
        // Inline function 'kotlin.collections.mapNotNull' call
        var tmp1_mapNotNull = listMonomialsInternal($this, newDegree, index);
        var tmp$ret$4;
        // Inline function 'kotlin.collections.mapNotNullTo' call
        var tmp0_mapNotNullTo = ArrayList_init_$Create$_0();
        // Inline function 'kotlin.collections.forEach' call
        var tmp0_iterator = tmp1_mapNotNull.f();
        while (tmp0_iterator.g()) {
          var element = tmp0_iterator.h();
          // Inline function 'kotlin.collections.mapNotNullTo.<anonymous>' call
          var tmp$ret$2;
          // Inline function 'com.github.shwaka.kohomology.free.monoid.MonomialListGenerator.listMonomialsInternal.<anonymous>.<anonymous>' call
          tmp$ret$2 = element.r2h(index);
          var tmp0_safe_receiver = tmp$ret$2;
          if (tmp0_safe_receiver == null)
            null;
          else {
            var tmp$ret$3;
            // Inline function 'kotlin.let' call
            // Inline function 'kotlin.contracts.contract' call
            tmp0_mapNotNullTo.a(tmp0_safe_receiver);
            tmp$ret$3 = Unit_getInstance();
          }
        }
        tmp$ret$4 = tmp0_mapNotNullTo;
        tmp$ret$5 = tmp$ret$4;
        tmp_0 = tmp$ret$5;
      } else {
        tmp_0 = emptyList();
      }
      var listWithNonZeroAtIndex = tmp_0;
      var listWithZeroAtIndex = listMonomialsInternal($this, degree, index + 1 | 0);
      tmp$ret$6 = plus(listWithNonZeroAtIndex, listWithZeroAtIndex);
      var answer = tmp$ret$6;
      tmp0_getOrPut.u(cacheKey, answer);
      tmp = answer;
    } else {
      tmp = value;
    }
    tmp$ret$7 = tmp;
    return tmp$ret$7;
  }
  function MonomialListGenerator(degreeGroup, indeterminateList) {
    this.s2g_1 = degreeGroup;
    this.t2g_1 = indeterminateList;
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp$ret$0 = LinkedHashMap_init_$Create$();
    tmp.u2g_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp_1 = 0;
    var tmp_2 = this.t2g_1.i();
    var tmp_3 = new Int32Array(tmp_2);
    while (tmp_1 < tmp_2) {
      var tmp_4 = tmp_1;
      var tmp$ret$1;
      // Inline function 'com.github.shwaka.kohomology.free.monoid.MonomialListGenerator.unit.<anonymous>' call
      tmp$ret$1 = 0;
      tmp_3[tmp_4] = tmp$ret$1;
      tmp_1 = tmp_1 + 1 | 0;
    }
    tmp_0.v2g_1 = new Monomial(this.s2g_1, this.t2g_1, tmp_3);
  }
  MonomialListGenerator.prototype.y1j = function () {
    return this.s2g_1;
  };
  MonomialListGenerator.prototype.t23 = function () {
    return this.t2g_1;
  };
  MonomialListGenerator.prototype.w2g = function (degree) {
    if (!this.t2g_1.s2h(degree))
      return emptyList();
    return listMonomialsInternal(this, degree, 0);
  };
  MonomialListGenerator.$metadata$ = classMeta('MonomialListGenerator');
  function indeterminateList$factory() {
    return getPropertyCallableRef('indeterminateList', 1, KProperty1, function (receiver) {
      return receiver.t23();
    }, null);
  }
  function boundedness$factory() {
    return getPropertyCallableRef('boundedness', 1, KProperty1, function (receiver) {
      return receiver.d1k();
    }, null);
  }
  function monomialListGeneratorWithAugmentedDegree$factory() {
    return getPropertyCallableRef('monomialListGeneratorWithAugmentedDegree', 1, KProperty1, function (receiver) {
      return _get_monomialListGeneratorWithAugmentedDegree__ota534(receiver);
    }, null);
  }
  function GMonoidElement() {
  }
  GMonoidElement.$metadata$ = interfaceMeta('GMonoidElement', [BasisName]);
  function GMonoid() {
  }
  GMonoid.$metadata$ = interfaceMeta('GMonoid');
  function SignedOrZero() {
  }
  SignedOrZero.$metadata$ = classMeta('SignedOrZero');
  function Zero_0() {
    Zero_instance_0 = this;
    SignedOrZero.call(this);
  }
  Zero_0.$metadata$ = objectMeta('Zero', undefined, undefined, undefined, undefined, SignedOrZero.prototype);
  var Zero_instance_0;
  function Zero_getInstance_0() {
    if (Zero_instance_0 == null)
      new Zero_0();
    return Zero_instance_0;
  }
  function Signed(value, sign) {
    SignedOrZero.call(this);
    this.o2g_1 = value;
    this.p2g_1 = sign;
  }
  Signed.prototype.a4 = function () {
    return this.o2g_1;
  };
  Signed.prototype.b4 = function () {
    return this.p2g_1;
  };
  Signed.prototype.toString = function () {
    return 'Signed(value=' + this.o2g_1 + ', sign=' + this.p2g_1 + ')';
  };
  Signed.prototype.hashCode = function () {
    var result = this.o2g_1 == null ? 0 : hashCode(this.o2g_1);
    result = imul(result, 31) + this.p2g_1.hashCode() | 0;
    return result;
  };
  Signed.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Signed))
      return false;
    var tmp0_other_with_cast = other instanceof Signed ? other : THROW_CCE();
    if (!equals(this.o2g_1, tmp0_other_with_cast.o2g_1))
      return false;
    if (!this.p2g_1.equals(tmp0_other_with_cast.p2g_1))
      return false;
    return true;
  };
  Signed.$metadata$ = classMeta('Signed', undefined, undefined, undefined, undefined, SignedOrZero.prototype);
  function GMonoidMorphismWithDegreeChange() {
  }
  GMonoidMorphismWithDegreeChange.$metadata$ = interfaceMeta('GMonoidMorphismWithDegreeChange');
  function StringIndeterminateName_init_$Init$(name, tex, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      tex = null;
    StringIndeterminateName.call($this, name, tex);
    return $this;
  }
  function StringIndeterminateName_init_$Create$(name, tex, $mask0, $marker) {
    return StringIndeterminateName_init_$Init$(name, tex, $mask0, $marker, Object.create(StringIndeterminateName.prototype));
  }
  function StringIndeterminateName(name, tex) {
    this.t2h_1 = new Identifier_0(name);
    this.u2h_1 = this.t2h_1.q2a_1;
    var tmp = this;
    var tmp0_elvis_lhs = tex;
    tmp.v2h_1 = tmp0_elvis_lhs == null ? name : tmp0_elvis_lhs;
  }
  StringIndeterminateName.prototype.c22 = function () {
    return this.t2h_1;
  };
  StringIndeterminateName.prototype.toString = function () {
    return this.u2h_1;
  };
  StringIndeterminateName.prototype.c1n = function (printConfig) {
    var tmp0_subject = printConfig.b1x_1;
    var tmp0 = tmp0_subject.d2_1;
    var tmp;
    switch (tmp0) {
      case 0:
      case 2:
        tmp = this.u2h_1;
        break;
      case 1:
        tmp = this.v2h_1;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  StringIndeterminateName.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof StringIndeterminateName)
      other;
    else
      THROW_CCE();
    if (!(this.u2h_1 === other.u2h_1))
      return false;
    if (!(this.v2h_1 === other.v2h_1))
      return false;
    return true;
  };
  StringIndeterminateName.prototype.hashCode = function () {
    var result = getStringHashCode(this.u2h_1);
    result = imul(31, result) + getStringHashCode(this.v2h_1) | 0;
    return result;
  };
  StringIndeterminateName.$metadata$ = classMeta('StringIndeterminateName', [IndeterminateName]);
  function IndeterminateName() {
  }
  IndeterminateName.$metadata$ = interfaceMeta('IndeterminateName', [Printable]);
  function Indeterminate(name, degree) {
    this.p29_1 = name;
    this.q29_1 = degree;
  }
  Indeterminate.prototype.zc = function () {
    return this.p29_1;
  };
  Indeterminate.prototype.q1n = function () {
    return this.q29_1;
  };
  Indeterminate.prototype.toString = function () {
    return toString(this.p29_1);
  };
  Indeterminate.prototype.c1n = function (printConfig) {
    return this.p29_1.c1n(printConfig);
  };
  Indeterminate.prototype.r2d = function (degreeMorphism) {
    return new Indeterminate(this.p29_1, degreeMorphism.r1v(this.q29_1));
  };
  Indeterminate.prototype.hashCode = function () {
    var result = hashCode(this.p29_1);
    result = imul(result, 31) + hashCode(this.q29_1) | 0;
    return result;
  };
  Indeterminate.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Indeterminate))
      return false;
    var tmp0_other_with_cast = other instanceof Indeterminate ? other : THROW_CCE();
    if (!equals(this.p29_1, tmp0_other_with_cast.p29_1))
      return false;
    if (!equals(this.q29_1, tmp0_other_with_cast.q29_1))
      return false;
    return true;
  };
  Indeterminate.$metadata$ = classMeta('Indeterminate', [Printable]);
  function Indeterminate_0(name, degree) {
    return new Indeterminate(StringIndeterminateName_init_$Create$(name, null, 2, null), degree);
  }
  function Indeterminate_1(name, tex, degree) {
    return new Indeterminate(new StringIndeterminateName(name, tex), degree);
  }
  function Indeterminate_2(name, degree) {
    return new Indeterminate(name, new IntDegree(degree));
  }
  function Companion_49() {
    Companion_instance_49 = this;
  }
  Companion_49.prototype.h2h = function (degreeGroup, indeterminateList) {
    var tmp$ret$16;
    // Inline function 'kotlin.run' call
    var tmp0_run = degreeGroup.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$15;
    // Inline function 'com.github.shwaka.kohomology.free.monoid.Companion.from.<anonymous>' call
    var tmp;
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.any' call
      var tmp_0;
      if (isInterface(indeterminateList, Collection)) {
        tmp_0 = indeterminateList.p();
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp0_iterator = indeterminateList.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        var tmp$ret$1;
        // Inline function 'com.github.shwaka.kohomology.free.monoid.Companion.from.<anonymous>.<anonymous>' call
        tmp$ret$1 = tmp0_run.n22(element.q29_1) === 0;
        if (tmp$ret$1) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    if (tmp$ret$0) {
      var tmp$ret$4;
      // Inline function 'kotlin.collections.filter' call
      var tmp$ret$3;
      // Inline function 'kotlin.collections.filterTo' call
      var tmp0_filterTo = ArrayList_init_$Create$_0();
      var tmp0_iterator_0 = indeterminateList.f();
      while (tmp0_iterator_0.g()) {
        var element_0 = tmp0_iterator_0.h();
        var tmp$ret$2;
        // Inline function 'com.github.shwaka.kohomology.free.monoid.Companion.from.<anonymous>.<anonymous>' call
        tmp$ret$2 = tmp0_run.n22(element_0.q29_1) === 0;
        if (tmp$ret$2) {
          tmp0_filterTo.a(element_0);
        }
      }
      tmp$ret$3 = tmp0_filterTo;
      tmp$ret$4 = tmp$ret$3;
      var degree0IndeterminateList = tmp$ret$4;
      throw IllegalArgumentException_init_$Create$('Cannot consider indeterminate of degree zero: ' + joinToString$default(degree0IndeterminateList, ', ', null, null, 0, null, null, 62, null));
    } else {
      var tmp$ret$5;
      $l$block_2: {
        // Inline function 'kotlin.collections.all' call
        var tmp_1;
        if (isInterface(indeterminateList, Collection)) {
          tmp_1 = indeterminateList.p();
        } else {
          tmp_1 = false;
        }
        if (tmp_1) {
          tmp$ret$5 = true;
          break $l$block_2;
        }
        var tmp0_iterator_1 = indeterminateList.f();
        while (tmp0_iterator_1.g()) {
          var element_1 = tmp0_iterator_1.h();
          var tmp$ret$6;
          // Inline function 'com.github.shwaka.kohomology.free.monoid.Companion.from.<anonymous>.<anonymous>' call
          tmp$ret$6 = tmp0_run.n22(element_1.q29_1) > 0;
          if (!tmp$ret$6) {
            tmp$ret$5 = false;
            break $l$block_2;
          }
        }
        tmp$ret$5 = true;
      }
      if (tmp$ret$5) {
        tmp = new PositiveIndeterminateList(degreeGroup, indeterminateList);
      } else {
        var tmp$ret$7;
        $l$block_4: {
          // Inline function 'kotlin.collections.all' call
          var tmp_2;
          if (isInterface(indeterminateList, Collection)) {
            tmp_2 = indeterminateList.p();
          } else {
            tmp_2 = false;
          }
          if (tmp_2) {
            tmp$ret$7 = true;
            break $l$block_4;
          }
          var tmp0_iterator_2 = indeterminateList.f();
          while (tmp0_iterator_2.g()) {
            var element_2 = tmp0_iterator_2.h();
            var tmp$ret$8;
            // Inline function 'com.github.shwaka.kohomology.free.monoid.Companion.from.<anonymous>.<anonymous>' call
            tmp$ret$8 = tmp0_run.n22(element_2.q29_1) < 0;
            if (!tmp$ret$8) {
              tmp$ret$7 = false;
              break $l$block_4;
            }
          }
          tmp$ret$7 = true;
        }
        if (tmp$ret$7) {
          tmp = new NegativeIndeterminateList(degreeGroup, indeterminateList);
        } else {
          var tmp$ret$11;
          // Inline function 'kotlin.collections.filter' call
          var tmp$ret$10;
          // Inline function 'kotlin.collections.filterTo' call
          var tmp0_filterTo_0 = ArrayList_init_$Create$_0();
          var tmp0_iterator_3 = indeterminateList.f();
          while (tmp0_iterator_3.g()) {
            var element_3 = tmp0_iterator_3.h();
            var tmp$ret$9;
            // Inline function 'com.github.shwaka.kohomology.free.monoid.Companion.from.<anonymous>.<anonymous>' call
            tmp$ret$9 = tmp0_run.n22(element_3.q29_1) > 0;
            if (tmp$ret$9) {
              tmp0_filterTo_0.a(element_3);
            }
          }
          tmp$ret$10 = tmp0_filterTo_0;
          tmp$ret$11 = tmp$ret$10;
          var positiveIndeterminateList = tmp$ret$11;
          var tmp$ret$14;
          // Inline function 'kotlin.collections.filter' call
          var tmp$ret$13;
          // Inline function 'kotlin.collections.filterTo' call
          var tmp0_filterTo_1 = ArrayList_init_$Create$_0();
          var tmp0_iterator_4 = indeterminateList.f();
          while (tmp0_iterator_4.g()) {
            var element_4 = tmp0_iterator_4.h();
            var tmp$ret$12;
            // Inline function 'com.github.shwaka.kohomology.free.monoid.Companion.from.<anonymous>.<anonymous>' call
            tmp$ret$12 = tmp0_run.n22(element_4.q29_1) < 0;
            if (tmp$ret$12) {
              tmp0_filterTo_1.a(element_4);
            }
          }
          tmp$ret$13 = tmp0_filterTo_1;
          tmp$ret$14 = tmp$ret$13;
          var negativeIndeterminateList = tmp$ret$14;
          var tmp_3 = 'Cannot consider a list of indeterminate containing both positive and negative degrees.\n' + ('  positive: ' + joinToString$default(positiveIndeterminateList, ', ', null, null, 0, null, null, 62, null) + '}\n');
          throw IllegalArgumentException_init_$Create$(tmp_3 + ('  negative: ' + joinToString$default(negativeIndeterminateList, ', ', null, null, 0, null, null, 62, null)));
        }
      }
    }
    tmp$ret$15 = tmp;
    tmp$ret$16 = tmp$ret$15;
    return tmp$ret$16;
  };
  Companion_49.$metadata$ = objectMeta('Companion');
  var Companion_instance_49;
  function Companion_getInstance_50() {
    if (Companion_instance_49 == null)
      new Companion_49();
    return Companion_instance_49;
  }
  function IndeterminateList$isOddOnly$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$0;
      $l$block_0: {
        // Inline function 'kotlin.collections.all' call
        var tmp0_all = this$0.y2g_1;
        var tmp;
        if (isInterface(tmp0_all, Collection)) {
          tmp = tmp0_all.p();
        } else {
          tmp = false;
        }
        if (tmp) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
        var tmp0_iterator = tmp0_all.f();
        while (tmp0_iterator.g()) {
          var element = tmp0_iterator.h();
          var tmp$ret$1;
          // Inline function 'com.github.shwaka.kohomology.free.monoid.IndeterminateList.isOddOnly$delegate.<anonymous>.<anonymous>' call
          tmp$ret$1 = isOdd_0(this$0.x2g_1.a1j(element.q29_1));
          if (!tmp$ret$1) {
            tmp$ret$0 = false;
            break $l$block_0;
          }
        }
        tmp$ret$0 = true;
      }
      return tmp$ret$0;
    };
  }
  function IndeterminateList$degreeSumAsInt$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = this$0.y2g_1;
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var tmp0_iterator = tmp0_map.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.free.monoid.IndeterminateList.degreeSumAsInt$delegate.<anonymous>.<anonymous>' call
        tmp$ret$0 = this$0.x2g_1.a1j(item.q29_1);
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      return sum(tmp$ret$2);
    };
  }
  function IndeterminateList(degreeGroup, rawList) {
    Companion_getInstance_50();
    this.x2g_1 = degreeGroup;
    this.y2g_1 = rawList;
    this.z2g_1 = get_indices_0(this.y2g_1);
    var tmp = this;
    tmp.a2h_1 = lazy(IndeterminateList$isOddOnly$delegate$lambda(this));
    var tmp_0 = this;
    tmp_0.b2h_1 = lazy(IndeterminateList$degreeSumAsInt$delegate$lambda(this));
  }
  IndeterminateList.prototype.y1j = function () {
    return this.x2g_1;
  };
  IndeterminateList.prototype.w2h = function () {
    return this.y2g_1;
  };
  IndeterminateList.prototype.d2h = function () {
    return this.y2g_1;
  };
  IndeterminateList.prototype.i = function () {
    return this.y2g_1.i();
  };
  IndeterminateList.prototype.x2h = function (list) {
    return zip(this.y2g_1, list);
  };
  IndeterminateList.prototype.g2h = function (transform) {
    var tmp$ret$1;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = this.y2g_1;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      tmp0_mapTo.a(transform(item));
    }
    tmp$ret$0 = tmp0_mapTo;
    tmp$ret$1 = tmp$ret$0;
    return tmp$ret$1;
  };
  IndeterminateList.prototype.y2h = function (transform) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.List' call
    var tmp0_List = this.i();
    var tmp$ret$1;
    // Inline function 'kotlin.collections.MutableList' call
    var list = ArrayList_init_$Create$(tmp0_List);
    // Inline function 'kotlin.repeat' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    if (inductionVariable < tmp0_List)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.collections.MutableList.<anonymous>' call
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.free.monoid.IndeterminateList.mapIndexed.<anonymous>' call
        tmp$ret$0 = transform(index, this.y2g_1.l(index));
        list.a(tmp$ret$0);
      }
       while (inductionVariable < tmp0_List);
    tmp$ret$1 = list;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  IndeterminateList.prototype.l = function (index) {
    return this.y2g_1.l(index);
  };
  IndeterminateList.prototype.z2h = function (separator, transform) {
    return joinToString$default(this.y2g_1, separator, null, null, 0, null, transform, 30, null);
  };
  IndeterminateList.prototype.m2h = function (separator, transform, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      transform = null;
    return this.z2h(separator, transform);
  };
  IndeterminateList.prototype.f2h = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = isOddOnly$factory();
    tmp$ret$0 = this.a2h_1.f1();
    return tmp$ret$0;
  };
  IndeterminateList.prototype.e2h = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = degreeSumAsInt$factory();
    tmp$ret$0 = this.b2h_1.f1();
    return tmp$ret$0;
  };
  IndeterminateList.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null)
      return false;
    if (!getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof IndeterminateList)
      other;
    else
      THROW_CCE();
    if (!equals(this.y2g_1, other.y2g_1))
      return false;
    return true;
  };
  IndeterminateList.prototype.hashCode = function () {
    return hashCode(this.y2g_1);
  };
  IndeterminateList.$metadata$ = classMeta('IndeterminateList');
  function PositiveIndeterminateList(degreeGroup, rawList) {
    IndeterminateList.call(this, degreeGroup, rawList);
    var tmp$ret$0;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.x2g_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp0_iterator = rawList.f();
    while (tmp0_iterator.g()) {
      var indeterminate = tmp0_iterator.h();
      if (tmp0_run.n22(indeterminate.q29_1) <= 0)
        throw IllegalArgumentException_init_$Create$('The degree of an indeterminate in PositiveIndeterminateList must be positive');
    }
    tmp$ret$0 = Unit_getInstance();
  }
  PositiveIndeterminateList.prototype.s2h = function (degree) {
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.x2g_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.free.monoid.PositiveIndeterminateList.isAllowedDegree.<anonymous>' call
    tmp$ret$0 = tmp0_run.n22(degree) >= 0;
    tmp$ret$1 = tmp$ret$0;
    return tmp$ret$1;
  };
  PositiveIndeterminateList.$metadata$ = classMeta('PositiveIndeterminateList', undefined, undefined, undefined, undefined, IndeterminateList.prototype);
  function NegativeIndeterminateList(degreeGroup, rawList) {
    IndeterminateList.call(this, degreeGroup, rawList);
    var tmp$ret$0;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.x2g_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp0_iterator = rawList.f();
    while (tmp0_iterator.g()) {
      var indeterminate = tmp0_iterator.h();
      if (tmp0_run.n22(indeterminate.q29_1) >= 0)
        throw IllegalArgumentException_init_$Create$('The degree of an indeterminate in NegativeIndeterminateList must be negative');
    }
    tmp$ret$0 = Unit_getInstance();
  }
  NegativeIndeterminateList.prototype.s2h = function (degree) {
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.x2g_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.free.monoid.NegativeIndeterminateList.isAllowedDegree.<anonymous>' call
    tmp$ret$0 = tmp0_run.n22(degree) <= 0;
    tmp$ret$1 = tmp$ret$0;
    return tmp$ret$1;
  };
  NegativeIndeterminateList.$metadata$ = classMeta('NegativeIndeterminateList', undefined, undefined, undefined, undefined, IndeterminateList.prototype);
  function isOddOnly$factory() {
    return getPropertyCallableRef('isOddOnly', 1, KProperty1, function (receiver) {
      return receiver.f2h();
    }, null);
  }
  function degreeSumAsInt$factory() {
    return getPropertyCallableRef('degreeSumAsInt', 1, KProperty1, function (receiver) {
      return receiver.e2h();
    }, null);
  }
  function Monomial_init_$Init$(degreeGroup, indeterminateList, exponentList, $this) {
    Monomial.call($this, degreeGroup, Companion_getInstance_50().h2h(degreeGroup, indeterminateList), toIntArray(exponentList));
    return $this;
  }
  function Monomial_init_$Create$(degreeGroup, indeterminateList, exponentList) {
    return Monomial_init_$Init$(degreeGroup, indeterminateList, exponentList, Object.create(Monomial.prototype));
  }
  function Companion_50() {
    Companion_instance_50 = this;
  }
  Companion_50.prototype.p2d = function (degreeGroup, indeterminateList, indeterminate) {
    var index = indeterminateList.m2(indeterminate);
    if (index === -1)
      throw NoSuchElementException_init_$Create$_0('Indeterminate ' + indeterminate + ' is not contained in the indeterminate list ' + indeterminateList);
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(indeterminateList, 10));
    var tmp0_iterator = indeterminateList.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.monoid.Companion.fromIndeterminate.<anonymous>' call
      tmp$ret$0 = item.equals(indeterminate) ? 1 : 0;
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var exponentList = tmp$ret$2;
    return Monomial_init_$Create$(degreeGroup, indeterminateList, exponentList);
  };
  Companion_50.$metadata$ = objectMeta('Companion');
  var Companion_instance_50;
  function Companion_getInstance_51() {
    if (Companion_instance_50 == null)
      new Companion_50();
    return Companion_instance_50;
  }
  function toString_5($this, printType, indeterminateNameToString) {
    var tmp$ret$5;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$2;
    // Inline function 'kotlin.collections.filter' call
    var tmp0_filter = $this.m29_1.x2h(toList_0($this.n29_1));
    var tmp$ret$1;
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo = ArrayList_init_$Create$_0();
    var tmp0_iterator = tmp0_filter.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.monoid.Monomial.toString.<anonymous>' call
      var exponent = element.b4();
      tmp$ret$0 = !(exponent === 0);
      if (tmp$ret$0) {
        tmp0_filterTo.a(element);
      }
    }
    tmp$ret$1 = tmp0_filterTo;
    tmp$ret$2 = tmp$ret$1;
    var tmp1_map = tmp$ret$2;
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
    var tmp0_iterator_0 = tmp1_map.f();
    while (tmp0_iterator_0.g()) {
      var item = tmp0_iterator_0.h();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.free.monoid.Monomial.toString.<anonymous>' call
      var indeterminate = item.a4();
      var exponent_0 = item.b4();
      tmp$ret$3 = new Power_0(indeterminate.p29_1, exponent_0);
      tmp0_mapTo.a(tmp$ret$3);
    }
    tmp$ret$4 = tmp0_mapTo;
    tmp$ret$5 = tmp$ret$4;
    var powerList = tmp$ret$5;
    return monomialToString(powerList, printType, indeterminateNameToString);
  }
  function Monomial$degree$delegate$lambda$lambda($tmp0_run, this$0) {
    return function (i, indeterminate) {
      return $tmp0_run.q22(indeterminate.q29_1, this$0.n29_1[i]);
    };
  }
  function Monomial$degree$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.l29_1.c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.monoid.Monomial.degree$delegate.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.t22(this$0.m29_1.y2h(Monomial$degree$delegate$lambda$lambda(tmp0_run, this$0)));
      tmp$ret$1 = tmp$ret$0;
      return tmp$ret$1;
    };
  }
  function Monomial$toString$lambda(it) {
    return toString(it);
  }
  function Monomial$toString$lambda_0($printConfig) {
    return function (it) {
      return it.c1n($printConfig);
    };
  }
  function Monomial(degreeGroup, indeterminateList, exponentList) {
    Companion_getInstance_51();
    this.l29_1 = degreeGroup;
    this.m29_1 = indeterminateList;
    this.n29_1 = exponentList;
    if (!(this.m29_1.i() === this.n29_1.length))
      throw new InvalidSizeException('Invalid size of the exponent list');
    var tmp = this;
    tmp.o29_1 = lazy(Monomial$degree$delegate$lambda(this));
  }
  Monomial.prototype.k2i = function () {
    return this.n29_1;
  };
  Monomial.prototype.q1n = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = degree$factory();
    tmp$ret$0 = this.o29_1.f1();
    return tmp$ret$0;
  };
  Monomial.prototype.r2h = function (index) {
    if (this.m29_1.l(index).q29_1.f22() ? this.n29_1[index] === 1 : false)
      return null;
    var tmp = 0;
    var tmp_0 = this.m29_1.i();
    var tmp_1 = new Int32Array(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.monoid.Monomial.increaseExponentAtIndex.<anonymous>' call
      tmp$ret$0 = tmp_2 === index ? this.n29_1[tmp_2] + 1 | 0 : this.n29_1[tmp_2];
      tmp_1[tmp_2] = tmp$ret$0;
      tmp = tmp + 1 | 0;
    }
    var newExponents = tmp_1;
    return new Monomial(this.l29_1, this.m29_1, newExponents);
  };
  Monomial.prototype.q2d = function (indeterminateIndex) {
    return this.n29_1[indeterminateIndex] > 0;
  };
  Monomial.prototype.toString = function () {
    var tmp = PrintType_PLAIN_getInstance();
    return toString_5(this, tmp, Monomial$toString$lambda);
  };
  Monomial.prototype.c1n = function (printConfig) {
    return toString_5(this, printConfig.b1x_1, Monomial$toString$lambda_0(printConfig));
  };
  Monomial.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null)
      return false;
    if (!getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof Monomial)
      other;
    else
      THROW_CCE();
    if (!this.m29_1.equals(other.m29_1))
      return false;
    if (!contentEquals(this.n29_1, other.n29_1))
      return false;
    return true;
  };
  Monomial.prototype.hashCode = function () {
    var result = this.m29_1.hashCode();
    result = imul(31, result) + contentHashCode(this.n29_1) | 0;
    return result;
  };
  Monomial.$metadata$ = classMeta('Monomial', [GMonoidElement]);
  function degree$factory() {
    return getPropertyCallableRef('degree', 1, KProperty1, function (receiver) {
      return receiver.q1n();
    }, null);
  }
  function Companion_51() {
    Companion_instance_51 = this;
  }
  Companion_51.$metadata$ = objectMeta('Companion');
  var Companion_instance_51;
  function Companion_getInstance_52() {
    if (Companion_instance_51 == null)
      new Companion_51();
    return Companion_instance_51;
  }
  function Power_0(indeterminateName, exponent) {
    Companion_getInstance_52();
    this.l2i_1 = indeterminateName;
    this.m2i_1 = exponent;
  }
  Power_0.prototype.a4 = function () {
    return this.l2i_1;
  };
  Power_0.prototype.b4 = function () {
    return this.m2i_1;
  };
  Power_0.prototype.toString = function () {
    return 'Power(indeterminateName=' + this.l2i_1 + ', exponent=' + this.m2i_1 + ')';
  };
  Power_0.prototype.hashCode = function () {
    var result = hashCode(this.l2i_1);
    result = imul(result, 31) + this.m2i_1 | 0;
    return result;
  };
  Power_0.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Power_0))
      return false;
    var tmp0_other_with_cast = other instanceof Power_0 ? other : THROW_CCE();
    if (!equals(this.l2i_1, tmp0_other_with_cast.l2i_1))
      return false;
    if (!(this.m2i_1 === tmp0_other_with_cast.m2i_1))
      return false;
    return true;
  };
  Power_0.$metadata$ = classMeta('Power');
  function monomialToString(powerList, printType, indeterminateNameToString) {
    if (powerList.p())
      return '1';
    var tmp0_subject = printType;
    var tmp0 = tmp0_subject.d2_1;
    var tmp;
    switch (tmp0) {
      case 0:
      case 1:
        tmp = '';
        break;
      case 2:
        tmp = ' * ';
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    var separator = tmp;
    var tmp$ret$2;
    // Inline function 'kotlin.collections.filter' call
    var tmp$ret$1;
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo = ArrayList_init_$Create$_0();
    var tmp0_iterator = powerList.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.free.monoid.monomialToString.<anonymous>' call
      var exponent = element.b4();
      tmp$ret$0 = !(exponent === 0);
      if (tmp$ret$0) {
        tmp0_filterTo.a(element);
      }
    }
    tmp$ret$1 = tmp0_filterTo;
    tmp$ret$2 = tmp$ret$1;
    var tmp_0 = tmp$ret$2;
    return joinToString$default(tmp_0, separator, null, null, 0, null, monomialToString$lambda(indeterminateNameToString, printType), 30, null);
  }
  function monomialToString$lambda($indeterminateNameToString, $printType) {
    return function (_name_for_destructuring_parameter_0__wldtmu) {
      var indeterminateName = _name_for_destructuring_parameter_0__wldtmu.a4();
      var exponent = _name_for_destructuring_parameter_0__wldtmu.b4();
      var tmp0_subject = exponent;
      var tmp;
      switch (tmp0_subject) {
        case 0:
          throw Exception_init_$Create$("This can't happen!");
        case 1:
          tmp = $indeterminateNameToString(indeterminateName);
          break;
        default:
          var tmp1_subject = $printType;
          var tmp0 = tmp1_subject.d2_1;
          var tmp_0;
          switch (tmp0) {
            case 0:
            case 2:
              tmp_0 = exponent.toString();
              break;
            case 1:
              tmp_0 = '{' + exponent + '}';
              break;
            default:
              noWhenBranchMatchedException();
              break;
          }

          var exponentStr = tmp_0;
          tmp = $indeterminateNameToString(indeterminateName) + '^' + exponentStr;
          break;
      }
      return tmp;
    };
  }
  function _get_data__d5abxd($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = data$factory();
    tmp$ret$0 = $this.a2j_1.f1();
    return tmp$ret$0;
  }
  function _get_dataList__i79k6b($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = dataList$factory();
    tmp$ret$0 = $this.b2j_1.f1();
    return tmp$ret$0;
  }
  function computeData($this) {
    var dataList = _get_dataList__i79k6b($this);
    var pivots = computePivots($this, dataList);
    var rowMap = computeRowMapForRowEchelonForm($this, dataList, pivots);
    var exchangeCount = 0;
    return new SparseRowEchelonFormData(rowMap, pivots, exchangeCount);
  }
  function computeDataList($this) {
    var tmp = computeBlockList($this);
    return pmap(tmp, DecomposedSparseRowEchelonForm$computeDataList$lambda($this));
  }
  function computeBlockList($this) {
    var originalRowMap = $this.i2j_1.f2j_1;
    var rowIndices = sorted(toList_1(originalRowMap.l3()));
    var tmp$ret$10;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$7;
    // Inline function 'kotlin.collections.sortedBy' call
    var tmp$ret$5;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(originalRowMap.i());
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$0 = originalRowMap.d1().f();
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.linalg.DecomposedSparseRowEchelonForm.computeBlockList.<anonymous>' call
      var tmp$ret$1;
      // Inline function 'kotlin.collections.component1' call
      tmp$ret$1 = item.e1();
      var rowInd = tmp$ret$1;
      var tmp$ret$2;
      // Inline function 'kotlin.collections.component2' call
      tmp$ret$2 = item.f1();
      var row = tmp$ret$2;
      tmp$ret$3 = new Pair(rowInd, sorted(toList_1(row.l3())));
      tmp0_mapTo.a(tmp$ret$3);
    }
    tmp$ret$4 = tmp0_mapTo;
    tmp$ret$5 = tmp$ret$4;
    var tmp0_sortedBy = tmp$ret$5;
    var tmp$ret$6;
    // Inline function 'kotlin.comparisons.compareBy' call
    var tmp = DecomposedSparseRowEchelonForm$computeBlockList$lambda;
    tmp$ret$6 = new sam$kotlin_Comparator$0(tmp);
    tmp$ret$7 = sortedWith(tmp0_sortedBy, tmp$ret$6);
    var tmp1_map = tmp$ret$7;
    var tmp$ret$9;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
    var tmp0_iterator_0 = tmp1_map.f();
    while (tmp0_iterator_0.g()) {
      var item_0 = tmp0_iterator_0.h();
      var tmp$ret$8;
      // Inline function 'com.github.shwaka.kohomology.linalg.DecomposedSparseRowEchelonForm.computeBlockList.<anonymous>' call
      var rowKeys = item_0.b4();
      tmp$ret$8 = rowKeys;
      tmp0_mapTo_0.a(tmp$ret$8);
    }
    tmp$ret$9 = tmp0_mapTo_0;
    tmp$ret$10 = tmp$ret$9;
    var rowKeysList = tmp$ret$10;
    var tmp_0 = withIndex(rowKeysList);
    var pairsToBeUnited = flatten(pmap(tmp_0, DecomposedSparseRowEchelonForm$computeBlockList$lambda_0(rowKeysList)));
    var unionFind = new UnionFind(rowKeysList.i());
    var tmp0_iterator_1 = pairsToBeUnited.f();
    while (tmp0_iterator_1.g()) {
      var tmp1_loop_parameter = tmp0_iterator_1.h();
      var i = tmp1_loop_parameter.a4();
      var j = tmp1_loop_parameter.b4();
      unionFind.t2j(i, j);
    }
    var tmp$ret$16;
    // Inline function 'kotlin.collections.map' call
    var tmp2_map = unionFind.u2j();
    var tmp$ret$15;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_1 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp2_map, 10));
    var tmp0_iterator_2 = tmp2_map.f();
    while (tmp0_iterator_2.g()) {
      var item_1 = tmp0_iterator_2.h();
      var tmp$ret$14;
      // Inline function 'com.github.shwaka.kohomology.linalg.DecomposedSparseRowEchelonForm.computeBlockList.<anonymous>' call
      var tmp$ret$13;
      // Inline function 'kotlin.collections.map' call
      var tmp$ret$12;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_2 = ArrayList_init_$Create$(collectionSizeOrDefault(item_1, 10));
      var tmp0_iterator_3 = item_1.f();
      while (tmp0_iterator_3.g()) {
        var item_2 = tmp0_iterator_3.h();
        var tmp$ret$11;
        // Inline function 'com.github.shwaka.kohomology.linalg.DecomposedSparseRowEchelonForm.computeBlockList.<anonymous>.<anonymous>' call
        var rowInd_0 = rowIndices.l(item_2);
        var tmp0_elvis_lhs = originalRowMap.t(rowInd_0);
        var tmp_1;
        if (tmp0_elvis_lhs == null) {
          throw Exception_init_$Create$("This can't happen!");
        } else {
          tmp_1 = tmp0_elvis_lhs;
        }
        var row_0 = tmp_1;
        tmp$ret$11 = new Pair(rowInd_0, row_0);
        tmp0_mapTo_2.a(tmp$ret$11);
      }
      tmp$ret$12 = tmp0_mapTo_2;
      tmp$ret$13 = tmp$ret$12;
      tmp$ret$14 = toMap(tmp$ret$13);
      tmp0_mapTo_1.a(tmp$ret$14);
    }
    tmp$ret$15 = tmp0_mapTo_1;
    tmp$ret$16 = tmp$ret$15;
    return tmp$ret$16;
  }
  function computePivots($this, dataList) {
    var tmp$ret$1;
    // Inline function 'kotlin.collections.fold' call
    var tmp0_fold = emptyList();
    var accumulator = tmp0_fold;
    var tmp0_iterator = dataList.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.DecomposedSparseRowEchelonForm.computePivots.<anonymous>' call
      var tmp1__anonymous__uwfjfc = accumulator;
      tmp$ret$0 = plus(tmp1__anonymous__uwfjfc, element.w2j_1);
      accumulator = tmp$ret$0;
    }
    tmp$ret$1 = accumulator;
    return sorted(tmp$ret$1);
  }
  function computeRowMapForRowEchelonForm($this, dataList, pivots) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp$ret$0 = LinkedHashMap_init_$Create$();
    var rowMap = tmp$ret$0;
    var tmp0_iterator = dataList.f();
    while (tmp0_iterator.g()) {
      var data = tmp0_iterator.h();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.iterator' call
      var tmp0_iterator_0 = data.v2j_1;
      tmp$ret$1 = tmp0_iterator_0.d1().f();
      var tmp1_iterator = tmp$ret$1;
      while (tmp1_iterator.g()) {
        var tmp2_loop_parameter = tmp1_iterator.h();
        var tmp$ret$2;
        // Inline function 'kotlin.collections.component1' call
        tmp$ret$2 = tmp2_loop_parameter.e1();
        var rowIndInBlock = tmp$ret$2;
        var tmp$ret$3;
        // Inline function 'kotlin.collections.component2' call
        tmp$ret$3 = tmp2_loop_parameter.f1();
        var row = tmp$ret$3;
        var pivot = data.w2j_1.l(rowIndInBlock);
        var rowInd = pivots.m2(pivot);
        if (rowInd === -1)
          throw Exception_init_$Create$("This can't happen!");
        // Inline function 'kotlin.collections.set' call
        rowMap.u(rowInd, row);
      }
    }
    return rowMap;
  }
  function computeReducedRowMapForRowEchelonForm($this, dataList, pivots) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp$ret$0 = LinkedHashMap_init_$Create$();
    var rowMap = tmp$ret$0;
    var tmp0_iterator = dataList.f();
    while (tmp0_iterator.g()) {
      var data = tmp0_iterator.h();
      var reducedRowMapOfData = $this.z2i_1.y2j(data.v2j_1, data.w2j_1);
      var tmp$ret$1;
      // Inline function 'kotlin.collections.iterator' call
      tmp$ret$1 = reducedRowMapOfData.d1().f();
      var tmp1_iterator = tmp$ret$1;
      while (tmp1_iterator.g()) {
        var tmp2_loop_parameter = tmp1_iterator.h();
        var tmp$ret$2;
        // Inline function 'kotlin.collections.component1' call
        tmp$ret$2 = tmp2_loop_parameter.e1();
        var rowIndInBlock = tmp$ret$2;
        var tmp$ret$3;
        // Inline function 'kotlin.collections.component2' call
        tmp$ret$3 = tmp2_loop_parameter.f1();
        var row = tmp$ret$3;
        var pivot = data.w2j_1.l(rowIndInBlock);
        var rowInd = pivots.m2(pivot);
        if (rowInd === -1)
          throw Exception_init_$Create$("This can't happen!");
        // Inline function 'kotlin.collections.set' call
        rowMap.u(rowInd, row);
      }
    }
    return rowMap;
  }
  function sam$kotlin_Comparator$0(function_0) {
    this.z2j_1 = function_0;
  }
  sam$kotlin_Comparator$0.prototype.x = function (a, b) {
    return this.z2j_1(a, b);
  };
  sam$kotlin_Comparator$0.prototype.compare = function (a, b) {
    return this.x(a, b);
  };
  sam$kotlin_Comparator$0.$metadata$ = classMeta('sam$kotlin_Comparator$0', [Comparator]);
  function DecomposedSparseRowEchelonForm$data$delegate$lambda(this$0) {
    return function () {
      return computeData(this$0);
    };
  }
  function DecomposedSparseRowEchelonForm$dataList$delegate$lambda(this$0) {
    return function () {
      return computeDataList(this$0);
    };
  }
  function DecomposedSparseRowEchelonForm$computeDataList$lambda(this$0) {
    return function (block) {
      return this$0.z2i_1.a2k(block, this$0.y2i_1);
    };
  }
  function DecomposedSparseRowEchelonForm$computeBlockList$lambda(a, b) {
    var tmp$ret$2;
    // Inline function 'kotlin.comparisons.compareValuesBy' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.linalg.DecomposedSparseRowEchelonForm.computeBlockList.<anonymous>' call
    var rowInd = a.a4();
    tmp$ret$0 = rowInd;
    var tmp = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'com.github.shwaka.kohomology.linalg.DecomposedSparseRowEchelonForm.computeBlockList.<anonymous>' call
    var rowInd_0 = b.a4();
    tmp$ret$1 = rowInd_0;
    tmp$ret$2 = compareValues(tmp, tmp$ret$1);
    return tmp$ret$2;
  }
  function DecomposedSparseRowEchelonForm$computeBlockList$lambda_0($rowKeysList) {
    return function (_name_for_destructuring_parameter_0__wldtmu) {
      var i = _name_for_destructuring_parameter_0__wldtmu.a4();
      var rowKeys1 = _name_for_destructuring_parameter_0__wldtmu.b4();
      var tmp$ret$0;
      // Inline function 'kotlin.collections.mutableListOf' call
      tmp$ret$0 = ArrayList_init_$Create$_0();
      var pairsToBeUnitedThreadLocal = tmp$ret$0;
      var inductionVariable = i + 1 | 0;
      var last = $rowKeysList.i();
      var tmp;
      if (inductionVariable < last) {
        do {
          var j = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var rowKeys2 = $rowKeysList.l(j);
          if (hasNonEmptyIntersection(rowKeys1, rowKeys2)) {
            pairsToBeUnitedThreadLocal.a(new Pair(i, j));
          }
        }
         while (inductionVariable < last);
        tmp = Unit_getInstance();
      }
      return pairsToBeUnitedThreadLocal;
    };
  }
  function DecomposedSparseRowEchelonForm(matrixSpace, originalMatrix) {
    RowEchelonForm.call(this, matrixSpace, originalMatrix);
    this.x2i_1 = originalMatrix.d2j_1;
    this.y2i_1 = originalMatrix.e2j_1;
    this.z2i_1 = matrixSpace.e2k();
    var tmp = this;
    tmp.a2j_1 = lazy(DecomposedSparseRowEchelonForm$data$delegate$lambda(this));
    var tmp_0 = this;
    tmp_0.b2j_1 = lazy(DecomposedSparseRowEchelonForm$dataList$delegate$lambda(this));
  }
  DecomposedSparseRowEchelonForm.prototype.f2k = function () {
    return this.u1j().g2k(_get_data__d5abxd(this).v2j_1, this.x2i_1, this.y2i_1);
  };
  DecomposedSparseRowEchelonForm.prototype.h2k = function () {
    return _get_data__d5abxd(this).w2j_1;
  };
  DecomposedSparseRowEchelonForm.prototype.i2k = function () {
    throw new NotImplementedError('Computation of sign is not implemented for DecomposedSparseRowEchelonForm');
  };
  DecomposedSparseRowEchelonForm.prototype.j2k = function () {
    var reducedRowMap = computeReducedRowMapForRowEchelonForm(this, _get_dataList__i79k6b(this), this.h2k());
    return this.u1j().g2k(reducedRowMap, this.x2i_1, this.y2i_1);
  };
  DecomposedSparseRowEchelonForm.$metadata$ = classMeta('DecomposedSparseRowEchelonForm', undefined, undefined, undefined, undefined, RowEchelonForm.prototype);
  function data$factory() {
    return getPropertyCallableRef('data', 1, KProperty1, function (receiver) {
      return _get_data__d5abxd(receiver);
    }, null);
  }
  function dataList$factory() {
    return getPropertyCallableRef('dataList', 1, KProperty1, function (receiver) {
      return _get_dataList__i79k6b(receiver);
    }, null);
  }
  function Companion_52() {
    Companion_instance_52 = this;
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp$ret$0 = LinkedHashMap_init_$Create$();
    tmp.p2k_1 = tmp$ret$0;
  }
  Companion_52.prototype.q2k = function (numVectorSpace) {
    if (this.p2k_1.f3(numVectorSpace)) {
      var tmp = this.p2k_1.t(numVectorSpace);
      return tmp instanceof DenseMatrixSpace ? tmp : THROW_CCE();
    } else {
      var matrixSpace = new DenseMatrixSpace(numVectorSpace);
      // Inline function 'kotlin.collections.set' call
      var tmp0_set = this.p2k_1;
      tmp0_set.u(numVectorSpace, matrixSpace);
      return matrixSpace;
    }
  };
  Companion_52.$metadata$ = objectMeta('Companion');
  var Companion_instance_52;
  function Companion_getInstance_53() {
    if (Companion_instance_52 == null)
      new Companion_52();
    return Companion_instance_52;
  }
  function DenseMatrixSpace(numVectorSpace) {
    Companion_getInstance_53();
    this.r2k_1 = numVectorSpace;
    this.s2k_1 = this.r2k_1.u2k_1;
    this.t2k_1 = Companion_getInstance_56().w2k(this);
  }
  DenseMatrixSpace.prototype.x1j = function () {
    return this.r2k_1;
  };
  DenseMatrixSpace.prototype.e1k = function () {
    return this.s2k_1;
  };
  DenseMatrixSpace.prototype.c1j = function () {
    return this.t2k_1;
  };
  DenseMatrixSpace.prototype.x2k = function (matrix) {
    return equals(matrix.y2k_1, this.r2k_1);
  };
  DenseMatrixSpace.prototype.d2l = function (matrix, numVector) {
    if (!this.x2k(matrix))
      throw new IllegalContextException('The denseMatrix ' + matrix + ' does not match the context (' + this + ')');
    if (!this.r2k_1.e2l(numVector))
      throw new IllegalContextException('The numVector ' + numVector + ' does not match the context (' + this.r2k_1 + ')');
    if (!(matrix.b2l_1 === numVector.q25()))
      throw new InvalidSizeException('Cannot multiply matrix and vector: matrix.colCount != vector.dim');
    var tmp$ret$7;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = matrix.z2k_1;
    var tmp$ret$6;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$5;
      // Inline function 'com.github.shwaka.kohomology.linalg.DenseMatrixSpace.multiply.<anonymous>' call
      var tmp$ret$4;
      // Inline function 'kotlin.run' call
      var tmp0_run = this.s2k_1.c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.linalg.DenseMatrixSpace.multiply.<anonymous>.<anonymous>' call
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map_0 = zip(item, numVector.f2l_1);
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
      var tmp0_iterator_0 = tmp0_map_0.f();
      while (tmp0_iterator_0.g()) {
        var item_0 = tmp0_iterator_0.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.linalg.DenseMatrixSpace.multiply.<anonymous>.<anonymous>.<anonymous>' call
        tmp$ret$0 = tmp0_run.l1l(item_0.z4_1, item_0.a5_1);
        tmp0_mapTo_0.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo_0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp0_run.d1m(tmp$ret$2);
      tmp$ret$4 = tmp$ret$3;
      tmp$ret$5 = tmp$ret$4;
      tmp0_mapTo.a(tmp$ret$5);
    }
    tmp$ret$6 = tmp0_mapTo;
    tmp$ret$7 = tmp$ret$6;
    var valueList = tmp$ret$7;
    return this.r2k_1.h2l(valueList);
  };
  DenseMatrixSpace.prototype.i2l = function (matrix, numVector) {
    var tmp = matrix instanceof DenseMatrix ? matrix : THROW_CCE();
    return this.d2l(tmp, numVector instanceof DenseNumVector ? numVector : THROW_CCE());
  };
  DenseMatrixSpace.prototype.j2l = function (matrix) {
    var tmp0_safe_receiver = matrix.c2l_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return tmp0_safe_receiver;
    }
    var rowEchelonForm = new DenseRowEchelonForm(this, matrix);
    matrix.k2l(rowEchelonForm);
    return rowEchelonForm;
  };
  DenseMatrixSpace.prototype.l2l = function (matrix) {
    return this.j2l(matrix instanceof DenseMatrix ? matrix : THROW_CCE());
  };
  DenseMatrixSpace.prototype.m2l = function (matrix) {
    var rowCount = matrix.b2l_1;
    var colCount = matrix.a2l_1;
    var tmp$ret$5;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = until(0, rowCount);
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.m1_1;
    var last = tmp0_map.n1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$3;
        // Inline function 'com.github.shwaka.kohomology.linalg.DenseMatrixSpace.computeTranspose.<anonymous>' call
        var tmp$ret$2;
        // Inline function 'kotlin.collections.map' call
        var tmp0_map_0 = until(0, colCount);
        var tmp$ret$1;
        // Inline function 'kotlin.collections.mapTo' call
        var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
        var inductionVariable_0 = tmp0_map_0.m1_1;
        var last_0 = tmp0_map_0.n1_1;
        if (inductionVariable_0 <= last_0)
          do {
            var item_0 = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var tmp$ret$0;
            // Inline function 'com.github.shwaka.kohomology.linalg.DenseMatrixSpace.computeTranspose.<anonymous>.<anonymous>' call
            tmp$ret$0 = matrix.n2l(item_0, item);
            tmp0_mapTo_0.a(tmp$ret$0);
          }
           while (!(item_0 === last_0));
        tmp$ret$1 = tmp0_mapTo_0;
        tmp$ret$2 = tmp$ret$1;
        tmp$ret$3 = tmp$ret$2;
        tmp0_mapTo.a(tmp$ret$3);
      }
       while (!(item === last));
    tmp$ret$4 = tmp0_mapTo;
    tmp$ret$5 = tmp$ret$4;
    var rowList = tmp$ret$5;
    var tmp0_numVectorSpace = this.r2k_1;
    return new DenseMatrix(tmp0_numVectorSpace, rowList, rowCount, colCount);
  };
  DenseMatrixSpace.prototype.o2l = function (matrix) {
    return this.m2l(matrix instanceof DenseMatrix ? matrix : THROW_CCE());
  };
  DenseMatrixSpace.prototype.p2l = function (rowList, colCount) {
    var rowCount = rowList.i();
    var tmp;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.isNotEmpty' call
    tmp$ret$0 = !rowList.p();
    if (tmp$ret$0) {
      tmp = rowList.l(0).i();
    } else {
      if (!(colCount == null)) {
        tmp = colCount;
      } else {
        throw IllegalArgumentException_init_$Create$('Row list is empty and colCount is not specified');
      }
    }
    var colCountNonNull = tmp;
    return new DenseMatrix(this.r2k_1, rowList, rowCount, colCountNonNull);
  };
  DenseMatrixSpace.prototype.g2k = function (rowMap, rowCount, colCount) {
    var tmp$ret$8;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = until(0, rowCount);
    var tmp$ret$7;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.m1_1;
    var last = tmp0_map.n1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$6;
        // Inline function 'com.github.shwaka.kohomology.linalg.DenseMatrixSpace.fromRowMap.<anonymous>' call
        var row = rowMap.t(item);
        var tmp;
        if (row == null) {
          var tmp$ret$2;
          // Inline function 'kotlin.collections.List' call
          var tmp$ret$1;
          // Inline function 'kotlin.collections.MutableList' call
          var list = ArrayList_init_$Create$(colCount);
          // Inline function 'kotlin.repeat' call
          // Inline function 'kotlin.contracts.contract' call
          var inductionVariable_0 = 0;
          if (inductionVariable_0 < colCount)
            do {
              var index = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              // Inline function 'kotlin.collections.MutableList.<anonymous>' call
              var tmp$ret$0;
              // Inline function 'com.github.shwaka.kohomology.linalg.DenseMatrixSpace.fromRowMap.<anonymous>.<anonymous>' call
              tmp$ret$0 = this.s2k_1.m1m();
              list.a(tmp$ret$0);
            }
             while (inductionVariable_0 < colCount);
          tmp$ret$1 = list;
          tmp$ret$2 = tmp$ret$1;
          tmp = tmp$ret$2;
        } else {
          var tmp$ret$5;
          // Inline function 'kotlin.collections.map' call
          var tmp0_map_0 = until(0, colCount);
          var tmp$ret$4;
          // Inline function 'kotlin.collections.mapTo' call
          var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
          var inductionVariable_1 = tmp0_map_0.m1_1;
          var last_0 = tmp0_map_0.n1_1;
          if (inductionVariable_1 <= last_0)
            do {
              var item_0 = inductionVariable_1;
              inductionVariable_1 = inductionVariable_1 + 1 | 0;
              var tmp$ret$3;
              // Inline function 'com.github.shwaka.kohomology.linalg.DenseMatrixSpace.fromRowMap.<anonymous>.<anonymous>' call
              var tmp0_elvis_lhs = row.t(item_0);
              tmp$ret$3 = tmp0_elvis_lhs == null ? this.s2k_1.m1m() : tmp0_elvis_lhs;
              tmp0_mapTo_0.a(tmp$ret$3);
            }
             while (!(item_0 === last_0));
          tmp$ret$4 = tmp0_mapTo_0;
          tmp$ret$5 = tmp$ret$4;
          tmp = tmp$ret$5;
        }
        tmp$ret$6 = tmp;
        tmp0_mapTo.a(tmp$ret$6);
      }
       while (!(item === last));
    tmp$ret$7 = tmp0_mapTo;
    tmp$ret$8 = tmp$ret$7;
    var rowList = tmp$ret$8;
    return this.p2l(rowList, colCount);
  };
  DenseMatrixSpace.prototype.r2l = function (matrix1, matrix2) {
    if (!(matrix1.a2l_1 === matrix2.a2l_1))
      throw new InvalidSizeException('Cannot join two matrices of different row counts');
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = zip(matrix1.z2k_1, matrix2.z2k_1);
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.DenseMatrixSpace.joinMatrices.<anonymous>' call
      var row1 = item.a4();
      var row2 = item.b4();
      tmp$ret$0 = plus(row1, row2);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var rowList = tmp$ret$2;
    var rowCount = matrix1.a2l_1;
    var colCount = matrix1.b2l_1 + matrix2.b2l_1 | 0;
    return new DenseMatrix(this.r2k_1, rowList, rowCount, colCount);
  };
  DenseMatrixSpace.prototype.s2l = function (matrix1, matrix2) {
    var tmp = matrix1 instanceof DenseMatrix ? matrix1 : THROW_CCE();
    return this.r2l(tmp, matrix2 instanceof DenseMatrix ? matrix2 : THROW_CCE());
  };
  DenseMatrixSpace.prototype.t2l = function (matrix, rowRange) {
    var rowList = slice(matrix.z2k_1, rowRange);
    return this.p2l(rowList, matrix.b2l_1);
  };
  DenseMatrixSpace.prototype.u2l = function (matrix, rowRange) {
    return this.t2l(matrix instanceof DenseMatrix ? matrix : THROW_CCE(), rowRange);
  };
  DenseMatrixSpace.prototype.v2l = function (matrix, colRange) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = matrix.z2k_1;
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.DenseMatrixSpace.computeColSlice.<anonymous>' call
      tmp$ret$0 = slice(item, colRange);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var rowList = tmp$ret$2;
    return this.p2l(rowList, count(colRange));
  };
  DenseMatrixSpace.prototype.w2l = function (matrix, colRange) {
    return this.v2l(matrix instanceof DenseMatrix ? matrix : THROW_CCE(), colRange);
  };
  DenseMatrixSpace.prototype.toString = function () {
    return 'DenseMatrixSpace(' + this.s2k_1 + ')';
  };
  DenseMatrixSpace.prototype.x2l = function (numVectors, dim) {
    if (numVectors.p() ? dim == null : false)
      throw IllegalArgumentException_init_$Create$('Vector list is empty and dim is not specified');
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(numVectors, 10));
    var tmp0_iterator = numVectors.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.DenseMatrixSpace.fromNumVectorList.<anonymous>' call
      tmp$ret$0 = item.d2h();
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var colList = tmp$ret$2;
    return this.y2l(colList, dim);
  };
  DenseMatrixSpace.prototype.z2l = function (numVectors, dim) {
    return this.x2l(numVectors, dim);
  };
  DenseMatrixSpace.$metadata$ = classMeta('DenseMatrixSpace', [MatrixSpace]);
  function toStringTable($this) {
    var tmp$ret$5;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = $this.z2k_1;
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.linalg.DenseMatrix.toStringTable.<anonymous>' call
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(item, 10));
      var tmp0_iterator_0 = item.f();
      while (tmp0_iterator_0.g()) {
        var item_0 = tmp0_iterator_0.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.linalg.DenseMatrix.toStringTable.<anonymous>.<anonymous>' call
        tmp$ret$0 = toString(item_0);
        tmp0_mapTo_0.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo_0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_mapTo.a(tmp$ret$3);
    }
    tmp$ret$4 = tmp0_mapTo;
    tmp$ret$5 = tmp$ret$4;
    var tmp = tmp$ret$5;
    return StringTable_init_$Create$(tmp, null, 2, null);
  }
  function DenseMatrix(numVectorSpace, rowList, rowCount, colCount) {
    this.y2k_1 = numVectorSpace;
    this.z2k_1 = rowList;
    this.a2l_1 = rowCount;
    this.b2l_1 = colCount;
    this.c2l_1 = null;
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.any' call
      var tmp0_any = this.z2k_1;
      var tmp;
      if (isInterface(tmp0_any, Collection)) {
        tmp = tmp0_any.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_any.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        var tmp$ret$1;
        // Inline function 'com.github.shwaka.kohomology.linalg.DenseMatrix.<anonymous>' call
        tmp$ret$1 = !(element.i() === this.b2l_1);
        if (tmp$ret$1) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    if (tmp$ret$0)
      throw new InvalidSizeException('The length of each row must be equal to colCount');
  }
  DenseMatrix.prototype.x1j = function () {
    return this.y2k_1;
  };
  DenseMatrix.prototype.c2m = function () {
    return this.a2l_1;
  };
  DenseMatrix.prototype.d2m = function () {
    return this.b2l_1;
  };
  DenseMatrix.prototype.k2l = function (value) {
    if (!(this.c2l_1 == null))
      throw IllegalStateException_init_$Create$('Cannot assign rowEchelonForm twice');
    this.c2l_1 = value;
  };
  DenseMatrix.prototype.toString = function () {
    return toStringTable(this).toString();
  };
  DenseMatrix.prototype.n2l = function (rowInd, colInd) {
    return this.z2k_1.l(rowInd).l(colInd);
  };
  DenseMatrix.prototype.hashCode = function () {
    var result = hashCode(this.y2k_1);
    result = imul(result, 31) + hashCode(this.z2k_1) | 0;
    result = imul(result, 31) + this.a2l_1 | 0;
    result = imul(result, 31) + this.b2l_1 | 0;
    return result;
  };
  DenseMatrix.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof DenseMatrix))
      return false;
    var tmp0_other_with_cast = other instanceof DenseMatrix ? other : THROW_CCE();
    if (!equals(this.y2k_1, tmp0_other_with_cast.y2k_1))
      return false;
    if (!equals(this.z2k_1, tmp0_other_with_cast.z2k_1))
      return false;
    if (!(this.a2l_1 === tmp0_other_with_cast.a2l_1))
      return false;
    if (!(this.b2l_1 === tmp0_other_with_cast.b2l_1))
      return false;
    return true;
  };
  DenseMatrix.$metadata$ = classMeta('DenseMatrix', [Matrix]);
  function Companion_53() {
    Companion_instance_53 = this;
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp$ret$0 = LinkedHashMap_init_$Create$();
    tmp.f2m_1 = tmp$ret$0;
  }
  Companion_53.prototype.g2m = function (field) {
    if (this.f2m_1.f3(field)) {
      var tmp = this.f2m_1.t(field);
      return tmp instanceof DenseNumVectorSpace ? tmp : THROW_CCE();
    } else {
      var numVectorSpace = new DenseNumVectorSpace(field);
      // Inline function 'kotlin.collections.set' call
      var tmp0_set = this.f2m_1;
      tmp0_set.u(field, numVectorSpace);
      return numVectorSpace;
    }
  };
  Companion_53.$metadata$ = objectMeta('Companion');
  var Companion_instance_53;
  function Companion_getInstance_54() {
    if (Companion_instance_53 == null)
      new Companion_53();
    return Companion_instance_53;
  }
  function DenseNumVectorSpace(field) {
    Companion_getInstance_54();
    this.u2k_1 = field;
    this.v2k_1 = Companion_getInstance_57().a1x(this);
  }
  DenseNumVectorSpace.prototype.e1k = function () {
    return this.u2k_1;
  };
  DenseNumVectorSpace.prototype.c1j = function () {
    return this.v2k_1;
  };
  DenseNumVectorSpace.prototype.e2l = function (numVector) {
    return equals(numVector.g2l_1, this.u2k_1);
  };
  DenseNumVectorSpace.prototype.h2m = function (a, b) {
    if (!this.e2l(a))
      throw new IllegalContextException('The denseNumVector ' + a + ' does not match the context (' + this + ')');
    if (!this.e2l(b))
      throw new IllegalContextException('The denseNumVector ' + b + ' does not match the context (' + this + ')');
    if (!(a.q25() === b.q25()))
      throw new InvalidSizeException('Cannot add numVectors of different dim');
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp$ret$0 = ArrayList_init_$Create$_0();
    var result = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.u2k_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    var last = a.f2l_1.i() - 1 | 0;
    var tmp;
    if (inductionVariable <= last) {
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        result.a(tmp0_run.t1l(a.f2l_1.l(i), b.f2l_1.l(i)));
      }
       while (inductionVariable <= last);
      tmp = Unit_getInstance();
    }
    tmp$ret$1 = tmp;
    return new DenseNumVector(result, this.u2k_1);
  };
  DenseNumVectorSpace.prototype.i2m = function (a, b) {
    var tmp = a instanceof DenseNumVector ? a : THROW_CCE();
    return this.h2m(tmp, b instanceof DenseNumVector ? b : THROW_CCE());
  };
  DenseNumVectorSpace.prototype.j2m = function (a, b) {
    if (!this.e2l(a))
      throw new IllegalContextException('The denseNumVector ' + a + ' does not match the context (' + this + ')');
    if (!this.e2l(b))
      throw new IllegalContextException('The denseNumVector ' + b + ' does not match the context (' + this + ')');
    if (!(a.q25() === b.q25()))
      throw new InvalidSizeException('Cannot subtract numVectors of different dim');
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp$ret$0 = ArrayList_init_$Create$_0();
    var result = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.u2k_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    var last = a.f2l_1.i() - 1 | 0;
    var tmp;
    if (inductionVariable <= last) {
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        result.a(tmp0_run.x1l(a.f2l_1.l(i), b.f2l_1.l(i)));
      }
       while (inductionVariable <= last);
      tmp = Unit_getInstance();
    }
    tmp$ret$1 = tmp;
    return new DenseNumVector(result, this.u2k_1);
  };
  DenseNumVectorSpace.prototype.k2m = function (a, b) {
    var tmp = a instanceof DenseNumVector ? a : THROW_CCE();
    return this.j2m(tmp, b instanceof DenseNumVector ? b : THROW_CCE());
  };
  DenseNumVectorSpace.prototype.l2m = function (scalar, numVector) {
    if (!this.e2l(numVector))
      throw new IllegalContextException('The denseNumVector ' + numVector + ' does not match the context (' + this + ')');
    if (!this.u2k_1.m2m(scalar))
      throw new IllegalContextException('The scalar ' + scalar + ' does not match the context (field = ' + this.u2k_1 + ')');
    var tmp$ret$4;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.u2k_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$3;
    // Inline function 'com.github.shwaka.kohomology.linalg.DenseNumVectorSpace.multiply.<anonymous>' call
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = numVector.f2l_1;
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.DenseNumVectorSpace.multiply.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.l1l(item, scalar);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    tmp$ret$4 = tmp$ret$3;
    var valueList = tmp$ret$4;
    return new DenseNumVector(valueList, this.u2k_1);
  };
  DenseNumVectorSpace.prototype.n2m = function (scalar, numVector) {
    var tmp = isInterface(scalar, Scalar) ? scalar : THROW_CCE();
    return this.l2m(tmp, numVector instanceof DenseNumVector ? numVector : THROW_CCE());
  };
  DenseNumVectorSpace.prototype.o2m = function (a, b) {
    if (!this.e2l(a))
      throw new IllegalContextException('The sparseNumVector ' + a + ' does not match the context (' + this + ')');
    if (!this.e2l(b))
      throw new IllegalContextException('The sparseNumVector ' + b + ' does not match the context (' + this + ')');
    if (!(a.q25() === b.q25()))
      throw new InvalidSizeException('Cannot divide numVectors of different dim');
    if (b.dj())
      throw ArithmeticException_init_$Create$('Division by zero numVector');
    var tmp$ret$2;
    // Inline function 'kotlin.collections.find' call
    var tmp0_find = withIndex(b.f2l_1);
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.collections.firstOrNull' call
      var tmp0_iterator = tmp0_find.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.linalg.DenseNumVectorSpace.divideByNumVector.<anonymous>' call
        var scalar = element.b4();
        tmp$ret$0 = scalar.y1s();
        if (tmp$ret$0) {
          tmp$ret$1 = element;
          break $l$block;
        }
      }
      tmp$ret$1 = null;
    }
    tmp$ret$2 = tmp$ret$1;
    var tmp0_safe_receiver = tmp$ret$2;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.x3_1;
    var tmp;
    if (tmp1_elvis_lhs == null) {
      throw Exception_init_$Create$("This can't happen!");
    } else {
      tmp = tmp1_elvis_lhs;
    }
    var index = tmp;
    var tmp$ret$4;
    // Inline function 'kotlin.run' call
    var tmp1_run = this.u2k_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$3;
    // Inline function 'com.github.shwaka.kohomology.linalg.DenseNumVectorSpace.divideByNumVector.<anonymous>' call
    tmp$ret$3 = tmp1_run.f1m(a.f2l_1.l(index), b.f2l_1.l(index));
    tmp$ret$4 = tmp$ret$3;
    var scalar_0 = tmp$ret$4;
    var tmp_0;
    var tmp$ret$6;
    // Inline function 'kotlin.run' call
    var tmp2_run = this.v2k_1;
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$5;
    // Inline function 'com.github.shwaka.kohomology.linalg.DenseNumVectorSpace.divideByNumVector.<anonymous>' call
    tmp$ret$5 = a.equals(tmp2_run.k1l(scalar_0, b));
    tmp$ret$6 = tmp$ret$5;
    if (tmp$ret$6) {
      tmp_0 = scalar_0;
    } else {
      tmp_0 = null;
    }
    return tmp_0;
  };
  DenseNumVectorSpace.prototype.p2m = function (a, b) {
    var tmp = a instanceof DenseNumVector ? a : THROW_CCE();
    return this.o2m(tmp, b instanceof DenseNumVector ? b : THROW_CCE());
  };
  DenseNumVectorSpace.prototype.q2m = function (numVector) {
    if (!this.e2l(numVector))
      throw new IllegalContextException('The denseNumVector ' + numVector + ' does not match the context (' + this + ')');
    var tmp$ret$4;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.u2k_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$3;
    // Inline function 'com.github.shwaka.kohomology.linalg.DenseNumVectorSpace.unaryMinusOf.<anonymous>' call
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = numVector.f2l_1;
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.DenseNumVectorSpace.unaryMinusOf.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.b1m(item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    tmp$ret$4 = tmp$ret$3;
    var valueList = tmp$ret$4;
    return new DenseNumVector(valueList, this.u2k_1);
  };
  DenseNumVectorSpace.prototype.r2m = function (numVector) {
    return this.q2m(numVector instanceof DenseNumVector ? numVector : THROW_CCE());
  };
  DenseNumVectorSpace.prototype.s2m = function (numVector, ind) {
    return numVector.f2l_1.l(ind);
  };
  DenseNumVectorSpace.prototype.t2m = function (numVector, ind) {
    return this.s2m(numVector instanceof DenseNumVector ? numVector : THROW_CCE(), ind);
  };
  DenseNumVectorSpace.prototype.h2l = function (valueList) {
    return new DenseNumVector(valueList, this.u2k_1);
  };
  DenseNumVectorSpace.prototype.u2m = function (valueMap, dim) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = until(0, dim);
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.m1_1;
    var last = tmp0_map.n1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.linalg.DenseNumVectorSpace.fromValueMap.<anonymous>' call
        var tmp0_elvis_lhs = valueMap.t(item);
        tmp$ret$0 = tmp0_elvis_lhs == null ? this.u2k_1.m1m() : tmp0_elvis_lhs;
        tmp0_mapTo.a(tmp$ret$0);
      }
       while (!(item === last));
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var valueList = tmp$ret$2;
    return new DenseNumVector(valueList, this.u2k_1);
  };
  DenseNumVectorSpace.prototype.k1k = function (dim) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.List' call
    var tmp$ret$1;
    // Inline function 'kotlin.collections.MutableList' call
    var list = ArrayList_init_$Create$(dim);
    // Inline function 'kotlin.repeat' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    if (inductionVariable < dim)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.collections.MutableList.<anonymous>' call
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.linalg.DenseNumVectorSpace.getZero.<anonymous>' call
        tmp$ret$0 = this.u2k_1.m1m();
        list.a(tmp$ret$0);
      }
       while (inductionVariable < dim);
    tmp$ret$1 = list;
    tmp$ret$2 = tmp$ret$1;
    var valueList = tmp$ret$2;
    return this.h2l(valueList);
  };
  DenseNumVectorSpace.prototype.toString = function () {
    return 'DenseNumVectorSpace(' + this.u2k_1 + ')';
  };
  DenseNumVectorSpace.$metadata$ = classMeta('DenseNumVectorSpace', [NumVectorSpace]);
  function DenseNumVector(valueList, field) {
    this.f2l_1 = valueList;
    this.g2l_1 = field;
  }
  DenseNumVector.prototype.x2m = function () {
    return this.f2l_1;
  };
  DenseNumVector.prototype.q25 = function () {
    return this.f2l_1.i();
  };
  DenseNumVector.prototype.dj = function () {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp0_all = this.f2l_1;
      var tmp;
      if (isInterface(tmp0_all, Collection)) {
        tmp = tmp0_all.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_all.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        var tmp$ret$1;
        // Inline function 'com.github.shwaka.kohomology.linalg.DenseNumVector.isZero.<anonymous>' call
        tmp$ret$1 = element.dj();
        if (!tmp$ret$1) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  DenseNumVector.prototype.d2h = function () {
    return this.f2l_1;
  };
  DenseNumVector.prototype.y2m = function () {
    var tmp$ret$3;
    // Inline function 'kotlin.collections.mapIndexedNotNull' call
    var tmp0_mapIndexedNotNull = this.f2l_1;
    var tmp$ret$2;
    // Inline function 'kotlin.collections.mapIndexedNotNullTo' call
    var tmp1_mapIndexedNotNullTo = ArrayList_init_$Create$_0();
    // Inline function 'kotlin.collections.forEachIndexed' call
    var index = 0;
    var tmp0_iterator = tmp0_mapIndexedNotNull.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      // Inline function 'kotlin.collections.mapIndexedNotNullTo.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      var tmp0__anonymous__q1qw7t = checkIndexOverflow(tmp1);
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.DenseNumVector.toMap.<anonymous>' call
      tmp$ret$0 = item.y1s() ? new Pair(tmp0__anonymous__q1qw7t, item) : null;
      var tmp0_safe_receiver = tmp$ret$0;
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$1;
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        tmp1_mapIndexedNotNullTo.a(tmp0_safe_receiver);
        tmp$ret$1 = Unit_getInstance();
      }
    }
    tmp$ret$2 = tmp1_mapIndexedNotNullTo;
    tmp$ret$3 = tmp$ret$2;
    return toMap(tmp$ret$3);
  };
  DenseNumVector.prototype.toString = function () {
    return 'DenseNumVector(valueList=' + this.f2l_1 + ', field=' + this.g2l_1 + ')';
  };
  DenseNumVector.prototype.hashCode = function () {
    var result = hashCode(this.f2l_1);
    result = imul(result, 31) + hashCode(this.g2l_1) | 0;
    return result;
  };
  DenseNumVector.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof DenseNumVector))
      return false;
    var tmp0_other_with_cast = other instanceof DenseNumVector ? other : THROW_CCE();
    if (!equals(this.f2l_1, tmp0_other_with_cast.f2l_1))
      return false;
    if (!equals(this.g2l_1, tmp0_other_with_cast.g2l_1))
      return false;
    return true;
  };
  DenseNumVector.$metadata$ = classMeta('DenseNumVector', [NumVector]);
  function _get_data__d5abxd_0($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = data$factory_0();
    tmp$ret$0 = $this.j2n_1.f1();
    return tmp$ret$0;
  }
  function RowEchelonFormData(matrix, pivots, exchangeCount) {
    this.l2n_1 = matrix;
    this.m2n_1 = pivots;
    this.n2n_1 = exchangeCount;
  }
  RowEchelonFormData.prototype.toString = function () {
    return 'RowEchelonFormData(matrix=' + this.l2n_1 + ', pivots=' + this.m2n_1 + ', exchangeCount=' + this.n2n_1 + ')';
  };
  RowEchelonFormData.prototype.hashCode = function () {
    var result = hashCode(this.l2n_1);
    result = imul(result, 31) + hashCode(this.m2n_1) | 0;
    result = imul(result, 31) + this.n2n_1 | 0;
    return result;
  };
  RowEchelonFormData.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof RowEchelonFormData))
      return false;
    var tmp0_other_with_cast = other instanceof RowEchelonFormData ? other : THROW_CCE();
    if (!equals(this.l2n_1, tmp0_other_with_cast.l2n_1))
      return false;
    if (!equals(this.m2n_1, tmp0_other_with_cast.m2n_1))
      return false;
    if (!(this.n2n_1 === tmp0_other_with_cast.n2n_1))
      return false;
    return true;
  };
  RowEchelonFormData.$metadata$ = classMeta('RowEchelonFormData');
  function rowEchelonForm(_this__u8e3s4, $this) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.listOf' call
    tmp$ret$0 = emptyList();
    return rowEchelonFormInternal(_this__u8e3s4, $this, 0, tmp$ret$0, 0);
  }
  function rowEchelonFormInternal(_this__u8e3s4, $this, currentColInd, pivots, exchangeCount) {
    if (_this__u8e3s4.p()) {
      return new RowEchelonFormData(_this__u8e3s4, emptyList(), 0);
    }
    if (currentColInd === _this__u8e3s4.l(0).i()) {
      return new RowEchelonFormData(_this__u8e3s4, pivots, exchangeCount);
    }
    var rowInd = findNonZero(_this__u8e3s4, $this, currentColInd, pivots.i());
    var tmp;
    if (rowInd == null) {
      tmp = rowEchelonFormInternal(_this__u8e3s4, $this, currentColInd + 1 | 0, pivots, exchangeCount);
    } else {
      var newMatrix = eliminateOtherRows(_this__u8e3s4, $this, rowInd, currentColInd);
      var newExchangeCount = exchangeCount;
      if (!(rowInd === pivots.i())) {
        newMatrix = exchangeRows(newMatrix, $this, rowInd, pivots.i());
        newExchangeCount = newExchangeCount + 1 | 0;
      }
      var newPivots = plus(pivots, listOf(currentColInd));
      tmp = rowEchelonFormInternal(newMatrix, $this, currentColInd + 1 | 0, newPivots, newExchangeCount);
    }
    return tmp;
  }
  function exchangeRows(_this__u8e3s4, $this, i1, i2) {
    if (i1 === i2)
      throw IllegalArgumentException_init_$Create$('Row numbers must be distinct');
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = get_indices_0(_this__u8e3s4);
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.m1_1;
    var last = tmp0_map.n1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.linalg.DenseRowEchelonForm.exchangeRows.<anonymous>' call
        var tmp0_subject = item;
        tmp$ret$0 = tmp0_subject === i1 ? _this__u8e3s4.l(i2) : tmp0_subject === i2 ? _this__u8e3s4.l(i1) : _this__u8e3s4.l(item);
        tmp0_mapTo.a(tmp$ret$0);
      }
       while (!(item === last));
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function minus_4(_this__u8e3s4, $this, other) {
    var tmp$ret$4;
    // Inline function 'kotlin.run' call
    var tmp0_run = $this.k2n_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$3;
    // Inline function 'com.github.shwaka.kohomology.linalg.DenseRowEchelonForm.minus.<anonymous>' call
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = zip(_this__u8e3s4, other);
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.DenseRowEchelonForm.minus.<anonymous>.<anonymous>' call
      var a = item.a4();
      var b = item.b4();
      tmp$ret$0 = tmp0_run.x1l(a, b);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    tmp$ret$4 = tmp$ret$3;
    return tmp$ret$4;
  }
  function times_14(_this__u8e3s4, $this, other) {
    var tmp$ret$4;
    // Inline function 'kotlin.run' call
    var tmp0_run = $this.k2n_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$3;
    // Inline function 'com.github.shwaka.kohomology.linalg.DenseRowEchelonForm.times.<anonymous>' call
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(_this__u8e3s4, 10));
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.DenseRowEchelonForm.times.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.l1l(item, other);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    tmp$ret$4 = tmp$ret$3;
    return tmp$ret$4;
  }
  function eliminateOtherRows(_this__u8e3s4, $this, rowInd, colInd) {
    if (_this__u8e3s4.l(rowInd).l(colInd).dj())
      throw IllegalArgumentException_init_$Create$('Cannot eliminate since the element at (' + rowInd + ', ' + colInd + ') is zero');
    var scalarMatrix = _this__u8e3s4;
    var tmp$ret$4;
    // Inline function 'kotlin.run' call
    var tmp0_run = $this.k2n_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$3;
    // Inline function 'com.github.shwaka.kohomology.linalg.DenseRowEchelonForm.eliminateOtherRows.<anonymous>' call
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = get_indices_0(scalarMatrix);
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.m1_1;
    var last = tmp0_map.n1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.linalg.DenseRowEchelonForm.eliminateOtherRows.<anonymous>.<anonymous>' call
        var tmp0_subject = item;
        tmp$ret$0 = tmp0_subject === rowInd ? scalarMatrix.l(rowInd) : minus_4(scalarMatrix.l(item), $this, times_14(scalarMatrix.l(rowInd), $this, tmp0_run.f1m(scalarMatrix.l(item).l(colInd), scalarMatrix.l(rowInd).l(colInd))));
        tmp0_mapTo.a(tmp$ret$0);
      }
       while (!(item === last));
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    tmp$ret$4 = tmp$ret$3;
    return tmp$ret$4;
  }
  function findNonZero(_this__u8e3s4, $this, colInd, rowIndFrom) {
    var inductionVariable = rowIndFrom;
    var last = _this__u8e3s4.i();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (_this__u8e3s4.l(i).l(colInd).y1s())
          return i;
      }
       while (inductionVariable < last);
    return null;
  }
  function DenseRowEchelonForm$data$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.u1j().c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.DenseRowEchelonForm.data$delegate.<anonymous>.<anonymous>' call
      tmp$ret$0 = rowEchelonForm(this$0.i2j_1.d2h(), this$0);
      tmp$ret$1 = tmp$ret$0;
      return tmp$ret$1;
    };
  }
  function DenseRowEchelonForm(matrixSpace, originalMatrix) {
    RowEchelonForm.call(this, matrixSpace, originalMatrix);
    var tmp = this;
    tmp.j2n_1 = lazy(DenseRowEchelonForm$data$delegate$lambda(this));
    this.k2n_1 = matrixSpace.s2k_1;
  }
  DenseRowEchelonForm.prototype.f2k = function () {
    var tmp = this.u1j();
    var tmp_0 = _get_data__d5abxd_0(this).l2n_1;
    return tmp.q2l(tmp_0, null, 2, null);
  };
  DenseRowEchelonForm.prototype.h2k = function () {
    return _get_data__d5abxd_0(this).m2n_1;
  };
  DenseRowEchelonForm.prototype.i2k = function () {
    return Companion_getInstance_69().o2n(_get_data__d5abxd_0(this).n2n_1);
  };
  DenseRowEchelonForm.prototype.j2k = function () {
    var rowCount = this.i2j_1.a2l_1;
    var rank = this.n2k().i();
    var rowEchelonMatrix = _get_data__d5abxd_0(this).l2n_1;
    var one = this.u1j().e1k().n1m();
    var tmp$ret$4;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = until(0, rowCount);
    var tmp$ret$3;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.m1_1;
    var last = tmp0_map.n1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$2;
        // Inline function 'com.github.shwaka.kohomology.linalg.DenseRowEchelonForm.computeReducedRowEchelonForm.<anonymous>' call
        var a = item < rank ? rowEchelonMatrix.l(item).l(this.n2k().l(item)) : one;
        var tmp$ret$1;
        // Inline function 'kotlin.run' call
        var tmp0_run = this.k2n_1.c1j();
        // Inline function 'kotlin.contracts.contract' call
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.linalg.DenseRowEchelonForm.computeReducedRowEchelonForm.<anonymous>.<anonymous>' call
        tmp$ret$0 = times_14(rowEchelonMatrix.l(item), this, tmp0_run.h1m(a));
        tmp$ret$1 = tmp$ret$0;
        tmp$ret$2 = tmp$ret$1;
        tmp0_mapTo.a(tmp$ret$2);
      }
       while (!(item === last));
    tmp$ret$3 = tmp0_mapTo;
    tmp$ret$4 = tmp$ret$3;
    var rawReducedMatrix = tmp$ret$4;
    var inductionVariable_0 = 0;
    if (inductionVariable_0 < rank)
      do {
        var i = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        rawReducedMatrix = eliminateOtherRows(rawReducedMatrix, this, i, this.n2k().l(i));
      }
       while (inductionVariable_0 < rank);
    return this.u1j().p2l(rawReducedMatrix, this.i2j_1.b2l_1);
  };
  DenseRowEchelonForm.$metadata$ = classMeta('DenseRowEchelonForm', undefined, undefined, undefined, undefined, RowEchelonForm.prototype);
  function data$factory_0() {
    return getPropertyCallableRef('data', 1, KProperty1, function (receiver) {
      return _get_data__d5abxd_0(receiver);
    }, null);
  }
  function Companion_54() {
    Companion_instance_54 = this;
  }
  Companion_54.prototype.p2n = function (field) {
    return new ScalarContextImpl(field);
  };
  Companion_54.$metadata$ = objectMeta('Companion');
  var Companion_instance_54;
  function Companion_getInstance_55() {
    if (Companion_instance_54 == null)
      new Companion_54();
    return Companion_instance_54;
  }
  function ScalarContext() {
  }
  ScalarContext.$metadata$ = interfaceMeta('ScalarContext');
  function Scalar() {
  }
  Scalar.$metadata$ = interfaceMeta('Scalar', [PrintableWithSign]);
  function Field() {
  }
  Field.$metadata$ = interfaceMeta('Field');
  function ScalarContextImpl(field) {
    this.x2n_1 = field;
  }
  ScalarContextImpl.prototype.e1k = function () {
    return this.x2n_1;
  };
  ScalarContextImpl.$metadata$ = classMeta('ScalarContextImpl', [ScalarContext]);
  function MatrixSpace() {
  }
  MatrixSpace.$metadata$ = interfaceMeta('MatrixSpace');
  function _get_augmentedOriginalMatrix__gimylt($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = augmentedOriginalMatrix$factory();
    tmp$ret$0 = $this.o2j_1.f1();
    return tmp$ret$0;
  }
  function RowEchelonForm$matrix$delegate$lambda(this$0) {
    return function () {
      return this$0.f2k();
    };
  }
  function RowEchelonForm$reducedMatrix$delegate$lambda(this$0) {
    return function () {
      return this$0.j2k();
    };
  }
  function RowEchelonForm$pivots$delegate$lambda(this$0) {
    return function () {
      return this$0.h2k();
    };
  }
  function RowEchelonForm$sign$delegate$lambda(this$0) {
    return function () {
      return this$0.i2k();
    };
  }
  function RowEchelonForm$rank$delegate$lambda(this$0) {
    return function () {
      return this$0.n2k().i();
    };
  }
  function RowEchelonForm$augmentedOriginalMatrix$delegate$lambda(this$0) {
    return function () {
      var rowCount = this$0.i2j_1.c2m();
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.u1j().c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.RowEchelonForm.augmentedOriginalMatrix$delegate.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.y2n(listOf_0([this$0.i2j_1, this$0.u1j().a2m(rowCount)]));
      tmp$ret$1 = tmp$ret$0;
      return tmp$ret$1;
    };
  }
  function RowEchelonForm$transformation$delegate$lambda(this$0) {
    return function () {
      var originalColCount = this$0.i2j_1.d2m();
      var augmentedColCount = _get_augmentedOriginalMatrix__gimylt(this$0).d2m();
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.u1j().c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.RowEchelonForm.transformation$delegate.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.a2o(tmp0_run.z2n(_get_augmentedOriginalMatrix__gimylt(this$0)).l2k(), until(originalColCount, augmentedColCount));
      tmp$ret$1 = tmp$ret$0;
      return tmp$ret$1;
    };
  }
  function RowEchelonForm$reducedTransformation$delegate$lambda(this$0) {
    return function () {
      var originalColCount = this$0.i2j_1.d2m();
      var augmentedColCount = _get_augmentedOriginalMatrix__gimylt(this$0).d2m();
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.u1j().c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.RowEchelonForm.reducedTransformation$delegate.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_run.a2o(tmp0_run.z2n(_get_augmentedOriginalMatrix__gimylt(this$0)).m2k(), until(originalColCount, augmentedColCount));
      tmp$ret$1 = tmp$ret$0;
      return tmp$ret$1;
    };
  }
  function RowEchelonForm(matrixSpace, originalMatrix) {
    this.h2j_1 = matrixSpace;
    this.i2j_1 = originalMatrix;
    var tmp = this;
    tmp.j2j_1 = lazy(RowEchelonForm$matrix$delegate$lambda(this));
    var tmp_0 = this;
    tmp_0.k2j_1 = lazy(RowEchelonForm$reducedMatrix$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.l2j_1 = lazy(RowEchelonForm$pivots$delegate$lambda(this));
    var tmp_2 = this;
    tmp_2.m2j_1 = lazy(RowEchelonForm$sign$delegate$lambda(this));
    var tmp_3 = this;
    tmp_3.n2j_1 = lazy(RowEchelonForm$rank$delegate$lambda(this));
    var tmp_4 = this;
    tmp_4.o2j_1 = lazy(RowEchelonForm$augmentedOriginalMatrix$delegate$lambda(this));
    var tmp_5 = this;
    tmp_5.p2j_1 = lazy(RowEchelonForm$transformation$delegate$lambda(this));
    var tmp_6 = this;
    tmp_6.q2j_1 = lazy(RowEchelonForm$reducedTransformation$delegate$lambda(this));
  }
  RowEchelonForm.prototype.u1j = function () {
    return this.h2j_1;
  };
  RowEchelonForm.prototype.k2k = function () {
    return this.i2j_1;
  };
  RowEchelonForm.prototype.l2k = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = matrix$factory();
    tmp$ret$0 = this.j2j_1.f1();
    return tmp$ret$0;
  };
  RowEchelonForm.prototype.m2k = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = reducedMatrix$factory();
    tmp$ret$0 = this.k2j_1.f1();
    return tmp$ret$0;
  };
  RowEchelonForm.prototype.n2k = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = pivots$factory();
    tmp$ret$0 = this.l2j_1.f1();
    return tmp$ret$0;
  };
  RowEchelonForm.prototype.o2k = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = reducedTransformation$factory();
    tmp$ret$0 = this.q2j_1.f1();
    return tmp$ret$0;
  };
  RowEchelonForm.$metadata$ = classMeta('RowEchelonForm');
  function Companion_55() {
    Companion_instance_55 = this;
  }
  Companion_55.prototype.w2k = function (matrixSpace) {
    return new MatrixContextImpl(matrixSpace);
  };
  Companion_55.$metadata$ = objectMeta('Companion');
  var Companion_instance_55;
  function Companion_getInstance_56() {
    if (Companion_instance_55 == null)
      new Companion_55();
    return Companion_instance_55;
  }
  function MatrixContext() {
  }
  MatrixContext.$metadata$ = interfaceMeta('MatrixContext', [NumVectorContext]);
  function Matrix() {
  }
  Matrix.$metadata$ = interfaceMeta('Matrix');
  function MatrixContextImpl(matrixSpace) {
    this.g2o_1 = matrixSpace;
    this.h2o_1 = Companion_getInstance_57().a1x(matrixSpace.x1j());
  }
  MatrixContextImpl.prototype.u1j = function () {
    return this.g2o_1;
  };
  MatrixContextImpl.prototype.e1k = function () {
    return this.h2o_1.e1k();
  };
  MatrixContextImpl.prototype.x1j = function () {
    return this.h2o_1.x1j();
  };
  MatrixContextImpl.prototype.n1m = function () {
    return this.h2o_1.n1m();
  };
  MatrixContextImpl.prototype.m1m = function () {
    return this.h2o_1.m1m();
  };
  MatrixContextImpl.prototype.f1m = function (_this__u8e3s4, other) {
    return this.h2o_1.f1m(_this__u8e3s4, other);
  };
  MatrixContextImpl.prototype.g1m = function (_this__u8e3s4, other) {
    return this.h2o_1.g1m(_this__u8e3s4, other);
  };
  MatrixContextImpl.prototype.e1m = function (_this__u8e3s4, ind) {
    return this.h2o_1.e1m(_this__u8e3s4, ind);
  };
  MatrixContextImpl.prototype.h1m = function (_this__u8e3s4) {
    return this.h2o_1.h1m(_this__u8e3s4);
  };
  MatrixContextImpl.prototype.x1l = function (_this__u8e3s4, other) {
    return this.h2o_1.x1l(_this__u8e3s4, other);
  };
  MatrixContextImpl.prototype.w1l = function (_this__u8e3s4, other) {
    return this.h2o_1.w1l(_this__u8e3s4, other);
  };
  MatrixContextImpl.prototype.t1l = function (_this__u8e3s4, other) {
    return this.h2o_1.t1l(_this__u8e3s4, other);
  };
  MatrixContextImpl.prototype.s1l = function (_this__u8e3s4, other) {
    return this.h2o_1.s1l(_this__u8e3s4, other);
  };
  MatrixContextImpl.prototype.d1m = function (_this__u8e3s4) {
    return this.h2o_1.d1m(_this__u8e3s4);
  };
  MatrixContextImpl.prototype.l1l = function (_this__u8e3s4, other) {
    return this.h2o_1.l1l(_this__u8e3s4, other);
  };
  MatrixContextImpl.prototype.k1l = function (_this__u8e3s4, numVector) {
    return this.h2o_1.k1l(_this__u8e3s4, numVector);
  };
  MatrixContextImpl.prototype.j1l = function (_this__u8e3s4, scalar) {
    return this.h2o_1.j1l(_this__u8e3s4, scalar);
  };
  MatrixContextImpl.prototype.k1m = function (_this__u8e3s4) {
    return this.h2o_1.k1m(_this__u8e3s4);
  };
  MatrixContextImpl.prototype.b1m = function (_this__u8e3s4) {
    return this.h2o_1.b1m(_this__u8e3s4);
  };
  MatrixContextImpl.prototype.a1m = function (_this__u8e3s4) {
    return this.h2o_1.a1m(_this__u8e3s4);
  };
  MatrixContextImpl.$metadata$ = classMeta('MatrixContextImpl', [MatrixContext, NumVectorContext]);
  function matrix$factory() {
    return getPropertyCallableRef('matrix', 1, KProperty1, function (receiver) {
      return receiver.l2k();
    }, null);
  }
  function reducedMatrix$factory() {
    return getPropertyCallableRef('reducedMatrix', 1, KProperty1, function (receiver) {
      return receiver.m2k();
    }, null);
  }
  function pivots$factory() {
    return getPropertyCallableRef('pivots', 1, KProperty1, function (receiver) {
      return receiver.n2k();
    }, null);
  }
  function augmentedOriginalMatrix$factory() {
    return getPropertyCallableRef('augmentedOriginalMatrix', 1, KProperty1, function (receiver) {
      return _get_augmentedOriginalMatrix__gimylt(receiver);
    }, null);
  }
  function reducedTransformation$factory() {
    return getPropertyCallableRef('reducedTransformation', 1, KProperty1, function (receiver) {
      return receiver.o2k();
    }, null);
  }
  function NumVectorSpace() {
  }
  NumVectorSpace.$metadata$ = interfaceMeta('NumVectorSpace');
  function Companion_56() {
    Companion_instance_56 = this;
  }
  Companion_56.prototype.a1x = function (numVectorSpace) {
    return new NumVectorContextImpl(numVectorSpace);
  };
  Companion_56.$metadata$ = objectMeta('Companion');
  var Companion_instance_56;
  function Companion_getInstance_57() {
    if (Companion_instance_56 == null)
      new Companion_56();
    return Companion_instance_56;
  }
  function NumVectorContext() {
  }
  NumVectorContext.$metadata$ = interfaceMeta('NumVectorContext', [ScalarContext]);
  function NumVector() {
  }
  NumVector.$metadata$ = interfaceMeta('NumVector');
  function NumVectorContextImpl(numVectorSpace) {
    this.i2o_1 = numVectorSpace;
    this.j2o_1 = Companion_getInstance_55().p2n(numVectorSpace.e1k());
  }
  NumVectorContextImpl.prototype.x1j = function () {
    return this.i2o_1;
  };
  NumVectorContextImpl.prototype.e1k = function () {
    return this.j2o_1.e1k();
  };
  NumVectorContextImpl.prototype.n1m = function () {
    return this.j2o_1.n1m();
  };
  NumVectorContextImpl.prototype.m1m = function () {
    return this.j2o_1.m1m();
  };
  NumVectorContextImpl.prototype.f1m = function (_this__u8e3s4, other) {
    return this.j2o_1.f1m(_this__u8e3s4, other);
  };
  NumVectorContextImpl.prototype.g1m = function (_this__u8e3s4, other) {
    return this.j2o_1.g1m(_this__u8e3s4, other);
  };
  NumVectorContextImpl.prototype.h1m = function (_this__u8e3s4) {
    return this.j2o_1.h1m(_this__u8e3s4);
  };
  NumVectorContextImpl.prototype.x1l = function (_this__u8e3s4, other) {
    return this.j2o_1.x1l(_this__u8e3s4, other);
  };
  NumVectorContextImpl.prototype.t1l = function (_this__u8e3s4, other) {
    return this.j2o_1.t1l(_this__u8e3s4, other);
  };
  NumVectorContextImpl.prototype.d1m = function (_this__u8e3s4) {
    return this.j2o_1.d1m(_this__u8e3s4);
  };
  NumVectorContextImpl.prototype.l1l = function (_this__u8e3s4, other) {
    return this.j2o_1.l1l(_this__u8e3s4, other);
  };
  NumVectorContextImpl.prototype.k1m = function (_this__u8e3s4) {
    return this.j2o_1.k1m(_this__u8e3s4);
  };
  NumVectorContextImpl.prototype.b1m = function (_this__u8e3s4) {
    return this.j2o_1.b1m(_this__u8e3s4);
  };
  NumVectorContextImpl.$metadata$ = classMeta('NumVectorContextImpl', [NumVectorContext, ScalarContext]);
  function SparseMatrixSpace_init_$Init$(numVectorSpace, sparseRowEchelonFormCalculator, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      sparseRowEchelonFormCalculator = new InPlaceSparseRowEchelonFormCalculator(numVectorSpace.k2o_1);
    SparseMatrixSpace.call($this, numVectorSpace, sparseRowEchelonFormCalculator);
    return $this;
  }
  function SparseMatrixSpace_init_$Create$(numVectorSpace, sparseRowEchelonFormCalculator, $mask0, $marker) {
    return SparseMatrixSpace_init_$Init$(numVectorSpace, sparseRowEchelonFormCalculator, $mask0, $marker, Object.create(SparseMatrixSpace.prototype));
  }
  function Companion_57() {
    Companion_instance_57 = this;
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp$ret$0 = LinkedHashMap_init_$Create$();
    tmp.m2o_1 = tmp$ret$0;
  }
  Companion_57.prototype.n2o = function (numVectorSpace) {
    if (this.m2o_1.f3(numVectorSpace)) {
      var tmp = this.m2o_1.t(numVectorSpace);
      return tmp instanceof SparseMatrixSpace ? tmp : THROW_CCE();
    } else {
      var matrixSpace = SparseMatrixSpace_init_$Create$(numVectorSpace, null, 2, null);
      // Inline function 'kotlin.collections.set' call
      var tmp0_set = this.m2o_1;
      tmp0_set.u(numVectorSpace, matrixSpace);
      return matrixSpace;
    }
  };
  Companion_57.$metadata$ = objectMeta('Companion');
  var Companion_instance_57;
  function Companion_getInstance_58() {
    if (Companion_instance_57 == null)
      new Companion_57();
    return Companion_instance_57;
  }
  function SparseMatrixSpace(numVectorSpace, sparseRowEchelonFormCalculator) {
    Companion_getInstance_58();
    AbstractSparseMatrixSpace.call(this, numVectorSpace);
    this.r2o_1 = sparseRowEchelonFormCalculator;
  }
  SparseMatrixSpace.prototype.e2k = function () {
    return this.r2o_1;
  };
  SparseMatrixSpace.prototype.s2o = function (matrix) {
    var tmp0_safe_receiver = matrix.g2j_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return tmp0_safe_receiver;
    }
    var rowEchelonForm = new SparseRowEchelonForm(this, matrix);
    matrix.t2o(rowEchelonForm);
    return rowEchelonForm;
  };
  SparseMatrixSpace.prototype.l2l = function (matrix) {
    return this.s2o(matrix instanceof SparseMatrix ? matrix : THROW_CCE());
  };
  SparseMatrixSpace.prototype.toString = function () {
    return 'SparseMatrixSpace(' + this.e1k() + ')';
  };
  SparseMatrixSpace.$metadata$ = classMeta('SparseMatrixSpace', undefined, undefined, undefined, undefined, AbstractSparseMatrixSpace.prototype);
  function DecomposedSparseMatrixSpace_init_$Init$(numVectorSpace, sparseRowEchelonFormCalculator, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      sparseRowEchelonFormCalculator = new InPlaceSparseRowEchelonFormCalculator(numVectorSpace.k2o_1);
    DecomposedSparseMatrixSpace.call($this, numVectorSpace, sparseRowEchelonFormCalculator);
    return $this;
  }
  function DecomposedSparseMatrixSpace_init_$Create$(numVectorSpace, sparseRowEchelonFormCalculator, $mask0, $marker) {
    return DecomposedSparseMatrixSpace_init_$Init$(numVectorSpace, sparseRowEchelonFormCalculator, $mask0, $marker, Object.create(DecomposedSparseMatrixSpace.prototype));
  }
  function Companion_58() {
    Companion_instance_58 = this;
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp$ret$0 = LinkedHashMap_init_$Create$();
    tmp.a2p_1 = tmp$ret$0;
  }
  Companion_58.prototype.n2o = function (numVectorSpace) {
    if (this.a2p_1.f3(numVectorSpace)) {
      var tmp = this.a2p_1.t(numVectorSpace);
      return tmp instanceof DecomposedSparseMatrixSpace ? tmp : THROW_CCE();
    } else {
      var matrixSpace = DecomposedSparseMatrixSpace_init_$Create$(numVectorSpace, null, 2, null);
      // Inline function 'kotlin.collections.set' call
      var tmp0_set = this.a2p_1;
      tmp0_set.u(numVectorSpace, matrixSpace);
      return matrixSpace;
    }
  };
  Companion_58.$metadata$ = objectMeta('Companion');
  var Companion_instance_58;
  function Companion_getInstance_59() {
    if (Companion_instance_58 == null)
      new Companion_58();
    return Companion_instance_58;
  }
  function DecomposedSparseMatrixSpace(numVectorSpace, sparseRowEchelonFormCalculator) {
    Companion_getInstance_59();
    AbstractSparseMatrixSpace.call(this, numVectorSpace);
    this.e2p_1 = sparseRowEchelonFormCalculator;
  }
  DecomposedSparseMatrixSpace.prototype.e2k = function () {
    return this.e2p_1;
  };
  DecomposedSparseMatrixSpace.prototype.s2o = function (matrix) {
    var tmp0_safe_receiver = matrix.g2j_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return tmp0_safe_receiver;
    }
    var rowEchelonForm = new DecomposedSparseRowEchelonForm(this, matrix);
    matrix.t2o(rowEchelonForm);
    return rowEchelonForm;
  };
  DecomposedSparseMatrixSpace.prototype.l2l = function (matrix) {
    return this.s2o(matrix instanceof SparseMatrix ? matrix : THROW_CCE());
  };
  DecomposedSparseMatrixSpace.prototype.toString = function () {
    return 'DecomposedSparseMatrixSpace(' + this.e1k() + ')';
  };
  DecomposedSparseMatrixSpace.$metadata$ = classMeta('DecomposedSparseMatrixSpace', undefined, undefined, undefined, undefined, AbstractSparseMatrixSpace.prototype);
  function AbstractSparseMatrixSpace$field$delegate$lambda(this$0) {
    return function () {
      return this$0.x1j().k2o_1;
    };
  }
  function AbstractSparseMatrixSpace$context$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_56().w2k(this$0);
    };
  }
  function AbstractSparseMatrixSpace(numVectorSpace) {
    this.b2k_1 = numVectorSpace;
    var tmp = this;
    tmp.c2k_1 = lazy(AbstractSparseMatrixSpace$field$delegate$lambda(this));
    var tmp_0 = this;
    tmp_0.d2k_1 = lazy(AbstractSparseMatrixSpace$context$delegate$lambda(this));
  }
  AbstractSparseMatrixSpace.prototype.x1j = function () {
    return this.b2k_1;
  };
  AbstractSparseMatrixSpace.prototype.e1k = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = field$factory();
    tmp$ret$0 = this.c2k_1.f1();
    return tmp$ret$0;
  };
  AbstractSparseMatrixSpace.prototype.c1j = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = context$factory_1();
    tmp$ret$0 = this.d2k_1.f1();
    return tmp$ret$0;
  };
  AbstractSparseMatrixSpace.prototype.u2o = function (matrix) {
    return equals(matrix.c2j_1, this.x1j());
  };
  AbstractSparseMatrixSpace.prototype.v2o = function (matrix, numVector) {
    if (!this.u2o(matrix))
      throw new IllegalContextException('The sparseMatrix ' + matrix + ' does not match the context (' + this + ')');
    if (!this.x1j().f2p(numVector))
      throw new IllegalContextException('The numVector ' + numVector + ' does not match the context (' + this.x1j() + ')');
    if (!(matrix.e2j_1 === numVector.i2p_1))
      throw new InvalidSizeException('Cannot multiply matrix and vector: matrix.colCount != vector.dim');
    var tmp$ret$13;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.e1k().c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$12;
    // Inline function 'com.github.shwaka.kohomology.linalg.AbstractSparseMatrixSpace.multiply.<anonymous>' call
    var tmp$ret$11;
    // Inline function 'kotlin.collections.mapValues' call
    var tmp0_mapValues = matrix.f2j_1;
    var tmp$ret$10;
    // Inline function 'kotlin.collections.mapValuesTo' call
    var tmp1_mapValuesTo = LinkedHashMap_init_$Create$_0(mapCapacity(tmp0_mapValues.i()));
    var tmp$ret$9;
    // Inline function 'kotlin.collections.associateByTo' call
    var tmp0_associateByTo = tmp0_mapValues.d1();
    var tmp0_iterator = tmp0_associateByTo.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
      tmp$ret$0 = element.e1();
      var tmp = tmp$ret$0;
      var tmp$ret$8;
      // Inline function 'com.github.shwaka.kohomology.linalg.AbstractSparseMatrixSpace.multiply.<anonymous>.<anonymous>' call
      var tmp$ret$1;
      // Inline function 'kotlin.collections.component2' call
      tmp$ret$1 = element.f1();
      var row = tmp$ret$1;
      var tmp$ret$7;
      // Inline function 'kotlin.collections.map' call
      var tmp$ret$6;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(row.i());
      var tmp$ret$2;
      // Inline function 'kotlin.collections.iterator' call
      tmp$ret$2 = row.d1().f();
      var tmp0_iterator_0 = tmp$ret$2;
      while (tmp0_iterator_0.g()) {
        var item = tmp0_iterator_0.h();
        var tmp$ret$5;
        // Inline function 'com.github.shwaka.kohomology.linalg.AbstractSparseMatrixSpace.multiply.<anonymous>.<anonymous>.<anonymous>' call
        var tmp$ret$3;
        // Inline function 'kotlin.collections.component1' call
        tmp$ret$3 = item.e1();
        var colInd = tmp$ret$3;
        var tmp$ret$4;
        // Inline function 'kotlin.collections.component2' call
        tmp$ret$4 = item.f1();
        var elm = tmp$ret$4;
        var it = numVector.g2p_1.t(colInd);
        tmp$ret$5 = (it == null ? true : equals(it, tmp0_run.m1m())) ? null : tmp0_run.l1l(elm, it);
        tmp0_mapTo.a(tmp$ret$5);
      }
      tmp$ret$6 = tmp0_mapTo;
      tmp$ret$7 = tmp$ret$6;
      tmp$ret$8 = tmp0_run.d1m(filterNotNull(tmp$ret$7));
      tmp1_mapValuesTo.u(tmp, tmp$ret$8);
    }
    tmp$ret$9 = tmp1_mapValuesTo;
    tmp$ret$10 = tmp$ret$9;
    tmp$ret$11 = tmp$ret$10;
    tmp$ret$12 = tmp$ret$11;
    tmp$ret$13 = tmp$ret$12;
    var valueMap = tmp$ret$13;
    return Companion_getInstance_61().j2p(valueMap, this.e1k(), matrix.d2j_1);
  };
  AbstractSparseMatrixSpace.prototype.i2l = function (matrix, numVector) {
    var tmp = matrix instanceof SparseMatrix ? matrix : THROW_CCE();
    return this.v2o(tmp, numVector instanceof SparseNumVector ? numVector : THROW_CCE());
  };
  AbstractSparseMatrixSpace.prototype.w2o = function (matrix) {
    var rowCount = matrix.e2j_1;
    var colCount = matrix.d2j_1;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp$ret$0 = LinkedHashMap_init_$Create$();
    var rowMap = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = matrix.f2j_1;
    tmp$ret$1 = tmp0_iterator.d1().f();
    var tmp0_iterator_0 = tmp$ret$1;
    while (tmp0_iterator_0.g()) {
      var tmp1_loop_parameter = tmp0_iterator_0.h();
      var tmp$ret$2;
      // Inline function 'kotlin.collections.component1' call
      tmp$ret$2 = tmp1_loop_parameter.e1();
      var rowInd = tmp$ret$2;
      var tmp$ret$3;
      // Inline function 'kotlin.collections.component2' call
      tmp$ret$3 = tmp1_loop_parameter.f1();
      var row = tmp$ret$3;
      var tmp$ret$4;
      // Inline function 'kotlin.collections.iterator' call
      tmp$ret$4 = row.d1().f();
      var tmp2_iterator = tmp$ret$4;
      while (tmp2_iterator.g()) {
        var tmp3_loop_parameter = tmp2_iterator.h();
        var tmp$ret$5;
        // Inline function 'kotlin.collections.component1' call
        tmp$ret$5 = tmp3_loop_parameter.e1();
        var colInd = tmp$ret$5;
        var tmp$ret$6;
        // Inline function 'kotlin.collections.component2' call
        tmp$ret$6 = tmp3_loop_parameter.f1();
        var elm = tmp$ret$6;
        var tmp$ret$9;
        // Inline function 'kotlin.collections.getOrPut' call
        var value = rowMap.t(colInd);
        var tmp;
        if (value == null) {
          var tmp$ret$8;
          // Inline function 'com.github.shwaka.kohomology.linalg.AbstractSparseMatrixSpace.computeTranspose.<anonymous>' call
          var tmp$ret$7;
          // Inline function 'kotlin.collections.mutableMapOf' call
          tmp$ret$7 = LinkedHashMap_init_$Create$();
          tmp$ret$8 = tmp$ret$7;
          var answer = tmp$ret$8;
          rowMap.u(colInd, answer);
          tmp = answer;
        } else {
          tmp = value;
        }
        tmp$ret$9 = tmp;
        var newRow = tmp$ret$9;
        // Inline function 'kotlin.collections.set' call
        newRow.u(rowInd, elm);
      }
    }
    return new SparseMatrix(this.x1j(), rowMap, rowCount, colCount);
  };
  AbstractSparseMatrixSpace.prototype.o2l = function (matrix) {
    return this.w2o(matrix instanceof SparseMatrix ? matrix : THROW_CCE());
  };
  AbstractSparseMatrixSpace.prototype.p2l = function (rowList, colCount) {
    var rowCount = rowList.i();
    var tmp;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.isNotEmpty' call
    tmp$ret$0 = !rowList.p();
    if (tmp$ret$0) {
      tmp = rowList.l(0).i();
    } else {
      if (!(colCount == null)) {
        tmp = colCount;
      } else {
        throw IllegalArgumentException_init_$Create$('Row list is empty and colCount is not specified');
      }
    }
    var colCountNonNull = tmp;
    var tmp$ret$8;
    // Inline function 'kotlin.collections.mapIndexedNotNull' call
    var tmp$ret$7;
    // Inline function 'kotlin.collections.mapIndexedNotNullTo' call
    var tmp1_mapIndexedNotNullTo = ArrayList_init_$Create$_0();
    // Inline function 'kotlin.collections.forEachIndexed' call
    var index = 0;
    var tmp0_iterator = rowList.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      // Inline function 'kotlin.collections.mapIndexedNotNullTo.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      var tmp0__anonymous__q1qw7t = checkIndexOverflow(tmp1);
      var tmp$ret$5;
      // Inline function 'com.github.shwaka.kohomology.linalg.AbstractSparseMatrixSpace.fromRowList.<anonymous>' call
      var tmp$ret$4;
      // Inline function 'kotlin.collections.mapIndexedNotNull' call
      var tmp$ret$3;
      // Inline function 'kotlin.collections.mapIndexedNotNullTo' call
      var tmp1_mapIndexedNotNullTo_0 = ArrayList_init_$Create$_0();
      // Inline function 'kotlin.collections.forEachIndexed' call
      var index_0 = 0;
      var tmp0_iterator_0 = item.f();
      while (tmp0_iterator_0.g()) {
        var item_0 = tmp0_iterator_0.h();
        // Inline function 'kotlin.collections.mapIndexedNotNullTo.<anonymous>' call
        var tmp1_0 = index_0;
        index_0 = tmp1_0 + 1 | 0;
        var tmp0__anonymous__q1qw7t_0 = checkIndexOverflow(tmp1_0);
        var tmp$ret$1;
        // Inline function 'com.github.shwaka.kohomology.linalg.AbstractSparseMatrixSpace.fromRowList.<anonymous>.<anonymous>' call
        tmp$ret$1 = item_0.dj() ? null : new Pair(tmp0__anonymous__q1qw7t_0, item_0);
        var tmp0_safe_receiver = tmp$ret$1;
        if (tmp0_safe_receiver == null)
          null;
        else {
          var tmp$ret$2;
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          tmp1_mapIndexedNotNullTo_0.a(tmp0_safe_receiver);
          tmp$ret$2 = Unit_getInstance();
        }
      }
      tmp$ret$3 = tmp1_mapIndexedNotNullTo_0;
      tmp$ret$4 = tmp$ret$3;
      var newRow = toMap(tmp$ret$4);
      tmp$ret$5 = newRow.p() ? null : new Pair(tmp0__anonymous__q1qw7t, newRow);
      var tmp0_safe_receiver_0 = tmp$ret$5;
      if (tmp0_safe_receiver_0 == null)
        null;
      else {
        var tmp$ret$6;
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        tmp1_mapIndexedNotNullTo.a(tmp0_safe_receiver_0);
        tmp$ret$6 = Unit_getInstance();
      }
    }
    tmp$ret$7 = tmp1_mapIndexedNotNullTo;
    tmp$ret$8 = tmp$ret$7;
    var rowMap = toMap(tmp$ret$8);
    return new SparseMatrix(this.x1j(), rowMap, rowCount, colCountNonNull);
  };
  AbstractSparseMatrixSpace.prototype.g2k = function (rowMap, rowCount, colCount) {
    return new SparseMatrix(this.x1j(), rowMap, rowCount, colCount);
  };
  AbstractSparseMatrixSpace.prototype.x2o = function (matrix1, matrix2) {
    if (!(matrix1.d2j_1 === matrix2.d2j_1))
      throw new InvalidSizeException('Cannot join two matrices of different row counts');
    var rowMap = toMutableMap(matrix1.f2j_1);
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = matrix2.f2j_1;
    tmp$ret$0 = tmp0_iterator.d1().f();
    var tmp0_iterator_0 = tmp$ret$0;
    while (tmp0_iterator_0.g()) {
      var tmp1_loop_parameter = tmp0_iterator_0.h();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.component1' call
      tmp$ret$1 = tmp1_loop_parameter.e1();
      var rowInd2 = tmp$ret$1;
      var tmp$ret$2;
      // Inline function 'kotlin.collections.component2' call
      tmp$ret$2 = tmp1_loop_parameter.f1();
      var row2 = tmp$ret$2;
      var tmp$ret$5;
      // Inline function 'kotlin.collections.getOrElse' call
      var tmp1_getOrElse = matrix1.f2j_1;
      var tmp0_elvis_lhs = tmp1_getOrElse.t(rowInd2);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        var tmp$ret$4;
        // Inline function 'com.github.shwaka.kohomology.linalg.AbstractSparseMatrixSpace.joinMatrices.<anonymous>' call
        var tmp$ret$3;
        // Inline function 'kotlin.collections.mapOf' call
        tmp$ret$3 = emptyMap();
        tmp$ret$4 = tmp$ret$3;
        tmp = tmp$ret$4;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      tmp$ret$5 = tmp;
      var row1 = tmp$ret$5;
      var tmp$ret$11;
      // Inline function 'kotlin.collections.mapKeys' call
      var tmp$ret$10;
      // Inline function 'kotlin.collections.mapKeysTo' call
      var tmp1_mapKeysTo = LinkedHashMap_init_$Create$_0(mapCapacity(row2.i()));
      var tmp$ret$9;
      // Inline function 'kotlin.collections.associateByTo' call
      var tmp0_associateByTo = row2.d1();
      var tmp0_iterator_1 = tmp0_associateByTo.f();
      while (tmp0_iterator_1.g()) {
        var element = tmp0_iterator_1.h();
        var tmp$ret$7;
        // Inline function 'com.github.shwaka.kohomology.linalg.AbstractSparseMatrixSpace.joinMatrices.<anonymous>' call
        var tmp$ret$6;
        // Inline function 'kotlin.collections.component1' call
        tmp$ret$6 = element.e1();
        var colInd = tmp$ret$6;
        tmp$ret$7 = colInd + matrix1.e2j_1 | 0;
        var tmp_0 = tmp$ret$7;
        var tmp$ret$8;
        // Inline function 'kotlin.collections.mapKeysTo.<anonymous>' call
        tmp$ret$8 = element.f1();
        tmp1_mapKeysTo.u(tmp_0, tmp$ret$8);
      }
      tmp$ret$9 = tmp1_mapKeysTo;
      tmp$ret$10 = tmp$ret$9;
      tmp$ret$11 = tmp$ret$10;
      var newRow = plus_0(row1, tmp$ret$11);
      // Inline function 'kotlin.collections.set' call
      rowMap.u(rowInd2, newRow);
    }
    var rowCount = matrix1.d2j_1;
    var colCount = matrix1.e2j_1 + matrix2.e2j_1 | 0;
    return new SparseMatrix(this.x1j(), rowMap, rowCount, colCount);
  };
  AbstractSparseMatrixSpace.prototype.s2l = function (matrix1, matrix2) {
    var tmp = matrix1 instanceof SparseMatrix ? matrix1 : THROW_CCE();
    return this.x2o(tmp, matrix2 instanceof SparseMatrix ? matrix2 : THROW_CCE());
  };
  AbstractSparseMatrixSpace.prototype.y2o = function (matrix, rowRange) {
    var rowCount = count(rowRange);
    var colCount = matrix.e2j_1;
    var tmp$ret$8;
    // Inline function 'kotlin.collections.mapKeys' call
    var tmp$ret$2;
    // Inline function 'kotlin.collections.filterKeys' call
    var tmp0_filterKeys = matrix.f2j_1;
    var result = LinkedHashMap_init_$Create$();
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$0 = tmp0_filterKeys.d1().f();
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.g()) {
      var entry = tmp0_iterator.h();
      var tmp$ret$1;
      // Inline function 'com.github.shwaka.kohomology.linalg.AbstractSparseMatrixSpace.computeRowSlice.<anonymous>' call
      var tmp1__anonymous__uwfjfc = entry.e1();
      var containsLower = rowRange.m1_1;
      tmp$ret$1 = tmp1__anonymous__uwfjfc <= rowRange.n1_1 ? containsLower <= tmp1__anonymous__uwfjfc : false;
      if (tmp$ret$1) {
        result.u(entry.e1(), entry.f1());
      }
    }
    tmp$ret$2 = result;
    var tmp2_mapKeys = tmp$ret$2;
    var tmp$ret$7;
    // Inline function 'kotlin.collections.mapKeysTo' call
    var tmp1_mapKeysTo = LinkedHashMap_init_$Create$_0(mapCapacity(tmp2_mapKeys.i()));
    var tmp$ret$6;
    // Inline function 'kotlin.collections.associateByTo' call
    var tmp0_associateByTo = tmp2_mapKeys.d1();
    var tmp0_iterator_0 = tmp0_associateByTo.f();
    while (tmp0_iterator_0.g()) {
      var element = tmp0_iterator_0.h();
      var tmp$ret$4;
      // Inline function 'com.github.shwaka.kohomology.linalg.AbstractSparseMatrixSpace.computeRowSlice.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'kotlin.collections.component1' call
      tmp$ret$3 = element.e1();
      var rowInd = tmp$ret$3;
      tmp$ret$4 = rowInd - rowRange.m1_1 | 0;
      var tmp = tmp$ret$4;
      var tmp$ret$5;
      // Inline function 'kotlin.collections.mapKeysTo.<anonymous>' call
      tmp$ret$5 = element.f1();
      tmp1_mapKeysTo.u(tmp, tmp$ret$5);
    }
    tmp$ret$6 = tmp1_mapKeysTo;
    tmp$ret$7 = tmp$ret$6;
    tmp$ret$8 = tmp$ret$7;
    var rowMap = tmp$ret$8;
    return new SparseMatrix(this.x1j(), rowMap, rowCount, colCount);
  };
  AbstractSparseMatrixSpace.prototype.u2l = function (matrix, rowRange) {
    return this.y2o(matrix instanceof SparseMatrix ? matrix : THROW_CCE(), rowRange);
  };
  AbstractSparseMatrixSpace.prototype.z2o = function (matrix, colRange) {
    var rowCount = matrix.d2j_1;
    var colCount = count(colRange);
    var tmp$ret$18;
    // Inline function 'kotlin.collections.filterValues' call
    var tmp$ret$14;
    // Inline function 'kotlin.collections.mapValues' call
    var tmp0_mapValues = matrix.f2j_1;
    var tmp$ret$13;
    // Inline function 'kotlin.collections.mapValuesTo' call
    var tmp1_mapValuesTo = LinkedHashMap_init_$Create$_0(mapCapacity(tmp0_mapValues.i()));
    var tmp$ret$12;
    // Inline function 'kotlin.collections.associateByTo' call
    var tmp0_associateByTo = tmp0_mapValues.d1();
    var tmp0_iterator = tmp0_associateByTo.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
      tmp$ret$0 = element.e1();
      var tmp = tmp$ret$0;
      var tmp$ret$11;
      // Inline function 'com.github.shwaka.kohomology.linalg.AbstractSparseMatrixSpace.computeColSlice.<anonymous>' call
      var tmp$ret$1;
      // Inline function 'kotlin.collections.component2' call
      tmp$ret$1 = element.f1();
      var row = tmp$ret$1;
      var tmp$ret$10;
      // Inline function 'kotlin.collections.mapKeys' call
      var tmp$ret$4;
      // Inline function 'kotlin.collections.filterKeys' call
      var result = LinkedHashMap_init_$Create$();
      var tmp$ret$2;
      // Inline function 'kotlin.collections.iterator' call
      tmp$ret$2 = row.d1().f();
      var tmp0_iterator_0 = tmp$ret$2;
      while (tmp0_iterator_0.g()) {
        var entry = tmp0_iterator_0.h();
        var tmp$ret$3;
        // Inline function 'com.github.shwaka.kohomology.linalg.AbstractSparseMatrixSpace.computeColSlice.<anonymous>.<anonymous>' call
        var tmp0__anonymous__q1qw7t = entry.e1();
        var containsLower = colRange.m1_1;
        tmp$ret$3 = tmp0__anonymous__q1qw7t <= colRange.n1_1 ? containsLower <= tmp0__anonymous__q1qw7t : false;
        if (tmp$ret$3) {
          result.u(entry.e1(), entry.f1());
        }
      }
      tmp$ret$4 = result;
      var tmp1_mapKeys = tmp$ret$4;
      var tmp$ret$9;
      // Inline function 'kotlin.collections.mapKeysTo' call
      var tmp1_mapKeysTo = LinkedHashMap_init_$Create$_0(mapCapacity(tmp1_mapKeys.i()));
      var tmp$ret$8;
      // Inline function 'kotlin.collections.associateByTo' call
      var tmp0_associateByTo_0 = tmp1_mapKeys.d1();
      var tmp0_iterator_1 = tmp0_associateByTo_0.f();
      while (tmp0_iterator_1.g()) {
        var element_0 = tmp0_iterator_1.h();
        var tmp$ret$6;
        // Inline function 'com.github.shwaka.kohomology.linalg.AbstractSparseMatrixSpace.computeColSlice.<anonymous>.<anonymous>' call
        var tmp$ret$5;
        // Inline function 'kotlin.collections.component1' call
        tmp$ret$5 = element_0.e1();
        var colInd = tmp$ret$5;
        tmp$ret$6 = colInd - colRange.m1_1 | 0;
        var tmp_0 = tmp$ret$6;
        var tmp$ret$7;
        // Inline function 'kotlin.collections.mapKeysTo.<anonymous>' call
        tmp$ret$7 = element_0.f1();
        tmp1_mapKeysTo.u(tmp_0, tmp$ret$7);
      }
      tmp$ret$8 = tmp1_mapKeysTo;
      tmp$ret$9 = tmp$ret$8;
      tmp$ret$10 = tmp$ret$9;
      tmp$ret$11 = tmp$ret$10;
      tmp1_mapValuesTo.u(tmp, tmp$ret$11);
    }
    tmp$ret$12 = tmp1_mapValuesTo;
    tmp$ret$13 = tmp$ret$12;
    tmp$ret$14 = tmp$ret$13;
    var tmp1_filterValues = tmp$ret$14;
    var result_0 = LinkedHashMap_init_$Create$();
    var tmp$ret$15;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$15 = tmp1_filterValues.d1().f();
    var tmp0_iterator_2 = tmp$ret$15;
    while (tmp0_iterator_2.g()) {
      var entry_0 = tmp0_iterator_2.h();
      var tmp$ret$17;
      // Inline function 'com.github.shwaka.kohomology.linalg.AbstractSparseMatrixSpace.computeColSlice.<anonymous>' call
      var tmp2__anonymous__z9zvc9 = entry_0.f1();
      var tmp$ret$16;
      // Inline function 'kotlin.collections.isNotEmpty' call
      tmp$ret$16 = !tmp2__anonymous__z9zvc9.p();
      tmp$ret$17 = tmp$ret$16;
      if (tmp$ret$17) {
        result_0.u(entry_0.e1(), entry_0.f1());
      }
    }
    tmp$ret$18 = result_0;
    var rowMap = tmp$ret$18;
    return new SparseMatrix(this.x1j(), rowMap, rowCount, colCount);
  };
  AbstractSparseMatrixSpace.prototype.w2l = function (matrix, colRange) {
    return this.z2o(matrix instanceof SparseMatrix ? matrix : THROW_CCE(), colRange);
  };
  AbstractSparseMatrixSpace.$metadata$ = classMeta('AbstractSparseMatrixSpace', [MatrixSpace]);
  function toStringTable_0($this) {
    var tmp$ret$5;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = until(0, $this.d2j_1);
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.m1_1;
    var last = tmp0_map.n1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$3;
        // Inline function 'com.github.shwaka.kohomology.linalg.SparseMatrix.toStringTable.<anonymous>' call
        var tmp$ret$2;
        // Inline function 'kotlin.collections.map' call
        var tmp0_map_0 = until(0, $this.e2j_1);
        var tmp$ret$1;
        // Inline function 'kotlin.collections.mapTo' call
        var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
        var inductionVariable_0 = tmp0_map_0.m1_1;
        var last_0 = tmp0_map_0.n1_1;
        if (inductionVariable_0 <= last_0)
          do {
            var item_0 = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var tmp$ret$0;
            // Inline function 'com.github.shwaka.kohomology.linalg.SparseMatrix.toStringTable.<anonymous>.<anonymous>' call
            tmp$ret$0 = toString($this.n2l(item, item_0));
            tmp0_mapTo_0.a(tmp$ret$0);
          }
           while (!(item_0 === last_0));
        tmp$ret$1 = tmp0_mapTo_0;
        tmp$ret$2 = tmp$ret$1;
        tmp$ret$3 = tmp$ret$2;
        tmp0_mapTo.a(tmp$ret$3);
      }
       while (!(item === last));
    tmp$ret$4 = tmp0_mapTo;
    tmp$ret$5 = tmp$ret$4;
    var valueList = tmp$ret$5;
    return StringTable_init_$Create$(valueList, null, 2, null);
  }
  function SparseMatrix(numVectorSpace, rowMap, rowCount, colCount) {
    this.c2j_1 = numVectorSpace;
    this.d2j_1 = rowCount;
    this.e2j_1 = colCount;
    var tmp = this;
    var tmp$ret$12;
    // Inline function 'kotlin.collections.filterValues' call
    var tmp$ret$8;
    // Inline function 'kotlin.collections.mapValues' call
    var tmp$ret$7;
    // Inline function 'kotlin.collections.mapValuesTo' call
    var tmp1_mapValuesTo = LinkedHashMap_init_$Create$_0(mapCapacity(rowMap.i()));
    var tmp$ret$6;
    // Inline function 'kotlin.collections.associateByTo' call
    var tmp0_associateByTo = rowMap.d1();
    var tmp0_iterator = tmp0_associateByTo.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
      tmp$ret$0 = element.e1();
      var tmp_0 = tmp$ret$0;
      var tmp$ret$5;
      // Inline function 'com.github.shwaka.kohomology.linalg.SparseMatrix.rowMap.<anonymous>' call
      var tmp$ret$1;
      // Inline function 'kotlin.collections.component2' call
      tmp$ret$1 = element.f1();
      var row = tmp$ret$1;
      var tmp$ret$4;
      // Inline function 'kotlin.collections.filterValues' call
      var result = LinkedHashMap_init_$Create$();
      var tmp$ret$2;
      // Inline function 'kotlin.collections.iterator' call
      tmp$ret$2 = row.d1().f();
      var tmp0_iterator_0 = tmp$ret$2;
      while (tmp0_iterator_0.g()) {
        var entry = tmp0_iterator_0.h();
        var tmp$ret$3;
        // Inline function 'com.github.shwaka.kohomology.linalg.SparseMatrix.rowMap.<anonymous>.<anonymous>' call
        var tmp0__anonymous__q1qw7t = entry.f1();
        tmp$ret$3 = tmp0__anonymous__q1qw7t.y1s();
        if (tmp$ret$3) {
          result.u(entry.e1(), entry.f1());
        }
      }
      tmp$ret$4 = result;
      tmp$ret$5 = tmp$ret$4;
      tmp1_mapValuesTo.u(tmp_0, tmp$ret$5);
    }
    tmp$ret$6 = tmp1_mapValuesTo;
    tmp$ret$7 = tmp$ret$6;
    tmp$ret$8 = tmp$ret$7;
    var tmp0_filterValues = tmp$ret$8;
    var result_0 = LinkedHashMap_init_$Create$();
    var tmp$ret$9;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$9 = tmp0_filterValues.d1().f();
    var tmp0_iterator_1 = tmp$ret$9;
    while (tmp0_iterator_1.g()) {
      var entry_0 = tmp0_iterator_1.h();
      var tmp$ret$11;
      // Inline function 'com.github.shwaka.kohomology.linalg.SparseMatrix.rowMap.<anonymous>' call
      var tmp1__anonymous__uwfjfc = entry_0.f1();
      var tmp$ret$10;
      // Inline function 'kotlin.collections.isNotEmpty' call
      tmp$ret$10 = !tmp1__anonymous__uwfjfc.p();
      tmp$ret$11 = tmp$ret$10;
      if (tmp$ret$11) {
        result_0.u(entry_0.e1(), entry_0.f1());
      }
    }
    tmp$ret$12 = result_0;
    tmp.f2j_1 = tmp$ret$12;
    this.g2j_1 = null;
    var tmp$ret$13;
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator_2 = this.f2j_1;
    tmp$ret$13 = tmp0_iterator_2.d1().f();
    var tmp0_iterator_3 = tmp$ret$13;
    while (tmp0_iterator_3.g()) {
      var tmp1_loop_parameter = tmp0_iterator_3.h();
      var tmp$ret$14;
      // Inline function 'kotlin.collections.component1' call
      tmp$ret$14 = tmp1_loop_parameter.e1();
      var rowInd = tmp$ret$14;
      var tmp$ret$15;
      // Inline function 'kotlin.collections.component2' call
      tmp$ret$15 = tmp1_loop_parameter.f1();
      var row_0 = tmp$ret$15;
      if (rowInd < 0)
        throw IllegalArgumentException_init_$Create$('The row index ' + rowInd + ' cannot be negative');
      if (rowInd >= this.d2j_1)
        throw IllegalArgumentException_init_$Create$('The row index ' + rowInd + ' cannot be larger than the rowCount (= ' + this.d2j_1 + ') for the matrix');
      var tmp$ret$16;
      // Inline function 'kotlin.collections.iterator' call
      tmp$ret$16 = row_0.d1().f();
      var tmp2_iterator = tmp$ret$16;
      while (tmp2_iterator.g()) {
        var tmp3_loop_parameter = tmp2_iterator.h();
        var tmp$ret$17;
        // Inline function 'kotlin.collections.component1' call
        tmp$ret$17 = tmp3_loop_parameter.e1();
        var colInd = tmp$ret$17;
        if (colInd < 0)
          throw IllegalArgumentException_init_$Create$('The col index ' + colInd + ' cannot be negative');
        if (colInd >= this.e2j_1)
          throw IllegalArgumentException_init_$Create$('The col index ' + colInd + ' cannot be larger than the colCount (= ' + this.e2j_1 + ') for the matrix');
      }
    }
  }
  SparseMatrix.prototype.x1j = function () {
    return this.c2j_1;
  };
  SparseMatrix.prototype.c2m = function () {
    return this.d2j_1;
  };
  SparseMatrix.prototype.d2m = function () {
    return this.e2j_1;
  };
  SparseMatrix.prototype.k2p = function () {
    return this.f2j_1;
  };
  SparseMatrix.prototype.t2o = function (value) {
    if (!(this.g2j_1 == null))
      throw IllegalStateException_init_$Create$('Cannot assign rowEchelonForm twice');
    this.g2j_1 = value;
  };
  SparseMatrix.prototype.toString = function () {
    return toStringTable_0(this).toString();
  };
  SparseMatrix.prototype.n2l = function (rowInd, colInd) {
    var tmp0_safe_receiver = this.f2j_1.t(rowInd);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$2;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$1;
      // Inline function 'com.github.shwaka.kohomology.linalg.SparseMatrix.get.<anonymous>' call
      var tmp0_safe_receiver_0 = tmp0_safe_receiver.t(colInd);
      var tmp;
      if (tmp0_safe_receiver_0 == null) {
        tmp = null;
      } else {
        var tmp$ret$0;
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        return tmp0_safe_receiver_0;
        tmp = tmp$ret$0;
      }
      tmp$ret$1 = tmp;
      tmp$ret$2 = tmp$ret$1;
    }
    if (rowInd < 0 ? true : colInd < 0)
      throw IndexOutOfBoundsException_init_$Create$('Index for matrix cannot be negative');
    if (rowInd >= this.d2j_1 ? true : colInd >= this.e2j_1)
      throw IndexOutOfBoundsException_init_$Create$('Given index (' + rowInd + ', ' + colInd + ') is not contained in the size (' + this.d2j_1 + ', ' + this.e2j_1 + ')');
    return this.c2j_1.k2o_1.m1m();
  };
  SparseMatrix.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof SparseMatrix)
      other;
    else
      THROW_CCE();
    if (!equals(this.c2j_1, other.c2j_1))
      return false;
    if (!(this.d2j_1 === other.d2j_1))
      return false;
    if (!(this.e2j_1 === other.e2j_1))
      return false;
    if (!equals(this.f2j_1, other.f2j_1))
      return false;
    return true;
  };
  SparseMatrix.prototype.hashCode = function () {
    var result = hashCode(this.c2j_1);
    result = imul(31, result) + this.d2j_1 | 0;
    result = imul(31, result) + this.e2j_1 | 0;
    result = imul(31, result) + hashCode(this.f2j_1) | 0;
    return result;
  };
  SparseMatrix.$metadata$ = classMeta('SparseMatrix', [Matrix]);
  function field$factory() {
    return getPropertyCallableRef('field', 1, KProperty1, function (receiver) {
      return receiver.e1k();
    }, null);
  }
  function context$factory_1() {
    return getPropertyCallableRef('context', 1, KProperty1, function (receiver) {
      return receiver.c1j();
    }, null);
  }
  function Companion_59() {
    Companion_instance_59 = this;
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp$ret$0 = LinkedHashMap_init_$Create$();
    tmp.l2p_1 = tmp$ret$0;
  }
  Companion_59.prototype.g2m = function (field) {
    if (this.l2p_1.f3(field)) {
      var tmp = this.l2p_1.t(field);
      return tmp instanceof SparseNumVectorSpace ? tmp : THROW_CCE();
    } else {
      var numVectorSpace = new SparseNumVectorSpace(field);
      // Inline function 'kotlin.collections.set' call
      var tmp0_set = this.l2p_1;
      tmp0_set.u(field, numVectorSpace);
      return numVectorSpace;
    }
  };
  Companion_59.$metadata$ = objectMeta('Companion');
  var Companion_instance_59;
  function Companion_getInstance_60() {
    if (Companion_instance_59 == null)
      new Companion_59();
    return Companion_instance_59;
  }
  function SparseNumVectorSpace(field) {
    Companion_getInstance_60();
    this.k2o_1 = field;
    this.l2o_1 = Companion_getInstance_57().a1x(this);
  }
  SparseNumVectorSpace.prototype.e1k = function () {
    return this.k2o_1;
  };
  SparseNumVectorSpace.prototype.c1j = function () {
    return this.l2o_1;
  };
  SparseNumVectorSpace.prototype.f2p = function (numVector) {
    return equals(numVector.h2p_1, this.k2o_1);
  };
  SparseNumVectorSpace.prototype.m2p = function (a, b) {
    if (!this.f2p(a))
      throw new IllegalContextException('The sparseNumVector ' + a + ' does not match the context (' + this + ')');
    if (!this.f2p(b))
      throw new IllegalContextException('The sparseNumVector ' + b + ' does not match the context (' + this + ')');
    if (!(a.i2p_1 === b.i2p_1))
      throw new InvalidSizeException('Cannot add numVectors of different dim');
    var valueMap = toMutableMap(a.g2p_1);
    var tmp$ret$3;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.k2o_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = b.g2p_1;
    tmp$ret$0 = tmp0_iterator.d1().f();
    var tmp0_iterator_0 = tmp$ret$0;
    while (tmp0_iterator_0.g()) {
      var tmp1_loop_parameter = tmp0_iterator_0.h();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.component1' call
      tmp$ret$1 = tmp1_loop_parameter.e1();
      var i = tmp$ret$1;
      var tmp$ret$2;
      // Inline function 'kotlin.collections.component2' call
      tmp$ret$2 = tmp1_loop_parameter.f1();
      var value = tmp$ret$2;
      // Inline function 'kotlin.collections.set' call
      var valueFromA = valueMap.t(i);
      var tmp1_set = valueFromA == null ? value : tmp0_run.t1l(valueFromA, value);
      valueMap.u(i, tmp1_set);
    }
    tmp$ret$3 = Unit_getInstance();
    return Companion_getInstance_61().j2p(valueMap, this.k2o_1, a.i2p_1);
  };
  SparseNumVectorSpace.prototype.i2m = function (a, b) {
    var tmp = a instanceof SparseNumVector ? a : THROW_CCE();
    return this.m2p(tmp, b instanceof SparseNumVector ? b : THROW_CCE());
  };
  SparseNumVectorSpace.prototype.n2p = function (a, b) {
    if (!this.f2p(a))
      throw new IllegalContextException('The sparseNumVector ' + a + ' does not match the context (' + this + ')');
    if (!this.f2p(b))
      throw new IllegalContextException('The sparseNumVector ' + b + ' does not match the context (' + this + ')');
    if (!(a.i2p_1 === b.i2p_1))
      throw new InvalidSizeException('Cannot add numVectors of different dim');
    var valueMap = toMutableMap(a.g2p_1);
    var tmp$ret$3;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.k2o_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = b.g2p_1;
    tmp$ret$0 = tmp0_iterator.d1().f();
    var tmp0_iterator_0 = tmp$ret$0;
    while (tmp0_iterator_0.g()) {
      var tmp1_loop_parameter = tmp0_iterator_0.h();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.component1' call
      tmp$ret$1 = tmp1_loop_parameter.e1();
      var i = tmp$ret$1;
      var tmp$ret$2;
      // Inline function 'kotlin.collections.component2' call
      tmp$ret$2 = tmp1_loop_parameter.f1();
      var value = tmp$ret$2;
      // Inline function 'kotlin.collections.set' call
      var valueFromA = valueMap.t(i);
      var tmp1_set = valueFromA == null ? tmp0_run.b1m(value) : tmp0_run.x1l(valueFromA, value);
      valueMap.u(i, tmp1_set);
    }
    tmp$ret$3 = Unit_getInstance();
    return Companion_getInstance_61().j2p(valueMap, this.k2o_1, a.i2p_1);
  };
  SparseNumVectorSpace.prototype.k2m = function (a, b) {
    var tmp = a instanceof SparseNumVector ? a : THROW_CCE();
    return this.n2p(tmp, b instanceof SparseNumVector ? b : THROW_CCE());
  };
  SparseNumVectorSpace.prototype.o2p = function (scalar, numVector) {
    if (!this.f2p(numVector))
      throw new IllegalContextException('The sparseNumVector ' + numVector + ' does not match the context (' + this + ')');
    if (!this.k2o_1.m2m(scalar))
      throw new IllegalContextException('The scalar ' + scalar + ' does not match the context (field = ' + this.k2o_1 + ')');
    if (scalar.dj()) {
      var tmp = Companion_getInstance_61();
      var tmp$ret$0;
      // Inline function 'kotlin.collections.mapOf' call
      tmp$ret$0 = emptyMap();
      return tmp.j2p(tmp$ret$0, this.k2o_1, numVector.i2p_1);
    }
    var tmp$ret$8;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.k2o_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$7;
    // Inline function 'com.github.shwaka.kohomology.linalg.SparseNumVectorSpace.multiply.<anonymous>' call
    var tmp$ret$6;
    // Inline function 'kotlin.collections.mapValues' call
    var tmp0_mapValues = numVector.g2p_1;
    var tmp$ret$5;
    // Inline function 'kotlin.collections.mapValuesTo' call
    var tmp1_mapValuesTo = LinkedHashMap_init_$Create$_0(mapCapacity(tmp0_mapValues.i()));
    var tmp$ret$4;
    // Inline function 'kotlin.collections.associateByTo' call
    var tmp0_associateByTo = tmp0_mapValues.d1();
    var tmp0_iterator = tmp0_associateByTo.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
      tmp$ret$1 = element.e1();
      var tmp_0 = tmp$ret$1;
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.linalg.SparseNumVectorSpace.multiply.<anonymous>.<anonymous>' call
      var tmp$ret$2;
      // Inline function 'kotlin.collections.component2' call
      tmp$ret$2 = element.f1();
      var value = tmp$ret$2;
      tmp$ret$3 = tmp0_run.l1l(scalar, value);
      tmp1_mapValuesTo.u(tmp_0, tmp$ret$3);
    }
    tmp$ret$4 = tmp1_mapValuesTo;
    tmp$ret$5 = tmp$ret$4;
    tmp$ret$6 = tmp$ret$5;
    tmp$ret$7 = tmp$ret$6;
    tmp$ret$8 = tmp$ret$7;
    var valueMap = tmp$ret$8;
    return Companion_getInstance_61().p2p(valueMap, this.k2o_1, numVector.i2p_1);
  };
  SparseNumVectorSpace.prototype.n2m = function (scalar, numVector) {
    var tmp = isInterface(scalar, Scalar) ? scalar : THROW_CCE();
    return this.o2p(tmp, numVector instanceof SparseNumVector ? numVector : THROW_CCE());
  };
  SparseNumVectorSpace.prototype.q2p = function (a, b) {
    if (!this.f2p(a))
      throw new IllegalContextException('The sparseNumVector ' + a + ' does not match the context (' + this + ')');
    if (!this.f2p(b))
      throw new IllegalContextException('The sparseNumVector ' + b + ' does not match the context (' + this + ')');
    if (!(a.i2p_1 === b.i2p_1))
      throw new InvalidSizeException('Cannot divide numVectors of different dim');
    if (b.dj())
      throw ArithmeticException_init_$Create$('Division by zero numVector');
    var index = first(b.g2p_1.l3());
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.k2o_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.linalg.SparseNumVectorSpace.divideByNumVector.<anonymous>' call
    tmp$ret$0 = tmp0_run.f1m(this.r2p(a, index), this.r2p(b, index));
    tmp$ret$1 = tmp$ret$0;
    var scalar = tmp$ret$1;
    var tmp;
    var tmp$ret$3;
    // Inline function 'kotlin.run' call
    var tmp1_run = this.l2o_1;
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$2;
    // Inline function 'com.github.shwaka.kohomology.linalg.SparseNumVectorSpace.divideByNumVector.<anonymous>' call
    tmp$ret$2 = a.equals(tmp1_run.k1l(scalar, b));
    tmp$ret$3 = tmp$ret$2;
    if (tmp$ret$3) {
      tmp = scalar;
    } else {
      tmp = null;
    }
    return tmp;
  };
  SparseNumVectorSpace.prototype.p2m = function (a, b) {
    var tmp = a instanceof SparseNumVector ? a : THROW_CCE();
    return this.q2p(tmp, b instanceof SparseNumVector ? b : THROW_CCE());
  };
  SparseNumVectorSpace.prototype.s2p = function (numVector) {
    if (!this.f2p(numVector))
      throw new IllegalContextException('The sparseNumVector ' + numVector + ' does not match the context (' + this + ')');
    var tmp$ret$7;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.k2o_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$6;
    // Inline function 'com.github.shwaka.kohomology.linalg.SparseNumVectorSpace.unaryMinusOf.<anonymous>' call
    var tmp$ret$5;
    // Inline function 'kotlin.collections.mapValues' call
    var tmp0_mapValues = numVector.g2p_1;
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapValuesTo' call
    var tmp1_mapValuesTo = LinkedHashMap_init_$Create$_0(mapCapacity(tmp0_mapValues.i()));
    var tmp$ret$3;
    // Inline function 'kotlin.collections.associateByTo' call
    var tmp0_associateByTo = tmp0_mapValues.d1();
    var tmp0_iterator = tmp0_associateByTo.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
      tmp$ret$0 = element.e1();
      var tmp = tmp$ret$0;
      var tmp$ret$2;
      // Inline function 'com.github.shwaka.kohomology.linalg.SparseNumVectorSpace.unaryMinusOf.<anonymous>.<anonymous>' call
      var tmp$ret$1;
      // Inline function 'kotlin.collections.component2' call
      tmp$ret$1 = element.f1();
      var value = tmp$ret$1;
      tmp$ret$2 = tmp0_run.b1m(value);
      tmp1_mapValuesTo.u(tmp, tmp$ret$2);
    }
    tmp$ret$3 = tmp1_mapValuesTo;
    tmp$ret$4 = tmp$ret$3;
    tmp$ret$5 = tmp$ret$4;
    tmp$ret$6 = tmp$ret$5;
    tmp$ret$7 = tmp$ret$6;
    var valueMap = tmp$ret$7;
    return Companion_getInstance_61().p2p(valueMap, this.k2o_1, numVector.i2p_1);
  };
  SparseNumVectorSpace.prototype.r2m = function (numVector) {
    return this.s2p(numVector instanceof SparseNumVector ? numVector : THROW_CCE());
  };
  SparseNumVectorSpace.prototype.r2p = function (numVector, ind) {
    var tmp0_safe_receiver = numVector.g2p_1.t(ind);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return tmp0_safe_receiver;
    }
    return this.k2o_1.m1m();
  };
  SparseNumVectorSpace.prototype.t2m = function (numVector, ind) {
    return this.r2p(numVector instanceof SparseNumVector ? numVector : THROW_CCE(), ind);
  };
  SparseNumVectorSpace.prototype.h2l = function (valueList) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp$ret$0 = LinkedHashMap_init_$Create$();
    var valueMap = tmp$ret$0;
    var iterator = valueList.f();
    var index = 0;
    while (iterator.g()) {
      var i = index;
      index = index + 1 | 0;
      var value = iterator.h();
      if (value.y1s()) {
        // Inline function 'kotlin.collections.set' call
        valueMap.u(i, value);
      }
    }
    return Companion_getInstance_61().j2p(valueMap, this.k2o_1, valueList.i());
  };
  SparseNumVectorSpace.prototype.u2m = function (valueMap, dim) {
    return Companion_getInstance_61().j2p(valueMap, this.k2o_1, dim);
  };
  SparseNumVectorSpace.prototype.w2m = function (valueMap, dim) {
    // Inline function 'com.github.shwaka.kococo.debugOnly' call
    return Companion_getInstance_61().p2p(valueMap, this.k2o_1, dim);
  };
  SparseNumVectorSpace.prototype.k1k = function (dim) {
    var tmp = Companion_getInstance_61();
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mapOf' call
    tmp$ret$0 = emptyMap();
    return tmp.j2p(tmp$ret$0, this.k2o_1, dim);
  };
  SparseNumVectorSpace.prototype.toString = function () {
    return 'SparseNumVectorSpace(' + this.k2o_1 + ')';
  };
  SparseNumVectorSpace.$metadata$ = classMeta('SparseNumVectorSpace', [NumVectorSpace]);
  function Companion_60() {
    Companion_instance_60 = this;
  }
  Companion_60.prototype.j2p = function (valueMap, field, dim) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.filterValues' call
    var result = LinkedHashMap_init_$Create$();
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$0 = valueMap.d1().f();
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.g()) {
      var entry = tmp0_iterator.h();
      var tmp$ret$1;
      // Inline function 'com.github.shwaka.kohomology.linalg.Companion.invoke.<anonymous>' call
      var tmp0__anonymous__q1qw7t = entry.f1();
      tmp$ret$1 = tmp0__anonymous__q1qw7t.y1s();
      if (tmp$ret$1) {
        result.u(entry.e1(), entry.f1());
      }
    }
    tmp$ret$2 = result;
    var filteredValueMap = tmp$ret$2;
    return new SparseNumVector(filteredValueMap, field, dim);
  };
  Companion_60.prototype.p2p = function (valueMap, field, dim) {
    return new SparseNumVector(valueMap, field, dim);
  };
  Companion_60.$metadata$ = objectMeta('Companion');
  var Companion_instance_60;
  function Companion_getInstance_61() {
    if (Companion_instance_60 == null)
      new Companion_60();
    return Companion_instance_60;
  }
  function SparseNumVector(valueMap, field, dim) {
    Companion_getInstance_61();
    this.g2p_1 = valueMap;
    this.h2p_1 = field;
    this.i2p_1 = dim;
  }
  SparseNumVector.prototype.t2p = function () {
    return this.g2p_1;
  };
  SparseNumVector.prototype.e1k = function () {
    return this.h2p_1;
  };
  SparseNumVector.prototype.q25 = function () {
    return this.i2p_1;
  };
  SparseNumVector.prototype.dj = function () {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp0_all = this.g2p_1;
      if (tmp0_all.p()) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp$ret$1;
      // Inline function 'kotlin.collections.iterator' call
      tmp$ret$1 = tmp0_all.d1().f();
      var tmp0_iterator = tmp$ret$1;
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        var tmp$ret$3;
        // Inline function 'com.github.shwaka.kohomology.linalg.SparseNumVector.isZero.<anonymous>' call
        var tmp$ret$2;
        // Inline function 'kotlin.collections.component2' call
        tmp$ret$2 = element.f1();
        var value = tmp$ret$2;
        tmp$ret$3 = value.dj();
        if (!tmp$ret$3) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  SparseNumVector.prototype.toString = function () {
    return 'SparseNumVector(valueMap=' + this.g2p_1 + ', field=' + this.h2p_1 + ', dim=' + this.i2p_1 + ')';
  };
  SparseNumVector.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof SparseNumVector)
      other;
    else
      THROW_CCE();
    if (!equals(this.g2p_1, other.g2p_1))
      return false;
    if (!equals(this.h2p_1, other.h2p_1))
      return false;
    if (!(this.i2p_1 === other.i2p_1))
      return false;
    return true;
  };
  SparseNumVector.prototype.hashCode = function () {
    var result = hashCode(this.g2p_1);
    result = imul(31, result) + hashCode(this.h2p_1) | 0;
    result = imul(31, result) + this.i2p_1 | 0;
    return result;
  };
  SparseNumVector.prototype.d2h = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = until(0, this.i2p_1);
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var inductionVariable = tmp0_map.m1_1;
    var last = tmp0_map.n1_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.linalg.SparseNumVector.toList.<anonymous>' call
        var tmp0_elvis_lhs = this.g2p_1.t(item);
        tmp$ret$0 = tmp0_elvis_lhs == null ? this.h2p_1.m1m() : tmp0_elvis_lhs;
        tmp0_mapTo.a(tmp$ret$0);
      }
       while (!(item === last));
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  SparseNumVector.prototype.y2m = function () {
    return this.g2p_1;
  };
  SparseNumVector.$metadata$ = classMeta('SparseNumVector', [NumVector]);
  function _get_data__d5abxd_1($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = data$factory_1();
    tmp$ret$0 = $this.h2q_1.f1();
    return tmp$ret$0;
  }
  function SparseRowEchelonForm$data$delegate$lambda(this$0) {
    return function () {
      return this$0.g2q_1.a2k(this$0.i2j_1.f2j_1, this$0.f2q_1);
    };
  }
  function SparseRowEchelonForm(matrixSpace, originalMatrix) {
    RowEchelonForm.call(this, matrixSpace, originalMatrix);
    this.e2q_1 = originalMatrix.d2j_1;
    this.f2q_1 = originalMatrix.e2j_1;
    this.g2q_1 = matrixSpace.e2k();
    var tmp = this;
    tmp.h2q_1 = lazy(SparseRowEchelonForm$data$delegate$lambda(this));
  }
  SparseRowEchelonForm.prototype.f2k = function () {
    return this.u1j().g2k(_get_data__d5abxd_1(this).v2j_1, this.e2q_1, this.f2q_1);
  };
  SparseRowEchelonForm.prototype.h2k = function () {
    return _get_data__d5abxd_1(this).w2j_1;
  };
  SparseRowEchelonForm.prototype.i2k = function () {
    return Companion_getInstance_69().o2n(_get_data__d5abxd_1(this).x2j_1);
  };
  SparseRowEchelonForm.prototype.j2k = function () {
    var reducedRowMap = this.g2q_1.y2j(_get_data__d5abxd_1(this).v2j_1, _get_data__d5abxd_1(this).w2j_1);
    return this.u1j().g2k(reducedRowMap, this.e2q_1, this.f2q_1);
  };
  SparseRowEchelonForm.$metadata$ = classMeta('SparseRowEchelonForm', undefined, undefined, undefined, undefined, RowEchelonForm.prototype);
  function data$factory_1() {
    return getPropertyCallableRef('data', 1, KProperty1, function (receiver) {
      return _get_data__d5abxd_1(receiver);
    }, null);
  }
  function SparseRowEchelonFormCalculator() {
  }
  SparseRowEchelonFormCalculator.$metadata$ = interfaceMeta('SparseRowEchelonFormCalculator');
  function toMutableMapDeeply(_this__u8e3s4, $this) {
    var tmp$ret$5;
    // Inline function 'kotlin.collections.mapValues' call
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapValuesTo' call
    var tmp1_mapValuesTo = LinkedHashMap_init_$Create$_0(mapCapacity(_this__u8e3s4.i()));
    var tmp$ret$3;
    // Inline function 'kotlin.collections.associateByTo' call
    var tmp0_associateByTo = _this__u8e3s4.d1();
    var tmp0_iterator = tmp0_associateByTo.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
      tmp$ret$0 = element.e1();
      var tmp = tmp$ret$0;
      var tmp$ret$2;
      // Inline function 'com.github.shwaka.kohomology.linalg.InPlaceSparseRowEchelonFormCalculator.toMutableMapDeeply.<anonymous>' call
      var tmp$ret$1;
      // Inline function 'kotlin.collections.component2' call
      tmp$ret$1 = element.f1();
      var row = tmp$ret$1;
      tmp$ret$2 = toMutableMap(row);
      tmp1_mapValuesTo.u(tmp, tmp$ret$2);
    }
    tmp$ret$3 = tmp1_mapValuesTo;
    tmp$ret$4 = tmp$ret$3;
    tmp$ret$5 = tmp$ret$4;
    return toMutableMap(tmp$ret$5);
  }
  function replace(_this__u8e3s4, $this, getNewValue) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$0 = _this__u8e3s4.d1().f();
    var mapIterator = tmp$ret$0;
    while (mapIterator.g()) {
      var mapEntry = mapIterator.h();
      var newValue = getNewValue(mapEntry.e1(), mapEntry.f1());
      mapEntry.pa(newValue);
    }
  }
  function subtract_1(_this__u8e3s4, $this, other, scalar) {
    var tmp$ret$3;
    // Inline function 'kotlin.run' call
    var tmp0_run = $this.i2q_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$0 = other.d1().f();
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.g()) {
      var tmp1_loop_parameter = tmp0_iterator.h();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.component1' call
      tmp$ret$1 = tmp1_loop_parameter.e1();
      var i = tmp$ret$1;
      var tmp$ret$2;
      // Inline function 'kotlin.collections.component2' call
      tmp$ret$2 = tmp1_loop_parameter.f1();
      var value = tmp$ret$2;
      var valueFromThis = _this__u8e3s4.t(i);
      if (valueFromThis == null) {
        // Inline function 'kotlin.collections.set' call
        var tmp0_set = tmp0_run.l1l(tmp0_run.b1m(value), scalar);
        _this__u8e3s4.u(i, tmp0_set);
      } else {
        var newValue = tmp0_run.x1l(valueFromThis, tmp0_run.l1l(value, scalar));
        if (newValue.dj()) {
          _this__u8e3s4.va(i);
        } else {
          // Inline function 'kotlin.collections.set' call
          _this__u8e3s4.u(i, newValue);
        }
      }
    }
    tmp$ret$3 = Unit_getInstance();
  }
  function multiply_3(_this__u8e3s4, $this, scalar) {
    if (scalar.dj()) {
      _this__u8e3s4.w9();
    } else {
      var tmp$ret$0;
      // Inline function 'kotlin.run' call
      var tmp0_run = $this.i2q_1.c1j();
      // Inline function 'kotlin.contracts.contract' call
      replace(_this__u8e3s4, $this, InPlaceSparseRowEchelonFormCalculator$multiply$lambda(tmp0_run, scalar));
      tmp$ret$0 = Unit_getInstance();
    }
  }
  function eliminateOtherRows_0(_this__u8e3s4, $this, rowInd, colInd) {
    var tmp0_elvis_lhs = _this__u8e3s4.t(rowInd);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalArgumentException_init_$Create$('Cannot eliminate since the row ' + rowInd + ' is zero');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var mainRow = tmp;
    var elm = mainRow.t(colInd);
    if (elm == null ? true : elm.dj())
      throw IllegalArgumentException_init_$Create$('Cannot eliminate since the element at (' + rowInd + ', ' + colInd + ') is zero');
    var tmp$ret$3;
    // Inline function 'kotlin.run' call
    var tmp0_run = $this.i2q_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$0 = _this__u8e3s4.d1().f();
    var mapIterator = tmp$ret$0;
    while (mapIterator.g()) {
      var mapEntry = mapIterator.h();
      var tmp0_container = mapEntry;
      var tmp$ret$1;
      // Inline function 'kotlin.collections.component1' call
      tmp$ret$1 = tmp0_container.e1();
      var i = tmp$ret$1;
      var tmp$ret$2;
      // Inline function 'kotlin.collections.component2' call
      tmp$ret$2 = tmp0_container.f1();
      var row = tmp$ret$2;
      if (!(i === rowInd)) {
        var coeff = row.t(colInd);
        if (!(coeff == null)) {
          subtract_1(row, $this, mainRow, tmp0_run.f1m(coeff, elm));
          if (row.p()) {
            mapIterator.y8();
          }
        }
      }
    }
    tmp$ret$3 = Unit_getInstance();
  }
  function findNonZero_0(_this__u8e3s4, $this, colInd, rowIndFrom) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.filter' call
    var tmp0_filter = _this__u8e3s4.l3();
    var tmp$ret$1;
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo = ArrayList_init_$Create$_0();
    var tmp0_iterator = tmp0_filter.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.linalg.InPlaceSparseRowEchelonFormCalculator.findNonZero.<anonymous>' call
      tmp$ret$0 = element >= rowIndFrom;
      if (tmp$ret$0) {
        tmp0_filterTo.a(element);
      }
    }
    tmp$ret$1 = tmp0_filterTo;
    tmp$ret$2 = tmp$ret$1;
    var tmp0_iterator_0 = tmp$ret$2.f();
    while (tmp0_iterator_0.g()) {
      var i = tmp0_iterator_0.h();
      var tmp1_safe_receiver = _this__u8e3s4.t(i);
      if (tmp1_safe_receiver == null)
        null;
      else {
        var tmp$ret$5;
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        var tmp$ret$4;
        // Inline function 'com.github.shwaka.kohomology.linalg.InPlaceSparseRowEchelonFormCalculator.findNonZero.<anonymous>' call
        var tmp0_safe_receiver = tmp1_safe_receiver.t(colInd);
        var tmp;
        if (tmp0_safe_receiver == null) {
          tmp = null;
        } else {
          var tmp$ret$3;
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          var tmp_0;
          if (tmp0_safe_receiver.y1s()) {
            return i;
          }
          tmp$ret$3 = tmp_0;
          tmp = Unit_getInstance();
        }
        tmp$ret$4 = tmp;
        tmp$ret$5 = tmp$ret$4;
      }
    }
    return null;
  }
  function InPlaceSparseRowEchelonFormCalculator$multiply$lambda($tmp0_run, $scalar) {
    return function (_anonymous_parameter_0__qggqh8, value) {
      return $tmp0_run.l1l(value, $scalar);
    };
  }
  function InPlaceSparseRowEchelonFormCalculator(field) {
    this.i2q_1 = field;
  }
  InPlaceSparseRowEchelonFormCalculator.prototype.a2k = function (matrix, colCount) {
    var currentColInd = 0;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp$ret$0 = ArrayList_init_$Create$_0();
    var pivots = tmp$ret$0;
    var exchangeCount = 0;
    var currentMatrix = toMutableMapDeeply(matrix, this);
    $l$loop: while (currentColInd < colCount) {
      var rowInd = findNonZero_0(currentMatrix, this, currentColInd, pivots.i());
      if (rowInd == null) {
        var tmp0 = currentColInd;
        currentColInd = tmp0 + 1 | 0;
        continue $l$loop;
      } else {
        eliminateOtherRows_0(currentMatrix, this, rowInd, currentColInd);
        if (!(rowInd === pivots.i())) {
          exchange(currentMatrix, rowInd, pivots.i());
          var tmp1 = exchangeCount;
          exchangeCount = tmp1 + 1 | 0;
        }
        pivots.a(currentColInd);
        var tmp2 = currentColInd;
        currentColInd = tmp2 + 1 | 0;
      }
    }
    return new SparseRowEchelonFormData(currentMatrix, pivots, exchangeCount);
  };
  InPlaceSparseRowEchelonFormCalculator.prototype.y2j = function (rowEchelonRowMap, pivots) {
    var rank = pivots.i();
    var reducedRowMap = toMutableMapDeeply(rowEchelonRowMap, this);
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$0 = reducedRowMap.d1().f();
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.g()) {
      var tmp1_loop_parameter = tmp0_iterator.h();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.component1' call
      tmp$ret$1 = tmp1_loop_parameter.e1();
      var i = tmp$ret$1;
      var tmp$ret$2;
      // Inline function 'kotlin.collections.component2' call
      tmp$ret$2 = tmp1_loop_parameter.f1();
      var row = tmp$ret$2;
      var tmp2_elvis_lhs = row.t(pivots.l(i));
      var tmp;
      if (tmp2_elvis_lhs == null) {
        throw Exception_init_$Create$("This can't happen!");
      } else {
        tmp = tmp2_elvis_lhs;
      }
      var elm = tmp;
      var tmp$ret$4;
      // Inline function 'kotlin.run' call
      var tmp0_run = this.i2q_1.c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.linalg.InPlaceSparseRowEchelonFormCalculator.reduce.<anonymous>' call
      tmp$ret$3 = tmp0_run.h1m(elm);
      tmp$ret$4 = tmp$ret$3;
      var elmInv = tmp$ret$4;
      multiply_3(row, this, elmInv);
    }
    var inductionVariable = 0;
    if (inductionVariable < rank)
      do {
        var i_0 = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        eliminateOtherRows_0(reducedRowMap, this, i_0, pivots.l(i_0));
      }
       while (inductionVariable < rank);
    return reducedRowMap;
  };
  InPlaceSparseRowEchelonFormCalculator.$metadata$ = classMeta('InPlaceSparseRowEchelonFormCalculator', [SparseRowEchelonFormCalculator]);
  function SparseRowEchelonFormData(rowMap, pivots, exchangeCount) {
    this.v2j_1 = rowMap;
    this.w2j_1 = pivots;
    this.x2j_1 = exchangeCount;
  }
  SparseRowEchelonFormData.prototype.n2k = function () {
    return this.w2j_1;
  };
  SparseRowEchelonFormData.prototype.toString = function () {
    return 'SparseRowEchelonFormData(rowMap=' + this.v2j_1 + ', pivots=' + this.w2j_1 + ', exchangeCount=' + this.x2j_1 + ')';
  };
  SparseRowEchelonFormData.prototype.hashCode = function () {
    var result = hashCode(this.v2j_1);
    result = imul(result, 31) + hashCode(this.w2j_1) | 0;
    result = imul(result, 31) + this.x2j_1 | 0;
    return result;
  };
  SparseRowEchelonFormData.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SparseRowEchelonFormData))
      return false;
    var tmp0_other_with_cast = other instanceof SparseRowEchelonFormData ? other : THROW_CCE();
    if (!equals(this.v2j_1, tmp0_other_with_cast.v2j_1))
      return false;
    if (!equals(this.w2j_1, tmp0_other_with_cast.w2j_1))
      return false;
    if (!(this.x2j_1 === tmp0_other_with_cast.x2j_1))
      return false;
    return true;
  };
  SparseRowEchelonFormData.$metadata$ = classMeta('SparseRowEchelonFormData');
  function getShiftString($this, shift, showShiftExponent) {
    if (shift.dj()) {
      return '';
    } else if (!showShiftExponent) {
      return 's';
    }
    var shiftIdentifierName = shift.c22().j2q_1;
    return shiftIdentifierName === '1' ? 's' : 's_' + shiftIdentifierName;
  }
  function getIdentifier($this, original, shift, index, showShiftExponent) {
    var tmp0_safe_receiver = index;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.toString();
    var indexString = tmp1_elvis_lhs == null ? '' : tmp1_elvis_lhs;
    var shiftString = getShiftString($this, shift, showShiftExponent);
    var originalName = original.c22().q2a_1;
    return new Identifier_0(shiftString + originalName + indexString);
  }
  function CopiedName$Companion$getInternalPrintConfig$lambda($printConfig) {
    return function (coeff, withSign) {
      return coeff.w2n($printConfig.b1x_1, withSign);
    };
  }
  function CopiedName$Companion$getInternalPrintConfig$lambda_0($printConfig) {
    return function (monomial) {
      return monomial.c1n($printConfig);
    };
  }
  function toPlain($this, showShift) {
    var tmp0_safe_receiver = $this.m2q_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.toString();
    var indexString = tmp1_elvis_lhs == null ? '' : tmp1_elvis_lhs;
    var tmp2_subject = showShift;
    var tmp0 = tmp2_subject.d2_1;
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = $this.l2q_1.dj() ? '' : '_';
        break;
      case 1:
        tmp = $this.l2q_1.dj() ? '' : 's';
        break;
      case 2:
        var tmp_0;
        if ($this.l2q_1.dj()) {
          tmp_0 = '';
        } else if ($this.l2q_1.d22()) {
          tmp_0 = 's';
        } else {
          var shiftStr = toString($this.l2q_1);
          var tmp_1;
          if (shiftStr.length === 1) {
            tmp_1 = 's^' + shiftStr;
          } else {
            tmp_1 = 's^{' + shiftStr + '}';
          }
          tmp_0 = tmp_1;
        }

        tmp = tmp_0;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    var shiftString = tmp;
    var tmp_2 = PrintType_PLAIN_getInstance();
    return shiftString + $this.k2q_1.c1n(PrintConfig_init_$Create$(tmp_2, null, null, null, null, 30, null)) + indexString;
  }
  function toTex($this, showShift) {
    var tmp0_safe_receiver = $this.m2q_1;
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.toString();
    var tmp;
    if (tmp1_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.model.CopiedName.toTex.<anonymous>' call
      tmp$ret$0 = '_{(' + tmp1_safe_receiver + ')}';
      tmp$ret$1 = tmp$ret$0;
      tmp = tmp$ret$1;
    }
    var tmp2_elvis_lhs = tmp;
    var indexString = tmp2_elvis_lhs == null ? '' : tmp2_elvis_lhs;
    var tmp3_subject = showShift;
    var tmp0 = tmp3_subject.d2_1;
    var tmp_0;
    switch (tmp0) {
      case 0:
        tmp_0 = $this.l2q_1.dj() ? '' : '\\bar';
        break;
      case 1:
        tmp_0 = $this.l2q_1.dj() ? '' : 's';
        break;
      case 2:
        tmp_0 = $this.l2q_1.dj() ? '' : $this.l2q_1.d22() ? 's' : 's^{' + $this.l2q_1 + '}';
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    var shiftString = tmp_0;
    var tmp_1 = PrintType_TEX_getInstance();
    return shiftString + '{' + $this.k2q_1.c1n(PrintConfig_init_$Create$(tmp_1, null, null, null, null, 30, null)) + '}' + indexString;
  }
  function Companion_61() {
    Companion_instance_61 = this;
  }
  Companion_61.prototype.o2q = function (printConfig) {
    var tmp = CopiedName$Companion$getInternalPrintConfig$lambda(printConfig);
    var tmp_0 = CopiedName$Companion$getInternalPrintConfig$lambda_0(printConfig);
    return InternalPrintConfig_init_$Create$(tmp, tmp_0, null, 4, null);
  };
  Companion_61.$metadata$ = objectMeta('Companion');
  var Companion_instance_61;
  function Companion_getInstance_62() {
    if (Companion_instance_61 == null)
      new Companion_61();
    return Companion_instance_61;
  }
  function CopiedName(original, shift, index, showShiftExponentInIdentifier) {
    Companion_getInstance_62();
    this.k2q_1 = original;
    this.l2q_1 = shift;
    this.m2q_1 = index;
    this.n2q_1 = getIdentifier(Companion_getInstance_62(), this.k2q_1, this.l2q_1, this.m2q_1, showShiftExponentInIdentifier);
  }
  CopiedName.prototype.c22 = function () {
    return this.n2q_1;
  };
  CopiedName.prototype.toString = function () {
    return toPlain(this, ShowShift_S_WITH_DEGREE_getInstance());
  };
  CopiedName.prototype.c1n = function (printConfig) {
    var tmp0_subject = printConfig.b1x_1;
    var tmp0 = tmp0_subject.d2_1;
    var tmp;
    switch (tmp0) {
      case 0:
      case 2:
        tmp = toPlain(this, printConfig.f1x_1);
        break;
      case 1:
        tmp = toTex(this, printConfig.f1x_1);
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  CopiedName.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof CopiedName)
      other;
    else
      THROW_CCE();
    if (!equals(this.k2q_1, other.k2q_1))
      return false;
    if (!equals(this.l2q_1, other.l2q_1))
      return false;
    if (!(this.m2q_1 == other.m2q_1))
      return false;
    return true;
  };
  CopiedName.prototype.hashCode = function () {
    var result = hashCode(this.k2q_1);
    result = imul(31, result) + hashCode(this.l2q_1) | 0;
    var tmp = imul(31, result);
    var tmp0_elvis_lhs = this.m2q_1;
    result = tmp + (tmp0_elvis_lhs == null ? 0 : tmp0_elvis_lhs) | 0;
    return result;
  };
  CopiedName.$metadata$ = classMeta('CopiedName', [IndeterminateName]);
  function copy(_this__u8e3s4, degreeGroup, shift, index, showShiftExponentInIdentifier) {
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = degreeGroup.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.model.copy.<anonymous>' call
    tmp$ret$0 = tmp0_run.f1u(_this__u8e3s4.q29_1, shift);
    tmp$ret$1 = tmp$ret$0;
    var newDegree = tmp$ret$1;
    return new Indeterminate(new CopiedName(_this__u8e3s4.p29_1, shift, index, showShiftExponentInIdentifier), newDegree);
  }
  function copy$default(_this__u8e3s4, degreeGroup, shift, index, showShiftExponentInIdentifier, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      index = null;
    if (!(($mask0 & 8) === 0))
      showShiftExponentInIdentifier = true;
    return copy(_this__u8e3s4, degreeGroup, shift, index, showShiftExponentInIdentifier);
  }
  function Companion_62() {
    Companion_instance_62 = this;
  }
  Companion_62.prototype.p2q = function (freeDGAlgebra) {
    return new CyclicModel(new CyclicModelFactory(freeDGAlgebra, StringIndeterminateName_init_$Create$('u', null, 2, null)));
  };
  Companion_62.$metadata$ = objectMeta('Companion');
  var Companion_instance_62;
  function Companion_getInstance_63() {
    if (Companion_instance_62 == null)
      new Companion_62();
    return Companion_instance_62;
  }
  function CyclicModel$inclusion$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_3().i1n(this$0.x2q_1.q2q_1, this$0, this$0.x2q_1.w2q_1);
    };
  }
  function CyclicModel(factory) {
    Companion_getInstance_63();
    this.x2q_1 = factory;
    this.y2q_1 = Companion_getInstance_1().g1j(factory.t2q_1, factory.u2q_1);
    this.z2q_1 = Companion_getInstance_40().n27(this);
    this.a2r_1 = this.x2q_1.q2q_1.y1j();
    this.b2r_1 = this.x2q_1.t2q_1;
    this.c2r_1 = this.x2q_1.t2q_1.t23();
    this.d2r_1 = this.x2q_1.t2q_1.e2b();
    this.e2r_1 = this.x2q_1.v2q_1;
    var tmp = this;
    tmp.f2r_1 = lazy(CyclicModel$inclusion$delegate$lambda(this));
  }
  CyclicModel.prototype.d1k = function () {
    return this.y2q_1.d1k();
  };
  CyclicModel.prototype.i1j = function () {
    return this.y2q_1.i1j();
  };
  CyclicModel.prototype.k1j = function () {
    return this.y2q_1.k1j();
  };
  CyclicModel.prototype.e1k = function () {
    return this.y2q_1.e1k();
  };
  CyclicModel.prototype.z1j = function () {
    return this.y2q_1.z1j();
  };
  CyclicModel.prototype.w1k = function () {
    return this.y2q_1.w1k();
  };
  CyclicModel.prototype.a1k = function () {
    return this.y2q_1.a1k();
  };
  CyclicModel.prototype.u1j = function () {
    return this.y2q_1.u1j();
  };
  CyclicModel.prototype.j1j = function () {
    return this.y2q_1.j1j();
  };
  CyclicModel.prototype.zc = function () {
    return this.y2q_1.zc();
  };
  CyclicModel.prototype.x1j = function () {
    return this.y2q_1.x1j();
  };
  CyclicModel.prototype.c1k = function () {
    return this.y2q_1.c1k();
  };
  CyclicModel.prototype.v1k = function () {
    return this.y2q_1.v1k();
  };
  CyclicModel.prototype.u1k = function () {
    return this.y2q_1.u1k();
  };
  CyclicModel.prototype.g2r = function (a, b) {
    return this.y2q_1.o1k(a, b);
  };
  CyclicModel.prototype.o1k = function (a, b) {
    return this.g2r(a, b);
  };
  CyclicModel.prototype.g2b = function (a, b) {
    return this.g2r(a, b);
  };
  CyclicModel.prototype.f2b = function (a, b) {
    return this.g2r(a, b);
  };
  CyclicModel.prototype.h2r = function (cohomologyClass) {
    return this.y2q_1.w1j(cohomologyClass);
  };
  CyclicModel.prototype.w1j = function (cohomologyClass) {
    return this.h2r(cohomologyClass);
  };
  CyclicModel.prototype.i2r = function (cohomologyClass) {
    return this.h2r(cohomologyClass);
  };
  CyclicModel.prototype.j2r = function (cocycle) {
    return this.y2q_1.v1j(cocycle);
  };
  CyclicModel.prototype.v1j = function (cocycle) {
    return this.j2r(cocycle);
  };
  CyclicModel.prototype.k2r = function (cocycle) {
    return this.j2r(cocycle);
  };
  CyclicModel.prototype.l2r = function (gVector) {
    return this.y2q_1.m1k(gVector);
  };
  CyclicModel.prototype.m1k = function (gVector) {
    return this.l2r(gVector);
  };
  CyclicModel.prototype.i2b = function (gVector) {
    return this.l2r(gVector);
  };
  CyclicModel.prototype.h2b = function (gVector) {
    return this.l2r(gVector);
  };
  CyclicModel.prototype.m2r = function (gVector) {
    return this.y2q_1.n1k(gVector);
  };
  CyclicModel.prototype.n1k = function (gVector) {
    return this.m2r(gVector);
  };
  CyclicModel.prototype.k2b = function (gVector) {
    return this.m2r(gVector);
  };
  CyclicModel.prototype.j2b = function (gVector) {
    return this.m2r(gVector);
  };
  CyclicModel.prototype.n2r = function (gVectorOrZero, degree) {
    return this.y2q_1.l1k(gVectorOrZero, degree);
  };
  CyclicModel.prototype.l1k = function (gVectorOrZero, degree) {
    return this.n2r(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  CyclicModel.prototype.m2b = function (gVectorOrZero, degree) {
    return this.n2r(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  CyclicModel.prototype.l2b = function (gVectorOrZero, degree) {
    return this.n2r(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  CyclicModel.prototype.o2r = function (gVector) {
    return this.y2q_1.x1k(gVector);
  };
  CyclicModel.prototype.x1k = function (gVector) {
    return this.o2r(gVector);
  };
  CyclicModel.prototype.b2e = function (gVector) {
    return this.o2r(gVector);
  };
  CyclicModel.prototype.a2e = function (gVector) {
    return this.o2r(gVector);
  };
  CyclicModel.prototype.p2r = function (a, b) {
    return this.y2q_1.t1k(a, b);
  };
  CyclicModel.prototype.t1k = function (a, b) {
    return this.p2r(a, b);
  };
  CyclicModel.prototype.o2b = function (a, b) {
    return this.p2r(a, b);
  };
  CyclicModel.prototype.n2b = function (a, b) {
    return this.p2r(a, b);
  };
  CyclicModel.prototype.q2r = function (basisName, degree) {
    return this.y2q_1.h1k(basisName, degree);
  };
  CyclicModel.prototype.h1k = function (basisName, degree) {
    var tmp = basisName instanceof Monomial ? basisName : THROW_CCE();
    return this.q2r(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  CyclicModel.prototype.q2b = function (basisName, degree) {
    var tmp = basisName instanceof Monomial ? basisName : THROW_CCE();
    return this.q2r(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  CyclicModel.prototype.p2b = function (basisName, degree) {
    return this.q2r(basisName, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  CyclicModel.prototype.r2r = function (vector, degree) {
    return this.y2q_1.f1k(vector, degree);
  };
  CyclicModel.prototype.f1k = function (vector, degree) {
    return this.r2r(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  CyclicModel.prototype.s2b = function (vector, degree) {
    return this.r2r(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  CyclicModel.prototype.r2b = function (vector, degree) {
    return this.r2r(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  CyclicModel.prototype.s2r = function (vector, degree) {
    return this.y2q_1.g1k(vector, degree);
  };
  CyclicModel.prototype.g1k = function (vector, degree) {
    return this.s2r(vector, degree);
  };
  CyclicModel.prototype.u2b = function (vector, degree) {
    return this.s2r(vector, degree);
  };
  CyclicModel.prototype.t2b = function (vector, degree) {
    return this.s2r(vector, degree);
  };
  CyclicModel.prototype.b1k = function (degree) {
    return this.y2q_1.b1k(degree);
  };
  CyclicModel.prototype.l = function (degree) {
    return this.y2q_1.l(degree);
  };
  CyclicModel.prototype.i1k = function (degree) {
    return this.y2q_1.i1k(degree);
  };
  CyclicModel.prototype.t2r = function (generatorList) {
    return this.y2q_1.l1j(generatorList);
  };
  CyclicModel.prototype.l1j = function (generatorList) {
    return this.t2r(generatorList);
  };
  CyclicModel.prototype.u2r = function (generatorList) {
    return this.t2r(generatorList);
  };
  CyclicModel.prototype.v2r = function (generatorList) {
    return this.y2q_1.m1j(generatorList);
  };
  CyclicModel.prototype.m1j = function (generatorList) {
    return this.v2r(generatorList);
  };
  CyclicModel.prototype.w2r = function (generatorList) {
    return this.v2r(generatorList);
  };
  CyclicModel.prototype.x2r = function (generatorList) {
    return this.v2r(generatorList);
  };
  CyclicModel.prototype.y2r = function (ideal) {
    return this.y2q_1.s1j(ideal);
  };
  CyclicModel.prototype.s1j = function (ideal) {
    return this.y2r(ideal);
  };
  CyclicModel.prototype.z2r = function (ideal) {
    return this.y2r(ideal);
  };
  CyclicModel.prototype.a2s = function (ideal) {
    return this.y2q_1.z1k(ideal);
  };
  CyclicModel.prototype.z1k = function (ideal) {
    return this.a2s(ideal);
  };
  CyclicModel.prototype.d2e = function (ideal) {
    return this.a2s(ideal);
  };
  CyclicModel.prototype.c2e = function (ideal) {
    return this.a2s(ideal);
  };
  CyclicModel.prototype.j1k = function (degree) {
    return this.y2q_1.j1k(degree);
  };
  CyclicModel.prototype.k1k = function (degree) {
    return this.y2q_1.k1k(degree);
  };
  CyclicModel.prototype.b2s = function (scalar, gVector) {
    return this.y2q_1.q1k(scalar, gVector);
  };
  CyclicModel.prototype.q1k = function (scalar, gVector) {
    return this.b2s(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  CyclicModel.prototype.w2b = function (scalar, gVector) {
    return this.b2s(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  CyclicModel.prototype.v2b = function (scalar, gVector) {
    return this.b2s(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  CyclicModel.prototype.c2s = function (a, b) {
    return this.y2q_1.r1k(a, b);
  };
  CyclicModel.prototype.r1k = function (a, b) {
    return this.c2s(a, b);
  };
  CyclicModel.prototype.f2e = function (a, b) {
    return this.c2s(a, b);
  };
  CyclicModel.prototype.e2e = function (a, b) {
    return this.c2s(a, b);
  };
  CyclicModel.prototype.d2s = function (a, b) {
    return this.y2q_1.s1k(a, b);
  };
  CyclicModel.prototype.s1k = function (a, b) {
    return this.d2s(a, b);
  };
  CyclicModel.prototype.h2e = function (a, b) {
    return this.d2s(a, b);
  };
  CyclicModel.prototype.g2e = function (a, b) {
    return this.d2s(a, b);
  };
  CyclicModel.prototype.e2s = function (generatorList, text) {
    return this.y2q_1.y1k(generatorList, text);
  };
  CyclicModel.prototype.y1k = function (generatorList, text) {
    return this.e2s(generatorList, text);
  };
  CyclicModel.prototype.j2e = function (generatorList, text) {
    return this.e2s(generatorList, text);
  };
  CyclicModel.prototype.i2e = function (generatorList, text) {
    return this.e2s(generatorList, text);
  };
  CyclicModel.prototype.f2s = function (a, b) {
    return this.y2q_1.p1k(a, b);
  };
  CyclicModel.prototype.p1k = function (a, b) {
    return this.f2s(a, b);
  };
  CyclicModel.prototype.y2b = function (a, b) {
    return this.f2s(a, b);
  };
  CyclicModel.prototype.x2b = function (a, b) {
    return this.f2s(a, b);
  };
  CyclicModel.prototype.c1j = function () {
    return this.z2q_1;
  };
  CyclicModel.prototype.y1j = function () {
    return this.a2r_1;
  };
  CyclicModel.prototype.i29 = function () {
    return this.b2r_1;
  };
  CyclicModel.prototype.t23 = function () {
    return this.c2r_1;
  };
  CyclicModel.prototype.e2b = function () {
    return this.d2r_1;
  };
  CyclicModel.prototype.toString = function () {
    var tmp = PrintType_PLAIN_getInstance();
    return this.c1n(PrintConfig_init_$Create$(tmp, null, null, null, null, 30, null));
  };
  CyclicModel.prototype.c1n = function (printConfig) {
    return '(' + this.b2r_1.c1n(printConfig) + ', d)';
  };
  CyclicModel.$metadata$ = classMeta('CyclicModel', [FreeDGAlgebra, DGAlgebra]);
  function CyclicModelFactory(freeDGAlgebra, periodicity) {
    this.q2q_1 = freeDGAlgebra;
    this.r2q_1 = periodicity;
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.any' call
      var tmp0_any = this.q2q_1.t23();
      var tmp;
      if (isInterface(tmp0_any, Collection)) {
        tmp = tmp0_any.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_any.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        var tmp$ret$1;
        // Inline function 'com.github.shwaka.kohomology.model.CyclicModelFactory.<anonymous>' call
        tmp$ret$1 = equals(element.p29_1, this.r2q_1);
        if (tmp$ret$1) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    if (tmp$ret$0) {
      throw IllegalArgumentException_init_$Create$('The free DGA ' + this.q2q_1 + " contains an indeterminate '" + this.r2q_1 + "', " + 'which is given as the generator for periodicity');
    }
    this.s2q_1 = this.q2q_1.u1j();
    var tmp_0 = this;
    var tmp$ret$6;
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$5;
    // Inline function 'com.github.shwaka.kohomology.model.CyclicModelFactory.cyclicGAlgebra.<anonymous>' call
    var degreeGroup = this.q2q_1.y1j();
    var tmp_1 = new Indeterminate(this.r2q_1, degreeGroup.oh(2));
    var tmp_2 = degreeGroup.m1m();
    var tmp_3 = listOf(copy$default(tmp_1, degreeGroup, tmp_2, null, false, 12, null));
    var tmp$ret$4;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = this.q2q_1.t23();
    var tmp$ret$3;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator_0 = tmp0_map.f();
    while (tmp0_iterator_0.g()) {
      var item = tmp0_iterator_0.h();
      var tmp$ret$2;
      // Inline function 'com.github.shwaka.kohomology.model.CyclicModelFactory.cyclicGAlgebra.<anonymous>.<anonymous>' call
      var tmp_4 = degreeGroup.oh(1);
      var tmp_5 = copy$default(item, degreeGroup, tmp_4, null, false, 12, null);
      var tmp_6 = degreeGroup.m1m();
      tmp$ret$2 = listOf_0([tmp_5, copy$default(item, degreeGroup, tmp_6, null, false, 12, null)]);
      tmp0_mapTo.a(tmp$ret$2);
    }
    tmp$ret$3 = tmp0_mapTo;
    tmp$ret$4 = tmp$ret$3;
    var loopSpaceIndeterminateList = plus(tmp_3, flatten(tmp$ret$4));
    var tmp_7 = Companion_getInstance_41();
    tmp$ret$5 = tmp_7.j2d(this.s2q_1, degreeGroup, loopSpaceIndeterminateList, null, 8, null);
    tmp$ret$6 = tmp$ret$5;
    tmp_0.t2q_1 = tmp$ret$6;
    var n = this.q2q_1.t23().i();
    var cyclicGeneratorList = this.t2q_1.i1o();
    var tmp_8 = this;
    var tmp$ret$11;
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$10;
    // Inline function 'com.github.shwaka.kohomology.model.CyclicModelFactory.<anonymous>' call
    var tmp_9 = listOf(this.t2q_1.u1k());
    var tmp$ret$9;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map_0 = until(0, n);
    var tmp$ret$8;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
    var inductionVariable = tmp0_map_0.m1_1;
    var last = tmp0_map_0.n1_1;
    if (inductionVariable <= last)
      do {
        var item_0 = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$7;
        // Inline function 'com.github.shwaka.kohomology.model.CyclicModelFactory.<anonymous>.<anonymous>' call
        tmp$ret$7 = listOf_0([this.t2q_1.u1k(), cyclicGeneratorList.l(imul(2, item_0) + 1 | 0)]);
        tmp0_mapTo_0.a(tmp$ret$7);
      }
       while (!(item_0 === last));
    tmp$ret$8 = tmp0_mapTo_0;
    tmp$ret$9 = tmp$ret$8;
    var suspensionValueList = plus(tmp_9, flatten(tmp$ret$9));
    tmp$ret$10 = this.t2q_1.d2a(suspensionValueList, -1);
    tmp$ret$11 = tmp$ret$10;
    tmp_8.v2q_1 = tmp$ret$11;
    var tmp_10 = this;
    var tmp$ret$14;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map_1 = until(0, n);
    var tmp$ret$13;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_1 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_1, 10));
    var inductionVariable_0 = tmp0_map_1.m1_1;
    var last_0 = tmp0_map_1.n1_1;
    if (inductionVariable_0 <= last_0)
      do {
        var item_1 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var tmp$ret$12;
        // Inline function 'com.github.shwaka.kohomology.model.CyclicModelFactory.<anonymous>' call
        tmp$ret$12 = cyclicGeneratorList.l(imul(2, item_1) + 2 | 0);
        tmp0_mapTo_1.a(tmp$ret$12);
      }
       while (!(item_1 === last_0));
    tmp$ret$13 = tmp0_mapTo_1;
    tmp$ret$14 = tmp$ret$13;
    tmp_10.w2q_1 = this.q2q_1.m2a(this.t2q_1, tmp$ret$14);
    var tmp$ret$23;
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$22;
    // Inline function 'com.github.shwaka.kohomology.model.CyclicModelFactory.<anonymous>' call
    var u = cyclicGeneratorList.l(0);
    var baseSpaceGeneratorList = this.q2q_1.i1o();
    var tmp_11 = listOf(this.t2q_1.u1k());
    var tmp$ret$21;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$20;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_2 = ArrayList_init_$Create$(collectionSizeOrDefault(baseSpaceGeneratorList, 10));
    var tmp0_iterator_1 = baseSpaceGeneratorList.f();
    while (tmp0_iterator_1.g()) {
      var item_2 = tmp0_iterator_1.h();
      var tmp$ret$19;
      // Inline function 'com.github.shwaka.kohomology.model.CyclicModelFactory.<anonymous>.<anonymous>' call
      var tmp$ret$16;
      // Inline function 'kotlin.run' call
      var tmp0_run = this.q2q_1.c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$15;
      // Inline function 'com.github.shwaka.kohomology.model.CyclicModelFactory.<anonymous>.<anonymous>.<anonymous>' call
      tmp$ret$15 = tmp0_run.n1j().o1j(item_2);
      tmp$ret$16 = tmp$ret$15;
      var dv = tmp$ret$16;
      var tmp$ret$18;
      // Inline function 'kotlin.run' call
      var tmp1_run = this.t2q_1.c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$17;
      // Inline function 'com.github.shwaka.kohomology.model.CyclicModelFactory.<anonymous>.<anonymous>.<anonymous>' call
      tmp$ret$17 = listOf_0([tmp1_run.y1l(this.v2q_1.o1j(this.w2q_1.o1j(dv))), tmp1_run.q1l(this.w2q_1.o1j(dv), tmp1_run.c1l(u, this.v2q_1.o1j(this.w2q_1.o1j(item_2))))]);
      tmp$ret$18 = tmp$ret$17;
      tmp$ret$19 = tmp$ret$18;
      tmp0_mapTo_2.a(tmp$ret$19);
    }
    tmp$ret$20 = tmp0_mapTo_2;
    tmp$ret$21 = tmp$ret$20;
    tmp$ret$22 = plus(tmp_11, flatten(tmp$ret$21));
    tmp$ret$23 = tmp$ret$22;
    var differentialValueList = tmp$ret$23;
    this.u2q_1 = this.t2q_1.d2a(differentialValueList, 1);
  }
  CyclicModelFactory.prototype.y25 = function () {
    return this.q2q_1;
  };
  CyclicModelFactory.prototype.g2s = function () {
    return this.r2q_1;
  };
  CyclicModelFactory.prototype.u1j = function () {
    return this.s2q_1;
  };
  CyclicModelFactory.prototype.h2s = function () {
    return this.t2q_1;
  };
  CyclicModelFactory.prototype.i2s = function () {
    return this.v2q_1;
  };
  CyclicModelFactory.prototype.j2s = function () {
    return this.w2q_1;
  };
  CyclicModelFactory.$metadata$ = classMeta('CyclicModelFactory');
  function withShiftDegreeForMultiDegree($this, freeDGAlgebra) {
    var degreeGroup = freeDGAlgebra.y1j();
    if (!(degreeGroup instanceof MultiDegreeGroup))
      throw new NotImplementedError('not supported!');
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.any' call
      var tmp0_any = degreeGroup.e23_1;
      var tmp;
      if (isInterface(tmp0_any, Collection)) {
        tmp = tmp0_any.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_any.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        var tmp$ret$1;
        // Inline function 'com.github.shwaka.kohomology.model.Companion.withShiftDegreeForMultiDegree.<anonymous>' call
        tmp$ret$1 = element.p23_1 === 'S';
        if (tmp$ret$1) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    if (tmp$ret$0)
      throw IllegalArgumentException_init_$Create$('indeterminateList cannot contain an indeterminate of name "S"');
    var newDegreeGroup = new MultiDegreeGroup(plus(degreeGroup.e23_1, listOf(new DegreeIndeterminate('S', 0))));
    var tmp$ret$3;
    // Inline function 'kotlin.run' call
    var tmp1_run = newDegreeGroup.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$2;
    // Inline function 'com.github.shwaka.kohomology.model.Companion.withShiftDegreeForMultiDegree.<anonymous>' call
    var s = last(newDegreeGroup.i1o());
    tmp$ret$2 = tmp1_run.p22(tmp1_run.r22(-2, s), 1);
    tmp$ret$3 = tmp$ret$2;
    var shiftDegree = tmp$ret$3;
    var degreeMorphism = new MultiDegreeMorphism(degreeGroup, newDegreeGroup, dropLast(newDegreeGroup.i1o(), 1));
    var tmp0_container = freeDGAlgebra.n2a(degreeMorphism);
    var newFreeDGAlgebra = tmp0_container.a4();
    return FreeLoopSpace_init_$Create$(newFreeDGAlgebra, shiftDegree);
  }
  function withShiftDegreeForIntDegree($this, freeDGAlgebra) {
    var degreeGroup = freeDGAlgebra.y1j();
    if (!(degreeGroup instanceof IntDegreeGroup))
      throw new NotImplementedError('not supported!');
    var newDegreeGroup = new MultiDegreeGroup(listOf(new DegreeIndeterminate('S', 0)));
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = newDegreeGroup.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.model.Companion.withShiftDegreeForIntDegree.<anonymous>' call
    var s = last(newDegreeGroup.i1o());
    tmp$ret$0 = tmp0_run.p22(tmp0_run.r22(-2, s), 1);
    tmp$ret$1 = tmp$ret$0;
    var shiftDegree = tmp$ret$1;
    var degreeMorphism = new InclusionFromIntDegreeToMultiDegree(newDegreeGroup);
    var tmp0_container = freeDGAlgebra.n2a(degreeMorphism);
    var newFreeDGAlgebra = tmp0_container.a4();
    return FreeLoopSpace_init_$Create$(newFreeDGAlgebra, shiftDegree);
  }
  function FreeLoopSpace_init_$Init$(freeDGAlgebra, shiftDegree, $this) {
    FreeLoopSpace.call($this, new FreeLoopSpaceFactory(freeDGAlgebra, shiftDegree));
    return $this;
  }
  function FreeLoopSpace_init_$Create$(freeDGAlgebra, shiftDegree) {
    return FreeLoopSpace_init_$Init$(freeDGAlgebra, shiftDegree, Object.create(FreeLoopSpace.prototype));
  }
  function Companion_63() {
    Companion_instance_63 = this;
    this.k2s_1 = 'S';
  }
  Companion_63.prototype.l2s = function (freeDGAlgebra) {
    var tmp0_subject = freeDGAlgebra.y1j();
    var tmp;
    if (tmp0_subject instanceof IntDegreeGroup) {
      tmp = withShiftDegreeForIntDegree(this, isInterface(freeDGAlgebra, FreeDGAlgebra) ? freeDGAlgebra : THROW_CCE());
    } else {
      if (tmp0_subject instanceof MultiDegreeGroup) {
        tmp = withShiftDegreeForMultiDegree(this, isInterface(freeDGAlgebra, FreeDGAlgebra) ? freeDGAlgebra : THROW_CCE());
      } else {
        throw UnsupportedOperationException_init_$Create$('withShiftDegree is supported only for IntDegree and MultiDegree');
      }
    }
    return tmp;
  };
  Companion_63.$metadata$ = objectMeta('Companion');
  var Companion_instance_63;
  function Companion_getInstance_64() {
    if (Companion_instance_63 == null)
      new Companion_63();
    return Companion_instance_63;
  }
  function FreeLoopSpace$inclusion$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_3().i1n(this$0.t2s_1.m2s_1, this$0, this$0.t2s_1.s2s_1);
    };
  }
  function FreeLoopSpace(factory) {
    Companion_getInstance_64();
    this.t2s_1 = factory;
    this.u2s_1 = Companion_getInstance_1().g1j(factory.p2s_1, factory.q2s_1);
    this.v2s_1 = Companion_getInstance_40().n27(this);
    this.w2s_1 = this.t2s_1.m2s_1.y1j();
    this.x2s_1 = this.t2s_1.p2s_1;
    this.y2s_1 = this.t2s_1.p2s_1.t23();
    this.z2s_1 = this.t2s_1.p2s_1.e2b();
    this.a2t_1 = Companion_getInstance_4().y1n(this, this.t2s_1.r2s_1);
    var tmp = this;
    tmp.b2t_1 = lazy(FreeLoopSpace$inclusion$delegate$lambda(this));
    this.c2t_1 = this.t2s_1.o2s_1;
    this.d2t_1 = this.t2s_1.m2s_1;
  }
  FreeLoopSpace.prototype.d1k = function () {
    return this.u2s_1.d1k();
  };
  FreeLoopSpace.prototype.i1j = function () {
    return this.u2s_1.i1j();
  };
  FreeLoopSpace.prototype.k1j = function () {
    return this.u2s_1.k1j();
  };
  FreeLoopSpace.prototype.e1k = function () {
    return this.u2s_1.e1k();
  };
  FreeLoopSpace.prototype.z1j = function () {
    return this.u2s_1.z1j();
  };
  FreeLoopSpace.prototype.w1k = function () {
    return this.u2s_1.w1k();
  };
  FreeLoopSpace.prototype.a1k = function () {
    return this.u2s_1.a1k();
  };
  FreeLoopSpace.prototype.u1j = function () {
    return this.u2s_1.u1j();
  };
  FreeLoopSpace.prototype.j1j = function () {
    return this.u2s_1.j1j();
  };
  FreeLoopSpace.prototype.zc = function () {
    return this.u2s_1.zc();
  };
  FreeLoopSpace.prototype.x1j = function () {
    return this.u2s_1.x1j();
  };
  FreeLoopSpace.prototype.c1k = function () {
    return this.u2s_1.c1k();
  };
  FreeLoopSpace.prototype.v1k = function () {
    return this.u2s_1.v1k();
  };
  FreeLoopSpace.prototype.u1k = function () {
    return this.u2s_1.u1k();
  };
  FreeLoopSpace.prototype.g2r = function (a, b) {
    return this.u2s_1.o1k(a, b);
  };
  FreeLoopSpace.prototype.o1k = function (a, b) {
    return this.g2r(a, b);
  };
  FreeLoopSpace.prototype.g2b = function (a, b) {
    return this.g2r(a, b);
  };
  FreeLoopSpace.prototype.f2b = function (a, b) {
    return this.g2r(a, b);
  };
  FreeLoopSpace.prototype.h2r = function (cohomologyClass) {
    return this.u2s_1.w1j(cohomologyClass);
  };
  FreeLoopSpace.prototype.w1j = function (cohomologyClass) {
    return this.h2r(cohomologyClass);
  };
  FreeLoopSpace.prototype.i2r = function (cohomologyClass) {
    return this.h2r(cohomologyClass);
  };
  FreeLoopSpace.prototype.j2r = function (cocycle) {
    return this.u2s_1.v1j(cocycle);
  };
  FreeLoopSpace.prototype.v1j = function (cocycle) {
    return this.j2r(cocycle);
  };
  FreeLoopSpace.prototype.k2r = function (cocycle) {
    return this.j2r(cocycle);
  };
  FreeLoopSpace.prototype.l2r = function (gVector) {
    return this.u2s_1.m1k(gVector);
  };
  FreeLoopSpace.prototype.m1k = function (gVector) {
    return this.l2r(gVector);
  };
  FreeLoopSpace.prototype.i2b = function (gVector) {
    return this.l2r(gVector);
  };
  FreeLoopSpace.prototype.h2b = function (gVector) {
    return this.l2r(gVector);
  };
  FreeLoopSpace.prototype.m2r = function (gVector) {
    return this.u2s_1.n1k(gVector);
  };
  FreeLoopSpace.prototype.n1k = function (gVector) {
    return this.m2r(gVector);
  };
  FreeLoopSpace.prototype.k2b = function (gVector) {
    return this.m2r(gVector);
  };
  FreeLoopSpace.prototype.j2b = function (gVector) {
    return this.m2r(gVector);
  };
  FreeLoopSpace.prototype.n2r = function (gVectorOrZero, degree) {
    return this.u2s_1.l1k(gVectorOrZero, degree);
  };
  FreeLoopSpace.prototype.l1k = function (gVectorOrZero, degree) {
    return this.n2r(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  FreeLoopSpace.prototype.m2b = function (gVectorOrZero, degree) {
    return this.n2r(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  FreeLoopSpace.prototype.l2b = function (gVectorOrZero, degree) {
    return this.n2r(gVectorOrZero, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  FreeLoopSpace.prototype.o2r = function (gVector) {
    return this.u2s_1.x1k(gVector);
  };
  FreeLoopSpace.prototype.x1k = function (gVector) {
    return this.o2r(gVector);
  };
  FreeLoopSpace.prototype.b2e = function (gVector) {
    return this.o2r(gVector);
  };
  FreeLoopSpace.prototype.a2e = function (gVector) {
    return this.o2r(gVector);
  };
  FreeLoopSpace.prototype.p2r = function (a, b) {
    return this.u2s_1.t1k(a, b);
  };
  FreeLoopSpace.prototype.t1k = function (a, b) {
    return this.p2r(a, b);
  };
  FreeLoopSpace.prototype.o2b = function (a, b) {
    return this.p2r(a, b);
  };
  FreeLoopSpace.prototype.n2b = function (a, b) {
    return this.p2r(a, b);
  };
  FreeLoopSpace.prototype.q2r = function (basisName, degree) {
    return this.u2s_1.h1k(basisName, degree);
  };
  FreeLoopSpace.prototype.h1k = function (basisName, degree) {
    var tmp = basisName instanceof Monomial ? basisName : THROW_CCE();
    return this.q2r(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  FreeLoopSpace.prototype.q2b = function (basisName, degree) {
    var tmp = basisName instanceof Monomial ? basisName : THROW_CCE();
    return this.q2r(tmp, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  FreeLoopSpace.prototype.p2b = function (basisName, degree) {
    return this.q2r(basisName, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  FreeLoopSpace.prototype.r2r = function (vector, degree) {
    return this.u2s_1.f1k(vector, degree);
  };
  FreeLoopSpace.prototype.f1k = function (vector, degree) {
    return this.r2r(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  FreeLoopSpace.prototype.s2b = function (vector, degree) {
    return this.r2r(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  FreeLoopSpace.prototype.r2b = function (vector, degree) {
    return this.r2r(vector, isInterface(degree, Degree) ? degree : THROW_CCE());
  };
  FreeLoopSpace.prototype.s2r = function (vector, degree) {
    return this.u2s_1.g1k(vector, degree);
  };
  FreeLoopSpace.prototype.g1k = function (vector, degree) {
    return this.s2r(vector, degree);
  };
  FreeLoopSpace.prototype.u2b = function (vector, degree) {
    return this.s2r(vector, degree);
  };
  FreeLoopSpace.prototype.t2b = function (vector, degree) {
    return this.s2r(vector, degree);
  };
  FreeLoopSpace.prototype.b1k = function (degree) {
    return this.u2s_1.b1k(degree);
  };
  FreeLoopSpace.prototype.l = function (degree) {
    return this.u2s_1.l(degree);
  };
  FreeLoopSpace.prototype.i1k = function (degree) {
    return this.u2s_1.i1k(degree);
  };
  FreeLoopSpace.prototype.t2r = function (generatorList) {
    return this.u2s_1.l1j(generatorList);
  };
  FreeLoopSpace.prototype.l1j = function (generatorList) {
    return this.t2r(generatorList);
  };
  FreeLoopSpace.prototype.u2r = function (generatorList) {
    return this.t2r(generatorList);
  };
  FreeLoopSpace.prototype.v2r = function (generatorList) {
    return this.u2s_1.m1j(generatorList);
  };
  FreeLoopSpace.prototype.m1j = function (generatorList) {
    return this.v2r(generatorList);
  };
  FreeLoopSpace.prototype.w2r = function (generatorList) {
    return this.v2r(generatorList);
  };
  FreeLoopSpace.prototype.x2r = function (generatorList) {
    return this.v2r(generatorList);
  };
  FreeLoopSpace.prototype.y2r = function (ideal) {
    return this.u2s_1.s1j(ideal);
  };
  FreeLoopSpace.prototype.s1j = function (ideal) {
    return this.y2r(ideal);
  };
  FreeLoopSpace.prototype.z2r = function (ideal) {
    return this.y2r(ideal);
  };
  FreeLoopSpace.prototype.a2s = function (ideal) {
    return this.u2s_1.z1k(ideal);
  };
  FreeLoopSpace.prototype.z1k = function (ideal) {
    return this.a2s(ideal);
  };
  FreeLoopSpace.prototype.d2e = function (ideal) {
    return this.a2s(ideal);
  };
  FreeLoopSpace.prototype.c2e = function (ideal) {
    return this.a2s(ideal);
  };
  FreeLoopSpace.prototype.j1k = function (degree) {
    return this.u2s_1.j1k(degree);
  };
  FreeLoopSpace.prototype.k1k = function (degree) {
    return this.u2s_1.k1k(degree);
  };
  FreeLoopSpace.prototype.b2s = function (scalar, gVector) {
    return this.u2s_1.q1k(scalar, gVector);
  };
  FreeLoopSpace.prototype.q1k = function (scalar, gVector) {
    return this.b2s(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  FreeLoopSpace.prototype.w2b = function (scalar, gVector) {
    return this.b2s(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  FreeLoopSpace.prototype.v2b = function (scalar, gVector) {
    return this.b2s(isInterface(scalar, Scalar) ? scalar : THROW_CCE(), gVector);
  };
  FreeLoopSpace.prototype.c2s = function (a, b) {
    return this.u2s_1.r1k(a, b);
  };
  FreeLoopSpace.prototype.r1k = function (a, b) {
    return this.c2s(a, b);
  };
  FreeLoopSpace.prototype.f2e = function (a, b) {
    return this.c2s(a, b);
  };
  FreeLoopSpace.prototype.e2e = function (a, b) {
    return this.c2s(a, b);
  };
  FreeLoopSpace.prototype.d2s = function (a, b) {
    return this.u2s_1.s1k(a, b);
  };
  FreeLoopSpace.prototype.s1k = function (a, b) {
    return this.d2s(a, b);
  };
  FreeLoopSpace.prototype.h2e = function (a, b) {
    return this.d2s(a, b);
  };
  FreeLoopSpace.prototype.g2e = function (a, b) {
    return this.d2s(a, b);
  };
  FreeLoopSpace.prototype.e2s = function (generatorList, text) {
    return this.u2s_1.y1k(generatorList, text);
  };
  FreeLoopSpace.prototype.y1k = function (generatorList, text) {
    return this.e2s(generatorList, text);
  };
  FreeLoopSpace.prototype.j2e = function (generatorList, text) {
    return this.e2s(generatorList, text);
  };
  FreeLoopSpace.prototype.i2e = function (generatorList, text) {
    return this.e2s(generatorList, text);
  };
  FreeLoopSpace.prototype.f2s = function (a, b) {
    return this.u2s_1.p1k(a, b);
  };
  FreeLoopSpace.prototype.p1k = function (a, b) {
    return this.f2s(a, b);
  };
  FreeLoopSpace.prototype.y2b = function (a, b) {
    return this.f2s(a, b);
  };
  FreeLoopSpace.prototype.x2b = function (a, b) {
    return this.f2s(a, b);
  };
  FreeLoopSpace.prototype.c1j = function () {
    return this.v2s_1;
  };
  FreeLoopSpace.prototype.y1j = function () {
    return this.w2s_1;
  };
  FreeLoopSpace.prototype.i29 = function () {
    return this.x2s_1;
  };
  FreeLoopSpace.prototype.t23 = function () {
    return this.y2s_1;
  };
  FreeLoopSpace.prototype.e2b = function () {
    return this.z2s_1;
  };
  FreeLoopSpace.prototype.toString = function () {
    var tmp = PrintType_PLAIN_getInstance();
    return this.c1n(PrintConfig_init_$Create$(tmp, null, null, null, null, 30, null));
  };
  FreeLoopSpace.prototype.c1n = function (printConfig) {
    return '(' + this.x2s_1.c1n(printConfig) + ', d)';
  };
  FreeLoopSpace.$metadata$ = classMeta('FreeLoopSpace', [FreeDGAlgebra, DGAlgebra]);
  function CopiedName$Companion$getInternalPrintConfig$ref($boundThis) {
    var l = function (p0) {
      return $boundThis.o2q(p0);
    };
    l.callableName = 'getInternalPrintConfig';
    return l;
  }
  function FreeLoopSpaceFactory(freeDGAlgebra, shiftDegree) {
    this.m2s_1 = freeDGAlgebra;
    this.n2s_1 = this.m2s_1.u1j();
    var tmp = this;
    var tmp0_elvis_lhs = shiftDegree;
    tmp.o2s_1 = tmp0_elvis_lhs == null ? this.m2s_1.y1j().oh(1) : tmp0_elvis_lhs;
    var tmp_0 = this;
    var tmp$ret$9;
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$8;
    // Inline function 'com.github.shwaka.kohomology.model.FreeLoopSpaceFactory.loopSpaceGAlgebra.<anonymous>' call
    var degreeGroup = this.m2s_1.y1j();
    var shift = this.o2s_1;
    var tmp$ret$7;
    // Inline function 'kotlin.let' call
    var tmp0_let = this.m2s_1.t23();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$6;
    // Inline function 'com.github.shwaka.kohomology.model.FreeLoopSpaceFactory.loopSpaceGAlgebra.<anonymous>.<anonymous>' call
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_let, 10));
    var tmp0_iterator = tmp0_let.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.model.FreeLoopSpaceFactory.loopSpaceGAlgebra.<anonymous>.<anonymous>.<anonymous>' call
      var tmp_1 = degreeGroup.m1m();
      tmp$ret$0 = copy$default(item, degreeGroup, tmp_1, null, false, 12, null);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var tmp_2 = tmp$ret$2;
    var tmp$ret$5;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_let, 10));
    var tmp0_iterator_0 = tmp0_let.f();
    while (tmp0_iterator_0.g()) {
      var item_0 = tmp0_iterator_0.h();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.model.FreeLoopSpaceFactory.loopSpaceGAlgebra.<anonymous>.<anonymous>.<anonymous>' call
      tmp$ret$3 = copy$default(item_0, degreeGroup, shift, null, false, 4, null);
      tmp0_mapTo_0.a(tmp$ret$3);
    }
    tmp$ret$4 = tmp0_mapTo_0;
    tmp$ret$5 = tmp$ret$4;
    tmp$ret$6 = plus(tmp_2, tmp$ret$5);
    tmp$ret$7 = tmp$ret$6;
    var loopSpaceIndeterminateList = tmp$ret$7;
    var tmp_3 = Companion_getInstance_41();
    tmp$ret$8 = tmp_3.c2a(this.n2s_1, degreeGroup, loopSpaceIndeterminateList, CopiedName$Companion$getInternalPrintConfig$ref(Companion_getInstance_62()));
    tmp$ret$9 = tmp$ret$8;
    tmp_0.p2s_1 = tmp$ret$9;
    var n = this.m2s_1.t23().i();
    var loopSpaceGeneratorList = this.p2s_1.i1o();
    var tmp_4 = this;
    var tmp$ret$16;
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$15;
    // Inline function 'com.github.shwaka.kohomology.model.FreeLoopSpaceFactory.<anonymous>' call
    var tmp$ret$11;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.m2s_1.y1j().c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$10;
    // Inline function 'com.github.shwaka.kohomology.model.FreeLoopSpaceFactory.<anonymous>.<anonymous>' call
    tmp$ret$10 = tmp0_run.s22(this.o2s_1);
    tmp$ret$11 = tmp$ret$10;
    var suspensionDegree = tmp$ret$11;
    var tmp_5 = takeLast(loopSpaceGeneratorList, n);
    var tmp$ret$14;
    // Inline function 'kotlin.collections.List' call
    var tmp$ret$13;
    // Inline function 'kotlin.collections.MutableList' call
    var list = ArrayList_init_$Create$(n);
    // Inline function 'kotlin.repeat' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    if (inductionVariable < n)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.collections.MutableList.<anonymous>' call
        var tmp$ret$12;
        // Inline function 'com.github.shwaka.kohomology.model.FreeLoopSpaceFactory.<anonymous>.<anonymous>' call
        tmp$ret$12 = this.p2s_1.u1k();
        list.a(tmp$ret$12);
      }
       while (inductionVariable < n);
    tmp$ret$13 = list;
    tmp$ret$14 = tmp$ret$13;
    var suspensionValueList = plus(tmp_5, tmp$ret$14);
    tmp$ret$15 = this.p2s_1.r29(suspensionValueList, suspensionDegree);
    tmp$ret$16 = tmp$ret$15;
    tmp_4.r2s_1 = tmp$ret$16;
    this.s2s_1 = this.m2s_1.m2a(this.p2s_1, take(loopSpaceGeneratorList, n));
    var tmp$ret$30;
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$29;
    // Inline function 'com.github.shwaka.kohomology.model.FreeLoopSpaceFactory.<anonymous>' call
    var baseSpaceGeneratorList = this.m2s_1.i1o();
    var tmp$ret$21;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$20;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_1 = ArrayList_init_$Create$(collectionSizeOrDefault(baseSpaceGeneratorList, 10));
    var tmp0_iterator_1 = baseSpaceGeneratorList.f();
    while (tmp0_iterator_1.g()) {
      var item_1 = tmp0_iterator_1.h();
      var tmp$ret$19;
      // Inline function 'com.github.shwaka.kohomology.model.FreeLoopSpaceFactory.<anonymous>.<anonymous>' call
      var tmp$ret$18;
      // Inline function 'kotlin.run' call
      var tmp0_run_0 = this.m2s_1.c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$17;
      // Inline function 'com.github.shwaka.kohomology.model.FreeLoopSpaceFactory.<anonymous>.<anonymous>.<anonymous>' call
      tmp$ret$17 = this.s2s_1.o1j(tmp0_run_0.n1j().o1j(item_1));
      tmp$ret$18 = tmp$ret$17;
      tmp$ret$19 = tmp$ret$18;
      tmp0_mapTo_1.a(tmp$ret$19);
    }
    tmp$ret$20 = tmp0_mapTo_1;
    tmp$ret$21 = tmp$ret$20;
    var valueList1 = tmp$ret$21;
    var tmp$ret$28;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$27;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_2 = ArrayList_init_$Create$(collectionSizeOrDefault(baseSpaceGeneratorList, 10));
    var tmp0_iterator_2 = baseSpaceGeneratorList.f();
    while (tmp0_iterator_2.g()) {
      var item_2 = tmp0_iterator_2.h();
      var tmp$ret$26;
      // Inline function 'com.github.shwaka.kohomology.model.FreeLoopSpaceFactory.<anonymous>.<anonymous>' call
      var tmp$ret$23;
      // Inline function 'kotlin.run' call
      var tmp0_run_1 = this.m2s_1.c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$22;
      // Inline function 'com.github.shwaka.kohomology.model.FreeLoopSpaceFactory.<anonymous>.<anonymous>.<anonymous>' call
      tmp$ret$22 = tmp0_run_1.n1j().o1j(item_2);
      tmp$ret$23 = tmp$ret$22;
      var dv = tmp$ret$23;
      var tmp$ret$25;
      // Inline function 'kotlin.run' call
      var tmp1_run = this.p2s_1.c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$24;
      // Inline function 'com.github.shwaka.kohomology.model.FreeLoopSpaceFactory.<anonymous>.<anonymous>.<anonymous>' call
      tmp$ret$24 = tmp1_run.y1l(this.r2s_1.o1j(this.s2s_1.o1j(dv)));
      tmp$ret$25 = tmp$ret$24;
      tmp$ret$26 = tmp$ret$25;
      tmp0_mapTo_2.a(tmp$ret$26);
    }
    tmp$ret$27 = tmp0_mapTo_2;
    tmp$ret$28 = tmp$ret$27;
    var valueList2 = tmp$ret$28;
    tmp$ret$29 = plus(valueList1, valueList2);
    tmp$ret$30 = tmp$ret$29;
    var differentialValueList = tmp$ret$30;
    this.q2s_1 = this.p2s_1.d2a(differentialValueList, 1);
  }
  FreeLoopSpaceFactory.prototype.y25 = function () {
    return this.m2s_1;
  };
  FreeLoopSpaceFactory.prototype.u1j = function () {
    return this.n2s_1;
  };
  FreeLoopSpaceFactory.prototype.e2t = function () {
    return this.o2s_1;
  };
  FreeLoopSpaceFactory.prototype.f2t = function () {
    return this.p2s_1;
  };
  FreeLoopSpaceFactory.prototype.i2s = function () {
    return this.r2s_1;
  };
  FreeLoopSpaceFactory.prototype.j2s = function () {
    return this.s2s_1;
  };
  FreeLoopSpaceFactory.$metadata$ = classMeta('FreeLoopSpaceFactory');
  function Companion_64() {
    Companion_instance_64 = this;
  }
  Companion_64.prototype.g2t = function (numerator, denominator) {
    if (numerator.dj())
      return KotlinRationalField_getInstance().j2t_1;
    if (numerator.equals(denominator))
      return KotlinRationalField_getInstance().k2t_1;
    var red = reduce(numerator, denominator);
    return new KotlinRational(red.z4_1, red.a5_1);
  };
  Companion_64.prototype.p2t = function (numerator, denominator) {
    return Companion_getInstance_65().g2t(BigInteger_init_$Create$(numerator), BigInteger_init_$Create$(denominator));
  };
  Companion_64.prototype.q2t = function (numerator, denominator) {
    if (numerator.dj())
      return KotlinRationalField_getInstance().j2t_1;
    if (numerator.equals(denominator))
      return KotlinRationalField_getInstance().k2t_1;
    // Inline function 'com.github.shwaka.kococo.debugOnly' call
    return new KotlinRational(numerator, denominator);
  };
  Companion_64.prototype.r2t = function (numerator, denominator) {
    // Inline function 'com.github.shwaka.kococo.debugOnly' call
    return new KotlinRational(BigInteger_init_$Create$(numerator), BigInteger_init_$Create$(denominator));
  };
  Companion_64.$metadata$ = objectMeta('Companion');
  var Companion_instance_64;
  function Companion_getInstance_65() {
    if (Companion_instance_64 == null)
      new Companion_64();
    return Companion_instance_64;
  }
  function toStringWithoutSign($this) {
    var numeratorAbs = $this.s2t_1.cj();
    return $this.s2t_1.equals(Companion_getInstance().vi_1) ? '0' : $this.t2t_1.equals(Companion_getInstance().wi_1) ? numeratorAbs.toString() : '' + numeratorAbs + '/' + $this.t2t_1;
  }
  function toTexWithoutSign($this) {
    var numeratorAbs = $this.s2t_1.cj();
    return $this.s2t_1.equals(Companion_getInstance().vi_1) ? '0' : $this.t2t_1.equals(Companion_getInstance().wi_1) ? numeratorAbs.toString() : '\\frac{' + numeratorAbs + '}{' + $this.t2t_1 + '}';
  }
  function toTex_0($this) {
    var tmp;
    if ($this.s2t_1.equals(Companion_getInstance().vi_1)) {
      tmp = '0';
    } else if ($this.t2t_1.equals(Companion_getInstance().wi_1)) {
      tmp = $this.s2t_1.toString();
    } else {
      var sign = $this.s2t_1.zh() ? '-' : '';
      tmp = sign + '\\frac{' + $this.s2t_1.cj() + '}{' + $this.t2t_1 + '}';
    }
    return tmp;
  }
  function KotlinRational(numerator, denominator) {
    Companion_getInstance_65();
    this.s2t_1 = numerator;
    this.t2t_1 = denominator;
  }
  KotlinRational.prototype.dj = function () {
    return this.s2t_1.dj();
  };
  KotlinRational.prototype.v2n = function () {
    return this.s2t_1.ai() ? true : this.s2t_1.dj();
  };
  KotlinRational.prototype.u2t = function (printConfig, withSign) {
    var tmp0_subject = printConfig.b1x_1;
    var tmp0 = tmp0_subject.d2_1;
    var tmp;
    switch (tmp0) {
      case 0:
      case 2:
        tmp = withSign ? this.toString() : toStringWithoutSign(this);
        break;
      case 1:
        tmp = withSign ? toTex_0(this) : toTexWithoutSign(this);
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  KotlinRational.prototype.toString = function () {
    return this.s2t_1.equals(Companion_getInstance().vi_1) ? '0' : this.t2t_1.equals(Companion_getInstance().wi_1) ? this.s2t_1.toString() : '' + this.s2t_1 + '/' + this.t2t_1;
  };
  KotlinRational.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null)
      return false;
    if (!getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof KotlinRational)
      other;
    else
      THROW_CCE();
    if (!this.s2t_1.equals(other.s2t_1))
      return false;
    if (!this.t2t_1.equals(other.t2t_1))
      return false;
    return true;
  };
  KotlinRational.prototype.hashCode = function () {
    var result = this.s2t_1.hashCode();
    result = imul(31, result) + this.t2t_1.hashCode() | 0;
    return result;
  };
  KotlinRational.$metadata$ = classMeta('KotlinRational', [Scalar]);
  function KotlinRationalField() {
    KotlinRationalField_instance = this;
    this.h2t_1 = 0;
    this.i2t_1 = Companion_getInstance_55().p2n(this);
    this.j2t_1 = this.oh(0);
    this.k2t_1 = this.oh(1);
    this.l2t_1 = this.oh(2);
    this.m2t_1 = this.oh(3);
    this.n2t_1 = this.oh(4);
    this.o2t_1 = this.oh(5);
  }
  KotlinRationalField.prototype.c1j = function () {
    return this.i2t_1;
  };
  KotlinRationalField.prototype.v2t = function (scalar) {
    return true;
  };
  KotlinRationalField.prototype.m2m = function (scalar) {
    return this.v2t(scalar instanceof KotlinRational ? scalar : THROW_CCE());
  };
  KotlinRationalField.prototype.w2t = function (a, b) {
    var numerator = a.s2t_1.fi(b.t2t_1).di(b.s2t_1.fi(a.t2t_1));
    var denominator = a.t2t_1.fi(b.t2t_1);
    return Companion_getInstance_65().g2t(numerator, denominator);
  };
  KotlinRationalField.prototype.q2n = function (a, b) {
    var tmp = a instanceof KotlinRational ? a : THROW_CCE();
    return this.w2t(tmp, b instanceof KotlinRational ? b : THROW_CCE());
  };
  KotlinRationalField.prototype.x2t = function (a, b) {
    var numerator = a.s2t_1.fi(b.t2t_1).ei(b.s2t_1.fi(a.t2t_1));
    var denominator = a.t2t_1.fi(b.t2t_1);
    return Companion_getInstance_65().g2t(numerator, denominator);
  };
  KotlinRationalField.prototype.r2n = function (a, b) {
    var tmp = a instanceof KotlinRational ? a : THROW_CCE();
    return this.x2t(tmp, b instanceof KotlinRational ? b : THROW_CCE());
  };
  KotlinRationalField.prototype.y2t = function (a, b) {
    return Companion_getInstance_65().g2t(a.s2t_1.fi(b.s2t_1), a.t2t_1.fi(b.t2t_1));
  };
  KotlinRationalField.prototype.s2n = function (a, b) {
    var tmp = a instanceof KotlinRational ? a : THROW_CCE();
    return this.y2t(tmp, b instanceof KotlinRational ? b : THROW_CCE());
  };
  KotlinRationalField.prototype.z2t = function (a, b) {
    if (b.equals(Companion_getInstance_65().p2t(0, 1))) {
      throw ArithmeticException_init_$Create$('division by zero (KotlinRational(0, 1))');
    }
    return Companion_getInstance_65().g2t(a.s2t_1.fi(b.t2t_1), a.t2t_1.fi(b.s2t_1));
  };
  KotlinRationalField.prototype.u2n = function (a, b) {
    var tmp = a instanceof KotlinRational ? a : THROW_CCE();
    return this.z2t(tmp, b instanceof KotlinRational ? b : THROW_CCE());
  };
  KotlinRationalField.prototype.a2u = function (scalar) {
    return Companion_getInstance_65().q2t(scalar.s2t_1.a6(), scalar.t2t_1);
  };
  KotlinRationalField.prototype.t2n = function (scalar) {
    return this.a2u(scalar instanceof KotlinRational ? scalar : THROW_CCE());
  };
  KotlinRationalField.prototype.oh = function (n) {
    return Companion_getInstance_65().r2t(n, 1);
  };
  KotlinRationalField.prototype.m1m = function () {
    return this.j2t_1;
  };
  KotlinRationalField.prototype.n1m = function () {
    return this.k2t_1;
  };
  KotlinRationalField.prototype.toString = function () {
    return 'RationalField';
  };
  KotlinRationalField.$metadata$ = objectMeta('KotlinRationalField', [Field]);
  var KotlinRationalField_instance;
  function KotlinRationalField_getInstance() {
    if (KotlinRationalField_instance == null)
      new KotlinRationalField();
    return KotlinRationalField_instance;
  }
  function reduce(numerator, denominator) {
    if (numerator.equals(Companion_getInstance().vi_1))
      return new Pair(Companion_getInstance().vi_1, Companion_getInstance().wi_1);
    var g = gcd(numerator, denominator);
    var tmp0_subject = denominator.yh();
    var tmp;
    switch (tmp0_subject) {
      case 1:
        tmp = numerator.gi(g);
        break;
      case -1:
        tmp = numerator.a6().gi(g);
        break;
      default:
        throw Exception_init_$Create$("This can't happen!");
    }
    var num = tmp;
    var den = denominator.cj().gi(g);
    return new Pair(num, den);
  }
  function gcd(a, b) {
    if (a.equals(Companion_getInstance().vi_1) ? true : b.equals(Companion_getInstance().vi_1)) {
      throw ArithmeticException_init_$Create$('gcd not defined for 0');
    }
    var aAbs = a.cj();
    var bAbs = b.cj();
    var tmp;
    if (aAbs.ej(bAbs) >= 0) {
      tmp = gcdInternal(aAbs, bAbs);
    } else {
      tmp = gcdInternal(bAbs, aAbs);
    }
    return tmp;
  }
  function gcdInternal(a, b) {
    var a_0 = a;
    var b_0 = b;
    $l$1: do {
      $l$0: do {
        if (b_0.equals(Companion_getInstance().vi_1))
          return a_0;
        var tmp0 = b_0;
        var tmp1 = a_0.hi(b_0);
        a_0 = tmp0;
        b_0 = tmp1;
        continue $l$0;
      }
       while (false);
    }
     while (true);
  }
  function get_DenseNumVectorSpaceOverRational() {
    init_properties_Rational_kt_p9ja98();
    return DenseNumVectorSpaceOverRational;
  }
  var DenseNumVectorSpaceOverRational;
  function get_DenseMatrixSpaceOverRational() {
    init_properties_Rational_kt_p9ja98();
    return DenseMatrixSpaceOverRational;
  }
  var DenseMatrixSpaceOverRational;
  function get_SparseNumVectorSpaceOverRational() {
    init_properties_Rational_kt_p9ja98();
    return SparseNumVectorSpaceOverRational;
  }
  var SparseNumVectorSpaceOverRational;
  function get_SparseMatrixSpaceOverRational() {
    init_properties_Rational_kt_p9ja98();
    return SparseMatrixSpaceOverRational;
  }
  var SparseMatrixSpaceOverRational;
  function get_DecomposedSparseMatrixSpaceOverRational() {
    init_properties_Rational_kt_p9ja98();
    return DecomposedSparseMatrixSpaceOverRational;
  }
  var DecomposedSparseMatrixSpaceOverRational;
  var DenseNumVectorSpaceOverBigRational$delegate;
  var DenseMatrixSpaceOverBigRational$delegate;
  var SparseNumVectorSpaceOverBigRational$delegate;
  var SparseMatrixSpaceOverBigRational$delegate;
  var DecomposedSparseMatrixSpaceOverBigRational$delegate;
  function DenseNumVectorSpaceOverRational$factory() {
    return getPropertyCallableRef('DenseNumVectorSpaceOverRational', 0, KProperty0, function () {
      return get_DenseNumVectorSpaceOverRational();
    }, null);
  }
  function DenseMatrixSpaceOverRational$factory() {
    return getPropertyCallableRef('DenseMatrixSpaceOverRational', 0, KProperty0, function () {
      return get_DenseMatrixSpaceOverRational();
    }, null);
  }
  function SparseNumVectorSpaceOverRational$factory() {
    return getPropertyCallableRef('SparseNumVectorSpaceOverRational', 0, KProperty0, function () {
      return get_SparseNumVectorSpaceOverRational();
    }, null);
  }
  function SparseMatrixSpaceOverRational$factory() {
    return getPropertyCallableRef('SparseMatrixSpaceOverRational', 0, KProperty0, function () {
      return get_SparseMatrixSpaceOverRational();
    }, null);
  }
  function DecomposedSparseMatrixSpaceOverRational$factory() {
    return getPropertyCallableRef('DecomposedSparseMatrixSpaceOverRational', 0, KProperty0, function () {
      return get_DecomposedSparseMatrixSpaceOverRational();
    }, null);
  }
  var properties_initialized_Rational_kt_ue1234;
  function init_properties_Rational_kt_p9ja98() {
    if (properties_initialized_Rational_kt_ue1234) {
    } else {
      properties_initialized_Rational_kt_ue1234 = true;
      DenseNumVectorSpaceOverRational = Companion_getInstance_54().g2m(KotlinRationalField_getInstance());
      DenseMatrixSpaceOverRational = Companion_getInstance_53().q2k(get_DenseNumVectorSpaceOverRational());
      SparseNumVectorSpaceOverRational = Companion_getInstance_60().g2m(KotlinRationalField_getInstance());
      SparseMatrixSpaceOverRational = Companion_getInstance_58().n2o(get_SparseNumVectorSpaceOverRational());
      DecomposedSparseMatrixSpaceOverRational = Companion_getInstance_59().n2o(get_SparseNumVectorSpaceOverRational());
      DenseNumVectorSpaceOverBigRational$delegate = DenseNumVectorSpaceOverRational$factory();
      DenseMatrixSpaceOverBigRational$delegate = DenseMatrixSpaceOverRational$factory();
      SparseNumVectorSpaceOverBigRational$delegate = SparseNumVectorSpaceOverRational$factory();
      SparseMatrixSpaceOverBigRational$delegate = SparseMatrixSpaceOverRational$factory();
      DecomposedSparseMatrixSpaceOverBigRational$delegate = DecomposedSparseMatrixSpaceOverRational$factory();
    }
  }
  function get_alphabeticalCategories() {
    init_properties_Identifier_kt_wq1bbl();
    return alphabeticalCategories;
  }
  var alphabeticalCategories;
  function get_numericalCategories() {
    init_properties_Identifier_kt_wq1bbl();
    return numericalCategories;
  }
  var numericalCategories;
  function get_punctuationCategories() {
    init_properties_Identifier_kt_wq1bbl();
    return punctuationCategories;
  }
  var punctuationCategories;
  function Companion_65() {
    Companion_instance_65 = this;
    this.j25_1 = plus(get_alphabeticalCategories(), get_punctuationCategories());
  }
  Companion_65.prototype.b2u = function (char) {
    return this.j25_1.x1(get_category(char));
  };
  Companion_65.prototype.c2u = function (name) {
    // Inline function 'kotlin.require' call
    var tmp$ret$0;
    // Inline function 'kotlin.text.isNotEmpty' call
    tmp$ret$0 = charSequenceLength(name) > 0;
    var tmp0_require = tmp$ret$0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$1;
      // Inline function 'com.github.shwaka.kohomology.util.Companion.validateName.<anonymous>' call
      tmp$ret$1 = 'Identifier name (' + name + ') must be non-empty.';
      var message = tmp$ret$1;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.require' call
    var tmp1_require = this.b2u(charSequenceGet(name, 0));
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp1_require) {
      var tmp$ret$2;
      // Inline function 'com.github.shwaka.kohomology.util.Companion.validateName.<anonymous>' call
      tmp$ret$2 = 'Identifier name (' + name + ') must start with ' + 'alphabets (including greeks) or underscore, ' + ('but it starts with "' + new Char(charSequenceGet(name, 0)) + '".');
      var message_0 = tmp$ret$2;
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
    Companion_getInstance_67().d2u(name, getKClass(Identifier_0).qc());
  };
  Companion_65.$metadata$ = objectMeta('Companion');
  var Companion_instance_65;
  function Companion_getInstance_66() {
    if (Companion_instance_65 == null)
      new Companion_65();
    return Companion_instance_65;
  }
  function Identifier_0(value) {
    Companion_getInstance_66();
    this.q2a_1 = value;
    Companion_getInstance_66().c2u(this.q2a_1);
  }
  Identifier_0.prototype.f1 = function () {
    return this.q2a_1;
  };
  Identifier_0.prototype.toString = function () {
    return 'Identifier(value=' + this.q2a_1 + ')';
  };
  Identifier_0.prototype.hashCode = function () {
    return getStringHashCode(this.q2a_1);
  };
  Identifier_0.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Identifier_0))
      return false;
    var tmp0_other_with_cast = other instanceof Identifier_0 ? other : THROW_CCE();
    if (!(this.q2a_1 === tmp0_other_with_cast.q2a_1))
      return false;
    return true;
  };
  Identifier_0.$metadata$ = classMeta('Identifier');
  function PartialIdentifier$Companion$fromIntList$lambda(it) {
    return Companion_getInstance_67().oh(it).j2q_1;
  }
  function Companion_66() {
    Companion_instance_66 = this;
    this.y22_1 = plus(plus(get_alphabeticalCategories(), get_punctuationCategories()), get_numericalCategories());
  }
  Companion_66.prototype.oh = function (int) {
    var tmp;
    if (int >= 0) {
      tmp = new PartialIdentifier(int.toString());
    } else {
      var withoutSign = removePrefix(int.toString(), '-');
      tmp = new PartialIdentifier('m' + withoutSign);
    }
    return tmp;
  };
  Companion_66.prototype.o23 = function (intList) {
    var name = joinToString$default(intList, '_', null, null, 0, null, PartialIdentifier$Companion$fromIntList$lambda, 30, null);
    return new PartialIdentifier(name);
  };
  Companion_66.prototype.e2u = function (char) {
    return this.y22_1.x1(get_category(char));
  };
  Companion_66.prototype.d2u = function (name, className) {
    var indexedObject = name;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var c = charSequenceGet(indexedObject, inductionVariable);
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'kotlin.require' call
      var tmp0_require = this.e2u(c);
      // Inline function 'kotlin.contracts.contract' call
      if (!tmp0_require) {
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.util.Companion.validateName.<anonymous>' call
        var tmp0_elvis_lhs = className;
        tmp$ret$0 = (tmp0_elvis_lhs == null ? 'Identifier' : tmp0_elvis_lhs) + ' name (' + name + ') can only contain ' + 'alphabets (including greeks), numbers or underscore, ' + ('but it contains "' + new Char(c) + '".');
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
  };
  Companion_66.prototype.f2u = function (name, className, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      className = getKClass(PartialIdentifier).qc();
    return this.d2u(name, className);
  };
  Companion_66.$metadata$ = objectMeta('Companion');
  var Companion_instance_66;
  function Companion_getInstance_67() {
    if (Companion_instance_66 == null)
      new Companion_66();
    return Companion_instance_66;
  }
  function PartialIdentifier(value) {
    Companion_getInstance_67();
    this.j2q_1 = value;
    var tmp = Companion_getInstance_67();
    tmp.f2u(this.j2q_1, null, 2, null);
  }
  PartialIdentifier.prototype.toString = function () {
    return 'PartialIdentifier(value=' + this.j2q_1 + ')';
  };
  PartialIdentifier.prototype.hashCode = function () {
    return getStringHashCode(this.j2q_1);
  };
  PartialIdentifier.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof PartialIdentifier))
      return false;
    var tmp0_other_with_cast = other instanceof PartialIdentifier ? other : THROW_CCE();
    if (!(this.j2q_1 === tmp0_other_with_cast.j2q_1))
      return false;
    return true;
  };
  PartialIdentifier.$metadata$ = classMeta('PartialIdentifier');
  var properties_initialized_Identifier_kt_ehem2z;
  function init_properties_Identifier_kt_wq1bbl() {
    if (properties_initialized_Identifier_kt_ehem2z) {
    } else {
      properties_initialized_Identifier_kt_ehem2z = true;
      alphabeticalCategories = listOf_0([CharCategory_LOWERCASE_LETTER_getInstance(), CharCategory_UPPERCASE_LETTER_getInstance(), CharCategory_OTHER_LETTER_getInstance()]);
      numericalCategories = listOf(CharCategory_DECIMAL_DIGIT_NUMBER_getInstance());
      punctuationCategories = listOf(CharCategory_CONNECTOR_PUNCTUATION_getInstance());
    }
  }
  function isOdd_0(_this__u8e3s4) {
    return !((_this__u8e3s4 % 2 | 0) === 0);
  }
  function isEven(_this__u8e3s4) {
    return (_this__u8e3s4 % 2 | 0) === 0;
  }
  function PrintConfig_init_$Init$(printType, beforeSign, afterSign, afterCoeff, showShift, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      printType = PrintType_PLAIN_getInstance();
    if (!(($mask0 & 2) === 0))
      beforeSign = ' ';
    if (!(($mask0 & 4) === 0))
      afterSign = ' ';
    if (!(($mask0 & 8) === 0))
      afterCoeff = ' ';
    if (!(($mask0 & 16) === 0))
      showShift = ShowShift_S_WITH_DEGREE_getInstance();
    PrintConfig.call($this, printType, beforeSign, afterSign, afterCoeff, showShift);
    return $this;
  }
  function PrintConfig_init_$Create$(printType, beforeSign, afterSign, afterCoeff, showShift, $mask0, $marker) {
    return PrintConfig_init_$Init$(printType, beforeSign, afterSign, afterCoeff, showShift, $mask0, $marker, Object.create(PrintConfig.prototype));
  }
  function PrintConfig(printType, beforeSign, afterSign, afterCoeff, showShift) {
    this.b1x_1 = printType;
    this.c1x_1 = beforeSign;
    this.d1x_1 = afterSign;
    this.e1x_1 = afterCoeff;
    this.f1x_1 = showShift;
  }
  PrintConfig.prototype.toString = function () {
    return 'PrintConfig(printType=' + this.b1x_1 + ', beforeSign=' + this.c1x_1 + ', afterSign=' + this.d1x_1 + ', afterCoeff=' + this.e1x_1 + ', showShift=' + this.f1x_1 + ')';
  };
  PrintConfig.prototype.hashCode = function () {
    var result = this.b1x_1.hashCode();
    result = imul(result, 31) + getStringHashCode(this.c1x_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.d1x_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.e1x_1) | 0;
    result = imul(result, 31) + this.f1x_1.hashCode() | 0;
    return result;
  };
  PrintConfig.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof PrintConfig))
      return false;
    var tmp0_other_with_cast = other instanceof PrintConfig ? other : THROW_CCE();
    if (!this.b1x_1.equals(tmp0_other_with_cast.b1x_1))
      return false;
    if (!(this.c1x_1 === tmp0_other_with_cast.c1x_1))
      return false;
    if (!(this.d1x_1 === tmp0_other_with_cast.d1x_1))
      return false;
    if (!(this.e1x_1 === tmp0_other_with_cast.e1x_1))
      return false;
    if (!this.f1x_1.equals(tmp0_other_with_cast.f1x_1))
      return false;
    return true;
  };
  PrintConfig.$metadata$ = classMeta('PrintConfig');
  var PrintType_PLAIN_instance;
  var PrintType_TEX_instance;
  var PrintType_CODE_instance;
  var PrintType_entriesInitialized;
  function PrintType_initEntries() {
    if (PrintType_entriesInitialized)
      return Unit_getInstance();
    PrintType_entriesInitialized = true;
    PrintType_PLAIN_instance = new PrintType('PLAIN', 0);
    PrintType_TEX_instance = new PrintType('TEX', 1);
    PrintType_CODE_instance = new PrintType('CODE', 2);
  }
  function PrintType(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  PrintType.$metadata$ = classMeta('PrintType', undefined, undefined, undefined, undefined, Enum.prototype);
  var ShowShift_BAR_instance;
  var ShowShift_S_instance;
  var ShowShift_S_WITH_DEGREE_instance;
  var ShowShift_entriesInitialized;
  function ShowShift_initEntries() {
    if (ShowShift_entriesInitialized)
      return Unit_getInstance();
    ShowShift_entriesInitialized = true;
    ShowShift_BAR_instance = new ShowShift('BAR', 0);
    ShowShift_S_instance = new ShowShift('S', 1);
    ShowShift_S_WITH_DEGREE_instance = new ShowShift('S_WITH_DEGREE', 2);
  }
  function ShowShift(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  ShowShift.$metadata$ = classMeta('ShowShift', undefined, undefined, undefined, undefined, Enum.prototype);
  function PrintableWithSign() {
  }
  PrintableWithSign.$metadata$ = interfaceMeta('PrintableWithSign', [Printable]);
  function Printable() {
  }
  Printable.$metadata$ = interfaceMeta('Printable');
  function Printer_init_$Init$(printConfig, $this) {
    Printer.call($this, printConfig, '');
    return $this;
  }
  function Printer_init_$Create$(printConfig) {
    return Printer_init_$Init$(printConfig, Object.create(Printer.prototype));
  }
  function Printer_init_$Init$_0(printType, beforeSign, afterSign, afterCoeff, showShift, $this) {
    Printer_init_$Init$(new PrintConfig(printType, beforeSign, afterSign, afterCoeff, showShift), $this);
    return $this;
  }
  function Printer_init_$Init$_1(printType, beforeSign, afterSign, afterCoeff, showShift, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      printType = PrintType_PLAIN_getInstance();
    if (!(($mask0 & 2) === 0))
      beforeSign = ' ';
    if (!(($mask0 & 4) === 0))
      afterSign = ' ';
    if (!(($mask0 & 8) === 0))
      afterCoeff = ' ';
    if (!(($mask0 & 16) === 0))
      showShift = ShowShift_S_WITH_DEGREE_getInstance();
    Printer_init_$Init$_0(printType, beforeSign, afterSign, afterCoeff, showShift, $this);
    return $this;
  }
  function Printer_init_$Create$_0(printType, beforeSign, afterSign, afterCoeff, showShift, $mask0, $marker) {
    return Printer_init_$Init$_1(printType, beforeSign, afterSign, afterCoeff, showShift, $mask0, $marker, Object.create(Printer.prototype));
  }
  function Printer(printConfig, value) {
    this.s29_1 = printConfig;
    this.t29_1 = value;
  }
  Printer.prototype.toString = function () {
    return this.t29_1;
  };
  Printer.prototype.u29 = function (printable) {
    var tmp0_safe_receiver = printable;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.c1n(this.s29_1);
    var stringFromPrintable = tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs;
    return this.t29_1 + stringFromPrintable;
  };
  Printer.$metadata$ = classMeta('Printer');
  function InternalPrintConfig$Companion$default$lambda($printConfig) {
    return function (coeff, withSign) {
      return coeff.u2t($printConfig, withSign);
    };
  }
  function InternalPrintConfig$Companion$default$lambda_0($printConfig) {
    return function (it) {
      return it.c1n($printConfig);
    };
  }
  function InternalPrintConfig_init_$Init$(coeffToString, basisToString, basisComparator, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0)) {
      coeffToString = InternalPrintConfig$_init_$lambda_u75kft;
    }
    if (!(($mask0 & 2) === 0)) {
      basisToString = InternalPrintConfig$_init_$lambda_u75kft_0;
    }
    if (!(($mask0 & 4) === 0))
      basisComparator = null;
    InternalPrintConfig.call($this, coeffToString, basisToString, basisComparator);
    return $this;
  }
  function InternalPrintConfig_init_$Create$(coeffToString, basisToString, basisComparator, $mask0, $marker) {
    return InternalPrintConfig_init_$Init$(coeffToString, basisToString, basisComparator, $mask0, $marker, Object.create(InternalPrintConfig.prototype));
  }
  function Companion_67() {
    Companion_instance_67 = this;
  }
  Companion_67.prototype.r1u = function (printConfig) {
    var tmp = InternalPrintConfig$Companion$default$lambda(printConfig);
    var tmp_0 = InternalPrintConfig$Companion$default$lambda_0(printConfig);
    return InternalPrintConfig_init_$Create$(tmp, tmp_0, null, 4, null);
  };
  Companion_67.$metadata$ = objectMeta('Companion');
  var Companion_instance_67;
  function Companion_getInstance_68() {
    if (Companion_instance_67 == null)
      new Companion_67();
    return Companion_instance_67;
  }
  function InternalPrintConfig$_init_$lambda_u75kft(coeff, withSign) {
    return coeff.w2n(PrintType_PLAIN_getInstance(), withSign);
  }
  function InternalPrintConfig$_init_$lambda_u75kft_0(it) {
    return toString_0(it);
  }
  function InternalPrintConfig(coeffToString, basisToString, basisComparator) {
    Companion_getInstance_68();
    this.g2u_1 = coeffToString;
    this.h2u_1 = basisToString;
    this.i2u_1 = basisComparator;
  }
  InternalPrintConfig.prototype.j2u = function () {
    return this.i2u_1;
  };
  InternalPrintConfig.prototype.toString = function () {
    return 'InternalPrintConfig(coeffToString=' + this.g2u_1 + ', basisToString=' + this.h2u_1 + ', basisComparator=' + this.i2u_1 + ')';
  };
  InternalPrintConfig.prototype.hashCode = function () {
    var result = hashCode(this.g2u_1);
    result = imul(result, 31) + hashCode(this.h2u_1) | 0;
    result = imul(result, 31) + (this.i2u_1 == null ? 0 : hashCode(this.i2u_1)) | 0;
    return result;
  };
  InternalPrintConfig.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof InternalPrintConfig))
      return false;
    var tmp0_other_with_cast = other instanceof InternalPrintConfig ? other : THROW_CCE();
    if (!equals(this.g2u_1, tmp0_other_with_cast.g2u_1))
      return false;
    if (!equals(this.h2u_1, tmp0_other_with_cast.h2u_1))
      return false;
    if (!equals(this.i2u_1, tmp0_other_with_cast.i2u_1))
      return false;
    return true;
  };
  InternalPrintConfig.$metadata$ = classMeta('InternalPrintConfig');
  function PrintType_PLAIN_getInstance() {
    PrintType_initEntries();
    return PrintType_PLAIN_instance;
  }
  function PrintType_TEX_getInstance() {
    PrintType_initEntries();
    return PrintType_TEX_instance;
  }
  function PrintType_CODE_getInstance() {
    PrintType_initEntries();
    return PrintType_CODE_instance;
  }
  function ShowShift_BAR_getInstance() {
    ShowShift_initEntries();
    return ShowShift_BAR_instance;
  }
  function ShowShift_S_getInstance() {
    ShowShift_initEntries();
    return ShowShift_S_instance;
  }
  function ShowShift_S_WITH_DEGREE_getInstance() {
    ShowShift_initEntries();
    return ShowShift_S_WITH_DEGREE_instance;
  }
  var Sign_PLUS_instance;
  var Sign_MINUS_instance;
  function Companion_68() {
    Companion_instance_68 = this;
  }
  Companion_68.prototype.o2n = function (n) {
    var tmp;
    if (isEven(n)) {
      tmp = Sign_PLUS_getInstance();
    } else {
      tmp = Sign_MINUS_getInstance();
    }
    return tmp;
  };
  Companion_68.prototype.h22 = function (even) {
    var tmp;
    if (even) {
      tmp = Sign_PLUS_getInstance();
    } else {
      tmp = Sign_MINUS_getInstance();
    }
    return tmp;
  };
  Companion_68.$metadata$ = objectMeta('Companion');
  var Companion_instance_68;
  function Companion_getInstance_69() {
    Sign_initEntries();
    if (Companion_instance_68 == null)
      new Companion_68();
    return Companion_instance_68;
  }
  var Sign_entriesInitialized;
  function Sign_initEntries() {
    if (Sign_entriesInitialized)
      return Unit_getInstance();
    Sign_entriesInitialized = true;
    Sign_PLUS_instance = new Sign('PLUS', 0, 1);
    Sign_MINUS_instance = new Sign('MINUS', 1, -1);
    Companion_getInstance_69();
  }
  function Sign(name, ordinal, intValue) {
    Enum.call(this, name, ordinal);
    this.l2h_1 = intValue;
  }
  Sign.prototype.a6 = function () {
    var tmp0_subject = this;
    var tmp0 = tmp0_subject.d2_1;
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = Sign_MINUS_getInstance();
        break;
      case 1:
        tmp = Sign_PLUS_getInstance();
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  Sign.$metadata$ = classMeta('Sign', undefined, undefined, undefined, undefined, Enum.prototype);
  function Sign_PLUS_getInstance() {
    Sign_initEntries();
    return Sign_PLUS_instance;
  }
  function Sign_MINUS_getInstance() {
    Sign_initEntries();
    return Sign_MINUS_instance;
  }
  function get_PrettyParen() {
    init_properties_StringTable_kt_q4vxyh();
    return PrettyParen;
  }
  var PrettyParen;
  function StringTable_init_$Init$(data, paren, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      paren = get_PrettyParen();
    StringTable.call($this, data, paren);
    return $this;
  }
  function StringTable_init_$Create$(data, paren, $mask0, $marker) {
    return StringTable_init_$Init$(data, paren, $mask0, $marker, Object.create(StringTable.prototype));
  }
  function StringTable(data, paren) {
    this.k2u_1 = data;
    this.l2u_1 = paren;
  }
  StringTable.prototype.toString = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = this.k2u_1;
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.util.StringTable.toString.<anonymous>' call
      tmp$ret$0 = toString(item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var rowStringList = tmp$ret$2;
    var joinedRowStrings = joinToString$default(rowStringList, this.l2u_1.u2u_1, null, null, 0, null, null, 62, null);
    return this.l2u_1.p2u_1 + ' ' + joinedRowStrings + ' ' + this.l2u_1.t2u_1;
  };
  StringTable.$metadata$ = classMeta('StringTable');
  function Paren_init_$Init$(upperLeft, left, lowerLeft, leftOneRow, upperRight, right, lowerRight, rightOneRow, separator, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      upperLeft = '[';
    if (!(($mask0 & 2) === 0))
      left = '[';
    if (!(($mask0 & 4) === 0))
      lowerLeft = '[';
    if (!(($mask0 & 8) === 0))
      leftOneRow = '[';
    if (!(($mask0 & 16) === 0))
      upperRight = ']';
    if (!(($mask0 & 32) === 0))
      right = ']';
    if (!(($mask0 & 64) === 0))
      lowerRight = ']';
    if (!(($mask0 & 128) === 0))
      rightOneRow = ']';
    if (!(($mask0 & 256) === 0))
      separator = ' ';
    Paren.call($this, upperLeft, left, lowerLeft, leftOneRow, upperRight, right, lowerRight, rightOneRow, separator);
    return $this;
  }
  function Paren_init_$Create$(upperLeft, left, lowerLeft, leftOneRow, upperRight, right, lowerRight, rightOneRow, separator, $mask0, $marker) {
    return Paren_init_$Init$(upperLeft, left, lowerLeft, leftOneRow, upperRight, right, lowerRight, rightOneRow, separator, $mask0, $marker, Object.create(Paren.prototype));
  }
  function Paren(upperLeft, left, lowerLeft, leftOneRow, upperRight, right, lowerRight, rightOneRow, separator) {
    this.m2u_1 = upperLeft;
    this.n2u_1 = left;
    this.o2u_1 = lowerLeft;
    this.p2u_1 = leftOneRow;
    this.q2u_1 = upperRight;
    this.r2u_1 = right;
    this.s2u_1 = lowerRight;
    this.t2u_1 = rightOneRow;
    this.u2u_1 = separator;
  }
  Paren.prototype.toString = function () {
    return 'Paren(upperLeft=' + this.m2u_1 + ', left=' + this.n2u_1 + ', lowerLeft=' + this.o2u_1 + ', leftOneRow=' + this.p2u_1 + ', upperRight=' + this.q2u_1 + ', right=' + this.r2u_1 + ', lowerRight=' + this.s2u_1 + ', rightOneRow=' + this.t2u_1 + ', separator=' + this.u2u_1 + ')';
  };
  Paren.prototype.hashCode = function () {
    var result = getStringHashCode(this.m2u_1);
    result = imul(result, 31) + getStringHashCode(this.n2u_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.o2u_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.p2u_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.q2u_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.r2u_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.s2u_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.t2u_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.u2u_1) | 0;
    return result;
  };
  Paren.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Paren))
      return false;
    var tmp0_other_with_cast = other instanceof Paren ? other : THROW_CCE();
    if (!(this.m2u_1 === tmp0_other_with_cast.m2u_1))
      return false;
    if (!(this.n2u_1 === tmp0_other_with_cast.n2u_1))
      return false;
    if (!(this.o2u_1 === tmp0_other_with_cast.o2u_1))
      return false;
    if (!(this.p2u_1 === tmp0_other_with_cast.p2u_1))
      return false;
    if (!(this.q2u_1 === tmp0_other_with_cast.q2u_1))
      return false;
    if (!(this.r2u_1 === tmp0_other_with_cast.r2u_1))
      return false;
    if (!(this.s2u_1 === tmp0_other_with_cast.s2u_1))
      return false;
    if (!(this.t2u_1 === tmp0_other_with_cast.t2u_1))
      return false;
    if (!(this.u2u_1 === tmp0_other_with_cast.u2u_1))
      return false;
    return true;
  };
  Paren.$metadata$ = classMeta('Paren');
  var properties_initialized_StringTable_kt_23rfzn;
  function init_properties_StringTable_kt_q4vxyh() {
    if (properties_initialized_StringTable_kt_23rfzn) {
    } else {
      properties_initialized_StringTable_kt_23rfzn = true;
      PrettyParen = Paren_init_$Create$('\u23A1', '\u23A5', '\u23A3', null, '\u23A4', '\u23A5', '\u23A6', null, null, 392, null);
    }
  }
  function groupsAsMap($this) {
    var tmp$ret$4;
    // Inline function 'kotlin.collections.groupBy' call
    var tmp0_groupBy = until(0, $this.r2j_1);
    var tmp$ret$3;
    // Inline function 'kotlin.collections.groupByTo' call
    var tmp0_groupByTo = LinkedHashMap_init_$Create$();
    var inductionVariable = tmp0_groupBy.m1_1;
    var last = tmp0_groupBy.n1_1;
    if (inductionVariable <= last)
      do {
        var element = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.util.UnionFind.groupsAsMap.<anonymous>' call
        tmp$ret$0 = $this.v2u(element);
        var key = tmp$ret$0;
        var tmp$ret$2;
        // Inline function 'kotlin.collections.getOrPut' call
        var value = tmp0_groupByTo.t(key);
        var tmp;
        if (value == null) {
          var tmp$ret$1;
          // Inline function 'kotlin.collections.groupByTo.<anonymous>' call
          tmp$ret$1 = ArrayList_init_$Create$_0();
          var answer = tmp$ret$1;
          tmp0_groupByTo.u(key, answer);
          tmp = answer;
        } else {
          tmp = value;
        }
        tmp$ret$2 = tmp;
        var list = tmp$ret$2;
        list.a(element);
      }
       while (!(element === last));
    tmp$ret$3 = tmp0_groupByTo;
    tmp$ret$4 = tmp$ret$3;
    return tmp$ret$4;
  }
  function UnionFind(size) {
    this.r2j_1 = size;
    var tmp = this;
    var tmp$ret$1;
    // Inline function 'kotlin.collections.MutableList' call
    var tmp0_MutableList = this.r2j_1;
    var list = ArrayList_init_$Create$(tmp0_MutableList);
    // Inline function 'kotlin.repeat' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    if (inductionVariable < tmp0_MutableList)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.collections.MutableList.<anonymous>' call
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.util.UnionFind.parent.<anonymous>' call
        tmp$ret$0 = index;
        list.a(tmp$ret$0);
      }
       while (inductionVariable < tmp0_MutableList);
    tmp$ret$1 = list;
    tmp.s2j_1 = tmp$ret$1;
  }
  UnionFind.prototype.v2u = function (index) {
    var tmp;
    if (this.s2j_1.l(index) === index) {
      tmp = index;
    } else {
      var tmp$ret$0;
      // Inline function 'kotlin.also' call
      var tmp0_also = this.v2u(this.s2j_1.l(index));
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'com.github.shwaka.kohomology.util.UnionFind.rootOf.<anonymous>' call
      this.s2j_1.u9(index, tmp0_also);
      tmp$ret$0 = tmp0_also;
      tmp = tmp$ret$0;
    }
    return tmp;
  };
  UnionFind.prototype.t2j = function (index1, index2) {
    var root1 = this.v2u(index1);
    var root2 = this.v2u(index2);
    if (!(root1 === root2)) {
      this.s2j_1.u9(root1, root2);
    }
  };
  UnionFind.prototype.u2j = function () {
    return toList_1(groupsAsMap(this).m3());
  };
  UnionFind.$metadata$ = classMeta('UnionFind', [FrozenUnionFind]);
  function FrozenUnionFind() {
  }
  FrozenUnionFind.$metadata$ = interfaceMeta('FrozenUnionFind');
  function directProductOf(collection1, collection2) {
    var tmp$ret$5;
    // Inline function 'kotlin.collections.flatMap' call
    var tmp$ret$4;
    // Inline function 'kotlin.collections.flatMapTo' call
    var tmp0_flatMapTo = ArrayList_init_$Create$_0();
    var tmp0_iterator = collection1.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.util.directProductOf.<anonymous>' call
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(collection2, 10));
      var tmp0_iterator_0 = collection2.f();
      while (tmp0_iterator_0.g()) {
        var item = tmp0_iterator_0.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.util.directProductOf.<anonymous>.<anonymous>' call
        tmp$ret$0 = new Pair(element, item);
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var list = tmp$ret$3;
      addAll(tmp0_flatMapTo, list);
    }
    tmp$ret$4 = tmp0_flatMapTo;
    tmp$ret$5 = tmp$ret$4;
    return tmp$ret$5;
  }
  function hasNonEmptyIntersection(_this__u8e3s4, other) {
    return !hasEmptyIntersection(_this__u8e3s4, other);
  }
  function hasEmptyIntersection(_this__u8e3s4, other) {
    var i = 0;
    var j = 0;
    while (i < _this__u8e3s4.i() ? j < other.i() : false) {
      if (equals(_this__u8e3s4.l(i), other.l(j)))
        return false;
      else if (compareTo(_this__u8e3s4.l(i), other.l(j)) > 0) {
        var tmp0 = j;
        j = tmp0 + 1 | 0;
      } else if (compareTo(_this__u8e3s4.l(i), other.l(j)) < 0) {
        var tmp1 = i;
        i = tmp1 + 1 | 0;
      } else
        throw Exception_init_$Create$("This can't happen!");
    }
    return true;
  }
  function exchange(_this__u8e3s4, key1, key2) {
    // Inline function 'kotlin.require' call
    var tmp0_require = !equals(key1, key2);
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.util.exchange.<anonymous>' call
      tmp$ret$0 = 'key1 and key2 must be distinct, but both are ' + key1;
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    var row1 = _this__u8e3s4.t(key1);
    if (row1 == null) {
      var row2 = _this__u8e3s4.t(key2);
      if (row2 == null)
        return Unit_getInstance();
      else {
        // Inline function 'kotlin.collections.set' call
        _this__u8e3s4.u(key1, row2);
        _this__u8e3s4.va(key2);
      }
    } else {
      var row2_0 = _this__u8e3s4.t(key2);
      if (row2_0 == null) {
        // Inline function 'kotlin.collections.set' call
        _this__u8e3s4.u(key2, row1);
        _this__u8e3s4.va(key1);
      } else {
        // Inline function 'kotlin.collections.set' call
        _this__u8e3s4.u(key1, row2_0);
        // Inline function 'kotlin.collections.set' call
        _this__u8e3s4.u(key2, row1);
      }
    }
  }
  function BilinearMap() {
  }
  BilinearMap.$metadata$ = interfaceMeta('BilinearMap');
  function getInducedMap($this, bilinearMap, source1Quot, source2Quot, targetQuot) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = source1Quot.h1w();
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.Companion.getInducedMap.<anonymous>' call
      tmp$ret$0 = source1Quot.f1r().k1r(item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var basisLift1 = tmp$ret$2;
    var tmp$ret$5;
    // Inline function 'kotlin.collections.map' call
    var tmp1_map = source2Quot.h1w();
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
    var tmp0_iterator_0 = tmp1_map.f();
    while (tmp0_iterator_0.g()) {
      var item_0 = tmp0_iterator_0.h();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.vectsp.Companion.getInducedMap.<anonymous>' call
      tmp$ret$3 = source2Quot.f1r().k1r(item_0);
      tmp0_mapTo_0.a(tmp$ret$3);
    }
    tmp$ret$4 = tmp0_mapTo_0;
    tmp$ret$5 = tmp$ret$4;
    var basisLift2 = tmp$ret$5;
    var tmp$ret$11;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$10;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_1 = ArrayList_init_$Create$(collectionSizeOrDefault(basisLift1, 10));
    var tmp0_iterator_1 = basisLift1.f();
    while (tmp0_iterator_1.g()) {
      var item_1 = tmp0_iterator_1.h();
      var tmp$ret$9;
      // Inline function 'com.github.shwaka.kohomology.vectsp.Companion.getInducedMap.<anonymous>' call
      var tmp$ret$8;
      // Inline function 'kotlin.collections.map' call
      var tmp$ret$7;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_2 = ArrayList_init_$Create$(collectionSizeOrDefault(basisLift2, 10));
      var tmp0_iterator_2 = basisLift2.f();
      while (tmp0_iterator_2.g()) {
        var item_2 = tmp0_iterator_2.h();
        var tmp$ret$6;
        // Inline function 'com.github.shwaka.kohomology.vectsp.Companion.getInducedMap.<anonymous>.<anonymous>' call
        tmp$ret$6 = targetQuot.s1q().k1r(bilinearMap.o1u(item_1, item_2));
        tmp0_mapTo_2.a(tmp$ret$6);
      }
      tmp$ret$7 = tmp0_mapTo_2;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp0_mapTo_1.a(tmp$ret$9);
    }
    tmp$ret$10 = tmp0_mapTo_1;
    tmp$ret$11 = tmp$ret$10;
    var valueList = tmp$ret$11;
    return new ValueBilinearMap(source1Quot, source2Quot, targetQuot, bilinearMap.u1j(), valueList);
  }
  function getInducedMap_0($this, bilinearMap, source1SubQuot, source2SubQuot, targetSubQuot) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = source1SubQuot.h1w();
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.Companion.getInducedMap.<anonymous>' call
      tmp$ret$0 = source1SubQuot.f1r().k1r(item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var basisLift1 = tmp$ret$2;
    var tmp$ret$5;
    // Inline function 'kotlin.collections.map' call
    var tmp1_map = source2SubQuot.h1w();
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
    var tmp0_iterator_0 = tmp1_map.f();
    while (tmp0_iterator_0.g()) {
      var item_0 = tmp0_iterator_0.h();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.vectsp.Companion.getInducedMap.<anonymous>' call
      tmp$ret$3 = source2SubQuot.f1r().k1r(item_0);
      tmp0_mapTo_0.a(tmp$ret$3);
    }
    tmp$ret$4 = tmp0_mapTo_0;
    tmp$ret$5 = tmp$ret$4;
    var basisLift2 = tmp$ret$5;
    var tmp$ret$11;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$10;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_1 = ArrayList_init_$Create$(collectionSizeOrDefault(basisLift1, 10));
    var tmp0_iterator_1 = basisLift1.f();
    while (tmp0_iterator_1.g()) {
      var item_1 = tmp0_iterator_1.h();
      var tmp$ret$9;
      // Inline function 'com.github.shwaka.kohomology.vectsp.Companion.getInducedMap.<anonymous>' call
      var tmp$ret$8;
      // Inline function 'kotlin.collections.map' call
      var tmp$ret$7;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_2 = ArrayList_init_$Create$(collectionSizeOrDefault(basisLift2, 10));
      var tmp0_iterator_2 = basisLift2.f();
      while (tmp0_iterator_2.g()) {
        var item_2 = tmp0_iterator_2.h();
        var tmp$ret$6;
        // Inline function 'com.github.shwaka.kohomology.vectsp.Companion.getInducedMap.<anonymous>.<anonymous>' call
        tmp$ret$6 = targetSubQuot.s1q().k1r(bilinearMap.o1u(item_1, item_2));
        tmp0_mapTo_2.a(tmp$ret$6);
      }
      tmp$ret$7 = tmp0_mapTo_2;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp0_mapTo_1.a(tmp$ret$9);
    }
    tmp$ret$10 = tmp0_mapTo_1;
    tmp$ret$11 = tmp$ret$10;
    var valueList = tmp$ret$11;
    return new ValueBilinearMap(source1SubQuot, source2SubQuot, targetSubQuot, bilinearMap.u1j(), valueList);
  }
  function ValueBilinearMap_init_$Init$(source1, source2, target, matrixSpace, getValue, $this) {
    var tmp$ret$5;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = source1.d1v();
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.vectsp.ValueBilinearMap.<init>.<anonymous>' call
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map_0 = source2.d1v();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
      var tmp0_iterator_0 = tmp0_map_0.f();
      while (tmp0_iterator_0.g()) {
        var item_0 = tmp0_iterator_0.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.vectsp.ValueBilinearMap.<init>.<anonymous>.<anonymous>' call
        tmp$ret$0 = getValue(item, item_0);
        tmp0_mapTo_0.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo_0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_mapTo.a(tmp$ret$3);
    }
    tmp$ret$4 = tmp0_mapTo;
    tmp$ret$5 = tmp$ret$4;
    ValueBilinearMap.call($this, source1, source2, target, matrixSpace, tmp$ret$5);
    return $this;
  }
  function ValueBilinearMap_init_$Create$(source1, source2, target, matrixSpace, getValue) {
    return ValueBilinearMap_init_$Init$(source1, source2, target, matrixSpace, getValue, Object.create(ValueBilinearMap.prototype));
  }
  function Companion_69() {
    Companion_instance_69 = this;
  }
  Companion_69.$metadata$ = objectMeta('Companion');
  var Companion_instance_69;
  function Companion_getInstance_70() {
    if (Companion_instance_69 == null)
      new Companion_69();
    return Companion_instance_69;
  }
  function ValueBilinearMap(source1, source2, target, matrixSpace, values) {
    Companion_getInstance_70();
    this.w2u_1 = source1;
    this.x2u_1 = source2;
    this.y2u_1 = target;
    this.z2u_1 = matrixSpace;
    this.a2v_1 = values;
  }
  ValueBilinearMap.prototype.j1u = function () {
    return this.w2u_1;
  };
  ValueBilinearMap.prototype.k1u = function () {
    return this.x2u_1;
  };
  ValueBilinearMap.prototype.p1n = function () {
    return this.y2u_1;
  };
  ValueBilinearMap.prototype.u1j = function () {
    return this.z2u_1;
  };
  ValueBilinearMap.prototype.o1u = function (vector1, vector2) {
    // Inline function 'kotlin.require' call
    var tmp0_require = this.w2u_1.b2v(vector1);
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.ValueBilinearMap.invoke.<anonymous>' call
      tmp$ret$0 = 'Invalid vector is given as an argument of BilinearMap: ' + vector1 + ' is not an element of ' + this.w2u_1;
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.require' call
    var tmp1_require = this.x2u_1.b2v(vector2);
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp1_require) {
      var tmp$ret$1;
      // Inline function 'com.github.shwaka.kohomology.vectsp.ValueBilinearMap.invoke.<anonymous>' call
      tmp$ret$1 = 'Invalid vector is given as an argument of BilinearMap: ' + vector2 + ' is not an element of ' + this.x2u_1;
      var message_0 = tmp$ret$1;
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
    var tmp$ret$17;
    // Inline function 'kotlin.run' call
    var tmp2_run = this.y2u_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$16;
    // Inline function 'com.github.shwaka.kohomology.vectsp.ValueBilinearMap.invoke.<anonymous>' call
    var tmp$ret$15;
    // Inline function 'kotlin.collections.mapValues' call
    var tmp0_mapValues = vector1.m1u_1.y2m();
    var tmp$ret$14;
    // Inline function 'kotlin.collections.mapValuesTo' call
    var tmp1_mapValuesTo = LinkedHashMap_init_$Create$_0(mapCapacity(tmp0_mapValues.i()));
    var tmp$ret$13;
    // Inline function 'kotlin.collections.associateByTo' call
    var tmp0_associateByTo = tmp0_mapValues.d1();
    var tmp0_iterator = tmp0_associateByTo.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp$ret$2;
      // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
      tmp$ret$2 = element.e1();
      var tmp = tmp$ret$2;
      var tmp$ret$12;
      // Inline function 'com.github.shwaka.kohomology.vectsp.ValueBilinearMap.invoke.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'kotlin.collections.component1' call
      tmp$ret$3 = element.e1();
      var ind1 = tmp$ret$3;
      var tmp$ret$4;
      // Inline function 'kotlin.collections.component2' call
      tmp$ret$4 = element.f1();
      var coeff1 = tmp$ret$4;
      var tmp$ret$11;
      // Inline function 'kotlin.collections.mapValues' call
      var tmp0_mapValues_0 = vector2.m1u_1.y2m();
      var tmp$ret$10;
      // Inline function 'kotlin.collections.mapValuesTo' call
      var tmp1_mapValuesTo_0 = LinkedHashMap_init_$Create$_0(mapCapacity(tmp0_mapValues_0.i()));
      var tmp$ret$9;
      // Inline function 'kotlin.collections.associateByTo' call
      var tmp0_associateByTo_0 = tmp0_mapValues_0.d1();
      var tmp0_iterator_0 = tmp0_associateByTo_0.f();
      while (tmp0_iterator_0.g()) {
        var element_0 = tmp0_iterator_0.h();
        var tmp$ret$5;
        // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
        tmp$ret$5 = element_0.e1();
        var tmp_0 = tmp$ret$5;
        var tmp$ret$8;
        // Inline function 'com.github.shwaka.kohomology.vectsp.ValueBilinearMap.invoke.<anonymous>.<anonymous>.<anonymous>' call
        var tmp$ret$6;
        // Inline function 'kotlin.collections.component1' call
        tmp$ret$6 = element_0.e1();
        var ind2 = tmp$ret$6;
        var tmp$ret$7;
        // Inline function 'kotlin.collections.component2' call
        tmp$ret$7 = element_0.f1();
        var coeff2 = tmp$ret$7;
        tmp$ret$8 = tmp2_run.c2v(tmp2_run.c2v(this.a2v_1.l(ind1).l(ind2), coeff1), coeff2);
        tmp1_mapValuesTo_0.u(tmp_0, tmp$ret$8);
      }
      tmp$ret$9 = tmp1_mapValuesTo_0;
      tmp$ret$10 = tmp$ret$9;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = tmp2_run.d2v(tmp$ret$11.m3());
      tmp1_mapValuesTo.u(tmp, tmp$ret$12);
    }
    tmp$ret$13 = tmp1_mapValuesTo;
    tmp$ret$14 = tmp$ret$13;
    tmp$ret$15 = tmp$ret$14;
    tmp$ret$16 = tmp2_run.d2v(tmp$ret$15.m3());
    tmp$ret$17 = tmp$ret$16;
    return tmp$ret$17;
  };
  ValueBilinearMap.prototype.d1u = function (source1Quot, source2Quot, targetQuot) {
    return getInducedMap(Companion_getInstance_70(), this, source1Quot, source2Quot, targetQuot);
  };
  ValueBilinearMap.prototype.e1u = function (source1SubQuot, source2SubQuot, targetSubQuot) {
    return getInducedMap_0(Companion_getInstance_70(), this, source1SubQuot, source2SubQuot, targetSubQuot);
  };
  ValueBilinearMap.$metadata$ = classMeta('ValueBilinearMap', [BilinearMap]);
  function DirectSumBasis(index, basisName) {
    this.j29_1 = index;
    this.k29_1 = basisName;
  }
  DirectSumBasis.prototype.e2v = function () {
    return this.k29_1;
  };
  DirectSumBasis.prototype.toString = function () {
    return 'DirectSumBasis(index=' + this.j29_1 + ', basisName=' + this.k29_1 + ')';
  };
  DirectSumBasis.prototype.hashCode = function () {
    var result = this.j29_1;
    result = imul(result, 31) + (this.k29_1 == null ? 0 : hashCode(this.k29_1)) | 0;
    return result;
  };
  DirectSumBasis.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof DirectSumBasis))
      return false;
    var tmp0_other_with_cast = other instanceof DirectSumBasis ? other : THROW_CCE();
    if (!(this.j29_1 === tmp0_other_with_cast.j29_1))
      return false;
    if (!equals(this.k29_1, tmp0_other_with_cast.k29_1))
      return false;
    return true;
  };
  DirectSumBasis.$metadata$ = classMeta('DirectSumBasis', [BasisName]);
  function _get_basisNameToIndex__26cf4t($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = basisNameToIndex$factory();
    tmp$ret$0 = $this.b29_1.f1();
    return tmp$ret$0;
  }
  function DirectSum_init_$Init$(vectorSpaceList, matrixSpace, getInternalPrintConfig, $this) {
    DirectSum.call($this, new DirectSumFactory(vectorSpaceList, matrixSpace, getInternalPrintConfig));
    return $this;
  }
  function DirectSum_init_$Create$(vectorSpaceList, matrixSpace, getInternalPrintConfig) {
    return DirectSum_init_$Init$(vectorSpaceList, matrixSpace, getInternalPrintConfig, Object.create(DirectSum.prototype));
  }
  function _get_inclusionList__tlg4i1($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = inclusionList$factory();
    tmp$ret$0 = $this.f29_1.f1();
    return tmp$ret$0;
  }
  function DirectSum$basisNameToIndex$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$2;
      // Inline function 'kotlin.collections.mapIndexed' call
      var tmp0_mapIndexed = this$0.y28_1;
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapIndexedTo' call
      var tmp0_mapIndexedTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_mapIndexed, 10));
      var index = 0;
      var tmp0_iterator = tmp0_mapIndexed.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.vectsp.DirectSum.basisNameToIndex$delegate.<anonymous>.<anonymous>' call
        var tmp1 = index;
        index = tmp1 + 1 | 0;
        var tmp1__anonymous__uwfjfc = checkIndexOverflow(tmp1);
        tmp$ret$0 = new Pair(item, tmp1__anonymous__uwfjfc);
        tmp0_mapIndexedTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapIndexedTo;
      tmp$ret$2 = tmp$ret$1;
      return toMap(tmp$ret$2);
    };
  }
  function DirectSum$inclusionList$delegate$lambda(this$0) {
    return function () {
      var one = this$0.d29_1.e1k().n1m();
      var tmp$ret$8;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = until(0, this$0.e29_1);
      var tmp$ret$7;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var inductionVariable = tmp0_map.m1_1;
      var last = tmp0_map.n1_1;
      if (inductionVariable <= last)
        do {
          var item = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp$ret$6;
          // Inline function 'com.github.shwaka.kohomology.vectsp.DirectSum.inclusionList$delegate.<anonymous>.<anonymous>' call
          var tmp$ret$2;
          // Inline function 'kotlin.collections.map' call
          var tmp0_map_0 = until(0, item);
          var tmp$ret$1;
          // Inline function 'kotlin.collections.mapTo' call
          var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map_0, 10));
          var inductionVariable_0 = tmp0_map_0.m1_1;
          var last_0 = tmp0_map_0.n1_1;
          if (inductionVariable_0 <= last_0)
            do {
              var item_0 = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              var tmp$ret$0;
              // Inline function 'com.github.shwaka.kohomology.vectsp.DirectSum.inclusionList$delegate.<anonymous>.<anonymous>.<anonymous>' call
              tmp$ret$0 = this$0.c29_1.l(item_0).q25();
              tmp0_mapTo_0.a(tmp$ret$0);
            }
             while (!(item_0 === last_0));
          tmp$ret$1 = tmp0_mapTo_0;
          tmp$ret$2 = tmp$ret$1;
          var accumulatedDim = sum(tmp$ret$2);
          var currentDim = this$0.c29_1.l(item).q25();
          var tmp$ret$5;
          // Inline function 'kotlin.collections.map' call
          var tmp1_map = until(0, currentDim);
          var tmp$ret$4;
          // Inline function 'kotlin.collections.mapTo' call
          var tmp0_mapTo_1 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
          var inductionVariable_1 = tmp1_map.m1_1;
          var last_1 = tmp1_map.n1_1;
          if (inductionVariable_1 <= last_1)
            do {
              var item_1 = inductionVariable_1;
              inductionVariable_1 = inductionVariable_1 + 1 | 0;
              var tmp$ret$3;
              // Inline function 'com.github.shwaka.kohomology.vectsp.DirectSum.inclusionList$delegate.<anonymous>.<anonymous>.<anonymous>' call
              tmp$ret$3 = new Pair(accumulatedDim + item_1 | 0, mapOf_0(to(item_1, one)));
              tmp0_mapTo_1.a(tmp$ret$3);
            }
             while (!(item_1 === last_1));
          tmp$ret$4 = tmp0_mapTo_1;
          tmp$ret$5 = tmp$ret$4;
          var rowMap = toMap(tmp$ret$5);
          var matrix = this$0.d29_1.g2k(rowMap, this$0.q25(), currentDim);
          tmp$ret$6 = Companion_getInstance_71().f2v(this$0.c29_1.l(item), this$0, this$0.d29_1, matrix);
          tmp0_mapTo.a(tmp$ret$6);
        }
         while (!(item === last));
      tmp$ret$7 = tmp0_mapTo;
      tmp$ret$8 = tmp$ret$7;
      return tmp$ret$8;
    };
  }
  function DirectSum$projectionList$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$4;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = until(0, this$0.e29_1);
      var tmp$ret$3;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var inductionVariable = tmp0_map.m1_1;
      var last = tmp0_map.n1_1;
      if (inductionVariable <= last)
        do {
          var item = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp$ret$2;
          // Inline function 'com.github.shwaka.kohomology.vectsp.DirectSum.projectionList$delegate.<anonymous>.<anonymous>' call
          var tmp$ret$1;
          // Inline function 'kotlin.run' call
          var tmp0_run = this$0.d29_1.c1j();
          // Inline function 'kotlin.contracts.contract' call
          var tmp$ret$0;
          // Inline function 'com.github.shwaka.kohomology.vectsp.DirectSum.projectionList$delegate.<anonymous>.<anonymous>.<anonymous>' call
          tmp$ret$0 = tmp0_run.d2o(_get_inclusionList__tlg4i1(this$0).l(item).j1r_1);
          tmp$ret$1 = tmp$ret$0;
          var matrix = tmp$ret$1;
          tmp$ret$2 = Companion_getInstance_71().f2v(this$0, this$0.c29_1.l(item), this$0.d29_1, matrix);
          tmp0_mapTo.a(tmp$ret$2);
        }
         while (!(item === last));
      tmp$ret$3 = tmp0_mapTo;
      tmp$ret$4 = tmp$ret$3;
      return tmp$ret$4;
    };
  }
  function DirectSum$toString$lambda(it) {
    return toString(it);
  }
  function DirectSum(factory) {
    this.x28_1 = factory.j2v_1;
    this.y28_1 = factory.k2v_1;
    this.z28_1 = factory.i2v_1;
    this.a29_1 = Companion_getInstance_83().l2v(this);
    var tmp = this;
    tmp.b29_1 = lazy(DirectSum$basisNameToIndex$delegate$lambda(this));
    this.c29_1 = factory.g2v_1;
    this.d29_1 = factory.h2v_1;
    this.e29_1 = this.c29_1.i();
    var tmp_0 = this;
    tmp_0.f29_1 = lazy(DirectSum$inclusionList$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.g29_1 = lazy(DirectSum$projectionList$delegate$lambda(this));
  }
  DirectSum.prototype.x1j = function () {
    return this.x28_1;
  };
  DirectSum.prototype.d1v = function () {
    return this.y28_1;
  };
  DirectSum.prototype.z1j = function () {
    return this.z28_1;
  };
  DirectSum.prototype.c1j = function () {
    return this.a29_1;
  };
  DirectSum.prototype.m2v = function (basisName) {
    var tmp0_elvis_lhs = _get_basisNameToIndex__26cf4t(this).t(basisName);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw NoSuchElementException_init_$Create$_0('' + basisName + ' is not a name of basis element of the vector space ' + this);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  DirectSum.prototype.n2v = function (basisName) {
    return this.m2v(basisName instanceof DirectSumBasis ? basisName : THROW_CCE());
  };
  DirectSum.prototype.o2v = function () {
    return this.c29_1;
  };
  DirectSum.prototype.u1j = function () {
    return this.d29_1;
  };
  DirectSum.prototype.p2v = function (index) {
    if (index < 0)
      throw IndexOutOfBoundsException_init_$Create$('index must be non-negative');
    if (index >= this.e29_1)
      throw IndexOutOfBoundsException_init_$Create$('index must be smaller than the number of vector spaces in the direct sum');
    return _get_inclusionList__tlg4i1(this).l(index);
  };
  DirectSum.prototype.h29 = function (vectorList) {
    if (!(vectorList.i() === this.e29_1))
      throw IllegalArgumentException_init_$Create$('The size (' + vectorList.i() + ') of vectorList must be equal to the number (' + this.e29_1 + ') of vector spaces in the direct sum');
    var tmp$ret$2;
    // Inline function 'kotlin.collections.mapIndexed' call
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapIndexedTo' call
    var tmp0_mapIndexedTo = ArrayList_init_$Create$(collectionSizeOrDefault(vectorList, 10));
    var index = 0;
    var tmp0_iterator = vectorList.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.DirectSum.fromVectorList.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      var tmp0__anonymous__q1qw7t = checkIndexOverflow(tmp1);
      tmp$ret$0 = this.p2v(tmp0__anonymous__q1qw7t).k1r(item);
      tmp0_mapIndexedTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapIndexedTo;
    tmp$ret$2 = tmp$ret$1;
    var vectorListInDirectSum = tmp$ret$2;
    var tmp$ret$4;
    // Inline function 'kotlin.run' call
    var tmp1_run = this.a29_1;
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$3;
    // Inline function 'com.github.shwaka.kohomology.vectsp.DirectSum.fromVectorList.<anonymous>' call
    tmp$ret$3 = tmp1_run.d2v(vectorListInDirectSum);
    tmp$ret$4 = tmp$ret$3;
    return tmp$ret$4;
  };
  DirectSum.prototype.toString = function () {
    return 'DirectSum(' + joinToString$default(this.c29_1, ', ', null, null, 0, null, DirectSum$toString$lambda, 30, null) + ')';
  };
  DirectSum.$metadata$ = classMeta('DirectSum', [VectorSpace]);
  function DirectSumFactory(vectorSpaceList, matrixSpace, getInternalPrintConfig) {
    this.g2v_1 = vectorSpaceList;
    this.h2v_1 = matrixSpace;
    this.i2v_1 = getInternalPrintConfig;
    this.j2v_1 = this.h2v_1.x1j();
    var tmp = this;
    var tmp$ret$5;
    // Inline function 'kotlin.collections.mapIndexed' call
    var tmp0_mapIndexed = this.g2v_1;
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapIndexedTo' call
    var tmp0_mapIndexedTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_mapIndexed, 10));
    var index = 0;
    var tmp0_iterator = tmp0_mapIndexed.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.vectsp.DirectSumFactory.basisNames.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      var tmp1__anonymous__uwfjfc = checkIndexOverflow(tmp1);
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp0_map = item.d1v();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
      var tmp0_iterator_0 = tmp0_map.f();
      while (tmp0_iterator_0.g()) {
        var item_0 = tmp0_iterator_0.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.vectsp.DirectSumFactory.basisNames.<anonymous>.<anonymous>' call
        tmp$ret$0 = new DirectSumBasis(tmp1__anonymous__uwfjfc, item_0);
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_mapIndexedTo.a(tmp$ret$3);
    }
    tmp$ret$4 = tmp0_mapIndexedTo;
    tmp$ret$5 = tmp$ret$4;
    tmp.k2v_1 = flatten(tmp$ret$5);
  }
  DirectSumFactory.$metadata$ = classMeta('DirectSumFactory');
  function basisNameToIndex$factory() {
    return getPropertyCallableRef('basisNameToIndex', 1, KProperty1, function (receiver) {
      return _get_basisNameToIndex__26cf4t(receiver);
    }, null);
  }
  function inclusionList$factory() {
    return getPropertyCallableRef('inclusionList', 1, KProperty1, function (receiver) {
      return _get_inclusionList__tlg4i1(receiver);
    }, null);
  }
  function Companion_70() {
    Companion_instance_70 = this;
  }
  Companion_70.prototype.f2v = function (source, target, matrixSpace, matrix) {
    return new LinearMap(matrixSpace, source, target, matrix);
  };
  Companion_70.prototype.e1v = function (source, target, matrixSpace, vectors) {
    if (!(vectors.i() === source.q25()))
      throw new InvalidSizeException('The number of vectors must be the same as the dimension of the source vector space');
    var tmp0_iterator = vectors.f();
    while (tmp0_iterator.g()) {
      var vector = tmp0_iterator.h();
      if (!equals(vector.n1u_1, target))
        throw IllegalArgumentException_init_$Create$('The vector space for each vector must be the same as the target vector space');
    }
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(vectors, 10));
    var tmp0_iterator_0 = vectors.f();
    while (tmp0_iterator_0.g()) {
      var item = tmp0_iterator_0.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.Companion.fromVectors.<anonymous>' call
      tmp$ret$0 = item.v2v();
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var numVectors = tmp$ret$2;
    var matrix = matrixSpace.z2l(numVectors, target.q25());
    return new LinearMap(matrixSpace, source, target, matrix);
  };
  Companion_70.$metadata$ = objectMeta('Companion');
  var Companion_instance_70;
  function Companion_getInstance_71() {
    if (Companion_instance_70 == null)
      new Companion_70();
    return Companion_instance_70;
  }
  function LinearMap(matrixSpace, source, target, matrix) {
    Companion_getInstance_71();
    this.g1r_1 = matrixSpace;
    this.h1r_1 = source;
    this.i1r_1 = target;
    this.j1r_1 = matrix;
    // Inline function 'kotlin.require' call
    var tmp0_require = this.j1r_1.d2m() === this.h1r_1.q25();
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.LinearMap.<anonymous>' call
      tmp$ret$0 = 'The matrix has ' + this.j1r_1.d2m() + ' columns, ' + ('but the source vector space has dimension ' + this.h1r_1.q25() + '.');
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.require' call
    var tmp1_require = this.j1r_1.c2m() === this.i1r_1.q25();
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp1_require) {
      var tmp$ret$1;
      // Inline function 'com.github.shwaka.kohomology.vectsp.LinearMap.<anonymous>' call
      tmp$ret$1 = 'The matrix has ' + this.j1r_1.c2m() + ' rows, ' + ('but the target vector space has dimension ' + this.i1r_1.q25() + '.');
      var message_0 = tmp$ret$1;
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
  }
  LinearMap.prototype.o1n = function () {
    return this.h1r_1;
  };
  LinearMap.prototype.p1n = function () {
    return this.i1r_1;
  };
  LinearMap.prototype.l2k = function () {
    return this.j1r_1;
  };
  LinearMap.prototype.k1r = function (vector) {
    if (!this.h1r_1.b2v(vector))
      throw IllegalArgumentException_init_$Create$('Invalid vector is given as an argument of LinearMap: ' + vector + ' is not an element of ' + this.h1r_1);
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.g1r_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.vectsp.LinearMap.invoke.<anonymous>' call
    tmp$ret$0 = tmp0_run.b2o(this.j1r_1, vector.m1u_1);
    tmp$ret$1 = tmp$ret$0;
    var numVector = tmp$ret$1;
    return this.i1r_1.t2v(numVector);
  };
  LinearMap.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null)
      return false;
    if (!getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof LinearMap)
      other;
    else
      THROW_CCE();
    if (!equals(this.h1r_1, other.h1r_1))
      return false;
    if (!equals(this.i1r_1, other.i1r_1))
      return false;
    if (!equals(this.j1r_1, other.j1r_1))
      return false;
    return true;
  };
  LinearMap.prototype.hashCode = function () {
    var result = hashCode(this.h1r_1);
    result = imul(31, result) + hashCode(this.i1r_1) | 0;
    result = imul(31, result) + hashCode(this.j1r_1) | 0;
    return result;
  };
  LinearMap.prototype.w2v = function () {
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.g1r_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.vectsp.LinearMap.kernelBasis.<anonymous>' call
    tmp$ret$0 = tmp0_run.e2o(this.j1r_1);
    tmp$ret$1 = tmp$ret$0;
    var numVectorList = tmp$ret$1;
    var tmp$ret$4;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$3;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(numVectorList, 10));
    var tmp0_iterator = numVectorList.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$2;
      // Inline function 'com.github.shwaka.kohomology.vectsp.LinearMap.kernelBasis.<anonymous>' call
      tmp$ret$2 = this.h1r_1.t2v(item);
      tmp0_mapTo.a(tmp$ret$2);
    }
    tmp$ret$3 = tmp0_mapTo;
    tmp$ret$4 = tmp$ret$3;
    return tmp$ret$4;
  };
  LinearMap.prototype.x1n = function () {
    return Companion_getInstance_79().i1u(this.g1r_1, this.h1r_1, this.w2v());
  };
  LinearMap.prototype.x2v = function () {
    var numVectorList = this.j1r_1.e2m();
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(numVectorList, 10));
    var tmp0_iterator = numVectorList.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.LinearMap.imageGenerator.<anonymous>' call
      tmp$ret$0 = this.i1r_1.t2v(item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  LinearMap.prototype.t1n = function () {
    return Companion_getInstance_79().i1u(this.g1r_1, this.i1r_1, this.x2v());
  };
  LinearMap.prototype.j1v = function (vector) {
    if (!this.i1r_1.b2v(vector))
      throw IllegalArgumentException_init_$Create$('Invalid vector is given: ' + vector + ' is not an element of ' + this.i1r_1);
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.g1r_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.vectsp.LinearMap.findPreimage.<anonymous>' call
    tmp$ret$0 = tmp0_run.f2o(this.j1r_1, vector.m1u_1);
    tmp$ret$1 = tmp$ret$0;
    var tmp0_safe_receiver = tmp$ret$1;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$3;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$2;
      // Inline function 'com.github.shwaka.kohomology.vectsp.LinearMap.findPreimage.<anonymous>' call
      tmp$ret$2 = this.h1r_1.t2v(tmp0_safe_receiver);
      tmp$ret$3 = tmp$ret$2;
      tmp = tmp$ret$3;
    }
    return tmp;
  };
  LinearMap.prototype.g1v = function (sourceSub, targetSub) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = sourceSub.h1w();
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.LinearMap.induce.<anonymous>' call
      tmp$ret$0 = sourceSub.n1o().k1r(item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var basisLift = tmp$ret$2;
    var tmp$ret$5;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(basisLift, 10));
    var tmp0_iterator_0 = basisLift.f();
    while (tmp0_iterator_0.g()) {
      var item_0 = tmp0_iterator_0.h();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.vectsp.LinearMap.induce.<anonymous>' call
      tmp$ret$3 = targetSub.e20().k1r(this.k1r(item_0));
      tmp0_mapTo_0.a(tmp$ret$3);
    }
    tmp$ret$4 = tmp0_mapTo_0;
    tmp$ret$5 = tmp$ret$4;
    var vectors = tmp$ret$5;
    return Companion_getInstance_71().e1v(sourceSub, targetSub, this.g1r_1, vectors);
  };
  LinearMap.prototype.h1v = function (sourceQuot, targetQuot) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = sourceQuot.h1w();
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.LinearMap.induce.<anonymous>' call
      tmp$ret$0 = sourceQuot.f1r().k1r(item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var basisLift = tmp$ret$2;
    var tmp$ret$5;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(basisLift, 10));
    var tmp0_iterator_0 = basisLift.f();
    while (tmp0_iterator_0.g()) {
      var item_0 = tmp0_iterator_0.h();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.vectsp.LinearMap.induce.<anonymous>' call
      tmp$ret$3 = targetQuot.s1q().k1r(this.k1r(item_0));
      tmp0_mapTo_0.a(tmp$ret$3);
    }
    tmp$ret$4 = tmp0_mapTo_0;
    tmp$ret$5 = tmp$ret$4;
    var vectors = tmp$ret$5;
    return Companion_getInstance_71().e1v(sourceQuot, targetQuot, this.g1r_1, vectors);
  };
  LinearMap.prototype.i1v = function (sourceSubQuot, targetSubQuot) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = sourceSubQuot.h1w();
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.LinearMap.induce.<anonymous>' call
      tmp$ret$0 = sourceSubQuot.f1r().k1r(item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var basisLift = tmp$ret$2;
    var tmp$ret$5;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(basisLift, 10));
    var tmp0_iterator_0 = basisLift.f();
    while (tmp0_iterator_0.g()) {
      var item_0 = tmp0_iterator_0.h();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.vectsp.LinearMap.induce.<anonymous>' call
      tmp$ret$3 = targetSubQuot.s1q().k1r(this.k1r(item_0));
      tmp0_mapTo_0.a(tmp$ret$3);
    }
    tmp$ret$4 = tmp0_mapTo_0;
    tmp$ret$5 = tmp$ret$4;
    var vectors = tmp$ret$5;
    return Companion_getInstance_71().e1v(sourceSubQuot, targetSubQuot, this.g1r_1, vectors);
  };
  LinearMap.$metadata$ = classMeta('LinearMap');
  function QuotBasis$Companion$convertGetInternalPrintConfig$lambda$lambda($printer) {
    return function (basisName) {
      return '[' + $printer.u29(basisName.y2v_1) + ']';
    };
  }
  function QuotBasis$Companion$convertGetInternalPrintConfig$lambda($getInternalPrintConfig) {
    return function (printConfig) {
      var internalPrintConfig = $getInternalPrintConfig(printConfig);
      var printer = Printer_init_$Create$(printConfig);
      return new InternalPrintConfig(internalPrintConfig.g2u_1, QuotBasis$Companion$convertGetInternalPrintConfig$lambda$lambda(printer), null);
    };
  }
  function Companion_71() {
    Companion_instance_71 = this;
  }
  Companion_71.prototype.e1z = function (getInternalPrintConfig) {
    return QuotBasis$Companion$convertGetInternalPrintConfig$lambda(getInternalPrintConfig);
  };
  Companion_71.$metadata$ = objectMeta('Companion');
  var Companion_instance_71;
  function Companion_getInstance_72() {
    if (Companion_instance_71 == null)
      new Companion_71();
    return Companion_instance_71;
  }
  function QuotBasis(vector) {
    Companion_getInstance_72();
    this.y2v_1 = vector;
  }
  QuotBasis.prototype.toString = function () {
    return '[' + this.y2v_1 + ']';
  };
  QuotBasis.prototype.hashCode = function () {
    return this.y2v_1.hashCode();
  };
  QuotBasis.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof QuotBasis))
      return false;
    var tmp0_other_with_cast = other instanceof QuotBasis ? other : THROW_CCE();
    if (!this.y2v_1.equals(tmp0_other_with_cast.y2v_1))
      return false;
    return true;
  };
  QuotBasis.$metadata$ = classMeta('QuotBasis', [BasisName]);
  function Companion_72() {
    Companion_instance_72 = this;
  }
  Companion_72.prototype.f1z = function (matrixSpace, totalVectorSpace, quotientGenerator) {
    var factory = new QuotFactory(matrixSpace, totalVectorSpace, quotientGenerator.h1u());
    return new QuotVectorSpaceImpl(factory);
  };
  Companion_72.$metadata$ = objectMeta('Companion');
  var Companion_instance_72;
  function Companion_getInstance_73() {
    if (Companion_instance_72 == null)
      new Companion_72();
    return Companion_instance_72;
  }
  function QuotVectorSpace() {
  }
  QuotVectorSpace.$metadata$ = interfaceMeta('QuotVectorSpace', [VectorSpace]);
  function _get_rowEchelonForm__ymu65r($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = rowEchelonForm$factory();
    tmp$ret$0 = $this.d2w_1.f1();
    return tmp$ret$0;
  }
  function _get_quotientDim__c5gs2c($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = quotientDim$factory();
    tmp$ret$0 = $this.e2w_1.f1();
    return tmp$ret$0;
  }
  function _get_basisIndices__7ymdcu($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = basisIndices$factory();
    tmp$ret$0 = $this.f2w_1.f1();
    return tmp$ret$0;
  }
  function _get_transformationMatrix__anz1r3($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = transformationMatrix$factory();
    tmp$ret$0 = $this.g2w_1.f1();
    return tmp$ret$0;
  }
  function Companion_73() {
    Companion_instance_73 = this;
  }
  Companion_73.prototype.h2w = function (_this__u8e3s4, vectors, dim) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(vectors, 10));
    var tmp0_iterator = vectors.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.Companion.fromVectors.<anonymous>' call
      tmp$ret$0 = item.v2v();
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var numVectorList = tmp$ret$2;
    return _this__u8e3s4.z2l(numVectorList, dim);
  };
  Companion_73.$metadata$ = objectMeta('Companion');
  var Companion_instance_73;
  function Companion_getInstance_74() {
    if (Companion_instance_73 == null)
      new Companion_73();
    return Companion_instance_73;
  }
  function QuotFactory$rowEchelonForm$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$3;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.z2v_1.c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$2;
      // Inline function 'com.github.shwaka.kohomology.vectsp.QuotFactory.rowEchelonForm$delegate.<anonymous>.<anonymous>' call
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.QuotFactory.rowEchelonForm$delegate.<anonymous>.<anonymous>.<anonymous>' call
      var quotientMatrix = Companion_getInstance_74().h2w(tmp0_run.u1j(), this$0.b2w_1, this$0.a2w_1.q25());
      var id = tmp0_run.u1j().a2m(this$0.a2w_1.q25());
      tmp$ret$0 = tmp0_run.y2n(listOf_0([quotientMatrix, id]));
      tmp$ret$1 = tmp$ret$0;
      var joinedMatrix = tmp$ret$1;
      tmp$ret$2 = tmp0_run.z2n(joinedMatrix);
      tmp$ret$3 = tmp$ret$2;
      return tmp$ret$3;
    };
  }
  function QuotFactory$quotientDim$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$2;
      // Inline function 'kotlin.collections.filter' call
      var tmp0_filter = _get_rowEchelonForm__ymu65r(this$0).n2k();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.filterTo' call
      var tmp0_filterTo = ArrayList_init_$Create$_0();
      var tmp0_iterator = tmp0_filter.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.vectsp.QuotFactory.quotientDim$delegate.<anonymous>.<anonymous>' call
        tmp$ret$0 = element < this$0.b2w_1.i();
        if (tmp$ret$0) {
          tmp0_filterTo.a(element);
        }
      }
      tmp$ret$1 = tmp0_filterTo;
      tmp$ret$2 = tmp$ret$1;
      return tmp$ret$2.i();
    };
  }
  function QuotFactory$basisIndices$delegate$lambda(this$0) {
    return function () {
      return slice(_get_rowEchelonForm__ymu65r(this$0).n2k(), until(_get_quotientDim__c5gs2c(this$0), this$0.a2w_1.q25()));
    };
  }
  function QuotFactory$transformationMatrix$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.z2v_1.c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.QuotFactory.transformationMatrix$delegate.<anonymous>.<anonymous>' call
      var size = _get_rowEchelonForm__ymu65r(this$0).m2k().d2m();
      var dim = this$0.a2w_1.q25();
      tmp$ret$0 = tmp0_run.a2o(_get_rowEchelonForm__ymu65r(this$0).m2k(), until(size - dim | 0, size));
      tmp$ret$1 = tmp$ret$0;
      return tmp$ret$1;
    };
  }
  function QuotFactory(matrixSpace, totalVectorSpace, quotientGenerator) {
    Companion_getInstance_74();
    this.z2v_1 = matrixSpace;
    this.a2w_1 = totalVectorSpace;
    this.b2w_1 = quotientGenerator;
    this.c2w_1 = this.z2v_1.x1j();
    var tmp = this;
    tmp.d2w_1 = lazy(QuotFactory$rowEchelonForm$delegate$lambda(this));
    var tmp_0 = this;
    tmp_0.e2w_1 = lazy(QuotFactory$quotientDim$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.f2w_1 = lazy(QuotFactory$basisIndices$delegate$lambda(this));
    var tmp_2 = this;
    tmp_2.g2w_1 = lazy(QuotFactory$transformationMatrix$delegate$lambda(this));
    var tmp0_iterator = this.b2w_1.f();
    while (tmp0_iterator.g()) {
      var vector = tmp0_iterator.h();
      // Inline function 'kotlin.require' call
      var tmp0_require = this.a2w_1.b2v(vector);
      // Inline function 'kotlin.contracts.contract' call
      if (!tmp0_require) {
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.vectsp.QuotFactory.<anonymous>' call
        tmp$ret$0 = 'The vector ' + vector + ' is not contained in the vector space ' + this.a2w_1;
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
  }
  QuotFactory.prototype.f20 = function () {
    return this.a2w_1;
  };
  QuotFactory.prototype.i2w = function () {
    var tmp$ret$5;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = _get_basisIndices__7ymdcu(this);
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.QuotFactory.getBasisNames.<anonymous>' call
      tmp$ret$0 = this.a2w_1.h1w().l(item - this.b2w_1.i() | 0);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var tmp1_map = tmp$ret$2;
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
    var tmp0_iterator_0 = tmp1_map.f();
    while (tmp0_iterator_0.g()) {
      var item_0 = tmp0_iterator_0.h();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.vectsp.QuotFactory.getBasisNames.<anonymous>' call
      tmp$ret$3 = new QuotBasis(item_0);
      tmp0_mapTo_0.a(tmp$ret$3);
    }
    tmp$ret$4 = tmp0_mapTo_0;
    tmp$ret$5 = tmp$ret$4;
    return tmp$ret$5;
  };
  QuotFactory.prototype.j2w = function () {
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.z2v_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.vectsp.QuotFactory.getProjectionMatrix.<anonymous>' call
    tmp$ret$0 = tmp0_run.c2o(_get_transformationMatrix__anz1r3(this), until(_get_quotientDim__c5gs2c(this), this.a2w_1.q25()));
    tmp$ret$1 = tmp$ret$0;
    return tmp$ret$1;
  };
  QuotFactory.prototype.k2w = function () {
    var tmp = Companion_getInstance_74();
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = _get_basisIndices__7ymdcu(this);
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.QuotFactory.getSectionMatrix.<anonymous>' call
      tmp$ret$0 = this.a2w_1.h1w().l(item - this.b2w_1.i() | 0);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    return tmp.h2w(this.z2v_1, tmp$ret$2, this.a2w_1.q25());
  };
  QuotFactory.$metadata$ = classMeta('QuotFactory');
  function _get_basisNameToIndex__26cf4t_0($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = basisNameToIndex$factory_0();
    tmp$ret$0 = $this.r2w_1.f1();
    return tmp$ret$0;
  }
  function QuotVectorSpaceImpl$basisNames$delegate$lambda(this$0) {
    return function () {
      return this$0.l2w_1.i2w();
    };
  }
  function QuotVectorSpaceImpl$basisNameToIndex$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$2;
      // Inline function 'kotlin.collections.mapIndexed' call
      var tmp0_mapIndexed = this$0.d1v();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapIndexedTo' call
      var tmp0_mapIndexedTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_mapIndexed, 10));
      var index = 0;
      var tmp0_iterator = tmp0_mapIndexed.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.vectsp.QuotVectorSpaceImpl.basisNameToIndex$delegate.<anonymous>.<anonymous>' call
        var tmp1 = index;
        index = tmp1 + 1 | 0;
        var tmp1__anonymous__uwfjfc = checkIndexOverflow(tmp1);
        tmp$ret$0 = new Pair(item, tmp1__anonymous__uwfjfc);
        tmp0_mapIndexedTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapIndexedTo;
      tmp$ret$2 = tmp$ret$1;
      return toMap(tmp$ret$2);
    };
  }
  function QuotVectorSpaceImpl$projection$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_71().f2v(this$0.l2w_1.a2w_1, this$0, this$0.l2w_1.z2v_1, this$0.l2w_1.j2w());
    };
  }
  function QuotVectorSpaceImpl$section$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_71().f2v(this$0, this$0.l2w_1.a2w_1, this$0.l2w_1.z2v_1, this$0.l2w_1.k2w());
    };
  }
  function QuotVectorSpaceImpl$toString$lambda(it) {
    return it.toString();
  }
  function QuotVectorSpaceImpl(factory) {
    this.l2w_1 = factory;
    this.m2w_1 = this.l2w_1.c2w_1;
    var tmp = this;
    tmp.n2w_1 = lazy(QuotVectorSpaceImpl$basisNames$delegate$lambda(this));
    this.o2w_1 = this.l2w_1.a2w_1;
    this.p2w_1 = Companion_getInstance_72().e1z(this.o2w_1.z1j());
    this.q2w_1 = Companion_getInstance_83().l2v(this);
    var tmp_0 = this;
    tmp_0.r2w_1 = lazy(QuotVectorSpaceImpl$basisNameToIndex$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.s2w_1 = lazy(QuotVectorSpaceImpl$projection$delegate$lambda(this));
    var tmp_2 = this;
    tmp_2.t2w_1 = lazy(QuotVectorSpaceImpl$section$delegate$lambda(this));
  }
  QuotVectorSpaceImpl.prototype.x1j = function () {
    return this.m2w_1;
  };
  QuotVectorSpaceImpl.prototype.d1v = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = basisNames$factory();
    tmp$ret$0 = this.n2w_1.f1();
    return tmp$ret$0;
  };
  QuotVectorSpaceImpl.prototype.z1j = function () {
    return this.p2w_1;
  };
  QuotVectorSpaceImpl.prototype.c1j = function () {
    return this.q2w_1;
  };
  QuotVectorSpaceImpl.prototype.u2w = function (basisName) {
    var tmp0_elvis_lhs = _get_basisNameToIndex__26cf4t_0(this).t(basisName);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw NoSuchElementException_init_$Create$_0('' + basisName + ' is not a name of basis element of the vector space ' + this);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  QuotVectorSpaceImpl.prototype.n2v = function (basisName) {
    return this.u2w(basisName instanceof QuotBasis ? basisName : THROW_CCE());
  };
  QuotVectorSpaceImpl.prototype.s1q = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = projection$factory_2();
    tmp$ret$0 = this.s2w_1.f1();
    return tmp$ret$0;
  };
  QuotVectorSpaceImpl.prototype.f1r = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = section$factory_0();
    tmp$ret$0 = this.t2w_1.f1();
    return tmp$ret$0;
  };
  QuotVectorSpaceImpl.prototype.toString = function () {
    var tmp = this.d1v();
    var basisNamesString = joinToString$default(tmp, ', ', null, null, 0, null, QuotVectorSpaceImpl$toString$lambda, 30, null);
    return 'QuotVectorSpace(' + basisNamesString + ')';
  };
  QuotVectorSpaceImpl.$metadata$ = classMeta('QuotVectorSpaceImpl', [QuotVectorSpace]);
  function rowEchelonForm$factory() {
    return getPropertyCallableRef('rowEchelonForm', 1, KProperty1, function (receiver) {
      return _get_rowEchelonForm__ymu65r(receiver);
    }, null);
  }
  function quotientDim$factory() {
    return getPropertyCallableRef('quotientDim', 1, KProperty1, function (receiver) {
      return _get_quotientDim__c5gs2c(receiver);
    }, null);
  }
  function basisIndices$factory() {
    return getPropertyCallableRef('basisIndices', 1, KProperty1, function (receiver) {
      return _get_basisIndices__7ymdcu(receiver);
    }, null);
  }
  function transformationMatrix$factory() {
    return getPropertyCallableRef('transformationMatrix', 1, KProperty1, function (receiver) {
      return _get_transformationMatrix__anz1r3(receiver);
    }, null);
  }
  function basisNames$factory() {
    return getPropertyCallableRef('basisNames', 1, KProperty1, function (receiver) {
      return receiver.d1v();
    }, null);
  }
  function basisNameToIndex$factory_0() {
    return getPropertyCallableRef('basisNameToIndex', 1, KProperty1, function (receiver) {
      return _get_basisNameToIndex__26cf4t_0(receiver);
    }, null);
  }
  function projection$factory_2() {
    return getPropertyCallableRef('projection', 1, KProperty1, function (receiver) {
      return receiver.s1q();
    }, null);
  }
  function section$factory_0() {
    return getPropertyCallableRef('section', 1, KProperty1, function (receiver) {
      return receiver.f1r();
    }, null);
  }
  function SubQuotBasis$Companion$convertGetInternalPrintConfig$lambda$lambda($printer) {
    return function (basisName) {
      return '[' + $printer.u29(basisName.v2w_1) + ']';
    };
  }
  function SubQuotBasis$Companion$convertGetInternalPrintConfig$lambda($getInternalPrintConfig) {
    return function (printConfig) {
      var internalPrintConfig = $getInternalPrintConfig(printConfig);
      var printer = Printer_init_$Create$(printConfig);
      return new InternalPrintConfig(internalPrintConfig.g2u_1, SubQuotBasis$Companion$convertGetInternalPrintConfig$lambda$lambda(printer), null);
    };
  }
  function Companion_74() {
    Companion_instance_74 = this;
  }
  Companion_74.prototype.e1z = function (getInternalPrintConfig) {
    return SubQuotBasis$Companion$convertGetInternalPrintConfig$lambda(getInternalPrintConfig);
  };
  Companion_74.$metadata$ = objectMeta('Companion');
  var Companion_instance_74;
  function Companion_getInstance_75() {
    if (Companion_instance_74 == null)
      new Companion_74();
    return Companion_instance_74;
  }
  function SubQuotBasis(vector) {
    Companion_getInstance_75();
    this.v2w_1 = vector;
  }
  SubQuotBasis.prototype.toString = function () {
    return '[' + this.v2w_1 + ']';
  };
  SubQuotBasis.prototype.hashCode = function () {
    return this.v2w_1.hashCode();
  };
  SubQuotBasis.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SubQuotBasis))
      return false;
    var tmp0_other_with_cast = other instanceof SubQuotBasis ? other : THROW_CCE();
    if (!this.v2w_1.equals(tmp0_other_with_cast.v2w_1))
      return false;
    return true;
  };
  SubQuotBasis.$metadata$ = classMeta('SubQuotBasis', [BasisName]);
  function _get_basisNameToIndex__26cf4t_1($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = basisNameToIndex$factory_1();
    tmp$ret$0 = $this.c1r_1.f1();
    return tmp$ret$0;
  }
  function Companion_75() {
    Companion_instance_75 = this;
  }
  Companion_75.prototype.b22 = function (matrixSpace, totalVectorSpace, subspaceGenerator, quotientGenerator) {
    var factory = new SubQuotFactory(matrixSpace, totalVectorSpace, subspaceGenerator.h1u(), quotientGenerator.h1u());
    return new SubQuotVectorSpace(factory);
  };
  Companion_75.$metadata$ = objectMeta('Companion');
  var Companion_instance_75;
  function Companion_getInstance_76() {
    if (Companion_instance_75 == null)
      new Companion_75();
    return Companion_instance_75;
  }
  function SubQuotVectorSpace$basisNameToIndex$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$2;
      // Inline function 'kotlin.collections.mapIndexed' call
      var tmp0_mapIndexed = this$0.y1q_1;
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapIndexedTo' call
      var tmp0_mapIndexedTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_mapIndexed, 10));
      var index = 0;
      var tmp0_iterator = tmp0_mapIndexed.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.vectsp.SubQuotVectorSpace.basisNameToIndex$delegate.<anonymous>.<anonymous>' call
        var tmp1 = index;
        index = tmp1 + 1 | 0;
        var tmp1__anonymous__uwfjfc = checkIndexOverflow(tmp1);
        tmp$ret$0 = new Pair(item, tmp1__anonymous__uwfjfc);
        tmp0_mapIndexedTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapIndexedTo;
      tmp$ret$2 = tmp$ret$1;
      return toMap(tmp$ret$2);
    };
  }
  function SubQuotVectorSpace$projection$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_71().f2v(this$0.w1q_1.x2w_1, this$0, this$0.w1q_1.w2w_1, this$0.w1q_1.d2x_1);
    };
  }
  function SubQuotVectorSpace$section$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_71().f2v(this$0, this$0.w1q_1.x2w_1, this$0.w1q_1.w2w_1, this$0.w1q_1.e2x_1);
    };
  }
  function SubQuotVectorSpace$toString$lambda(it) {
    return it.toString();
  }
  function SubQuotVectorSpace(factory) {
    Companion_getInstance_76();
    this.w1q_1 = factory;
    this.x1q_1 = this.w1q_1.a2x_1;
    this.y1q_1 = this.w1q_1.b2x_1;
    this.z1q_1 = Companion_getInstance_75().e1z(this.w1q_1.x2w_1.z1j());
    this.a1r_1 = Companion_getInstance_83().l2v(this);
    this.b1r_1 = this.w1q_1.x2w_1;
    var tmp = this;
    tmp.c1r_1 = lazy(SubQuotVectorSpace$basisNameToIndex$delegate$lambda(this));
    var tmp_0 = this;
    tmp_0.d1r_1 = lazy(SubQuotVectorSpace$projection$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.e1r_1 = lazy(SubQuotVectorSpace$section$delegate$lambda(this));
  }
  SubQuotVectorSpace.prototype.x1j = function () {
    return this.x1q_1;
  };
  SubQuotVectorSpace.prototype.d1v = function () {
    return this.y1q_1;
  };
  SubQuotVectorSpace.prototype.z1j = function () {
    return this.z1q_1;
  };
  SubQuotVectorSpace.prototype.c1j = function () {
    return this.a1r_1;
  };
  SubQuotVectorSpace.prototype.h2x = function (basisName) {
    var tmp0_elvis_lhs = _get_basisNameToIndex__26cf4t_1(this).t(basisName);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw NoSuchElementException_init_$Create$_0('' + basisName + ' is not a name of basis element of the vector space ' + this);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  SubQuotVectorSpace.prototype.n2v = function (basisName) {
    return this.h2x(basisName instanceof SubQuotBasis ? basisName : THROW_CCE());
  };
  SubQuotVectorSpace.prototype.s1q = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = projection$factory_3();
    tmp$ret$0 = this.d1r_1.f1();
    return tmp$ret$0;
  };
  SubQuotVectorSpace.prototype.f1r = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = section$factory_1();
    tmp$ret$0 = this.e1r_1.f1();
    return tmp$ret$0;
  };
  SubQuotVectorSpace.prototype.o1z = function (vector) {
    return this.w1q_1.o1z(vector);
  };
  SubQuotVectorSpace.prototype.toString = function () {
    var basisNamesString = joinToString$default(this.y1q_1, ', ', null, null, 0, null, SubQuotVectorSpace$toString$lambda, 30, null);
    return 'SubQuotVectorSpace(' + basisNamesString + ')';
  };
  SubQuotVectorSpace.$metadata$ = classMeta('SubQuotVectorSpace', [VectorSpace]);
  function Companion_76() {
    Companion_instance_76 = this;
  }
  Companion_76.prototype.h2w = function (_this__u8e3s4, vectors, dim) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(vectors, 10));
    var tmp0_iterator = vectors.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.Companion.fromVectors.<anonymous>' call
      tmp$ret$0 = item.v2v();
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var numVectorList = tmp$ret$2;
    return _this__u8e3s4.z2l(numVectorList, dim);
  };
  Companion_76.$metadata$ = objectMeta('Companion');
  var Companion_instance_76;
  function Companion_getInstance_77() {
    if (Companion_instance_76 == null)
      new Companion_76();
    return Companion_instance_76;
  }
  function SubQuotFactory(matrixSpace, totalVectorSpace, subspaceGenerator, quotientGenerator) {
    Companion_getInstance_77();
    this.w2w_1 = matrixSpace;
    this.x2w_1 = totalVectorSpace;
    this.y2w_1 = subspaceGenerator;
    this.z2w_1 = quotientGenerator;
    this.a2x_1 = this.w2w_1.x1j();
    var tmp0_iterator = plus(this.y2w_1, this.z2w_1).f();
    while (tmp0_iterator.g()) {
      var vector = tmp0_iterator.h();
      // Inline function 'kotlin.require' call
      var tmp0_require = this.x2w_1.b2v(vector);
      // Inline function 'kotlin.contracts.contract' call
      if (!tmp0_require) {
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.vectsp.SubQuotFactory.<anonymous>' call
        tmp$ret$0 = 'The vector ' + vector + ' is not contained in the vector space ' + this.x2w_1;
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    // Inline function 'com.github.shwaka.kococo.debugOnly' call
    var tmp$ret$2;
    // Inline function 'kotlin.run' call
    var tmp1_run = this.w2w_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$1;
    // Inline function 'com.github.shwaka.kohomology.vectsp.SubQuotFactory.<anonymous>' call
    var quotientMatrix = Companion_getInstance_77().h2w(tmp1_run.u1j(), this.z2w_1, this.x2w_1.q25());
    var subspaceMatrix = Companion_getInstance_77().h2w(tmp1_run.u1j(), this.y2w_1, this.x2w_1.q25());
    var id = tmp1_run.u1j().a2m(this.x2w_1.q25());
    tmp$ret$1 = tmp1_run.y2n(listOf_0([quotientMatrix, subspaceMatrix, id]));
    tmp$ret$2 = tmp$ret$1;
    var joinedMatrix = tmp$ret$2;
    var tmp$ret$4;
    // Inline function 'kotlin.run' call
    var tmp2_run = this.w2w_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$3;
    // Inline function 'com.github.shwaka.kohomology.vectsp.SubQuotFactory.<anonymous>' call
    tmp$ret$3 = tmp2_run.z2n(joinedMatrix);
    tmp$ret$4 = tmp$ret$3;
    var rowEchelonForm = tmp$ret$4;
    var tmp = this;
    var tmp$ret$7;
    // Inline function 'kotlin.collections.filter' call
    var tmp3_filter = rowEchelonForm.n2k();
    var tmp$ret$6;
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo = ArrayList_init_$Create$_0();
    var tmp0_iterator_0 = tmp3_filter.f();
    while (tmp0_iterator_0.g()) {
      var element = tmp0_iterator_0.h();
      var tmp$ret$5;
      // Inline function 'com.github.shwaka.kohomology.vectsp.SubQuotFactory.<anonymous>' call
      tmp$ret$5 = element < this.z2w_1.i();
      if (tmp$ret$5) {
        tmp0_filterTo.a(element);
      }
    }
    tmp$ret$6 = tmp0_filterTo;
    tmp$ret$7 = tmp$ret$6;
    tmp.f2x_1 = tmp$ret$7.i();
    var tmp_0 = this;
    var tmp$ret$10;
    // Inline function 'kotlin.collections.filter' call
    var tmp4_filter = rowEchelonForm.n2k();
    var tmp$ret$9;
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo_0 = ArrayList_init_$Create$_0();
    var tmp0_iterator_1 = tmp4_filter.f();
    while (tmp0_iterator_1.g()) {
      var element_0 = tmp0_iterator_1.h();
      var tmp$ret$8;
      // Inline function 'com.github.shwaka.kohomology.vectsp.SubQuotFactory.<anonymous>' call
      tmp$ret$8 = this.z2w_1.i() <= element_0 ? element_0 < (this.z2w_1.i() + this.y2w_1.i() | 0) : false;
      if (tmp$ret$8) {
        tmp0_filterTo_0.a(element_0);
      }
    }
    tmp$ret$9 = tmp0_filterTo_0;
    tmp$ret$10 = tmp$ret$9;
    tmp_0.g2x_1 = tmp$ret$10.i();
    var basisIndices = slice(rowEchelonForm.n2k(), until(this.f2x_1, this.f2x_1 + this.g2x_1 | 0));
    var tmp_1 = this;
    var tmp$ret$16;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$13;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$12;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(basisIndices, 10));
    var tmp0_iterator_2 = basisIndices.f();
    while (tmp0_iterator_2.g()) {
      var item = tmp0_iterator_2.h();
      var tmp$ret$11;
      // Inline function 'com.github.shwaka.kohomology.vectsp.SubQuotFactory.<anonymous>' call
      tmp$ret$11 = this.y2w_1.l(item - this.z2w_1.i() | 0);
      tmp0_mapTo.a(tmp$ret$11);
    }
    tmp$ret$12 = tmp0_mapTo;
    tmp$ret$13 = tmp$ret$12;
    var tmp5_map = tmp$ret$13;
    var tmp$ret$15;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp5_map, 10));
    var tmp0_iterator_3 = tmp5_map.f();
    while (tmp0_iterator_3.g()) {
      var item_0 = tmp0_iterator_3.h();
      var tmp$ret$14;
      // Inline function 'com.github.shwaka.kohomology.vectsp.SubQuotFactory.<anonymous>' call
      tmp$ret$14 = new SubQuotBasis(item_0);
      tmp0_mapTo_0.a(tmp$ret$14);
    }
    tmp$ret$15 = tmp0_mapTo_0;
    tmp$ret$16 = tmp$ret$15;
    tmp_1.b2x_1 = tmp$ret$16;
    var tmp_2 = this;
    var tmp$ret$18;
    // Inline function 'kotlin.run' call
    var tmp6_run = this.w2w_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$17;
    // Inline function 'com.github.shwaka.kohomology.vectsp.SubQuotFactory.<anonymous>' call
    var size = rowEchelonForm.m2k().d2m();
    var dim = this.x2w_1.q25();
    tmp$ret$17 = tmp6_run.a2o(rowEchelonForm.m2k(), until(size - dim | 0, size));
    tmp$ret$18 = tmp$ret$17;
    tmp_2.c2x_1 = tmp$ret$18;
    var tmp_3 = this;
    var tmp$ret$20;
    // Inline function 'kotlin.run' call
    var tmp7_run = this.w2w_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$19;
    // Inline function 'com.github.shwaka.kohomology.vectsp.SubQuotFactory.<anonymous>' call
    tmp$ret$19 = tmp7_run.c2o(this.c2x_1, until(this.f2x_1, this.f2x_1 + this.g2x_1 | 0));
    tmp$ret$20 = tmp$ret$19;
    tmp_3.d2x_1 = tmp$ret$20;
    var tmp_4 = this;
    var tmp_5 = Companion_getInstance_77();
    var tmp$ret$23;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$22;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_1 = ArrayList_init_$Create$(collectionSizeOrDefault(basisIndices, 10));
    var tmp0_iterator_4 = basisIndices.f();
    while (tmp0_iterator_4.g()) {
      var item_1 = tmp0_iterator_4.h();
      var tmp$ret$21;
      // Inline function 'com.github.shwaka.kohomology.vectsp.SubQuotFactory.<anonymous>' call
      tmp$ret$21 = this.y2w_1.l(item_1 - this.z2w_1.i() | 0);
      tmp0_mapTo_1.a(tmp$ret$21);
    }
    tmp$ret$22 = tmp0_mapTo_1;
    tmp$ret$23 = tmp$ret$22;
    tmp_4.e2x_1 = tmp_5.h2w(this.w2w_1, tmp$ret$23, this.x2w_1.q25());
  }
  SubQuotFactory.prototype.u1j = function () {
    return this.w2w_1;
  };
  SubQuotFactory.prototype.f20 = function () {
    return this.x2w_1;
  };
  SubQuotFactory.prototype.o1z = function (vector) {
    var tmp$ret$3;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.w2w_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$2;
    // Inline function 'com.github.shwaka.kohomology.vectsp.SubQuotFactory.subspaceContains.<anonymous>' call
    var numVector = tmp0_run.b2o(this.c2x_1, vector.m1u_1);
    var start = this.f2x_1 + this.g2x_1 | 0;
    var limit = this.x2w_1.q25();
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp0_all = until(start, limit);
      var tmp;
      if (isInterface(tmp0_all, Collection)) {
        tmp = tmp0_all.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var inductionVariable = tmp0_all.m1_1;
      var last = tmp0_all.n1_1;
      if (inductionVariable <= last)
        do {
          var element = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp$ret$1;
          // Inline function 'com.github.shwaka.kohomology.vectsp.SubQuotFactory.subspaceContains.<anonymous>.<anonymous>' call
          tmp$ret$1 = tmp0_run.e1m(numVector, element).dj();
          if (!tmp$ret$1) {
            tmp$ret$0 = false;
            break $l$block_0;
          }
        }
         while (!(element === last));
      tmp$ret$0 = true;
    }
    tmp$ret$2 = tmp$ret$0;
    tmp$ret$3 = tmp$ret$2;
    return tmp$ret$3;
  };
  SubQuotFactory.$metadata$ = classMeta('SubQuotFactory');
  function basisNameToIndex$factory_1() {
    return getPropertyCallableRef('basisNameToIndex', 1, KProperty1, function (receiver) {
      return _get_basisNameToIndex__26cf4t_1(receiver);
    }, null);
  }
  function projection$factory_3() {
    return getPropertyCallableRef('projection', 1, KProperty1, function (receiver) {
      return receiver.s1q();
    }, null);
  }
  function section$factory_1() {
    return getPropertyCallableRef('section', 1, KProperty1, function (receiver) {
      return receiver.f1r();
    }, null);
  }
  function SubBasis$Companion$convertGetInternalPrintConfig$lambda$lambda($printer) {
    return function (basisName) {
      return '(' + $printer.u29(basisName.i2x_1) + ')';
    };
  }
  function SubBasis$Companion$convertGetInternalPrintConfig$lambda($getInternalPrintConfig) {
    return function (printConfig) {
      var internalPrintConfig = $getInternalPrintConfig(printConfig);
      var printer = Printer_init_$Create$(printConfig);
      return new InternalPrintConfig(internalPrintConfig.g2u_1, SubBasis$Companion$convertGetInternalPrintConfig$lambda$lambda(printer), null);
    };
  }
  function Companion_77() {
    Companion_instance_77 = this;
  }
  Companion_77.prototype.e1z = function (getInternalPrintConfig) {
    return SubBasis$Companion$convertGetInternalPrintConfig$lambda(getInternalPrintConfig);
  };
  Companion_77.$metadata$ = objectMeta('Companion');
  var Companion_instance_77;
  function Companion_getInstance_78() {
    if (Companion_instance_77 == null)
      new Companion_77();
    return Companion_instance_77;
  }
  function SubBasis(vector) {
    Companion_getInstance_78();
    this.i2x_1 = vector;
  }
  SubBasis.prototype.toString = function () {
    return '(' + this.i2x_1 + ')';
  };
  SubBasis.prototype.hashCode = function () {
    return this.i2x_1.hashCode();
  };
  SubBasis.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SubBasis))
      return false;
    var tmp0_other_with_cast = other instanceof SubBasis ? other : THROW_CCE();
    if (!this.i2x_1.equals(tmp0_other_with_cast.i2x_1))
      return false;
    return true;
  };
  SubBasis.$metadata$ = classMeta('SubBasis', [BasisName]);
  function Companion_78() {
    Companion_instance_78 = this;
  }
  Companion_78.prototype.i1u = function (matrixSpace, totalVectorSpace, generator) {
    var factory = new SubFactory(matrixSpace, totalVectorSpace, generator);
    return new SubVectorSpaceImpl(factory);
  };
  Companion_78.$metadata$ = objectMeta('Companion');
  var Companion_instance_78;
  function Companion_getInstance_79() {
    if (Companion_instance_78 == null)
      new Companion_78();
    return Companion_instance_78;
  }
  function SubVectorSpace() {
  }
  SubVectorSpace.$metadata$ = interfaceMeta('SubVectorSpace', [VectorSpace]);
  function asSubVectorSpace(_this__u8e3s4, matrixSpace) {
    return new WholeSubVectorSpace(matrixSpace, _this__u8e3s4);
  }
  function _get_rowEchelonForm__ymu65r_0($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = rowEchelonForm$factory_0();
    tmp$ret$0 = $this.n2x_1.f1();
    return tmp$ret$0;
  }
  function _get_basisIndices__7ymdcu_0($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = basisIndices$factory_0();
    tmp$ret$0 = $this.p2x_1.f1();
    return tmp$ret$0;
  }
  function _get_transformationMatrix__anz1r3_0($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = transformationMatrix$factory_0();
    tmp$ret$0 = $this.q2x_1.f1();
    return tmp$ret$0;
  }
  function Companion_79() {
    Companion_instance_79 = this;
  }
  Companion_79.prototype.h2w = function (_this__u8e3s4, vectors, dim) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(vectors, 10));
    var tmp0_iterator = vectors.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.Companion.fromVectors.<anonymous>' call
      tmp$ret$0 = item.v2v();
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var numVectorList = tmp$ret$2;
    return _this__u8e3s4.z2l(numVectorList, dim);
  };
  Companion_79.$metadata$ = objectMeta('Companion');
  var Companion_instance_79;
  function Companion_getInstance_80() {
    if (Companion_instance_79 == null)
      new Companion_79();
    return Companion_instance_79;
  }
  function SubFactory$rowEchelonForm$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$3;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.j2x_1.c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$2;
      // Inline function 'com.github.shwaka.kohomology.vectsp.SubFactory.rowEchelonForm$delegate.<anonymous>.<anonymous>' call
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.SubFactory.rowEchelonForm$delegate.<anonymous>.<anonymous>.<anonymous>' call
      var subspaceMatrix = Companion_getInstance_80().h2w(tmp0_run.u1j(), this$0.l2x_1, this$0.k2x_1.q25());
      var id = tmp0_run.u1j().a2m(this$0.k2x_1.q25());
      tmp$ret$0 = tmp0_run.y2n(listOf_0([subspaceMatrix, id]));
      tmp$ret$1 = tmp$ret$0;
      var joinedMatrix = tmp$ret$1;
      tmp$ret$2 = tmp0_run.z2n(joinedMatrix);
      tmp$ret$3 = tmp$ret$2;
      return tmp$ret$3;
    };
  }
  function SubFactory$dim$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$2;
      // Inline function 'kotlin.collections.filter' call
      var tmp0_filter = _get_rowEchelonForm__ymu65r_0(this$0).n2k();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.filterTo' call
      var tmp0_filterTo = ArrayList_init_$Create$_0();
      var tmp0_iterator = tmp0_filter.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.vectsp.SubFactory.dim$delegate.<anonymous>.<anonymous>' call
        tmp$ret$0 = element < this$0.l2x_1.i();
        if (tmp$ret$0) {
          tmp0_filterTo.a(element);
        }
      }
      tmp$ret$1 = tmp0_filterTo;
      tmp$ret$2 = tmp$ret$1;
      return tmp$ret$2.i();
    };
  }
  function SubFactory$basisIndices$delegate$lambda(this$0) {
    return function () {
      return slice(_get_rowEchelonForm__ymu65r_0(this$0).n2k(), until(0, this$0.q25()));
    };
  }
  function SubFactory$transformationMatrix$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = this$0.j2x_1.c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.SubFactory.transformationMatrix$delegate.<anonymous>.<anonymous>' call
      var size = _get_rowEchelonForm__ymu65r_0(this$0).m2k().d2m();
      var dim = this$0.k2x_1.q25();
      tmp$ret$0 = tmp0_run.a2o(_get_rowEchelonForm__ymu65r_0(this$0).m2k(), until(size - dim | 0, size));
      tmp$ret$1 = tmp$ret$0;
      return tmp$ret$1;
    };
  }
  function SubFactory(matrixSpace, totalVectorSpace, generator) {
    Companion_getInstance_80();
    this.j2x_1 = matrixSpace;
    this.k2x_1 = totalVectorSpace;
    this.l2x_1 = generator;
    this.m2x_1 = this.j2x_1.x1j();
    var tmp = this;
    tmp.n2x_1 = lazy(SubFactory$rowEchelonForm$delegate$lambda(this));
    var tmp_0 = this;
    tmp_0.o2x_1 = lazy(SubFactory$dim$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.p2x_1 = lazy(SubFactory$basisIndices$delegate$lambda(this));
    var tmp_2 = this;
    tmp_2.q2x_1 = lazy(SubFactory$transformationMatrix$delegate$lambda(this));
    var tmp0_iterator = this.l2x_1.f();
    while (tmp0_iterator.g()) {
      var vector = tmp0_iterator.h();
      // Inline function 'kotlin.require' call
      var tmp0_require = this.k2x_1.b2v(vector);
      // Inline function 'kotlin.contracts.contract' call
      if (!tmp0_require) {
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.vectsp.SubFactory.<anonymous>' call
        tmp$ret$0 = 'The vector ' + vector + ' is not contained in the vector space ' + this.k2x_1;
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
  }
  SubFactory.prototype.f20 = function () {
    return this.k2x_1;
  };
  SubFactory.prototype.h1u = function () {
    return this.l2x_1;
  };
  SubFactory.prototype.q25 = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = dim$factory();
    tmp$ret$0 = this.o2x_1.f1();
    return tmp$ret$0;
  };
  SubFactory.prototype.i2w = function () {
    var tmp$ret$5;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = _get_basisIndices__7ymdcu_0(this);
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.SubFactory.getBasisNames.<anonymous>' call
      tmp$ret$0 = this.l2x_1.l(item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var tmp1_map = tmp$ret$2;
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_map, 10));
    var tmp0_iterator_0 = tmp1_map.f();
    while (tmp0_iterator_0.g()) {
      var item_0 = tmp0_iterator_0.h();
      var tmp$ret$3;
      // Inline function 'com.github.shwaka.kohomology.vectsp.SubFactory.getBasisNames.<anonymous>' call
      tmp$ret$3 = new SubBasis(item_0);
      tmp0_mapTo_0.a(tmp$ret$3);
    }
    tmp$ret$4 = tmp0_mapTo_0;
    tmp$ret$5 = tmp$ret$4;
    return tmp$ret$5;
  };
  SubFactory.prototype.r2x = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = _get_basisIndices__7ymdcu_0(this);
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.SubFactory.getInclusionMatrix.<anonymous>' call
      tmp$ret$0 = this.l2x_1.l(item).v2v();
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    return this.j2x_1.z2l(tmp$ret$2, this.k2x_1.q25());
  };
  SubFactory.prototype.s2x = function () {
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.j2x_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'com.github.shwaka.kohomology.vectsp.SubFactory.getRetractionMatrix.<anonymous>' call
    tmp$ret$0 = tmp0_run.c2o(_get_transformationMatrix__anz1r3_0(this), until(0, this.q25()));
    tmp$ret$1 = tmp$ret$0;
    return tmp$ret$1;
  };
  SubFactory.prototype.b2v = function (vector) {
    var tmp$ret$3;
    // Inline function 'kotlin.run' call
    var tmp0_run = this.j2x_1.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$2;
    // Inline function 'com.github.shwaka.kohomology.vectsp.SubFactory.contains.<anonymous>' call
    var numVector = tmp0_run.b2o(_get_transformationMatrix__anz1r3_0(this), vector.m1u_1);
    var start = this.q25();
    var limit = this.k2x_1.q25();
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp0_all = until(start, limit);
      var tmp;
      if (isInterface(tmp0_all, Collection)) {
        tmp = tmp0_all.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var inductionVariable = tmp0_all.m1_1;
      var last = tmp0_all.n1_1;
      if (inductionVariable <= last)
        do {
          var element = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp$ret$1;
          // Inline function 'com.github.shwaka.kohomology.vectsp.SubFactory.contains.<anonymous>.<anonymous>' call
          tmp$ret$1 = tmp0_run.e1m(numVector, element).dj();
          if (!tmp$ret$1) {
            tmp$ret$0 = false;
            break $l$block_0;
          }
        }
         while (!(element === last));
      tmp$ret$0 = true;
    }
    tmp$ret$2 = tmp$ret$0;
    tmp$ret$3 = tmp$ret$2;
    return tmp$ret$3;
  };
  SubFactory.$metadata$ = classMeta('SubFactory');
  function _get_basisNameToIndex__26cf4t_2($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = basisNameToIndex$factory_2();
    tmp$ret$0 = $this.a2y_1.f1();
    return tmp$ret$0;
  }
  function SubVectorSpaceImpl$basisNames$delegate$lambda(this$0) {
    return function () {
      return this$0.t2x_1.i2w();
    };
  }
  function SubVectorSpaceImpl$basisNameToIndex$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$2;
      // Inline function 'kotlin.collections.mapIndexed' call
      var tmp0_mapIndexed = this$0.d1v();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapIndexedTo' call
      var tmp0_mapIndexedTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_mapIndexed, 10));
      var index = 0;
      var tmp0_iterator = tmp0_mapIndexed.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.vectsp.SubVectorSpaceImpl.basisNameToIndex$delegate.<anonymous>.<anonymous>' call
        var tmp1 = index;
        index = tmp1 + 1 | 0;
        var tmp1__anonymous__uwfjfc = checkIndexOverflow(tmp1);
        tmp$ret$0 = new Pair(item, tmp1__anonymous__uwfjfc);
        tmp0_mapIndexedTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapIndexedTo;
      tmp$ret$2 = tmp$ret$1;
      return toMap(tmp$ret$2);
    };
  }
  function SubVectorSpaceImpl$inclusion$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_71().f2v(this$0, this$0.t2x_1.k2x_1, this$0.t2x_1.j2x_1, this$0.t2x_1.r2x());
    };
  }
  function SubVectorSpaceImpl$retraction$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_71().f2v(this$0.t2x_1.k2x_1, this$0, this$0.t2x_1.j2x_1, this$0.t2x_1.s2x());
    };
  }
  function SubVectorSpaceImpl$toString$lambda(it) {
    return it.toString();
  }
  function SubVectorSpaceImpl(factory) {
    this.t2x_1 = factory;
    this.u2x_1 = this.t2x_1.m2x_1;
    var tmp = this;
    tmp.v2x_1 = lazy(SubVectorSpaceImpl$basisNames$delegate$lambda(this));
    this.w2x_1 = this.t2x_1.k2x_1;
    this.x2x_1 = this.t2x_1.l2x_1;
    this.y2x_1 = Companion_getInstance_78().e1z(this.w2x_1.z1j());
    this.z2x_1 = Companion_getInstance_83().l2v(this);
    var tmp_0 = this;
    tmp_0.a2y_1 = lazy(SubVectorSpaceImpl$basisNameToIndex$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.b2y_1 = lazy(SubVectorSpaceImpl$inclusion$delegate$lambda(this));
    var tmp_2 = this;
    tmp_2.c2y_1 = lazy(SubVectorSpaceImpl$retraction$delegate$lambda(this));
  }
  SubVectorSpaceImpl.prototype.x1j = function () {
    return this.u2x_1;
  };
  SubVectorSpaceImpl.prototype.d1v = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = basisNames$factory_0();
    tmp$ret$0 = this.v2x_1.f1();
    return tmp$ret$0;
  };
  SubVectorSpaceImpl.prototype.f20 = function () {
    return this.w2x_1;
  };
  SubVectorSpaceImpl.prototype.h1u = function () {
    return this.x2x_1;
  };
  SubVectorSpaceImpl.prototype.z1j = function () {
    return this.y2x_1;
  };
  SubVectorSpaceImpl.prototype.c1j = function () {
    return this.z2x_1;
  };
  SubVectorSpaceImpl.prototype.d2y = function (basisName) {
    var tmp0_elvis_lhs = _get_basisNameToIndex__26cf4t_2(this).t(basisName);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw NoSuchElementException_init_$Create$_0('' + basisName + ' is not a name of basis element of the vector space ' + this);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  SubVectorSpaceImpl.prototype.n2v = function (basisName) {
    return this.d2y(basisName instanceof SubBasis ? basisName : THROW_CCE());
  };
  SubVectorSpaceImpl.prototype.n1o = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = inclusion$factory_2();
    tmp$ret$0 = this.b2y_1.f1();
    return tmp$ret$0;
  };
  SubVectorSpaceImpl.prototype.e20 = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = retraction$factory();
    tmp$ret$0 = this.c2y_1.f1();
    return tmp$ret$0;
  };
  SubVectorSpaceImpl.prototype.o1z = function (vector) {
    return this.t2x_1.b2v(vector);
  };
  SubVectorSpaceImpl.prototype.toString = function () {
    var tmp = this.d1v();
    var basisNamesString = joinToString$default(tmp, ', ', null, null, 0, null, SubVectorSpaceImpl$toString$lambda, 30, null);
    return 'SubVectorSpace(' + basisNamesString + ')';
  };
  SubVectorSpaceImpl.$metadata$ = classMeta('SubVectorSpaceImpl', [SubVectorSpace]);
  function _get_basisNameToIndex__26cf4t_3($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = basisNameToIndex$factory_3();
    tmp$ret$0 = $this.l2y_1.f1();
    return tmp$ret$0;
  }
  function WholeSubVectorSpace$basisNameToIndex$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$2;
      // Inline function 'kotlin.collections.mapIndexed' call
      var tmp0_mapIndexed = this$0.h2y_1;
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapIndexedTo' call
      var tmp0_mapIndexedTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_mapIndexed, 10));
      var index = 0;
      var tmp0_iterator = tmp0_mapIndexed.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.vectsp.WholeSubVectorSpace.basisNameToIndex$delegate.<anonymous>.<anonymous>' call
        var tmp1 = index;
        index = tmp1 + 1 | 0;
        var tmp1__anonymous__uwfjfc = checkIndexOverflow(tmp1);
        tmp$ret$0 = new Pair(item, tmp1__anonymous__uwfjfc);
        tmp0_mapIndexedTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapIndexedTo;
      tmp$ret$2 = tmp$ret$1;
      return toMap(tmp$ret$2);
    };
  }
  function WholeSubVectorSpace$inclusion$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_71().f2v(this$0, this$0.f2y_1, this$0.e2y_1, this$0.e2y_1.a2m(this$0.f2y_1.q25()));
    };
  }
  function WholeSubVectorSpace$retraction$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_71().f2v(this$0.f2y_1, this$0, this$0.e2y_1, this$0.e2y_1.a2m(this$0.f2y_1.q25()));
    };
  }
  function WholeSubVectorSpace(matrixSpace, totalVectorSpace) {
    this.e2y_1 = matrixSpace;
    this.f2y_1 = totalVectorSpace;
    this.g2y_1 = this.f2y_1.x1j();
    var tmp = this;
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = this.f2y_1.h1w();
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.WholeSubVectorSpace.basisNames.<anonymous>' call
      tmp$ret$0 = new SubBasis(item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    tmp.h2y_1 = tmp$ret$2;
    this.i2y_1 = this.f2y_1.h1w();
    this.j2y_1 = Companion_getInstance_78().e1z(this.f2y_1.z1j());
    this.k2y_1 = Companion_getInstance_83().l2v(this);
    var tmp_0 = this;
    tmp_0.l2y_1 = lazy(WholeSubVectorSpace$basisNameToIndex$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.m2y_1 = lazy(WholeSubVectorSpace$inclusion$delegate$lambda(this));
    var tmp_2 = this;
    tmp_2.n2y_1 = lazy(WholeSubVectorSpace$retraction$delegate$lambda(this));
  }
  WholeSubVectorSpace.prototype.f20 = function () {
    return this.f2y_1;
  };
  WholeSubVectorSpace.prototype.x1j = function () {
    return this.g2y_1;
  };
  WholeSubVectorSpace.prototype.d1v = function () {
    return this.h2y_1;
  };
  WholeSubVectorSpace.prototype.h1u = function () {
    return this.i2y_1;
  };
  WholeSubVectorSpace.prototype.z1j = function () {
    return this.j2y_1;
  };
  WholeSubVectorSpace.prototype.c1j = function () {
    return this.k2y_1;
  };
  WholeSubVectorSpace.prototype.o1z = function (vector) {
    return true;
  };
  WholeSubVectorSpace.prototype.d2y = function (basisName) {
    var tmp0_elvis_lhs = _get_basisNameToIndex__26cf4t_3(this).t(basisName);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw NoSuchElementException_init_$Create$_0('' + basisName + ' is not a name of basis element of the vector space ' + this);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  WholeSubVectorSpace.prototype.n2v = function (basisName) {
    return this.d2y(basisName instanceof SubBasis ? basisName : THROW_CCE());
  };
  WholeSubVectorSpace.prototype.n1o = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = inclusion$factory_3();
    tmp$ret$0 = this.m2y_1.f1();
    return tmp$ret$0;
  };
  WholeSubVectorSpace.prototype.e20 = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = retraction$factory_0();
    tmp$ret$0 = this.n2y_1.f1();
    return tmp$ret$0;
  };
  WholeSubVectorSpace.$metadata$ = classMeta('WholeSubVectorSpace', [SubVectorSpace]);
  function rowEchelonForm$factory_0() {
    return getPropertyCallableRef('rowEchelonForm', 1, KProperty1, function (receiver) {
      return _get_rowEchelonForm__ymu65r_0(receiver);
    }, null);
  }
  function dim$factory() {
    return getPropertyCallableRef('dim', 1, KProperty1, function (receiver) {
      return receiver.q25();
    }, null);
  }
  function basisIndices$factory_0() {
    return getPropertyCallableRef('basisIndices', 1, KProperty1, function (receiver) {
      return _get_basisIndices__7ymdcu_0(receiver);
    }, null);
  }
  function transformationMatrix$factory_0() {
    return getPropertyCallableRef('transformationMatrix', 1, KProperty1, function (receiver) {
      return _get_transformationMatrix__anz1r3_0(receiver);
    }, null);
  }
  function basisNames$factory_0() {
    return getPropertyCallableRef('basisNames', 1, KProperty1, function (receiver) {
      return receiver.d1v();
    }, null);
  }
  function basisNameToIndex$factory_2() {
    return getPropertyCallableRef('basisNameToIndex', 1, KProperty1, function (receiver) {
      return _get_basisNameToIndex__26cf4t_2(receiver);
    }, null);
  }
  function inclusion$factory_2() {
    return getPropertyCallableRef('inclusion', 1, KProperty1, function (receiver) {
      return receiver.n1o();
    }, null);
  }
  function retraction$factory() {
    return getPropertyCallableRef('retraction', 1, KProperty1, function (receiver) {
      return receiver.e20();
    }, null);
  }
  function basisNameToIndex$factory_3() {
    return getPropertyCallableRef('basisNameToIndex', 1, KProperty1, function (receiver) {
      return _get_basisNameToIndex__26cf4t_3(receiver);
    }, null);
  }
  function inclusion$factory_3() {
    return getPropertyCallableRef('inclusion', 1, KProperty1, function (receiver) {
      return receiver.n1o();
    }, null);
  }
  function retraction$factory_0() {
    return getPropertyCallableRef('retraction', 1, KProperty1, function (receiver) {
      return receiver.e20();
    }, null);
  }
  function BasisName() {
  }
  BasisName.$metadata$ = interfaceMeta('BasisName', [Printable]);
  function firstTermToString($this, coeff, basisName, printConfig, internalPrintConfig) {
    var basisNameString = internalPrintConfig.h2u_1(basisName);
    var coeffString = internalPrintConfig.g2u_1(coeff, true);
    if (basisNameString === '1') {
      return coeffString;
    }
    var productSymbol = getProductSymbol(Companion_getInstance_81(), printConfig.b1x_1);
    var tmp0_subject = coeffString;
    switch (tmp0_subject) {
      case '1':
        return basisNameString;
      case '-1':
        return '-' + printConfig.d1x_1 + basisNameString;
      default:
        return coeffString + printConfig.e1x_1 + productSymbol + basisNameString;
    }
  }
  function nonFirstTermToString($this, coeff, basisName, printConfig, internalPrintConfig) {
    var basisNameString = internalPrintConfig.h2u_1(basisName);
    var coeffString = internalPrintConfig.g2u_1(coeff, false);
    var sign = coeff.v2n() ? '+' : '-';
    if (basisNameString === '1') {
      return printConfig.c1x_1 + sign + printConfig.d1x_1 + coeffString;
    }
    var productSymbol = getProductSymbol(Companion_getInstance_81(), printConfig.b1x_1);
    var tmp0_subject = coeffString;
    var str = tmp0_subject === '1' ? basisNameString : coeffString + printConfig.e1x_1 + productSymbol + basisNameString;
    return printConfig.c1x_1 + sign + printConfig.d1x_1 + str;
  }
  function getProductSymbol($this, printType) {
    var tmp0_subject = printType;
    var tmp0 = tmp0_subject.d2_1;
    var tmp;
    switch (tmp0) {
      case 0:
      case 1:
        tmp = '';
        break;
      case 2:
        tmp = '* ';
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function Companion_80() {
    Companion_instance_80 = this;
  }
  Companion_80.$metadata$ = objectMeta('Companion');
  var Companion_instance_80;
  function Companion_getInstance_81() {
    if (Companion_instance_80 == null)
      new Companion_80();
    return Companion_instance_80;
  }
  function sam$kotlin_Comparator$0_0(function_0) {
    this.o2y_1 = function_0;
  }
  sam$kotlin_Comparator$0_0.prototype.x = function (a, b) {
    return this.o2y_1(a, b);
  };
  sam$kotlin_Comparator$0_0.prototype.compare = function (a, b) {
    return this.x(a, b);
  };
  sam$kotlin_Comparator$0_0.$metadata$ = classMeta('sam$kotlin_Comparator$0', [Comparator]);
  function Vector$print$lambda($tmp1_compareBy) {
    return function (a, b) {
      var tmp$ret$2;
      // Inline function 'kotlin.comparisons.compareValuesBy' call
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.Vector.print.<anonymous>.<anonymous>' call
      tmp$ret$0 = a.a5_1;
      var tmp = tmp$ret$0;
      var tmp$ret$1;
      // Inline function 'com.github.shwaka.kohomology.vectsp.Vector.print.<anonymous>.<anonymous>' call
      tmp$ret$1 = b.a5_1;
      tmp$ret$2 = $tmp1_compareBy.compare(tmp, tmp$ret$1);
      return tmp$ret$2;
    };
  }
  function Vector$print$lambda_0($printConfig, $internalPrintConfig) {
    return function (_name_for_destructuring_parameter_0__wldtmu) {
      var index = _name_for_destructuring_parameter_0__wldtmu.a4();
      var coeffAndBasisName = _name_for_destructuring_parameter_0__wldtmu.b4();
      var tmp0_container = coeffAndBasisName;
      var coeff = tmp0_container.a4();
      var basisName = tmp0_container.b4();
      var tmp1_subject = index;
      return tmp1_subject === 0 ? firstTermToString(Companion_getInstance_81(), coeff, basisName, $printConfig, $internalPrintConfig) : nonFirstTermToString(Companion_getInstance_81(), coeff, basisName, $printConfig, $internalPrintConfig);
    };
  }
  function Vector(numVector, vectorSpace) {
    Companion_getInstance_81();
    this.m1u_1 = numVector;
    this.n1u_1 = vectorSpace;
    if (!(this.m1u_1.q25() === this.n1u_1.q25()))
      throw new InvalidSizeException('Dimension of the numerical vector does not match the dimension of the vector space');
  }
  Vector.prototype.p2y = function () {
    return this.m1u_1;
  };
  Vector.prototype.q2y = function () {
    return this.n1u_1;
  };
  Vector.prototype.v2v = function () {
    return this.m1u_1;
  };
  Vector.prototype.dj = function () {
    return this.m1u_1.dj();
  };
  Vector.prototype.a1w = function () {
    var tmp$ret$5;
    // Inline function 'kotlin.collections.mapKeys' call
    var tmp0_mapKeys = this.m1u_1.y2m();
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapKeysTo' call
    var tmp1_mapKeysTo = LinkedHashMap_init_$Create$_0(mapCapacity(tmp0_mapKeys.i()));
    var tmp$ret$3;
    // Inline function 'kotlin.collections.associateByTo' call
    var tmp0_associateByTo = tmp0_mapKeys.d1();
    var tmp0_iterator = tmp0_associateByTo.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp$ret$1;
      // Inline function 'com.github.shwaka.kohomology.vectsp.Vector.toBasisMap.<anonymous>' call
      var tmp$ret$0;
      // Inline function 'kotlin.collections.component1' call
      tmp$ret$0 = element.e1();
      var index = tmp$ret$0;
      tmp$ret$1 = this.n1u_1.d1v().l(index);
      var tmp = tmp$ret$1;
      var tmp$ret$2;
      // Inline function 'kotlin.collections.mapKeysTo.<anonymous>' call
      tmp$ret$2 = element.f1();
      tmp1_mapKeysTo.u(tmp, tmp$ret$2);
    }
    tmp$ret$3 = tmp1_mapKeysTo;
    tmp$ret$4 = tmp$ret$3;
    tmp$ret$5 = tmp$ret$4;
    return tmp$ret$5;
  };
  Vector.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null)
      return false;
    if (!getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof Vector)
      other;
    else
      THROW_CCE();
    if (!equals(this.m1u_1, other.m1u_1))
      return false;
    if (!equals(this.n1u_1, other.n1u_1))
      return false;
    return true;
  };
  Vector.prototype.hashCode = function () {
    var result = hashCode(this.m1u_1);
    result = imul(31, result) + hashCode(this.n1u_1) | 0;
    return result;
  };
  Vector.prototype.toString = function () {
    return this.c1n(PrintConfig_init_$Create$(null, null, null, null, null, 31, null));
  };
  Vector.prototype.c1n = function (printConfig) {
    var internalPrintConfig = this.n1u_1.z1j()(printConfig);
    return this.e1w(printConfig, internalPrintConfig);
  };
  Vector.prototype.e1w = function (printConfig, internalPrintConfig) {
    var tmp$ret$5;
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$4;
    // Inline function 'com.github.shwaka.kohomology.vectsp.Vector.print.<anonymous>' call
    var coeffList = this.m1u_1.d2h();
    var tmp$ret$2;
    // Inline function 'kotlin.collections.filter' call
    var tmp0_filter = zip(coeffList, this.n1u_1.d1v());
    var tmp$ret$1;
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo = ArrayList_init_$Create$_0();
    var tmp0_iterator = tmp0_filter.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.shwaka.kohomology.vectsp.Vector.print.<anonymous>.<anonymous>' call
      var coeff = element.a4();
      tmp$ret$0 = coeff.y1s();
      if (tmp$ret$0) {
        tmp0_filterTo.a(element);
      }
    }
    tmp$ret$1 = tmp0_filterTo;
    tmp$ret$2 = tmp$ret$1;
    var basisWithCoeff = tmp$ret$2;
    var tmp;
    if (internalPrintConfig.i2u_1 == null) {
      tmp = basisWithCoeff;
    } else {
      var tmp$ret$3;
      // Inline function 'kotlin.comparisons.compareBy' call
      var tmp1_compareBy = internalPrintConfig.i2u_1;
      var tmp_0 = Vector$print$lambda(tmp1_compareBy);
      tmp$ret$3 = new sam$kotlin_Comparator$0_0(tmp_0);
      tmp = sortedWith(basisWithCoeff, tmp$ret$3);
    }
    tmp$ret$4 = tmp;
    tmp$ret$5 = tmp$ret$4;
    var sortedBasisWithCoeff = tmp$ret$5;
    var tmp_1;
    if (sortedBasisWithCoeff.p()) {
      tmp_1 = '0';
    } else {
      var tmp_2 = withIndex(sortedBasisWithCoeff);
      tmp_1 = joinToString$default(tmp_2, '', null, null, 0, null, Vector$print$lambda_0(printConfig, internalPrintConfig), 30, null);
    }
    return tmp_1;
  };
  Vector.$metadata$ = classMeta('Vector', [Printable]);
  function InternalPrintConfig$Companion$default$ref_2($boundThis) {
    var l = function (p0) {
      return $boundThis.r1u(p0);
    };
    l.callableName = 'default';
    return l;
  }
  function Companion_81() {
    Companion_instance_81 = this;
  }
  Companion_81.prototype.r2y = function (numVectorSpace, basisNames, getInternalPrintConfig) {
    return new VectorSpaceImpl(numVectorSpace, basisNames, getInternalPrintConfig);
  };
  Companion_81.prototype.l2g = function (numVectorSpace, basisNames, getInternalPrintConfig, $mask0, $handler) {
    if (!(($mask0 & 4) === 0)) {
      getInternalPrintConfig = InternalPrintConfig$Companion$default$ref_2(Companion_getInstance_68());
    }
    return this.r2y(numVectorSpace, basisNames, getInternalPrintConfig);
  };
  Companion_81.$metadata$ = objectMeta('Companion');
  var Companion_instance_81;
  function Companion_getInstance_82() {
    if (Companion_instance_81 == null)
      new Companion_81();
    return Companion_instance_81;
  }
  function VectorSpace() {
  }
  VectorSpace.$metadata$ = interfaceMeta('VectorSpace');
  function Companion_82() {
    Companion_instance_82 = this;
  }
  Companion_82.prototype.l2v = function (vectorSpace) {
    return new VectorContextImpl(vectorSpace);
  };
  Companion_82.$metadata$ = objectMeta('Companion');
  var Companion_instance_82;
  function Companion_getInstance_83() {
    if (Companion_instance_82 == null)
      new Companion_82();
    return Companion_instance_82;
  }
  function VectorContext() {
  }
  VectorContext.$metadata$ = interfaceMeta('VectorContext', [NumVectorContext]);
  function _get_basisNameToIndex__26cf4t_4($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = basisNameToIndex$factory_4();
    tmp$ret$0 = $this.w2y_1.f1();
    return tmp$ret$0;
  }
  function VectorSpaceImpl$basisNameToIndex$delegate$lambda(this$0) {
    return function () {
      var tmp$ret$2;
      // Inline function 'kotlin.collections.mapIndexed' call
      var tmp0_mapIndexed = this$0.t2y_1;
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapIndexedTo' call
      var tmp0_mapIndexedTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_mapIndexed, 10));
      var index = 0;
      var tmp0_iterator = tmp0_mapIndexed.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'com.github.shwaka.kohomology.vectsp.VectorSpaceImpl.basisNameToIndex$delegate.<anonymous>.<anonymous>' call
        var tmp1 = index;
        index = tmp1 + 1 | 0;
        var tmp1__anonymous__uwfjfc = checkIndexOverflow(tmp1);
        tmp$ret$0 = new Pair(item, tmp1__anonymous__uwfjfc);
        tmp0_mapIndexedTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapIndexedTo;
      tmp$ret$2 = tmp$ret$1;
      return toMap(tmp$ret$2);
    };
  }
  function VectorSpaceImpl$toString$lambda(it) {
    return toString(it);
  }
  function VectorSpaceImpl(numVectorSpace, basisNames, getInternalPrintConfig) {
    this.s2y_1 = numVectorSpace;
    this.t2y_1 = basisNames;
    this.u2y_1 = getInternalPrintConfig;
    this.v2y_1 = Companion_getInstance_83().l2v(this);
    var tmp = this;
    tmp.w2y_1 = lazy(VectorSpaceImpl$basisNameToIndex$delegate$lambda(this));
  }
  VectorSpaceImpl.prototype.x1j = function () {
    return this.s2y_1;
  };
  VectorSpaceImpl.prototype.d1v = function () {
    return this.t2y_1;
  };
  VectorSpaceImpl.prototype.z1j = function () {
    return this.u2y_1;
  };
  VectorSpaceImpl.prototype.c1j = function () {
    return this.v2y_1;
  };
  VectorSpaceImpl.prototype.n2v = function (basisName) {
    var tmp0_elvis_lhs = _get_basisNameToIndex__26cf4t_4(this).t(basisName);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw NoSuchElementException_init_$Create$_0('' + basisName + ' is not a name of basis element of the vector space ' + this);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  VectorSpaceImpl.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null)
      return false;
    if (!getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (!(other == null) ? isInterface(other, VectorSpace) : false)
      other;
    else
      THROW_CCE();
    if (!equals(this.s2y_1, other.x1j()))
      return false;
    if (!(this.q25() === other.q25()))
      return false;
    if (!equals(this.t2y_1, other.d1v()))
      return false;
    return true;
  };
  VectorSpaceImpl.prototype.hashCode = function () {
    var result = hashCode(this.s2y_1);
    result = imul(31, result) + this.q25() | 0;
    result = imul(31, result) + hashCode(this.t2y_1) | 0;
    return result;
  };
  VectorSpaceImpl.prototype.toString = function () {
    var basisNamesString = joinToString$default(this.t2y_1, ', ', null, null, 0, null, VectorSpaceImpl$toString$lambda, 30, null);
    return 'VectorSpace(' + basisNamesString + ')';
  };
  VectorSpaceImpl.$metadata$ = classMeta('VectorSpaceImpl', [VectorSpace]);
  function VectorContextImpl(vectorSpace) {
    this.x2y_1 = vectorSpace;
    this.y2y_1 = Companion_getInstance_57().a1x(vectorSpace.x1j());
  }
  VectorContextImpl.prototype.q2y = function () {
    return this.x2y_1;
  };
  VectorContextImpl.prototype.e1k = function () {
    return this.y2y_1.e1k();
  };
  VectorContextImpl.prototype.x1j = function () {
    return this.y2y_1.x1j();
  };
  VectorContextImpl.prototype.n1m = function () {
    return this.y2y_1.n1m();
  };
  VectorContextImpl.prototype.m1m = function () {
    return this.y2y_1.m1m();
  };
  VectorContextImpl.prototype.f1m = function (_this__u8e3s4, other) {
    return this.y2y_1.f1m(_this__u8e3s4, other);
  };
  VectorContextImpl.prototype.g1m = function (_this__u8e3s4, other) {
    return this.y2y_1.g1m(_this__u8e3s4, other);
  };
  VectorContextImpl.prototype.e1m = function (_this__u8e3s4, ind) {
    return this.y2y_1.e1m(_this__u8e3s4, ind);
  };
  VectorContextImpl.prototype.h1m = function (_this__u8e3s4) {
    return this.y2y_1.h1m(_this__u8e3s4);
  };
  VectorContextImpl.prototype.x1l = function (_this__u8e3s4, other) {
    return this.y2y_1.x1l(_this__u8e3s4, other);
  };
  VectorContextImpl.prototype.w1l = function (_this__u8e3s4, other) {
    return this.y2y_1.w1l(_this__u8e3s4, other);
  };
  VectorContextImpl.prototype.t1l = function (_this__u8e3s4, other) {
    return this.y2y_1.t1l(_this__u8e3s4, other);
  };
  VectorContextImpl.prototype.s1l = function (_this__u8e3s4, other) {
    return this.y2y_1.s1l(_this__u8e3s4, other);
  };
  VectorContextImpl.prototype.d1m = function (_this__u8e3s4) {
    return this.y2y_1.d1m(_this__u8e3s4);
  };
  VectorContextImpl.prototype.l1l = function (_this__u8e3s4, other) {
    return this.y2y_1.l1l(_this__u8e3s4, other);
  };
  VectorContextImpl.prototype.k1l = function (_this__u8e3s4, numVector) {
    return this.y2y_1.k1l(_this__u8e3s4, numVector);
  };
  VectorContextImpl.prototype.j1l = function (_this__u8e3s4, scalar) {
    return this.y2y_1.j1l(_this__u8e3s4, scalar);
  };
  VectorContextImpl.prototype.k1m = function (_this__u8e3s4) {
    return this.y2y_1.k1m(_this__u8e3s4);
  };
  VectorContextImpl.prototype.b1m = function (_this__u8e3s4) {
    return this.y2y_1.b1m(_this__u8e3s4);
  };
  VectorContextImpl.prototype.a1m = function (_this__u8e3s4) {
    return this.y2y_1.a1m(_this__u8e3s4);
  };
  VectorContextImpl.$metadata$ = classMeta('VectorContextImpl', [VectorContext, NumVectorContext]);
  function basisNameToIndex$factory_4() {
    return getPropertyCallableRef('basisNameToIndex', 1, KProperty1, function (receiver) {
      return _get_basisNameToIndex__26cf4t_4(receiver);
    }, null);
  }
  //region block: post-declaration
  DGAlgebraImpl.prototype.l1j = getDGIdeal;
  DGAlgebraImpl.prototype.s1j = getQuotientByIdeal_0;
  DGAlgebraImpl.prototype.z1k = getQuotientByIdeal;
  DGAlgebraImpl.prototype.v1j = cohomologyClassOf;
  DGAlgebraImpl.prototype.w1j = cocycleRepresentativeOf;
  DGAlgebraImpl.prototype.r1k = multiply_0;
  DGAlgebraImpl.prototype.s1k = multiply_1;
  DGAlgebraImpl.prototype.x1k = convertToScalar;
  DGAlgebraImpl.prototype.y1k = parse;
  DGAlgebraImpl.prototype.m1j = getIdeal;
  DGAlgebraContextImpl.prototype.i1m = pow;
  DGAlgebraContextImpl.prototype.j1m = pow_0;
  DGAlgebraContextImpl.prototype.l1m = toScalar_0;
  DGAlgebraContextImpl.prototype.o1m = product;
  DGAlgebraContextImpl.prototype.v1k = get_unit;
  DGDerivationImpl.prototype.h1o = induce_2;
  DGLieAlgebraImpl.prototype.v1j = cohomologyClassOf;
  DGLieAlgebraImpl.prototype.r1k = multiply_0;
  DGLieAlgebraImpl.prototype.s1k = multiply_1;
  DGLieAlgebraContextImpl.prototype.p1p = ad;
  DGMagmaImpl.prototype.v1j = cohomologyClassOf;
  DGMagmaImpl.prototype.r1k = multiply_0;
  DGMagmaImpl.prototype.s1k = multiply_1;
  DGMagmaContextImpl.prototype.c1l = times_10;
  DGMagmaContextImpl.prototype.d1l = times_2;
  DGMagmaContextImpl.prototype.e1l = times_3;
  DGMagmaContextImpl.prototype.f1l = times_4;
  DGMagmaContextImpl.prototype.g1l = times_5;
  DGMagmaContextImpl.prototype.h1l = times_6;
  DGMagmaContextImpl.prototype.i1l = times_7;
  DGMagmaContextImpl.prototype.j1l = times_0;
  DGMagmaContextImpl.prototype.k1l = times_1;
  DGMagmaContextImpl.prototype.l1l = times;
  DGMagmaContextImpl.prototype.m1l = times_9;
  DGMagmaContextImpl.prototype.n1j = get_d;
  DGMagmaContextImpl.prototype.o1l = cohomologyClass;
  DGMagmaContextImpl.prototype.u1k = get_zeroGVector;
  DGMagmaContextImpl.prototype.q1l = plus_3;
  DGMagmaContextImpl.prototype.r1l = plus_4;
  DGMagmaContextImpl.prototype.s1l = plus_2;
  DGMagmaContextImpl.prototype.t1l = plus_1;
  DGMagmaContextImpl.prototype.u1l = minus_1;
  DGMagmaContextImpl.prototype.v1l = minus_2;
  DGMagmaContextImpl.prototype.w1l = minus_0;
  DGMagmaContextImpl.prototype.x1l = minus;
  DGMagmaContextImpl.prototype.y1l = unaryMinus_1;
  DGMagmaContextImpl.prototype.z1l = unaryMinus_2;
  DGMagmaContextImpl.prototype.a1m = unaryMinus_0;
  DGMagmaContextImpl.prototype.b1m = unaryMinus;
  DGMagmaContextImpl.prototype.c1m = sum_1;
  DGMagmaContextImpl.prototype.d1m = sum_0;
  DGMagmaContextImpl.prototype.e1m = get_0;
  DGMagmaContextImpl.prototype.f1m = div;
  DGMagmaContextImpl.prototype.g1m = div_0;
  DGMagmaContextImpl.prototype.h1m = inv;
  DGMagmaContextImpl.prototype.k1m = toScalar;
  DGMagmaContextImpl.prototype.m1m = get_zero;
  DGMagmaContextImpl.prototype.n1m = get_one;
  DGVectorSpaceImpl.prototype.v1j = cohomologyClassOf;
  DerivationImpl.prototype.h1o = induce_2;
  GAlgebraContextImpl.prototype.v1k = get_unit;
  GAlgebraContextImpl.prototype.i1m = pow;
  GAlgebraContextImpl.prototype.j1m = pow_0;
  GAlgebraContextImpl.prototype.l1m = toScalar_0;
  GAlgebraContextImpl.prototype.o1m = product;
  GLieAlgebraImpl.prototype.r1k = multiply_0;
  GLieAlgebraImpl.prototype.s1k = multiply_1;
  GLieAlgebraContextImpl.prototype.p1p = ad;
  GLinearMapImpl.prototype.y1j = get_degreeGroup;
  GLinearMapImpl.prototype.o1j = invoke;
  GLinearMapImpl.prototype.s1n = findPreimage;
  GLinearMapImpl.prototype.x1n = kernel;
  GLinearMapImpl.prototype.t1n = image;
  GLinearMapImpl.prototype.r1n = cokernel;
  GLinearMapImpl.prototype.v1n = induce;
  GLinearMapImpl.prototype.u1n = induce_0;
  GLinearMapImpl.prototype.w1n = induce_1;
  GMagmaContextImpl.prototype.c1l = times_8;
  GMagmaContextImpl.prototype.m1l = times_9;
  GVector.prototype.y1s = isNotZero;
  GVectorSpaceImpl.prototype.l = get;
  GVectorSpaceImpl.prototype.e1k = get_field;
  GVectorSpaceImpl.prototype.f1k = fromVector;
  GVectorSpaceImpl.prototype.g1k = fromVector_0;
  GVectorSpaceImpl.prototype.h1k = fromBasisName;
  GVectorSpaceImpl.prototype.i1k = getBasis;
  GVectorSpaceImpl.prototype.j1k = getZero;
  GVectorSpaceImpl.prototype.k1k = getZero_0;
  GVectorSpaceImpl.prototype.l1k = convertToGVector;
  GVectorSpaceImpl.prototype.m1k = contains;
  GVectorSpaceImpl.prototype.n1k = contains_0;
  GVectorSpaceImpl.prototype.o1k = add;
  GVectorSpaceImpl.prototype.p1k = subtract;
  GVectorSpaceImpl.prototype.q1k = multiply;
  GVectorSpaceImpl.prototype.t1k = divideByGVector;
  GVectorContextImpl.prototype.u1k = get_zeroGVector;
  GVectorContextImpl.prototype.q1l = plus_3;
  GVectorContextImpl.prototype.r1l = plus_4;
  GVectorContextImpl.prototype.u1l = minus_1;
  GVectorContextImpl.prototype.v1l = minus_2;
  GVectorContextImpl.prototype.d1l = times_2;
  GVectorContextImpl.prototype.e1l = times_3;
  GVectorContextImpl.prototype.f1l = times_4;
  GVectorContextImpl.prototype.g1l = times_5;
  GVectorContextImpl.prototype.h1l = times_6;
  GVectorContextImpl.prototype.i1l = times_7;
  GVectorContextImpl.prototype.y1l = unaryMinus_1;
  GVectorContextImpl.prototype.z1l = unaryMinus_2;
  GVectorContextImpl.prototype.c1m = sum_1;
  QuotDGAlgebraImpl.prototype.l1j = getDGIdeal;
  QuotDGAlgebraImpl.prototype.s1j = getQuotientByIdeal_0;
  QuotDGAlgebraImpl.prototype.z1k = getQuotientByIdeal;
  QuotDGAlgebraImpl.prototype.v1j = cohomologyClassOf;
  QuotDGAlgebraImpl.prototype.w1j = cocycleRepresentativeOf;
  QuotDGAlgebraImpl.prototype.r1k = multiply_0;
  QuotDGAlgebraImpl.prototype.s1k = multiply_1;
  QuotDGAlgebraImpl.prototype.x1k = convertToScalar;
  QuotDGAlgebraImpl.prototype.y1k = parse;
  QuotDGAlgebraImpl.prototype.m1j = getIdeal;
  QuotGAlgebraImpl.prototype.x1k = convertToScalar;
  QuotGAlgebraImpl.prototype.z1k = getQuotientByIdeal;
  QuotGAlgebraImpl.prototype.r1k = multiply_0;
  QuotGAlgebraImpl.prototype.s1k = multiply_1;
  QuotGVectorSpaceImpl.prototype.e1k = get_field;
  QuotGVectorSpaceImpl.prototype.f1k = fromVector;
  QuotGVectorSpaceImpl.prototype.g1k = fromVector_0;
  QuotGVectorSpaceImpl.prototype.h1k = fromBasisName;
  QuotGVectorSpaceImpl.prototype.i1k = getBasis;
  QuotGVectorSpaceImpl.prototype.x1o = getBasis_0;
  QuotGVectorSpaceImpl.prototype.j1k = getZero;
  QuotGVectorSpaceImpl.prototype.k1k = getZero_0;
  QuotGVectorSpaceImpl.prototype.l1k = convertToGVector;
  QuotGVectorSpaceImpl.prototype.m1k = contains;
  QuotGVectorSpaceImpl.prototype.n1k = contains_0;
  QuotGVectorSpaceImpl.prototype.o1k = add;
  QuotGVectorSpaceImpl.prototype.p1k = subtract;
  QuotGVectorSpaceImpl.prototype.q1k = multiply;
  QuotGVectorSpaceImpl.prototype.t1k = divideByGVector;
  SubDGVectorSpaceImpl.prototype.v1j = cohomologyClassOf;
  SubGVectorSpaceImpl.prototype.p1j = subspaceContains;
  SubGVectorSpaceImpl.prototype.e1k = get_field;
  SubGVectorSpaceImpl.prototype.f1k = fromVector;
  SubGVectorSpaceImpl.prototype.g1k = fromVector_0;
  SubGVectorSpaceImpl.prototype.h1k = fromBasisName;
  SubGVectorSpaceImpl.prototype.i1k = getBasis;
  SubGVectorSpaceImpl.prototype.x1o = getBasis_0;
  SubGVectorSpaceImpl.prototype.j1k = getZero;
  SubGVectorSpaceImpl.prototype.k1k = getZero_0;
  SubGVectorSpaceImpl.prototype.l1k = convertToGVector;
  SubGVectorSpaceImpl.prototype.m1k = contains;
  SubGVectorSpaceImpl.prototype.n1k = contains_0;
  SubGVectorSpaceImpl.prototype.o1k = add;
  SubGVectorSpaceImpl.prototype.p1k = subtract;
  SubGVectorSpaceImpl.prototype.q1k = multiply;
  SubGVectorSpaceImpl.prototype.t1k = divideByGVector;
  WholeSubGVectorSpace.prototype.p1j = subspaceContains;
  WholeSubGVectorSpace.prototype.e1k = get_field;
  WholeSubGVectorSpace.prototype.f1k = fromVector;
  WholeSubGVectorSpace.prototype.g1k = fromVector_0;
  WholeSubGVectorSpace.prototype.h1k = fromBasisName;
  WholeSubGVectorSpace.prototype.i1k = getBasis;
  WholeSubGVectorSpace.prototype.x1o = getBasis_0;
  WholeSubGVectorSpace.prototype.j1k = getZero;
  WholeSubGVectorSpace.prototype.k1k = getZero_0;
  WholeSubGVectorSpace.prototype.l1k = convertToGVector;
  WholeSubGVectorSpace.prototype.m1k = contains;
  WholeSubGVectorSpace.prototype.n1k = contains_0;
  WholeSubGVectorSpace.prototype.o1k = add;
  WholeSubGVectorSpace.prototype.p1k = subtract;
  WholeSubGVectorSpace.prototype.q1k = multiply;
  WholeSubGVectorSpace.prototype.t1k = divideByGVector;
  SubQuotGAlgebraImpl.prototype.x1k = convertToScalar;
  SubQuotGAlgebraImpl.prototype.z1k = getQuotientByIdeal;
  SubQuotGAlgebraImpl.prototype.r1k = multiply_0;
  SubQuotGAlgebraImpl.prototype.s1k = multiply_1;
  SubQuotGLieAlgebraImpl.prototype.r1k = multiply_0;
  SubQuotGLieAlgebraImpl.prototype.s1k = multiply_1;
  SubQuotGMagmaImpl.prototype.r1k = multiply_0;
  SubQuotGMagmaImpl.prototype.s1k = multiply_1;
  SubQuotGVectorSpaceImpl.prototype.p1j = subspaceContains_0;
  SubQuotGVectorSpaceImpl.prototype.e1k = get_field;
  SubQuotGVectorSpaceImpl.prototype.f1k = fromVector;
  SubQuotGVectorSpaceImpl.prototype.g1k = fromVector_0;
  SubQuotGVectorSpaceImpl.prototype.h1k = fromBasisName;
  SubQuotGVectorSpaceImpl.prototype.i1k = getBasis;
  SubQuotGVectorSpaceImpl.prototype.x1o = getBasis_0;
  SubQuotGVectorSpaceImpl.prototype.c1s = getBasisForAugmentedDegree;
  SubQuotGVectorSpaceImpl.prototype.j1k = getZero;
  SubQuotGVectorSpaceImpl.prototype.k1k = getZero_0;
  SubQuotGVectorSpaceImpl.prototype.l1k = convertToGVector;
  SubQuotGVectorSpaceImpl.prototype.m1k = contains;
  SubQuotGVectorSpaceImpl.prototype.n1k = contains_0;
  SubQuotGVectorSpaceImpl.prototype.o1k = add;
  SubQuotGVectorSpaceImpl.prototype.p1k = subtract;
  SubQuotGVectorSpaceImpl.prototype.q1k = multiply;
  SubQuotGVectorSpaceImpl.prototype.t1k = divideByGVector;
  IntDegree.prototype.y1s = isNotZero_0;
  IntDegree.prototype.f22 = isOdd;
  IntDegree.prototype.g22 = koszulSign;
  IntDegreeGroup.prototype.m1m = get_zero_0;
  MultiDegree.prototype.y1s = isNotZero_0;
  MultiDegree.prototype.f22 = isOdd;
  MultiDegree.prototype.g22 = koszulSign;
  MultiDegreeGroup.prototype.m1m = get_zero_0;
  CohomologicalMinimalModel.prototype.r25 = toProgress;
  FreeDGAlgebraImpl.prototype.o25 = getDGAlgebraMap;
  FreeDGAlgebraImpl.prototype.n2a = convertDegree_0;
  FreeDGAlgebraImpl.prototype.o2a = toIntDegree;
  FreeDGAlgebraImpl.prototype.p2a = toJson;
  FreeDGAlgebraImpl.prototype.l1j = getDGIdeal;
  FreeDGAlgebraImpl.prototype.s1j = getQuotientByIdeal_0;
  FreeDGAlgebraImpl.prototype.z1k = getQuotientByIdeal;
  FreeDGAlgebraImpl.prototype.v1j = cohomologyClassOf;
  FreeDGAlgebraImpl.prototype.w1j = cocycleRepresentativeOf;
  FreeDGAlgebraImpl.prototype.r1k = multiply_0;
  FreeDGAlgebraImpl.prototype.s1k = multiply_1;
  FreeDGAlgebraImpl.prototype.x1k = convertToScalar;
  FreeDGAlgebraImpl.prototype.y1k = parse;
  FreeDGAlgebraImpl.prototype.z29 = parse_0;
  FreeDGAlgebraImpl.prototype.m1j = getIdeal;
  FreeDGAlgebraImpl.prototype.i1o = get_generatorList;
  FreeDGAlgebraImpl.prototype.r29 = getDerivation;
  FreeDGAlgebraImpl.prototype.d2a = getDerivation_0;
  FreeDGAlgebraImpl.prototype.m2a = getGAlgebraMap;
  FreeDGAlgebraImpl.prototype.e2a = containsIndeterminate;
  FreeDGAlgebraImpl.prototype.r2a = getGeneratorsForParser;
  FreeDGAlgebraContextImpl.prototype.z29 = parse_1;
  FreeGAlgebraImpl.prototype.i1o = get_generatorList;
  FreeGAlgebraImpl.prototype.r29 = getDerivation;
  FreeGAlgebraImpl.prototype.d2a = getDerivation_0;
  FreeGAlgebraImpl.prototype.e2a = containsIndeterminate;
  FreeGAlgebraImpl.prototype.z29 = parse_0;
  FreeGAlgebraImpl.prototype.r2a = getGeneratorsForParser;
  FreeGAlgebraImpl.prototype.n2a = convertDegree;
  FreeGAlgebraContextImpl.prototype.z29 = parse_1;
  $serializer.prototype.e10 = typeParametersSerializers;
  HomologicalMinimalModel.prototype.r25 = toProgress;
  MonoidGAlgebraImpl.prototype.x1k = convertToScalar;
  MonoidGAlgebraImpl.prototype.y1k = parse;
  MonoidGAlgebraImpl.prototype.z1k = getQuotientByIdeal;
  MonoidGAlgebraImpl.prototype.r1k = multiply_0;
  MonoidGAlgebraImpl.prototype.s1k = multiply_1;
  DenseMatrixSpace.prototype.q2l = fromRowList$default;
  DenseMatrixSpace.prototype.a2m = getIdentity;
  DenseMatrixSpace.prototype.y2l = fromColList;
  DenseMatrixSpace.prototype.b2m = fromColMap;
  DenseMatrix.prototype.d2h = toList_2;
  DenseMatrix.prototype.e2m = toNumVectorList;
  DenseNumVectorSpace.prototype.v2m = getOneAtIndex;
  DenseNumVectorSpace.prototype.w2m = fromReducedValueMap;
  ScalarContextImpl.prototype.t1l = plus_1;
  ScalarContextImpl.prototype.x1l = minus;
  ScalarContextImpl.prototype.l1l = times;
  ScalarContextImpl.prototype.b1m = unaryMinus;
  ScalarContextImpl.prototype.f1m = div;
  ScalarContextImpl.prototype.g1m = div_0;
  ScalarContextImpl.prototype.h1m = inv;
  ScalarContextImpl.prototype.k1m = toScalar;
  ScalarContextImpl.prototype.m1m = get_zero;
  ScalarContextImpl.prototype.n1m = get_one;
  ScalarContextImpl.prototype.d1m = sum_0;
  MatrixContextImpl.prototype.b2o = times_11;
  MatrixContextImpl.prototype.z2n = get_rowEchelonForm;
  MatrixContextImpl.prototype.c2o = rowSlice;
  MatrixContextImpl.prototype.a2o = colSlice;
  MatrixContextImpl.prototype.y2n = join;
  MatrixContextImpl.prototype.d2o = transpose;
  MatrixContextImpl.prototype.e2o = computeKernelBasis;
  MatrixContextImpl.prototype.f2o = findPreimage_0;
  NumVectorContextImpl.prototype.s1l = plus_2;
  NumVectorContextImpl.prototype.w1l = minus_0;
  NumVectorContextImpl.prototype.j1l = times_0;
  NumVectorContextImpl.prototype.k1l = times_1;
  NumVectorContextImpl.prototype.a1m = unaryMinus_0;
  NumVectorContextImpl.prototype.e1m = get_0;
  AbstractSparseMatrixSpace.prototype.q2l = fromRowList$default;
  AbstractSparseMatrixSpace.prototype.a2m = getIdentity;
  AbstractSparseMatrixSpace.prototype.b2m = fromColMap;
  AbstractSparseMatrixSpace.prototype.z2l = fromNumVectorList;
  SparseMatrixSpace.prototype.q2l = fromRowList$default;
  SparseMatrixSpace.prototype.a2m = getIdentity;
  SparseMatrixSpace.prototype.b2m = fromColMap;
  SparseMatrixSpace.prototype.z2l = fromNumVectorList;
  DecomposedSparseMatrixSpace.prototype.q2l = fromRowList$default;
  DecomposedSparseMatrixSpace.prototype.a2m = getIdentity;
  DecomposedSparseMatrixSpace.prototype.b2m = fromColMap;
  DecomposedSparseMatrixSpace.prototype.z2l = fromNumVectorList;
  SparseMatrix.prototype.e2m = toNumVectorList;
  SparseNumVectorSpace.prototype.v2m = getOneAtIndex;
  CyclicModel.prototype.o25 = getDGAlgebraMap;
  CyclicModel.prototype.n2a = convertDegree_0;
  CyclicModel.prototype.o2a = toIntDegree;
  CyclicModel.prototype.p2a = toJson;
  CyclicModel.prototype.z29 = parse_0;
  CyclicModel.prototype.i1o = get_generatorList;
  CyclicModel.prototype.r29 = getDerivation;
  CyclicModel.prototype.d2a = getDerivation_0;
  CyclicModel.prototype.m2a = getGAlgebraMap;
  CyclicModel.prototype.e2a = containsIndeterminate;
  CyclicModel.prototype.r2a = getGeneratorsForParser;
  FreeLoopSpace.prototype.o25 = getDGAlgebraMap;
  FreeLoopSpace.prototype.n2a = convertDegree_0;
  FreeLoopSpace.prototype.o2a = toIntDegree;
  FreeLoopSpace.prototype.p2a = toJson;
  FreeLoopSpace.prototype.z29 = parse_0;
  FreeLoopSpace.prototype.i1o = get_generatorList;
  FreeLoopSpace.prototype.r29 = getDerivation;
  FreeLoopSpace.prototype.d2a = getDerivation_0;
  FreeLoopSpace.prototype.m2a = getGAlgebraMap;
  FreeLoopSpace.prototype.e2a = containsIndeterminate;
  FreeLoopSpace.prototype.r2a = getGeneratorsForParser;
  KotlinRational.prototype.y1s = isNotZero_1;
  KotlinRational.prototype.w2n = toString_3;
  KotlinRational.prototype.c1n = toString_4;
  ValueBilinearMap.prototype.g1u = image_0;
  DirectSumBasis.prototype.c1n = toString_2;
  DirectSum.prototype.q25 = get_dim;
  DirectSum.prototype.e1k = get_field_0;
  DirectSum.prototype.b2v = contains_1;
  DirectSum.prototype.q2v = add_0;
  DirectSum.prototype.r2v = subtract_0;
  DirectSum.prototype.s2v = multiply_2;
  DirectSum.prototype.m1w = divideByVector;
  DirectSum.prototype.t2v = fromNumVector;
  DirectSum.prototype.u2v = fromCoeffList;
  DirectSum.prototype.g1w = fromBasisName_0;
  DirectSum.prototype.i1w = get_zeroVector;
  DirectSum.prototype.h1w = getBasis_1;
  QuotBasis.prototype.c1n = toString_2;
  QuotVectorSpaceImpl.prototype.q25 = get_dim;
  QuotVectorSpaceImpl.prototype.e1k = get_field_0;
  QuotVectorSpaceImpl.prototype.b2v = contains_1;
  QuotVectorSpaceImpl.prototype.q2v = add_0;
  QuotVectorSpaceImpl.prototype.r2v = subtract_0;
  QuotVectorSpaceImpl.prototype.s2v = multiply_2;
  QuotVectorSpaceImpl.prototype.m1w = divideByVector;
  QuotVectorSpaceImpl.prototype.t2v = fromNumVector;
  QuotVectorSpaceImpl.prototype.u2v = fromCoeffList;
  QuotVectorSpaceImpl.prototype.g1w = fromBasisName_0;
  QuotVectorSpaceImpl.prototype.i1w = get_zeroVector;
  QuotVectorSpaceImpl.prototype.h1w = getBasis_1;
  SubQuotBasis.prototype.c1n = toString_2;
  SubQuotVectorSpace.prototype.q25 = get_dim;
  SubQuotVectorSpace.prototype.e1k = get_field_0;
  SubQuotVectorSpace.prototype.b2v = contains_1;
  SubQuotVectorSpace.prototype.q2v = add_0;
  SubQuotVectorSpace.prototype.r2v = subtract_0;
  SubQuotVectorSpace.prototype.s2v = multiply_2;
  SubQuotVectorSpace.prototype.m1w = divideByVector;
  SubQuotVectorSpace.prototype.t2v = fromNumVector;
  SubQuotVectorSpace.prototype.u2v = fromCoeffList;
  SubQuotVectorSpace.prototype.g1w = fromBasisName_0;
  SubQuotVectorSpace.prototype.i1w = get_zeroVector;
  SubQuotVectorSpace.prototype.h1w = getBasis_1;
  SubBasis.prototype.c1n = toString_2;
  SubVectorSpaceImpl.prototype.q25 = get_dim;
  SubVectorSpaceImpl.prototype.e1k = get_field_0;
  SubVectorSpaceImpl.prototype.b2v = contains_1;
  SubVectorSpaceImpl.prototype.q2v = add_0;
  SubVectorSpaceImpl.prototype.r2v = subtract_0;
  SubVectorSpaceImpl.prototype.s2v = multiply_2;
  SubVectorSpaceImpl.prototype.m1w = divideByVector;
  SubVectorSpaceImpl.prototype.t2v = fromNumVector;
  SubVectorSpaceImpl.prototype.u2v = fromCoeffList;
  SubVectorSpaceImpl.prototype.g1w = fromBasisName_0;
  SubVectorSpaceImpl.prototype.i1w = get_zeroVector;
  SubVectorSpaceImpl.prototype.h1w = getBasis_1;
  WholeSubVectorSpace.prototype.q25 = get_dim;
  WholeSubVectorSpace.prototype.e1k = get_field_0;
  WholeSubVectorSpace.prototype.b2v = contains_1;
  WholeSubVectorSpace.prototype.q2v = add_0;
  WholeSubVectorSpace.prototype.r2v = subtract_0;
  WholeSubVectorSpace.prototype.s2v = multiply_2;
  WholeSubVectorSpace.prototype.m1w = divideByVector;
  WholeSubVectorSpace.prototype.t2v = fromNumVector;
  WholeSubVectorSpace.prototype.u2v = fromCoeffList;
  WholeSubVectorSpace.prototype.g1w = fromBasisName_0;
  WholeSubVectorSpace.prototype.i1w = get_zeroVector;
  WholeSubVectorSpace.prototype.h1w = getBasis_1;
  VectorSpaceImpl.prototype.q25 = get_dim;
  VectorSpaceImpl.prototype.e1k = get_field_0;
  VectorSpaceImpl.prototype.b2v = contains_1;
  VectorSpaceImpl.prototype.q2v = add_0;
  VectorSpaceImpl.prototype.r2v = subtract_0;
  VectorSpaceImpl.prototype.s2v = multiply_2;
  VectorSpaceImpl.prototype.m1w = divideByVector;
  VectorSpaceImpl.prototype.t2v = fromNumVector;
  VectorSpaceImpl.prototype.u2v = fromCoeffList;
  VectorSpaceImpl.prototype.g1w = fromBasisName_0;
  VectorSpaceImpl.prototype.i1w = get_zeroVector;
  VectorSpaceImpl.prototype.h1w = getBasis_1;
  VectorContextImpl.prototype.j1w = plus_5;
  VectorContextImpl.prototype.k1w = minus_3;
  VectorContextImpl.prototype.c2v = times_12;
  VectorContextImpl.prototype.l1w = times_13;
  VectorContextImpl.prototype.q2g = unaryMinus_3;
  VectorContextImpl.prototype.d2v = sum_2;
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = AugmentedDegreeGroup;
  _.$_$.b = IntDegreeGroup;
  _.$_$.c = DGAlgebra;
  _.$_$.d = GVector;
  _.$_$.e = InvalidIdentifierException;
  _.$_$.f = QuotDGAlgebra;
  _.$_$.g = ZeroGVector;
  _.$_$.h = Indeterminate_0;
  _.$_$.i = FreeDGAlgebra;
  _.$_$.j = jsonToGeneratorList;
  _.$_$.k = get_SparseMatrixSpaceOverRational;
  _.$_$.l = PrintType_TEX_getInstance;
  _.$_$.m = ShowShift_BAR_getInstance;
  _.$_$.n = Printer_init_$Create$;
  _.$_$.o = StringIndeterminateName_init_$Create$;
  _.$_$.p = PrintConfig_init_$Create$;
  _.$_$.q = Printer_init_$Create$_0;
  _.$_$.r = IntDegreeGroup_getInstance;
  _.$_$.s = Companion_getInstance_37;
  _.$_$.t = Companion_getInstance_39;
  _.$_$.u = Companion_getInstance_41;
  _.$_$.v = Companion_getInstance_47;
  _.$_$.w = Companion_getInstance_63;
  _.$_$.x = Companion_getInstance_64;
  //endregion
  return _;
}));

//# sourceMappingURL=kohomology-js-ir.js.map


/***/ }),

/***/ 617:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
  if (true)
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(72), __webpack_require__(851), __webpack_require__(639), __webpack_require__(683), __webpack_require__(15)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  else {}
}(this, function (_, kotlin_kotlin, kotlin_com_github_shwaka_kohomology_kohomology, kotlin_com_github_h0tk3y_betterParse_better_parse, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var hashCode = kotlin_kotlin.$_$.q7;
  var THROW_CCE = kotlin_kotlin.$_$.ra;
  var equals = kotlin_kotlin.$_$.m7;
  var classMeta = kotlin_kotlin.$_$.k7;
  var interfaceMeta = kotlin_kotlin.$_$.r7;
  var Unit_getInstance = kotlin_kotlin.$_$.r3;
  var Exception_init_$Create$ = kotlin_kotlin.$_$.h1;
  var collectionSizeOrDefault = kotlin_kotlin.$_$.o4;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.q;
  var ArrayList_init_$Create$_0 = kotlin_kotlin.$_$.r;
  var noWhenBranchMatchedException = kotlin_kotlin.$_$.fb;
  var ZeroGVector = kotlin_com_github_shwaka_kohomology_kohomology.$_$.g;
  var GVector = kotlin_com_github_shwaka_kohomology_kohomology.$_$.d;
  var Companion_getInstance = kotlin_com_github_shwaka_kohomology_kohomology.$_$.x;
  var Companion_getInstance_0 = kotlin_com_github_shwaka_kohomology_kohomology.$_$.w;
  var Companion_getInstance_1 = kotlin_com_github_shwaka_kohomology_kohomology.$_$.s;
  var PrintType_TEX_getInstance = kotlin_com_github_shwaka_kohomology_kohomology.$_$.l;
  var Printer_init_$Create$ = kotlin_com_github_shwaka_kohomology_kohomology.$_$.q;
  var plus = kotlin_kotlin.$_$.e6;
  var Companion_getInstance_2 = kotlin_com_github_shwaka_kohomology_kohomology.$_$.t;
  var get_SparseMatrixSpaceOverRational = kotlin_com_github_shwaka_kohomology_kohomology.$_$.k;
  var lazy = kotlin_kotlin.$_$.eb;
  var joinToString$default = kotlin_kotlin.$_$.k;
  var QuotDGAlgebra = kotlin_com_github_shwaka_kohomology_kohomology.$_$.f;
  var isInterface = kotlin_kotlin.$_$.a8;
  var FreeDGAlgebra = kotlin_com_github_shwaka_kohomology_kohomology.$_$.i;
  var DGAlgebra = kotlin_com_github_shwaka_kohomology_kohomology.$_$.c;
  var IntDegreeGroup_getInstance = kotlin_com_github_shwaka_kohomology_kohomology.$_$.r;
  var Companion_getInstance_3 = kotlin_com_github_shwaka_kohomology_kohomology.$_$.v;
  var IntDegreeGroup = kotlin_com_github_shwaka_kohomology_kohomology.$_$.b;
  var emptyList = kotlin_kotlin.$_$.k5;
  var dropLast = kotlin_kotlin.$_$.h5;
  var last = kotlin_kotlin.$_$.w5;
  var listOf = kotlin_kotlin.$_$.x5;
  var ShowShift_BAR_getInstance = kotlin_com_github_shwaka_kohomology_kohomology.$_$.m;
  var PrintConfig_init_$Create$ = kotlin_com_github_shwaka_kohomology_kohomology.$_$.p;
  var Printer_init_$Create$_0 = kotlin_com_github_shwaka_kohomology_kohomology.$_$.n;
  var ParseException = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.n;
  var AugmentedDegreeGroup = kotlin_com_github_shwaka_kohomology_kohomology.$_$.a;
  var KProperty1 = kotlin_kotlin.$_$.a9;
  var getPropertyCallableRef = kotlin_kotlin.$_$.o7;
  var charSequenceGet = kotlin_kotlin.$_$.h7;
  var Char = kotlin_kotlin.$_$.ha;
  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.u1;
  var toString = kotlin_kotlin.$_$.r8;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.k1;
  var drop = kotlin_kotlin.$_$.h9;
  var dropLast_0 = kotlin_kotlin.$_$.g9;
  var objectMeta = kotlin_kotlin.$_$.n8;
  var NoMatchingToken = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.m;
  var Collection = kotlin_kotlin.$_$.u3;
  var AlternativesFailure = kotlin_com_github_h0tk3y_betterParse_better_parse.$_$.l;
  var prependIndent = kotlin_kotlin.$_$.l9;
  var Default_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.a;
  var List = kotlin_kotlin.$_$.c4;
  var getKClass = kotlin_kotlin.$_$.e;
  var PrimitiveClasses_getInstance = kotlin_kotlin.$_$.k3;
  var arrayOf = kotlin_kotlin.$_$.ab;
  var createKType = kotlin_kotlin.$_$.b;
  var createInvariantKTypeProjection = kotlin_kotlin.$_$.a;
  var serializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.d2;
  var KSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.w1;
  var Enum = kotlin_kotlin.$_$.ka;
  var first = kotlin_kotlin.$_$.n5;
  var mutableListOf = kotlin_kotlin.$_$.c6;
  var copyToArray = kotlin_kotlin.$_$.e5;
  var getStringHashCode = kotlin_kotlin.$_$.p7;
  var Exception = kotlin_kotlin.$_$.la;
  var jsonToGeneratorList = kotlin_com_github_shwaka_kohomology_kohomology.$_$.j;
  var StringIndeterminateName_init_$Create$ = kotlin_com_github_shwaka_kohomology_kohomology.$_$.o;
  var IllegalArgumentException = kotlin_kotlin.$_$.ma;
  var Indeterminate = kotlin_com_github_shwaka_kohomology_kohomology.$_$.h;
  var Companion_getInstance_4 = kotlin_com_github_shwaka_kohomology_kohomology.$_$.u;
  var trimIndent = kotlin_kotlin.$_$.fa;
  var InvalidIdentifierException = kotlin_com_github_shwaka_kohomology_kohomology.$_$.e;
  //endregion
  //region block: pre-declaration
  MessageType.prototype = Object.create(Enum.prototype);
  MessageType.prototype.constructor = MessageType;
  StringType.prototype = Object.create(Enum.prototype);
  StringType.prototype.constructor = StringType;
  ValidationResultType.prototype = Object.create(Enum.prototype);
  ValidationResultType.prototype.constructor = ValidationResultType;
  Success.prototype = Object.create(ValidationResultInternal.prototype);
  Success.prototype.constructor = Success;
  Error_0.prototype = Object.create(ValidationResultInternal.prototype);
  Error_0.prototype.constructor = Error_0;
  //endregion
  function Left(value) {
    this.z2y_1 = value;
  }
  Left.prototype.toString = function () {
    return 'Left(value=' + this.z2y_1 + ')';
  };
  Left.prototype.hashCode = function () {
    return this.z2y_1 == null ? 0 : hashCode(this.z2y_1);
  };
  Left.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Left))
      return false;
    var tmp0_other_with_cast = other instanceof Left ? other : THROW_CCE();
    if (!equals(this.z2y_1, tmp0_other_with_cast.z2y_1))
      return false;
    return true;
  };
  Left.$metadata$ = classMeta('Left', [Either]);
  function Right(value) {
    this.a2z_1 = value;
  }
  Right.prototype.toString = function () {
    return 'Right(value=' + this.a2z_1 + ')';
  };
  Right.prototype.hashCode = function () {
    return this.a2z_1 == null ? 0 : hashCode(this.a2z_1);
  };
  Right.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Right))
      return false;
    var tmp0_other_with_cast = other instanceof Right ? other : THROW_CCE();
    if (!equals(this.a2z_1, tmp0_other_with_cast.a2z_1))
      return false;
    return true;
  };
  Right.$metadata$ = classMeta('Right', [Either]);
  function Either() {
  }
  Either.$metadata$ = interfaceMeta('Either');
  function _get_freeLoopSpace__mpio85($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = freeLoopSpace$factory();
    tmp$ret$0 = $this.c2z_1.f1();
    return tmp$ret$0;
  }
  function _get_cyclicModel__pgehsx($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = cyclicModel$factory();
    tmp$ret$0 = $this.d2z_1.f1();
    return tmp$ret$0;
  }
  function _get_derivationLieAlgebra__ahlx7w($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = derivationLieAlgebra$factory();
    tmp$ret$0 = $this.e2z_1.f1();
    return tmp$ret$0;
  }
  function getDGVectorSpace($this, name) {
    var tmp0_subject = name;
    var tmp;
    switch (tmp0_subject) {
      case 'self':
        tmp = $this.b2z_1;
        break;
      case 'freeLoopSpace':
        tmp = _get_freeLoopSpace__mpio85($this);
        break;
      case 'cyclic':
        tmp = _get_cyclicModel__pgehsx($this);
        break;
      case 'derivation':
        tmp = _get_derivationLieAlgebra__ahlx7w($this);
        break;
      case 'idealQuot':
        var tmp1_elvis_lhs = $this.g2z_1;
        var tmp_0;
        if (tmp1_elvis_lhs == null) {
          throw Exception_init_$Create$('ideal is not set');
        } else {
          tmp_0 = tmp1_elvis_lhs;
        }

        tmp = tmp_0;
        break;
      default:
        throw Exception_init_$Create$('Invalid name: ' + name);
    }
    return tmp;
  }
  function createIdeal($this, idealJson) {
    var tmp$ret$6;
    // Inline function 'kotlin.collections.mapNotNull' call
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = jsonToIdealGenerators(idealJson);
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'FreeDGAWrapper.createIdeal.<anonymous>' call
      tmp$ret$0 = $this.b2z_1.z29(item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var tmp1_mapNotNull = tmp$ret$2;
    var tmp$ret$5;
    // Inline function 'kotlin.collections.mapNotNullTo' call
    var tmp0_mapNotNullTo = ArrayList_init_$Create$_0();
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator_0 = tmp1_mapNotNull.f();
    while (tmp0_iterator_0.g()) {
      var element = tmp0_iterator_0.h();
      // Inline function 'kotlin.collections.mapNotNullTo.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'FreeDGAWrapper.createIdeal.<anonymous>' call
      var tmp0_subject = element;
      var tmp;
      if (tmp0_subject instanceof GVector) {
        tmp = element;
      } else {
        if (tmp0_subject instanceof ZeroGVector) {
          tmp = null;
        } else {
          noWhenBranchMatchedException();
        }
      }
      tmp$ret$3 = tmp;
      var tmp0_safe_receiver = tmp$ret$3;
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$4;
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        tmp0_mapNotNullTo.a(tmp0_safe_receiver);
        tmp$ret$4 = Unit_getInstance();
      }
    }
    tmp$ret$5 = tmp0_mapNotNullTo;
    tmp$ret$6 = tmp$ret$5;
    var generators = tmp$ret$6;
    return $this.b2z_1.l1j(generators);
  }
  function FreeDGAWrapper$freeLoopSpace$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance().l2s(this$0.b2z_1);
    };
  }
  function FreeDGAWrapper$cyclicModel$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_0().p2q(this$0.b2z_1);
    };
  }
  function FreeDGAWrapper$derivationLieAlgebra$delegate$lambda(this$0) {
    return function () {
      return Companion_getInstance_1().n27(this$0.b2z_1);
    };
  }
  function FreeDGAWrapper$idealInfo$lambda($prefix) {
    return function ($this$styledMessage) {
      return $this$styledMessage.h2z($prefix + '0');
    };
  }
  function FreeDGAWrapper$idealInfo$lambda_0($prefix, $generatorString) {
    return function ($this$styledMessage) {
      return $this$styledMessage.h2z($prefix + '(' + $generatorString + ')');
    };
  }
  function FreeDGAWrapper$computeCohomologyDim$lambda($degree, $dim) {
    return function ($this$styledMessage) {
      return $this$styledMessage.h2z('\\mathrm{dim}H^{' + $degree + '} = ' + $dim);
    };
  }
  function FreeDGAWrapper$computeCohomologyClass$lambda($targetName) {
    return function ($this$styledMessage) {
      return $this$styledMessage.i2z('Cannot compute class for ' + $targetName);
    };
  }
  function FreeDGAWrapper$computeMinimalModel$lambda($this$styledMessage) {
    return $this$styledMessage.i2z('Minimal model of free loop space is currently not supported.');
  }
  function FreeDGAWrapper$computeMinimalModel$lambda_0($this$styledMessage) {
    return $this$styledMessage.i2z('Minimal model can be computed only for DGAs.');
  }
  function FreeDGAWrapper$computeMinimalModel$lambda_1($this$styledMessage) {
    return $this$styledMessage.i2z("Internal error! This can't happen!");
  }
  function FreeDGAWrapper$computeMinimalModel$lambda_2($reportProgress) {
    return function (progress) {
      $reportProgress(progress.p2f_1, progress.q2f_1, progress.r2f_1);
      return Unit_getInstance();
    };
  }
  function FreeDGAWrapper$computeMinimalModel$lambda_3($targetDGVectorSpace) {
    return function ($this$styledMessage) {
      var tmp = PrintType_TEX_getInstance();
      var p = Printer_init_$Create$(tmp, null, null, null, null, 30, null);
      return plus(plus($this$styledMessage.i2z('The minimal model of '), $this$styledMessage.h2z(p.u29($targetDGVectorSpace))), $this$styledMessage.i2z(' is'));
    };
  }
  function FreeDGAWrapper(json) {
    this.b2z_1 = Companion_getInstance_2().l2a(get_SparseMatrixSpaceOverRational(), json);
    var tmp = this;
    tmp.c2z_1 = lazy(FreeDGAWrapper$freeLoopSpace$delegate$lambda(this));
    var tmp_0 = this;
    tmp_0.d2z_1 = lazy(FreeDGAWrapper$cyclicModel$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.e2z_1 = lazy(FreeDGAWrapper$derivationLieAlgebra$delegate$lambda(this));
    this.f2z_1 = null;
    this.g2z_1 = null;
  }
  FreeDGAWrapper.prototype.tryParseIdealGeneratorString = function (generatorString) {
    this.b2z_1.z29(generatorString);
  };
  FreeDGAWrapper.prototype.setIdeal = function (idealJson) {
    var dgIdeal = createIdeal(this, idealJson);
    this.f2z_1 = dgIdeal;
    this.g2z_1 = this.b2z_1.s1j(dgIdeal);
  };
  FreeDGAWrapper.prototype.tryCreateIdeal = function (idealJson) {
    createIdeal(this, idealJson);
  };
  FreeDGAWrapper.prototype.dgaInfo = function () {
    return getDGAInfo(this.b2z_1, 'V');
  };
  FreeDGAWrapper.prototype.idealInfo = function () {
    var tmp0_elvis_lhs = this.f2z_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw Exception_init_$Create$('Ideal is not set');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var dgIdeal = tmp;
    var prefix = 'I = ';
    if (dgIdeal.i1o().p()) {
      var tmp_0 = MessageType_SUCCESS_getInstance();
      return styledMessage(tmp_0, FreeDGAWrapper$idealInfo$lambda(prefix)).m2z();
    }
    var tmp_1 = dgIdeal.i1o();
    var generatorString = joinToString$default(tmp_1, ', ', null, null, 0, null, null, 62, null);
    var tmp_2 = MessageType_SUCCESS_getInstance();
    return styledMessage(tmp_2, FreeDGAWrapper$idealInfo$lambda_0(prefix, generatorString)).m2z();
  };
  FreeDGAWrapper.prototype.computationHeader = function (targetName, minDegree, maxDegree) {
    var targetDGVectorSpace = getDGVectorSpace(this, targetName);
    return computationHeader(targetDGVectorSpace, minDegree, maxDegree).m2z();
  };
  FreeDGAWrapper.prototype.computeCohomology = function (targetName, degree) {
    var targetDGVectorSpace = getDGVectorSpace(this, targetName);
    return computeCohomology(targetDGVectorSpace, degree).m2z();
  };
  FreeDGAWrapper.prototype.computeCohomologyDim = function (targetName, degree) {
    var targetDGVectorSpace = getDGVectorSpace(this, targetName);
    var dim = getBasis(targetDGVectorSpace, degree).i();
    var tmp = MessageType_SUCCESS_getInstance();
    return styledMessage(tmp, FreeDGAWrapper$computeCohomologyDim$lambda(degree, dim)).m2z();
  };
  FreeDGAWrapper.prototype.computeCohomologyClass = function (targetName, cocycleString, showBasis) {
    var targetDGVectorSpace = getDGVectorSpace(this, targetName);
    var tmp;
    if (isInterface(targetDGVectorSpace, FreeDGAlgebra)) {
      tmp = computeCohomologyClass(targetDGVectorSpace, cocycleString, showBasis).m2z();
    } else {
      if (isInterface(targetDGVectorSpace, QuotDGAlgebra)) {
        if (isInterface(targetDGVectorSpace, QuotDGAlgebra))
          targetDGVectorSpace;
        else
          THROW_CCE();
        tmp = computeCohomologyClassInQuotient(this.b2z_1, targetDGVectorSpace, cocycleString, showBasis).m2z();
      } else {
        var tmp_0 = MessageType_ERROR_getInstance();
        tmp = styledMessage(tmp_0, FreeDGAWrapper$computeCohomologyClass$lambda(targetName)).m2z();
      }
    }
    return tmp;
  };
  FreeDGAWrapper.prototype.computeMinimalModel = function (targetName, isomorphismUpTo, reportProgress) {
    if (targetName === 'freeLoopSpace') {
      var tmp$ret$2;
      // Inline function 'kotlin.arrayOf' call
      var tmp = MessageType_ERROR_getInstance();
      var tmp0_arrayOf = [styledMessage(tmp, FreeDGAWrapper$computeMinimalModel$lambda).m2z()];
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_arrayOf;
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      return tmp$ret$2;
    }
    var targetDGVectorSpace = getDGVectorSpace(this, targetName);
    if (!isInterface(targetDGVectorSpace, DGAlgebra)) {
      var tmp$ret$5;
      // Inline function 'kotlin.arrayOf' call
      var tmp_0 = MessageType_ERROR_getInstance();
      var tmp1_arrayOf = [styledMessage(tmp_0, FreeDGAWrapper$computeMinimalModel$lambda_0).m2z()];
      var tmp$ret$4;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$3;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$3 = tmp1_arrayOf;
      tmp$ret$4 = tmp$ret$3;
      tmp$ret$5 = tmp$ret$4;
      return tmp$ret$5;
    }
    if (!equals(targetDGVectorSpace.y1j(), IntDegreeGroup_getInstance())) {
      var tmp$ret$8;
      // Inline function 'kotlin.arrayOf' call
      var tmp_1 = MessageType_ERROR_getInstance();
      var tmp2_arrayOf = [styledMessage(tmp_1, FreeDGAWrapper$computeMinimalModel$lambda_1).m2z()];
      var tmp$ret$7;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$6;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$6 = tmp2_arrayOf;
      tmp$ret$7 = tmp$ret$6;
      tmp$ret$8 = tmp$ret$7;
      return tmp$ret$8;
    }
    if (isInterface(targetDGVectorSpace, DGAlgebra))
      targetDGVectorSpace;
    else
      THROW_CCE();
    var tmp_2 = Companion_getInstance_3();
    var minimalModel = tmp_2.p25(targetDGVectorSpace, isomorphismUpTo, FreeDGAWrapper$computeMinimalModel$lambda_2(reportProgress));
    var tmp$ret$13;
    // Inline function 'kotlin.collections.plus' call
    var tmp$ret$11;
    // Inline function 'kotlin.arrayOf' call
    var tmp_3 = MessageType_SUCCESS_getInstance();
    var tmp3_arrayOf = [styledMessage(tmp_3, FreeDGAWrapper$computeMinimalModel$lambda_3(targetDGVectorSpace)).m2z()];
    var tmp$ret$10;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$9;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$9 = tmp3_arrayOf;
    tmp$ret$10 = tmp$ret$9;
    tmp$ret$11 = tmp$ret$10;
    var tmp4_plus = tmp$ret$11;
    var tmp5_plus = getDGAInfo(minimalModel.y25(), 'W');
    var tmp$ret$12;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$12 = tmp4_plus;
    tmp$ret$13 = tmp$ret$12.concat(tmp5_plus);
    return tmp$ret$13;
  };
  FreeDGAWrapper.$metadata$ = classMeta('FreeDGAWrapper');
  function getBasis(dgVectorSpace, degree) {
    var tmp;
    var tmp_0 = dgVectorSpace.y1j();
    if (tmp_0 instanceof IntDegreeGroup) {
      tmp = dgVectorSpace.i1j().x1o(degree);
    } else {
      tmp = dgVectorSpace.i1j().c1s(degree);
    }
    return tmp;
  }
  function joinToStyledMathString(_this__u8e3s4, separator, transform) {
    if (_this__u8e3s4.p()) {
      return emptyList();
    }
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = dropLast(_this__u8e3s4, 1);
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'joinToStyledMathString.<anonymous>' call
      tmp$ret$0 = new StyledStringInternal(StringType_MATH_getInstance(), transform(item) + separator);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    return plus(tmp$ret$2, listOf(new StyledStringInternal(StringType_MATH_getInstance(), transform(last(_this__u8e3s4)))));
  }
  function computeCohomologyInternal(dgVectorSpace, degree) {
    var tmp = PrintType_TEX_getInstance();
    var p = Printer_init_$Create$_0(PrintConfig_init_$Create$(tmp, null, null, null, ShowShift_BAR_getInstance(), 14, null));
    var basis = getBasis(dgVectorSpace, degree);
    var tmp_0 = MessageType_SUCCESS_getInstance();
    return styledMessage(tmp_0, computeCohomologyInternal$lambda(basis, degree, p));
  }
  function computeCohomology(dgVectorSpace, degree) {
    return computeCohomologyInternal(dgVectorSpace, degree);
  }
  function computationHeader(dgVectorSpace, minDegree, maxDegree) {
    var tmp;
    if (isInterface(dgVectorSpace, FreeDGAlgebra)) {
      tmp = new MessageOptionsInternal(dgVectorSpace.p2a());
    } else {
      tmp = MessageOptionsInternal_init_$Create$(null, 1, null);
    }
    var options = tmp;
    var tmp_0 = MessageType_SUCCESS_getInstance();
    return styledMessage(tmp_0, computationHeader$lambda(dgVectorSpace, minDegree, maxDegree)).n2z(options);
  }
  function getCocycle(freeDGAlgebra, cocycleString) {
    var tmp;
    try {
      tmp = new Right(freeDGAlgebra.z29(cocycleString));
    } catch ($p) {
      var tmp_0;
      if ($p instanceof ParseException) {
        var tmp_1 = MessageType_ERROR_getInstance();
        var message = styledMessage(tmp_1, getCocycle$lambda(freeDGAlgebra, $p));
        tmp_0 = new Left(message);
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function computeCohomologyClass(freeDGAlgebra, cocycleString, showBasis) {
    var cocycleOrMessage = getCocycle(freeDGAlgebra, cocycleString);
    var tmp;
    if (cocycleOrMessage instanceof Left) {
      tmp = cocycleOrMessage.z2y_1;
    } else {
      if (cocycleOrMessage instanceof Right) {
        var cocycle = cocycleOrMessage.a2z_1;
        var tmp_0;
        if (cocycle instanceof ZeroGVector) {
          var tmp_1 = MessageType_SUCCESS_getInstance();
          tmp_0 = styledMessage(tmp_1, computeCohomologyClass$lambda);
        } else {
          if (cocycle instanceof GVector) {
            tmp_0 = computeCohomologyClass_0(freeDGAlgebra, cocycle, showBasis);
          } else {
            noWhenBranchMatchedException();
          }
        }
        tmp = tmp_0;
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp;
  }
  function computeCohomologyClassInQuotient(freeDGAlgebra, quotDGAlgebra, cocycleString, showBasis) {
    var cocycleOrMessage = getCocycle(freeDGAlgebra, cocycleString);
    var tmp;
    if (cocycleOrMessage instanceof Left) {
      tmp = cocycleOrMessage.z2y_1;
    } else {
      if (cocycleOrMessage instanceof Right) {
        var cocycle = cocycleOrMessage.a2z_1;
        var tmp_0;
        if (cocycle instanceof ZeroGVector) {
          var tmp_1 = MessageType_SUCCESS_getInstance();
          tmp_0 = styledMessage(tmp_1, computeCohomologyClassInQuotient$lambda);
        } else {
          if (cocycle instanceof GVector) {
            var proj = quotDGAlgebra.s1q();
            var quotCocycle = proj.o1j(cocycle);
            tmp_0 = computeCohomologyClass_0(quotDGAlgebra, quotCocycle, showBasis);
          } else {
            noWhenBranchMatchedException();
          }
        }
        tmp = tmp_0;
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp;
  }
  function computeCohomologyClass_0(dgAlgebra, cocycle, showBasis) {
    var degreeGroup = dgAlgebra.y1j();
    if (!isInterface(degreeGroup, AugmentedDegreeGroup)) {
      var tmp = MessageType_ERROR_getInstance();
      return styledMessage(tmp, computeCohomologyClass$lambda_0);
    }
    var tmp_0 = PrintType_TEX_getInstance();
    var p = Printer_init_$Create$(tmp_0, null, null, null, ShowShift_BAR_getInstance(), 14, null);
    var tmp$ret$2;
    // Inline function 'kotlin.run' call
    var tmp0_run = dgAlgebra.c1j();
    // Inline function 'kotlin.contracts.contract' call
    if (tmp0_run.n1j().o1j(cocycle).y1s()) {
      var tmp_1 = MessageType_ERROR_getInstance();
      return styledMessage(tmp_1, computeCohomologyClass$lambda_1(p, cocycle, tmp0_run));
    }
    var tmp$ret$1;
    // Inline function 'kotlin.run' call
    var tmp0_run_0 = degreeGroup.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'computeCohomologyClass.<anonymous>.<anonymous>' call
    tmp$ret$0 = tmp0_run_0.a1j(cocycle.u1q_1);
    tmp$ret$1 = tmp$ret$0;
    var degree = tmp$ret$1;
    var tmp_2 = MessageType_SUCCESS_getInstance();
    return styledMessage(tmp_2, computeCohomologyClass$lambda_2(showBasis, dgAlgebra, degree, p, cocycle, tmp0_run));
  }
  function getDGAInfo(freeDGAlgebra, generatingVectorSpaceName) {
    var dgaJson = freeDGAlgebra.p2a();
    var tmp = PrintType_TEX_getInstance();
    var p = Printer_init_$Create$(tmp, null, null, null, null, 30, null);
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp_0 = MessageType_SUCCESS_getInstance();
    var tmp_1 = styledMessage(tmp_0, getDGAInfo$lambda(generatingVectorSpaceName, freeDGAlgebra, p)).n2z(new MessageOptionsInternal(dgaJson)).m2z();
    var tmp_2 = MessageType_SUCCESS_getInstance();
    var tmp_3 = styledMessage(tmp_2, getDGAInfo$lambda_0(freeDGAlgebra, p)).m2z();
    var tmp_4 = MessageType_SUCCESS_getInstance();
    var tmp0_arrayOf = [tmp_1, tmp_3, styledMessage(tmp_4, getDGAInfo$lambda_1(freeDGAlgebra, p)).m2z()];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function computeCohomologyInternal$lambda$lambda($p) {
    return function (it) {
      return $p.u29(it);
    };
  }
  function computeCohomologyInternal$lambda($basis, $degree, $p) {
    return function ($this$styledMessage) {
      var tmp;
      if ($basis.p()) {
        tmp = $this$styledMessage.h2z('0');
      } else {
        var tmp_0 = $this$styledMessage.h2z('\\mathbb{Q}\\{');
        tmp = plus(plus(tmp_0, joinToStyledMathString($basis, ',\\ ', computeCohomologyInternal$lambda$lambda($p))), $this$styledMessage.h2z('\\}'));
      }
      var vectorSpace = tmp;
      return plus($this$styledMessage.h2z('H^{' + $degree + '} =\\ '), vectorSpace);
    };
  }
  function computationHeader$lambda($dgVectorSpace, $minDegree, $maxDegree) {
    return function ($this$styledMessage) {
      var tmp = PrintType_TEX_getInstance();
      var p = Printer_init_$Create$(tmp, null, null, null, ShowShift_BAR_getInstance(), 14, null);
      var dgVectorSpaceWithoutParen = ParenParser_getInstance().q2z(p.u29($dgVectorSpace));
      var printed = $this$styledMessage.h2z('H^n(' + dgVectorSpaceWithoutParen + ')');
      return plus(plus(plus($this$styledMessage.i2z('Computing '), printed), $this$styledMessage.i2z(' for ')), $this$styledMessage.h2z('' + $minDegree + ' \\leq n \\leq ' + $maxDegree));
    };
  }
  function getCocycle$lambda$lambda(it) {
    return it.z4_1;
  }
  function getCocycle$lambda($freeDGAlgebra, $e) {
    return function ($this$styledMessage) {
      var tmp = $freeDGAlgebra.r2a();
      var generatorsString = joinToString$default(tmp, ', ', null, null, 0, null, getCocycle$lambda$lambda, 30, null);
      return plus(plus($this$styledMessage.i2z('[Error] Parse failed.\n'), $this$styledMessage.i2z('Note: Current generators are ' + generatorsString + '\n')), $this$styledMessage.i2z('' + $e.q1i_1 + '\n'));
    };
  }
  function computeCohomologyClass$lambda($this$styledMessage) {
    return $this$styledMessage.i2z('The cocycle is zero.');
  }
  function computeCohomologyClassInQuotient$lambda($this$styledMessage) {
    return $this$styledMessage.i2z('The cocycle is zero.');
  }
  function computeCohomologyClass$lambda_0($this$styledMessage) {
    return $this$styledMessage.i2z('Internal error: degreeGroup is not AugmentedDegreeGroup.');
  }
  function computeCohomologyClass$lambda_1($p, $cocycle, $tmp0_run) {
    return function ($this$styledMessage) {
      return plus(plus($this$styledMessage.h2z($p.u29($cocycle)), $this$styledMessage.i2z(' is not a cocycle: ')), $this$styledMessage.h2z('d(' + $p.u29($cocycle) + ') = ' + $p.u29($tmp0_run.n1j().o1j($cocycle))));
    };
  }
  function computeCohomologyClass$lambda_2($showBasis, $dgAlgebra, $degree, $p, $cocycle, $tmp0_run) {
    return function ($this$styledMessage) {
      var tmp;
      if ($showBasis) {
        tmp = computeCohomologyInternal($dgAlgebra, $degree).k2z_1;
      } else {
        tmp = $this$styledMessage.h2z('H^' + $degree);
      }
      var cohomologyString = tmp;
      return plus($this$styledMessage.h2z('[' + $p.u29($cocycle) + '] = ' + $p.u29($tmp0_run.o1l($cocycle)) + ' \\in '), cohomologyString);
    };
  }
  function getDGAInfo$lambda$lambda($p) {
    return function (it) {
      return $p.u29(it);
    };
  }
  function getDGAInfo$lambda($generatingVectorSpaceName, $freeDGAlgebra, $p) {
    return function ($this$styledMessage) {
      var tmp = plus($this$styledMessage.h2z('(\\Lambda ' + $generatingVectorSpaceName + ', d) = '), $this$styledMessage.h2z('(\\Lambda('));
      var tmp_0 = $freeDGAlgebra.t23();
      return plus(plus(tmp, joinToStyledMathString(tmp_0, ',\\ ', getDGAInfo$lambda$lambda($p))), $this$styledMessage.h2z('), d)'));
    };
  }
  function getDGAInfo$lambda$lambda_0($p) {
    return function (it) {
      return '\\deg{' + $p.u29(it.p29_1) + '} = ' + it.q29_1;
    };
  }
  function getDGAInfo$lambda_0($freeDGAlgebra, $p) {
    return function ($this$styledMessage) {
      var tmp = $freeDGAlgebra.t23();
      return joinToStyledMathString(tmp, ',\\ ', getDGAInfo$lambda$lambda_0($p));
    };
  }
  function getDGAInfo$lambda$lambda_1($p, $tmp0_run) {
    return function (it) {
      return 'd' + $p.u29(it) + ' = ' + $p.u29($tmp0_run.n1j().o1j(it));
    };
  }
  function getDGAInfo$lambda_1($freeDGAlgebra, $p) {
    return function ($this$styledMessage) {
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      var tmp0_run = $freeDGAlgebra.c1j();
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'getDGAInfo.<anonymous>.<anonymous>' call
      var tmp = $freeDGAlgebra.i1o();
      tmp$ret$0 = joinToStyledMathString(tmp, ',\\ ', getDGAInfo$lambda$lambda_1($p, tmp0_run));
      tmp$ret$1 = tmp$ret$0;
      return tmp$ret$1;
    };
  }
  function freeLoopSpace$factory() {
    return getPropertyCallableRef('freeLoopSpace', 1, KProperty1, function (receiver) {
      return _get_freeLoopSpace__mpio85(receiver);
    }, null);
  }
  function cyclicModel$factory() {
    return getPropertyCallableRef('cyclicModel', 1, KProperty1, function (receiver) {
      return _get_cyclicModel__pgehsx(receiver);
    }, null);
  }
  function derivationLieAlgebra$factory() {
    return getPropertyCallableRef('derivationLieAlgebra', 1, KProperty1, function (receiver) {
      return _get_derivationLieAlgebra__ahlx7w(receiver);
    }, null);
  }
  function findParenClose($this, text, start) {
    // Inline function 'kotlin.require' call
    var tmp0_require = equals(new Char(charSequenceGet(text, start)), new Char(_Char___init__impl__6a9atx(40)));
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'ParenParser.findParenClose.<anonymous>' call
      tmp$ret$0 = '' + start + '-th char of "' + text + '" must be (, but was ' + new Char(charSequenceGet(text, start));
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    var position = start;
    var depth = 0;
    while (position < text.length) {
      var tmp0_subject = charSequenceGet(text, position);
      if (equals(new Char(tmp0_subject), new Char(_Char___init__impl__6a9atx(40)))) {
        var tmp1 = depth;
        depth = tmp1 + 1 | 0;
      } else if (equals(new Char(tmp0_subject), new Char(_Char___init__impl__6a9atx(41)))) {
        var tmp2 = depth;
        depth = tmp2 - 1 | 0;
      }
      if (depth === 0) {
        return position;
      }
      var tmp3 = position;
      position = tmp3 + 1 | 0;
    }
    return null;
  }
  function isSurroundedByParen($this, text) {
    var positionClose = findParenClose($this, text, 0);
    return positionClose === (text.length - 1 | 0);
  }
  function ParenParser() {
    ParenParser_instance = this;
    this.o2z_1 = _Char___init__impl__6a9atx(40);
    this.p2z_1 = _Char___init__impl__6a9atx(41);
  }
  ParenParser.prototype.r2z = function () {
    return this.o2z_1;
  };
  ParenParser.prototype.q2z = function (text) {
    var tmp;
    if (isSurroundedByParen(this, text)) {
      tmp = dropLast_0(drop(text, 1), 1);
    } else {
      tmp = text;
    }
    return tmp;
  };
  ParenParser.$metadata$ = objectMeta('ParenParser');
  var ParenParser_instance;
  function ParenParser_getInstance() {
    if (ParenParser_instance == null)
      new ParenParser();
    return ParenParser_instance;
  }
  function isFailureAtTheBeginning(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4;
    var tmp;
    if (tmp0_subject instanceof AlternativesFailure) {
      var tmp$ret$0;
      $l$block_0: {
        // Inline function 'kotlin.collections.all' call
        var tmp0_all = _this__u8e3s4.r1i_1;
        var tmp_0;
        if (isInterface(tmp0_all, Collection)) {
          tmp_0 = tmp0_all.p();
        } else {
          tmp_0 = false;
        }
        if (tmp_0) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
        var tmp0_iterator = tmp0_all.f();
        while (tmp0_iterator.g()) {
          var element = tmp0_iterator.h();
          var tmp$ret$1;
          // Inline function 'isFailureAtTheBeginning.<anonymous>' call
          tmp$ret$1 = isFailureAtTheBeginning(element);
          if (!tmp$ret$1) {
            tmp$ret$0 = false;
            break $l$block_0;
          }
        }
        tmp$ret$0 = true;
      }
      tmp = tmp$ret$0;
    } else {
      if (tmp0_subject instanceof NoMatchingToken) {
        tmp = _this__u8e3s4.n1i_1.z1h_1 === 0;
      } else {
        tmp = false;
      }
    }
    return tmp;
  }
  function isFailureAtTheBeginning_0(_this__u8e3s4) {
    return isFailureAtTheBeginning(_this__u8e3s4.q1i_1);
  }
  function format(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4;
    var tmp;
    if (tmp0_subject instanceof AlternativesFailure) {
      tmp = 'AlternativesFailure(errors=[\n' + joinToString$default(_this__u8e3s4.r1i_1, ',\n', null, null, 0, null, format$lambda, 30, null) + '\n])';
    } else {
      tmp = _this__u8e3s4.toString();
    }
    return tmp;
  }
  function format_0(_this__u8e3s4) {
    return format(_this__u8e3s4.q1i_1);
  }
  function format$lambda(it) {
    return prependIndent(format(it), '  ');
  }
  function jsonToIdealGenerators(json) {
    var tmp$ret$2;
    // Inline function 'kotlinx.serialization.decodeFromString' call
    var tmp0_decodeFromString = Default_getInstance();
    var tmp$ret$1;
    // Inline function 'kotlinx.serialization.serializer' call
    var tmp1_serializer = tmp0_decodeFromString.sr();
    var tmp$ret$0;
    // Inline function 'kotlinx.serialization.internal.cast' call
    var tmp0_cast = serializer(tmp1_serializer, createKType(getKClass(List), arrayOf([createInvariantKTypeProjection(createKType(PrimitiveClasses_getInstance().ke(), arrayOf([]), false))]), false));
    tmp$ret$0 = isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE();
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp0_decodeFromString.rr(tmp$ret$1, json);
    return tmp$ret$2;
  }
  function MessageOptionsKt(dgaJson, plainString) {
    this.s2z_1 = dgaJson;
    this.t2z_1 = plainString;
  }
  MessageOptionsKt.prototype.u2z = function () {
    return this.s2z_1;
  };
  MessageOptionsKt.prototype.v2z = function () {
    return this.t2z_1;
  };
  MessageOptionsKt.$metadata$ = classMeta('MessageOptionsKt');
  Object.defineProperty(MessageOptionsKt.prototype, 'dgaJson', {
    configurable: true,
    get: MessageOptionsKt.prototype.u2z
  });
  Object.defineProperty(MessageOptionsKt.prototype, 'plainString', {
    configurable: true,
    get: MessageOptionsKt.prototype.v2z
  });
  function MessageOptionsInternal_init_$Init$(dgaJson, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      dgaJson = null;
    MessageOptionsInternal.call($this, dgaJson);
    return $this;
  }
  function MessageOptionsInternal_init_$Create$(dgaJson, $mask0, $marker) {
    return MessageOptionsInternal_init_$Init$(dgaJson, $mask0, $marker, Object.create(MessageOptionsInternal.prototype));
  }
  function MessageOptionsInternal(dgaJson) {
    this.w2z_1 = dgaJson;
  }
  MessageOptionsInternal.prototype.x2z = function (plainString) {
    return new MessageOptionsKt(this.w2z_1, plainString);
  };
  MessageOptionsInternal.$metadata$ = classMeta('MessageOptionsInternal');
  function StyledMessageKt(messageType, strings, plainString, options) {
    this.y2z_1 = messageType;
    this.z2z_1 = strings;
    this.a30_1 = plainString;
    this.b30_1 = options;
  }
  StyledMessageKt.prototype.c30 = function () {
    return this.y2z_1;
  };
  StyledMessageKt.prototype.d30 = function () {
    return this.z2z_1;
  };
  StyledMessageKt.prototype.v2z = function () {
    return this.a30_1;
  };
  StyledMessageKt.prototype.e30 = function () {
    return this.b30_1;
  };
  StyledMessageKt.$metadata$ = classMeta('StyledMessageKt');
  Object.defineProperty(StyledMessageKt.prototype, 'messageType', {
    configurable: true,
    get: StyledMessageKt.prototype.c30
  });
  Object.defineProperty(StyledMessageKt.prototype, 'strings', {
    configurable: true,
    get: StyledMessageKt.prototype.d30
  });
  Object.defineProperty(StyledMessageKt.prototype, 'plainString', {
    configurable: true,
    get: StyledMessageKt.prototype.v2z
  });
  Object.defineProperty(StyledMessageKt.prototype, 'options', {
    configurable: true,
    get: StyledMessageKt.prototype.e30
  });
  var MessageType_SUCCESS_instance;
  var MessageType_ERROR_instance;
  var MessageType_entriesInitialized;
  function MessageType_initEntries() {
    if (MessageType_entriesInitialized)
      return Unit_getInstance();
    MessageType_entriesInitialized = true;
    MessageType_SUCCESS_instance = new MessageType('SUCCESS', 0, 'success');
    MessageType_ERROR_instance = new MessageType('ERROR', 1, 'error');
  }
  function MessageType(name, ordinal, typeName) {
    Enum.call(this, name, ordinal);
    this.h30_1 = typeName;
  }
  MessageType.$metadata$ = classMeta('MessageType', undefined, undefined, undefined, undefined, Enum.prototype);
  function StyledMessageInternal_init_$Init$(messageType, strings, options, $mask0, $marker, $this) {
    if (!(($mask0 & 4) === 0)) {
      options = MessageOptionsInternal_init_$Create$(null, 1, null);
    }
    StyledMessageInternal.call($this, messageType, strings, options);
    return $this;
  }
  function StyledMessageInternal_init_$Create$(messageType, strings, options, $mask0, $marker) {
    return StyledMessageInternal_init_$Init$(messageType, strings, options, $mask0, $marker, Object.create(StyledMessageInternal.prototype));
  }
  function getPlainString($this) {
    if ($this.k2z_1.p()) {
      return '';
    }
    var space = new StyledStringInternal(StringType_TEXT_getInstance(), ' ');
    var stringsWithSpaces = mutableListOf([first($this.k2z_1)]);
    var inductionVariable = 1;
    var last = $this.k2z_1.i();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if ($this.k2z_1.l(i - 1 | 0).i30_1.equals(StringType_MATH_getInstance()) ? $this.k2z_1.l(i).i30_1.equals(StringType_MATH_getInstance()) : false) {
          stringsWithSpaces.a(space);
        }
        stringsWithSpaces.a($this.k2z_1.l(i));
      }
       while (inductionVariable < last);
    return joinToString$default(stringsWithSpaces, '', null, null, 0, null, StyledMessageInternal$getPlainString$lambda, 30, null);
  }
  function StyledMessageInternal$getPlainString$lambda(styledString) {
    var tmp0_subject = styledString.i30_1;
    var tmp0 = tmp0_subject.d2_1;
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = styledString.j30_1;
        break;
      case 1:
        tmp = '$' + styledString.j30_1 + '$';
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function StyledMessageInternal(messageType, strings, options) {
    this.j2z_1 = messageType;
    this.k2z_1 = strings;
    this.l2z_1 = options;
  }
  StyledMessageInternal.prototype.m2z = function () {
    var tmp$ret$3;
    // Inline function 'kotlin.collections.toTypedArray' call
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = this.k2z_1;
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'styled.StyledMessageInternal.export.<anonymous>' call
      tmp$ret$0 = item.m2z();
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var tmp1_toTypedArray = tmp$ret$2;
    tmp$ret$3 = copyToArray(tmp1_toTypedArray);
    var strings = tmp$ret$3;
    var plainString = getPlainString(this);
    return new StyledMessageKt(this.j2z_1.h30_1, strings, plainString, this.l2z_1.x2z(plainString));
  };
  StyledMessageInternal.prototype.n2z = function (newOptions) {
    return new StyledMessageInternal(this.j2z_1, this.k2z_1, newOptions);
  };
  StyledMessageInternal.$metadata$ = classMeta('StyledMessageInternal');
  function StyledStringListBuilder() {
    StyledStringListBuilder_instance = this;
  }
  StyledStringListBuilder.prototype.i2z = function (_this__u8e3s4) {
    return listOf(new StyledStringInternal(StringType_TEXT_getInstance(), _this__u8e3s4));
  };
  StyledStringListBuilder.prototype.h2z = function (_this__u8e3s4) {
    return listOf(new StyledStringInternal(StringType_MATH_getInstance(), _this__u8e3s4));
  };
  StyledStringListBuilder.$metadata$ = objectMeta('StyledStringListBuilder');
  var StyledStringListBuilder_instance;
  function StyledStringListBuilder_getInstance() {
    if (StyledStringListBuilder_instance == null)
      new StyledStringListBuilder();
    return StyledStringListBuilder_instance;
  }
  function styledMessage(messageType, block) {
    var tmp = block(StyledStringListBuilder_getInstance());
    return StyledMessageInternal_init_$Create$(messageType, tmp, null, 4, null);
  }
  function MessageType_SUCCESS_getInstance() {
    MessageType_initEntries();
    return MessageType_SUCCESS_instance;
  }
  function MessageType_ERROR_getInstance() {
    MessageType_initEntries();
    return MessageType_ERROR_instance;
  }
  function StyledStringKt(stringType, content) {
    this.k30_1 = stringType;
    this.l30_1 = content;
  }
  StyledStringKt.prototype.m30 = function () {
    return this.k30_1;
  };
  StyledStringKt.prototype.c19 = function () {
    return this.l30_1;
  };
  StyledStringKt.$metadata$ = classMeta('StyledStringKt');
  Object.defineProperty(StyledStringKt.prototype, 'stringType', {
    configurable: true,
    get: StyledStringKt.prototype.m30
  });
  Object.defineProperty(StyledStringKt.prototype, 'content', {
    configurable: true,
    get: StyledStringKt.prototype.c19
  });
  var StringType_TEXT_instance;
  var StringType_MATH_instance;
  var StringType_entriesInitialized;
  function StringType_initEntries() {
    if (StringType_entriesInitialized)
      return Unit_getInstance();
    StringType_entriesInitialized = true;
    StringType_TEXT_instance = new StringType('TEXT', 0, 'text');
    StringType_MATH_instance = new StringType('MATH', 1, 'math');
  }
  function StringType(name, ordinal, typeName) {
    Enum.call(this, name, ordinal);
    this.p30_1 = typeName;
  }
  StringType.$metadata$ = classMeta('StringType', undefined, undefined, undefined, undefined, Enum.prototype);
  function StyledStringInternal(stringType, content) {
    this.i30_1 = stringType;
    this.j30_1 = content;
  }
  StyledStringInternal.prototype.m2z = function () {
    return new StyledStringKt(this.i30_1.p30_1, this.j30_1);
  };
  StyledStringInternal.$metadata$ = classMeta('StyledStringInternal');
  function StringType_TEXT_getInstance() {
    StringType_initEntries();
    return StringType_TEXT_instance;
  }
  function StringType_MATH_getInstance() {
    StringType_initEntries();
    return StringType_MATH_instance;
  }
  function ValidationResult(type, message) {
    this.q30_1 = type;
    this.r30_1 = message;
  }
  ValidationResult.prototype.w5 = function () {
    return this.q30_1;
  };
  ValidationResult.prototype.v1 = function () {
    return this.r30_1;
  };
  ValidationResult.prototype.component1 = function () {
    return this.q30_1;
  };
  ValidationResult.prototype.component2 = function () {
    return this.r30_1;
  };
  ValidationResult.prototype.copy = function (type, message) {
    return this.s30(type === void 1 ? this.q30_1 : type, message === void 1 ? this.r30_1 : message);
  };
  ValidationResult.prototype.s30 = function (type, message) {
    return new ValidationResult(type, message);
  };
  ValidationResult.prototype.t30 = function (type, message, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      type = this.q30_1;
    if (!(($mask0 & 2) === 0))
      message = this.r30_1;
    return this.s30(type, message);
  };
  ValidationResult.prototype.toString = function () {
    return 'ValidationResult(type=' + this.q30_1 + ', message=' + this.r30_1 + ')';
  };
  ValidationResult.prototype.hashCode = function () {
    var result = getStringHashCode(this.q30_1);
    result = imul(result, 31) + getStringHashCode(this.r30_1) | 0;
    return result;
  };
  ValidationResult.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof ValidationResult))
      return false;
    var tmp0_other_with_cast = other instanceof ValidationResult ? other : THROW_CCE();
    if (!(this.q30_1 === tmp0_other_with_cast.q30_1))
      return false;
    if (!(this.r30_1 === tmp0_other_with_cast.r30_1))
      return false;
    return true;
  };
  ValidationResult.$metadata$ = classMeta('ValidationResult');
  Object.defineProperty(ValidationResult.prototype, 'type', {
    configurable: true,
    get: ValidationResult.prototype.w5
  });
  Object.defineProperty(ValidationResult.prototype, 'message', {
    configurable: true,
    get: ValidationResult.prototype.v1
  });
  function validateJson(json) {
    try {
      new FreeDGAWrapper(json);
      return (new Success()).m2z();
    } catch ($p) {
      if ($p instanceof Exception) {
        var tmp0_elvis_lhs = $p.message;
        var message = tmp0_elvis_lhs == null ? $p.toString() : tmp0_elvis_lhs;
        return (new Error_0(message)).m2z();
      } else {
        throw $p;
      }
    }
  }
  function validateDifferentialValueOfTheLast(generatorsJson) {
    var generatorList = jsonToGeneratorList(generatorsJson);
    var previousGeneratorList = dropLast(generatorList, 1);
    var currentGenerator = last(generatorList);
    var tmp0_safe_receiver = assertDegreeOfDifferentialValue(previousGeneratorList, currentGenerator);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return tmp0_safe_receiver.m2z();
    }
    var tmp1_safe_receiver = assertSquareOfDifferentialIsZero(previousGeneratorList, currentGenerator);
    if (tmp1_safe_receiver == null)
      null;
    else {
      var tmp$ret$1;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return tmp1_safe_receiver.m2z();
    }
    return (new Success()).m2z();
  }
  function validateGeneratorName(generatorName) {
    var tmp;
    try {
      StringIndeterminateName_init_$Create$(generatorName, null, 2, null);
      tmp = (new Success()).m2z();
    } catch ($p) {
      var tmp_0;
      if ($p instanceof IllegalArgumentException) {
        var tmp0_elvis_lhs = $p.message;
        tmp_0 = (new Error_0(tmp0_elvis_lhs == null ? $p.toString() : tmp0_elvis_lhs)).m2z();
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function validateIdealGeneratorString(freeDGAWrapper, generatorString) {
    var tmp;
    try {
      freeDGAWrapper.tryParseIdealGeneratorString(generatorString);
      tmp = (new Success()).m2z();
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Exception) {
        var tmp0_elvis_lhs = $p.message;
        tmp_0 = (new Error_0(tmp0_elvis_lhs == null ? $p.toString() : tmp0_elvis_lhs)).m2z();
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function validateIdealJson(freeDGAWrapper, idealJson) {
    var tmp;
    try {
      freeDGAWrapper.tryCreateIdeal(idealJson);
      tmp = (new Success()).m2z();
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Exception) {
        var tmp0_elvis_lhs = $p.message;
        tmp_0 = (new Error_0(tmp0_elvis_lhs == null ? $p.toString() : tmp0_elvis_lhs)).m2z();
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  var ValidationResultType_SUCCESS_instance;
  var ValidationResultType_ERROR_instance;
  var ValidationResultType_entriesInitialized;
  function ValidationResultType_initEntries() {
    if (ValidationResultType_entriesInitialized)
      return Unit_getInstance();
    ValidationResultType_entriesInitialized = true;
    ValidationResultType_SUCCESS_instance = new ValidationResultType('SUCCESS', 0, 'success');
    ValidationResultType_ERROR_instance = new ValidationResultType('ERROR', 1, 'error');
  }
  function ValidationResultType(name, ordinal, typeName) {
    Enum.call(this, name, ordinal);
    this.y30_1 = typeName;
  }
  ValidationResultType.$metadata$ = classMeta('ValidationResultType', undefined, undefined, undefined, undefined, Enum.prototype);
  function Success() {
    ValidationResultInternal.call(this, ValidationResultType_SUCCESS_getInstance(), '');
  }
  Success.$metadata$ = classMeta('Success', undefined, undefined, undefined, undefined, ValidationResultInternal.prototype);
  function Error_0(message) {
    ValidationResultInternal.call(this, ValidationResultType_ERROR_getInstance(), message);
  }
  Error_0.$metadata$ = classMeta('Error', undefined, undefined, undefined, undefined, ValidationResultInternal.prototype);
  function ValidationResultInternal(type, message) {
    this.u30_1 = type;
    this.v30_1 = message;
  }
  ValidationResultInternal.prototype.m2z = function () {
    return new ValidationResult(this.u30_1.y30_1, this.v30_1);
  };
  ValidationResultInternal.$metadata$ = classMeta('ValidationResultInternal');
  function getErrorMessageForPreviousGenerators(generatorList) {
    var generatorsString = joinToString$default(generatorList, ', ', null, null, 0, null, getErrorMessageForPreviousGenerators$lambda, 30, null);
    return 'Please fix errors for generators (' + generatorsString + ') above this.';
  }
  function assertDegreeOfDifferentialValue(generatorList, currentGenerator) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(generatorList, 10));
    var tmp0_iterator = generatorList.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'assertDegreeOfDifferentialValue.<anonymous>' call
      tmp$ret$0 = Indeterminate(item.w29_1, item.x29_1);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var indeterminateList = tmp$ret$2;
    var tmp;
    try {
      tmp = Companion_getInstance_4().k2d(get_SparseMatrixSpaceOverRational(), indeterminateList);
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Exception) {
        var message = getErrorMessageForPreviousGenerators(generatorList);
        return new Error_0(message);
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    var freeGAlgebra = tmp;
    var differentialValue = currentGenerator.y29_1;
    var tmp_1;
    try {
      tmp_1 = freeGAlgebra.z29(differentialValue);
    } catch ($p) {
      var tmp_2;
      if ($p instanceof ParseException) {
        var tmp_3;
        if (isFailureAtTheBeginning_0($p)) {
          tmp_3 = 'Failed to parse the value "' + differentialValue + '" of the differential. ' + 'No matching token at the beginning.';
        } else {
          tmp_3 = 'Failed to parse the value "' + differentialValue + '" of the differential ' + ('with the following error message:\n' + format_0($p));
        }
        var message_0 = tmp_3;
        return new Error_0(message_0);
      } else {
        if ($p instanceof InvalidIdentifierException) {
          var message_1 = trimIndent('\n            Invalid generator name: ' + $p.w1s_1 + '\n            Valid names are: ' + joinToString$default($p.x1s_1, ', ', null, null, 0, null, null, 62, null) + '\n            Note: The generator "' + $p.w1s_1 + '" must be defined ABOVE this.\n        ');
          return new Error_0(message_1);
        } else {
          if ($p instanceof Exception) {
            var tmp0_elvis_lhs = $p.message;
            var message_2 = tmp0_elvis_lhs == null ? $p.toString() : tmp0_elvis_lhs;
            return new Error_0(message_2);
          } else {
            throw $p;
          }
        }
      }
      tmp_1 = tmp_2;
    }
    var gVector = tmp_1;
    var expectedDegree = currentGenerator.x29_1.x22_1 + 1 | 0;
    var tmp_4;
    if (gVector instanceof GVector) {
      tmp_4 = !(gVector.u1q_1.x22_1 === expectedDegree);
    } else {
      tmp_4 = false;
    }
    if (tmp_4) {
      var name = currentGenerator.w29_1;
      var message_3 = 'The degree of d(' + name + ') is expected to be deg(' + name + ')+1=' + expectedDegree + ', ' + ('but the given value ' + differentialValue + ' has degree ' + gVector.u1q_1.x22_1 + '.');
      return new Error_0(message_3);
    }
    return null;
  }
  function assertSquareOfDifferentialIsZero(generatorList, currentGenerator) {
    var differentialValue = currentGenerator.y29_1;
    var tmp;
    try {
      tmp = Companion_getInstance_2().k2a(get_SparseMatrixSpaceOverRational(), generatorList);
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Exception) {
        var message = getErrorMessageForPreviousGenerators(generatorList);
        return new Error_0(message);
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    var freeDGAlgebra = tmp;
    var tmp$ret$0;
    // Inline function 'kotlin.run' call
    var tmp0_run = freeDGAlgebra.c1j();
    // Inline function 'kotlin.contracts.contract' call
    var gVector = freeDGAlgebra.z29(differentialValue);
    var tmp_1;
    if (gVector instanceof ZeroGVector) {
      tmp_1 = null;
    } else {
      if (gVector instanceof GVector) {
        var gVectorWhichShouldBeZero = tmp0_run.n1j().o1j(gVector);
        var tmp0_subject = gVectorWhichShouldBeZero.dj();
        var tmp_2;
        switch (tmp0_subject) {
          case true:
            tmp_2 = null;
            break;
          case false:
            tmp_2 = new Error_0('d(d(' + currentGenerator.w29_1 + ')) must be zero, but was ' + gVectorWhichShouldBeZero);
            break;
          default:
            noWhenBranchMatchedException();
            break;
        }
        tmp_1 = tmp_2;
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp_1;
  }
  function getErrorMessageForPreviousGenerators$lambda(it) {
    return it.w29_1;
  }
  function ValidationResultType_SUCCESS_getInstance() {
    ValidationResultType_initEntries();
    return ValidationResultType_SUCCESS_instance;
  }
  function ValidationResultType_ERROR_getInstance() {
    ValidationResultType_initEntries();
    return ValidationResultType_ERROR_instance;
  }
  //region block: exports
  function $jsExportAll$(_) {
    _.FreeDGAWrapper = FreeDGAWrapper;
    var $styled = _.styled || (_.styled = {});
    $styled.MessageOptionsKt = MessageOptionsKt;
    var $styled = _.styled || (_.styled = {});
    $styled.StyledMessageKt = StyledMessageKt;
    var $styled = _.styled || (_.styled = {});
    $styled.StyledStringKt = StyledStringKt;
    _.ValidationResult = ValidationResult;
    _.validateJson = validateJson;
    _.validateDifferentialValueOfTheLast = validateDifferentialValueOfTheLast;
    _.validateGeneratorName = validateGeneratorName;
    _.validateIdealGeneratorString = validateIdealGeneratorString;
    _.validateIdealJson = validateIdealJson;
  }
  $jsExportAll$(_);
  //endregion
  return _;
}));

//# sourceMappingURL=kohomology-js.js.map


/***/ }),

/***/ 72:
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//region block: polyfills
if (typeof ArrayBuffer.isView === 'undefined') {
  ArrayBuffer.isView = function (a) {
    return a != null && a.__proto__ != null && a.__proto__.__proto__ === Int8Array.prototype.__proto__;
  };
}
if (typeof Math.log10 === 'undefined') {
  Math.log10 = function (x) {
    return Math.log(x) * Math.LOG10E;
  };
}
if (typeof String.prototype.startsWith === 'undefined') {
  Object.defineProperty(String.prototype, 'startsWith', {value: function (searchString, position) {
    position = position || 0;
    return this.lastIndexOf(searchString, position) === position;
  }});
}
if (typeof Math.imul === 'undefined') {
  Math.imul = function imul(a, b) {
    return (a & 4.29490176E9) * (b & 65535) + (a & 65535) * (b | 0) | 0;
  };
}
//endregion
(function (root, factory) {
  if (true)
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  else {}
}(this, function (_) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var isView = ArrayBuffer.isView;
  var log10 = Math.log10;
  //endregion
  //region block: pre-declaration
  Exception.prototype = Object.create(Error.prototype);
  Exception.prototype.constructor = Exception;
  RuntimeException.prototype = Object.create(Exception.prototype);
  RuntimeException.prototype.constructor = RuntimeException;
  KotlinNothingValueException.prototype = Object.create(RuntimeException.prototype);
  KotlinNothingValueException.prototype.constructor = KotlinNothingValueException;
  State.prototype = Object.create(Enum.prototype);
  State.prototype.constructor = State;
  AbstractList.prototype = Object.create(AbstractCollection.prototype);
  AbstractList.prototype.constructor = AbstractList;
  SubList.prototype = Object.create(AbstractList.prototype);
  SubList.prototype.constructor = SubList;
  ListIteratorImpl.prototype = Object.create(IteratorImpl.prototype);
  ListIteratorImpl.prototype.constructor = ListIteratorImpl;
  AbstractSet.prototype = Object.create(AbstractCollection.prototype);
  AbstractSet.prototype.constructor = AbstractSet;
  AbstractMap$keys$1.prototype = Object.create(AbstractSet.prototype);
  AbstractMap$keys$1.prototype.constructor = AbstractMap$keys$1;
  AbstractMap$values$1.prototype = Object.create(AbstractCollection.prototype);
  AbstractMap$values$1.prototype.constructor = AbstractMap$values$1;
  IntRange.prototype = Object.create(IntProgression.prototype);
  IntRange.prototype.constructor = IntRange;
  IntProgressionIterator.prototype = Object.create(IntIterator.prototype);
  IntProgressionIterator.prototype.constructor = IntProgressionIterator;
  KVariance.prototype = Object.create(Enum.prototype);
  KVariance.prototype.constructor = KVariance;
  Error_0.prototype = Object.create(Error.prototype);
  Error_0.prototype.constructor = Error_0;
  NotImplementedError.prototype = Object.create(Error_0.prototype);
  NotImplementedError.prototype.constructor = NotImplementedError;
  AbstractMutableCollection.prototype = Object.create(AbstractCollection.prototype);
  AbstractMutableCollection.prototype.constructor = AbstractMutableCollection;
  ListIteratorImpl_0.prototype = Object.create(IteratorImpl_0.prototype);
  ListIteratorImpl_0.prototype.constructor = ListIteratorImpl_0;
  AbstractMutableList.prototype = Object.create(AbstractMutableCollection.prototype);
  AbstractMutableList.prototype.constructor = AbstractMutableList;
  SubList_0.prototype = Object.create(AbstractMutableList.prototype);
  SubList_0.prototype.constructor = SubList_0;
  AbstractMutableSet.prototype = Object.create(AbstractMutableCollection.prototype);
  AbstractMutableSet.prototype.constructor = AbstractMutableSet;
  AbstractEntrySet.prototype = Object.create(AbstractMutableSet.prototype);
  AbstractEntrySet.prototype.constructor = AbstractEntrySet;
  AbstractMutableMap$keys$1.prototype = Object.create(AbstractMutableSet.prototype);
  AbstractMutableMap$keys$1.prototype.constructor = AbstractMutableMap$keys$1;
  AbstractMutableMap$values$1.prototype = Object.create(AbstractMutableCollection.prototype);
  AbstractMutableMap$values$1.prototype.constructor = AbstractMutableMap$values$1;
  AbstractMutableMap.prototype = Object.create(AbstractMap.prototype);
  AbstractMutableMap.prototype.constructor = AbstractMutableMap;
  ArrayList.prototype = Object.create(AbstractMutableList.prototype);
  ArrayList.prototype.constructor = ArrayList;
  EntrySet.prototype = Object.create(AbstractEntrySet.prototype);
  EntrySet.prototype.constructor = EntrySet;
  HashMap.prototype = Object.create(AbstractMutableMap.prototype);
  HashMap.prototype.constructor = HashMap;
  HashSet.prototype = Object.create(AbstractMutableSet.prototype);
  HashSet.prototype.constructor = HashSet;
  function createJsMap() {
    var result = Object.create(null);
    result['foo'] = 1;
    jsDeleteProperty(result, 'foo');
    return result;
  }
  ChainEntry.prototype = Object.create(SimpleEntry.prototype);
  ChainEntry.prototype.constructor = ChainEntry;
  EntrySet_0.prototype = Object.create(AbstractEntrySet.prototype);
  EntrySet_0.prototype.constructor = EntrySet_0;
  LinkedHashMap.prototype = Object.create(HashMap.prototype);
  LinkedHashMap.prototype.constructor = LinkedHashMap;
  LinkedHashSet.prototype = Object.create(HashSet.prototype);
  LinkedHashSet.prototype.constructor = LinkedHashSet;
  NodeJsOutput.prototype = Object.create(BaseOutput.prototype);
  NodeJsOutput.prototype.constructor = NodeJsOutput;
  BufferedOutput.prototype = Object.create(BaseOutput.prototype);
  BufferedOutput.prototype.constructor = BufferedOutput;
  BufferedOutputToConsoleLog.prototype = Object.create(BufferedOutput.prototype);
  BufferedOutputToConsoleLog.prototype.constructor = BufferedOutputToConsoleLog;
  PrimitiveKClassImpl.prototype = Object.create(KClassImpl.prototype);
  PrimitiveKClassImpl.prototype.constructor = PrimitiveKClassImpl;
  NothingKClassImpl.prototype = Object.create(KClassImpl.prototype);
  NothingKClassImpl.prototype.constructor = NothingKClassImpl;
  SimpleKClassImpl.prototype = Object.create(KClassImpl.prototype);
  SimpleKClassImpl.prototype.constructor = SimpleKClassImpl;
  CharCategory.prototype = Object.create(Enum.prototype);
  CharCategory.prototype.constructor = CharCategory;
  findNext$1$groups$1.prototype = Object.create(AbstractCollection.prototype);
  findNext$1$groups$1.prototype.constructor = findNext$1$groups$1;
  Long.prototype = Object.create(Number_0.prototype);
  Long.prototype.constructor = Long;
  asList$1.prototype = Object.create(AbstractList.prototype);
  asList$1.prototype.constructor = asList$1;
  IllegalArgumentException.prototype = Object.create(RuntimeException.prototype);
  IllegalArgumentException.prototype.constructor = IllegalArgumentException;
  IllegalStateException.prototype = Object.create(RuntimeException.prototype);
  IllegalStateException.prototype.constructor = IllegalStateException;
  NoSuchElementException.prototype = Object.create(RuntimeException.prototype);
  NoSuchElementException.prototype.constructor = NoSuchElementException;
  UnsupportedOperationException.prototype = Object.create(RuntimeException.prototype);
  UnsupportedOperationException.prototype.constructor = UnsupportedOperationException;
  IndexOutOfBoundsException.prototype = Object.create(RuntimeException.prototype);
  IndexOutOfBoundsException.prototype.constructor = IndexOutOfBoundsException;
  NumberFormatException.prototype = Object.create(IllegalArgumentException.prototype);
  NumberFormatException.prototype.constructor = NumberFormatException;
  ArithmeticException.prototype = Object.create(RuntimeException.prototype);
  ArithmeticException.prototype.constructor = ArithmeticException;
  NullPointerException.prototype = Object.create(RuntimeException.prototype);
  NullPointerException.prototype.constructor = NullPointerException;
  NoWhenBranchMatchedException.prototype = Object.create(RuntimeException.prototype);
  NoWhenBranchMatchedException.prototype.constructor = NoWhenBranchMatchedException;
  ClassCastException.prototype = Object.create(RuntimeException.prototype);
  ClassCastException.prototype.constructor = ClassCastException;
  UninitializedPropertyAccessException.prototype = Object.create(RuntimeException.prototype);
  UninitializedPropertyAccessException.prototype.constructor = UninitializedPropertyAccessException;
  //endregion
  function toList(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.length;
    switch (tmp0_subject) {
      case 0:
        return emptyList();
      case 1:
        return listOf_1(_this__u8e3s4[0]);
      default:
        return toMutableList(_this__u8e3s4);
    }
  }
  function withIndex(_this__u8e3s4) {
    return new IndexingIterable(withIndex$lambda(_this__u8e3s4));
  }
  function get_indices(_this__u8e3s4) {
    return new IntRange(0, get_lastIndex_0(_this__u8e3s4));
  }
  function indexOf(_this__u8e3s4, element) {
    if (element == null) {
      var inductionVariable = 0;
      var last = _this__u8e3s4.length - 1 | 0;
      if (inductionVariable <= last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (_this__u8e3s4[index] == null) {
            return index;
          }
        }
         while (inductionVariable <= last);
    } else {
      var inductionVariable_0 = 0;
      var last_0 = _this__u8e3s4.length - 1 | 0;
      if (inductionVariable_0 <= last_0)
        do {
          var index_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          if (equals_1(element, _this__u8e3s4[index_0])) {
            return index_0;
          }
        }
         while (inductionVariable_0 <= last_0);
    }
    return -1;
  }
  function contains(_this__u8e3s4, element) {
    return indexOf_0(_this__u8e3s4, element) >= 0;
  }
  function indexOfLast(_this__u8e3s4, predicate) {
    var inductionVariable = _this__u8e3s4.length - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        if (predicate(_this__u8e3s4[index])) {
          return index;
        }
      }
       while (0 <= inductionVariable);
    return -1;
  }
  function get_lastIndex(_this__u8e3s4) {
    return _this__u8e3s4.length - 1 | 0;
  }
  function contains_0(_this__u8e3s4, element) {
    return indexOf_1(_this__u8e3s4, element) >= 0;
  }
  function single(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.length;
    var tmp;
    switch (tmp0_subject) {
      case 0:
        throw NoSuchElementException_init_$Create$_0('Array is empty.');
      case 1:
        tmp = _this__u8e3s4[0];
        break;
      default:
        throw IllegalArgumentException_init_$Create$_0('Array has more than one element.');
    }
    return tmp;
  }
  function any(_this__u8e3s4, predicate) {
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var element = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      if (predicate(new Char_0(element)))
        return true;
    }
    return false;
  }
  function isEmpty(_this__u8e3s4) {
    return _this__u8e3s4.length === 0;
  }
  function contains_1(_this__u8e3s4, element) {
    return indexOf(_this__u8e3s4, element) >= 0;
  }
  function toMutableList(_this__u8e3s4) {
    return ArrayList_init_$Create$_1(asCollection(_this__u8e3s4));
  }
  function get_lastIndex_0(_this__u8e3s4) {
    return _this__u8e3s4.length - 1 | 0;
  }
  function indexOf_0(_this__u8e3s4, element) {
    var inductionVariable = 0;
    var last = _this__u8e3s4.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (element.equals(_this__u8e3s4[index])) {
          return index;
        }
      }
       while (inductionVariable <= last);
    return -1;
  }
  function get_indices_0(_this__u8e3s4) {
    return new IntRange(0, get_lastIndex(_this__u8e3s4));
  }
  function indexOf_1(_this__u8e3s4, element) {
    var inductionVariable = 0;
    var last = _this__u8e3s4.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (element === _this__u8e3s4[index]) {
          return index;
        }
      }
       while (inductionVariable <= last);
    return -1;
  }
  function toSet(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.length;
    switch (tmp0_subject) {
      case 0:
        return emptySet();
      case 1:
        return setOf_0(_this__u8e3s4[0]);
      default:
        return toCollection(_this__u8e3s4, LinkedHashSet_init_$Create$_1(mapCapacity(_this__u8e3s4.length)));
    }
  }
  function toCollection(_this__u8e3s4, destination) {
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var item = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      destination.a(item);
    }
    return destination;
  }
  function joinToString(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform) {
    return joinTo(_this__u8e3s4, StringBuilder_init_$Create$_1(), separator, prefix, postfix, limit, truncated, transform).toString();
  }
  function joinToString$default(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      separator = ', ';
    if (!(($mask0 & 2) === 0))
      prefix = '';
    if (!(($mask0 & 4) === 0))
      postfix = '';
    if (!(($mask0 & 8) === 0))
      limit = -1;
    if (!(($mask0 & 16) === 0))
      truncated = '...';
    if (!(($mask0 & 32) === 0))
      transform = null;
    return joinToString(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform);
  }
  function joinTo(_this__u8e3s4, buffer, separator, prefix, postfix, limit, truncated, transform) {
    buffer.b(prefix);
    var count = 0;
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    $l$loop: while (inductionVariable < last) {
      var element = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      count = count + 1 | 0;
      if (count > 1) {
        buffer.b(separator);
      }
      if (limit < 0 ? true : count <= limit) {
        appendElement(buffer, element, transform);
      } else
        break $l$loop;
    }
    if (limit >= 0 ? count > limit : false) {
      buffer.b(truncated);
    }
    buffer.b(postfix);
    return buffer;
  }
  function firstOrNull(_this__u8e3s4, predicate) {
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var element = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      if (predicate(element))
        return element;
    }
    return null;
  }
  function map(_this__u8e3s4, transform) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$_0(_this__u8e3s4.length);
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var item = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      tmp0_mapTo.a(transform(item));
    }
    tmp$ret$0 = tmp0_mapTo;
    return tmp$ret$0;
  }
  function toList_0(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.length;
    switch (tmp0_subject) {
      case 0:
        return emptyList();
      case 1:
        return listOf_1(_this__u8e3s4[0]);
      default:
        return toMutableList_0(_this__u8e3s4);
    }
  }
  function all(_this__u8e3s4, predicate) {
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var element = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      if (!predicate(element))
        return false;
    }
    return true;
  }
  function isEmpty_0(_this__u8e3s4) {
    return _this__u8e3s4.length === 0;
  }
  function mapIndexed(_this__u8e3s4, transform) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mapIndexedTo' call
    var tmp0_mapIndexedTo = ArrayList_init_$Create$_0(_this__u8e3s4.length);
    var index = 0;
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var item = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      tmp0_mapIndexedTo.a(transform(tmp1, item));
    }
    tmp$ret$0 = tmp0_mapIndexedTo;
    return tmp$ret$0;
  }
  function mapTo(_this__u8e3s4, destination, transform) {
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var item = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      destination.a(transform(item));
    }
    return destination;
  }
  function toMutableList_0(_this__u8e3s4) {
    var list = ArrayList_init_$Create$_0(_this__u8e3s4.length);
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var item = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      list.a(item);
    }
    return list;
  }
  function mapIndexedTo(_this__u8e3s4, destination, transform) {
    var index = 0;
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var item = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      destination.a(transform(tmp1, item));
    }
    return destination;
  }
  function withIndex$lambda($this_withIndex) {
    return function () {
      return arrayIterator($this_withIndex);
    };
  }
  function firstOrNull_0(_this__u8e3s4, predicate) {
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      if (predicate(element))
        return element;
    }
    return null;
  }
  function plus(_this__u8e3s4, elements) {
    if (isInterface(elements, Collection)) {
      var result = ArrayList_init_$Create$_0(_this__u8e3s4.i() + elements.i() | 0);
      result.j(_this__u8e3s4);
      result.j(elements);
      return result;
    } else {
      var result_0 = ArrayList_init_$Create$_1(_this__u8e3s4);
      addAll(result_0, elements);
      return result_0;
    }
  }
  function asIterable(_this__u8e3s4) {
    return _this__u8e3s4;
  }
  function joinToString_0(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform) {
    return joinTo_0(_this__u8e3s4, StringBuilder_init_$Create$_1(), separator, prefix, postfix, limit, truncated, transform).toString();
  }
  function joinToString$default_0(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      separator = ', ';
    if (!(($mask0 & 2) === 0))
      prefix = '';
    if (!(($mask0 & 4) === 0))
      postfix = '';
    if (!(($mask0 & 8) === 0))
      limit = -1;
    if (!(($mask0 & 16) === 0))
      truncated = '...';
    if (!(($mask0 & 32) === 0))
      transform = null;
    return joinToString_0(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform);
  }
  function takeLast(_this__u8e3s4, n) {
    // Inline function 'kotlin.require' call
    var tmp0_require = n >= 0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlin.collections.takeLast.<anonymous>' call
      tmp$ret$0 = 'Requested element count ' + n + ' is less than zero.';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    if (n === 0)
      return emptyList();
    var size = _this__u8e3s4.i();
    if (n >= size)
      return toList_1(_this__u8e3s4);
    if (n === 1)
      return listOf_1(last(_this__u8e3s4));
    var list = ArrayList_init_$Create$_0(n);
    if (isInterface(_this__u8e3s4, RandomAccess)) {
      var inductionVariable = size - n | 0;
      if (inductionVariable < size)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          list.a(_this__u8e3s4.l(index));
        }
         while (inductionVariable < size);
    } else {
      var tmp$ret$1;
      // Inline function 'kotlin.collections.iterator' call
      var tmp1_iterator = _this__u8e3s4.k(size - n | 0);
      tmp$ret$1 = tmp1_iterator;
      var tmp1_iterator_0 = tmp$ret$1;
      while (tmp1_iterator_0.g()) {
        var item = tmp1_iterator_0.h();
        list.a(item);
      }
    }
    return list;
  }
  function flatMap(_this__u8e3s4, transform) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.flatMapTo' call
    var tmp0_flatMapTo = ArrayList_init_$Create$();
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var list = transform(element);
      addAll(tmp0_flatMapTo, list);
    }
    tmp$ret$0 = tmp0_flatMapTo;
    return tmp$ret$0;
  }
  function toList_1(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, Collection)) {
      var tmp0_subject = _this__u8e3s4.i();
      var tmp;
      switch (tmp0_subject) {
        case 0:
          tmp = emptyList();
          break;
        case 1:
          var tmp_0;
          if (isInterface(_this__u8e3s4, List_0)) {
            tmp_0 = _this__u8e3s4.l(0);
          } else {
            tmp_0 = _this__u8e3s4.f().h();
          }

          tmp = listOf_1(tmp_0);
          break;
        default:
          tmp = toMutableList_2(_this__u8e3s4);
          break;
      }
      return tmp;
    }
    return optimizeReadOnlyList(toMutableList_1(_this__u8e3s4));
  }
  function drop(_this__u8e3s4, n) {
    // Inline function 'kotlin.require' call
    var tmp0_require = n >= 0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlin.collections.drop.<anonymous>' call
      tmp$ret$0 = 'Requested element count ' + n + ' is less than zero.';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    if (n === 0)
      return toList_1(_this__u8e3s4);
    var list;
    if (isInterface(_this__u8e3s4, Collection)) {
      var resultSize = _this__u8e3s4.i() - n | 0;
      if (resultSize <= 0)
        return emptyList();
      if (resultSize === 1)
        return listOf_1(last_0(_this__u8e3s4));
      list = ArrayList_init_$Create$_0(resultSize);
      if (isInterface(_this__u8e3s4, List_0)) {
        if (isInterface(_this__u8e3s4, RandomAccess)) {
          var inductionVariable = n;
          var last = _this__u8e3s4.i();
          if (inductionVariable < last)
            do {
              var index = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              list.a(_this__u8e3s4.l(index));
            }
             while (inductionVariable < last);
        } else {
          var tmp$ret$1;
          // Inline function 'kotlin.collections.iterator' call
          var tmp1_iterator = _this__u8e3s4.k(n);
          tmp$ret$1 = tmp1_iterator;
          var tmp1_iterator_0 = tmp$ret$1;
          while (tmp1_iterator_0.g()) {
            var item = tmp1_iterator_0.h();
            list.a(item);
          }
        }
        return list;
      }
    } else {
      list = ArrayList_init_$Create$();
    }
    var count = 0;
    var tmp2_iterator = _this__u8e3s4.f();
    while (tmp2_iterator.g()) {
      var item_0 = tmp2_iterator.h();
      if (count >= n) {
        list.a(item_0);
      } else {
        count = count + 1 | 0;
      }
    }
    return optimizeReadOnlyList(list);
  }
  function dropLast(_this__u8e3s4, n) {
    // Inline function 'kotlin.require' call
    var tmp0_require = n >= 0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlin.collections.dropLast.<anonymous>' call
      tmp$ret$0 = 'Requested element count ' + n + ' is less than zero.';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    return take(_this__u8e3s4, coerceAtLeast(_this__u8e3s4.i() - n | 0, 0));
  }
  function toHashSet(_this__u8e3s4) {
    return toCollection_0(_this__u8e3s4, HashSet_init_$Create$_1(mapCapacity(collectionSizeOrDefault(_this__u8e3s4, 12))));
  }
  function toBooleanArray(_this__u8e3s4) {
    var result = booleanArray(_this__u8e3s4.i());
    var index = 0;
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      result[tmp1] = element;
    }
    return result;
  }
  function map_0(_this__u8e3s4, transform) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(_this__u8e3s4, 10));
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      tmp0_mapTo.a(transform(item));
    }
    tmp$ret$0 = tmp0_mapTo;
    return tmp$ret$0;
  }
  function fold(_this__u8e3s4, initial, operation) {
    var accumulator = initial;
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      accumulator = operation(accumulator, element);
    }
    return accumulator;
  }
  function toSet_0(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, Collection)) {
      var tmp0_subject = _this__u8e3s4.i();
      var tmp;
      switch (tmp0_subject) {
        case 0:
          tmp = emptySet();
          break;
        case 1:
          var tmp_0;
          if (isInterface(_this__u8e3s4, List_0)) {
            tmp_0 = _this__u8e3s4.l(0);
          } else {
            tmp_0 = _this__u8e3s4.f().h();
          }

          tmp = setOf_0(tmp_0);
          break;
        default:
          tmp = toCollection_0(_this__u8e3s4, LinkedHashSet_init_$Create$_1(mapCapacity(_this__u8e3s4.i())));
          break;
      }
      return tmp;
    }
    return optimizeReadOnlySet(toCollection_0(_this__u8e3s4, LinkedHashSet_init_$Create$()));
  }
  function mapNotNull(_this__u8e3s4, transform) {
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapNotNullTo' call
    var tmp0_mapNotNullTo = ArrayList_init_$Create$();
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'kotlin.collections.mapNotNullTo.<anonymous>' call
      var tmp0_safe_receiver = transform(element);
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$0;
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        tmp0_mapNotNullTo.a(tmp0_safe_receiver);
        tmp$ret$0 = Unit_getInstance();
      }
    }
    tmp$ret$1 = tmp0_mapNotNullTo;
    return tmp$ret$1;
  }
  function filter(_this__u8e3s4, predicate) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo = ArrayList_init_$Create$();
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      if (predicate(element)) {
        tmp0_filterTo.a(element);
      }
    }
    tmp$ret$0 = tmp0_filterTo;
    return tmp$ret$0;
  }
  function mapIndexedNotNull(_this__u8e3s4, transform) {
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapIndexedNotNullTo' call
    var tmp1_mapIndexedNotNullTo = ArrayList_init_$Create$();
    // Inline function 'kotlin.collections.forEachIndexed' call
    var index = 0;
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      // Inline function 'kotlin.collections.mapIndexedNotNullTo.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      var tmp0__anonymous__q1qw7t = checkIndexOverflow(tmp1);
      var tmp0_safe_receiver = transform(tmp0__anonymous__q1qw7t, item);
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$0;
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        tmp1_mapIndexedNotNullTo.a(tmp0_safe_receiver);
        tmp$ret$0 = Unit_getInstance();
      }
    }
    tmp$ret$1 = tmp1_mapIndexedNotNullTo;
    return tmp$ret$1;
  }
  function count(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, Collection))
      return _this__u8e3s4.i();
    var count = 0;
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      count = count + 1 | 0;
      checkCountOverflow(count);
    }
    return count;
  }
  function first(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4;
    if (isInterface(tmp0_subject, List_0))
      return first_0(_this__u8e3s4);
    else {
      var iterator = _this__u8e3s4.f();
      if (!iterator.g())
        throw NoSuchElementException_init_$Create$_0('Collection is empty.');
      return iterator.h();
    }
  }
  function withIndex_0(_this__u8e3s4) {
    return new IndexingIterable(withIndex$lambda_0(_this__u8e3s4));
  }
  function toMutableSet(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4;
    var tmp;
    if (isInterface(tmp0_subject, Collection)) {
      tmp = LinkedHashSet_init_$Create$_0(_this__u8e3s4);
    } else {
      tmp = toCollection_0(_this__u8e3s4, LinkedHashSet_init_$Create$());
    }
    return tmp;
  }
  function maxOf(_this__u8e3s4, selector) {
    var iterator = _this__u8e3s4.f();
    if (!iterator.g())
      throw NoSuchElementException_init_$Create$();
    var maxValue = selector(iterator.h());
    while (iterator.g()) {
      var v = selector(iterator.h());
      if (compareTo_0(maxValue, v) < 0) {
        maxValue = v;
      }
    }
    return maxValue;
  }
  function zip(_this__u8e3s4, other) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.zip' call
    var first = _this__u8e3s4.f();
    var second = other.f();
    var tmp$ret$0;
    // Inline function 'kotlin.comparisons.minOf' call
    var tmp0_minOf = collectionSizeOrDefault(_this__u8e3s4, 10);
    var tmp1_minOf = collectionSizeOrDefault(other, 10);
    tmp$ret$0 = Math.min(tmp0_minOf, tmp1_minOf);
    var list = ArrayList_init_$Create$_0(tmp$ret$0);
    while (first.g() ? second.g() : false) {
      var tmp$ret$1;
      // Inline function 'kotlin.collections.zip.<anonymous>' call
      var tmp2__anonymous__z9zvc9 = first.h();
      var tmp3__anonymous__ufb84q = second.h();
      tmp$ret$1 = to(tmp2__anonymous__z9zvc9, tmp3__anonymous__ufb84q);
      list.a(tmp$ret$1);
    }
    tmp$ret$2 = list;
    return tmp$ret$2;
  }
  function slice(_this__u8e3s4, indices) {
    if (indices.p()) {
      var tmp$ret$0;
      // Inline function 'kotlin.collections.listOf' call
      tmp$ret$0 = emptyList();
      return tmp$ret$0;
    }
    return toList_1(_this__u8e3s4.s(indices.q(), indices.r() + 1 | 0));
  }
  function find(_this__u8e3s4, predicate) {
    var tmp$ret$0;
    $l$block: {
      // Inline function 'kotlin.collections.firstOrNull' call
      var tmp0_iterator = _this__u8e3s4.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        if (predicate(element)) {
          tmp$ret$0 = element;
          break $l$block;
        }
      }
      tmp$ret$0 = null;
    }
    return tmp$ret$0;
  }
  function all_0(_this__u8e3s4, predicate) {
    var tmp;
    if (isInterface(_this__u8e3s4, Collection)) {
      tmp = _this__u8e3s4.p();
    } else {
      tmp = false;
    }
    if (tmp)
      return true;
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      if (!predicate(element))
        return false;
    }
    return true;
  }
  function any_0(_this__u8e3s4, predicate) {
    var tmp;
    if (isInterface(_this__u8e3s4, Collection)) {
      tmp = _this__u8e3s4.p();
    } else {
      tmp = false;
    }
    if (tmp)
      return false;
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      if (predicate(element))
        return true;
    }
    return false;
  }
  function filterNotNull(_this__u8e3s4) {
    return filterNotNullTo(_this__u8e3s4, ArrayList_init_$Create$());
  }
  function reduce(_this__u8e3s4, operation) {
    var iterator = _this__u8e3s4.f();
    if (!iterator.g())
      throw UnsupportedOperationException_init_$Create$_0("Empty collection can't be reduced.");
    var accumulator = iterator.h();
    while (iterator.g()) {
      accumulator = operation(accumulator, iterator.h());
    }
    return accumulator;
  }
  function mapIndexed_0(_this__u8e3s4, transform) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mapIndexedTo' call
    var tmp0_mapIndexedTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(_this__u8e3s4, 10));
    var index = 0;
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      tmp0_mapIndexedTo.a(transform(checkIndexOverflow(tmp1), item));
    }
    tmp$ret$0 = tmp0_mapIndexedTo;
    return tmp$ret$0;
  }
  function sorted(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, Collection)) {
      if (_this__u8e3s4.i() <= 1)
        return toList_1(_this__u8e3s4);
      var tmp$ret$1;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'kotlin.collections.toTypedArray' call
      var tmp0_toTypedArray = _this__u8e3s4;
      tmp$ret$0 = copyToArray(tmp0_toTypedArray);
      var tmp = tmp$ret$0;
      var tmp1_apply = isArray(tmp) ? tmp : THROW_CCE();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlin.collections.sorted.<anonymous>' call
      sort_0(tmp1_apply);
      tmp$ret$1 = tmp1_apply;
      return asList(tmp$ret$1);
    }
    var tmp$ret$2;
    // Inline function 'kotlin.apply' call
    var tmp2_apply = toMutableList_1(_this__u8e3s4);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.sorted.<anonymous>' call
    sort(tmp2_apply);
    tmp$ret$2 = tmp2_apply;
    return tmp$ret$2;
  }
  function sortedBy(_this__u8e3s4, selector) {
    var tmp$ret$0;
    // Inline function 'kotlin.comparisons.compareBy' call
    var tmp = sortedBy$lambda(selector);
    tmp$ret$0 = new sam$kotlin_Comparator$0(tmp);
    return sortedWith(_this__u8e3s4, tmp$ret$0);
  }
  function groupBy(_this__u8e3s4, keySelector) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.groupByTo' call
    var tmp0_groupByTo = LinkedHashMap_init_$Create$();
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var key = keySelector(element);
      var tmp$ret$1;
      // Inline function 'kotlin.collections.getOrPut' call
      var value = tmp0_groupByTo.t(key);
      var tmp;
      if (value == null) {
        var tmp$ret$0;
        // Inline function 'kotlin.collections.groupByTo.<anonymous>' call
        tmp$ret$0 = ArrayList_init_$Create$();
        var answer = tmp$ret$0;
        tmp0_groupByTo.u(key, answer);
        tmp = answer;
      } else {
        tmp = value;
      }
      tmp$ret$1 = tmp;
      var list = tmp$ret$1;
      list.a(element);
    }
    tmp$ret$2 = tmp0_groupByTo;
    return tmp$ret$2;
  }
  function last(_this__u8e3s4) {
    if (_this__u8e3s4.p())
      throw NoSuchElementException_init_$Create$_0('List is empty.');
    return _this__u8e3s4.l(get_lastIndex_1(_this__u8e3s4));
  }
  function first_0(_this__u8e3s4) {
    if (_this__u8e3s4.p())
      throw NoSuchElementException_init_$Create$_0('List is empty.');
    return _this__u8e3s4.l(0);
  }
  function toMutableList_1(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, Collection))
      return toMutableList_2(_this__u8e3s4);
    return toCollection_0(_this__u8e3s4, ArrayList_init_$Create$());
  }
  function joinTo_0(_this__u8e3s4, buffer, separator, prefix, postfix, limit, truncated, transform) {
    buffer.b(prefix);
    var count = 0;
    var tmp0_iterator = _this__u8e3s4.f();
    $l$loop: while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      count = count + 1 | 0;
      if (count > 1) {
        buffer.b(separator);
      }
      if (limit < 0 ? true : count <= limit) {
        appendElement(buffer, element, transform);
      } else
        break $l$loop;
    }
    if (limit >= 0 ? count > limit : false) {
      buffer.b(truncated);
    }
    buffer.b(postfix);
    return buffer;
  }
  function joinTo$default(_this__u8e3s4, buffer, separator, prefix, postfix, limit, truncated, transform, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      separator = ', ';
    if (!(($mask0 & 4) === 0))
      prefix = '';
    if (!(($mask0 & 8) === 0))
      postfix = '';
    if (!(($mask0 & 16) === 0))
      limit = -1;
    if (!(($mask0 & 32) === 0))
      truncated = '...';
    if (!(($mask0 & 64) === 0))
      transform = null;
    return joinTo_0(_this__u8e3s4, buffer, separator, prefix, postfix, limit, truncated, transform);
  }
  function flatMapTo(_this__u8e3s4, destination, transform) {
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var list = transform(element);
      addAll(destination, list);
    }
    return destination;
  }
  function toMutableList_2(_this__u8e3s4) {
    return ArrayList_init_$Create$_1(_this__u8e3s4);
  }
  function last_0(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4;
    if (isInterface(tmp0_subject, List_0))
      return last(_this__u8e3s4);
    else {
      var iterator = _this__u8e3s4.f();
      if (!iterator.g())
        throw NoSuchElementException_init_$Create$_0('Collection is empty.');
      var last_0 = iterator.h();
      while (iterator.g())
        last_0 = iterator.h();
      return last_0;
    }
  }
  function take(_this__u8e3s4, n) {
    // Inline function 'kotlin.require' call
    var tmp0_require = n >= 0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlin.collections.take.<anonymous>' call
      tmp$ret$0 = 'Requested element count ' + n + ' is less than zero.';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    if (n === 0)
      return emptyList();
    if (isInterface(_this__u8e3s4, Collection)) {
      if (n >= _this__u8e3s4.i())
        return toList_1(_this__u8e3s4);
      if (n === 1)
        return listOf_1(first(_this__u8e3s4));
    }
    var count = 0;
    var list = ArrayList_init_$Create$_0(n);
    var tmp0_iterator = _this__u8e3s4.f();
    $l$loop: while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      list.a(item);
      count = count + 1 | 0;
      if (count === n)
        break $l$loop;
    }
    return optimizeReadOnlyList(list);
  }
  function toCollection_0(_this__u8e3s4, destination) {
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      destination.a(item);
    }
    return destination;
  }
  function mapTo_0(_this__u8e3s4, destination, transform) {
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      destination.a(transform(item));
    }
    return destination;
  }
  function mapNotNullTo(_this__u8e3s4, destination, transform) {
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'kotlin.collections.mapNotNullTo.<anonymous>' call
      var tmp0_safe_receiver = transform(element);
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$0;
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        destination.a(tmp0_safe_receiver);
        tmp$ret$0 = Unit_getInstance();
      }
    }
    return destination;
  }
  function filterTo(_this__u8e3s4, destination, predicate) {
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      if (predicate(element)) {
        destination.a(element);
      }
    }
    return destination;
  }
  function mapIndexedNotNullTo(_this__u8e3s4, destination, transform) {
    // Inline function 'kotlin.collections.forEachIndexed' call
    var index = 0;
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      // Inline function 'kotlin.collections.mapIndexedNotNullTo.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      var tmp0__anonymous__q1qw7t = checkIndexOverflow(tmp1);
      var tmp0_safe_receiver = transform(tmp0__anonymous__q1qw7t, item);
      if (tmp0_safe_receiver == null)
        null;
      else {
        var tmp$ret$0;
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        destination.a(tmp0_safe_receiver);
        tmp$ret$0 = Unit_getInstance();
      }
    }
    return destination;
  }
  function zip_0(_this__u8e3s4, other, transform) {
    var first = _this__u8e3s4.f();
    var second = other.f();
    var tmp$ret$0;
    // Inline function 'kotlin.comparisons.minOf' call
    var tmp0_minOf = collectionSizeOrDefault(_this__u8e3s4, 10);
    var tmp1_minOf = collectionSizeOrDefault(other, 10);
    tmp$ret$0 = Math.min(tmp0_minOf, tmp1_minOf);
    var list = ArrayList_init_$Create$_0(tmp$ret$0);
    while (first.g() ? second.g() : false) {
      list.a(transform(first.h(), second.h()));
    }
    return list;
  }
  function filterNotNullTo(_this__u8e3s4, destination) {
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      if (!(element == null)) {
        destination.a(element);
      }
    }
    return destination;
  }
  function mapIndexedTo_0(_this__u8e3s4, destination, transform) {
    var index = 0;
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      destination.a(transform(checkIndexOverflow(tmp1), item));
    }
    return destination;
  }
  function sortedWith(_this__u8e3s4, comparator) {
    if (isInterface(_this__u8e3s4, Collection)) {
      if (_this__u8e3s4.i() <= 1)
        return toList_1(_this__u8e3s4);
      var tmp$ret$1;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'kotlin.collections.toTypedArray' call
      var tmp0_toTypedArray = _this__u8e3s4;
      tmp$ret$0 = copyToArray(tmp0_toTypedArray);
      var tmp = tmp$ret$0;
      var tmp1_apply = isArray(tmp) ? tmp : THROW_CCE();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlin.collections.sortedWith.<anonymous>' call
      sortWith_0(tmp1_apply, comparator);
      tmp$ret$1 = tmp1_apply;
      return asList(tmp$ret$1);
    }
    var tmp$ret$2;
    // Inline function 'kotlin.apply' call
    var tmp2_apply = toMutableList_1(_this__u8e3s4);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.sortedWith.<anonymous>' call
    sortWith(tmp2_apply, comparator);
    tmp$ret$2 = tmp2_apply;
    return tmp$ret$2;
  }
  function groupByTo(_this__u8e3s4, destination, keySelector) {
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var key = keySelector(element);
      var tmp$ret$1;
      // Inline function 'kotlin.collections.getOrPut' call
      var value = destination.t(key);
      var tmp;
      if (value == null) {
        var tmp$ret$0;
        // Inline function 'kotlin.collections.groupByTo.<anonymous>' call
        tmp$ret$0 = ArrayList_init_$Create$();
        var answer = tmp$ret$0;
        destination.u(key, answer);
        tmp = answer;
      } else {
        tmp = value;
      }
      tmp$ret$1 = tmp;
      var list = tmp$ret$1;
      list.a(element);
    }
    return destination;
  }
  function forEach(_this__u8e3s4, action) {
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      action(element);
    }
  }
  function forEachIndexed(_this__u8e3s4, action) {
    var index = 0;
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      action(checkIndexOverflow(tmp1), item);
    }
  }
  function associateByTo(_this__u8e3s4, destination, keySelector, valueTransform) {
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      destination.u(keySelector(element), valueTransform(element));
    }
    return destination;
  }
  function minOrNull(_this__u8e3s4) {
    var iterator = _this__u8e3s4.f();
    if (!iterator.g())
      return null;
    var min = iterator.h();
    while (iterator.g()) {
      var e = iterator.h();
      if (compareTo_0(min, e) > 0)
        min = e;
    }
    return min;
  }
  function indexOfFirst(_this__u8e3s4, predicate) {
    var index = 0;
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      if (predicate(item))
        return index;
      var tmp1 = index;
      index = tmp1 + 1 | 0;
    }
    return -1;
  }
  function single_0(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4;
    if (isInterface(tmp0_subject, List_0))
      return single_1(_this__u8e3s4);
    else {
      var iterator = _this__u8e3s4.f();
      if (!iterator.g())
        throw NoSuchElementException_init_$Create$_0('Collection is empty.');
      var single = iterator.h();
      if (iterator.g())
        throw IllegalArgumentException_init_$Create$_0('Collection has more than one element.');
      return single;
    }
  }
  function single_1(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.i();
    var tmp;
    switch (tmp0_subject) {
      case 0:
        throw NoSuchElementException_init_$Create$_0('List is empty.');
      case 1:
        tmp = _this__u8e3s4.l(0);
        break;
      default:
        throw IllegalArgumentException_init_$Create$_0('List has more than one element.');
    }
    return tmp;
  }
  function sum(_this__u8e3s4) {
    var sum = 0;
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      sum = sum + element | 0;
    }
    return sum;
  }
  function toIntArray(_this__u8e3s4) {
    var result = new Int32Array(_this__u8e3s4.i());
    var index = 0;
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      result[tmp1] = element;
    }
    return result;
  }
  function any_1(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, Collection))
      return !_this__u8e3s4.p();
    return _this__u8e3s4.f().g();
  }
  function groupingBy(_this__u8e3s4, keySelector) {
    return new _no_name_provided__qut3iv(_this__u8e3s4, keySelector);
  }
  function minOf(_this__u8e3s4, selector) {
    var iterator = _this__u8e3s4.f();
    if (!iterator.g())
      throw NoSuchElementException_init_$Create$();
    var minValue = selector(iterator.h());
    while (iterator.g()) {
      var v = selector(iterator.h());
      if (compareTo_0(minValue, v) > 0) {
        minValue = v;
      }
    }
    return minValue;
  }
  function distinct(_this__u8e3s4) {
    return toList_1(toMutableSet(_this__u8e3s4));
  }
  function asSequence(_this__u8e3s4) {
    var tmp$ret$0;
    // Inline function 'kotlin.sequences.Sequence' call
    tmp$ret$0 = new _no_name_provided__qut3iv_0(_this__u8e3s4);
    return tmp$ret$0;
  }
  function lastOrNull(_this__u8e3s4) {
    return _this__u8e3s4.p() ? null : _this__u8e3s4.l(_this__u8e3s4.i() - 1 | 0);
  }
  function distinctBy(_this__u8e3s4, selector) {
    var set = HashSet_init_$Create$();
    var list = ArrayList_init_$Create$();
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var e = tmp0_iterator.h();
      var key = selector(e);
      if (set.a(key)) {
        list.a(e);
      }
    }
    return list;
  }
  function component1(_this__u8e3s4) {
    return _this__u8e3s4.l(0);
  }
  function component2(_this__u8e3s4) {
    return _this__u8e3s4.l(1);
  }
  function sam$kotlin_Comparator$0(function_0) {
    this.w_1 = function_0;
  }
  sam$kotlin_Comparator$0.prototype.x = function (a, b) {
    return this.w_1(a, b);
  };
  sam$kotlin_Comparator$0.prototype.compare = function (a, b) {
    return this.x(a, b);
  };
  sam$kotlin_Comparator$0.$metadata$ = classMeta('sam$kotlin_Comparator$0', [Comparator]);
  function withIndex$lambda_0($this_withIndex) {
    return function () {
      return $this_withIndex.f();
    };
  }
  function sortedBy$lambda($selector) {
    return function (a, b) {
      var tmp$ret$0;
      // Inline function 'kotlin.comparisons.compareValuesBy' call
      tmp$ret$0 = compareValues($selector(a), $selector(b));
      return tmp$ret$0;
    };
  }
  function _no_name_provided__qut3iv($this_groupingBy, $keySelector) {
    this.y_1 = $this_groupingBy;
    this.z_1 = $keySelector;
  }
  _no_name_provided__qut3iv.prototype.a1 = function () {
    return this.y_1.f();
  };
  _no_name_provided__qut3iv.prototype.b1 = function (element) {
    return this.z_1(element);
  };
  _no_name_provided__qut3iv.$metadata$ = classMeta(undefined, [Grouping]);
  function _no_name_provided__qut3iv_0($this_asSequence) {
    this.c1_1 = $this_asSequence;
  }
  _no_name_provided__qut3iv_0.prototype.f = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.asSequence.<anonymous>' call
    tmp$ret$0 = this.c1_1.f();
    return tmp$ret$0;
  };
  _no_name_provided__qut3iv_0.$metadata$ = classMeta(undefined, [Sequence]);
  function all_1(_this__u8e3s4, predicate) {
    if (_this__u8e3s4.p())
      return true;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$0 = _this__u8e3s4.d1().f();
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      if (!predicate(element))
        return false;
    }
    return true;
  }
  function map_1(_this__u8e3s4, transform) {
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$_0(_this__u8e3s4.i());
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$0 = _this__u8e3s4.d1().f();
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      tmp0_mapTo.a(transform(item));
    }
    tmp$ret$1 = tmp0_mapTo;
    return tmp$ret$1;
  }
  function mapTo_1(_this__u8e3s4, destination, transform) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$0 = _this__u8e3s4.d1().f();
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      destination.a(transform(item));
    }
    return destination;
  }
  function any_2(_this__u8e3s4, predicate) {
    if (_this__u8e3s4.p())
      return false;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$0 = _this__u8e3s4.d1().f();
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      if (predicate(element))
        return true;
    }
    return false;
  }
  function toList_2(_this__u8e3s4) {
    if (_this__u8e3s4.i() === 0)
      return emptyList();
    var iterator = _this__u8e3s4.d1().f();
    if (!iterator.g())
      return emptyList();
    var first = iterator.h();
    if (!iterator.g()) {
      var tmp$ret$0;
      // Inline function 'kotlin.collections.toPair' call
      tmp$ret$0 = new Pair(first.e1(), first.f1());
      return listOf_1(tmp$ret$0);
    }
    var result = ArrayList_init_$Create$_0(_this__u8e3s4.i());
    var tmp$ret$1;
    // Inline function 'kotlin.collections.toPair' call
    tmp$ret$1 = new Pair(first.e1(), first.f1());
    result.a(tmp$ret$1);
    do {
      var tmp$ret$2;
      // Inline function 'kotlin.collections.toPair' call
      var tmp0_toPair = iterator.h();
      tmp$ret$2 = new Pair(tmp0_toPair.e1(), tmp0_toPair.f1());
      result.a(tmp$ret$2);
    }
     while (iterator.g());
    return result;
  }
  function until(_this__u8e3s4, to) {
    if (to <= IntCompanionObject_getInstance().h1_1)
      return Companion_getInstance_2().g1_1;
    return numberRangeToNumber(_this__u8e3s4, to - 1 | 0);
  }
  function downTo(_this__u8e3s4, to) {
    return Companion_getInstance_3().l1(_this__u8e3s4, to, -1);
  }
  function coerceAtLeast(_this__u8e3s4, minimumValue) {
    return _this__u8e3s4 < minimumValue ? minimumValue : _this__u8e3s4;
  }
  function coerceAtMost(_this__u8e3s4, maximumValue) {
    return _this__u8e3s4 > maximumValue ? maximumValue : _this__u8e3s4;
  }
  function coerceIn(_this__u8e3s4, minimumValue, maximumValue) {
    if (minimumValue > maximumValue)
      throw IllegalArgumentException_init_$Create$_0('Cannot coerce value to an empty range: maximum ' + maximumValue + ' is less than minimum ' + minimumValue + '.');
    if (_this__u8e3s4 < minimumValue)
      return minimumValue;
    if (_this__u8e3s4 > maximumValue)
      return maximumValue;
    return _this__u8e3s4;
  }
  function step(_this__u8e3s4, step) {
    checkStepIsPositive(step > 0, step);
    return Companion_getInstance_3().l1(_this__u8e3s4.m1_1, _this__u8e3s4.n1_1, _this__u8e3s4.o1_1 > 0 ? step : -step | 0);
  }
  function asIterable_0(_this__u8e3s4) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.Iterable' call
    tmp$ret$0 = new _no_name_provided__qut3iv_1(_this__u8e3s4);
    return tmp$ret$0;
  }
  function joinToString_1(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform) {
    return joinTo_1(_this__u8e3s4, StringBuilder_init_$Create$_1(), separator, prefix, postfix, limit, truncated, transform).toString();
  }
  function joinToString$default_1(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      separator = ', ';
    if (!(($mask0 & 2) === 0))
      prefix = '';
    if (!(($mask0 & 4) === 0))
      postfix = '';
    if (!(($mask0 & 8) === 0))
      limit = -1;
    if (!(($mask0 & 16) === 0))
      truncated = '...';
    if (!(($mask0 & 32) === 0))
      transform = null;
    return joinToString_1(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform);
  }
  function map_2(_this__u8e3s4, transform) {
    return new TransformingSequence(_this__u8e3s4, transform);
  }
  function joinTo_1(_this__u8e3s4, buffer, separator, prefix, postfix, limit, truncated, transform) {
    buffer.b(prefix);
    var count = 0;
    var tmp0_iterator = _this__u8e3s4.f();
    $l$loop: while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      count = count + 1 | 0;
      if (count > 1) {
        buffer.b(separator);
      }
      if (limit < 0 ? true : count <= limit) {
        appendElement(buffer, element, transform);
      } else
        break $l$loop;
    }
    if (limit >= 0 ? count > limit : false) {
      buffer.b(truncated);
    }
    buffer.b(postfix);
    return buffer;
  }
  function toList_3(_this__u8e3s4) {
    return optimizeReadOnlyList(toMutableList_3(_this__u8e3s4));
  }
  function toMutableList_3(_this__u8e3s4) {
    return toCollection_1(_this__u8e3s4, ArrayList_init_$Create$());
  }
  function toCollection_1(_this__u8e3s4, destination) {
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      destination.a(item);
    }
    return destination;
  }
  function _no_name_provided__qut3iv_1($this_asIterable) {
    this.p1_1 = $this_asIterable;
  }
  _no_name_provided__qut3iv_1.prototype.f = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.sequences.asIterable.<anonymous>' call
    tmp$ret$0 = this.p1_1.f();
    return tmp$ret$0;
  };
  _no_name_provided__qut3iv_1.$metadata$ = classMeta(undefined, [Iterable_0]);
  function forEach_0(_this__u8e3s4, action) {
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    while (inductionVariable < charSequenceLength(indexedObject)) {
      var element = charSequenceGet(indexedObject, inductionVariable);
      inductionVariable = inductionVariable + 1 | 0;
      action(new Char_0(element));
    }
  }
  function reversed(_this__u8e3s4) {
    return toString_3(reversed_0(isCharSequence(_this__u8e3s4) ? _this__u8e3s4 : THROW_CCE()));
  }
  function dropLastWhile(_this__u8e3s4, predicate) {
    var inductionVariable = get_lastIndex_2(_this__u8e3s4);
    if (0 <= inductionVariable)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        if (!predicate(new Char_0(charSequenceGet(_this__u8e3s4, index)))) {
          var tmp$ret$1;
          // Inline function 'kotlin.text.substring' call
          var tmp0_substring = index + 1 | 0;
          var tmp$ret$0;
          // Inline function 'kotlin.js.asDynamic' call
          tmp$ret$0 = _this__u8e3s4;
          tmp$ret$1 = tmp$ret$0.substring(0, tmp0_substring);
          return tmp$ret$1;
        }
      }
       while (0 <= inductionVariable);
    return '';
  }
  function indexOfFirst_0(_this__u8e3s4, predicate) {
    var inductionVariable = 0;
    var last = charSequenceLength(_this__u8e3s4) - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (predicate(new Char_0(charSequenceGet(_this__u8e3s4, index)))) {
          return index;
        }
      }
       while (inductionVariable <= last);
    return -1;
  }
  function indexOfLast_0(_this__u8e3s4, predicate) {
    var inductionVariable = charSequenceLength(_this__u8e3s4) - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        if (predicate(new Char_0(charSequenceGet(_this__u8e3s4, index)))) {
          return index;
        }
      }
       while (0 <= inductionVariable);
    return -1;
  }
  function dropLast_0(_this__u8e3s4, n) {
    // Inline function 'kotlin.require' call
    var tmp0_require = n >= 0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlin.text.dropLast.<anonymous>' call
      tmp$ret$0 = 'Requested character count ' + n + ' is less than zero.';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    return take_0(_this__u8e3s4, coerceAtLeast(_this__u8e3s4.length - n | 0, 0));
  }
  function drop_0(_this__u8e3s4, n) {
    // Inline function 'kotlin.require' call
    var tmp0_require = n >= 0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlin.text.drop.<anonymous>' call
      tmp$ret$0 = 'Requested character count ' + n + ' is less than zero.';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    var tmp$ret$2;
    // Inline function 'kotlin.text.substring' call
    var tmp1_substring = coerceAtMost(n, _this__u8e3s4.length);
    var tmp$ret$1;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$1 = _this__u8e3s4;
    tmp$ret$2 = tmp$ret$1.substring(tmp1_substring);
    return tmp$ret$2;
  }
  function getOrElse(_this__u8e3s4, index, defaultValue) {
    return (index >= 0 ? index <= get_lastIndex_2(_this__u8e3s4) : false) ? charSequenceGet(_this__u8e3s4, index) : defaultValue(index).q1_1;
  }
  function reversed_0(_this__u8e3s4) {
    return StringBuilder_init_$Create$_0(_this__u8e3s4).s1();
  }
  function take_0(_this__u8e3s4, n) {
    // Inline function 'kotlin.require' call
    var tmp0_require = n >= 0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlin.text.take.<anonymous>' call
      tmp$ret$0 = 'Requested character count ' + n + ' is less than zero.';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    var tmp$ret$2;
    // Inline function 'kotlin.text.substring' call
    var tmp1_substring = coerceAtMost(n, _this__u8e3s4.length);
    var tmp$ret$1;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$1 = _this__u8e3s4;
    tmp$ret$2 = tmp$ret$1.substring(0, tmp1_substring);
    return tmp$ret$2;
  }
  function count_0(_this__u8e3s4, predicate) {
    var count = 0;
    var indexedObject = _this__u8e3s4;
    var inductionVariable = 0;
    while (inductionVariable < charSequenceLength(indexedObject)) {
      var element = charSequenceGet(indexedObject, inductionVariable);
      inductionVariable = inductionVariable + 1 | 0;
      if (predicate(new Char_0(element))) {
        count = count + 1 | 0;
      }
    }
    return count;
  }
  function single_2(_this__u8e3s4) {
    var tmp0_subject = charSequenceLength(_this__u8e3s4);
    var tmp;
    switch (tmp0_subject) {
      case 0:
        throw NoSuchElementException_init_$Create$_0('Char sequence is empty.');
      case 1:
        tmp = charSequenceGet(_this__u8e3s4, 0);
        break;
      default:
        throw IllegalArgumentException_init_$Create$_0('Char sequence has more than one element.');
    }
    return tmp;
  }
  function copyOfRange(_this__u8e3s4, fromIndex, toIndex) {
    return _ULongArray___init__impl__twm1l3(copyOfRange_1(_ULongArray___get_storage__impl__28e64j(_this__u8e3s4), fromIndex, toIndex));
  }
  function copyInto(_this__u8e3s4, destination, destinationOffset, startIndex, endIndex) {
    var tmp$ret$4;
    // Inline function 'kotlin.collections.copyInto' call
    var tmp0_copyInto = _ULongArray___get_storage__impl__28e64j(_this__u8e3s4);
    var tmp1_copyInto = _ULongArray___get_storage__impl__28e64j(destination);
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_copyInto;
    tmp$ret$1 = tmp$ret$0;
    var tmp = tmp$ret$1;
    var tmp$ret$3;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$2;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$2 = tmp1_copyInto;
    tmp$ret$3 = tmp$ret$2;
    arrayCopy(tmp, tmp$ret$3, destinationOffset, startIndex, endIndex);
    tmp$ret$4 = tmp1_copyInto;
    return destination;
  }
  function forEachIndexed_0(_this__u8e3s4, action) {
    var index = 0;
    var tmp0_iterator = ULongArray__iterator_impl_cq4d2h(_this__u8e3s4);
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h().t1_1;
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      action(tmp1, new ULong(item));
    }
  }
  function slice_0(_this__u8e3s4, indices) {
    if (indices.p()) {
      var tmp$ret$0;
      // Inline function 'kotlin.collections.listOf' call
      tmp$ret$0 = emptyList();
      return tmp$ret$0;
    }
    var tmp$ret$1;
    // Inline function 'kotlin.collections.copyOfRange' call
    var tmp0_copyOfRange = indices.q();
    var tmp1_copyOfRange = indices.r() + 1 | 0;
    tmp$ret$1 = _ULongArray___init__impl__twm1l3(copyOfRange_1(_ULongArray___get_storage__impl__28e64j(_this__u8e3s4), tmp0_copyOfRange, tmp1_copyOfRange));
    return asList_0(tmp$ret$1);
  }
  function copyOf(_this__u8e3s4) {
    return _ULongArray___init__impl__twm1l3(copyOf_8(_ULongArray___get_storage__impl__28e64j(_this__u8e3s4)));
  }
  function indexOfLast_1(_this__u8e3s4, predicate) {
    var tmp$ret$2;
    $l$block: {
      // Inline function 'kotlin.collections.indexOfLast' call
      var tmp0_indexOfLast = _UIntArray___get_storage__impl__92a0v0(_this__u8e3s4);
      var inductionVariable = tmp0_indexOfLast.length - 1 | 0;
      if (0 <= inductionVariable)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + -1 | 0;
          var tmp$ret$1;
          // Inline function 'kotlin.collections.indexOfLast.<anonymous>' call
          var tmp1__anonymous__uwfjfc = tmp0_indexOfLast[index];
          var tmp$ret$0;
          // Inline function 'kotlin.toUInt' call
          tmp$ret$0 = _UInt___init__impl__l7qpdl(tmp1__anonymous__uwfjfc);
          tmp$ret$1 = predicate(new UInt(tmp$ret$0));
          if (tmp$ret$1) {
            tmp$ret$2 = index;
            break $l$block;
          }
        }
         while (0 <= inductionVariable);
      tmp$ret$2 = -1;
    }
    return tmp$ret$2;
  }
  function copyOfRange_0(_this__u8e3s4, fromIndex, toIndex) {
    return _UIntArray___init__impl__ghjpc6(copyOfRange_2(_UIntArray___get_storage__impl__92a0v0(_this__u8e3s4), fromIndex, toIndex));
  }
  function filter_0(_this__u8e3s4, predicate) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo = ArrayList_init_$Create$();
    var tmp0_iterator = UIntArray__iterator_impl_tkdv7k(_this__u8e3s4);
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h().u1_1;
      if (predicate(new UInt(element))) {
        tmp0_filterTo.a(new UInt(element));
      }
    }
    tmp$ret$0 = tmp0_filterTo;
    return tmp$ret$0;
  }
  function filterTo_0(_this__u8e3s4, destination, predicate) {
    var tmp0_iterator = UIntArray__iterator_impl_tkdv7k(_this__u8e3s4);
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h().u1_1;
      if (predicate(new UInt(element))) {
        destination.a(new UInt(element));
      }
    }
    return destination;
  }
  function indexOf_2(_this__u8e3s4, element) {
    var tmp = _ULongArray___get_storage__impl__28e64j(_this__u8e3s4);
    var tmp$ret$0;
    // Inline function 'kotlin.ULong.toLong' call
    tmp$ret$0 = _ULong___get_data__impl__fggpzb(element);
    return indexOf_0(tmp, tmp$ret$0);
  }
  function toULongArray(_this__u8e3s4) {
    var result = _ULongArray___init__impl__twm1l3_0(_this__u8e3s4.i());
    var index = 0;
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h().t1_1;
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      ULongArray__set_impl_z19mvh(result, tmp1, element);
    }
    return result;
  }
  function KotlinNothingValueException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    KotlinNothingValueException.call($this);
    return $this;
  }
  function KotlinNothingValueException_init_$Create$() {
    var tmp = KotlinNothingValueException_init_$Init$(Object.create(KotlinNothingValueException.prototype));
    captureStack(tmp, KotlinNothingValueException_init_$Create$);
    return tmp;
  }
  function KotlinNothingValueException() {
    captureStack(this, KotlinNothingValueException);
  }
  KotlinNothingValueException.$metadata$ = classMeta('KotlinNothingValueException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function get_code(_this__u8e3s4) {
    return Char__toInt_impl_vasixd(_this__u8e3s4);
  }
  function Char(code) {
    var tmp;
    var tmp$ret$0;
    // Inline function 'kotlin.code' call
    Companion_getInstance_11();
    var tmp0__get_code__88qj9g = _Char___init__impl__6a9atx(0);
    tmp$ret$0 = Char__toInt_impl_vasixd(tmp0__get_code__88qj9g);
    if (code < tmp$ret$0) {
      tmp = true;
    } else {
      var tmp$ret$1;
      // Inline function 'kotlin.code' call
      Companion_getInstance_11();
      var tmp1__get_code__adl84j = _Char___init__impl__6a9atx(65535);
      tmp$ret$1 = Char__toInt_impl_vasixd(tmp1__get_code__adl84j);
      tmp = code > tmp$ret$1;
    }
    if (tmp) {
      throw IllegalArgumentException_init_$Create$_0('Invalid Char code: ' + code);
    }
    return numberToChar(code);
  }
  function AbstractCollection$toString$lambda(this$0) {
    return function (it) {
      return it === this$0 ? '(this Collection)' : toString_2(it);
    };
  }
  function AbstractCollection() {
  }
  AbstractCollection.prototype.x1 = function (element) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.any' call
      var tmp;
      if (isInterface(this, Collection)) {
        tmp = this.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp0_iterator = this.f();
      while (tmp0_iterator.g()) {
        var element_0 = tmp0_iterator.h();
        var tmp$ret$1;
        // Inline function 'kotlin.collections.AbstractCollection.contains.<anonymous>' call
        tmp$ret$1 = equals_1(element_0, element);
        if (tmp$ret$1) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    return tmp$ret$0;
  };
  AbstractCollection.prototype.y1 = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        var tmp$ret$1;
        // Inline function 'kotlin.collections.AbstractCollection.containsAll.<anonymous>' call
        tmp$ret$1 = this.x1(element);
        if (!tmp$ret$1) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  AbstractCollection.prototype.p = function () {
    return this.i() === 0;
  };
  AbstractCollection.prototype.toString = function () {
    return joinToString$default_0(this, ', ', '[', ']', 0, null, AbstractCollection$toString$lambda(this), 24, null);
  };
  AbstractCollection.prototype.toArray = function () {
    return copyToArrayImpl(this);
  };
  AbstractCollection.$metadata$ = classMeta('AbstractCollection', [Collection]);
  function tryToComputeNext($this) {
    $this.z1_1 = State_Failed_getInstance();
    $this.b2();
    return $this.z1_1.equals(State_Ready_getInstance());
  }
  function AbstractIterator() {
    this.z1_1 = State_NotReady_getInstance();
    this.a2_1 = null;
  }
  AbstractIterator.prototype.g = function () {
    // Inline function 'kotlin.require' call
    var tmp0_require = !this.z1_1.equals(State_Failed_getInstance());
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlin.require.<anonymous>' call
      tmp$ret$0 = 'Failed requirement.';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    var tmp0_subject = this.z1_1;
    var tmp0 = tmp0_subject.d2_1;
    switch (tmp0) {
      case 2:
        return false;
      case 0:
        return true;
      default:
        return tryToComputeNext(this);
    }
  };
  AbstractIterator.prototype.h = function () {
    if (!this.g())
      throw NoSuchElementException_init_$Create$();
    this.z1_1 = State_NotReady_getInstance();
    var tmp = this.a2_1;
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  AbstractIterator.prototype.e2 = function (value) {
    this.a2_1 = value;
    this.z1_1 = State_Ready_getInstance();
  };
  AbstractIterator.prototype.f2 = function () {
    this.z1_1 = State_Done_getInstance();
  };
  AbstractIterator.$metadata$ = classMeta('AbstractIterator', [Iterator_1]);
  var State_Ready_instance;
  var State_NotReady_instance;
  var State_Done_instance;
  var State_Failed_instance;
  var State_entriesInitialized;
  function State_initEntries() {
    if (State_entriesInitialized)
      return Unit_getInstance();
    State_entriesInitialized = true;
    State_Ready_instance = new State('Ready', 0);
    State_NotReady_instance = new State('NotReady', 1);
    State_Done_instance = new State('Done', 2);
    State_Failed_instance = new State('Failed', 3);
  }
  function State(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  State.$metadata$ = classMeta('State', undefined, undefined, undefined, undefined, Enum.prototype);
  function State_Ready_getInstance() {
    State_initEntries();
    return State_Ready_instance;
  }
  function State_NotReady_getInstance() {
    State_initEntries();
    return State_NotReady_instance;
  }
  function State_Done_getInstance() {
    State_initEntries();
    return State_Done_instance;
  }
  function State_Failed_getInstance() {
    State_initEntries();
    return State_Failed_instance;
  }
  function SubList(list, fromIndex, toIndex) {
    AbstractList.call(this);
    this.h2_1 = list;
    this.i2_1 = fromIndex;
    this.j2_1 = 0;
    Companion_getInstance().k2(this.i2_1, toIndex, this.h2_1.i());
    this.j2_1 = toIndex - this.i2_1 | 0;
  }
  SubList.prototype.l = function (index) {
    Companion_getInstance().l2(index, this.j2_1);
    return this.h2_1.l(this.i2_1 + index | 0);
  };
  SubList.prototype.i = function () {
    return this.j2_1;
  };
  SubList.$metadata$ = classMeta('SubList', [RandomAccess], undefined, undefined, undefined, AbstractList.prototype);
  function IteratorImpl($outer) {
    this.o2_1 = $outer;
    this.n2_1 = 0;
  }
  IteratorImpl.prototype.g = function () {
    return this.n2_1 < this.o2_1.i();
  };
  IteratorImpl.prototype.h = function () {
    if (!this.g())
      throw NoSuchElementException_init_$Create$();
    var tmp0_this = this;
    var tmp1 = tmp0_this.n2_1;
    tmp0_this.n2_1 = tmp1 + 1 | 0;
    return this.o2_1.l(tmp1);
  };
  IteratorImpl.$metadata$ = classMeta('IteratorImpl', [Iterator_1]);
  function ListIteratorImpl($outer, index) {
    this.r2_1 = $outer;
    IteratorImpl.call(this, $outer);
    Companion_getInstance().s2(index, this.r2_1.i());
    this.n2_1 = index;
  }
  ListIteratorImpl.$metadata$ = classMeta('ListIteratorImpl', [ListIterator], undefined, undefined, undefined, IteratorImpl.prototype);
  function Companion() {
    Companion_instance = this;
  }
  Companion.prototype.l2 = function (index, size) {
    if (index < 0 ? true : index >= size) {
      throw IndexOutOfBoundsException_init_$Create$('index: ' + index + ', size: ' + size);
    }
  };
  Companion.prototype.s2 = function (index, size) {
    if (index < 0 ? true : index > size) {
      throw IndexOutOfBoundsException_init_$Create$('index: ' + index + ', size: ' + size);
    }
  };
  Companion.prototype.k2 = function (fromIndex, toIndex, size) {
    if (fromIndex < 0 ? true : toIndex > size) {
      throw IndexOutOfBoundsException_init_$Create$('fromIndex: ' + fromIndex + ', toIndex: ' + toIndex + ', size: ' + size);
    }
    if (fromIndex > toIndex) {
      throw IllegalArgumentException_init_$Create$_0('fromIndex: ' + fromIndex + ' > toIndex: ' + toIndex);
    }
  };
  Companion.prototype.t2 = function (startIndex, endIndex, size) {
    if (startIndex < 0 ? true : endIndex > size) {
      throw IndexOutOfBoundsException_init_$Create$('startIndex: ' + startIndex + ', endIndex: ' + endIndex + ', size: ' + size);
    }
    if (startIndex > endIndex) {
      throw IllegalArgumentException_init_$Create$_0('startIndex: ' + startIndex + ' > endIndex: ' + endIndex);
    }
  };
  Companion.prototype.u2 = function (c) {
    var hashCode = 1;
    var tmp0_iterator = c.f();
    while (tmp0_iterator.g()) {
      var e = tmp0_iterator.h();
      var tmp = imul(31, hashCode);
      var tmp1_safe_receiver = e;
      var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : hashCode_0(tmp1_safe_receiver);
      hashCode = tmp + (tmp2_elvis_lhs == null ? 0 : tmp2_elvis_lhs) | 0;
    }
    return hashCode;
  };
  Companion.prototype.v2 = function (c, other) {
    if (!(c.i() === other.i()))
      return false;
    var otherIterator = other.f();
    var tmp0_iterator = c.f();
    while (tmp0_iterator.g()) {
      var elem = tmp0_iterator.h();
      var elemOther = otherIterator.h();
      if (!equals_1(elem, elemOther)) {
        return false;
      }
    }
    return true;
  };
  Companion.$metadata$ = objectMeta('Companion');
  var Companion_instance;
  function Companion_getInstance() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function AbstractList() {
    Companion_getInstance();
    AbstractCollection.call(this);
  }
  AbstractList.prototype.f = function () {
    return new IteratorImpl(this);
  };
  AbstractList.prototype.m2 = function (element) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.collections.indexOfFirst' call
      var index = 0;
      var tmp0_iterator = this.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'kotlin.collections.AbstractList.indexOf.<anonymous>' call
        tmp$ret$0 = equals_1(item, element);
        if (tmp$ret$0) {
          tmp$ret$1 = index;
          break $l$block;
        }
        var tmp1 = index;
        index = tmp1 + 1 | 0;
      }
      tmp$ret$1 = -1;
    }
    return tmp$ret$1;
  };
  AbstractList.prototype.k = function (index) {
    return new ListIteratorImpl(this, index);
  };
  AbstractList.prototype.s = function (fromIndex, toIndex) {
    return new SubList(this, fromIndex, toIndex);
  };
  AbstractList.prototype.equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, List_0) : false))
      return false;
    return Companion_getInstance().v2(this, other);
  };
  AbstractList.prototype.hashCode = function () {
    return Companion_getInstance().u2(this);
  };
  AbstractList.$metadata$ = classMeta('AbstractList', [List_0], undefined, undefined, undefined, AbstractCollection.prototype);
  function AbstractMap$keys$1$iterator$1($entryIterator) {
    this.w2_1 = $entryIterator;
  }
  AbstractMap$keys$1$iterator$1.prototype.g = function () {
    return this.w2_1.g();
  };
  AbstractMap$keys$1$iterator$1.prototype.h = function () {
    return this.w2_1.h().e1();
  };
  AbstractMap$keys$1$iterator$1.$metadata$ = classMeta(undefined, [Iterator_1]);
  function AbstractMap$values$1$iterator$1($entryIterator) {
    this.x2_1 = $entryIterator;
  }
  AbstractMap$values$1$iterator$1.prototype.g = function () {
    return this.x2_1.g();
  };
  AbstractMap$values$1$iterator$1.prototype.h = function () {
    return this.x2_1.h().f1();
  };
  AbstractMap$values$1$iterator$1.$metadata$ = classMeta(undefined, [Iterator_1]);
  function toString($this, o) {
    return o === $this ? '(this Map)' : toString_2(o);
  }
  function implFindEntry($this, key) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.collections.firstOrNull' call
      var tmp0_firstOrNull = $this.d1();
      var tmp0_iterator = tmp0_firstOrNull.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'kotlin.collections.AbstractMap.implFindEntry.<anonymous>' call
        tmp$ret$0 = equals_1(element.e1(), key);
        if (tmp$ret$0) {
          tmp$ret$1 = element;
          break $l$block;
        }
      }
      tmp$ret$1 = null;
    }
    return tmp$ret$1;
  }
  function Companion_0() {
    Companion_instance_0 = this;
  }
  Companion_0.prototype.y2 = function (e) {
    var tmp$ret$1;
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'kotlin.collections.Companion.entryHashCode.<anonymous>' call
    var tmp2_safe_receiver = e.e1();
    var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : hashCode_0(tmp2_safe_receiver);
    var tmp = tmp3_elvis_lhs == null ? 0 : tmp3_elvis_lhs;
    var tmp0_safe_receiver = e.f1();
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode_0(tmp0_safe_receiver);
    tmp$ret$0 = tmp ^ (tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs);
    tmp$ret$1 = tmp$ret$0;
    return tmp$ret$1;
  };
  Companion_0.prototype.z2 = function (e) {
    var tmp$ret$1;
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'kotlin.collections.Companion.entryToString.<anonymous>' call
    tmp$ret$0 = toString_2(e.e1()) + '=' + toString_2(e.f1());
    tmp$ret$1 = tmp$ret$0;
    return tmp$ret$1;
  };
  Companion_0.prototype.a3 = function (e, other) {
    if (!(!(other == null) ? isInterface(other, Entry) : false))
      return false;
    return equals_1(e.e1(), other.e1()) ? equals_1(e.f1(), other.f1()) : false;
  };
  Companion_0.$metadata$ = objectMeta('Companion');
  var Companion_instance_0;
  function Companion_getInstance_0() {
    if (Companion_instance_0 == null)
      new Companion_0();
    return Companion_instance_0;
  }
  function AbstractMap$keys$1(this$0) {
    this.b3_1 = this$0;
    AbstractSet.call(this);
  }
  AbstractMap$keys$1.prototype.c3 = function (element) {
    return this.b3_1.f3(element);
  };
  AbstractMap$keys$1.prototype.x1 = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    return this.c3((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  AbstractMap$keys$1.prototype.f = function () {
    var entryIterator = this.b3_1.d1().f();
    return new AbstractMap$keys$1$iterator$1(entryIterator);
  };
  AbstractMap$keys$1.prototype.i = function () {
    return this.b3_1.i();
  };
  AbstractMap$keys$1.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, AbstractSet.prototype);
  function AbstractMap$toString$lambda(this$0) {
    return function (it) {
      return this$0.g3(it);
    };
  }
  function AbstractMap$values$1(this$0) {
    this.h3_1 = this$0;
    AbstractCollection.call(this);
  }
  AbstractMap$values$1.prototype.i3 = function (element) {
    return this.h3_1.j3(element);
  };
  AbstractMap$values$1.prototype.x1 = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    return this.i3((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  AbstractMap$values$1.prototype.f = function () {
    var entryIterator = this.h3_1.d1().f();
    return new AbstractMap$values$1$iterator$1(entryIterator);
  };
  AbstractMap$values$1.prototype.i = function () {
    return this.h3_1.i();
  };
  AbstractMap$values$1.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, AbstractCollection.prototype);
  function AbstractMap() {
    Companion_getInstance_0();
    this.d3_1 = null;
    this.e3_1 = null;
  }
  AbstractMap.prototype.f3 = function (key) {
    return !(implFindEntry(this, key) == null);
  };
  AbstractMap.prototype.j3 = function (value) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.any' call
      var tmp0_any = this.d1();
      var tmp;
      if (isInterface(tmp0_any, Collection)) {
        tmp = tmp0_any.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_any.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        var tmp$ret$1;
        // Inline function 'kotlin.collections.AbstractMap.containsValue.<anonymous>' call
        tmp$ret$1 = equals_1(element.f1(), value);
        if (tmp$ret$1) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    return tmp$ret$0;
  };
  AbstractMap.prototype.k3 = function (entry) {
    if (!(!(entry == null) ? isInterface(entry, Entry) : false))
      return false;
    var key = entry.e1();
    var value = entry.f1();
    var tmp$ret$0;
    // Inline function 'kotlin.collections.get' call
    tmp$ret$0 = (isInterface(this, Map) ? this : THROW_CCE()).t(key);
    var ourValue = tmp$ret$0;
    if (!equals_1(value, ourValue)) {
      return false;
    }
    var tmp;
    if (ourValue == null) {
      var tmp$ret$1;
      // Inline function 'kotlin.collections.containsKey' call
      tmp$ret$1 = (isInterface(this, Map) ? this : THROW_CCE()).f3(key);
      tmp = !tmp$ret$1;
    } else {
      tmp = false;
    }
    if (tmp) {
      return false;
    }
    return true;
  };
  AbstractMap.prototype.equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, Map) : false))
      return false;
    if (!(this.i() === other.i()))
      return false;
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp0_all = other.d1();
      var tmp;
      if (isInterface(tmp0_all, Collection)) {
        tmp = tmp0_all.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_all.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        var tmp$ret$1;
        // Inline function 'kotlin.collections.AbstractMap.equals.<anonymous>' call
        tmp$ret$1 = this.k3(element);
        if (!tmp$ret$1) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  AbstractMap.prototype.t = function (key) {
    var tmp0_safe_receiver = implFindEntry(this, key);
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.f1();
  };
  AbstractMap.prototype.hashCode = function () {
    return hashCode_0(this.d1());
  };
  AbstractMap.prototype.p = function () {
    return this.i() === 0;
  };
  AbstractMap.prototype.i = function () {
    return this.d1().i();
  };
  AbstractMap.prototype.l3 = function () {
    if (this.d3_1 == null) {
      var tmp = this;
      tmp.d3_1 = new AbstractMap$keys$1(this);
    }
    return ensureNotNull(this.d3_1);
  };
  AbstractMap.prototype.toString = function () {
    var tmp = this.d1();
    return joinToString$default_0(tmp, ', ', '{', '}', 0, null, AbstractMap$toString$lambda(this), 24, null);
  };
  AbstractMap.prototype.g3 = function (entry) {
    return toString(this, entry.e1()) + '=' + toString(this, entry.f1());
  };
  AbstractMap.prototype.m3 = function () {
    if (this.e3_1 == null) {
      var tmp = this;
      tmp.e3_1 = new AbstractMap$values$1(this);
    }
    return ensureNotNull(this.e3_1);
  };
  AbstractMap.$metadata$ = classMeta('AbstractMap', [Map]);
  function Companion_1() {
    Companion_instance_1 = this;
  }
  Companion_1.prototype.n3 = function (c) {
    var hashCode = 0;
    var tmp0_iterator = c.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp = hashCode;
      var tmp1_safe_receiver = element;
      var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : hashCode_0(tmp1_safe_receiver);
      hashCode = tmp + (tmp2_elvis_lhs == null ? 0 : tmp2_elvis_lhs) | 0;
    }
    return hashCode;
  };
  Companion_1.prototype.o3 = function (c, other) {
    if (!(c.i() === other.i()))
      return false;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.containsAll' call
    tmp$ret$0 = c.y1(other);
    return tmp$ret$0;
  };
  Companion_1.$metadata$ = objectMeta('Companion');
  var Companion_instance_1;
  function Companion_getInstance_1() {
    if (Companion_instance_1 == null)
      new Companion_1();
    return Companion_instance_1;
  }
  function AbstractSet() {
    Companion_getInstance_1();
    AbstractCollection.call(this);
  }
  AbstractSet.prototype.equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, Set) : false))
      return false;
    return Companion_getInstance_1().o3(this, other);
  };
  AbstractSet.prototype.hashCode = function () {
    return Companion_getInstance_1().n3(this);
  };
  AbstractSet.$metadata$ = classMeta('AbstractSet', [Set], undefined, undefined, undefined, AbstractCollection.prototype);
  function emptyList() {
    return EmptyList_getInstance();
  }
  function listOf(elements) {
    return elements.length > 0 ? asList(elements) : emptyList();
  }
  function mutableListOf() {
    return ArrayList_init_$Create$();
  }
  function isNullOrEmpty(_this__u8e3s4) {
    // Inline function 'kotlin.contracts.contract' call
    return _this__u8e3s4 == null ? true : _this__u8e3s4.p();
  }
  function arrayListOf() {
    return ArrayList_init_$Create$();
  }
  function isNotEmpty(_this__u8e3s4) {
    return !_this__u8e3s4.p();
  }
  function get_indices_1(_this__u8e3s4) {
    return numberRangeToNumber(0, _this__u8e3s4.i() - 1 | 0);
  }
  function List(size, init) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.MutableList' call
    var list = ArrayList_init_$Create$_0(size);
    // Inline function 'kotlin.repeat' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.collections.MutableList.<anonymous>' call
        list.a(init(index));
      }
       while (inductionVariable < size);
    tmp$ret$0 = list;
    return tmp$ret$0;
  }
  function listOf_0() {
    return emptyList();
  }
  function MutableList(size, init) {
    var list = ArrayList_init_$Create$_0(size);
    // Inline function 'kotlin.repeat' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.collections.MutableList.<anonymous>' call
        list.a(init(index));
      }
       while (inductionVariable < size);
    return list;
  }
  function mutableListOf_0(elements) {
    return elements.length === 0 ? ArrayList_init_$Create$() : ArrayList_init_$Create$_1(new ArrayAsCollection(elements, true));
  }
  function optimizeReadOnlyList(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.i();
    switch (tmp0_subject) {
      case 0:
        return emptyList();
      case 1:
        return listOf_1(_this__u8e3s4.l(0));
      default:
        return _this__u8e3s4;
    }
  }
  function get_lastIndex_1(_this__u8e3s4) {
    return _this__u8e3s4.i() - 1 | 0;
  }
  function arrayListOf_0(elements) {
    return elements.length === 0 ? ArrayList_init_$Create$() : ArrayList_init_$Create$_1(new ArrayAsCollection(elements, true));
  }
  function throwIndexOverflow() {
    throw ArithmeticException_init_$Create$('Index overflow has happened.');
  }
  function throwCountOverflow() {
    throw ArithmeticException_init_$Create$('Count overflow has happened.');
  }
  function EmptyList() {
    EmptyList_instance = this;
    this.p3_1 = new Long(-1478467534, -1720727600);
  }
  EmptyList.prototype.equals = function (other) {
    var tmp;
    if (!(other == null) ? isInterface(other, List_0) : false) {
      tmp = other.p();
    } else {
      tmp = false;
    }
    return tmp;
  };
  EmptyList.prototype.hashCode = function () {
    return 1;
  };
  EmptyList.prototype.toString = function () {
    return '[]';
  };
  EmptyList.prototype.i = function () {
    return 0;
  };
  EmptyList.prototype.p = function () {
    return true;
  };
  EmptyList.prototype.q3 = function (element) {
    return false;
  };
  EmptyList.prototype.x1 = function (element) {
    if (true)
      return false;
    var tmp;
    if (false) {} else {
      tmp = THROW_CCE();
    }
    return this.q3(tmp);
  };
  EmptyList.prototype.r3 = function (elements) {
    return elements.p();
  };
  EmptyList.prototype.y1 = function (elements) {
    return this.r3(elements);
  };
  EmptyList.prototype.l = function (index) {
    throw IndexOutOfBoundsException_init_$Create$("Empty list doesn't contain element at index " + index + '.');
  };
  EmptyList.prototype.s3 = function (element) {
    return -1;
  };
  EmptyList.prototype.m2 = function (element) {
    if (true)
      return -1;
    var tmp;
    if (false) {} else {
      tmp = THROW_CCE();
    }
    return this.s3(tmp);
  };
  EmptyList.prototype.f = function () {
    return EmptyIterator_getInstance();
  };
  EmptyList.prototype.k = function (index) {
    if (!(index === 0))
      throw IndexOutOfBoundsException_init_$Create$('Index: ' + index);
    return EmptyIterator_getInstance();
  };
  EmptyList.prototype.s = function (fromIndex, toIndex) {
    if (fromIndex === 0 ? toIndex === 0 : false)
      return this;
    throw IndexOutOfBoundsException_init_$Create$('fromIndex: ' + fromIndex + ', toIndex: ' + toIndex);
  };
  EmptyList.$metadata$ = objectMeta('EmptyList', [List_0, Serializable, RandomAccess]);
  var EmptyList_instance;
  function EmptyList_getInstance() {
    if (EmptyList_instance == null)
      new EmptyList();
    return EmptyList_instance;
  }
  function ArrayAsCollection(values, isVarargs) {
    this.t3_1 = values;
    this.u3_1 = isVarargs;
  }
  ArrayAsCollection.prototype.i = function () {
    return this.t3_1.length;
  };
  ArrayAsCollection.prototype.p = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.isEmpty' call
    var tmp0_isEmpty = this.t3_1;
    tmp$ret$0 = tmp0_isEmpty.length === 0;
    return tmp$ret$0;
  };
  ArrayAsCollection.prototype.v3 = function (element) {
    return contains_1(this.t3_1, element);
  };
  ArrayAsCollection.prototype.w3 = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        var tmp$ret$1;
        // Inline function 'kotlin.collections.ArrayAsCollection.containsAll.<anonymous>' call
        tmp$ret$1 = this.v3(element);
        if (!tmp$ret$1) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  ArrayAsCollection.prototype.y1 = function (elements) {
    return this.w3(elements);
  };
  ArrayAsCollection.prototype.f = function () {
    return arrayIterator(this.t3_1);
  };
  ArrayAsCollection.$metadata$ = classMeta('ArrayAsCollection', [Collection]);
  function EmptyIterator() {
    EmptyIterator_instance = this;
  }
  EmptyIterator.prototype.g = function () {
    return false;
  };
  EmptyIterator.prototype.h = function () {
    throw NoSuchElementException_init_$Create$();
  };
  EmptyIterator.$metadata$ = objectMeta('EmptyIterator', [ListIterator]);
  var EmptyIterator_instance;
  function EmptyIterator_getInstance() {
    if (EmptyIterator_instance == null)
      new EmptyIterator();
    return EmptyIterator_instance;
  }
  function asCollection(_this__u8e3s4) {
    return new ArrayAsCollection(_this__u8e3s4, false);
  }
  function containsAll(_this__u8e3s4, elements) {
    return _this__u8e3s4.y1(elements);
  }
  function orEmpty(_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4;
    return tmp0_elvis_lhs == null ? emptyList() : tmp0_elvis_lhs;
  }
  function Grouping() {
  }
  Grouping.$metadata$ = interfaceMeta('Grouping');
  function fold_0(_this__u8e3s4, initialValue, operation) {
    var tmp$ret$4;
    // Inline function 'kotlin.collections.aggregate' call
    var tmp$ret$3;
    // Inline function 'kotlin.collections.aggregateTo' call
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp$ret$0 = LinkedHashMap_init_$Create$();
    var tmp2_aggregateTo = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = _this__u8e3s4.a1();
    tmp$ret$1 = tmp0_iterator;
    var tmp0_iterator_0 = tmp$ret$1;
    while (tmp0_iterator_0.g()) {
      var e = tmp0_iterator_0.h();
      var key = _this__u8e3s4.b1(e);
      var accumulator = tmp2_aggregateTo.t(key);
      // Inline function 'kotlin.collections.set' call
      var tmp$ret$2;
      // Inline function 'kotlin.collections.fold.<anonymous>' call
      var tmp3__anonymous__ufb84q = accumulator == null ? !tmp2_aggregateTo.f3(key) : false;
      var tmp;
      if (tmp3__anonymous__ufb84q) {
        tmp = initialValue;
      } else {
        tmp = (accumulator == null ? true : isObject(accumulator)) ? accumulator : THROW_CCE();
      }
      tmp$ret$2 = operation(tmp, e);
      var tmp1_set = tmp$ret$2;
      tmp2_aggregateTo.u(key, tmp1_set);
    }
    tmp$ret$3 = tmp2_aggregateTo;
    tmp$ret$4 = tmp$ret$3;
    return tmp$ret$4;
  }
  function aggregate(_this__u8e3s4, operation) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.aggregateTo' call
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp$ret$0 = LinkedHashMap_init_$Create$();
    var tmp2_aggregateTo = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = _this__u8e3s4.a1();
    tmp$ret$1 = tmp0_iterator;
    var tmp0_iterator_0 = tmp$ret$1;
    while (tmp0_iterator_0.g()) {
      var e = tmp0_iterator_0.h();
      var key = _this__u8e3s4.b1(e);
      var accumulator = tmp2_aggregateTo.t(key);
      // Inline function 'kotlin.collections.set' call
      var tmp1_set = operation(key, accumulator, e, accumulator == null ? !tmp2_aggregateTo.f3(key) : false);
      tmp2_aggregateTo.u(key, tmp1_set);
    }
    tmp$ret$2 = tmp2_aggregateTo;
    return tmp$ret$2;
  }
  function aggregateTo(_this__u8e3s4, destination, operation) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = _this__u8e3s4.a1();
    tmp$ret$0 = tmp0_iterator;
    var tmp0_iterator_0 = tmp$ret$0;
    while (tmp0_iterator_0.g()) {
      var e = tmp0_iterator_0.h();
      var key = _this__u8e3s4.b1(e);
      var accumulator = destination.t(key);
      // Inline function 'kotlin.collections.set' call
      var tmp1_set = operation(key, accumulator, e, accumulator == null ? !destination.f3(key) : false);
      destination.u(key, tmp1_set);
    }
    return destination;
  }
  function IndexedValue(index, value) {
    this.x3_1 = index;
    this.y3_1 = value;
  }
  IndexedValue.prototype.z3 = function () {
    return this.x3_1;
  };
  IndexedValue.prototype.f1 = function () {
    return this.y3_1;
  };
  IndexedValue.prototype.a4 = function () {
    return this.x3_1;
  };
  IndexedValue.prototype.b4 = function () {
    return this.y3_1;
  };
  IndexedValue.prototype.toString = function () {
    return 'IndexedValue(index=' + this.x3_1 + ', value=' + this.y3_1 + ')';
  };
  IndexedValue.prototype.hashCode = function () {
    var result = this.x3_1;
    result = imul(result, 31) + (this.y3_1 == null ? 0 : hashCode_0(this.y3_1)) | 0;
    return result;
  };
  IndexedValue.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof IndexedValue))
      return false;
    var tmp0_other_with_cast = other instanceof IndexedValue ? other : THROW_CCE();
    if (!(this.x3_1 === tmp0_other_with_cast.x3_1))
      return false;
    if (!equals_1(this.y3_1, tmp0_other_with_cast.y3_1))
      return false;
    return true;
  };
  IndexedValue.$metadata$ = classMeta('IndexedValue');
  function flatten(_this__u8e3s4) {
    var result = ArrayList_init_$Create$();
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      addAll(result, element);
    }
    return result;
  }
  function Iterable(iterator) {
    return new _no_name_provided__qut3iv_2(iterator);
  }
  function collectionSizeOrDefault(_this__u8e3s4, default_0) {
    var tmp;
    if (isInterface(_this__u8e3s4, Collection)) {
      tmp = _this__u8e3s4.i();
    } else {
      tmp = default_0;
    }
    return tmp;
  }
  function IndexingIterable(iteratorFactory) {
    this.c4_1 = iteratorFactory;
  }
  IndexingIterable.prototype.f = function () {
    return new IndexingIterator(this.c4_1());
  };
  IndexingIterable.$metadata$ = classMeta('IndexingIterable', [Iterable_0]);
  function _no_name_provided__qut3iv_2($iterator) {
    this.d4_1 = $iterator;
  }
  _no_name_provided__qut3iv_2.prototype.f = function () {
    return this.d4_1();
  };
  _no_name_provided__qut3iv_2.$metadata$ = classMeta(undefined, [Iterable_0]);
  function iterator(_this__u8e3s4) {
    return _this__u8e3s4;
  }
  function forEach_1(_this__u8e3s4, operation) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$0 = _this__u8e3s4;
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      operation(element);
    }
  }
  function IndexingIterator(iterator) {
    this.e4_1 = iterator;
    this.f4_1 = 0;
  }
  IndexingIterator.prototype.g = function () {
    return this.e4_1.g();
  };
  IndexingIterator.prototype.h = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this.f4_1;
    tmp0_this.f4_1 = tmp1 + 1 | 0;
    return new IndexedValue(checkIndexOverflow(tmp1), this.e4_1.h());
  };
  IndexingIterator.$metadata$ = classMeta('IndexingIterator', [Iterator_1]);
  function getOrImplicitDefault(_this__u8e3s4, key) {
    if (isInterface(_this__u8e3s4, MapWithDefault))
      return _this__u8e3s4.g4(key);
    var tmp$ret$0;
    $l$block: {
      // Inline function 'kotlin.collections.getOrElseNullable' call
      var value = _this__u8e3s4.t(key);
      if (value == null ? !_this__u8e3s4.f3(key) : false) {
        throw NoSuchElementException_init_$Create$_0('Key ' + key + ' is missing in the map.');
      } else {
        tmp$ret$0 = (value == null ? true : isObject(value)) ? value : THROW_CCE();
        break $l$block;
      }
    }
    return tmp$ret$0;
  }
  function MapWithDefault() {
  }
  MapWithDefault.$metadata$ = interfaceMeta('MapWithDefault', [Map]);
  function mapOf(pairs) {
    return pairs.length > 0 ? toMap_0(pairs, LinkedHashMap_init_$Create$_1(mapCapacity(pairs.length))) : emptyMap();
  }
  function emptyMap() {
    var tmp = EmptyMap_getInstance();
    return isInterface(tmp, Map) ? tmp : THROW_CCE();
  }
  function get(_this__u8e3s4, key) {
    return (isInterface(_this__u8e3s4, Map) ? _this__u8e3s4 : THROW_CCE()).t(key);
  }
  function component1_0(_this__u8e3s4) {
    return _this__u8e3s4.e1();
  }
  function component2_0(_this__u8e3s4) {
    return _this__u8e3s4.f1();
  }
  function toMap(_this__u8e3s4) {
    if (isInterface(_this__u8e3s4, Collection)) {
      var tmp0_subject = _this__u8e3s4.i();
      var tmp;
      switch (tmp0_subject) {
        case 0:
          tmp = emptyMap();
          break;
        case 1:
          var tmp_0;
          if (isInterface(_this__u8e3s4, List_0)) {
            tmp_0 = _this__u8e3s4.l(0);
          } else {
            tmp_0 = _this__u8e3s4.f().h();
          }

          tmp = mapOf_1(tmp_0);
          break;
        default:
          tmp = toMap_1(_this__u8e3s4, LinkedHashMap_init_$Create$_1(mapCapacity(_this__u8e3s4.i())));
          break;
      }
      return tmp;
    }
    return optimizeReadOnlyMap(toMap_1(_this__u8e3s4, LinkedHashMap_init_$Create$()));
  }
  function mutableMapOf() {
    return LinkedHashMap_init_$Create$();
  }
  function getOrPut(_this__u8e3s4, key, defaultValue) {
    var value = _this__u8e3s4.t(key);
    var tmp;
    if (value == null) {
      var answer = defaultValue();
      _this__u8e3s4.u(key, answer);
      tmp = answer;
    } else {
      tmp = value;
    }
    return tmp;
  }
  function set(_this__u8e3s4, key, value) {
    _this__u8e3s4.u(key, value);
  }
  function toMutableMap(_this__u8e3s4) {
    return LinkedHashMap_init_$Create$_2(_this__u8e3s4);
  }
  function iterator_0(_this__u8e3s4) {
    return _this__u8e3s4.d1().f();
  }
  function mapValues(_this__u8e3s4, transform) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.mapValuesTo' call
    var tmp1_mapValuesTo = LinkedHashMap_init_$Create$_1(mapCapacity(_this__u8e3s4.i()));
    var tmp$ret$1;
    // Inline function 'kotlin.collections.associateByTo' call
    var tmp0_associateByTo = _this__u8e3s4.d1();
    var tmp0_iterator = tmp0_associateByTo.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
      tmp$ret$0 = element.e1();
      tmp1_mapValuesTo.u(tmp$ret$0, transform(element));
    }
    tmp$ret$1 = tmp1_mapValuesTo;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function getOrElse_0(_this__u8e3s4, key, defaultValue) {
    var tmp0_elvis_lhs = _this__u8e3s4.t(key);
    return tmp0_elvis_lhs == null ? defaultValue() : tmp0_elvis_lhs;
  }
  function mapKeys(_this__u8e3s4, transform) {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.mapKeysTo' call
    var tmp1_mapKeysTo = LinkedHashMap_init_$Create$_1(mapCapacity(_this__u8e3s4.i()));
    var tmp$ret$1;
    // Inline function 'kotlin.collections.associateByTo' call
    var tmp0_associateByTo = _this__u8e3s4.d1();
    var tmp0_iterator = tmp0_associateByTo.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp = transform(element);
      var tmp$ret$0;
      // Inline function 'kotlin.collections.mapKeysTo.<anonymous>' call
      tmp$ret$0 = element.f1();
      tmp1_mapKeysTo.u(tmp, tmp$ret$0);
    }
    tmp$ret$1 = tmp1_mapKeysTo;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function filterKeys(_this__u8e3s4, predicate) {
    var result = LinkedHashMap_init_$Create$();
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$0 = _this__u8e3s4.d1().f();
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.g()) {
      var entry = tmp0_iterator.h();
      if (predicate(entry.e1())) {
        result.u(entry.e1(), entry.f1());
      }
    }
    return result;
  }
  function filterValues(_this__u8e3s4, predicate) {
    var result = LinkedHashMap_init_$Create$();
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$0 = _this__u8e3s4.d1().f();
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.g()) {
      var entry = tmp0_iterator.h();
      if (predicate(entry.f1())) {
        result.u(entry.e1(), entry.f1());
      }
    }
    return result;
  }
  function filter_1(_this__u8e3s4, predicate) {
    var tmp$ret$1;
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo = LinkedHashMap_init_$Create$();
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$0 = _this__u8e3s4.d1().f();
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      if (predicate(element)) {
        tmp0_filterTo.u(element.e1(), element.f1());
      }
    }
    tmp$ret$1 = tmp0_filterTo;
    return tmp$ret$1;
  }
  function iterator_1(_this__u8e3s4) {
    return _this__u8e3s4.d1().f();
  }
  function mapOf_0() {
    return emptyMap();
  }
  function plus_0(_this__u8e3s4, map) {
    var tmp$ret$0;
    // Inline function 'kotlin.apply' call
    var tmp0_apply = LinkedHashMap_init_$Create$_2(_this__u8e3s4);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.plus.<anonymous>' call
    tmp0_apply.v4(map);
    tmp$ret$0 = tmp0_apply;
    return tmp$ret$0;
  }
  function isNotEmpty_0(_this__u8e3s4) {
    return !_this__u8e3s4.p();
  }
  function hashMapOf(pairs) {
    var tmp$ret$0;
    // Inline function 'kotlin.apply' call
    var tmp0_apply = HashMap_init_$Create$_1(mapCapacity(pairs.length));
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.hashMapOf.<anonymous>' call
    putAll(tmp0_apply, pairs);
    tmp$ret$0 = tmp0_apply;
    return tmp$ret$0;
  }
  function toMap_0(_this__u8e3s4, destination) {
    var tmp$ret$0;
    // Inline function 'kotlin.apply' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.toMap.<anonymous>' call
    putAll(destination, _this__u8e3s4);
    tmp$ret$0 = destination;
    return tmp$ret$0;
  }
  function EmptyMap() {
    EmptyMap_instance = this;
    this.w4_1 = new Long(-888910638, 1920087921);
  }
  EmptyMap.prototype.equals = function (other) {
    var tmp;
    if (!(other == null) ? isInterface(other, Map) : false) {
      tmp = other.p();
    } else {
      tmp = false;
    }
    return tmp;
  };
  EmptyMap.prototype.hashCode = function () {
    return 0;
  };
  EmptyMap.prototype.toString = function () {
    return '{}';
  };
  EmptyMap.prototype.i = function () {
    return 0;
  };
  EmptyMap.prototype.p = function () {
    return true;
  };
  EmptyMap.prototype.x4 = function (key) {
    return false;
  };
  EmptyMap.prototype.f3 = function (key) {
    if (!(key == null ? true : isObject(key)))
      return false;
    return this.x4((key == null ? true : isObject(key)) ? key : THROW_CCE());
  };
  EmptyMap.prototype.y4 = function (key) {
    return null;
  };
  EmptyMap.prototype.t = function (key) {
    if (!(key == null ? true : isObject(key)))
      return null;
    return this.y4((key == null ? true : isObject(key)) ? key : THROW_CCE());
  };
  EmptyMap.prototype.d1 = function () {
    return EmptySet_getInstance();
  };
  EmptyMap.prototype.l3 = function () {
    return EmptySet_getInstance();
  };
  EmptyMap.prototype.m3 = function () {
    return EmptyList_getInstance();
  };
  EmptyMap.$metadata$ = objectMeta('EmptyMap', [Map, Serializable]);
  var EmptyMap_instance;
  function EmptyMap_getInstance() {
    if (EmptyMap_instance == null)
      new EmptyMap();
    return EmptyMap_instance;
  }
  function toMap_1(_this__u8e3s4, destination) {
    var tmp$ret$0;
    // Inline function 'kotlin.apply' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.toMap.<anonymous>' call
    putAll_0(destination, _this__u8e3s4);
    tmp$ret$0 = destination;
    return tmp$ret$0;
  }
  function optimizeReadOnlyMap(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.i();
    var tmp;
    switch (tmp0_subject) {
      case 0:
        tmp = emptyMap();
        break;
      case 1:
        var tmp$ret$0;
        // Inline function 'kotlin.collections.toSingletonMapOrSelf' call
        tmp$ret$0 = _this__u8e3s4;

        tmp = tmp$ret$0;
        break;
      default:
        tmp = _this__u8e3s4;
        break;
    }
    return tmp;
  }
  function mapValuesTo(_this__u8e3s4, destination, transform) {
    var tmp$ret$1;
    // Inline function 'kotlin.collections.associateByTo' call
    var tmp0_associateByTo = _this__u8e3s4.d1();
    var tmp0_iterator = tmp0_associateByTo.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
      tmp$ret$0 = element.e1();
      destination.u(tmp$ret$0, transform(element));
    }
    tmp$ret$1 = destination;
    return tmp$ret$1;
  }
  function mapKeysTo(_this__u8e3s4, destination, transform) {
    var tmp$ret$1;
    // Inline function 'kotlin.collections.associateByTo' call
    var tmp0_associateByTo = _this__u8e3s4.d1();
    var tmp0_iterator = tmp0_associateByTo.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp = transform(element);
      var tmp$ret$0;
      // Inline function 'kotlin.collections.mapKeysTo.<anonymous>' call
      tmp$ret$0 = element.f1();
      destination.u(tmp, tmp$ret$0);
    }
    tmp$ret$1 = destination;
    return tmp$ret$1;
  }
  function filterTo_1(_this__u8e3s4, destination, predicate) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$0 = _this__u8e3s4.d1().f();
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      if (predicate(element)) {
        destination.u(element.e1(), element.f1());
      }
    }
    return destination;
  }
  function putAll(_this__u8e3s4, pairs) {
    var indexedObject = pairs;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var tmp1_loop_parameter = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      var key = tmp1_loop_parameter.a4();
      var value = tmp1_loop_parameter.b4();
      _this__u8e3s4.u(key, value);
    }
  }
  function putAll_0(_this__u8e3s4, pairs) {
    var tmp0_iterator = pairs.f();
    while (tmp0_iterator.g()) {
      var tmp1_loop_parameter = tmp0_iterator.h();
      var key = tmp1_loop_parameter.a4();
      var value = tmp1_loop_parameter.b4();
      _this__u8e3s4.u(key, value);
    }
  }
  function containsKey(_this__u8e3s4, key) {
    return (isInterface(_this__u8e3s4, Map) ? _this__u8e3s4 : THROW_CCE()).f3(key);
  }
  function getValue(_this__u8e3s4, key) {
    return getOrImplicitDefault(_this__u8e3s4, key);
  }
  function linkedMapOf() {
    return LinkedHashMap_init_$Create$();
  }
  function contains_2(_this__u8e3s4, key) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.containsKey' call
    tmp$ret$0 = (isInterface(_this__u8e3s4, Map) ? _this__u8e3s4 : THROW_CCE()).f3(key);
    return tmp$ret$0;
  }
  function toPair(_this__u8e3s4) {
    return new Pair(_this__u8e3s4.e1(), _this__u8e3s4.f1());
  }
  function getOrElseNullable(_this__u8e3s4, key, defaultValue) {
    var value = _this__u8e3s4.t(key);
    if (value == null ? !_this__u8e3s4.f3(key) : false) {
      return defaultValue();
    } else {
      return (value == null ? true : isObject(value)) ? value : THROW_CCE();
    }
  }
  function plusAssign(_this__u8e3s4, element) {
    _this__u8e3s4.a(element);
  }
  function addAll(_this__u8e3s4, elements) {
    var tmp0_subject = elements;
    if (isInterface(tmp0_subject, Collection))
      return _this__u8e3s4.j(elements);
    else {
      var result = false;
      var tmp1_iterator = elements.f();
      while (tmp1_iterator.g()) {
        var item = tmp1_iterator.h();
        if (_this__u8e3s4.a(item))
          result = true;
      }
      return result;
    }
  }
  function IntIterator() {
  }
  IntIterator.prototype.h = function () {
    return this.b5();
  };
  IntIterator.$metadata$ = classMeta('IntIterator', [Iterator_1]);
  function Sequence() {
  }
  Sequence.$metadata$ = interfaceMeta('Sequence');
  function Sequence_0(iterator) {
    return new _no_name_provided__qut3iv_3(iterator);
  }
  function TransformingSequence$iterator$1(this$0) {
    this.d5_1 = this$0;
    this.c5_1 = this$0.e5_1.f();
  }
  TransformingSequence$iterator$1.prototype.h = function () {
    return this.d5_1.f5_1(this.c5_1.h());
  };
  TransformingSequence$iterator$1.prototype.g = function () {
    return this.c5_1.g();
  };
  TransformingSequence$iterator$1.$metadata$ = classMeta(undefined, [Iterator_1]);
  function TransformingSequence(sequence, transformer) {
    this.e5_1 = sequence;
    this.f5_1 = transformer;
  }
  TransformingSequence.prototype.f = function () {
    return new TransformingSequence$iterator$1(this);
  };
  TransformingSequence.$metadata$ = classMeta('TransformingSequence', [Sequence]);
  function _no_name_provided__qut3iv_3($iterator) {
    this.g5_1 = $iterator;
  }
  _no_name_provided__qut3iv_3.prototype.f = function () {
    return this.g5_1();
  };
  _no_name_provided__qut3iv_3.$metadata$ = classMeta(undefined, [Sequence]);
  function setOf(elements) {
    return elements.length > 0 ? toSet(elements) : emptySet();
  }
  function emptySet() {
    return EmptySet_getInstance();
  }
  function optimizeReadOnlySet(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4.i();
    switch (tmp0_subject) {
      case 0:
        return emptySet();
      case 1:
        return setOf_0(_this__u8e3s4.f().h());
      default:
        return _this__u8e3s4;
    }
  }
  function hashSetOf(elements) {
    return toCollection(elements, HashSet_init_$Create$_1(mapCapacity(elements.length)));
  }
  function EmptySet() {
    EmptySet_instance = this;
    this.h5_1 = new Long(1993859828, 793161749);
  }
  EmptySet.prototype.equals = function (other) {
    var tmp;
    if (!(other == null) ? isInterface(other, Set) : false) {
      tmp = other.p();
    } else {
      tmp = false;
    }
    return tmp;
  };
  EmptySet.prototype.hashCode = function () {
    return 0;
  };
  EmptySet.prototype.toString = function () {
    return '[]';
  };
  EmptySet.prototype.i = function () {
    return 0;
  };
  EmptySet.prototype.p = function () {
    return true;
  };
  EmptySet.prototype.q3 = function (element) {
    return false;
  };
  EmptySet.prototype.x1 = function (element) {
    if (true)
      return false;
    var tmp;
    if (false) {} else {
      tmp = THROW_CCE();
    }
    return this.q3(tmp);
  };
  EmptySet.prototype.r3 = function (elements) {
    return elements.p();
  };
  EmptySet.prototype.y1 = function (elements) {
    return this.r3(elements);
  };
  EmptySet.prototype.f = function () {
    return EmptyIterator_getInstance();
  };
  EmptySet.$metadata$ = objectMeta('EmptySet', [Set, Serializable]);
  var EmptySet_instance;
  function EmptySet_getInstance() {
    if (EmptySet_instance == null)
      new EmptySet();
    return EmptySet_instance;
  }
  function linkedSetOf() {
    return LinkedHashSet_init_$Create$();
  }
  function compareBy(selector) {
    var tmp = compareBy$lambda(selector);
    return new sam$kotlin_Comparator$0_0(tmp);
  }
  function naturalOrder() {
    var tmp = NaturalOrderComparator_getInstance();
    return isInterface(tmp, Comparator) ? tmp : THROW_CCE();
  }
  function compareValuesBy(a, b, selector) {
    return compareValues(selector(a), selector(b));
  }
  function NaturalOrderComparator() {
    NaturalOrderComparator_instance = this;
  }
  NaturalOrderComparator.prototype.i5 = function (a, b) {
    return compareTo_0(a, b);
  };
  NaturalOrderComparator.prototype.compare = function (a, b) {
    var tmp = (!(a == null) ? isComparable(a) : false) ? a : THROW_CCE();
    return this.i5(tmp, (!(b == null) ? isComparable(b) : false) ? b : THROW_CCE());
  };
  NaturalOrderComparator.$metadata$ = objectMeta('NaturalOrderComparator', [Comparator]);
  var NaturalOrderComparator_instance;
  function NaturalOrderComparator_getInstance() {
    if (NaturalOrderComparator_instance == null)
      new NaturalOrderComparator();
    return NaturalOrderComparator_instance;
  }
  function compareValues(a, b) {
    if (a === b)
      return 0;
    if (a == null)
      return -1;
    if (b == null)
      return 1;
    return compareTo_0((!(a == null) ? isComparable(a) : false) ? a : THROW_CCE(), b);
  }
  function compareBy_0(comparator, selector) {
    var tmp = compareBy$lambda_0(comparator, selector);
    return new sam$kotlin_Comparator$0_1(tmp);
  }
  function compareValuesBy_0(a, b, comparator, selector) {
    return comparator.compare(selector(a), selector(b));
  }
  function sam$kotlin_Comparator$0_0(function_0) {
    this.j5_1 = function_0;
  }
  sam$kotlin_Comparator$0_0.prototype.x = function (a, b) {
    return this.j5_1(a, b);
  };
  sam$kotlin_Comparator$0_0.prototype.compare = function (a, b) {
    return this.x(a, b);
  };
  sam$kotlin_Comparator$0_0.$metadata$ = classMeta('sam$kotlin_Comparator$0', [Comparator]);
  function sam$kotlin_Comparator$0_1(function_0) {
    this.k5_1 = function_0;
  }
  sam$kotlin_Comparator$0_1.prototype.x = function (a, b) {
    return this.k5_1(a, b);
  };
  sam$kotlin_Comparator$0_1.prototype.compare = function (a, b) {
    return this.x(a, b);
  };
  sam$kotlin_Comparator$0_1.$metadata$ = classMeta('sam$kotlin_Comparator$0', [Comparator]);
  function compareBy$lambda($selector) {
    return function (a, b) {
      var tmp$ret$0;
      // Inline function 'kotlin.comparisons.compareValuesBy' call
      tmp$ret$0 = compareValues($selector(a), $selector(b));
      return tmp$ret$0;
    };
  }
  function compareBy$lambda_0($comparator, $selector) {
    return function (a, b) {
      var tmp$ret$0;
      // Inline function 'kotlin.comparisons.compareValuesBy' call
      tmp$ret$0 = $comparator.compare($selector(a), $selector(b));
      return tmp$ret$0;
    };
  }
  function contract(builder) {
  }
  function getProgressionLastElement(start, end, step) {
    var tmp;
    if (step > 0) {
      tmp = start >= end ? end : end - differenceModulo(end, start, step) | 0;
    } else if (step < 0) {
      tmp = start <= end ? end : end + differenceModulo(start, end, -step | 0) | 0;
    } else {
      throw IllegalArgumentException_init_$Create$_0('Step is zero.');
    }
    return tmp;
  }
  function differenceModulo(a, b, c) {
    return mod(mod(a, c) - mod(b, c) | 0, c);
  }
  function mod(a, b) {
    var mod = a % b | 0;
    return mod >= 0 ? mod : mod + b | 0;
  }
  function Companion_2() {
    Companion_instance_2 = this;
    this.g1_1 = new IntRange(1, 0);
  }
  Companion_2.$metadata$ = objectMeta('Companion');
  var Companion_instance_2;
  function Companion_getInstance_2() {
    if (Companion_instance_2 == null)
      new Companion_2();
    return Companion_instance_2;
  }
  function IntRange(start, endInclusive) {
    Companion_getInstance_2();
    IntProgression.call(this, start, endInclusive, 1);
  }
  IntRange.prototype.q = function () {
    return this.m1_1;
  };
  IntRange.prototype.r = function () {
    return this.n1_1;
  };
  IntRange.prototype.l5 = function (value) {
    return this.m1_1 <= value ? value <= this.n1_1 : false;
  };
  IntRange.prototype.p = function () {
    return this.m1_1 > this.n1_1;
  };
  IntRange.prototype.equals = function (other) {
    var tmp;
    if (other instanceof IntRange) {
      tmp = (this.p() ? other.p() : false) ? true : this.m1_1 === other.m1_1 ? this.n1_1 === other.n1_1 : false;
    } else {
      tmp = false;
    }
    return tmp;
  };
  IntRange.prototype.hashCode = function () {
    return this.p() ? -1 : imul(31, this.m1_1) + this.n1_1 | 0;
  };
  IntRange.prototype.toString = function () {
    return '' + this.m1_1 + '..' + this.n1_1;
  };
  IntRange.$metadata$ = classMeta('IntRange', [ClosedRange, OpenEndRange], undefined, undefined, undefined, IntProgression.prototype);
  function IntProgressionIterator(first, last, step) {
    IntIterator.call(this);
    this.n5_1 = step;
    this.o5_1 = last;
    this.p5_1 = this.n5_1 > 0 ? first <= last : first >= last;
    this.q5_1 = this.p5_1 ? first : this.o5_1;
  }
  IntProgressionIterator.prototype.g = function () {
    return this.p5_1;
  };
  IntProgressionIterator.prototype.b5 = function () {
    var value = this.q5_1;
    if (value === this.o5_1) {
      if (!this.p5_1)
        throw NoSuchElementException_init_$Create$();
      this.p5_1 = false;
    } else {
      var tmp0_this = this;
      tmp0_this.q5_1 = tmp0_this.q5_1 + this.n5_1 | 0;
    }
    return value;
  };
  IntProgressionIterator.$metadata$ = classMeta('IntProgressionIterator', undefined, undefined, undefined, undefined, IntIterator.prototype);
  function Companion_3() {
    Companion_instance_3 = this;
  }
  Companion_3.prototype.l1 = function (rangeStart, rangeEnd, step) {
    return new IntProgression(rangeStart, rangeEnd, step);
  };
  Companion_3.$metadata$ = objectMeta('Companion');
  var Companion_instance_3;
  function Companion_getInstance_3() {
    if (Companion_instance_3 == null)
      new Companion_3();
    return Companion_instance_3;
  }
  function IntProgression(start, endInclusive, step) {
    Companion_getInstance_3();
    if (step === 0)
      throw IllegalArgumentException_init_$Create$_0('Step must be non-zero.');
    if (step === IntCompanionObject_getInstance().h1_1)
      throw IllegalArgumentException_init_$Create$_0('Step must be greater than Int.MIN_VALUE to avoid overflow on negation.');
    this.m1_1 = start;
    this.n1_1 = getProgressionLastElement(start, endInclusive, step);
    this.o1_1 = step;
  }
  IntProgression.prototype.m5 = function () {
    return this.m1_1;
  };
  IntProgression.prototype.f = function () {
    return new IntProgressionIterator(this.m1_1, this.n1_1, this.o1_1);
  };
  IntProgression.prototype.p = function () {
    return this.o1_1 > 0 ? this.m1_1 > this.n1_1 : this.m1_1 < this.n1_1;
  };
  IntProgression.prototype.equals = function (other) {
    var tmp;
    if (other instanceof IntProgression) {
      tmp = (this.p() ? other.p() : false) ? true : (this.m1_1 === other.m1_1 ? this.n1_1 === other.n1_1 : false) ? this.o1_1 === other.o1_1 : false;
    } else {
      tmp = false;
    }
    return tmp;
  };
  IntProgression.prototype.hashCode = function () {
    return this.p() ? -1 : imul(31, imul(31, this.m1_1) + this.n1_1 | 0) + this.o1_1 | 0;
  };
  IntProgression.prototype.toString = function () {
    return this.o1_1 > 0 ? '' + this.m1_1 + '..' + this.n1_1 + ' step ' + this.o1_1 : '' + this.m1_1 + ' downTo ' + this.n1_1 + ' step ' + (-this.o1_1 | 0);
  };
  IntProgression.$metadata$ = classMeta('IntProgression', [Iterable_0]);
  function ClosedRange() {
  }
  ClosedRange.$metadata$ = interfaceMeta('ClosedRange');
  function OpenEndRange() {
  }
  OpenEndRange.$metadata$ = interfaceMeta('OpenEndRange');
  function checkStepIsPositive(isPositive, step) {
    if (!isPositive)
      throw IllegalArgumentException_init_$Create$_0('Step must be positive, was: ' + toString_3(step) + '.');
  }
  function KClassifier() {
  }
  KClassifier.$metadata$ = interfaceMeta('KClassifier');
  function Companion_4() {
    Companion_instance_4 = this;
    this.r5_1 = new KTypeProjection(null, null);
  }
  Companion_4.prototype.s5 = function (type) {
    return new KTypeProjection(KVariance_INVARIANT_getInstance(), type);
  };
  Companion_4.$metadata$ = objectMeta('Companion');
  var Companion_instance_4;
  function Companion_getInstance_4() {
    if (Companion_instance_4 == null)
      new Companion_4();
    return Companion_instance_4;
  }
  function KTypeProjection(variance, type) {
    Companion_getInstance_4();
    this.t5_1 = variance;
    this.u5_1 = type;
    // Inline function 'kotlin.require' call
    var tmp0_require = this.t5_1 == null === (this.u5_1 == null);
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlin.reflect.KTypeProjection.<anonymous>' call
      tmp$ret$0 = this.t5_1 == null ? 'Star projection must have no type specified.' : 'The projection variance ' + this.t5_1 + ' requires type to be specified.';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
  }
  KTypeProjection.prototype.v5 = function () {
    return this.t5_1;
  };
  KTypeProjection.prototype.w5 = function () {
    return this.u5_1;
  };
  KTypeProjection.prototype.toString = function () {
    var tmp0_subject = this.t5_1;
    var tmp0 = tmp0_subject == null ? -1 : tmp0_subject.d2_1;
    var tmp;
    switch (tmp0) {
      case -1:
        tmp = '*';
        break;
      case 0:
        tmp = toString_2(this.u5_1);
        break;
      case 1:
        tmp = 'in ' + this.u5_1;
        break;
      case 2:
        tmp = 'out ' + this.u5_1;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  KTypeProjection.prototype.hashCode = function () {
    var result = this.t5_1 == null ? 0 : this.t5_1.hashCode();
    result = imul(result, 31) + (this.u5_1 == null ? 0 : hashCode_0(this.u5_1)) | 0;
    return result;
  };
  KTypeProjection.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof KTypeProjection))
      return false;
    var tmp0_other_with_cast = other instanceof KTypeProjection ? other : THROW_CCE();
    if (!equals_1(this.t5_1, tmp0_other_with_cast.t5_1))
      return false;
    if (!equals_1(this.u5_1, tmp0_other_with_cast.u5_1))
      return false;
    return true;
  };
  KTypeProjection.$metadata$ = classMeta('KTypeProjection');
  var KVariance_INVARIANT_instance;
  var KVariance_IN_instance;
  var KVariance_OUT_instance;
  var KVariance_entriesInitialized;
  function KVariance_initEntries() {
    if (KVariance_entriesInitialized)
      return Unit_getInstance();
    KVariance_entriesInitialized = true;
    KVariance_INVARIANT_instance = new KVariance('INVARIANT', 0);
    KVariance_IN_instance = new KVariance('IN', 1);
    KVariance_OUT_instance = new KVariance('OUT', 2);
  }
  function KVariance(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  KVariance.$metadata$ = classMeta('KVariance', undefined, undefined, undefined, undefined, Enum.prototype);
  function KVariance_INVARIANT_getInstance() {
    KVariance_initEntries();
    return KVariance_INVARIANT_instance;
  }
  function appendElement(_this__u8e3s4, element, transform) {
    if (!(transform == null)) {
      _this__u8e3s4.b(transform(element));
    } else {
      if (element == null ? true : isCharSequence(element)) {
        _this__u8e3s4.b(element);
      } else {
        if (element instanceof Char_0) {
          _this__u8e3s4.x5(element.q1_1);
        } else {
          _this__u8e3s4.b(toString_2(element));
        }
      }
    }
  }
  function equals(_this__u8e3s4, other, ignoreCase) {
    if (equals_1(new Char_0(_this__u8e3s4), new Char_0(other)))
      return true;
    if (!ignoreCase)
      return false;
    var thisUpper = uppercaseChar(_this__u8e3s4);
    var otherUpper = uppercaseChar(other);
    var tmp;
    if (equals_1(new Char_0(thisUpper), new Char_0(otherUpper))) {
      tmp = true;
    } else {
      var tmp$ret$3;
      // Inline function 'kotlin.text.lowercaseChar' call
      var tmp$ret$2;
      // Inline function 'kotlin.text.lowercase' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      var tmp0_asDynamic = toString_1(thisUpper);
      tmp$ret$0 = tmp0_asDynamic;
      var tmp1_unsafeCast = tmp$ret$0.toLowerCase();
      tmp$ret$1 = tmp1_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = charSequenceGet(tmp$ret$2, 0);
      var tmp_0 = new Char_0(tmp$ret$3);
      var tmp$ret$7;
      // Inline function 'kotlin.text.lowercaseChar' call
      var tmp$ret$6;
      // Inline function 'kotlin.text.lowercase' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      var tmp2_asDynamic = toString_1(otherUpper);
      tmp$ret$4 = tmp2_asDynamic;
      var tmp3_unsafeCast = tmp$ret$4.toLowerCase();
      tmp$ret$5 = tmp3_unsafeCast;
      tmp$ret$6 = tmp$ret$5;
      tmp$ret$7 = charSequenceGet(tmp$ret$6, 0);
      tmp = equals_1(tmp_0, new Char_0(tmp$ret$7));
    }
    return tmp;
  }
  function prependIndent(_this__u8e3s4, indent) {
    var tmp = lineSequence(_this__u8e3s4);
    var tmp_0 = map_2(tmp, prependIndent$lambda(indent));
    return joinToString$default_1(tmp_0, '\n', null, null, 0, null, null, 62, null);
  }
  function trimIndent(_this__u8e3s4) {
    return replaceIndent(_this__u8e3s4, '');
  }
  function replaceIndent(_this__u8e3s4, newIndent) {
    var lines_0 = lines(_this__u8e3s4);
    var tmp$ret$3;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$1;
    // Inline function 'kotlin.collections.filter' call
    var tmp$ret$0;
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo = ArrayList_init_$Create$();
    var tmp0_iterator = lines_0.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      if (isNotBlank(element)) {
        tmp0_filterTo.a(element);
      }
    }
    tmp$ret$0 = tmp0_filterTo;
    tmp$ret$1 = tmp$ret$0;
    var tmp0_map = tmp$ret$1;
    var tmp$ret$2;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator_0 = tmp0_map.f();
    while (tmp0_iterator_0.g()) {
      var item = tmp0_iterator_0.h();
      tmp0_mapTo.a(indentWidth(item));
    }
    tmp$ret$2 = tmp0_mapTo;
    tmp$ret$3 = tmp$ret$2;
    var tmp0_elvis_lhs = minOrNull(tmp$ret$3);
    var minCommonIndent = tmp0_elvis_lhs == null ? 0 : tmp0_elvis_lhs;
    var tmp$ret$10;
    // Inline function 'kotlin.text.reindent' call
    var tmp1_reindent = _this__u8e3s4.length + imul(newIndent.length, lines_0.i()) | 0;
    var tmp2_reindent = getIndentFunction(newIndent);
    var lastIndex = get_lastIndex_1(lines_0);
    var tmp$ret$9;
    // Inline function 'kotlin.collections.mapIndexedNotNull' call
    var tmp$ret$8;
    // Inline function 'kotlin.collections.mapIndexedNotNullTo' call
    var tmp1_mapIndexedNotNullTo = ArrayList_init_$Create$();
    // Inline function 'kotlin.collections.forEachIndexed' call
    var index = 0;
    var tmp0_iterator_1 = lines_0.f();
    while (tmp0_iterator_1.g()) {
      var item_0 = tmp0_iterator_1.h();
      // Inline function 'kotlin.collections.mapIndexedNotNullTo.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      var tmp0__anonymous__q1qw7t = checkIndexOverflow(tmp1);
      var tmp$ret$6;
      // Inline function 'kotlin.text.reindent.<anonymous>' call
      var tmp;
      if ((tmp0__anonymous__q1qw7t === 0 ? true : tmp0__anonymous__q1qw7t === lastIndex) ? isBlank(item_0) : false) {
        tmp = null;
      } else {
        var tmp$ret$4;
        // Inline function 'kotlin.text.replaceIndent.<anonymous>' call
        tmp$ret$4 = drop_0(item_0, minCommonIndent);
        var tmp0_safe_receiver = tmp$ret$4;
        var tmp_0;
        if (tmp0_safe_receiver == null) {
          tmp_0 = null;
        } else {
          var tmp$ret$5;
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          tmp$ret$5 = tmp2_reindent(tmp0_safe_receiver);
          tmp_0 = tmp$ret$5;
        }
        var tmp1_elvis_lhs = tmp_0;
        tmp = tmp1_elvis_lhs == null ? item_0 : tmp1_elvis_lhs;
      }
      tmp$ret$6 = tmp;
      var tmp0_safe_receiver_0 = tmp$ret$6;
      if (tmp0_safe_receiver_0 == null)
        null;
      else {
        var tmp$ret$7;
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        tmp1_mapIndexedNotNullTo.a(tmp0_safe_receiver_0);
        tmp$ret$7 = Unit_getInstance();
      }
    }
    tmp$ret$8 = tmp1_mapIndexedNotNullTo;
    tmp$ret$9 = tmp$ret$8;
    var tmp_1 = tmp$ret$9;
    var tmp_2 = StringBuilder_init_$Create$(tmp1_reindent);
    tmp$ret$10 = joinTo$default(tmp_1, tmp_2, '\n', null, null, 0, null, null, 124, null).toString();
    return tmp$ret$10;
  }
  function indentWidth(_this__u8e3s4) {
    var tmp$ret$3;
    // Inline function 'kotlin.let' call
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.text.indexOfFirst' call
      var inductionVariable = 0;
      var last = charSequenceLength(_this__u8e3s4) - 1 | 0;
      if (inductionVariable <= last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp$ret$0;
          // Inline function 'kotlin.text.indentWidth.<anonymous>' call
          var tmp0__anonymous__q1qw7t = charSequenceGet(_this__u8e3s4, index);
          tmp$ret$0 = !isWhitespace(tmp0__anonymous__q1qw7t);
          if (tmp$ret$0) {
            tmp$ret$1 = index;
            break $l$block;
          }
        }
         while (inductionVariable <= last);
      tmp$ret$1 = -1;
    }
    var tmp1_let = tmp$ret$1;
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$2;
    // Inline function 'kotlin.text.indentWidth.<anonymous>' call
    tmp$ret$2 = tmp1_let === -1 ? _this__u8e3s4.length : tmp1_let;
    tmp$ret$3 = tmp$ret$2;
    return tmp$ret$3;
  }
  function reindent(_this__u8e3s4, resultSizeEstimate, indentAddFunction, indentCutFunction) {
    var lastIndex = get_lastIndex_1(_this__u8e3s4);
    var tmp$ret$4;
    // Inline function 'kotlin.collections.mapIndexedNotNull' call
    var tmp$ret$3;
    // Inline function 'kotlin.collections.mapIndexedNotNullTo' call
    var tmp1_mapIndexedNotNullTo = ArrayList_init_$Create$();
    // Inline function 'kotlin.collections.forEachIndexed' call
    var index = 0;
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      // Inline function 'kotlin.collections.mapIndexedNotNullTo.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      var tmp0__anonymous__q1qw7t = checkIndexOverflow(tmp1);
      var tmp$ret$1;
      // Inline function 'kotlin.text.reindent.<anonymous>' call
      var tmp;
      if ((tmp0__anonymous__q1qw7t === 0 ? true : tmp0__anonymous__q1qw7t === lastIndex) ? isBlank(item) : false) {
        tmp = null;
      } else {
        var tmp0_safe_receiver = indentCutFunction(item);
        var tmp_0;
        if (tmp0_safe_receiver == null) {
          tmp_0 = null;
        } else {
          var tmp$ret$0;
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          tmp$ret$0 = indentAddFunction(tmp0_safe_receiver);
          tmp_0 = tmp$ret$0;
        }
        var tmp1_elvis_lhs = tmp_0;
        tmp = tmp1_elvis_lhs == null ? item : tmp1_elvis_lhs;
      }
      tmp$ret$1 = tmp;
      var tmp0_safe_receiver_0 = tmp$ret$1;
      if (tmp0_safe_receiver_0 == null)
        null;
      else {
        var tmp$ret$2;
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        tmp1_mapIndexedNotNullTo.a(tmp0_safe_receiver_0);
        tmp$ret$2 = Unit_getInstance();
      }
    }
    tmp$ret$3 = tmp1_mapIndexedNotNullTo;
    tmp$ret$4 = tmp$ret$3;
    var tmp_1 = tmp$ret$4;
    var tmp_2 = StringBuilder_init_$Create$(resultSizeEstimate);
    return joinTo$default(tmp_1, tmp_2, '\n', null, null, 0, null, null, 124, null).toString();
  }
  function getIndentFunction(indent) {
    var tmp;
    var tmp$ret$0;
    // Inline function 'kotlin.text.isEmpty' call
    tmp$ret$0 = charSequenceLength(indent) === 0;
    if (tmp$ret$0) {
      tmp = getIndentFunction$lambda;
    } else {
      tmp = getIndentFunction$lambda_0(indent);
    }
    return tmp;
  }
  function prependIndent$lambda($indent) {
    return function (it) {
      var tmp;
      if (isBlank(it)) {
        tmp = it.length < $indent.length ? $indent : it;
      } else {
        tmp = $indent + it;
      }
      return tmp;
    };
  }
  function getIndentFunction$lambda(line) {
    return line;
  }
  function getIndentFunction$lambda_0($indent) {
    return function (line) {
      return $indent + line;
    };
  }
  function buildString(builderAction) {
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'kotlin.apply' call
    var tmp0_apply = StringBuilder_init_$Create$_1();
    // Inline function 'kotlin.contracts.contract' call
    builderAction(tmp0_apply);
    tmp$ret$0 = tmp0_apply;
    return tmp$ret$0.toString();
  }
  function toLongOrNull(_this__u8e3s4) {
    return toLongOrNull_0(_this__u8e3s4, 10);
  }
  function toIntOrNull(_this__u8e3s4) {
    return toIntOrNull_0(_this__u8e3s4, 10);
  }
  function toLongOrNull_0(_this__u8e3s4, radix) {
    checkRadix(radix);
    var length = _this__u8e3s4.length;
    if (length === 0)
      return null;
    var start;
    var isNegative;
    var limit;
    var firstChar = charSequenceGet(_this__u8e3s4, 0);
    if (Char__compareTo_impl_ypi4mb(firstChar, _Char___init__impl__6a9atx(48)) < 0) {
      if (length === 1)
        return null;
      start = 1;
      if (equals_1(new Char_0(firstChar), new Char_0(_Char___init__impl__6a9atx(45)))) {
        isNegative = true;
        Companion_getInstance_13();
        limit = new Long(0, -2147483648);
      } else if (equals_1(new Char_0(firstChar), new Char_0(_Char___init__impl__6a9atx(43)))) {
        isNegative = false;
        Companion_getInstance_13();
        limit = (new Long(-1, 2147483647)).a6();
      } else
        return null;
    } else {
      start = 0;
      isNegative = false;
      Companion_getInstance_13();
      limit = (new Long(-1, 2147483647)).a6();
    }
    var tmp$ret$0;
    // Inline function 'kotlin.Long.div' call
    Companion_getInstance_13();
    var tmp0_div = (new Long(-1, 2147483647)).a6();
    tmp$ret$0 = tmp0_div.b6(new Long(36, 0));
    var limitForMaxRadix = tmp$ret$0;
    var limitBeforeMul = limitForMaxRadix;
    var result = new Long(0, 0);
    var inductionVariable = start;
    if (inductionVariable < length)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var digit = digitOf(charSequenceGet(_this__u8e3s4, i), radix);
        if (digit < 0)
          return null;
        if (result.c6(limitBeforeMul) < 0) {
          if (limitBeforeMul.equals(limitForMaxRadix)) {
            var tmp$ret$1;
            // Inline function 'kotlin.Long.div' call
            tmp$ret$1 = limit.b6(toLong_1(radix));
            limitBeforeMul = tmp$ret$1;
            if (result.c6(limitBeforeMul) < 0) {
              return null;
            }
          } else {
            return null;
          }
        }
        var tmp$ret$2;
        // Inline function 'kotlin.Long.times' call
        var tmp1_times = result;
        tmp$ret$2 = tmp1_times.d6(toLong_1(radix));
        result = tmp$ret$2;
        var tmp = result;
        var tmp$ret$3;
        // Inline function 'kotlin.Long.plus' call
        tmp$ret$3 = limit.e6(toLong_1(digit));
        if (tmp.c6(tmp$ret$3) < 0)
          return null;
        var tmp$ret$4;
        // Inline function 'kotlin.Long.minus' call
        var tmp2_minus = result;
        tmp$ret$4 = tmp2_minus.f6(toLong_1(digit));
        result = tmp$ret$4;
      }
       while (inductionVariable < length);
    return isNegative ? result : result.a6();
  }
  function toIntOrNull_0(_this__u8e3s4, radix) {
    checkRadix(radix);
    var length = _this__u8e3s4.length;
    if (length === 0)
      return null;
    var start;
    var isNegative;
    var limit;
    var firstChar = charSequenceGet(_this__u8e3s4, 0);
    if (Char__compareTo_impl_ypi4mb(firstChar, _Char___init__impl__6a9atx(48)) < 0) {
      if (length === 1)
        return null;
      start = 1;
      if (equals_1(new Char_0(firstChar), new Char_0(_Char___init__impl__6a9atx(45)))) {
        isNegative = true;
        limit = IntCompanionObject_getInstance().h1_1;
      } else if (equals_1(new Char_0(firstChar), new Char_0(_Char___init__impl__6a9atx(43)))) {
        isNegative = false;
        limit = -IntCompanionObject_getInstance().i1_1 | 0;
      } else
        return null;
    } else {
      start = 0;
      isNegative = false;
      limit = -IntCompanionObject_getInstance().i1_1 | 0;
    }
    var limitForMaxRadix = (-IntCompanionObject_getInstance().i1_1 | 0) / 36 | 0;
    var limitBeforeMul = limitForMaxRadix;
    var result = 0;
    var inductionVariable = start;
    if (inductionVariable < length)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var digit = digitOf(charSequenceGet(_this__u8e3s4, i), radix);
        if (digit < 0)
          return null;
        if (result < limitBeforeMul) {
          if (limitBeforeMul === limitForMaxRadix) {
            limitBeforeMul = limit / radix | 0;
            if (result < limitBeforeMul) {
              return null;
            }
          } else {
            return null;
          }
        }
        result = imul(result, radix);
        if (result < (limit + digit | 0))
          return null;
        result = result - digit | 0;
      }
       while (inductionVariable < length);
    return isNegative ? result : -result | 0;
  }
  function numberFormatError(input) {
    throw NumberFormatException_init_$Create$("Invalid number format: '" + input + "'");
  }
  function toByteOrNull(_this__u8e3s4) {
    return toByteOrNull_0(_this__u8e3s4, 10);
  }
  function toShortOrNull(_this__u8e3s4) {
    return toShortOrNull_0(_this__u8e3s4, 10);
  }
  function toByteOrNull_0(_this__u8e3s4, radix) {
    var tmp0_elvis_lhs = toIntOrNull_0(_this__u8e3s4, radix);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var int = tmp;
    if (int < ByteCompanionObject_getInstance().g6_1 ? true : int > ByteCompanionObject_getInstance().h6_1)
      return null;
    return toByte_0(int);
  }
  function toShortOrNull_0(_this__u8e3s4, radix) {
    var tmp0_elvis_lhs = toIntOrNull_0(_this__u8e3s4, radix);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var int = tmp;
    if (int < ShortCompanionObject_getInstance().k6_1 ? true : int > ShortCompanionObject_getInstance().l6_1)
      return null;
    return toShort_0(int);
  }
  function isEmpty_1(_this__u8e3s4) {
    return charSequenceLength(_this__u8e3s4) === 0;
  }
  function contains_3(_this__u8e3s4, char, ignoreCase) {
    return indexOf$default(_this__u8e3s4, char, 0, ignoreCase, 2, null) >= 0;
  }
  function contains$default(_this__u8e3s4, char, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignoreCase = false;
    return contains_3(_this__u8e3s4, char, ignoreCase);
  }
  function split(_this__u8e3s4, delimiters, ignoreCase, limit) {
    if (delimiters.length === 1) {
      return split_0(_this__u8e3s4, toString_1(delimiters[0]), ignoreCase, limit);
    }
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = asIterable_0(rangesDelimitedBy$default(_this__u8e3s4, delimiters, 0, ignoreCase, limit, 2, null));
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'kotlin.text.split.<anonymous>' call
      tmp$ret$0 = substring_1(_this__u8e3s4, item);
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function split$default(_this__u8e3s4, delimiters, ignoreCase, limit, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignoreCase = false;
    if (!(($mask0 & 4) === 0))
      limit = 0;
    return split(_this__u8e3s4, delimiters, ignoreCase, limit);
  }
  function isNotEmpty_1(_this__u8e3s4) {
    return charSequenceLength(_this__u8e3s4) > 0;
  }
  function substring(_this__u8e3s4, range) {
    var tmp$ret$1;
    // Inline function 'kotlin.text.substring' call
    var tmp0_substring = range.q();
    var tmp1_substring = range.r() + 1 | 0;
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    tmp$ret$1 = tmp$ret$0.substring(tmp0_substring, tmp1_substring);
    return tmp$ret$1;
  }
  function isNotBlank(_this__u8e3s4) {
    return !isBlank(_this__u8e3s4);
  }
  function substring_0(_this__u8e3s4, startIndex, endIndex) {
    return toString_3(charSequenceSubSequence(_this__u8e3s4, startIndex, endIndex));
  }
  function get_lastIndex_2(_this__u8e3s4) {
    return charSequenceLength(_this__u8e3s4) - 1 | 0;
  }
  function get_indices_2(_this__u8e3s4) {
    return numberRangeToNumber(0, charSequenceLength(_this__u8e3s4) - 1 | 0);
  }
  function indexOf_3(_this__u8e3s4, char, startIndex, ignoreCase) {
    var tmp;
    var tmp_0;
    if (ignoreCase) {
      tmp_0 = true;
    } else {
      tmp_0 = !(typeof _this__u8e3s4 === 'string');
    }
    if (tmp_0) {
      var tmp$ret$0;
      // Inline function 'kotlin.charArrayOf' call
      tmp$ret$0 = charArrayOf_0([char]);
      tmp = indexOfAny(_this__u8e3s4, tmp$ret$0, startIndex, ignoreCase);
    } else {
      var tmp$ret$3;
      // Inline function 'kotlin.text.nativeIndexOf' call
      var tmp1_nativeIndexOf = _this__u8e3s4;
      var tmp$ret$2;
      // Inline function 'kotlin.text.nativeIndexOf' call
      var tmp0_nativeIndexOf = toString_1(char);
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp1_nativeIndexOf;
      tmp$ret$2 = tmp$ret$1.indexOf(tmp0_nativeIndexOf, startIndex);
      tmp$ret$3 = tmp$ret$2;
      tmp = tmp$ret$3;
    }
    return tmp;
  }
  function indexOf$default(_this__u8e3s4, char, startIndex, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = 0;
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return indexOf_3(_this__u8e3s4, char, startIndex, ignoreCase);
  }
  function split_0(_this__u8e3s4, delimiter, ignoreCase, limit) {
    requireNonNegativeLimit(limit);
    var currentOffset = 0;
    var nextIndex = indexOf_4(_this__u8e3s4, delimiter, currentOffset, ignoreCase);
    if (nextIndex === -1 ? true : limit === 1) {
      return listOf_1(toString_3(_this__u8e3s4));
    }
    var isLimited = limit > 0;
    var result = ArrayList_init_$Create$_0(isLimited ? coerceAtMost(limit, 10) : 10);
    $l$loop: do {
      var tmp$ret$0;
      // Inline function 'kotlin.text.substring' call
      var tmp0_substring = currentOffset;
      var tmp1_substring = nextIndex;
      tmp$ret$0 = toString_3(charSequenceSubSequence(_this__u8e3s4, tmp0_substring, tmp1_substring));
      result.a(tmp$ret$0);
      currentOffset = nextIndex + delimiter.length | 0;
      if (isLimited ? result.i() === (limit - 1 | 0) : false)
        break $l$loop;
      nextIndex = indexOf_4(_this__u8e3s4, delimiter, currentOffset, ignoreCase);
    }
     while (!(nextIndex === -1));
    var tmp$ret$1;
    // Inline function 'kotlin.text.substring' call
    var tmp2_substring = currentOffset;
    var tmp3_substring = charSequenceLength(_this__u8e3s4);
    tmp$ret$1 = toString_3(charSequenceSubSequence(_this__u8e3s4, tmp2_substring, tmp3_substring));
    result.a(tmp$ret$1);
    return result;
  }
  function substring_1(_this__u8e3s4, range) {
    return toString_3(charSequenceSubSequence(_this__u8e3s4, range.q(), range.r() + 1 | 0));
  }
  function rangesDelimitedBy(_this__u8e3s4, delimiters, startIndex, ignoreCase, limit) {
    requireNonNegativeLimit(limit);
    return new DelimitedRangesSequence(_this__u8e3s4, startIndex, limit, rangesDelimitedBy$lambda(delimiters, ignoreCase));
  }
  function rangesDelimitedBy$default(_this__u8e3s4, delimiters, startIndex, ignoreCase, limit, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = 0;
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    if (!(($mask0 & 8) === 0))
      limit = 0;
    return rangesDelimitedBy(_this__u8e3s4, delimiters, startIndex, ignoreCase, limit);
  }
  function indexOfAny(_this__u8e3s4, chars, startIndex, ignoreCase) {
    var tmp;
    if (!ignoreCase ? chars.length === 1 : false) {
      tmp = typeof _this__u8e3s4 === 'string';
    } else {
      tmp = false;
    }
    if (tmp) {
      var char = single(chars);
      var tmp$ret$2;
      // Inline function 'kotlin.text.nativeIndexOf' call
      var tmp1_nativeIndexOf = _this__u8e3s4;
      var tmp$ret$1;
      // Inline function 'kotlin.text.nativeIndexOf' call
      var tmp0_nativeIndexOf = toString_1(char);
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp1_nativeIndexOf;
      tmp$ret$1 = tmp$ret$0.indexOf(tmp0_nativeIndexOf, startIndex);
      tmp$ret$2 = tmp$ret$1;
      return tmp$ret$2;
    }
    var inductionVariable = coerceAtLeast(startIndex, 0);
    var last = get_lastIndex_2(_this__u8e3s4);
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var charAtIndex = charSequenceGet(_this__u8e3s4, index);
        var tmp$ret$4;
        $l$block: {
          // Inline function 'kotlin.collections.any' call
          var indexedObject = chars;
          var inductionVariable_0 = 0;
          var last_0 = indexedObject.length;
          while (inductionVariable_0 < last_0) {
            var element = indexedObject[inductionVariable_0];
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var tmp$ret$3;
            // Inline function 'kotlin.text.indexOfAny.<anonymous>' call
            tmp$ret$3 = equals(element, charAtIndex, ignoreCase);
            if (tmp$ret$3) {
              tmp$ret$4 = true;
              break $l$block;
            }
          }
          tmp$ret$4 = false;
        }
        if (tmp$ret$4)
          return index;
      }
       while (!(index === last));
    return -1;
  }
  function requireNonNegativeLimit(limit) {
    var tmp0_require = limit >= 0;
    // Inline function 'kotlin.contracts.contract' call
    var tmp;
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlin.text.requireNonNegativeLimit.<anonymous>' call
      tmp$ret$0 = 'Limit must be non-negative, but was ' + limit;
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    return tmp;
  }
  function indexOf_4(_this__u8e3s4, string, startIndex, ignoreCase) {
    var tmp;
    var tmp_0;
    if (ignoreCase) {
      tmp_0 = true;
    } else {
      tmp_0 = !(typeof _this__u8e3s4 === 'string');
    }
    if (tmp_0) {
      var tmp_1 = charSequenceLength(_this__u8e3s4);
      tmp = indexOf$default_1(_this__u8e3s4, string, startIndex, tmp_1, ignoreCase, false, 16, null);
    } else {
      var tmp$ret$1;
      // Inline function 'kotlin.text.nativeIndexOf' call
      var tmp0_nativeIndexOf = _this__u8e3s4;
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_nativeIndexOf;
      tmp$ret$1 = tmp$ret$0.indexOf(string, startIndex);
      tmp = tmp$ret$1;
    }
    return tmp;
  }
  function indexOf$default_0(_this__u8e3s4, string, startIndex, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = 0;
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return indexOf_4(_this__u8e3s4, string, startIndex, ignoreCase);
  }
  function calcNext($this) {
    if ($this.q6_1 < 0) {
      $this.o6_1 = 0;
      $this.r6_1 = null;
    } else {
      var tmp;
      var tmp_0;
      if ($this.t6_1.w6_1 > 0) {
        var tmp0_this = $this;
        tmp0_this.s6_1 = tmp0_this.s6_1 + 1 | 0;
        tmp_0 = tmp0_this.s6_1 >= $this.t6_1.w6_1;
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        tmp = true;
      } else {
        tmp = $this.q6_1 > charSequenceLength($this.t6_1.u6_1);
      }
      if (tmp) {
        $this.r6_1 = numberRangeToNumber($this.p6_1, get_lastIndex_2($this.t6_1.u6_1));
        $this.q6_1 = -1;
      } else {
        var match = $this.t6_1.x6_1($this.t6_1.u6_1, $this.q6_1);
        if (match == null) {
          $this.r6_1 = numberRangeToNumber($this.p6_1, get_lastIndex_2($this.t6_1.u6_1));
          $this.q6_1 = -1;
        } else {
          var tmp1_container = match;
          var index = tmp1_container.a4();
          var length = tmp1_container.b4();
          $this.r6_1 = until($this.p6_1, index);
          $this.p6_1 = index + length | 0;
          $this.q6_1 = $this.p6_1 + (length === 0 ? 1 : 0) | 0;
        }
      }
      $this.o6_1 = 1;
    }
  }
  function DelimitedRangesSequence$iterator$1(this$0) {
    this.t6_1 = this$0;
    this.o6_1 = -1;
    this.p6_1 = coerceIn(this$0.v6_1, 0, charSequenceLength(this$0.u6_1));
    this.q6_1 = this.p6_1;
    this.r6_1 = null;
    this.s6_1 = 0;
  }
  DelimitedRangesSequence$iterator$1.prototype.h = function () {
    if (this.o6_1 === -1) {
      calcNext(this);
    }
    if (this.o6_1 === 0)
      throw NoSuchElementException_init_$Create$();
    var tmp = this.r6_1;
    var result = tmp instanceof IntRange ? tmp : THROW_CCE();
    this.r6_1 = null;
    this.o6_1 = -1;
    return result;
  };
  DelimitedRangesSequence$iterator$1.prototype.g = function () {
    if (this.o6_1 === -1) {
      calcNext(this);
    }
    return this.o6_1 === 1;
  };
  DelimitedRangesSequence$iterator$1.$metadata$ = classMeta(undefined, [Iterator_1]);
  function DelimitedRangesSequence(input, startIndex, limit, getNextMatch) {
    this.u6_1 = input;
    this.v6_1 = startIndex;
    this.w6_1 = limit;
    this.x6_1 = getNextMatch;
  }
  DelimitedRangesSequence.prototype.f = function () {
    return new DelimitedRangesSequence$iterator$1(this);
  };
  DelimitedRangesSequence.$metadata$ = classMeta('DelimitedRangesSequence', [Sequence]);
  function indexOf_5(_this__u8e3s4, other, startIndex, endIndex, ignoreCase, last) {
    var indices = !last ? numberRangeToNumber(coerceAtLeast(startIndex, 0), coerceAtMost(endIndex, charSequenceLength(_this__u8e3s4))) : downTo(coerceAtMost(startIndex, get_lastIndex_2(_this__u8e3s4)), coerceAtLeast(endIndex, 0));
    var tmp;
    if (typeof _this__u8e3s4 === 'string') {
      tmp = typeof other === 'string';
    } else {
      tmp = false;
    }
    if (tmp) {
      var inductionVariable = indices.m1_1;
      var last_0 = indices.n1_1;
      var step = indices.o1_1;
      if ((step > 0 ? inductionVariable <= last_0 : false) ? true : step < 0 ? last_0 <= inductionVariable : false)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + step | 0;
          if (regionMatches(other, 0, _this__u8e3s4, index, charSequenceLength(other), ignoreCase))
            return index;
        }
         while (!(index === last_0));
    } else {
      var inductionVariable_0 = indices.m1_1;
      var last_1 = indices.n1_1;
      var step_0 = indices.o1_1;
      if ((step_0 > 0 ? inductionVariable_0 <= last_1 : false) ? true : step_0 < 0 ? last_1 <= inductionVariable_0 : false)
        do {
          var index_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + step_0 | 0;
          if (regionMatchesImpl(other, 0, _this__u8e3s4, index_0, charSequenceLength(other), ignoreCase))
            return index_0;
        }
         while (!(index_0 === last_1));
    }
    return -1;
  }
  function indexOf$default_1(_this__u8e3s4, other, startIndex, endIndex, ignoreCase, last, $mask0, $handler) {
    if (!(($mask0 & 16) === 0))
      last = false;
    return indexOf_5(_this__u8e3s4, other, startIndex, endIndex, ignoreCase, last);
  }
  function regionMatchesImpl(_this__u8e3s4, thisOffset, other, otherOffset, length, ignoreCase) {
    if (((otherOffset < 0 ? true : thisOffset < 0) ? true : thisOffset > (charSequenceLength(_this__u8e3s4) - length | 0)) ? true : otherOffset > (charSequenceLength(other) - length | 0)) {
      return false;
    }
    var inductionVariable = 0;
    if (inductionVariable < length)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!equals(charSequenceGet(_this__u8e3s4, thisOffset + index | 0), charSequenceGet(other, otherOffset + index | 0), ignoreCase))
          return false;
      }
       while (inductionVariable < length);
    return true;
  }
  function lineSequence(_this__u8e3s4) {
    return splitToSequence$default(_this__u8e3s4, ['\r\n', '\n', '\r'], false, 0, 6, null);
  }
  function lines(_this__u8e3s4) {
    return toList_3(lineSequence(_this__u8e3s4));
  }
  function splitToSequence(_this__u8e3s4, delimiters, ignoreCase, limit) {
    var tmp = rangesDelimitedBy$default_0(_this__u8e3s4, delimiters, 0, ignoreCase, limit, 2, null);
    return map_2(tmp, splitToSequence$lambda(_this__u8e3s4));
  }
  function splitToSequence$default(_this__u8e3s4, delimiters, ignoreCase, limit, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignoreCase = false;
    if (!(($mask0 & 4) === 0))
      limit = 0;
    return splitToSequence(_this__u8e3s4, delimiters, ignoreCase, limit);
  }
  function rangesDelimitedBy_0(_this__u8e3s4, delimiters, startIndex, ignoreCase, limit) {
    requireNonNegativeLimit(limit);
    var delimitersList = asList(delimiters);
    return new DelimitedRangesSequence(_this__u8e3s4, startIndex, limit, rangesDelimitedBy$lambda_0(delimitersList, ignoreCase));
  }
  function rangesDelimitedBy$default_0(_this__u8e3s4, delimiters, startIndex, ignoreCase, limit, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = 0;
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    if (!(($mask0 & 8) === 0))
      limit = 0;
    return rangesDelimitedBy_0(_this__u8e3s4, delimiters, startIndex, ignoreCase, limit);
  }
  function findAnyOf(_this__u8e3s4, strings, startIndex, ignoreCase, last) {
    if (!ignoreCase ? strings.i() === 1 : false) {
      var string = single_0(strings);
      var tmp;
      if (!last) {
        tmp = indexOf$default_0(_this__u8e3s4, string, startIndex, false, 4, null);
      } else {
        tmp = lastIndexOf$default(_this__u8e3s4, string, startIndex, false, 4, null);
      }
      var index = tmp;
      return index < 0 ? null : to(index, string);
    }
    var indices = !last ? numberRangeToNumber(coerceAtLeast(startIndex, 0), charSequenceLength(_this__u8e3s4)) : downTo(coerceAtMost(startIndex, get_lastIndex_2(_this__u8e3s4)), 0);
    if (typeof _this__u8e3s4 === 'string') {
      var inductionVariable = indices.m1_1;
      var last_0 = indices.n1_1;
      var step = indices.o1_1;
      if ((step > 0 ? inductionVariable <= last_0 : false) ? true : step < 0 ? last_0 <= inductionVariable : false)
        do {
          var index_0 = inductionVariable;
          inductionVariable = inductionVariable + step | 0;
          var tmp$ret$1;
          $l$block: {
            // Inline function 'kotlin.collections.firstOrNull' call
            var tmp0_iterator = strings.f();
            while (tmp0_iterator.g()) {
              var element = tmp0_iterator.h();
              var tmp$ret$0;
              // Inline function 'kotlin.text.findAnyOf.<anonymous>' call
              tmp$ret$0 = regionMatches(element, 0, _this__u8e3s4, index_0, element.length, ignoreCase);
              if (tmp$ret$0) {
                tmp$ret$1 = element;
                break $l$block;
              }
            }
            tmp$ret$1 = null;
          }
          var matchingString = tmp$ret$1;
          if (!(matchingString == null))
            return to(index_0, matchingString);
        }
         while (!(index_0 === last_0));
    } else {
      var inductionVariable_0 = indices.m1_1;
      var last_1 = indices.n1_1;
      var step_0 = indices.o1_1;
      if ((step_0 > 0 ? inductionVariable_0 <= last_1 : false) ? true : step_0 < 0 ? last_1 <= inductionVariable_0 : false)
        do {
          var index_1 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + step_0 | 0;
          var tmp$ret$3;
          $l$block_0: {
            // Inline function 'kotlin.collections.firstOrNull' call
            var tmp0_iterator_0 = strings.f();
            while (tmp0_iterator_0.g()) {
              var element_0 = tmp0_iterator_0.h();
              var tmp$ret$2;
              // Inline function 'kotlin.text.findAnyOf.<anonymous>' call
              tmp$ret$2 = regionMatchesImpl(element_0, 0, _this__u8e3s4, index_1, element_0.length, ignoreCase);
              if (tmp$ret$2) {
                tmp$ret$3 = element_0;
                break $l$block_0;
              }
            }
            tmp$ret$3 = null;
          }
          var matchingString_0 = tmp$ret$3;
          if (!(matchingString_0 == null))
            return to(index_1, matchingString_0);
        }
         while (!(index_1 === last_1));
    }
    return null;
  }
  function lastIndexOf(_this__u8e3s4, string, startIndex, ignoreCase) {
    var tmp;
    var tmp_0;
    if (ignoreCase) {
      tmp_0 = true;
    } else {
      tmp_0 = !(typeof _this__u8e3s4 === 'string');
    }
    if (tmp_0) {
      tmp = indexOf_5(_this__u8e3s4, string, startIndex, 0, ignoreCase, true);
    } else {
      var tmp$ret$1;
      // Inline function 'kotlin.text.nativeLastIndexOf' call
      var tmp0_nativeLastIndexOf = _this__u8e3s4;
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_nativeLastIndexOf;
      tmp$ret$1 = tmp$ret$0.lastIndexOf(string, startIndex);
      tmp = tmp$ret$1;
    }
    return tmp;
  }
  function lastIndexOf$default(_this__u8e3s4, string, startIndex, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      startIndex = get_lastIndex_2(_this__u8e3s4);
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return lastIndexOf(_this__u8e3s4, string, startIndex, ignoreCase);
  }
  function removePrefix(_this__u8e3s4, prefix) {
    if (startsWith$default(_this__u8e3s4, prefix, false, 2, null)) {
      var tmp$ret$1;
      // Inline function 'kotlin.text.substring' call
      var tmp0_substring = charSequenceLength(prefix);
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = _this__u8e3s4;
      tmp$ret$1 = tmp$ret$0.substring(tmp0_substring);
      return tmp$ret$1;
    }
    return _this__u8e3s4;
  }
  function startsWith(_this__u8e3s4, prefix, ignoreCase) {
    var tmp;
    var tmp_0;
    if (!ignoreCase) {
      tmp_0 = typeof _this__u8e3s4 === 'string';
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = typeof prefix === 'string';
    } else {
      tmp = false;
    }
    if (tmp) {
      return startsWith$default_1(_this__u8e3s4, prefix, false, 2, null);
    } else {
      return regionMatchesImpl(_this__u8e3s4, 0, prefix, 0, charSequenceLength(prefix), ignoreCase);
    }
  }
  function startsWith$default(_this__u8e3s4, prefix, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignoreCase = false;
    return startsWith(_this__u8e3s4, prefix, ignoreCase);
  }
  function startsWith_0(_this__u8e3s4, prefix, startIndex, ignoreCase) {
    var tmp;
    var tmp_0;
    if (!ignoreCase) {
      tmp_0 = typeof _this__u8e3s4 === 'string';
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = typeof prefix === 'string';
    } else {
      tmp = false;
    }
    if (tmp) {
      return startsWith$default_2(_this__u8e3s4, prefix, startIndex, false, 4, null);
    } else {
      return regionMatchesImpl(_this__u8e3s4, startIndex, prefix, 0, charSequenceLength(prefix), ignoreCase);
    }
  }
  function startsWith$default_0(_this__u8e3s4, prefix, startIndex, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return startsWith_0(_this__u8e3s4, prefix, startIndex, ignoreCase);
  }
  function rangesDelimitedBy$lambda($delimiters, $ignoreCase) {
    return function ($this$$receiver, currentIndex) {
      var tmp$ret$1;
      // Inline function 'kotlin.let' call
      var tmp0_let = indexOfAny($this$$receiver, $delimiters, currentIndex, $ignoreCase);
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'kotlin.text.rangesDelimitedBy.<anonymous>.<anonymous>' call
      tmp$ret$0 = tmp0_let < 0 ? null : to(tmp0_let, 1);
      tmp$ret$1 = tmp$ret$0;
      return tmp$ret$1;
    };
  }
  function splitToSequence$lambda($this_splitToSequence) {
    return function (it) {
      return substring_1($this_splitToSequence, it);
    };
  }
  function rangesDelimitedBy$lambda_0($delimitersList, $ignoreCase) {
    return function ($this$$receiver, currentIndex) {
      var tmp0_safe_receiver = findAnyOf($this$$receiver, $delimitersList, currentIndex, $ignoreCase, false);
      var tmp;
      if (tmp0_safe_receiver == null) {
        tmp = null;
      } else {
        var tmp$ret$1;
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        var tmp$ret$0;
        // Inline function 'kotlin.text.rangesDelimitedBy.<anonymous>.<anonymous>' call
        tmp$ret$0 = to(tmp0_safe_receiver.z4_1, tmp0_safe_receiver.a5_1.length);
        tmp$ret$1 = tmp$ret$0;
        tmp = tmp$ret$1;
      }
      return tmp;
    };
  }
  function MatchResult() {
  }
  MatchResult.$metadata$ = interfaceMeta('MatchResult');
  function MatchGroupCollection() {
  }
  MatchGroupCollection.$metadata$ = interfaceMeta('MatchGroupCollection', [Collection]);
  function MatchNamedGroupCollection() {
  }
  MatchNamedGroupCollection.$metadata$ = interfaceMeta('MatchNamedGroupCollection', [MatchGroupCollection]);
  function hashCode(_this__u8e3s4) {
    var tmp0_safe_receiver = _this__u8e3s4;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode_0(tmp0_safe_receiver);
    return tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
  }
  function getValue_0(_this__u8e3s4, thisRef, property) {
    return _this__u8e3s4.f1();
  }
  function Lazy() {
  }
  Lazy.$metadata$ = interfaceMeta('Lazy');
  function UnsafeLazyImpl(initializer) {
    this.z6_1 = initializer;
    this.a7_1 = UNINITIALIZED_VALUE_getInstance();
  }
  UnsafeLazyImpl.prototype.f1 = function () {
    if (this.a7_1 === UNINITIALIZED_VALUE_getInstance()) {
      this.a7_1 = ensureNotNull(this.z6_1)();
      this.z6_1 = null;
    }
    var tmp = this.a7_1;
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  UnsafeLazyImpl.prototype.b7 = function () {
    return !(this.a7_1 === UNINITIALIZED_VALUE_getInstance());
  };
  UnsafeLazyImpl.prototype.toString = function () {
    return this.b7() ? toString_2(this.f1()) : 'Lazy value not initialized yet.';
  };
  UnsafeLazyImpl.$metadata$ = classMeta('UnsafeLazyImpl', [Lazy, Serializable]);
  function UNINITIALIZED_VALUE() {
    UNINITIALIZED_VALUE_instance = this;
  }
  UNINITIALIZED_VALUE.$metadata$ = objectMeta('UNINITIALIZED_VALUE');
  var UNINITIALIZED_VALUE_instance;
  function UNINITIALIZED_VALUE_getInstance() {
    if (UNINITIALIZED_VALUE_instance == null)
      new UNINITIALIZED_VALUE();
    return UNINITIALIZED_VALUE_instance;
  }
  function error(message) {
    throw IllegalStateException_init_$Create$(toString_3(message));
  }
  function check(value) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!value) {
      var tmp$ret$0;
      // Inline function 'kotlin.check.<anonymous>' call
      tmp$ret$0 = 'Check failed.';
      var message = tmp$ret$0;
      throw IllegalStateException_init_$Create$(toString_3(message));
    }
  }
  function check_0(value, lazyMessage) {
    // Inline function 'kotlin.contracts.contract' call
    if (!value) {
      var message = lazyMessage();
      throw IllegalStateException_init_$Create$(toString_3(message));
    }
  }
  function require_0(value) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!value) {
      var tmp$ret$0;
      // Inline function 'kotlin.require.<anonymous>' call
      tmp$ret$0 = 'Failed requirement.';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
  }
  function require_1(value, lazyMessage) {
    // Inline function 'kotlin.contracts.contract' call
    if (!value) {
      var message = lazyMessage();
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
  }
  function checkNotNull(value) {
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.checkNotNull' call
      // Inline function 'kotlin.contracts.contract' call
      if (value == null) {
        var tmp$ret$0;
        // Inline function 'kotlin.checkNotNull.<anonymous>' call
        tmp$ret$0 = 'Required value was null.';
        var message = tmp$ret$0;
        throw IllegalStateException_init_$Create$(toString_3(message));
      } else {
        tmp$ret$1 = value;
        break $l$block;
      }
    }
    return tmp$ret$1;
  }
  function checkNotNull_0(value, lazyMessage) {
    // Inline function 'kotlin.contracts.contract' call
    if (value == null) {
      var message = lazyMessage();
      throw IllegalStateException_init_$Create$(toString_3(message));
    } else {
      return value;
    }
  }
  function requireNotNull(value, lazyMessage) {
    // Inline function 'kotlin.contracts.contract' call
    if (value == null) {
      var message = lazyMessage();
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    } else {
      return value;
    }
  }
  function run(block) {
    // Inline function 'kotlin.contracts.contract' call
    return block();
  }
  function NotImplementedError(message) {
    Error_init_$Init$(message, this);
    captureStack(this, NotImplementedError);
  }
  NotImplementedError.$metadata$ = classMeta('NotImplementedError', undefined, undefined, undefined, undefined, Error_0.prototype);
  function let_0(_this__u8e3s4, block) {
    // Inline function 'kotlin.contracts.contract' call
    return block(_this__u8e3s4);
  }
  function apply(_this__u8e3s4, block) {
    // Inline function 'kotlin.contracts.contract' call
    block(_this__u8e3s4);
    return _this__u8e3s4;
  }
  function run_0(_this__u8e3s4, block) {
    // Inline function 'kotlin.contracts.contract' call
    return block(_this__u8e3s4);
  }
  function also(_this__u8e3s4, block) {
    // Inline function 'kotlin.contracts.contract' call
    block(_this__u8e3s4);
    return _this__u8e3s4;
  }
  function takeIf(_this__u8e3s4, predicate) {
    // Inline function 'kotlin.contracts.contract' call
    return predicate(_this__u8e3s4) ? _this__u8e3s4 : null;
  }
  function takeUnless(_this__u8e3s4, predicate) {
    // Inline function 'kotlin.contracts.contract' call
    return !predicate(_this__u8e3s4) ? _this__u8e3s4 : null;
  }
  function repeat(times, action) {
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    if (inductionVariable < times)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        action(index);
      }
       while (inductionVariable < times);
  }
  function with_0(receiver, block) {
    // Inline function 'kotlin.contracts.contract' call
    return block(receiver);
  }
  function Pair(first, second) {
    this.z4_1 = first;
    this.a5_1 = second;
  }
  Pair.prototype.m5 = function () {
    return this.z4_1;
  };
  Pair.prototype.c7 = function () {
    return this.a5_1;
  };
  Pair.prototype.toString = function () {
    return '(' + this.z4_1 + ', ' + this.a5_1 + ')';
  };
  Pair.prototype.a4 = function () {
    return this.z4_1;
  };
  Pair.prototype.b4 = function () {
    return this.a5_1;
  };
  Pair.prototype.hashCode = function () {
    var result = this.z4_1 == null ? 0 : hashCode_0(this.z4_1);
    result = imul(result, 31) + (this.a5_1 == null ? 0 : hashCode_0(this.a5_1)) | 0;
    return result;
  };
  Pair.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Pair))
      return false;
    var tmp0_other_with_cast = other instanceof Pair ? other : THROW_CCE();
    if (!equals_1(this.z4_1, tmp0_other_with_cast.z4_1))
      return false;
    if (!equals_1(this.a5_1, tmp0_other_with_cast.a5_1))
      return false;
    return true;
  };
  Pair.$metadata$ = classMeta('Pair', [Serializable]);
  function Triple(first, second, third) {
    this.d7_1 = first;
    this.e7_1 = second;
    this.f7_1 = third;
  }
  Triple.prototype.toString = function () {
    return '(' + this.d7_1 + ', ' + this.e7_1 + ', ' + this.f7_1 + ')';
  };
  Triple.prototype.a4 = function () {
    return this.d7_1;
  };
  Triple.prototype.b4 = function () {
    return this.e7_1;
  };
  Triple.prototype.g7 = function () {
    return this.f7_1;
  };
  Triple.prototype.hashCode = function () {
    var result = this.d7_1 == null ? 0 : hashCode_0(this.d7_1);
    result = imul(result, 31) + (this.e7_1 == null ? 0 : hashCode_0(this.e7_1)) | 0;
    result = imul(result, 31) + (this.f7_1 == null ? 0 : hashCode_0(this.f7_1)) | 0;
    return result;
  };
  Triple.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Triple))
      return false;
    var tmp0_other_with_cast = other instanceof Triple ? other : THROW_CCE();
    if (!equals_1(this.d7_1, tmp0_other_with_cast.d7_1))
      return false;
    if (!equals_1(this.e7_1, tmp0_other_with_cast.e7_1))
      return false;
    if (!equals_1(this.f7_1, tmp0_other_with_cast.f7_1))
      return false;
    return true;
  };
  Triple.$metadata$ = classMeta('Triple', [Serializable]);
  function to(_this__u8e3s4, that) {
    return new Pair(_this__u8e3s4, that);
  }
  function _UByte___init__impl__g9hnc4(data) {
    return data;
  }
  function _UByte___get_data__impl__jof9qr($this) {
    return $this;
  }
  function Companion_5() {
    Companion_instance_5 = this;
    this.h7_1 = _UByte___init__impl__g9hnc4(0);
    this.i7_1 = _UByte___init__impl__g9hnc4(-1);
    this.j7_1 = 1;
    this.k7_1 = 8;
  }
  Companion_5.$metadata$ = objectMeta('Companion');
  var Companion_instance_5;
  function Companion_getInstance_5() {
    if (Companion_instance_5 == null)
      new Companion_5();
    return Companion_instance_5;
  }
  function UByte__compareTo_impl_5w5192($this, other) {
    var tmp$ret$0;
    // Inline function 'kotlin.UByte.toInt' call
    tmp$ret$0 = _UByte___get_data__impl__jof9qr($this) & 255;
    var tmp = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.UByte.toInt' call
    tmp$ret$1 = _UByte___get_data__impl__jof9qr(other) & 255;
    return compareTo_0(tmp, tmp$ret$1);
  }
  function UByte__compareTo_impl_5w5192_0($this, other) {
    var tmp = $this.l7_1;
    return UByte__compareTo_impl_5w5192(tmp, other instanceof UByte ? other.l7_1 : THROW_CCE());
  }
  function UByte__toByte_impl_h2o6a5($this) {
    return _UByte___get_data__impl__jof9qr($this);
  }
  function UByte__toInt_impl_5nso52($this) {
    return _UByte___get_data__impl__jof9qr($this) & 255;
  }
  function UByte__toUInt_impl_qgytr9($this) {
    return _UInt___init__impl__l7qpdl(_UByte___get_data__impl__jof9qr($this) & 255);
  }
  function UByte__toULong_impl_jl2e5o($this) {
    return _ULong___init__impl__c78o9k(toLong_1(_UByte___get_data__impl__jof9qr($this)).m7(new Long(255, 0)));
  }
  function UByte__toString_impl_v72jg($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.UByte.toInt' call
    tmp$ret$0 = _UByte___get_data__impl__jof9qr($this) & 255;
    return tmp$ret$0.toString();
  }
  function UByte__hashCode_impl_mmczcb($this) {
    return $this;
  }
  function UByte__equals_impl_nvqtsf($this, other) {
    if (!(other instanceof UByte))
      return false;
    var tmp0_other_with_cast = other instanceof UByte ? other.l7_1 : THROW_CCE();
    if (!($this === tmp0_other_with_cast))
      return false;
    return true;
  }
  function UByte(data) {
    Companion_getInstance_5();
    this.l7_1 = data;
  }
  UByte.prototype.n7 = function (other) {
    return UByte__compareTo_impl_5w5192(this.l7_1, other);
  };
  UByte.prototype.o7 = function (other) {
    return UByte__compareTo_impl_5w5192_0(this, other);
  };
  UByte.prototype.toString = function () {
    return UByte__toString_impl_v72jg(this.l7_1);
  };
  UByte.prototype.hashCode = function () {
    return UByte__hashCode_impl_mmczcb(this.l7_1);
  };
  UByte.prototype.equals = function (other) {
    return UByte__equals_impl_nvqtsf(this.l7_1, other);
  };
  UByte.$metadata$ = classMeta('UByte', [Comparable]);
  function toUByte(_this__u8e3s4) {
    return _UByte___init__impl__g9hnc4(toByte_0(_this__u8e3s4));
  }
  function toUByte_0(_this__u8e3s4) {
    return _UByte___init__impl__g9hnc4(_this__u8e3s4);
  }
  function _UInt___init__impl__l7qpdl(data) {
    return data;
  }
  function _UInt___get_data__impl__f0vqqw($this) {
    return $this;
  }
  function Companion_6() {
    Companion_instance_6 = this;
    this.p7_1 = _UInt___init__impl__l7qpdl(0);
    this.q7_1 = _UInt___init__impl__l7qpdl(-1);
    this.r7_1 = 4;
    this.s7_1 = 32;
  }
  Companion_6.$metadata$ = objectMeta('Companion');
  var Companion_instance_6;
  function Companion_getInstance_6() {
    if (Companion_instance_6 == null)
      new Companion_6();
    return Companion_instance_6;
  }
  function UInt__compareTo_impl_yacclj($this, other) {
    var tmp$ret$1;
    // Inline function 'kotlin.UInt.compareTo' call
    var tmp$ret$0;
    // Inline function 'kotlin.UByte.toUInt' call
    tmp$ret$0 = _UInt___init__impl__l7qpdl(_UByte___get_data__impl__jof9qr(other) & 255);
    var tmp0_compareTo = tmp$ret$0;
    tmp$ret$1 = uintCompare(_UInt___get_data__impl__f0vqqw($this), _UInt___get_data__impl__f0vqqw(tmp0_compareTo));
    return tmp$ret$1;
  }
  function UInt__compareTo_impl_yacclj_0($this, other) {
    var tmp$ret$1;
    // Inline function 'kotlin.UInt.compareTo' call
    var tmp$ret$0;
    // Inline function 'kotlin.UShort.toUInt' call
    tmp$ret$0 = _UInt___init__impl__l7qpdl(_UShort___get_data__impl__g0245(other) & 65535);
    var tmp0_compareTo = tmp$ret$0;
    tmp$ret$1 = uintCompare(_UInt___get_data__impl__f0vqqw($this), _UInt___get_data__impl__f0vqqw(tmp0_compareTo));
    return tmp$ret$1;
  }
  function UInt__compareTo_impl_yacclj_1($this, other) {
    return uintCompare(_UInt___get_data__impl__f0vqqw($this), _UInt___get_data__impl__f0vqqw(other));
  }
  function UInt__compareTo_impl_yacclj_2($this, other) {
    var tmp = $this.u1_1;
    return UInt__compareTo_impl_yacclj_1(tmp, other instanceof UInt ? other.u1_1 : THROW_CCE());
  }
  function UInt__plus_impl_gmhu6f($this, other) {
    return _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw($this) + _UInt___get_data__impl__f0vqqw(other) | 0);
  }
  function UInt__minus_impl_c4dy1j($this, other) {
    return _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw($this) - _UInt___get_data__impl__f0vqqw(other) | 0);
  }
  function UInt__minus_impl_c4dy1j_0($this, other) {
    var tmp$ret$1;
    // Inline function 'kotlin.ULong.minus' call
    var tmp$ret$0;
    // Inline function 'kotlin.UInt.toULong' call
    tmp$ret$0 = _ULong___init__impl__c78o9k(toLong_1(_UInt___get_data__impl__f0vqqw($this)).m7(new Long(-1, 0)));
    var tmp0_minus = tmp$ret$0;
    tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_minus).f6(_ULong___get_data__impl__fggpzb(other)));
    return tmp$ret$1;
  }
  function UInt__times_impl_9tvds1($this, other) {
    return _UInt___init__impl__l7qpdl(imul(_UInt___get_data__impl__f0vqqw($this), _UInt___get_data__impl__f0vqqw(other)));
  }
  function UInt__div_impl_xkbbl6($this, other) {
    return uintDivide($this, other);
  }
  function UInt__rem_impl_muzcx9($this, other) {
    return uintRemainder($this, other);
  }
  function UInt__shl_impl_o7n0a8($this, bitCount) {
    return _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw($this) << bitCount);
  }
  function UInt__shr_impl_r1wqne($this, bitCount) {
    return _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw($this) >>> bitCount | 0);
  }
  function UInt__and_impl_fv3j80($this, other) {
    return _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw($this) & _UInt___get_data__impl__f0vqqw(other));
  }
  function UInt__or_impl_nrzdg0($this, other) {
    return _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw($this) | _UInt___get_data__impl__f0vqqw(other));
  }
  function UInt__toInt_impl_93yt4d($this) {
    return _UInt___get_data__impl__f0vqqw($this);
  }
  function UInt__toLong_impl_le5rq4($this) {
    return toLong_1(_UInt___get_data__impl__f0vqqw($this)).m7(new Long(-1, 0));
  }
  function UInt__toUByte_impl_qgjpt1($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.toUByte' call
    var tmp0_toUByte = _UInt___get_data__impl__f0vqqw($this);
    tmp$ret$0 = _UByte___init__impl__g9hnc4(toByte_0(tmp0_toUByte));
    return tmp$ret$0;
  }
  function UInt__toUShort_impl_2yxcfl($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.toUShort' call
    var tmp0_toUShort = _UInt___get_data__impl__f0vqqw($this);
    tmp$ret$0 = _UShort___init__impl__jigrne(toShort_0(tmp0_toUShort));
    return tmp$ret$0;
  }
  function UInt__toULong_impl_8j37gv($this) {
    return _ULong___init__impl__c78o9k(toLong_1(_UInt___get_data__impl__f0vqqw($this)).m7(new Long(-1, 0)));
  }
  function UInt__toString_impl_dbgl21($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.UInt.toLong' call
    tmp$ret$0 = toLong_1(_UInt___get_data__impl__f0vqqw($this)).m7(new Long(-1, 0));
    return tmp$ret$0.toString();
  }
  function UInt__hashCode_impl_z2mhuw($this) {
    return $this;
  }
  function UInt__equals_impl_ffdoxg($this, other) {
    if (!(other instanceof UInt))
      return false;
    var tmp0_other_with_cast = other instanceof UInt ? other.u1_1 : THROW_CCE();
    if (!($this === tmp0_other_with_cast))
      return false;
    return true;
  }
  function UInt(data) {
    Companion_getInstance_6();
    this.u1_1 = data;
  }
  UInt.prototype.t7 = function (other) {
    return UInt__compareTo_impl_yacclj_1(this.u1_1, other);
  };
  UInt.prototype.o7 = function (other) {
    return UInt__compareTo_impl_yacclj_2(this, other);
  };
  UInt.prototype.toString = function () {
    return UInt__toString_impl_dbgl21(this.u1_1);
  };
  UInt.prototype.hashCode = function () {
    return UInt__hashCode_impl_z2mhuw(this.u1_1);
  };
  UInt.prototype.equals = function (other) {
    return UInt__equals_impl_ffdoxg(this.u1_1, other);
  };
  UInt.$metadata$ = classMeta('UInt', [Comparable]);
  function toUInt(_this__u8e3s4) {
    return _UInt___init__impl__l7qpdl(_this__u8e3s4.u7());
  }
  function toUInt_0(_this__u8e3s4) {
    return _UInt___init__impl__l7qpdl(_this__u8e3s4);
  }
  function _UIntArray___init__impl__ghjpc6(storage) {
    return storage;
  }
  function _UIntArray___get_storage__impl__92a0v0($this) {
    return $this;
  }
  function _UIntArray___init__impl__ghjpc6_0(size) {
    var tmp = _UIntArray___init__impl__ghjpc6(new Int32Array(size));
    return tmp;
  }
  function UIntArray__get_impl_gp5kza($this, index) {
    var tmp$ret$0;
    // Inline function 'kotlin.toUInt' call
    var tmp0_toUInt = _UIntArray___get_storage__impl__92a0v0($this)[index];
    tmp$ret$0 = _UInt___init__impl__l7qpdl(tmp0_toUInt);
    return tmp$ret$0;
  }
  function UIntArray__set_impl_7f2zu2($this, index, value) {
    var tmp = _UIntArray___get_storage__impl__92a0v0($this);
    var tmp$ret$0;
    // Inline function 'kotlin.UInt.toInt' call
    tmp$ret$0 = _UInt___get_data__impl__f0vqqw(value);
    tmp[index] = tmp$ret$0;
  }
  function _UIntArray___get_size__impl__r6l8ci($this) {
    return _UIntArray___get_storage__impl__92a0v0($this).length;
  }
  function UIntArray__iterator_impl_tkdv7k($this) {
    return new Iterator(_UIntArray___get_storage__impl__92a0v0($this));
  }
  function Iterator(array) {
    this.v7_1 = array;
    this.w7_1 = 0;
  }
  Iterator.prototype.g = function () {
    return this.w7_1 < this.v7_1.length;
  };
  Iterator.prototype.x7 = function () {
    var tmp;
    if (this.w7_1 < this.v7_1.length) {
      var tmp$ret$0;
      // Inline function 'kotlin.toUInt' call
      var tmp0_this = this;
      var tmp1 = tmp0_this.w7_1;
      tmp0_this.w7_1 = tmp1 + 1 | 0;
      var tmp0_toUInt = this.v7_1[tmp1];
      tmp$ret$0 = _UInt___init__impl__l7qpdl(tmp0_toUInt);
      tmp = tmp$ret$0;
    } else {
      throw NoSuchElementException_init_$Create$_0(this.w7_1.toString());
    }
    return tmp;
  };
  Iterator.prototype.h = function () {
    return new UInt(this.x7());
  };
  Iterator.$metadata$ = classMeta('Iterator', [Iterator_1]);
  function UIntArray__containsAll_impl_414g22($this, elements) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp0_all = isInterface(elements, Collection) ? elements : THROW_CCE();
      var tmp;
      if (isInterface(tmp0_all, Collection)) {
        tmp = tmp0_all.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_all.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        var tmp$ret$2;
        // Inline function 'kotlin.UIntArray.containsAll.<anonymous>' call
        var tmp_0;
        if (element instanceof UInt) {
          var tmp_1 = _UIntArray___get_storage__impl__92a0v0($this);
          var tmp$ret$1;
          // Inline function 'kotlin.UInt.toInt' call
          var tmp0_toInt = element.u1_1;
          tmp$ret$1 = _UInt___get_data__impl__f0vqqw(tmp0_toInt);
          tmp_0 = contains_0(tmp_1, tmp$ret$1);
        } else {
          tmp_0 = false;
        }
        tmp$ret$2 = tmp_0;
        if (!tmp$ret$2) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  }
  function UIntArray__containsAll_impl_414g22_0($this, elements) {
    return UIntArray__containsAll_impl_414g22($this.y7_1, elements);
  }
  function UIntArray__isEmpty_impl_vd8j4n($this) {
    return _UIntArray___get_storage__impl__92a0v0($this).length === 0;
  }
  function UIntArray__toString_impl_3zy802($this) {
    return 'UIntArray(storage=' + toString_3($this) + ')';
  }
  function UIntArray__hashCode_impl_hr7ost($this) {
    return hashCode_0($this);
  }
  function UIntArray__equals_impl_flcmof($this, other) {
    if (!(other instanceof UIntArray))
      return false;
    var tmp0_other_with_cast = other instanceof UIntArray ? other.y7_1 : THROW_CCE();
    if (!equals_1($this, tmp0_other_with_cast))
      return false;
    return true;
  }
  function UIntArray(storage) {
    this.y7_1 = storage;
  }
  UIntArray.prototype.i = function () {
    return _UIntArray___get_size__impl__r6l8ci(this.y7_1);
  };
  UIntArray.prototype.f = function () {
    return UIntArray__iterator_impl_tkdv7k(this.y7_1);
  };
  UIntArray.prototype.z7 = function (elements) {
    return UIntArray__containsAll_impl_414g22(this.y7_1, elements);
  };
  UIntArray.prototype.y1 = function (elements) {
    return UIntArray__containsAll_impl_414g22_0(this, elements);
  };
  UIntArray.prototype.p = function () {
    return UIntArray__isEmpty_impl_vd8j4n(this.y7_1);
  };
  UIntArray.prototype.toString = function () {
    return UIntArray__toString_impl_3zy802(this.y7_1);
  };
  UIntArray.prototype.hashCode = function () {
    return UIntArray__hashCode_impl_hr7ost(this.y7_1);
  };
  UIntArray.prototype.equals = function (other) {
    return UIntArray__equals_impl_flcmof(this.y7_1, other);
  };
  UIntArray.$metadata$ = classMeta('UIntArray', [Collection]);
  function UIntArray_0(size, init) {
    var tmp = 0;
    var tmp_0 = size;
    var tmp_1 = new Int32Array(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$1;
      // Inline function 'kotlin.UIntArray.<anonymous>' call
      var tmp$ret$0;
      // Inline function 'kotlin.UInt.toInt' call
      var tmp0_toInt = init(tmp_2).u1_1;
      tmp$ret$0 = _UInt___get_data__impl__f0vqqw(tmp0_toInt);
      tmp$ret$1 = tmp$ret$0;
      tmp_1[tmp_2] = tmp$ret$1;
      tmp = tmp + 1 | 0;
    }
    return _UIntArray___init__impl__ghjpc6(tmp_1);
  }
  function uintArrayOf(elements) {
    return elements;
  }
  function _ULong___init__impl__c78o9k(data) {
    return data;
  }
  function _ULong___get_data__impl__fggpzb($this) {
    return $this;
  }
  function Companion_7() {
    Companion_instance_7 = this;
    this.a8_1 = _ULong___init__impl__c78o9k(new Long(0, 0));
    this.b8_1 = _ULong___init__impl__c78o9k(new Long(-1, -1));
    this.c8_1 = 8;
    this.d8_1 = 64;
  }
  Companion_7.$metadata$ = objectMeta('Companion');
  var Companion_instance_7;
  function Companion_getInstance_7() {
    if (Companion_instance_7 == null)
      new Companion_7();
    return Companion_instance_7;
  }
  function ULong__compareTo_impl_38i7tu($this, other) {
    return ulongCompare(_ULong___get_data__impl__fggpzb($this), _ULong___get_data__impl__fggpzb(other));
  }
  function ULong__compareTo_impl_38i7tu_0($this, other) {
    var tmp = $this.t1_1;
    return ULong__compareTo_impl_38i7tu(tmp, other instanceof ULong ? other.t1_1 : THROW_CCE());
  }
  function ULong__plus_impl_plxuny($this, other) {
    var tmp$ret$1;
    // Inline function 'kotlin.ULong.plus' call
    var tmp$ret$0;
    // Inline function 'kotlin.UInt.toULong' call
    tmp$ret$0 = _ULong___init__impl__c78o9k(toLong_1(_UInt___get_data__impl__f0vqqw(other)).m7(new Long(-1, 0)));
    var tmp0_plus = tmp$ret$0;
    tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb($this).e6(_ULong___get_data__impl__fggpzb(tmp0_plus)));
    return tmp$ret$1;
  }
  function ULong__plus_impl_plxuny_0($this, other) {
    return _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb($this).e6(_ULong___get_data__impl__fggpzb(other)));
  }
  function ULong__minus_impl_hq1qum($this, other) {
    var tmp$ret$1;
    // Inline function 'kotlin.ULong.minus' call
    var tmp$ret$0;
    // Inline function 'kotlin.UInt.toULong' call
    tmp$ret$0 = _ULong___init__impl__c78o9k(toLong_1(_UInt___get_data__impl__f0vqqw(other)).m7(new Long(-1, 0)));
    var tmp0_minus = tmp$ret$0;
    tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb($this).f6(_ULong___get_data__impl__fggpzb(tmp0_minus)));
    return tmp$ret$1;
  }
  function ULong__minus_impl_hq1qum_0($this, other) {
    return _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb($this).f6(_ULong___get_data__impl__fggpzb(other)));
  }
  function ULong__times_impl_ffj6l4($this, other) {
    var tmp$ret$1;
    // Inline function 'kotlin.ULong.times' call
    var tmp$ret$0;
    // Inline function 'kotlin.UInt.toULong' call
    tmp$ret$0 = _ULong___init__impl__c78o9k(toLong_1(_UInt___get_data__impl__f0vqqw(other)).m7(new Long(-1, 0)));
    var tmp0_times = tmp$ret$0;
    tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb($this).d6(_ULong___get_data__impl__fggpzb(tmp0_times)));
    return tmp$ret$1;
  }
  function ULong__times_impl_ffj6l4_0($this, other) {
    return _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb($this).d6(_ULong___get_data__impl__fggpzb(other)));
  }
  function ULong__div_impl_iugpv1($this, other) {
    var tmp$ret$1;
    // Inline function 'kotlin.ULong.div' call
    var tmp$ret$0;
    // Inline function 'kotlin.UInt.toULong' call
    tmp$ret$0 = _ULong___init__impl__c78o9k(toLong_1(_UInt___get_data__impl__f0vqqw(other)).m7(new Long(-1, 0)));
    var tmp0_div = tmp$ret$0;
    tmp$ret$1 = ulongDivide($this, tmp0_div);
    return tmp$ret$1;
  }
  function ULong__div_impl_iugpv1_0($this, other) {
    return ulongDivide($this, other);
  }
  function ULong__rem_impl_48ncec($this, other) {
    return ulongRemainder($this, other);
  }
  function ULong__shl_impl_5lazrb($this, bitCount) {
    return _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb($this).e8(bitCount));
  }
  function ULong__shr_impl_8fkq4h($this, bitCount) {
    return _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb($this).f8(bitCount));
  }
  function ULong__and_impl_2r8hax($this, other) {
    return _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb($this).m7(_ULong___get_data__impl__fggpzb(other)));
  }
  function ULong__or_impl_mne2xz($this, other) {
    return _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb($this).g8(_ULong___get_data__impl__fggpzb(other)));
  }
  function ULong__toInt_impl_3ib0ba($this) {
    return _ULong___get_data__impl__fggpzb($this).u7();
  }
  function ULong__toLong_impl_i1ol5n($this) {
    return _ULong___get_data__impl__fggpzb($this);
  }
  function ULong__toUInt_impl_qlonx5($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.toUInt' call
    var tmp0_toUInt = _ULong___get_data__impl__fggpzb($this);
    tmp$ret$0 = _UInt___init__impl__l7qpdl(tmp0_toUInt.u7());
    return tmp$ret$0;
  }
  function ULong__toString_impl_f9au7k($this) {
    return ulongToString(_ULong___get_data__impl__fggpzb($this));
  }
  function ULong__hashCode_impl_6hv2lb($this) {
    return $this.hashCode();
  }
  function ULong__equals_impl_o0gnyb($this, other) {
    if (!(other instanceof ULong))
      return false;
    var tmp0_other_with_cast = other instanceof ULong ? other.t1_1 : THROW_CCE();
    if (!$this.equals(tmp0_other_with_cast))
      return false;
    return true;
  }
  function ULong(data) {
    Companion_getInstance_7();
    this.t1_1 = data;
  }
  ULong.prototype.h8 = function (other) {
    return ULong__compareTo_impl_38i7tu(this.t1_1, other);
  };
  ULong.prototype.o7 = function (other) {
    return ULong__compareTo_impl_38i7tu_0(this, other);
  };
  ULong.prototype.toString = function () {
    return ULong__toString_impl_f9au7k(this.t1_1);
  };
  ULong.prototype.hashCode = function () {
    return ULong__hashCode_impl_6hv2lb(this.t1_1);
  };
  ULong.prototype.equals = function (other) {
    return ULong__equals_impl_o0gnyb(this.t1_1, other);
  };
  ULong.$metadata$ = classMeta('ULong', [Comparable]);
  function toULong(_this__u8e3s4) {
    return _ULong___init__impl__c78o9k(_this__u8e3s4);
  }
  function toULong_0(_this__u8e3s4) {
    return _ULong___init__impl__c78o9k(toLong_1(_this__u8e3s4));
  }
  function _ULongArray___init__impl__twm1l3(storage) {
    return storage;
  }
  function _ULongArray___get_storage__impl__28e64j($this) {
    return $this;
  }
  function _ULongArray___init__impl__twm1l3_0(size) {
    var tmp = _ULongArray___init__impl__twm1l3(longArray(size));
    return tmp;
  }
  function ULongArray__get_impl_pr71q9($this, index) {
    var tmp$ret$0;
    // Inline function 'kotlin.toULong' call
    var tmp0_toULong = _ULongArray___get_storage__impl__28e64j($this)[index];
    tmp$ret$0 = _ULong___init__impl__c78o9k(tmp0_toULong);
    return tmp$ret$0;
  }
  function ULongArray__set_impl_z19mvh($this, index, value) {
    var tmp = _ULongArray___get_storage__impl__28e64j($this);
    var tmp$ret$0;
    // Inline function 'kotlin.ULong.toLong' call
    tmp$ret$0 = _ULong___get_data__impl__fggpzb(value);
    tmp[index] = tmp$ret$0;
  }
  function _ULongArray___get_size__impl__ju6dtr($this) {
    return _ULongArray___get_storage__impl__28e64j($this).length;
  }
  function ULongArray__iterator_impl_cq4d2h($this) {
    return new Iterator_0(_ULongArray___get_storage__impl__28e64j($this));
  }
  function Iterator_0(array) {
    this.i8_1 = array;
    this.j8_1 = 0;
  }
  Iterator_0.prototype.g = function () {
    return this.j8_1 < this.i8_1.length;
  };
  Iterator_0.prototype.k8 = function () {
    var tmp;
    if (this.j8_1 < this.i8_1.length) {
      var tmp$ret$0;
      // Inline function 'kotlin.toULong' call
      var tmp0_this = this;
      var tmp1 = tmp0_this.j8_1;
      tmp0_this.j8_1 = tmp1 + 1 | 0;
      var tmp0_toULong = this.i8_1[tmp1];
      tmp$ret$0 = _ULong___init__impl__c78o9k(tmp0_toULong);
      tmp = tmp$ret$0;
    } else {
      throw NoSuchElementException_init_$Create$_0(this.j8_1.toString());
    }
    return tmp;
  };
  Iterator_0.prototype.h = function () {
    return new ULong(this.k8());
  };
  Iterator_0.$metadata$ = classMeta('Iterator', [Iterator_1]);
  function ULongArray__contains_impl_v9bgai($this, element) {
    var tmp = isObject(new ULong(element)) ? new ULong(element) : THROW_CCE();
    if (!(tmp instanceof ULong))
      return false;
    var tmp_0 = _ULongArray___get_storage__impl__28e64j($this);
    var tmp$ret$0;
    // Inline function 'kotlin.ULong.toLong' call
    tmp$ret$0 = _ULong___get_data__impl__fggpzb(element);
    return contains(tmp_0, tmp$ret$0);
  }
  function ULongArray__containsAll_impl_xx8ztf($this, elements) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp0_all = isInterface(elements, Collection) ? elements : THROW_CCE();
      var tmp;
      if (isInterface(tmp0_all, Collection)) {
        tmp = tmp0_all.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_all.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        var tmp$ret$2;
        // Inline function 'kotlin.ULongArray.containsAll.<anonymous>' call
        var tmp_0;
        if (element instanceof ULong) {
          var tmp_1 = _ULongArray___get_storage__impl__28e64j($this);
          var tmp$ret$1;
          // Inline function 'kotlin.ULong.toLong' call
          var tmp0_toLong = element.t1_1;
          tmp$ret$1 = _ULong___get_data__impl__fggpzb(tmp0_toLong);
          tmp_0 = contains(tmp_1, tmp$ret$1);
        } else {
          tmp_0 = false;
        }
        tmp$ret$2 = tmp_0;
        if (!tmp$ret$2) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  }
  function ULongArray__containsAll_impl_xx8ztf_0($this, elements) {
    return ULongArray__containsAll_impl_xx8ztf($this.l8_1, elements);
  }
  function ULongArray__isEmpty_impl_c3yngu($this) {
    return _ULongArray___get_storage__impl__28e64j($this).length === 0;
  }
  function ULongArray__toString_impl_wqk1p5($this) {
    return 'ULongArray(storage=' + toString_3($this) + ')';
  }
  function ULongArray__hashCode_impl_aze4wa($this) {
    return hashCode_0($this);
  }
  function ULongArray__equals_impl_vwitwa($this, other) {
    if (!(other instanceof ULongArray))
      return false;
    var tmp0_other_with_cast = other instanceof ULongArray ? other.l8_1 : THROW_CCE();
    if (!equals_1($this, tmp0_other_with_cast))
      return false;
    return true;
  }
  function ULongArray(storage) {
    this.l8_1 = storage;
  }
  ULongArray.prototype.i = function () {
    return _ULongArray___get_size__impl__ju6dtr(this.l8_1);
  };
  ULongArray.prototype.f = function () {
    return ULongArray__iterator_impl_cq4d2h(this.l8_1);
  };
  ULongArray.prototype.m8 = function (elements) {
    return ULongArray__containsAll_impl_xx8ztf(this.l8_1, elements);
  };
  ULongArray.prototype.y1 = function (elements) {
    return ULongArray__containsAll_impl_xx8ztf_0(this, elements);
  };
  ULongArray.prototype.p = function () {
    return ULongArray__isEmpty_impl_c3yngu(this.l8_1);
  };
  ULongArray.prototype.toString = function () {
    return ULongArray__toString_impl_wqk1p5(this.l8_1);
  };
  ULongArray.prototype.hashCode = function () {
    return ULongArray__hashCode_impl_aze4wa(this.l8_1);
  };
  ULongArray.prototype.equals = function (other) {
    return ULongArray__equals_impl_vwitwa(this.l8_1, other);
  };
  ULongArray.$metadata$ = classMeta('ULongArray', [Collection]);
  function ulongArrayOf(elements) {
    return elements;
  }
  function ULongArray_0(size, init) {
    var tmp = 0;
    var tmp_0 = size;
    var tmp_1 = longArray(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$1;
      // Inline function 'kotlin.ULongArray.<anonymous>' call
      var tmp$ret$0;
      // Inline function 'kotlin.ULong.toLong' call
      var tmp0_toLong = init(tmp_2).t1_1;
      tmp$ret$0 = _ULong___get_data__impl__fggpzb(tmp0_toLong);
      tmp$ret$1 = tmp$ret$0;
      tmp_1[tmp_2] = tmp$ret$1;
      tmp = tmp + 1 | 0;
    }
    return _ULongArray___init__impl__twm1l3(tmp_1);
  }
  function _UShort___init__impl__jigrne(data) {
    return data;
  }
  function _UShort___get_data__impl__g0245($this) {
    return $this;
  }
  function Companion_8() {
    Companion_instance_8 = this;
    this.n8_1 = _UShort___init__impl__jigrne(0);
    this.o8_1 = _UShort___init__impl__jigrne(-1);
    this.p8_1 = 2;
    this.q8_1 = 16;
  }
  Companion_8.$metadata$ = objectMeta('Companion');
  var Companion_instance_8;
  function Companion_getInstance_8() {
    if (Companion_instance_8 == null)
      new Companion_8();
    return Companion_instance_8;
  }
  function UShort__compareTo_impl_1pfgyc($this, other) {
    var tmp$ret$0;
    // Inline function 'kotlin.UShort.toInt' call
    tmp$ret$0 = _UShort___get_data__impl__g0245($this) & 65535;
    var tmp = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.UShort.toInt' call
    tmp$ret$1 = _UShort___get_data__impl__g0245(other) & 65535;
    return compareTo_0(tmp, tmp$ret$1);
  }
  function UShort__compareTo_impl_1pfgyc_0($this, other) {
    var tmp = $this.r8_1;
    return UShort__compareTo_impl_1pfgyc(tmp, other instanceof UShort ? other.r8_1 : THROW_CCE());
  }
  function UShort__toShort_impl_fqwi31($this) {
    return _UShort___get_data__impl__g0245($this);
  }
  function UShort__toInt_impl_72bkww($this) {
    return _UShort___get_data__impl__g0245($this) & 65535;
  }
  function UShort__toUInt_impl_581pf5($this) {
    return _UInt___init__impl__l7qpdl(_UShort___get_data__impl__g0245($this) & 65535);
  }
  function UShort__toULong_impl_vh6nb6($this) {
    return _ULong___init__impl__c78o9k(toLong_1(_UShort___get_data__impl__g0245($this)).m7(new Long(65535, 0)));
  }
  function UShort__toString_impl_edaoee($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.UShort.toInt' call
    tmp$ret$0 = _UShort___get_data__impl__g0245($this) & 65535;
    return tmp$ret$0.toString();
  }
  function UShort__hashCode_impl_ywngrv($this) {
    return $this;
  }
  function UShort__equals_impl_7t9pdz($this, other) {
    if (!(other instanceof UShort))
      return false;
    var tmp0_other_with_cast = other instanceof UShort ? other.r8_1 : THROW_CCE();
    if (!($this === tmp0_other_with_cast))
      return false;
    return true;
  }
  function UShort(data) {
    Companion_getInstance_8();
    this.r8_1 = data;
  }
  UShort.prototype.s8 = function (other) {
    return UShort__compareTo_impl_1pfgyc(this.r8_1, other);
  };
  UShort.prototype.o7 = function (other) {
    return UShort__compareTo_impl_1pfgyc_0(this, other);
  };
  UShort.prototype.toString = function () {
    return UShort__toString_impl_edaoee(this.r8_1);
  };
  UShort.prototype.hashCode = function () {
    return UShort__hashCode_impl_ywngrv(this.r8_1);
  };
  UShort.prototype.equals = function (other) {
    return UShort__equals_impl_7t9pdz(this.r8_1, other);
  };
  UShort.$metadata$ = classMeta('UShort', [Comparable]);
  function toUShort(_this__u8e3s4) {
    return _UShort___init__impl__jigrne(toShort_0(_this__u8e3s4));
  }
  function toUShort_0(_this__u8e3s4) {
    return _UShort___init__impl__jigrne(_this__u8e3s4);
  }
  function toString_0(_this__u8e3s4, radix) {
    var tmp$ret$0;
    // Inline function 'kotlin.ULong.toLong' call
    tmp$ret$0 = _ULong___get_data__impl__fggpzb(_this__u8e3s4);
    return ulongToString_0(tmp$ret$0, checkRadix(radix));
  }
  function toUInt_1(_this__u8e3s4) {
    var tmp0_elvis_lhs = toUIntOrNull(_this__u8e3s4);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new UInt(tmp_0)) == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toULong_1(_this__u8e3s4) {
    var tmp0_elvis_lhs = toULongOrNull(_this__u8e3s4);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new ULong(tmp_0)) == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toUByte_1(_this__u8e3s4) {
    var tmp0_elvis_lhs = toUByteOrNull(_this__u8e3s4);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new UByte(tmp_0)) == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toUShort_1(_this__u8e3s4) {
    var tmp0_elvis_lhs = toUShortOrNull(_this__u8e3s4);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new UShort(tmp_0)) == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toULongOrNull(_this__u8e3s4) {
    return toULongOrNull_0(_this__u8e3s4, 10);
  }
  function toUIntOrNull(_this__u8e3s4) {
    return toUIntOrNull_0(_this__u8e3s4, 10);
  }
  function toUByteOrNull(_this__u8e3s4) {
    return toUByteOrNull_0(_this__u8e3s4, 10);
  }
  function toUShortOrNull(_this__u8e3s4) {
    return toUShortOrNull_0(_this__u8e3s4, 10);
  }
  function toULongOrNull_0(_this__u8e3s4, radix) {
    checkRadix(radix);
    var length = _this__u8e3s4.length;
    if (length === 0)
      return null;
    Companion_getInstance_7();
    var limit = _ULong___init__impl__c78o9k(new Long(-1, -1));
    var start;
    var firstChar = charSequenceGet(_this__u8e3s4, 0);
    if (Char__compareTo_impl_ypi4mb(firstChar, _Char___init__impl__6a9atx(48)) < 0) {
      if (length === 1 ? true : !equals_1(new Char_0(firstChar), new Char_0(_Char___init__impl__6a9atx(43))))
        return null;
      start = 1;
    } else {
      start = 0;
    }
    var limitForMaxRadix = _ULong___init__impl__c78o9k(new Long(477218588, 119304647));
    var limitBeforeMul = limitForMaxRadix;
    var tmp$ret$0;
    // Inline function 'kotlin.toULong' call
    tmp$ret$0 = _ULong___init__impl__c78o9k(toLong_1(radix));
    var uradix = tmp$ret$0;
    var result = _ULong___init__impl__c78o9k(new Long(0, 0));
    var inductionVariable = start;
    if (inductionVariable < length)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var digit = digitOf(charSequenceGet(_this__u8e3s4, i), radix);
        if (digit < 0)
          return null;
        var tmp$ret$1;
        // Inline function 'kotlin.ULong.compareTo' call
        var tmp0_compareTo = result;
        var tmp1_compareTo = limitBeforeMul;
        tmp$ret$1 = ulongCompare(_ULong___get_data__impl__fggpzb(tmp0_compareTo), _ULong___get_data__impl__fggpzb(tmp1_compareTo));
        if (tmp$ret$1 > 0) {
          if (equals_1(limitBeforeMul, limitForMaxRadix)) {
            var tmp$ret$2;
            // Inline function 'kotlin.ULong.div' call
            tmp$ret$2 = ulongDivide(limit, uradix);
            limitBeforeMul = tmp$ret$2;
            var tmp$ret$3;
            // Inline function 'kotlin.ULong.compareTo' call
            var tmp2_compareTo = result;
            var tmp3_compareTo = limitBeforeMul;
            tmp$ret$3 = ulongCompare(_ULong___get_data__impl__fggpzb(tmp2_compareTo), _ULong___get_data__impl__fggpzb(tmp3_compareTo));
            if (tmp$ret$3 > 0) {
              return null;
            }
          } else {
            return null;
          }
        }
        var tmp$ret$4;
        // Inline function 'kotlin.ULong.times' call
        var tmp4_times = result;
        tmp$ret$4 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_times).d6(_ULong___get_data__impl__fggpzb(uradix)));
        result = tmp$ret$4;
        var beforeAdding = result;
        var tmp$ret$8;
        // Inline function 'kotlin.ULong.plus' call
        var tmp5_plus = result;
        var tmp$ret$5;
        // Inline function 'kotlin.toUInt' call
        tmp$ret$5 = _UInt___init__impl__l7qpdl(digit);
        var tmp6_plus = tmp$ret$5;
        var tmp$ret$7;
        // Inline function 'kotlin.ULong.plus' call
        var tmp$ret$6;
        // Inline function 'kotlin.UInt.toULong' call
        tmp$ret$6 = _ULong___init__impl__c78o9k(toLong_1(_UInt___get_data__impl__f0vqqw(tmp6_plus)).m7(new Long(-1, 0)));
        var tmp0_plus = tmp$ret$6;
        tmp$ret$7 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp5_plus).e6(_ULong___get_data__impl__fggpzb(tmp0_plus)));
        tmp$ret$8 = tmp$ret$7;
        result = tmp$ret$8;
        var tmp$ret$9;
        // Inline function 'kotlin.ULong.compareTo' call
        var tmp7_compareTo = result;
        tmp$ret$9 = ulongCompare(_ULong___get_data__impl__fggpzb(tmp7_compareTo), _ULong___get_data__impl__fggpzb(beforeAdding));
        if (tmp$ret$9 < 0)
          return null;
      }
       while (inductionVariable < length);
    return result;
  }
  function toUIntOrNull_0(_this__u8e3s4, radix) {
    checkRadix(radix);
    var length = _this__u8e3s4.length;
    if (length === 0)
      return null;
    Companion_getInstance_6();
    var limit = _UInt___init__impl__l7qpdl(-1);
    var start;
    var firstChar = charSequenceGet(_this__u8e3s4, 0);
    if (Char__compareTo_impl_ypi4mb(firstChar, _Char___init__impl__6a9atx(48)) < 0) {
      if (length === 1 ? true : !equals_1(new Char_0(firstChar), new Char_0(_Char___init__impl__6a9atx(43))))
        return null;
      start = 1;
    } else {
      start = 0;
    }
    var limitForMaxRadix = _UInt___init__impl__l7qpdl(119304647);
    var limitBeforeMul = limitForMaxRadix;
    var tmp$ret$0;
    // Inline function 'kotlin.toUInt' call
    tmp$ret$0 = _UInt___init__impl__l7qpdl(radix);
    var uradix = tmp$ret$0;
    var result = _UInt___init__impl__l7qpdl(0);
    var inductionVariable = start;
    if (inductionVariable < length)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var digit = digitOf(charSequenceGet(_this__u8e3s4, i), radix);
        if (digit < 0)
          return null;
        var tmp$ret$1;
        // Inline function 'kotlin.UInt.compareTo' call
        var tmp0_compareTo = result;
        var tmp1_compareTo = limitBeforeMul;
        tmp$ret$1 = uintCompare(_UInt___get_data__impl__f0vqqw(tmp0_compareTo), _UInt___get_data__impl__f0vqqw(tmp1_compareTo));
        if (tmp$ret$1 > 0) {
          if (limitBeforeMul === limitForMaxRadix) {
            var tmp$ret$2;
            // Inline function 'kotlin.UInt.div' call
            tmp$ret$2 = uintDivide(limit, uradix);
            limitBeforeMul = tmp$ret$2;
            var tmp$ret$3;
            // Inline function 'kotlin.UInt.compareTo' call
            var tmp2_compareTo = result;
            var tmp3_compareTo = limitBeforeMul;
            tmp$ret$3 = uintCompare(_UInt___get_data__impl__f0vqqw(tmp2_compareTo), _UInt___get_data__impl__f0vqqw(tmp3_compareTo));
            if (tmp$ret$3 > 0) {
              return null;
            }
          } else {
            return null;
          }
        }
        var tmp$ret$4;
        // Inline function 'kotlin.UInt.times' call
        var tmp4_times = result;
        tmp$ret$4 = _UInt___init__impl__l7qpdl(imul(_UInt___get_data__impl__f0vqqw(tmp4_times), _UInt___get_data__impl__f0vqqw(uradix)));
        result = tmp$ret$4;
        var beforeAdding = result;
        var tmp$ret$6;
        // Inline function 'kotlin.UInt.plus' call
        var tmp5_plus = result;
        var tmp$ret$5;
        // Inline function 'kotlin.toUInt' call
        tmp$ret$5 = _UInt___init__impl__l7qpdl(digit);
        var tmp6_plus = tmp$ret$5;
        tmp$ret$6 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp5_plus) + _UInt___get_data__impl__f0vqqw(tmp6_plus) | 0);
        result = tmp$ret$6;
        var tmp$ret$7;
        // Inline function 'kotlin.UInt.compareTo' call
        var tmp7_compareTo = result;
        tmp$ret$7 = uintCompare(_UInt___get_data__impl__f0vqqw(tmp7_compareTo), _UInt___get_data__impl__f0vqqw(beforeAdding));
        if (tmp$ret$7 < 0)
          return null;
      }
       while (inductionVariable < length);
    return result;
  }
  function toUByteOrNull_0(_this__u8e3s4, radix) {
    var tmp0_elvis_lhs = toUIntOrNull_0(_this__u8e3s4, radix);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new UInt(tmp_0)) == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var int = tmp;
    var tmp$ret$2;
    // Inline function 'kotlin.UInt.compareTo' call
    Companion_getInstance_5();
    var tmp0_compareTo = _UByte___init__impl__g9hnc4(-1);
    var tmp$ret$1;
    // Inline function 'kotlin.UInt.compareTo' call
    var tmp$ret$0;
    // Inline function 'kotlin.UByte.toUInt' call
    tmp$ret$0 = _UInt___init__impl__l7qpdl(_UByte___get_data__impl__jof9qr(tmp0_compareTo) & 255);
    var tmp0_compareTo_0 = tmp$ret$0;
    tmp$ret$1 = uintCompare(_UInt___get_data__impl__f0vqqw(int), _UInt___get_data__impl__f0vqqw(tmp0_compareTo_0));
    tmp$ret$2 = tmp$ret$1;
    if (tmp$ret$2 > 0)
      return null;
    var tmp$ret$4;
    // Inline function 'kotlin.UInt.toUByte' call
    var tmp$ret$3;
    // Inline function 'kotlin.toUByte' call
    var tmp0_toUByte = _UInt___get_data__impl__f0vqqw(int);
    tmp$ret$3 = _UByte___init__impl__g9hnc4(toByte_0(tmp0_toUByte));
    tmp$ret$4 = tmp$ret$3;
    return tmp$ret$4;
  }
  function toUShortOrNull_0(_this__u8e3s4, radix) {
    var tmp0_elvis_lhs = toUIntOrNull_0(_this__u8e3s4, radix);
    var tmp;
    var tmp_0 = tmp0_elvis_lhs;
    if ((tmp_0 == null ? null : new UInt(tmp_0)) == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var int = tmp;
    var tmp$ret$2;
    // Inline function 'kotlin.UInt.compareTo' call
    Companion_getInstance_8();
    var tmp0_compareTo = _UShort___init__impl__jigrne(-1);
    var tmp$ret$1;
    // Inline function 'kotlin.UInt.compareTo' call
    var tmp$ret$0;
    // Inline function 'kotlin.UShort.toUInt' call
    tmp$ret$0 = _UInt___init__impl__l7qpdl(_UShort___get_data__impl__g0245(tmp0_compareTo) & 65535);
    var tmp0_compareTo_0 = tmp$ret$0;
    tmp$ret$1 = uintCompare(_UInt___get_data__impl__f0vqqw(int), _UInt___get_data__impl__f0vqqw(tmp0_compareTo_0));
    tmp$ret$2 = tmp$ret$1;
    if (tmp$ret$2 > 0)
      return null;
    var tmp$ret$4;
    // Inline function 'kotlin.UInt.toUShort' call
    var tmp$ret$3;
    // Inline function 'kotlin.toUShort' call
    var tmp0_toUShort = _UInt___get_data__impl__f0vqqw(int);
    tmp$ret$3 = _UShort___init__impl__jigrne(toShort_0(tmp0_toUShort));
    tmp$ret$4 = tmp$ret$3;
    return tmp$ret$4;
  }
  function uintCompare(v1, v2) {
    return compareTo_0(v1 ^ IntCompanionObject_getInstance().h1_1, v2 ^ IntCompanionObject_getInstance().h1_1);
  }
  function uintDivide(v1, v2) {
    var tmp$ret$2;
    // Inline function 'kotlin.toUInt' call
    var tmp$ret$0;
    // Inline function 'kotlin.UInt.toLong' call
    tmp$ret$0 = toLong_1(_UInt___get_data__impl__f0vqqw(v1)).m7(new Long(-1, 0));
    var tmp = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.UInt.toLong' call
    tmp$ret$1 = toLong_1(_UInt___get_data__impl__f0vqqw(v2)).m7(new Long(-1, 0));
    var tmp0_toUInt = tmp.b6(tmp$ret$1);
    tmp$ret$2 = _UInt___init__impl__l7qpdl(tmp0_toUInt.u7());
    return tmp$ret$2;
  }
  function uintRemainder(v1, v2) {
    var tmp$ret$2;
    // Inline function 'kotlin.toUInt' call
    var tmp$ret$0;
    // Inline function 'kotlin.UInt.toLong' call
    tmp$ret$0 = toLong_1(_UInt___get_data__impl__f0vqqw(v1)).m7(new Long(-1, 0));
    var tmp = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.UInt.toLong' call
    tmp$ret$1 = toLong_1(_UInt___get_data__impl__f0vqqw(v2)).m7(new Long(-1, 0));
    var tmp0_toUInt = tmp.t8(tmp$ret$1);
    tmp$ret$2 = _UInt___init__impl__l7qpdl(tmp0_toUInt.u7());
    return tmp$ret$2;
  }
  function ulongCompare(v1, v2) {
    Companion_getInstance_13();
    var tmp = v1.u8(new Long(0, -2147483648));
    Companion_getInstance_13();
    return tmp.c6(v2.u8(new Long(0, -2147483648)));
  }
  function ulongDivide(v1, v2) {
    var tmp$ret$0;
    // Inline function 'kotlin.ULong.toLong' call
    tmp$ret$0 = _ULong___get_data__impl__fggpzb(v1);
    var dividend = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.ULong.toLong' call
    tmp$ret$1 = _ULong___get_data__impl__fggpzb(v2);
    var divisor = tmp$ret$1;
    if (divisor.c6(new Long(0, 0)) < 0) {
      var tmp;
      var tmp$ret$2;
      // Inline function 'kotlin.ULong.compareTo' call
      tmp$ret$2 = ulongCompare(_ULong___get_data__impl__fggpzb(v1), _ULong___get_data__impl__fggpzb(v2));
      if (tmp$ret$2 < 0) {
        tmp = _ULong___init__impl__c78o9k(new Long(0, 0));
      } else {
        tmp = _ULong___init__impl__c78o9k(new Long(1, 0));
      }
      return tmp;
    }
    if (dividend.c6(new Long(0, 0)) >= 0) {
      return _ULong___init__impl__c78o9k(dividend.b6(divisor));
    }
    var quotient = dividend.f8(1).b6(divisor).e8(1);
    var rem = dividend.f6(quotient.d6(divisor));
    var tmp$ret$4;
    // Inline function 'kotlin.Long.plus' call
    var tmp_0;
    var tmp$ret$3;
    // Inline function 'kotlin.ULong.compareTo' call
    var tmp0_compareTo = _ULong___init__impl__c78o9k(rem);
    var tmp1_compareTo = _ULong___init__impl__c78o9k(divisor);
    tmp$ret$3 = ulongCompare(_ULong___get_data__impl__fggpzb(tmp0_compareTo), _ULong___get_data__impl__fggpzb(tmp1_compareTo));
    if (tmp$ret$3 >= 0) {
      tmp_0 = 1;
    } else {
      tmp_0 = 0;
    }
    var tmp2_plus = tmp_0;
    tmp$ret$4 = quotient.e6(toLong_1(tmp2_plus));
    return _ULong___init__impl__c78o9k(tmp$ret$4);
  }
  function ulongRemainder(v1, v2) {
    var tmp$ret$0;
    // Inline function 'kotlin.ULong.toLong' call
    tmp$ret$0 = _ULong___get_data__impl__fggpzb(v1);
    var dividend = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.ULong.toLong' call
    tmp$ret$1 = _ULong___get_data__impl__fggpzb(v2);
    var divisor = tmp$ret$1;
    if (divisor.c6(new Long(0, 0)) < 0) {
      var tmp;
      var tmp$ret$2;
      // Inline function 'kotlin.ULong.compareTo' call
      tmp$ret$2 = ulongCompare(_ULong___get_data__impl__fggpzb(v1), _ULong___get_data__impl__fggpzb(v2));
      if (tmp$ret$2 < 0) {
        tmp = v1;
      } else {
        var tmp$ret$3;
        // Inline function 'kotlin.ULong.minus' call
        tmp$ret$3 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(v1).f6(_ULong___get_data__impl__fggpzb(v2)));
        tmp = tmp$ret$3;
      }
      return tmp;
    }
    if (dividend.c6(new Long(0, 0)) >= 0) {
      return _ULong___init__impl__c78o9k(dividend.t8(divisor));
    }
    var quotient = dividend.f8(1).b6(divisor).e8(1);
    var rem = dividend.f6(quotient.d6(divisor));
    var tmp_0;
    var tmp$ret$4;
    // Inline function 'kotlin.ULong.compareTo' call
    var tmp0_compareTo = _ULong___init__impl__c78o9k(rem);
    var tmp1_compareTo = _ULong___init__impl__c78o9k(divisor);
    tmp$ret$4 = ulongCompare(_ULong___get_data__impl__fggpzb(tmp0_compareTo), _ULong___get_data__impl__fggpzb(tmp1_compareTo));
    if (tmp$ret$4 >= 0) {
      tmp_0 = divisor;
    } else {
      tmp_0 = new Long(0, 0);
    }
    return _ULong___init__impl__c78o9k(rem.f6(tmp_0));
  }
  function ulongToString(v) {
    return ulongToString_0(v, 10);
  }
  function ulongToString_0(v, base) {
    if (v.c6(new Long(0, 0)) >= 0)
      return toString_4(v, base);
    var tmp$ret$0;
    // Inline function 'kotlin.Long.div' call
    var tmp0_div = v.f8(1);
    tmp$ret$0 = tmp0_div.b6(toLong_1(base));
    var quotient = tmp$ret$0.e8(1);
    var tmp$ret$1;
    // Inline function 'kotlin.Long.times' call
    var tmp1_times = quotient;
    tmp$ret$1 = tmp1_times.d6(toLong_1(base));
    var rem = v.f6(tmp$ret$1);
    if (rem.c6(toLong_1(base)) >= 0) {
      var tmp$ret$2;
      // Inline function 'kotlin.Long.minus' call
      var tmp2_minus = rem;
      tmp$ret$2 = tmp2_minus.f6(toLong_1(base));
      rem = tmp$ret$2;
      var tmp$ret$3;
      // Inline function 'kotlin.Long.plus' call
      var tmp3_plus = quotient;
      tmp$ret$3 = tmp3_plus.e6(new Long(1, 0));
      quotient = tmp$ret$3;
    }
    return toString_4(quotient, base) + toString_4(rem, base);
  }
  function Annotation() {
  }
  Annotation.$metadata$ = interfaceMeta('Annotation');
  function CharSequence() {
  }
  CharSequence.$metadata$ = interfaceMeta('CharSequence');
  function Comparable() {
  }
  Comparable.$metadata$ = interfaceMeta('Comparable');
  function Iterator_1() {
  }
  Iterator_1.$metadata$ = interfaceMeta('Iterator');
  function MutableIterator() {
  }
  MutableIterator.$metadata$ = interfaceMeta('MutableIterator', [Iterator_1]);
  function ListIterator() {
  }
  ListIterator.$metadata$ = interfaceMeta('ListIterator', [Iterator_1]);
  function MutableListIterator() {
  }
  MutableListIterator.$metadata$ = interfaceMeta('MutableListIterator', [ListIterator, MutableIterator]);
  function Number_0() {
  }
  Number_0.$metadata$ = classMeta('Number');
  function Unit() {
    Unit_instance = this;
  }
  Unit.prototype.toString = function () {
    return 'kotlin.Unit';
  };
  Unit.$metadata$ = objectMeta('Unit');
  var Unit_instance;
  function Unit_getInstance() {
    if (Unit_instance == null)
      new Unit();
    return Unit_instance;
  }
  function ByteCompanionObject() {
    ByteCompanionObject_instance = this;
    this.g6_1 = -128;
    this.h6_1 = 127;
    this.i6_1 = 1;
    this.j6_1 = 8;
  }
  ByteCompanionObject.prototype.z8 = function () {
    return this.g6_1;
  };
  ByteCompanionObject.prototype.a9 = function () {
    return this.h6_1;
  };
  ByteCompanionObject.prototype.b9 = function () {
    return this.i6_1;
  };
  ByteCompanionObject.prototype.c9 = function () {
    return this.j6_1;
  };
  ByteCompanionObject.$metadata$ = objectMeta('ByteCompanionObject');
  Object.defineProperty(ByteCompanionObject.prototype, 'MIN_VALUE', {
    configurable: true,
    get: ByteCompanionObject.prototype.z8
  });
  Object.defineProperty(ByteCompanionObject.prototype, 'MAX_VALUE', {
    configurable: true,
    get: ByteCompanionObject.prototype.a9
  });
  Object.defineProperty(ByteCompanionObject.prototype, 'SIZE_BYTES', {
    configurable: true,
    get: ByteCompanionObject.prototype.b9
  });
  Object.defineProperty(ByteCompanionObject.prototype, 'SIZE_BITS', {
    configurable: true,
    get: ByteCompanionObject.prototype.c9
  });
  var ByteCompanionObject_instance;
  function ByteCompanionObject_getInstance() {
    if (ByteCompanionObject_instance == null)
      new ByteCompanionObject();
    return ByteCompanionObject_instance;
  }
  function ShortCompanionObject() {
    ShortCompanionObject_instance = this;
    this.k6_1 = -32768;
    this.l6_1 = 32767;
    this.m6_1 = 2;
    this.n6_1 = 16;
  }
  ShortCompanionObject.prototype.z8 = function () {
    return this.k6_1;
  };
  ShortCompanionObject.prototype.a9 = function () {
    return this.l6_1;
  };
  ShortCompanionObject.prototype.b9 = function () {
    return this.m6_1;
  };
  ShortCompanionObject.prototype.c9 = function () {
    return this.n6_1;
  };
  ShortCompanionObject.$metadata$ = objectMeta('ShortCompanionObject');
  Object.defineProperty(ShortCompanionObject.prototype, 'MIN_VALUE', {
    configurable: true,
    get: ShortCompanionObject.prototype.z8
  });
  Object.defineProperty(ShortCompanionObject.prototype, 'MAX_VALUE', {
    configurable: true,
    get: ShortCompanionObject.prototype.a9
  });
  Object.defineProperty(ShortCompanionObject.prototype, 'SIZE_BYTES', {
    configurable: true,
    get: ShortCompanionObject.prototype.b9
  });
  Object.defineProperty(ShortCompanionObject.prototype, 'SIZE_BITS', {
    configurable: true,
    get: ShortCompanionObject.prototype.c9
  });
  var ShortCompanionObject_instance;
  function ShortCompanionObject_getInstance() {
    if (ShortCompanionObject_instance == null)
      new ShortCompanionObject();
    return ShortCompanionObject_instance;
  }
  function IntCompanionObject() {
    IntCompanionObject_instance = this;
    this.h1_1 = -2147483648;
    this.i1_1 = 2147483647;
    this.j1_1 = 4;
    this.k1_1 = 32;
  }
  IntCompanionObject.prototype.z8 = function () {
    return this.h1_1;
  };
  IntCompanionObject.prototype.a9 = function () {
    return this.i1_1;
  };
  IntCompanionObject.prototype.b9 = function () {
    return this.j1_1;
  };
  IntCompanionObject.prototype.c9 = function () {
    return this.k1_1;
  };
  IntCompanionObject.$metadata$ = objectMeta('IntCompanionObject');
  Object.defineProperty(IntCompanionObject.prototype, 'MIN_VALUE', {
    configurable: true,
    get: IntCompanionObject.prototype.z8
  });
  Object.defineProperty(IntCompanionObject.prototype, 'MAX_VALUE', {
    configurable: true,
    get: IntCompanionObject.prototype.a9
  });
  Object.defineProperty(IntCompanionObject.prototype, 'SIZE_BYTES', {
    configurable: true,
    get: IntCompanionObject.prototype.b9
  });
  Object.defineProperty(IntCompanionObject.prototype, 'SIZE_BITS', {
    configurable: true,
    get: IntCompanionObject.prototype.c9
  });
  var IntCompanionObject_instance;
  function IntCompanionObject_getInstance() {
    if (IntCompanionObject_instance == null)
      new IntCompanionObject();
    return IntCompanionObject_instance;
  }
  function FloatCompanionObject() {
    FloatCompanionObject_instance = this;
    this.d9_1 = 1.4E-45;
    this.e9_1 = 3.4028235E38;
    this.f9_1 = Infinity;
    this.g9_1 = -Infinity;
    this.h9_1 = NaN;
    this.i9_1 = 4;
    this.j9_1 = 32;
  }
  FloatCompanionObject.prototype.z8 = function () {
    return this.d9_1;
  };
  FloatCompanionObject.prototype.a9 = function () {
    return this.e9_1;
  };
  FloatCompanionObject.prototype.k9 = function () {
    return this.f9_1;
  };
  FloatCompanionObject.prototype.l9 = function () {
    return this.g9_1;
  };
  FloatCompanionObject.prototype.m9 = function () {
    return this.h9_1;
  };
  FloatCompanionObject.prototype.b9 = function () {
    return this.i9_1;
  };
  FloatCompanionObject.prototype.c9 = function () {
    return this.j9_1;
  };
  FloatCompanionObject.$metadata$ = objectMeta('FloatCompanionObject');
  Object.defineProperty(FloatCompanionObject.prototype, 'MIN_VALUE', {
    configurable: true,
    get: FloatCompanionObject.prototype.z8
  });
  Object.defineProperty(FloatCompanionObject.prototype, 'MAX_VALUE', {
    configurable: true,
    get: FloatCompanionObject.prototype.a9
  });
  Object.defineProperty(FloatCompanionObject.prototype, 'POSITIVE_INFINITY', {
    configurable: true,
    get: FloatCompanionObject.prototype.k9
  });
  Object.defineProperty(FloatCompanionObject.prototype, 'NEGATIVE_INFINITY', {
    configurable: true,
    get: FloatCompanionObject.prototype.l9
  });
  Object.defineProperty(FloatCompanionObject.prototype, 'NaN', {
    configurable: true,
    get: FloatCompanionObject.prototype.m9
  });
  Object.defineProperty(FloatCompanionObject.prototype, 'SIZE_BYTES', {
    configurable: true,
    get: FloatCompanionObject.prototype.b9
  });
  Object.defineProperty(FloatCompanionObject.prototype, 'SIZE_BITS', {
    configurable: true,
    get: FloatCompanionObject.prototype.c9
  });
  var FloatCompanionObject_instance;
  function FloatCompanionObject_getInstance() {
    if (FloatCompanionObject_instance == null)
      new FloatCompanionObject();
    return FloatCompanionObject_instance;
  }
  function DoubleCompanionObject() {
    DoubleCompanionObject_instance = this;
    this.n9_1 = 4.9E-324;
    this.o9_1 = 1.7976931348623157E308;
    this.p9_1 = Infinity;
    this.q9_1 = -Infinity;
    this.r9_1 = NaN;
    this.s9_1 = 8;
    this.t9_1 = 64;
  }
  DoubleCompanionObject.prototype.z8 = function () {
    return this.n9_1;
  };
  DoubleCompanionObject.prototype.a9 = function () {
    return this.o9_1;
  };
  DoubleCompanionObject.prototype.k9 = function () {
    return this.p9_1;
  };
  DoubleCompanionObject.prototype.l9 = function () {
    return this.q9_1;
  };
  DoubleCompanionObject.prototype.m9 = function () {
    return this.r9_1;
  };
  DoubleCompanionObject.prototype.b9 = function () {
    return this.s9_1;
  };
  DoubleCompanionObject.prototype.c9 = function () {
    return this.t9_1;
  };
  DoubleCompanionObject.$metadata$ = objectMeta('DoubleCompanionObject');
  Object.defineProperty(DoubleCompanionObject.prototype, 'MIN_VALUE', {
    configurable: true,
    get: DoubleCompanionObject.prototype.z8
  });
  Object.defineProperty(DoubleCompanionObject.prototype, 'MAX_VALUE', {
    configurable: true,
    get: DoubleCompanionObject.prototype.a9
  });
  Object.defineProperty(DoubleCompanionObject.prototype, 'POSITIVE_INFINITY', {
    configurable: true,
    get: DoubleCompanionObject.prototype.k9
  });
  Object.defineProperty(DoubleCompanionObject.prototype, 'NEGATIVE_INFINITY', {
    configurable: true,
    get: DoubleCompanionObject.prototype.l9
  });
  Object.defineProperty(DoubleCompanionObject.prototype, 'NaN', {
    configurable: true,
    get: DoubleCompanionObject.prototype.m9
  });
  Object.defineProperty(DoubleCompanionObject.prototype, 'SIZE_BYTES', {
    configurable: true,
    get: DoubleCompanionObject.prototype.b9
  });
  Object.defineProperty(DoubleCompanionObject.prototype, 'SIZE_BITS', {
    configurable: true,
    get: DoubleCompanionObject.prototype.c9
  });
  var DoubleCompanionObject_instance;
  function DoubleCompanionObject_getInstance() {
    if (DoubleCompanionObject_instance == null)
      new DoubleCompanionObject();
    return DoubleCompanionObject_instance;
  }
  function StringCompanionObject() {
    StringCompanionObject_instance = this;
  }
  StringCompanionObject.$metadata$ = objectMeta('StringCompanionObject');
  var StringCompanionObject_instance;
  function StringCompanionObject_getInstance() {
    if (StringCompanionObject_instance == null)
      new StringCompanionObject();
    return StringCompanionObject_instance;
  }
  function BooleanCompanionObject() {
    BooleanCompanionObject_instance = this;
  }
  BooleanCompanionObject.$metadata$ = objectMeta('BooleanCompanionObject');
  var BooleanCompanionObject_instance;
  function BooleanCompanionObject_getInstance() {
    if (BooleanCompanionObject_instance == null)
      new BooleanCompanionObject();
    return BooleanCompanionObject_instance;
  }
  function Comparator() {
  }
  Comparator.$metadata$ = interfaceMeta('Comparator');
  function toTypedArray(_this__u8e3s4) {
    return copyToArray(_this__u8e3s4);
  }
  function listOf_1(element) {
    return arrayListOf_0([element]);
  }
  function mapOf_1(pair) {
    return hashMapOf([pair]);
  }
  function checkIndexOverflow(index) {
    if (index < 0) {
      throwIndexOverflow();
    }
    return index;
  }
  function mapCapacity(expectedSize) {
    return expectedSize;
  }
  function setOf_0(element) {
    return hashSetOf([element]);
  }
  function checkCountOverflow(count) {
    if (count < 0) {
      throwCountOverflow();
    }
    return count;
  }
  function sort(_this__u8e3s4) {
    collectionsSort(_this__u8e3s4, naturalOrder());
  }
  function sortWith(_this__u8e3s4, comparator) {
    collectionsSort(_this__u8e3s4, comparator);
  }
  function arrayCopy(source, destination, destinationOffset, startIndex, endIndex) {
    Companion_getInstance().k2(startIndex, endIndex, source.length);
    var rangeSize = endIndex - startIndex | 0;
    Companion_getInstance().k2(destinationOffset, destinationOffset + rangeSize | 0, destination.length);
    if (isView(destination) ? isView(source) : false) {
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = source;
      var subrange = tmp$ret$0.subarray(startIndex, endIndex);
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = destination;
      tmp$ret$1.set(subrange, destinationOffset);
    } else {
      if (!(source === destination) ? true : destinationOffset <= startIndex) {
        var inductionVariable = 0;
        if (inductionVariable < rangeSize)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            destination[destinationOffset + index | 0] = source[startIndex + index | 0];
          }
           while (inductionVariable < rangeSize);
      } else {
        var inductionVariable_0 = rangeSize - 1 | 0;
        if (0 <= inductionVariable_0)
          do {
            var index_0 = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + -1 | 0;
            destination[destinationOffset + index_0 | 0] = source[startIndex + index_0 | 0];
          }
           while (0 <= inductionVariable_0);
      }
    }
  }
  function copyToArray(collection) {
    var tmp;
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = collection;
    if (tmp$ret$0.toArray !== undefined) {
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = collection;
      var tmp0_unsafeCast = tmp$ret$1.toArray();
      tmp$ret$2 = tmp0_unsafeCast;
      tmp = tmp$ret$2;
    } else {
      var tmp$ret$4;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = copyToArrayImpl(collection);
      var tmp$ret$3;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$3 = tmp1_unsafeCast;
      tmp$ret$4 = tmp$ret$3;
      tmp = tmp$ret$4;
    }
    return tmp;
  }
  function collectionsSort(list, comparator) {
    if (list.i() <= 1)
      return Unit_getInstance();
    var array = copyToArray(list);
    sortArrayWith(array, comparator);
    var inductionVariable = 0;
    var last = array.length;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        list.u9(i, array[i]);
      }
       while (inductionVariable < last);
  }
  function copyToArrayImpl(collection) {
    var tmp$ret$0;
    // Inline function 'kotlin.emptyArray' call
    tmp$ret$0 = [];
    var array = tmp$ret$0;
    var iterator = collection.f();
    while (iterator.g()) {
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = array;
      tmp$ret$1.push(iterator.h());
    }
    return array;
  }
  function toSingletonMapOrSelf(_this__u8e3s4) {
    return _this__u8e3s4;
  }
  function AbstractMutableCollection() {
    AbstractCollection.call(this);
  }
  AbstractMutableCollection.prototype.j = function (elements) {
    this.v9();
    var modified = false;
    var tmp0_iterator = elements.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      if (this.a(element))
        modified = true;
    }
    return modified;
  };
  AbstractMutableCollection.prototype.w9 = function () {
    this.v9();
    var iterator = this.f();
    while (iterator.g()) {
      iterator.h();
      iterator.y8();
    }
  };
  AbstractMutableCollection.prototype.toJSON = function () {
    return this.toArray();
  };
  AbstractMutableCollection.prototype.v9 = function () {
  };
  AbstractMutableCollection.$metadata$ = classMeta('AbstractMutableCollection', [MutableCollection], undefined, undefined, undefined, AbstractCollection.prototype);
  function IteratorImpl_0($outer) {
    this.z9_1 = $outer;
    this.x9_1 = 0;
    this.y9_1 = -1;
  }
  IteratorImpl_0.prototype.g = function () {
    return this.x9_1 < this.z9_1.i();
  };
  IteratorImpl_0.prototype.h = function () {
    if (!this.g())
      throw NoSuchElementException_init_$Create$();
    var tmp = this;
    var tmp0_this = this;
    var tmp1 = tmp0_this.x9_1;
    tmp0_this.x9_1 = tmp1 + 1 | 0;
    tmp.y9_1 = tmp1;
    return this.z9_1.l(this.y9_1);
  };
  IteratorImpl_0.prototype.y8 = function () {
    // Inline function 'kotlin.check' call
    var tmp0_check = !(this.y9_1 === -1);
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_check) {
      var tmp$ret$0;
      // Inline function 'kotlin.collections.IteratorImpl.remove.<anonymous>' call
      tmp$ret$0 = 'Call next() or previous() before removing element from the iterator.';
      var message = tmp$ret$0;
      throw IllegalStateException_init_$Create$(toString_3(message));
    }
    this.z9_1.ba(this.y9_1);
    this.x9_1 = this.y9_1;
    this.y9_1 = -1;
  };
  IteratorImpl_0.$metadata$ = classMeta('IteratorImpl', [MutableIterator]);
  function ListIteratorImpl_0($outer, index) {
    this.fa_1 = $outer;
    IteratorImpl_0.call(this, $outer);
    Companion_getInstance().s2(index, this.fa_1.i());
    this.x9_1 = index;
  }
  ListIteratorImpl_0.$metadata$ = classMeta('ListIteratorImpl', [MutableListIterator], undefined, undefined, undefined, IteratorImpl_0.prototype);
  function SubList_0(list, fromIndex, toIndex) {
    AbstractMutableList.call(this);
    this.ha_1 = list;
    this.ia_1 = fromIndex;
    this.ja_1 = 0;
    Companion_getInstance().k2(this.ia_1, toIndex, this.ha_1.i());
    this.ja_1 = toIndex - this.ia_1 | 0;
  }
  SubList_0.prototype.ka = function (index, element) {
    Companion_getInstance().s2(index, this.ja_1);
    this.ha_1.ka(this.ia_1 + index | 0, element);
    var tmp0_this = this;
    var tmp1 = tmp0_this.ja_1;
    tmp0_this.ja_1 = tmp1 + 1 | 0;
  };
  SubList_0.prototype.l = function (index) {
    Companion_getInstance().l2(index, this.ja_1);
    return this.ha_1.l(this.ia_1 + index | 0);
  };
  SubList_0.prototype.ba = function (index) {
    Companion_getInstance().l2(index, this.ja_1);
    var result = this.ha_1.ba(this.ia_1 + index | 0);
    var tmp0_this = this;
    var tmp1 = tmp0_this.ja_1;
    tmp0_this.ja_1 = tmp1 - 1 | 0;
    return result;
  };
  SubList_0.prototype.u9 = function (index, element) {
    Companion_getInstance().l2(index, this.ja_1);
    return this.ha_1.u9(this.ia_1 + index | 0, element);
  };
  SubList_0.prototype.i = function () {
    return this.ja_1;
  };
  SubList_0.prototype.v9 = function () {
    return this.ha_1.v9();
  };
  SubList_0.$metadata$ = classMeta('SubList', [RandomAccess], undefined, undefined, undefined, AbstractMutableList.prototype);
  function AbstractMutableList() {
    AbstractMutableCollection.call(this);
    this.aa_1 = 0;
  }
  AbstractMutableList.prototype.a = function (element) {
    this.v9();
    this.ka(this.i(), element);
    return true;
  };
  AbstractMutableList.prototype.f = function () {
    return new IteratorImpl_0(this);
  };
  AbstractMutableList.prototype.x1 = function (element) {
    return this.m2(element) >= 0;
  };
  AbstractMutableList.prototype.m2 = function (element) {
    var inductionVariable = 0;
    var last = get_lastIndex_1(this);
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (equals_1(this.l(index), element)) {
          return index;
        }
      }
       while (!(index === last));
    return -1;
  };
  AbstractMutableList.prototype.k = function (index) {
    return new ListIteratorImpl_0(this, index);
  };
  AbstractMutableList.prototype.s = function (fromIndex, toIndex) {
    return new SubList_0(this, fromIndex, toIndex);
  };
  AbstractMutableList.prototype.equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, List_0) : false))
      return false;
    return Companion_getInstance().v2(this, other);
  };
  AbstractMutableList.prototype.hashCode = function () {
    return Companion_getInstance().u2(this);
  };
  AbstractMutableList.$metadata$ = classMeta('AbstractMutableList', [MutableList_0], undefined, undefined, undefined, AbstractMutableCollection.prototype);
  function AbstractMutableMap$keys$1$iterator$1($entryIterator) {
    this.la_1 = $entryIterator;
  }
  AbstractMutableMap$keys$1$iterator$1.prototype.g = function () {
    return this.la_1.g();
  };
  AbstractMutableMap$keys$1$iterator$1.prototype.h = function () {
    return this.la_1.h().e1();
  };
  AbstractMutableMap$keys$1$iterator$1.prototype.y8 = function () {
    return this.la_1.y8();
  };
  AbstractMutableMap$keys$1$iterator$1.$metadata$ = classMeta(undefined, [MutableIterator]);
  function AbstractMutableMap$values$1$iterator$1($entryIterator) {
    this.ma_1 = $entryIterator;
  }
  AbstractMutableMap$values$1$iterator$1.prototype.g = function () {
    return this.ma_1.g();
  };
  AbstractMutableMap$values$1$iterator$1.prototype.h = function () {
    return this.ma_1.h().f1();
  };
  AbstractMutableMap$values$1$iterator$1.prototype.y8 = function () {
    return this.ma_1.y8();
  };
  AbstractMutableMap$values$1$iterator$1.$metadata$ = classMeta(undefined, [MutableIterator]);
  function SimpleEntry(key, value) {
    this.na_1 = key;
    this.oa_1 = value;
  }
  SimpleEntry.prototype.e1 = function () {
    return this.na_1;
  };
  SimpleEntry.prototype.f1 = function () {
    return this.oa_1;
  };
  SimpleEntry.prototype.pa = function (newValue) {
    var oldValue = this.oa_1;
    this.oa_1 = newValue;
    return oldValue;
  };
  SimpleEntry.prototype.hashCode = function () {
    return Companion_getInstance_0().y2(this);
  };
  SimpleEntry.prototype.toString = function () {
    return Companion_getInstance_0().z2(this);
  };
  SimpleEntry.prototype.equals = function (other) {
    return Companion_getInstance_0().a3(this, other);
  };
  SimpleEntry.$metadata$ = classMeta('SimpleEntry', [MutableEntry]);
  function AbstractEntrySet() {
    AbstractMutableSet.call(this);
  }
  AbstractEntrySet.prototype.x1 = function (element) {
    return this.qa(element);
  };
  AbstractEntrySet.$metadata$ = classMeta('AbstractEntrySet', undefined, undefined, undefined, undefined, AbstractMutableSet.prototype);
  function AbstractMutableMap$keys$1(this$0) {
    this.ra_1 = this$0;
    AbstractMutableSet.call(this);
  }
  AbstractMutableMap$keys$1.prototype.sa = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Add is not supported on keys');
  };
  AbstractMutableMap$keys$1.prototype.a = function (element) {
    return this.sa((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  AbstractMutableMap$keys$1.prototype.w9 = function () {
    this.ra_1.w9();
  };
  AbstractMutableMap$keys$1.prototype.c3 = function (element) {
    return this.ra_1.f3(element);
  };
  AbstractMutableMap$keys$1.prototype.x1 = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    return this.c3((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  AbstractMutableMap$keys$1.prototype.f = function () {
    var entryIterator = this.ra_1.d1().f();
    return new AbstractMutableMap$keys$1$iterator$1(entryIterator);
  };
  AbstractMutableMap$keys$1.prototype.i = function () {
    return this.ra_1.i();
  };
  AbstractMutableMap$keys$1.prototype.v9 = function () {
    return this.ra_1.v9();
  };
  AbstractMutableMap$keys$1.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, AbstractMutableSet.prototype);
  function AbstractMutableMap$values$1(this$0) {
    this.ta_1 = this$0;
    AbstractMutableCollection.call(this);
  }
  AbstractMutableMap$values$1.prototype.ua = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Add is not supported on values');
  };
  AbstractMutableMap$values$1.prototype.a = function (element) {
    return this.ua((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  AbstractMutableMap$values$1.prototype.i3 = function (element) {
    return this.ta_1.j3(element);
  };
  AbstractMutableMap$values$1.prototype.x1 = function (element) {
    if (!(element == null ? true : isObject(element)))
      return false;
    return this.i3((element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  AbstractMutableMap$values$1.prototype.f = function () {
    var entryIterator = this.ta_1.d1().f();
    return new AbstractMutableMap$values$1$iterator$1(entryIterator);
  };
  AbstractMutableMap$values$1.prototype.i = function () {
    return this.ta_1.i();
  };
  AbstractMutableMap$values$1.prototype.v9 = function () {
    return this.ta_1.v9();
  };
  AbstractMutableMap$values$1.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, AbstractMutableCollection.prototype);
  function AbstractMutableMap() {
    AbstractMap.call(this);
    this.t4_1 = null;
    this.u4_1 = null;
  }
  AbstractMutableMap.prototype.w9 = function () {
    this.d1().w9();
  };
  AbstractMutableMap.prototype.l3 = function () {
    if (this.t4_1 == null) {
      var tmp = this;
      tmp.t4_1 = new AbstractMutableMap$keys$1(this);
    }
    return ensureNotNull(this.t4_1);
  };
  AbstractMutableMap.prototype.v4 = function (from) {
    this.v9();
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$0 = from.d1().f();
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.g()) {
      var tmp1_loop_parameter = tmp0_iterator.h();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.component1' call
      tmp$ret$1 = tmp1_loop_parameter.e1();
      var key = tmp$ret$1;
      var tmp$ret$2;
      // Inline function 'kotlin.collections.component2' call
      tmp$ret$2 = tmp1_loop_parameter.f1();
      var value = tmp$ret$2;
      this.u(key, value);
    }
  };
  AbstractMutableMap.prototype.m3 = function () {
    if (this.u4_1 == null) {
      var tmp = this;
      tmp.u4_1 = new AbstractMutableMap$values$1(this);
    }
    return ensureNotNull(this.u4_1);
  };
  AbstractMutableMap.prototype.va = function (key) {
    this.v9();
    var iter = this.d1().f();
    while (iter.g()) {
      var entry = iter.h();
      var k = entry.e1();
      if (equals_1(key, k)) {
        var value = entry.f1();
        iter.y8();
        return value;
      }
    }
    return null;
  };
  AbstractMutableMap.prototype.v9 = function () {
  };
  AbstractMutableMap.$metadata$ = classMeta('AbstractMutableMap', [MutableMap], undefined, undefined, undefined, AbstractMap.prototype);
  function AbstractMutableSet() {
    AbstractMutableCollection.call(this);
  }
  AbstractMutableSet.prototype.equals = function (other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, Set) : false))
      return false;
    return Companion_getInstance_1().o3(this, other);
  };
  AbstractMutableSet.prototype.hashCode = function () {
    return Companion_getInstance_1().n3(this);
  };
  AbstractMutableSet.$metadata$ = classMeta('AbstractMutableSet', [MutableSet], undefined, undefined, undefined, AbstractMutableCollection.prototype);
  function ArrayList_init_$Init$($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.emptyArray' call
    tmp$ret$0 = [];
    ArrayList.call($this, tmp$ret$0);
    return $this;
  }
  function ArrayList_init_$Create$() {
    return ArrayList_init_$Init$(Object.create(ArrayList.prototype));
  }
  function ArrayList_init_$Init$_0(initialCapacity, $this) {
    var tmp$ret$0;
    // Inline function 'kotlin.emptyArray' call
    tmp$ret$0 = [];
    ArrayList.call($this, tmp$ret$0);
    return $this;
  }
  function ArrayList_init_$Create$_0(initialCapacity) {
    return ArrayList_init_$Init$_0(initialCapacity, Object.create(ArrayList.prototype));
  }
  function ArrayList_init_$Init$_1(elements, $this) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.toTypedArray' call
    tmp$ret$0 = copyToArray(elements);
    ArrayList.call($this, tmp$ret$0);
    return $this;
  }
  function ArrayList_init_$Create$_1(elements) {
    return ArrayList_init_$Init$_1(elements, Object.create(ArrayList.prototype));
  }
  function rangeCheck($this, index) {
    var tmp$ret$0;
    // Inline function 'kotlin.apply' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.ArrayList.rangeCheck.<anonymous>' call
    Companion_getInstance().l2(index, $this.i());
    tmp$ret$0 = index;
    return tmp$ret$0;
  }
  function insertionRangeCheck($this, index) {
    var tmp$ret$0;
    // Inline function 'kotlin.apply' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.ArrayList.insertionRangeCheck.<anonymous>' call
    Companion_getInstance().s2(index, $this.i());
    tmp$ret$0 = index;
    return tmp$ret$0;
  }
  function ArrayList(array) {
    AbstractMutableList.call(this);
    this.d_1 = array;
    this.e_1 = false;
  }
  ArrayList.prototype.wa = function (minCapacity) {
  };
  ArrayList.prototype.i = function () {
    return this.d_1.length;
  };
  ArrayList.prototype.l = function (index) {
    var tmp = this.d_1[rangeCheck(this, index)];
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  ArrayList.prototype.u9 = function (index, element) {
    this.v9();
    rangeCheck(this, index);
    var tmp$ret$0;
    // Inline function 'kotlin.apply' call
    var tmp0_apply = this.d_1[index];
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.ArrayList.set.<anonymous>' call
    this.d_1[index] = element;
    tmp$ret$0 = tmp0_apply;
    var tmp = tmp$ret$0;
    return (tmp == null ? true : isObject(tmp)) ? tmp : THROW_CCE();
  };
  ArrayList.prototype.a = function (element) {
    this.v9();
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    var tmp0_asDynamic = this.d_1;
    tmp$ret$0 = tmp0_asDynamic;
    tmp$ret$0.push(element);
    var tmp0_this = this;
    var tmp1 = tmp0_this.aa_1;
    tmp0_this.aa_1 = tmp1 + 1 | 0;
    return true;
  };
  ArrayList.prototype.ka = function (index, element) {
    this.v9();
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    var tmp0_asDynamic = this.d_1;
    tmp$ret$0 = tmp0_asDynamic;
    tmp$ret$0.splice(insertionRangeCheck(this, index), 0, element);
    var tmp0_this = this;
    var tmp1 = tmp0_this.aa_1;
    tmp0_this.aa_1 = tmp1 + 1 | 0;
  };
  ArrayList.prototype.j = function (elements) {
    this.v9();
    if (elements.p())
      return false;
    var tmp0_this = this;
    var tmp = tmp0_this;
    var tmp$ret$2;
    // Inline function 'kotlin.collections.plus' call
    var tmp0_plus = tmp0_this.d_1;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.toTypedArray' call
    tmp$ret$0 = copyToArray(elements);
    var tmp1_plus = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$1 = tmp0_plus;
    tmp$ret$2 = tmp$ret$1.concat(tmp1_plus);
    tmp.d_1 = tmp$ret$2;
    var tmp1_this = this;
    var tmp2 = tmp1_this.aa_1;
    tmp1_this.aa_1 = tmp2 + 1 | 0;
    return true;
  };
  ArrayList.prototype.ba = function (index) {
    this.v9();
    rangeCheck(this, index);
    var tmp0_this = this;
    var tmp1 = tmp0_this.aa_1;
    tmp0_this.aa_1 = tmp1 + 1 | 0;
    var tmp;
    if (index === get_lastIndex_1(this)) {
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      var tmp0_asDynamic = this.d_1;
      tmp$ret$0 = tmp0_asDynamic;
      tmp = tmp$ret$0.pop();
    } else {
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      var tmp1_asDynamic = this.d_1;
      tmp$ret$1 = tmp1_asDynamic;
      tmp = tmp$ret$1.splice(index, 1)[0];
    }
    return tmp;
  };
  ArrayList.prototype.m2 = function (element) {
    return indexOf(this.d_1, element);
  };
  ArrayList.prototype.toString = function () {
    return arrayToString(this.d_1);
  };
  ArrayList.prototype.xa = function () {
    return [].slice.call(this.d_1);
  };
  ArrayList.prototype.toArray = function () {
    return this.xa();
  };
  ArrayList.prototype.v9 = function () {
    if (this.e_1)
      throw UnsupportedOperationException_init_$Create$();
  };
  ArrayList.$metadata$ = classMeta('ArrayList', [MutableList_0, RandomAccess], undefined, undefined, undefined, AbstractMutableList.prototype);
  var _stableSortingIsSupported;
  function sortArray(array) {
    if (getStableSortingIsSupported()) {
      var comparison = sortArray$lambda;
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = array;
      tmp$ret$0.sort(comparison);
    } else {
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = array;
      tmp$ret$2 = tmp$ret$1;
      mergeSort(tmp$ret$2, 0, get_lastIndex_0(array), naturalOrder());
    }
  }
  function sortArrayWith(array, comparator) {
    if (getStableSortingIsSupported()) {
      var comparison = sortArrayWith$lambda(comparator);
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = array;
      tmp$ret$0.sort(comparison);
    } else {
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = array;
      tmp$ret$2 = tmp$ret$1;
      mergeSort(tmp$ret$2, 0, get_lastIndex_0(array), comparator);
    }
  }
  function getStableSortingIsSupported() {
    var tmp0_safe_receiver = _stableSortingIsSupported;
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return tmp0_safe_receiver;
    }
    _stableSortingIsSupported = false;
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = [];
    tmp$ret$1 = tmp0_unsafeCast;
    var array = tmp$ret$1;
    var inductionVariable = 0;
    if (inductionVariable < 600)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$2;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$2 = array;
        tmp$ret$2.push(index);
      }
       while (inductionVariable < 600);
    var comparison = getStableSortingIsSupported$lambda;
    var tmp$ret$3;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$3 = array;
    tmp$ret$3.sort(comparison);
    var inductionVariable_0 = 1;
    var last = array.length;
    if (inductionVariable_0 < last)
      do {
        var index_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var a = array[index_0 - 1 | 0];
        var b = array[index_0];
        if ((a & 3) === (b & 3) ? a >= b : false)
          return false;
      }
       while (inductionVariable_0 < last);
    _stableSortingIsSupported = true;
    return true;
  }
  function mergeSort(array, start, endInclusive, comparator) {
    var tmp$ret$2;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp0_arrayOfNulls = array.length;
    tmp$ret$0 = fillArrayVal(Array(tmp0_arrayOfNulls), null);
    var tmp1_unsafeCast = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$1 = tmp1_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    var buffer = tmp$ret$2;
    var result = mergeSort_0(array, buffer, start, endInclusive, comparator);
    if (!(result === array)) {
      var inductionVariable = start;
      if (inductionVariable <= endInclusive)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          array[i] = result[i];
        }
         while (!(i === endInclusive));
    }
  }
  function mergeSort_0(array, buffer, start, end, comparator) {
    if (start === end) {
      return array;
    }
    var median = (start + end | 0) / 2 | 0;
    var left = mergeSort_0(array, buffer, start, median, comparator);
    var right = mergeSort_0(array, buffer, median + 1 | 0, end, comparator);
    var target = left === buffer ? array : buffer;
    var leftIndex = start;
    var rightIndex = median + 1 | 0;
    var inductionVariable = start;
    if (inductionVariable <= end)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (leftIndex <= median ? rightIndex <= end : false) {
          var leftValue = left[leftIndex];
          var rightValue = right[rightIndex];
          if (comparator.compare(leftValue, rightValue) <= 0) {
            target[i] = leftValue;
            var tmp1 = leftIndex;
            leftIndex = tmp1 + 1 | 0;
          } else {
            target[i] = rightValue;
            var tmp2 = rightIndex;
            rightIndex = tmp2 + 1 | 0;
          }
        } else if (leftIndex <= median) {
          target[i] = left[leftIndex];
          var tmp3 = leftIndex;
          leftIndex = tmp3 + 1 | 0;
        } else {
          target[i] = right[rightIndex];
          var tmp4 = rightIndex;
          rightIndex = tmp4 + 1 | 0;
        }
      }
       while (!(i === end));
    return target;
  }
  function sortArray$lambda(a, b) {
    return compareTo_0(a, b);
  }
  function sortArrayWith$lambda($comparator) {
    return function (a, b) {
      return $comparator.compare(a, b);
    };
  }
  function getStableSortingIsSupported$lambda(a, b) {
    return (a & 3) - (b & 3) | 0;
  }
  function HashCode() {
    HashCode_instance = this;
  }
  HashCode.prototype.ya = function (value1, value2) {
    return equals_1(value1, value2);
  };
  HashCode.prototype.za = function (value) {
    var tmp0_safe_receiver = value;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode_0(tmp0_safe_receiver);
    return tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
  };
  HashCode.$metadata$ = objectMeta('HashCode', [EqualityComparator]);
  var HashCode_instance;
  function HashCode_getInstance() {
    if (HashCode_instance == null)
      new HashCode();
    return HashCode_instance;
  }
  function EqualityComparator() {
  }
  EqualityComparator.$metadata$ = interfaceMeta('EqualityComparator');
  function EntrySet($outer) {
    this.ab_1 = $outer;
    AbstractEntrySet.call(this);
  }
  EntrySet.prototype.bb = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Add is not supported on entries');
  };
  EntrySet.prototype.a = function (element) {
    return this.bb((!(element == null) ? isInterface(element, MutableEntry) : false) ? element : THROW_CCE());
  };
  EntrySet.prototype.w9 = function () {
    this.ab_1.w9();
  };
  EntrySet.prototype.qa = function (element) {
    return this.ab_1.k3(element);
  };
  EntrySet.prototype.f = function () {
    return this.ab_1.gb_1.f();
  };
  EntrySet.prototype.i = function () {
    return this.ab_1.i();
  };
  EntrySet.$metadata$ = classMeta('EntrySet', undefined, undefined, undefined, undefined, AbstractEntrySet.prototype);
  function HashMap_init_$Init$(internalMap, $this) {
    AbstractMutableMap.call($this);
    HashMap.call($this);
    $this.gb_1 = internalMap;
    $this.hb_1 = internalMap.jb();
    return $this;
  }
  function HashMap_init_$Init$_0($this) {
    HashMap_init_$Init$(new InternalHashCodeMap(HashCode_getInstance()), $this);
    return $this;
  }
  function HashMap_init_$Create$() {
    return HashMap_init_$Init$_0(Object.create(HashMap.prototype));
  }
  function HashMap_init_$Init$_1(initialCapacity, loadFactor, $this) {
    HashMap_init_$Init$_0($this);
    // Inline function 'kotlin.require' call
    var tmp0_require = initialCapacity >= 0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlin.collections.HashMap.<init>.<anonymous>' call
      tmp$ret$0 = 'Negative initial capacity: ' + initialCapacity;
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    // Inline function 'kotlin.require' call
    var tmp1_require = loadFactor >= 0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp1_require) {
      var tmp$ret$1;
      // Inline function 'kotlin.collections.HashMap.<init>.<anonymous>' call
      tmp$ret$1 = 'Non-positive load factor: ' + loadFactor;
      var message_0 = tmp$ret$1;
      throw IllegalArgumentException_init_$Create$_0(toString_3(message_0));
    }
    return $this;
  }
  function HashMap_init_$Create$_0(initialCapacity, loadFactor) {
    return HashMap_init_$Init$_1(initialCapacity, loadFactor, Object.create(HashMap.prototype));
  }
  function HashMap_init_$Init$_2(initialCapacity, $this) {
    HashMap_init_$Init$_1(initialCapacity, 0.0, $this);
    return $this;
  }
  function HashMap_init_$Create$_1(initialCapacity) {
    return HashMap_init_$Init$_2(initialCapacity, Object.create(HashMap.prototype));
  }
  function HashMap_init_$Init$_3(original, $this) {
    HashMap_init_$Init$_0($this);
    $this.v4(original);
    return $this;
  }
  function HashMap_init_$Create$_2(original) {
    return HashMap_init_$Init$_3(original, Object.create(HashMap.prototype));
  }
  HashMap.prototype.w9 = function () {
    this.gb_1.w9();
  };
  HashMap.prototype.f3 = function (key) {
    return this.gb_1.c3(key);
  };
  HashMap.prototype.j3 = function (value) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.any' call
      var tmp0_any = this.gb_1;
      var tmp;
      if (isInterface(tmp0_any, Collection)) {
        tmp = tmp0_any.p();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp0_iterator = tmp0_any.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        var tmp$ret$1;
        // Inline function 'kotlin.collections.HashMap.containsValue.<anonymous>' call
        tmp$ret$1 = this.hb_1.ya(element.f1(), value);
        if (tmp$ret$1) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    return tmp$ret$0;
  };
  HashMap.prototype.d1 = function () {
    if (this.ib_1 == null) {
      this.ib_1 = this.kb();
    }
    return ensureNotNull(this.ib_1);
  };
  HashMap.prototype.kb = function () {
    return new EntrySet(this);
  };
  HashMap.prototype.t = function (key) {
    return this.gb_1.t(key);
  };
  HashMap.prototype.u = function (key, value) {
    return this.gb_1.u(key, value);
  };
  HashMap.prototype.va = function (key) {
    return this.gb_1.va(key);
  };
  HashMap.prototype.i = function () {
    return this.gb_1.i();
  };
  function HashMap() {
    this.ib_1 = null;
  }
  HashMap.$metadata$ = classMeta('HashMap', [MutableMap], undefined, undefined, undefined, AbstractMutableMap.prototype);
  function HashSet_init_$Init$($this) {
    AbstractMutableSet.call($this);
    HashSet.call($this);
    $this.v_1 = HashMap_init_$Create$();
    return $this;
  }
  function HashSet_init_$Create$() {
    return HashSet_init_$Init$(Object.create(HashSet.prototype));
  }
  function HashSet_init_$Init$_0(elements, $this) {
    AbstractMutableSet.call($this);
    HashSet.call($this);
    $this.v_1 = HashMap_init_$Create$_1(elements.i());
    $this.j(elements);
    return $this;
  }
  function HashSet_init_$Create$_0(elements) {
    return HashSet_init_$Init$_0(elements, Object.create(HashSet.prototype));
  }
  function HashSet_init_$Init$_1(initialCapacity, loadFactor, $this) {
    AbstractMutableSet.call($this);
    HashSet.call($this);
    $this.v_1 = HashMap_init_$Create$_0(initialCapacity, loadFactor);
    return $this;
  }
  function HashSet_init_$Init$_2(initialCapacity, $this) {
    HashSet_init_$Init$_1(initialCapacity, 0.0, $this);
    return $this;
  }
  function HashSet_init_$Create$_1(initialCapacity) {
    return HashSet_init_$Init$_2(initialCapacity, Object.create(HashSet.prototype));
  }
  function HashSet_init_$Init$_3(map, $this) {
    AbstractMutableSet.call($this);
    HashSet.call($this);
    $this.v_1 = map;
    return $this;
  }
  HashSet.prototype.a = function (element) {
    var old = this.v_1.u(element, this);
    return old == null;
  };
  HashSet.prototype.w9 = function () {
    this.v_1.w9();
  };
  HashSet.prototype.x1 = function (element) {
    return this.v_1.f3(element);
  };
  HashSet.prototype.p = function () {
    return this.v_1.p();
  };
  HashSet.prototype.f = function () {
    return this.v_1.l3().f();
  };
  HashSet.prototype.i = function () {
    return this.v_1.i();
  };
  function HashSet() {
  }
  HashSet.$metadata$ = classMeta('HashSet', [MutableSet], undefined, undefined, undefined, AbstractMutableSet.prototype);
  function computeNext($this) {
    if ($this.ob_1 != null ? $this.pb_1 : false) {
      var tmp$ret$0;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = $this.ob_1;
      tmp$ret$0 = tmp0_unsafeCast;
      var chainSize = tmp$ret$0.length;
      var tmp0_this = $this;
      tmp0_this.qb_1 = tmp0_this.qb_1 + 1 | 0;
      if (tmp0_this.qb_1 < chainSize)
        return 0;
    }
    var tmp1_this = $this;
    tmp1_this.nb_1 = tmp1_this.nb_1 + 1 | 0;
    if (tmp1_this.nb_1 < $this.mb_1.length) {
      $this.ob_1 = $this.sb_1.ub_1[$this.mb_1[$this.nb_1]];
      var tmp = $this;
      var tmp_0 = $this.ob_1;
      tmp.pb_1 = !(tmp_0 == null) ? isArray(tmp_0) : false;
      $this.qb_1 = 0;
      return 0;
    } else {
      $this.ob_1 = null;
      return 1;
    }
  }
  function getEntry($this, key) {
    var tmp0_elvis_lhs = getChainOrEntryOrNull($this, $this.tb_1.za(key));
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var chainOrEntry = tmp;
    if (!(!(chainOrEntry == null) ? isArray(chainOrEntry) : false)) {
      var entry = chainOrEntry;
      if ($this.tb_1.ya(entry.e1(), key)) {
        return entry;
      } else {
        return null;
      }
    } else {
      var chain = chainOrEntry;
      return findEntryInChain(chain, $this, key);
    }
  }
  function findEntryInChain(_this__u8e3s4, $this, key) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.collections.firstOrNull' call
      var indexedObject = _this__u8e3s4;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var element = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'kotlin.collections.InternalHashCodeMap.findEntryInChain.<anonymous>' call
        tmp$ret$0 = $this.tb_1.ya(element.e1(), key);
        if (tmp$ret$0) {
          tmp$ret$1 = element;
          break $l$block;
        }
      }
      tmp$ret$1 = null;
    }
    return tmp$ret$1;
  }
  function getChainOrEntryOrNull($this, hashCode) {
    var chainOrEntry = $this.ub_1[hashCode];
    return chainOrEntry === undefined ? null : chainOrEntry;
  }
  function InternalHashCodeMap$iterator$1(this$0) {
    this.sb_1 = this$0;
    this.lb_1 = -1;
    this.mb_1 = Object.keys(this$0.ub_1);
    this.nb_1 = -1;
    this.ob_1 = null;
    this.pb_1 = false;
    this.qb_1 = -1;
    this.rb_1 = null;
  }
  InternalHashCodeMap$iterator$1.prototype.g = function () {
    if (this.lb_1 === -1)
      this.lb_1 = computeNext(this);
    return this.lb_1 === 0;
  };
  InternalHashCodeMap$iterator$1.prototype.h = function () {
    if (!this.g())
      throw NoSuchElementException_init_$Create$();
    var tmp;
    if (this.pb_1) {
      var tmp$ret$0;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = this.ob_1;
      tmp$ret$0 = tmp0_unsafeCast;
      tmp = tmp$ret$0[this.qb_1];
    } else {
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = this.ob_1;
      tmp$ret$1 = tmp1_unsafeCast;
      tmp = tmp$ret$1;
    }
    var lastEntry = tmp;
    this.rb_1 = lastEntry;
    this.lb_1 = -1;
    return lastEntry;
  };
  InternalHashCodeMap$iterator$1.prototype.y8 = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.checkNotNull' call
    var tmp0_checkNotNull = this.rb_1;
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.checkNotNull' call
      // Inline function 'kotlin.contracts.contract' call
      if (tmp0_checkNotNull == null) {
        var tmp$ret$0;
        // Inline function 'kotlin.checkNotNull.<anonymous>' call
        tmp$ret$0 = 'Required value was null.';
        var message = tmp$ret$0;
        throw IllegalStateException_init_$Create$(toString_3(message));
      } else {
        tmp$ret$1 = tmp0_checkNotNull;
        break $l$block;
      }
    }
    tmp$ret$2 = tmp$ret$1;
    this.sb_1.va(ensureNotNull(this.rb_1).e1());
    this.rb_1 = null;
    var tmp0_this = this;
    var tmp1 = tmp0_this.qb_1;
    tmp0_this.qb_1 = tmp1 - 1 | 0;
  };
  InternalHashCodeMap$iterator$1.$metadata$ = classMeta(undefined, [MutableIterator]);
  function InternalHashCodeMap(equality) {
    this.tb_1 = equality;
    this.ub_1 = this.wb();
    this.vb_1 = 0;
  }
  InternalHashCodeMap.prototype.jb = function () {
    return this.tb_1;
  };
  InternalHashCodeMap.prototype.i = function () {
    return this.vb_1;
  };
  InternalHashCodeMap.prototype.u = function (key, value) {
    var hashCode = this.tb_1.za(key);
    var chainOrEntry = getChainOrEntryOrNull(this, hashCode);
    if (chainOrEntry == null) {
      this.ub_1[hashCode] = new SimpleEntry(key, value);
    } else {
      if (!(!(chainOrEntry == null) ? isArray(chainOrEntry) : false)) {
        var entry = chainOrEntry;
        if (this.tb_1.ya(entry.e1(), key)) {
          return entry.pa(value);
        } else {
          var tmp$ret$2;
          // Inline function 'kotlin.arrayOf' call
          var tmp0_arrayOf = [entry, new SimpleEntry(key, value)];
          var tmp$ret$1;
          // Inline function 'kotlin.js.unsafeCast' call
          var tmp$ret$0;
          // Inline function 'kotlin.js.asDynamic' call
          tmp$ret$0 = tmp0_arrayOf;
          tmp$ret$1 = tmp$ret$0;
          tmp$ret$2 = tmp$ret$1;
          this.ub_1[hashCode] = tmp$ret$2;
          var tmp0_this = this;
          var tmp1 = tmp0_this.vb_1;
          tmp0_this.vb_1 = tmp1 + 1 | 0;
          return null;
        }
      } else {
        var chain = chainOrEntry;
        var entry_0 = findEntryInChain(chain, this, key);
        if (!(entry_0 == null)) {
          return entry_0.pa(value);
        }
        var tmp$ret$3;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$3 = chain;
        tmp$ret$3.push(new SimpleEntry(key, value));
      }
    }
    var tmp2_this = this;
    var tmp3 = tmp2_this.vb_1;
    tmp2_this.vb_1 = tmp3 + 1 | 0;
    return null;
  };
  InternalHashCodeMap.prototype.va = function (key) {
    var hashCode = this.tb_1.za(key);
    var tmp0_elvis_lhs = getChainOrEntryOrNull(this, hashCode);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var chainOrEntry = tmp;
    if (!(!(chainOrEntry == null) ? isArray(chainOrEntry) : false)) {
      var entry = chainOrEntry;
      if (this.tb_1.ya(entry.e1(), key)) {
        jsDeleteProperty(this.ub_1, hashCode);
        var tmp1_this = this;
        var tmp2 = tmp1_this.vb_1;
        tmp1_this.vb_1 = tmp2 - 1 | 0;
        return entry.f1();
      } else {
        return null;
      }
    } else {
      var chain = chainOrEntry;
      var inductionVariable = 0;
      var last = chain.length - 1 | 0;
      if (inductionVariable <= last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var entry_0 = chain[index];
          if (this.tb_1.ya(key, entry_0.e1())) {
            if (chain.length === 1) {
              var tmp$ret$0;
              // Inline function 'kotlin.js.asDynamic' call
              tmp$ret$0 = chain;
              tmp$ret$0.length = 0;
              jsDeleteProperty(this.ub_1, hashCode);
            } else {
              var tmp$ret$1;
              // Inline function 'kotlin.js.asDynamic' call
              tmp$ret$1 = chain;
              tmp$ret$1.splice(index, 1);
            }
            var tmp4_this = this;
            var tmp5 = tmp4_this.vb_1;
            tmp4_this.vb_1 = tmp5 - 1 | 0;
            return entry_0.f1();
          }
        }
         while (inductionVariable <= last);
    }
    return null;
  };
  InternalHashCodeMap.prototype.w9 = function () {
    this.ub_1 = this.wb();
    this.vb_1 = 0;
  };
  InternalHashCodeMap.prototype.c3 = function (key) {
    return !(getEntry(this, key) == null);
  };
  InternalHashCodeMap.prototype.t = function (key) {
    var tmp0_safe_receiver = getEntry(this, key);
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.f1();
  };
  InternalHashCodeMap.prototype.f = function () {
    return new InternalHashCodeMap$iterator$1(this);
  };
  InternalHashCodeMap.$metadata$ = classMeta('InternalHashCodeMap', [InternalMap]);
  function InternalMap() {
  }
  InternalMap.$metadata$ = interfaceMeta('InternalMap', [MutableIterable]);
  function EntryIterator($outer) {
    this.zb_1 = $outer;
    this.xb_1 = null;
    this.yb_1 = null;
    this.yb_1 = this.zb_1.ac_1.o4_1;
  }
  EntryIterator.prototype.g = function () {
    return !(this.yb_1 === null);
  };
  EntryIterator.prototype.h = function () {
    if (!this.g())
      throw NoSuchElementException_init_$Create$();
    var current = ensureNotNull(this.yb_1);
    this.xb_1 = current;
    var tmp = this;
    var tmp$ret$1;
    // Inline function 'kotlin.takeIf' call
    var tmp0_takeIf = current.dc_1;
    // Inline function 'kotlin.contracts.contract' call
    var tmp_0;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.EntryIterator.next.<anonymous>' call
    tmp$ret$0 = !(tmp0_takeIf === this.zb_1.ac_1.o4_1);
    if (tmp$ret$0) {
      tmp_0 = tmp0_takeIf;
    } else {
      tmp_0 = null;
    }
    tmp$ret$1 = tmp_0;
    tmp.yb_1 = tmp$ret$1;
    return current;
  };
  EntryIterator.prototype.y8 = function () {
    // Inline function 'kotlin.check' call
    var tmp0_check = !(this.xb_1 == null);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_check) {
      var tmp$ret$0;
      // Inline function 'kotlin.check.<anonymous>' call
      tmp$ret$0 = 'Check failed.';
      var message = tmp$ret$0;
      throw IllegalStateException_init_$Create$(toString_3(message));
    }
    this.zb_1.v9();
    remove(ensureNotNull(this.xb_1), this.zb_1.ac_1);
    this.zb_1.ac_1.p4_1.va(ensureNotNull(this.xb_1).e1());
    this.xb_1 = null;
  };
  EntryIterator.$metadata$ = classMeta('EntryIterator', [MutableIterator]);
  function ChainEntry($outer, key, value) {
    this.fc_1 = $outer;
    SimpleEntry.call(this, key, value);
    this.dc_1 = null;
    this.ec_1 = null;
  }
  ChainEntry.prototype.pa = function (newValue) {
    this.fc_1.v9();
    return SimpleEntry.prototype.pa.call(this, newValue);
  };
  ChainEntry.$metadata$ = classMeta('ChainEntry', undefined, undefined, undefined, undefined, SimpleEntry.prototype);
  function EntrySet_0($outer) {
    this.ac_1 = $outer;
    AbstractEntrySet.call(this);
  }
  EntrySet_0.prototype.bb = function (element) {
    throw UnsupportedOperationException_init_$Create$_0('Add is not supported on entries');
  };
  EntrySet_0.prototype.a = function (element) {
    return this.bb((!(element == null) ? isInterface(element, MutableEntry) : false) ? element : THROW_CCE());
  };
  EntrySet_0.prototype.w9 = function () {
    this.ac_1.w9();
  };
  EntrySet_0.prototype.qa = function (element) {
    return this.ac_1.k3(element);
  };
  EntrySet_0.prototype.f = function () {
    return new EntryIterator(this);
  };
  EntrySet_0.prototype.i = function () {
    return this.ac_1.i();
  };
  EntrySet_0.prototype.v9 = function () {
    return this.ac_1.v9();
  };
  EntrySet_0.$metadata$ = classMeta('EntrySet', undefined, undefined, undefined, undefined, AbstractEntrySet.prototype);
  function addToEnd(_this__u8e3s4, $this) {
    // Inline function 'kotlin.check' call
    var tmp0_check = _this__u8e3s4.dc_1 == null ? _this__u8e3s4.ec_1 == null : false;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_check) {
      var tmp$ret$0;
      // Inline function 'kotlin.check.<anonymous>' call
      tmp$ret$0 = 'Check failed.';
      var message = tmp$ret$0;
      throw IllegalStateException_init_$Create$(toString_3(message));
    }
    var _head = $this.o4_1;
    if (_head == null) {
      $this.o4_1 = _this__u8e3s4;
      _this__u8e3s4.dc_1 = _this__u8e3s4;
      _this__u8e3s4.ec_1 = _this__u8e3s4;
    } else {
      var tmp$ret$3;
      // Inline function 'kotlin.checkNotNull' call
      var tmp1_checkNotNull = _head.ec_1;
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$2;
      $l$block: {
        // Inline function 'kotlin.checkNotNull' call
        // Inline function 'kotlin.contracts.contract' call
        if (tmp1_checkNotNull == null) {
          var tmp$ret$1;
          // Inline function 'kotlin.checkNotNull.<anonymous>' call
          tmp$ret$1 = 'Required value was null.';
          var message_0 = tmp$ret$1;
          throw IllegalStateException_init_$Create$(toString_3(message_0));
        } else {
          tmp$ret$2 = tmp1_checkNotNull;
          break $l$block;
        }
      }
      tmp$ret$3 = tmp$ret$2;
      var _tail = tmp$ret$3;
      _this__u8e3s4.ec_1 = _tail;
      _this__u8e3s4.dc_1 = _head;
      _head.ec_1 = _this__u8e3s4;
      _tail.dc_1 = _this__u8e3s4;
    }
  }
  function remove(_this__u8e3s4, $this) {
    if (_this__u8e3s4.dc_1 === _this__u8e3s4) {
      $this.o4_1 = null;
    } else {
      if ($this.o4_1 === _this__u8e3s4) {
        $this.o4_1 = _this__u8e3s4.dc_1;
      }
      ensureNotNull(_this__u8e3s4.dc_1).ec_1 = _this__u8e3s4.ec_1;
      ensureNotNull(_this__u8e3s4.ec_1).dc_1 = _this__u8e3s4.dc_1;
    }
    _this__u8e3s4.dc_1 = null;
    _this__u8e3s4.ec_1 = null;
  }
  function LinkedHashMap_init_$Init$($this) {
    HashMap_init_$Init$_0($this);
    LinkedHashMap.call($this);
    $this.p4_1 = HashMap_init_$Create$();
    return $this;
  }
  function LinkedHashMap_init_$Create$() {
    return LinkedHashMap_init_$Init$(Object.create(LinkedHashMap.prototype));
  }
  function LinkedHashMap_init_$Init$_0(initialCapacity, loadFactor, $this) {
    HashMap_init_$Init$_1(initialCapacity, loadFactor, $this);
    LinkedHashMap.call($this);
    $this.p4_1 = HashMap_init_$Create$();
    return $this;
  }
  function LinkedHashMap_init_$Create$_0(initialCapacity, loadFactor) {
    return LinkedHashMap_init_$Init$_0(initialCapacity, loadFactor, Object.create(LinkedHashMap.prototype));
  }
  function LinkedHashMap_init_$Init$_1(initialCapacity, $this) {
    LinkedHashMap_init_$Init$_0(initialCapacity, 0.0, $this);
    return $this;
  }
  function LinkedHashMap_init_$Create$_1(initialCapacity) {
    return LinkedHashMap_init_$Init$_1(initialCapacity, Object.create(LinkedHashMap.prototype));
  }
  function LinkedHashMap_init_$Init$_2(original, $this) {
    HashMap_init_$Init$_0($this);
    LinkedHashMap.call($this);
    $this.p4_1 = HashMap_init_$Create$();
    $this.v4(original);
    return $this;
  }
  function LinkedHashMap_init_$Create$_2(original) {
    return LinkedHashMap_init_$Init$_2(original, Object.create(LinkedHashMap.prototype));
  }
  LinkedHashMap.prototype.w9 = function () {
    this.v9();
    this.p4_1.w9();
    this.o4_1 = null;
  };
  LinkedHashMap.prototype.f3 = function (key) {
    return this.p4_1.f3(key);
  };
  LinkedHashMap.prototype.j3 = function (value) {
    var tmp0_elvis_lhs = this.o4_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var node = tmp;
    do {
      if (equals_1(node.f1(), value)) {
        return true;
      }
      node = ensureNotNull(node.dc_1);
    }
     while (!(node === this.o4_1));
    return false;
  };
  LinkedHashMap.prototype.kb = function () {
    return new EntrySet_0(this);
  };
  LinkedHashMap.prototype.t = function (key) {
    var tmp0_safe_receiver = this.p4_1.t(key);
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.f1();
  };
  LinkedHashMap.prototype.u = function (key, value) {
    this.v9();
    var old = this.p4_1.t(key);
    if (old == null) {
      var newEntry = new ChainEntry(this, key, value);
      this.p4_1.u(key, newEntry);
      addToEnd(newEntry, this);
      return null;
    } else {
      return old.pa(value);
    }
  };
  LinkedHashMap.prototype.va = function (key) {
    this.v9();
    var entry = this.p4_1.va(key);
    if (!(entry == null)) {
      remove(entry, this);
      return entry.f1();
    }
    return null;
  };
  LinkedHashMap.prototype.i = function () {
    return this.p4_1.i();
  };
  LinkedHashMap.prototype.v9 = function () {
    if (this.q4_1)
      throw UnsupportedOperationException_init_$Create$();
  };
  function LinkedHashMap() {
    this.o4_1 = null;
    this.q4_1 = false;
  }
  LinkedHashMap.$metadata$ = classMeta('LinkedHashMap', [MutableMap], undefined, undefined, undefined, HashMap.prototype);
  function LinkedHashSet_init_$Init$($this) {
    HashSet_init_$Init$_3(LinkedHashMap_init_$Create$(), $this);
    LinkedHashSet.call($this);
    return $this;
  }
  function LinkedHashSet_init_$Create$() {
    return LinkedHashSet_init_$Init$(Object.create(LinkedHashSet.prototype));
  }
  function LinkedHashSet_init_$Init$_0(elements, $this) {
    HashSet_init_$Init$_3(LinkedHashMap_init_$Create$(), $this);
    LinkedHashSet.call($this);
    $this.j(elements);
    return $this;
  }
  function LinkedHashSet_init_$Create$_0(elements) {
    return LinkedHashSet_init_$Init$_0(elements, Object.create(LinkedHashSet.prototype));
  }
  function LinkedHashSet_init_$Init$_1(initialCapacity, loadFactor, $this) {
    HashSet_init_$Init$_3(LinkedHashMap_init_$Create$_0(initialCapacity, loadFactor), $this);
    LinkedHashSet.call($this);
    return $this;
  }
  function LinkedHashSet_init_$Init$_2(initialCapacity, $this) {
    LinkedHashSet_init_$Init$_1(initialCapacity, 0.0, $this);
    return $this;
  }
  function LinkedHashSet_init_$Create$_1(initialCapacity) {
    return LinkedHashSet_init_$Init$_2(initialCapacity, Object.create(LinkedHashSet.prototype));
  }
  LinkedHashSet.prototype.v9 = function () {
    return this.v_1.v9();
  };
  function LinkedHashSet() {
  }
  LinkedHashSet.$metadata$ = classMeta('LinkedHashSet', [MutableSet], undefined, undefined, undefined, HashSet.prototype);
  function RandomAccess() {
  }
  RandomAccess.$metadata$ = interfaceMeta('RandomAccess');
  function get_output() {
    init_properties_console_kt_6h8hpf();
    return output;
  }
  var output;
  function BaseOutput() {
  }
  BaseOutput.prototype.hc = function () {
    this.ic('\n');
  };
  BaseOutput.prototype.jc = function (message) {
    this.ic(message);
    this.hc();
  };
  BaseOutput.$metadata$ = classMeta('BaseOutput');
  function NodeJsOutput(outputStream) {
    BaseOutput.call(this);
    this.kc_1 = outputStream;
  }
  NodeJsOutput.prototype.ic = function (message) {
    var tmp$ret$0;
    // Inline function 'kotlin.io.String' call
    tmp$ret$0 = String(message);
    var messageString = tmp$ret$0;
    this.kc_1.write(messageString);
  };
  NodeJsOutput.$metadata$ = classMeta('NodeJsOutput', undefined, undefined, undefined, undefined, BaseOutput.prototype);
  function BufferedOutputToConsoleLog() {
    BufferedOutput.call(this);
  }
  BufferedOutputToConsoleLog.prototype.ic = function (message) {
    var tmp$ret$0;
    // Inline function 'kotlin.io.String' call
    tmp$ret$0 = String(message);
    var s = tmp$ret$0;
    var tmp$ret$2;
    // Inline function 'kotlin.text.nativeLastIndexOf' call
    var tmp0_nativeLastIndexOf = s;
    var tmp$ret$1;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$1 = tmp0_nativeLastIndexOf;
    tmp$ret$2 = tmp$ret$1.lastIndexOf('\n', 0);
    var i = tmp$ret$2;
    if (i >= 0) {
      var tmp0_this = this;
      var tmp = tmp0_this;
      var tmp_0 = tmp0_this.mc_1;
      var tmp$ret$4;
      // Inline function 'kotlin.text.substring' call
      var tmp1_substring = s;
      var tmp$ret$3;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$3 = tmp1_substring;
      tmp$ret$4 = tmp$ret$3.substring(0, i);
      tmp.mc_1 = tmp_0 + tmp$ret$4;
      this.nc();
      var tmp$ret$6;
      // Inline function 'kotlin.text.substring' call
      var tmp2_substring = s;
      var tmp3_substring = i + 1 | 0;
      var tmp$ret$5;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$5 = tmp2_substring;
      tmp$ret$6 = tmp$ret$5.substring(tmp3_substring);
      s = tmp$ret$6;
    }
    var tmp1_this = this;
    tmp1_this.mc_1 = tmp1_this.mc_1 + s;
  };
  BufferedOutputToConsoleLog.prototype.nc = function () {
    console.log(this.mc_1);
    this.mc_1 = '';
  };
  BufferedOutputToConsoleLog.$metadata$ = classMeta('BufferedOutputToConsoleLog', undefined, undefined, undefined, undefined, BufferedOutput.prototype);
  function String_0(value) {
    init_properties_console_kt_6h8hpf();
    return String(value);
  }
  function BufferedOutput() {
    BaseOutput.call(this);
    this.mc_1 = '';
  }
  BufferedOutput.prototype.ic = function (message) {
    var tmp0_this = this;
    var tmp = tmp0_this;
    var tmp_0 = tmp0_this.mc_1;
    var tmp$ret$0;
    // Inline function 'kotlin.io.String' call
    tmp$ret$0 = String(message);
    tmp.mc_1 = tmp_0 + tmp$ret$0;
  };
  BufferedOutput.$metadata$ = classMeta('BufferedOutput', undefined, undefined, undefined, undefined, BaseOutput.prototype);
  function println(message) {
    init_properties_console_kt_6h8hpf();
    get_output().jc(message);
  }
  var properties_initialized_console_kt_gll9dl;
  function init_properties_console_kt_6h8hpf() {
    if (properties_initialized_console_kt_gll9dl) {
    } else {
      properties_initialized_console_kt_gll9dl = true;
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'kotlin.io.output.<anonymous>' call
      var isNode = typeof process !== 'undefined' && process.versions && !!process.versions.node;
      tmp$ret$0 = isNode ? new NodeJsOutput(process.stdout) : new BufferedOutputToConsoleLog();
      tmp$ret$1 = tmp$ret$0;
      output = tmp$ret$1;
    }
  }
  function asDynamic(_this__u8e3s4) {
    return _this__u8e3s4;
  }
  function unsafeCastDynamic(_this__u8e3s4) {
    return _this__u8e3s4;
  }
  function unsafeCast(_this__u8e3s4) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    return tmp$ret$0;
  }
  function eachCount(_this__u8e3s4) {
    var tmp$ret$6;
    // Inline function 'kotlin.collections.fold' call
    var tmp$ret$5;
    // Inline function 'kotlin.collections.aggregate' call
    var tmp$ret$4;
    // Inline function 'kotlin.collections.aggregateTo' call
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp$ret$0 = LinkedHashMap_init_$Create$();
    var tmp2_aggregateTo = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = _this__u8e3s4.a1();
    tmp$ret$1 = tmp0_iterator;
    var tmp0_iterator_0 = tmp$ret$1;
    while (tmp0_iterator_0.g()) {
      var e = tmp0_iterator_0.h();
      var key = _this__u8e3s4.b1(e);
      var accumulator = tmp2_aggregateTo.t(key);
      // Inline function 'kotlin.collections.set' call
      var tmp$ret$3;
      // Inline function 'kotlin.collections.fold.<anonymous>' call
      var tmp3__anonymous__ufb84q = accumulator == null ? !tmp2_aggregateTo.f3(key) : false;
      var tmp$ret$2;
      // Inline function 'kotlin.collections.eachCount.<anonymous>' call
      var tmp;
      if (tmp3__anonymous__ufb84q) {
        tmp = 0;
      } else {
        tmp = (accumulator == null ? true : isObject(accumulator)) ? accumulator : THROW_CCE();
      }
      var tmp0__anonymous__q1qw7t = tmp;
      tmp$ret$2 = tmp0__anonymous__q1qw7t + 1 | 0;
      tmp$ret$3 = tmp$ret$2;
      var tmp1_set = tmp$ret$3;
      tmp2_aggregateTo.u(key, tmp1_set);
    }
    tmp$ret$4 = tmp2_aggregateTo;
    tmp$ret$5 = tmp$ret$4;
    tmp$ret$6 = tmp$ret$5;
    return tmp$ret$6;
  }
  function Serializable() {
  }
  Serializable.$metadata$ = interfaceMeta('Serializable');
  function ceil(x) {
    return Math.ceil(x);
  }
  function max(a, b) {
    return Math.max(a, b);
  }
  function floor(x) {
    return Math.floor(x);
  }
  function get_absoluteValue(_this__u8e3s4) {
    return abs(_this__u8e3s4);
  }
  function get_absoluteValue_0(_this__u8e3s4) {
    return abs_0(_this__u8e3s4);
  }
  function log10_0(x) {
    return log10(x);
  }
  function floor_0(x) {
    return Math.floor(x);
  }
  function max_0(a, b) {
    return a.c6(b) >= 0 ? a : b;
  }
  function min(a, b) {
    return a.c6(b) <= 0 ? a : b;
  }
  function abs(n) {
    return n.c6(new Long(0, 0)) < 0 ? n.a6() : n;
  }
  function abs_0(n) {
    return n < 0 ? -n | 0 | 0 : n;
  }
  function isNaN_0(_this__u8e3s4) {
    return !(_this__u8e3s4 === _this__u8e3s4);
  }
  function isFinite(_this__u8e3s4) {
    return !isInfinite(_this__u8e3s4) ? !isNaN_1(_this__u8e3s4) : false;
  }
  function isFinite_0(_this__u8e3s4) {
    return !isInfinite_0(_this__u8e3s4) ? !isNaN_0(_this__u8e3s4) : false;
  }
  function isInfinite(_this__u8e3s4) {
    var tmp;
    FloatCompanionObject_getInstance();
    if (_this__u8e3s4 === Infinity) {
      tmp = true;
    } else {
      FloatCompanionObject_getInstance();
      tmp = _this__u8e3s4 === -Infinity;
    }
    return tmp;
  }
  function isNaN_1(_this__u8e3s4) {
    return !(_this__u8e3s4 === _this__u8e3s4);
  }
  function isInfinite_0(_this__u8e3s4) {
    var tmp;
    DoubleCompanionObject_getInstance();
    if (_this__u8e3s4 === Infinity) {
      tmp = true;
    } else {
      DoubleCompanionObject_getInstance();
      tmp = _this__u8e3s4 === -Infinity;
    }
    return tmp;
  }
  function get_js(_this__u8e3s4) {
    return (_this__u8e3s4 instanceof KClassImpl ? _this__u8e3s4 : THROW_CCE()).pc();
  }
  function KCallable() {
  }
  KCallable.$metadata$ = interfaceMeta('KCallable');
  function KClass() {
  }
  KClass.$metadata$ = interfaceMeta('KClass', [KClassifier]);
  function KClassImpl(jClass) {
    this.oc_1 = jClass;
  }
  KClassImpl.prototype.pc = function () {
    return this.oc_1;
  };
  KClassImpl.prototype.equals = function (other) {
    var tmp;
    if (other instanceof KClassImpl) {
      tmp = equals_1(this.pc(), other.pc());
    } else {
      tmp = false;
    }
    return tmp;
  };
  KClassImpl.prototype.hashCode = function () {
    var tmp0_safe_receiver = this.qc();
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : getStringHashCode(tmp0_safe_receiver);
    return tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
  };
  KClassImpl.prototype.toString = function () {
    return 'class ' + this.qc();
  };
  KClassImpl.$metadata$ = classMeta('KClassImpl', [KClass]);
  function PrimitiveKClassImpl(jClass, givenSimpleName, isInstanceFunction) {
    KClassImpl.call(this, jClass);
    this.tc_1 = givenSimpleName;
    this.uc_1 = isInstanceFunction;
  }
  PrimitiveKClassImpl.prototype.equals = function (other) {
    if (!(other instanceof PrimitiveKClassImpl))
      return false;
    return KClassImpl.prototype.equals.call(this, other) ? this.tc_1 === other.tc_1 : false;
  };
  PrimitiveKClassImpl.prototype.qc = function () {
    return this.tc_1;
  };
  PrimitiveKClassImpl.prototype.rc = function (value) {
    return this.uc_1(value);
  };
  PrimitiveKClassImpl.$metadata$ = classMeta('PrimitiveKClassImpl', undefined, undefined, undefined, undefined, KClassImpl.prototype);
  function NothingKClassImpl() {
    NothingKClassImpl_instance = this;
    KClassImpl.call(this, Object);
    this.wc_1 = 'Nothing';
  }
  NothingKClassImpl.prototype.qc = function () {
    return this.wc_1;
  };
  NothingKClassImpl.prototype.rc = function (value) {
    return false;
  };
  NothingKClassImpl.prototype.pc = function () {
    throw UnsupportedOperationException_init_$Create$_0("There's no native JS class for Nothing type");
  };
  NothingKClassImpl.prototype.equals = function (other) {
    return other === this;
  };
  NothingKClassImpl.prototype.hashCode = function () {
    return 0;
  };
  NothingKClassImpl.$metadata$ = objectMeta('NothingKClassImpl', undefined, undefined, undefined, undefined, KClassImpl.prototype);
  var NothingKClassImpl_instance;
  function NothingKClassImpl_getInstance() {
    if (NothingKClassImpl_instance == null)
      new NothingKClassImpl();
    return NothingKClassImpl_instance;
  }
  function ErrorKClass() {
  }
  ErrorKClass.prototype.qc = function () {
    throw IllegalStateException_init_$Create$('Unknown simpleName for ErrorKClass');
  };
  ErrorKClass.prototype.rc = function (value) {
    throw IllegalStateException_init_$Create$("Can's check isInstance on ErrorKClass");
  };
  ErrorKClass.prototype.equals = function (other) {
    return other === this;
  };
  ErrorKClass.prototype.hashCode = function () {
    return 0;
  };
  ErrorKClass.$metadata$ = classMeta('ErrorKClass', [KClass]);
  function SimpleKClassImpl(jClass) {
    KClassImpl.call(this, jClass);
    var tmp = this;
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = jClass;
    var tmp0_safe_receiver = tmp$ret$0.$metadata$;
    var tmp0_unsafeCast = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.simpleName;
    tmp$ret$1 = tmp0_unsafeCast;
    tmp.yc_1 = tmp$ret$1;
  }
  SimpleKClassImpl.prototype.qc = function () {
    return this.yc_1;
  };
  SimpleKClassImpl.prototype.rc = function (value) {
    return jsIsType(value, this.pc());
  };
  SimpleKClassImpl.$metadata$ = classMeta('SimpleKClassImpl', undefined, undefined, undefined, undefined, KClassImpl.prototype);
  function KProperty1() {
  }
  KProperty1.$metadata$ = interfaceMeta('KProperty1', [KProperty]);
  function KProperty0() {
  }
  KProperty0.$metadata$ = interfaceMeta('KProperty0', [KProperty]);
  function KProperty() {
  }
  KProperty.$metadata$ = interfaceMeta('KProperty', [KCallable]);
  function KType() {
  }
  KType.$metadata$ = interfaceMeta('KType');
  function createKType(classifier, arguments_0, isMarkedNullable) {
    return new KTypeImpl(classifier, asList(arguments_0), isMarkedNullable);
  }
  function createInvariantKTypeProjection(type) {
    return Companion_getInstance_4().s5(type);
  }
  function KTypeImpl(classifier, arguments_0, isMarkedNullable) {
    this.dd_1 = classifier;
    this.ed_1 = arguments_0;
    this.fd_1 = isMarkedNullable;
  }
  KTypeImpl.prototype.ad = function () {
    return this.dd_1;
  };
  KTypeImpl.prototype.bd = function () {
    return this.ed_1;
  };
  KTypeImpl.prototype.cd = function () {
    return this.fd_1;
  };
  KTypeImpl.prototype.equals = function (other) {
    var tmp;
    var tmp_0;
    var tmp_1;
    if (other instanceof KTypeImpl) {
      tmp_1 = equals_1(this.dd_1, other.dd_1);
    } else {
      tmp_1 = false;
    }
    if (tmp_1) {
      tmp_0 = equals_1(this.ed_1, other.ed_1);
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = this.fd_1 === other.fd_1;
    } else {
      tmp = false;
    }
    return tmp;
  };
  KTypeImpl.prototype.hashCode = function () {
    return imul(imul(hashCode_0(this.dd_1), 31) + hashCode_0(this.ed_1) | 0, 31) + (this.fd_1 | 0) | 0;
  };
  KTypeImpl.prototype.toString = function () {
    var tmp = this.dd_1;
    var kClass = isInterface(tmp, KClass) ? tmp : null;
    var classifierName = kClass == null ? toString_3(this.dd_1) : !(kClass.qc() == null) ? kClass.qc() : '(non-denotable type)';
    var tmp_0;
    if (this.ed_1.p()) {
      tmp_0 = '';
    } else {
      tmp_0 = joinToString$default_0(this.ed_1, ', ', '<', '>', 0, null, null, 56, null);
    }
    var args = tmp_0;
    var nullable = this.fd_1 ? '?' : '';
    return plus_1(classifierName, args) + nullable;
  };
  KTypeImpl.$metadata$ = classMeta('KTypeImpl', [KType]);
  function get_functionClasses() {
    init_properties_primitives_kt_rm1w5q();
    return functionClasses;
  }
  var functionClasses;
  function PrimitiveClasses$anyClass$lambda(it) {
    return isObject(it);
  }
  function PrimitiveClasses$numberClass$lambda(it) {
    return isNumber(it);
  }
  function PrimitiveClasses$booleanClass$lambda(it) {
    return !(it == null) ? typeof it === 'boolean' : false;
  }
  function PrimitiveClasses$byteClass$lambda(it) {
    return !(it == null) ? typeof it === 'number' : false;
  }
  function PrimitiveClasses$shortClass$lambda(it) {
    return !(it == null) ? typeof it === 'number' : false;
  }
  function PrimitiveClasses$intClass$lambda(it) {
    return !(it == null) ? typeof it === 'number' : false;
  }
  function PrimitiveClasses$floatClass$lambda(it) {
    return !(it == null) ? typeof it === 'number' : false;
  }
  function PrimitiveClasses$doubleClass$lambda(it) {
    return !(it == null) ? typeof it === 'number' : false;
  }
  function PrimitiveClasses$arrayClass$lambda(it) {
    return !(it == null) ? isArray(it) : false;
  }
  function PrimitiveClasses$stringClass$lambda(it) {
    return !(it == null) ? typeof it === 'string' : false;
  }
  function PrimitiveClasses$throwableClass$lambda(it) {
    return it instanceof Error;
  }
  function PrimitiveClasses$booleanArrayClass$lambda(it) {
    return !(it == null) ? isBooleanArray(it) : false;
  }
  function PrimitiveClasses$charArrayClass$lambda(it) {
    return !(it == null) ? isCharArray(it) : false;
  }
  function PrimitiveClasses$byteArrayClass$lambda(it) {
    return !(it == null) ? isByteArray(it) : false;
  }
  function PrimitiveClasses$shortArrayClass$lambda(it) {
    return !(it == null) ? isShortArray(it) : false;
  }
  function PrimitiveClasses$intArrayClass$lambda(it) {
    return !(it == null) ? isIntArray(it) : false;
  }
  function PrimitiveClasses$longArrayClass$lambda(it) {
    return !(it == null) ? isLongArray(it) : false;
  }
  function PrimitiveClasses$floatArrayClass$lambda(it) {
    return !(it == null) ? isFloatArray(it) : false;
  }
  function PrimitiveClasses$doubleArrayClass$lambda(it) {
    return !(it == null) ? isDoubleArray(it) : false;
  }
  function PrimitiveClasses$functionClass$lambda($arity) {
    return function (it) {
      var tmp;
      if (typeof it === 'function') {
        var tmp$ret$0;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$0 = it;
        tmp = tmp$ret$0.length === $arity;
      } else {
        tmp = false;
      }
      return tmp;
    };
  }
  function PrimitiveClasses() {
    PrimitiveClasses_instance = this;
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = Object;
    tmp$ret$0 = tmp0_unsafeCast;
    var tmp_0 = tmp$ret$0;
    tmp.gd_1 = new PrimitiveKClassImpl(tmp_0, 'Any', PrimitiveClasses$anyClass$lambda);
    var tmp_1 = this;
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_0 = Number;
    tmp$ret$1 = tmp0_unsafeCast_0;
    var tmp_2 = tmp$ret$1;
    tmp_1.hd_1 = new PrimitiveKClassImpl(tmp_2, 'Number', PrimitiveClasses$numberClass$lambda);
    this.id_1 = NothingKClassImpl_getInstance();
    var tmp_3 = this;
    var tmp$ret$2;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_1 = Boolean;
    tmp$ret$2 = tmp0_unsafeCast_1;
    var tmp_4 = tmp$ret$2;
    tmp_3.jd_1 = new PrimitiveKClassImpl(tmp_4, 'Boolean', PrimitiveClasses$booleanClass$lambda);
    var tmp_5 = this;
    var tmp$ret$3;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_2 = Number;
    tmp$ret$3 = tmp0_unsafeCast_2;
    var tmp_6 = tmp$ret$3;
    tmp_5.kd_1 = new PrimitiveKClassImpl(tmp_6, 'Byte', PrimitiveClasses$byteClass$lambda);
    var tmp_7 = this;
    var tmp$ret$4;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_3 = Number;
    tmp$ret$4 = tmp0_unsafeCast_3;
    var tmp_8 = tmp$ret$4;
    tmp_7.ld_1 = new PrimitiveKClassImpl(tmp_8, 'Short', PrimitiveClasses$shortClass$lambda);
    var tmp_9 = this;
    var tmp$ret$5;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_4 = Number;
    tmp$ret$5 = tmp0_unsafeCast_4;
    var tmp_10 = tmp$ret$5;
    tmp_9.md_1 = new PrimitiveKClassImpl(tmp_10, 'Int', PrimitiveClasses$intClass$lambda);
    var tmp_11 = this;
    var tmp$ret$6;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_5 = Number;
    tmp$ret$6 = tmp0_unsafeCast_5;
    var tmp_12 = tmp$ret$6;
    tmp_11.nd_1 = new PrimitiveKClassImpl(tmp_12, 'Float', PrimitiveClasses$floatClass$lambda);
    var tmp_13 = this;
    var tmp$ret$7;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_6 = Number;
    tmp$ret$7 = tmp0_unsafeCast_6;
    var tmp_14 = tmp$ret$7;
    tmp_13.od_1 = new PrimitiveKClassImpl(tmp_14, 'Double', PrimitiveClasses$doubleClass$lambda);
    var tmp_15 = this;
    var tmp$ret$8;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_7 = Array;
    tmp$ret$8 = tmp0_unsafeCast_7;
    var tmp_16 = tmp$ret$8;
    tmp_15.pd_1 = new PrimitiveKClassImpl(tmp_16, 'Array', PrimitiveClasses$arrayClass$lambda);
    var tmp_17 = this;
    var tmp$ret$9;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_8 = String;
    tmp$ret$9 = tmp0_unsafeCast_8;
    var tmp_18 = tmp$ret$9;
    tmp_17.qd_1 = new PrimitiveKClassImpl(tmp_18, 'String', PrimitiveClasses$stringClass$lambda);
    var tmp_19 = this;
    var tmp$ret$10;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_9 = Error;
    tmp$ret$10 = tmp0_unsafeCast_9;
    var tmp_20 = tmp$ret$10;
    tmp_19.rd_1 = new PrimitiveKClassImpl(tmp_20, 'Throwable', PrimitiveClasses$throwableClass$lambda);
    var tmp_21 = this;
    var tmp$ret$11;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_10 = Array;
    tmp$ret$11 = tmp0_unsafeCast_10;
    var tmp_22 = tmp$ret$11;
    tmp_21.sd_1 = new PrimitiveKClassImpl(tmp_22, 'BooleanArray', PrimitiveClasses$booleanArrayClass$lambda);
    var tmp_23 = this;
    var tmp$ret$12;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_11 = Uint16Array;
    tmp$ret$12 = tmp0_unsafeCast_11;
    var tmp_24 = tmp$ret$12;
    tmp_23.td_1 = new PrimitiveKClassImpl(tmp_24, 'CharArray', PrimitiveClasses$charArrayClass$lambda);
    var tmp_25 = this;
    var tmp$ret$13;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_12 = Int8Array;
    tmp$ret$13 = tmp0_unsafeCast_12;
    var tmp_26 = tmp$ret$13;
    tmp_25.ud_1 = new PrimitiveKClassImpl(tmp_26, 'ByteArray', PrimitiveClasses$byteArrayClass$lambda);
    var tmp_27 = this;
    var tmp$ret$14;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_13 = Int16Array;
    tmp$ret$14 = tmp0_unsafeCast_13;
    var tmp_28 = tmp$ret$14;
    tmp_27.vd_1 = new PrimitiveKClassImpl(tmp_28, 'ShortArray', PrimitiveClasses$shortArrayClass$lambda);
    var tmp_29 = this;
    var tmp$ret$15;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_14 = Int32Array;
    tmp$ret$15 = tmp0_unsafeCast_14;
    var tmp_30 = tmp$ret$15;
    tmp_29.wd_1 = new PrimitiveKClassImpl(tmp_30, 'IntArray', PrimitiveClasses$intArrayClass$lambda);
    var tmp_31 = this;
    var tmp$ret$16;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_15 = Array;
    tmp$ret$16 = tmp0_unsafeCast_15;
    var tmp_32 = tmp$ret$16;
    tmp_31.xd_1 = new PrimitiveKClassImpl(tmp_32, 'LongArray', PrimitiveClasses$longArrayClass$lambda);
    var tmp_33 = this;
    var tmp$ret$17;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_16 = Float32Array;
    tmp$ret$17 = tmp0_unsafeCast_16;
    var tmp_34 = tmp$ret$17;
    tmp_33.yd_1 = new PrimitiveKClassImpl(tmp_34, 'FloatArray', PrimitiveClasses$floatArrayClass$lambda);
    var tmp_35 = this;
    var tmp$ret$18;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast_17 = Float64Array;
    tmp$ret$18 = tmp0_unsafeCast_17;
    var tmp_36 = tmp$ret$18;
    tmp_35.zd_1 = new PrimitiveKClassImpl(tmp_36, 'DoubleArray', PrimitiveClasses$doubleArrayClass$lambda);
  }
  PrimitiveClasses.prototype.ae = function () {
    return this.gd_1;
  };
  PrimitiveClasses.prototype.be = function () {
    return this.hd_1;
  };
  PrimitiveClasses.prototype.ce = function () {
    return this.id_1;
  };
  PrimitiveClasses.prototype.de = function () {
    return this.jd_1;
  };
  PrimitiveClasses.prototype.ee = function () {
    return this.kd_1;
  };
  PrimitiveClasses.prototype.fe = function () {
    return this.ld_1;
  };
  PrimitiveClasses.prototype.ge = function () {
    return this.md_1;
  };
  PrimitiveClasses.prototype.he = function () {
    return this.nd_1;
  };
  PrimitiveClasses.prototype.ie = function () {
    return this.od_1;
  };
  PrimitiveClasses.prototype.je = function () {
    return this.pd_1;
  };
  PrimitiveClasses.prototype.ke = function () {
    return this.qd_1;
  };
  PrimitiveClasses.prototype.le = function () {
    return this.rd_1;
  };
  PrimitiveClasses.prototype.me = function () {
    return this.sd_1;
  };
  PrimitiveClasses.prototype.ne = function () {
    return this.td_1;
  };
  PrimitiveClasses.prototype.oe = function () {
    return this.ud_1;
  };
  PrimitiveClasses.prototype.pe = function () {
    return this.vd_1;
  };
  PrimitiveClasses.prototype.qe = function () {
    return this.wd_1;
  };
  PrimitiveClasses.prototype.re = function () {
    return this.xd_1;
  };
  PrimitiveClasses.prototype.se = function () {
    return this.yd_1;
  };
  PrimitiveClasses.prototype.te = function () {
    return this.zd_1;
  };
  PrimitiveClasses.prototype.functionClass = function (arity) {
    var tmp0_elvis_lhs = get_functionClasses()[arity];
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$3;
      // Inline function 'kotlin.run' call
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$2;
      // Inline function 'kotlin.reflect.js.internal.PrimitiveClasses.functionClass.<anonymous>' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = Function;
      tmp$ret$0 = tmp0_unsafeCast;
      var tmp_0 = tmp$ret$0;
      var tmp_1 = 'Function' + arity;
      var result = new PrimitiveKClassImpl(tmp_0, tmp_1, PrimitiveClasses$functionClass$lambda(arity));
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      var tmp1_asDynamic = get_functionClasses();
      tmp$ret$1 = tmp1_asDynamic;
      tmp$ret$1[arity] = result;
      tmp$ret$2 = result;
      tmp$ret$3 = tmp$ret$2;
      tmp = tmp$ret$3;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  PrimitiveClasses.$metadata$ = objectMeta('PrimitiveClasses');
  Object.defineProperty(PrimitiveClasses.prototype, 'anyClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.ae
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'numberClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.be
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'nothingClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.ce
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'booleanClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.de
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'byteClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.ee
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'shortClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.fe
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'intClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.ge
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'floatClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.he
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'doubleClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.ie
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'arrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.je
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'stringClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.ke
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'throwableClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.le
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'booleanArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.me
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'charArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.ne
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'byteArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.oe
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'shortArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.pe
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'intArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.qe
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'longArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.re
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'floatArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.se
  });
  Object.defineProperty(PrimitiveClasses.prototype, 'doubleArrayClass', {
    configurable: true,
    get: PrimitiveClasses.prototype.te
  });
  var PrimitiveClasses_instance;
  function PrimitiveClasses_getInstance() {
    if (PrimitiveClasses_instance == null)
      new PrimitiveClasses();
    return PrimitiveClasses_instance;
  }
  var properties_initialized_primitives_kt_jle18u;
  function init_properties_primitives_kt_rm1w5q() {
    if (properties_initialized_primitives_kt_jle18u) {
    } else {
      properties_initialized_primitives_kt_jle18u = true;
      var tmp$ret$0;
      // Inline function 'kotlin.arrayOfNulls' call
      tmp$ret$0 = fillArrayVal(Array(0), null);
      functionClasses = tmp$ret$0;
    }
  }
  function getKClass(jClass) {
    var tmp;
    if (Array.isArray(jClass)) {
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = jClass;
      tmp$ret$1 = tmp$ret$0;
      tmp = getKClassM(tmp$ret$1);
    } else {
      var tmp$ret$3;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$2 = jClass;
      tmp$ret$3 = tmp$ret$2;
      tmp = getKClass1(tmp$ret$3);
    }
    return tmp;
  }
  function getKClassM(jClasses) {
    var tmp0_subject = jClasses.length;
    var tmp;
    switch (tmp0_subject) {
      case 1:
        tmp = getKClass1(jClasses[0]);
        break;
      case 0:
        var tmp$ret$1;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp0_unsafeCast = NothingKClassImpl_getInstance();
        var tmp$ret$0;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$0 = tmp0_unsafeCast;
        tmp$ret$1 = tmp$ret$0;

        tmp = tmp$ret$1;
        break;
      default:
        var tmp$ret$3;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp1_unsafeCast = new ErrorKClass();
        var tmp$ret$2;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$2 = tmp1_unsafeCast;
        tmp$ret$3 = tmp$ret$2;

        tmp = tmp$ret$3;
        break;
    }
    return tmp;
  }
  function getKClass1(jClass) {
    if (jClass === String) {
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = PrimitiveClasses_getInstance().qd_1;
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_unsafeCast;
      tmp$ret$1 = tmp$ret$0;
      return tmp$ret$1;
    }
    var tmp$ret$2;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$2 = jClass;
    var metadata = tmp$ret$2.$metadata$;
    var tmp;
    if (metadata != null) {
      var tmp_0;
      if (metadata.$kClass$ == null) {
        var kClass = new SimpleKClassImpl(jClass);
        metadata.$kClass$ = kClass;
        tmp_0 = kClass;
      } else {
        tmp_0 = metadata.$kClass$;
      }
      tmp = tmp_0;
    } else {
      tmp = new SimpleKClassImpl(jClass);
    }
    return tmp;
  }
  function getKClassFromExpression(e) {
    var tmp$ret$3;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_subject = typeof e;
    var tmp;
    switch (tmp0_subject) {
      case 'string':
        tmp = PrimitiveClasses_getInstance().qd_1;
        break;
      case 'number':
        var tmp_0;
        var tmp$ret$0;
        // Inline function 'kotlin.js.asDynamic' call
        var tmp0_asDynamic = jsBitwiseOr(e, 0);
        tmp$ret$0 = tmp0_asDynamic;

        if (tmp$ret$0 === e) {
          tmp_0 = PrimitiveClasses_getInstance().md_1;
        } else {
          tmp_0 = PrimitiveClasses_getInstance().od_1;
        }

        tmp = tmp_0;
        break;
      case 'boolean':
        tmp = PrimitiveClasses_getInstance().jd_1;
        break;
      case 'function':
        var tmp_1 = PrimitiveClasses_getInstance();
        var tmp$ret$1;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$1 = e;

        tmp = tmp_1.functionClass(tmp$ret$1.length);
        break;
      default:
        var tmp_2;
        if (isBooleanArray(e)) {
          tmp_2 = PrimitiveClasses_getInstance().sd_1;
        } else {
          if (isCharArray(e)) {
            tmp_2 = PrimitiveClasses_getInstance().td_1;
          } else {
            if (isByteArray(e)) {
              tmp_2 = PrimitiveClasses_getInstance().ud_1;
            } else {
              if (isShortArray(e)) {
                tmp_2 = PrimitiveClasses_getInstance().vd_1;
              } else {
                if (isIntArray(e)) {
                  tmp_2 = PrimitiveClasses_getInstance().wd_1;
                } else {
                  if (isLongArray(e)) {
                    tmp_2 = PrimitiveClasses_getInstance().xd_1;
                  } else {
                    if (isFloatArray(e)) {
                      tmp_2 = PrimitiveClasses_getInstance().yd_1;
                    } else {
                      if (isDoubleArray(e)) {
                        tmp_2 = PrimitiveClasses_getInstance().zd_1;
                      } else {
                        if (isInterface(e, KClass)) {
                          tmp_2 = getKClass(KClass);
                        } else {
                          if (isArray(e)) {
                            tmp_2 = PrimitiveClasses_getInstance().pd_1;
                          } else {
                            var constructor = Object.getPrototypeOf(e).constructor;
                            var tmp_3;
                            if (constructor === Object) {
                              tmp_3 = PrimitiveClasses_getInstance().gd_1;
                            } else if (constructor === Error) {
                              tmp_3 = PrimitiveClasses_getInstance().rd_1;
                            } else {
                              var jsClass = constructor;
                              tmp_3 = getKClass1(jsClass);
                            }
                            tmp_2 = tmp_3;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }

        tmp = tmp_2;
        break;
    }
    var tmp1_unsafeCast = tmp;
    var tmp$ret$2;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$2 = tmp1_unsafeCast;
    tmp$ret$3 = tmp$ret$2;
    return tmp$ret$3;
  }
  function get_0(_this__u8e3s4, index) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    return tmp$ret$0[index];
  }
  function Appendable() {
  }
  Appendable.$metadata$ = interfaceMeta('Appendable');
  var CharCategory_UNASSIGNED_instance;
  var CharCategory_UPPERCASE_LETTER_instance;
  var CharCategory_LOWERCASE_LETTER_instance;
  var CharCategory_TITLECASE_LETTER_instance;
  var CharCategory_MODIFIER_LETTER_instance;
  var CharCategory_OTHER_LETTER_instance;
  var CharCategory_NON_SPACING_MARK_instance;
  var CharCategory_ENCLOSING_MARK_instance;
  var CharCategory_COMBINING_SPACING_MARK_instance;
  var CharCategory_DECIMAL_DIGIT_NUMBER_instance;
  var CharCategory_LETTER_NUMBER_instance;
  var CharCategory_OTHER_NUMBER_instance;
  var CharCategory_SPACE_SEPARATOR_instance;
  var CharCategory_LINE_SEPARATOR_instance;
  var CharCategory_PARAGRAPH_SEPARATOR_instance;
  var CharCategory_CONTROL_instance;
  var CharCategory_FORMAT_instance;
  var CharCategory_PRIVATE_USE_instance;
  var CharCategory_SURROGATE_instance;
  var CharCategory_DASH_PUNCTUATION_instance;
  var CharCategory_START_PUNCTUATION_instance;
  var CharCategory_END_PUNCTUATION_instance;
  var CharCategory_CONNECTOR_PUNCTUATION_instance;
  var CharCategory_OTHER_PUNCTUATION_instance;
  var CharCategory_MATH_SYMBOL_instance;
  var CharCategory_CURRENCY_SYMBOL_instance;
  var CharCategory_MODIFIER_SYMBOL_instance;
  var CharCategory_OTHER_SYMBOL_instance;
  var CharCategory_INITIAL_QUOTE_PUNCTUATION_instance;
  var CharCategory_FINAL_QUOTE_PUNCTUATION_instance;
  function Companion_9() {
    Companion_instance_9 = this;
  }
  Companion_9.prototype.ue = function (category) {
    var tmp0_subject = category;
    var tmp;
    if (0 <= tmp0_subject ? tmp0_subject <= 16 : false) {
      tmp = values()[category];
    } else if (18 <= tmp0_subject ? tmp0_subject <= 30 : false) {
      tmp = values()[category - 1 | 0];
    } else {
      throw IllegalArgumentException_init_$Create$_0('Category #' + category + ' is not defined.');
    }
    return tmp;
  };
  Companion_9.$metadata$ = objectMeta('Companion');
  var Companion_instance_9;
  function Companion_getInstance_9() {
    CharCategory_initEntries();
    if (Companion_instance_9 == null)
      new Companion_9();
    return Companion_instance_9;
  }
  function values() {
    return [CharCategory_UNASSIGNED_getInstance(), CharCategory_UPPERCASE_LETTER_getInstance(), CharCategory_LOWERCASE_LETTER_getInstance(), CharCategory_TITLECASE_LETTER_getInstance(), CharCategory_MODIFIER_LETTER_getInstance(), CharCategory_OTHER_LETTER_getInstance(), CharCategory_NON_SPACING_MARK_getInstance(), CharCategory_ENCLOSING_MARK_getInstance(), CharCategory_COMBINING_SPACING_MARK_getInstance(), CharCategory_DECIMAL_DIGIT_NUMBER_getInstance(), CharCategory_LETTER_NUMBER_getInstance(), CharCategory_OTHER_NUMBER_getInstance(), CharCategory_SPACE_SEPARATOR_getInstance(), CharCategory_LINE_SEPARATOR_getInstance(), CharCategory_PARAGRAPH_SEPARATOR_getInstance(), CharCategory_CONTROL_getInstance(), CharCategory_FORMAT_getInstance(), CharCategory_PRIVATE_USE_getInstance(), CharCategory_SURROGATE_getInstance(), CharCategory_DASH_PUNCTUATION_getInstance(), CharCategory_START_PUNCTUATION_getInstance(), CharCategory_END_PUNCTUATION_getInstance(), CharCategory_CONNECTOR_PUNCTUATION_getInstance(), CharCategory_OTHER_PUNCTUATION_getInstance(), CharCategory_MATH_SYMBOL_getInstance(), CharCategory_CURRENCY_SYMBOL_getInstance(), CharCategory_MODIFIER_SYMBOL_getInstance(), CharCategory_OTHER_SYMBOL_getInstance(), CharCategory_INITIAL_QUOTE_PUNCTUATION_getInstance(), CharCategory_FINAL_QUOTE_PUNCTUATION_getInstance()];
  }
  var CharCategory_entriesInitialized;
  function CharCategory_initEntries() {
    if (CharCategory_entriesInitialized)
      return Unit_getInstance();
    CharCategory_entriesInitialized = true;
    CharCategory_UNASSIGNED_instance = new CharCategory('UNASSIGNED', 0, 0, 'Cn');
    CharCategory_UPPERCASE_LETTER_instance = new CharCategory('UPPERCASE_LETTER', 1, 1, 'Lu');
    CharCategory_LOWERCASE_LETTER_instance = new CharCategory('LOWERCASE_LETTER', 2, 2, 'Ll');
    CharCategory_TITLECASE_LETTER_instance = new CharCategory('TITLECASE_LETTER', 3, 3, 'Lt');
    CharCategory_MODIFIER_LETTER_instance = new CharCategory('MODIFIER_LETTER', 4, 4, 'Lm');
    CharCategory_OTHER_LETTER_instance = new CharCategory('OTHER_LETTER', 5, 5, 'Lo');
    CharCategory_NON_SPACING_MARK_instance = new CharCategory('NON_SPACING_MARK', 6, 6, 'Mn');
    CharCategory_ENCLOSING_MARK_instance = new CharCategory('ENCLOSING_MARK', 7, 7, 'Me');
    CharCategory_COMBINING_SPACING_MARK_instance = new CharCategory('COMBINING_SPACING_MARK', 8, 8, 'Mc');
    CharCategory_DECIMAL_DIGIT_NUMBER_instance = new CharCategory('DECIMAL_DIGIT_NUMBER', 9, 9, 'Nd');
    CharCategory_LETTER_NUMBER_instance = new CharCategory('LETTER_NUMBER', 10, 10, 'Nl');
    CharCategory_OTHER_NUMBER_instance = new CharCategory('OTHER_NUMBER', 11, 11, 'No');
    CharCategory_SPACE_SEPARATOR_instance = new CharCategory('SPACE_SEPARATOR', 12, 12, 'Zs');
    CharCategory_LINE_SEPARATOR_instance = new CharCategory('LINE_SEPARATOR', 13, 13, 'Zl');
    CharCategory_PARAGRAPH_SEPARATOR_instance = new CharCategory('PARAGRAPH_SEPARATOR', 14, 14, 'Zp');
    CharCategory_CONTROL_instance = new CharCategory('CONTROL', 15, 15, 'Cc');
    CharCategory_FORMAT_instance = new CharCategory('FORMAT', 16, 16, 'Cf');
    CharCategory_PRIVATE_USE_instance = new CharCategory('PRIVATE_USE', 17, 18, 'Co');
    CharCategory_SURROGATE_instance = new CharCategory('SURROGATE', 18, 19, 'Cs');
    CharCategory_DASH_PUNCTUATION_instance = new CharCategory('DASH_PUNCTUATION', 19, 20, 'Pd');
    CharCategory_START_PUNCTUATION_instance = new CharCategory('START_PUNCTUATION', 20, 21, 'Ps');
    CharCategory_END_PUNCTUATION_instance = new CharCategory('END_PUNCTUATION', 21, 22, 'Pe');
    CharCategory_CONNECTOR_PUNCTUATION_instance = new CharCategory('CONNECTOR_PUNCTUATION', 22, 23, 'Pc');
    CharCategory_OTHER_PUNCTUATION_instance = new CharCategory('OTHER_PUNCTUATION', 23, 24, 'Po');
    CharCategory_MATH_SYMBOL_instance = new CharCategory('MATH_SYMBOL', 24, 25, 'Sm');
    CharCategory_CURRENCY_SYMBOL_instance = new CharCategory('CURRENCY_SYMBOL', 25, 26, 'Sc');
    CharCategory_MODIFIER_SYMBOL_instance = new CharCategory('MODIFIER_SYMBOL', 26, 27, 'Sk');
    CharCategory_OTHER_SYMBOL_instance = new CharCategory('OTHER_SYMBOL', 27, 28, 'So');
    CharCategory_INITIAL_QUOTE_PUNCTUATION_instance = new CharCategory('INITIAL_QUOTE_PUNCTUATION', 28, 29, 'Pi');
    CharCategory_FINAL_QUOTE_PUNCTUATION_instance = new CharCategory('FINAL_QUOTE_PUNCTUATION', 29, 30, 'Pf');
    Companion_getInstance_9();
  }
  function CharCategory(name, ordinal, value, code) {
    Enum.call(this, name, ordinal);
    this.xe_1 = value;
    this.ye_1 = code;
  }
  CharCategory.$metadata$ = classMeta('CharCategory', undefined, undefined, undefined, undefined, Enum.prototype);
  function CharCategory_UNASSIGNED_getInstance() {
    CharCategory_initEntries();
    return CharCategory_UNASSIGNED_instance;
  }
  function CharCategory_UPPERCASE_LETTER_getInstance() {
    CharCategory_initEntries();
    return CharCategory_UPPERCASE_LETTER_instance;
  }
  function CharCategory_LOWERCASE_LETTER_getInstance() {
    CharCategory_initEntries();
    return CharCategory_LOWERCASE_LETTER_instance;
  }
  function CharCategory_TITLECASE_LETTER_getInstance() {
    CharCategory_initEntries();
    return CharCategory_TITLECASE_LETTER_instance;
  }
  function CharCategory_MODIFIER_LETTER_getInstance() {
    CharCategory_initEntries();
    return CharCategory_MODIFIER_LETTER_instance;
  }
  function CharCategory_OTHER_LETTER_getInstance() {
    CharCategory_initEntries();
    return CharCategory_OTHER_LETTER_instance;
  }
  function CharCategory_NON_SPACING_MARK_getInstance() {
    CharCategory_initEntries();
    return CharCategory_NON_SPACING_MARK_instance;
  }
  function CharCategory_ENCLOSING_MARK_getInstance() {
    CharCategory_initEntries();
    return CharCategory_ENCLOSING_MARK_instance;
  }
  function CharCategory_COMBINING_SPACING_MARK_getInstance() {
    CharCategory_initEntries();
    return CharCategory_COMBINING_SPACING_MARK_instance;
  }
  function CharCategory_DECIMAL_DIGIT_NUMBER_getInstance() {
    CharCategory_initEntries();
    return CharCategory_DECIMAL_DIGIT_NUMBER_instance;
  }
  function CharCategory_LETTER_NUMBER_getInstance() {
    CharCategory_initEntries();
    return CharCategory_LETTER_NUMBER_instance;
  }
  function CharCategory_OTHER_NUMBER_getInstance() {
    CharCategory_initEntries();
    return CharCategory_OTHER_NUMBER_instance;
  }
  function CharCategory_SPACE_SEPARATOR_getInstance() {
    CharCategory_initEntries();
    return CharCategory_SPACE_SEPARATOR_instance;
  }
  function CharCategory_LINE_SEPARATOR_getInstance() {
    CharCategory_initEntries();
    return CharCategory_LINE_SEPARATOR_instance;
  }
  function CharCategory_PARAGRAPH_SEPARATOR_getInstance() {
    CharCategory_initEntries();
    return CharCategory_PARAGRAPH_SEPARATOR_instance;
  }
  function CharCategory_CONTROL_getInstance() {
    CharCategory_initEntries();
    return CharCategory_CONTROL_instance;
  }
  function CharCategory_FORMAT_getInstance() {
    CharCategory_initEntries();
    return CharCategory_FORMAT_instance;
  }
  function CharCategory_PRIVATE_USE_getInstance() {
    CharCategory_initEntries();
    return CharCategory_PRIVATE_USE_instance;
  }
  function CharCategory_SURROGATE_getInstance() {
    CharCategory_initEntries();
    return CharCategory_SURROGATE_instance;
  }
  function CharCategory_DASH_PUNCTUATION_getInstance() {
    CharCategory_initEntries();
    return CharCategory_DASH_PUNCTUATION_instance;
  }
  function CharCategory_START_PUNCTUATION_getInstance() {
    CharCategory_initEntries();
    return CharCategory_START_PUNCTUATION_instance;
  }
  function CharCategory_END_PUNCTUATION_getInstance() {
    CharCategory_initEntries();
    return CharCategory_END_PUNCTUATION_instance;
  }
  function CharCategory_CONNECTOR_PUNCTUATION_getInstance() {
    CharCategory_initEntries();
    return CharCategory_CONNECTOR_PUNCTUATION_instance;
  }
  function CharCategory_OTHER_PUNCTUATION_getInstance() {
    CharCategory_initEntries();
    return CharCategory_OTHER_PUNCTUATION_instance;
  }
  function CharCategory_MATH_SYMBOL_getInstance() {
    CharCategory_initEntries();
    return CharCategory_MATH_SYMBOL_instance;
  }
  function CharCategory_CURRENCY_SYMBOL_getInstance() {
    CharCategory_initEntries();
    return CharCategory_CURRENCY_SYMBOL_instance;
  }
  function CharCategory_MODIFIER_SYMBOL_getInstance() {
    CharCategory_initEntries();
    return CharCategory_MODIFIER_SYMBOL_instance;
  }
  function CharCategory_OTHER_SYMBOL_getInstance() {
    CharCategory_initEntries();
    return CharCategory_OTHER_SYMBOL_instance;
  }
  function CharCategory_INITIAL_QUOTE_PUNCTUATION_getInstance() {
    CharCategory_initEntries();
    return CharCategory_INITIAL_QUOTE_PUNCTUATION_instance;
  }
  function CharCategory_FINAL_QUOTE_PUNCTUATION_getInstance() {
    CharCategory_initEntries();
    return CharCategory_FINAL_QUOTE_PUNCTUATION_instance;
  }
  function StringBuilder_init_$Init$(capacity, $this) {
    StringBuilder_init_$Init$_1($this);
    return $this;
  }
  function StringBuilder_init_$Create$(capacity) {
    return StringBuilder_init_$Init$(capacity, Object.create(StringBuilder.prototype));
  }
  function StringBuilder_init_$Init$_0(content, $this) {
    StringBuilder.call($this, toString_3(content));
    return $this;
  }
  function StringBuilder_init_$Create$_0(content) {
    return StringBuilder_init_$Init$_0(content, Object.create(StringBuilder.prototype));
  }
  function StringBuilder_init_$Init$_1($this) {
    StringBuilder.call($this, '');
    return $this;
  }
  function StringBuilder_init_$Create$_1() {
    return StringBuilder_init_$Init$_1(Object.create(StringBuilder.prototype));
  }
  function StringBuilder(content) {
    this.r1_1 = !(content === undefined) ? content : '';
  }
  StringBuilder.prototype.v8 = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    var tmp0_asDynamic = this.r1_1;
    tmp$ret$0 = tmp0_asDynamic;
    return tmp$ret$0.length;
  };
  StringBuilder.prototype.w8 = function (index) {
    var tmp$ret$0;
    // Inline function 'kotlin.text.getOrElse' call
    var tmp0_getOrElse = this.r1_1;
    var tmp;
    if (index >= 0 ? index <= get_lastIndex_2(tmp0_getOrElse) : false) {
      tmp = charSequenceGet(tmp0_getOrElse, index);
    } else {
      throw IndexOutOfBoundsException_init_$Create$('index: ' + index + ', length: ' + this.v8() + '}');
    }
    tmp$ret$0 = tmp;
    return tmp$ret$0;
  };
  StringBuilder.prototype.x8 = function (startIndex, endIndex) {
    var tmp$ret$1;
    // Inline function 'kotlin.text.substring' call
    var tmp0_substring = this.r1_1;
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_substring;
    tmp$ret$1 = tmp$ret$0.substring(startIndex, endIndex);
    return tmp$ret$1;
  };
  StringBuilder.prototype.x5 = function (value) {
    var tmp0_this = this;
    tmp0_this.r1_1 = tmp0_this.r1_1 + new Char_0(value);
    return this;
  };
  StringBuilder.prototype.b = function (value) {
    var tmp0_this = this;
    tmp0_this.r1_1 = tmp0_this.r1_1 + toString_2(value);
    return this;
  };
  StringBuilder.prototype.ze = function (value, startIndex, endIndex) {
    var tmp0_elvis_lhs = value;
    return this.af(tmp0_elvis_lhs == null ? 'null' : tmp0_elvis_lhs, startIndex, endIndex);
  };
  StringBuilder.prototype.s1 = function () {
    var reversed = '';
    var index = this.r1_1.length - 1 | 0;
    while (index >= 0) {
      var tmp = this.r1_1;
      var tmp0 = index;
      index = tmp0 - 1 | 0;
      var low = charSequenceGet(tmp, tmp0);
      if (isLowSurrogate(low) ? index >= 0 : false) {
        var tmp_0 = this.r1_1;
        var tmp1 = index;
        index = tmp1 - 1 | 0;
        var high = charSequenceGet(tmp_0, tmp1);
        if (isHighSurrogate(high)) {
          reversed = reversed + new Char_0(high) + new Char_0(low);
        } else {
          reversed = reversed + new Char_0(low) + new Char_0(high);
        }
      } else {
        reversed = reversed + new Char_0(low);
      }
    }
    this.r1_1 = reversed;
    return this;
  };
  StringBuilder.prototype.bf = function (value) {
    var tmp0_this = this;
    tmp0_this.r1_1 = tmp0_this.r1_1 + toString_2(value);
    return this;
  };
  StringBuilder.prototype.cf = function (value) {
    var tmp0_this = this;
    tmp0_this.r1_1 = tmp0_this.r1_1 + value;
    return this;
  };
  StringBuilder.prototype.df = function (value) {
    var tmp0_this = this;
    var tmp = tmp0_this;
    var tmp_0 = tmp0_this.r1_1;
    var tmp1_elvis_lhs = value;
    tmp.r1_1 = tmp_0 + (tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs);
    return this;
  };
  StringBuilder.prototype.toString = function () {
    return this.r1_1;
  };
  StringBuilder.prototype.af = function (value, startIndex, endIndex) {
    var stringCsq = toString_3(value);
    Companion_getInstance().t2(startIndex, endIndex, stringCsq.length);
    var tmp0_this = this;
    var tmp = tmp0_this;
    var tmp_0 = tmp0_this.r1_1;
    var tmp$ret$1;
    // Inline function 'kotlin.text.substring' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = stringCsq;
    tmp$ret$1 = tmp$ret$0.substring(startIndex, endIndex);
    tmp.r1_1 = tmp_0 + tmp$ret$1;
    return this;
  };
  StringBuilder.$metadata$ = classMeta('StringBuilder', [Appendable, CharSequence]);
  function uppercaseChar(_this__u8e3s4) {
    var tmp$ret$2;
    // Inline function 'kotlin.text.uppercase' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    var tmp0_asDynamic = toString_1(_this__u8e3s4);
    tmp$ret$0 = tmp0_asDynamic;
    var tmp1_unsafeCast = tmp$ret$0.toUpperCase();
    tmp$ret$1 = tmp1_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    var uppercase = tmp$ret$2;
    return uppercase.length > 1 ? _this__u8e3s4 : charSequenceGet(uppercase, 0);
  }
  function lowercaseChar(_this__u8e3s4) {
    var tmp$ret$2;
    // Inline function 'kotlin.text.lowercase' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    var tmp0_asDynamic = toString_1(_this__u8e3s4);
    tmp$ret$0 = tmp0_asDynamic;
    var tmp1_unsafeCast = tmp$ret$0.toLowerCase();
    tmp$ret$1 = tmp1_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    return charSequenceGet(tmp$ret$2, 0);
  }
  function uppercase(_this__u8e3s4) {
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    var tmp0_asDynamic = toString_1(_this__u8e3s4);
    tmp$ret$0 = tmp0_asDynamic;
    var tmp1_unsafeCast = tmp$ret$0.toUpperCase();
    tmp$ret$1 = tmp1_unsafeCast;
    return tmp$ret$1;
  }
  function lowercase(_this__u8e3s4) {
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    var tmp0_asDynamic = toString_1(_this__u8e3s4);
    tmp$ret$0 = tmp0_asDynamic;
    var tmp1_unsafeCast = tmp$ret$0.toLowerCase();
    tmp$ret$1 = tmp1_unsafeCast;
    return tmp$ret$1;
  }
  function isLowSurrogate(_this__u8e3s4) {
    Companion_getInstance_11();
    var containsLower = _Char___init__impl__6a9atx(56320);
    var tmp;
    Companion_getInstance_11();
    if (_this__u8e3s4 <= _Char___init__impl__6a9atx(57343)) {
      tmp = containsLower <= _this__u8e3s4;
    } else {
      tmp = false;
    }
    return tmp;
  }
  function isHighSurrogate(_this__u8e3s4) {
    Companion_getInstance_11();
    var containsLower = _Char___init__impl__6a9atx(55296);
    var tmp;
    Companion_getInstance_11();
    if (_this__u8e3s4 <= _Char___init__impl__6a9atx(56319)) {
      tmp = containsLower <= _this__u8e3s4;
    } else {
      tmp = false;
    }
    return tmp;
  }
  function isWhitespace(_this__u8e3s4) {
    return isWhitespaceImpl(_this__u8e3s4);
  }
  function get_category(_this__u8e3s4) {
    return Companion_getInstance_9().ue(getCategoryValue(_this__u8e3s4));
  }
  function checkRadix(radix) {
    if (!(2 <= radix ? radix <= 36 : false)) {
      throw IllegalArgumentException_init_$Create$_0('radix ' + radix + ' was not in valid range 2..36');
    }
    return radix;
  }
  function toFloat(_this__u8e3s4) {
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = toDouble(_this__u8e3s4);
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_unsafeCast;
    tmp$ret$1 = tmp$ret$0;
    return tmp$ret$1;
  }
  function toDouble(_this__u8e3s4) {
    var tmp$ret$2;
    // Inline function 'kotlin.also' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    var tmp0_unsafeCast = +tmp$ret$0;
    tmp$ret$1 = tmp0_unsafeCast;
    var tmp1_also = tmp$ret$1;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.text.toDouble.<anonymous>' call
    if ((isNaN_0(tmp1_also) ? !isNaN_2(_this__u8e3s4) : false) ? true : tmp1_also === 0.0 ? isBlank(_this__u8e3s4) : false) {
      numberFormatError(_this__u8e3s4);
    }
    tmp$ret$2 = tmp1_also;
    return tmp$ret$2;
  }
  function toLong(_this__u8e3s4, radix) {
    var tmp0_elvis_lhs = toLongOrNull_0(_this__u8e3s4, radix);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function digitOf(char, radix) {
    var tmp$ret$1;
    // Inline function 'kotlin.let' call
    var tmp0_let = (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(48)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(57)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(48)) : (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(90)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(65)) + 10 | 0 : (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(97)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(122)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(97)) + 10 | 0 : Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(128)) < 0 ? -1 : (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65313)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65338)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(65313)) + 10 | 0 : (Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65345)) >= 0 ? Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65370)) <= 0 : false) ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(65345)) + 10 | 0 : digitToIntImpl(char);
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$0;
    // Inline function 'kotlin.text.digitOf.<anonymous>' call
    tmp$ret$0 = tmp0_let >= radix ? -1 : tmp0_let;
    tmp$ret$1 = tmp$ret$0;
    return tmp$ret$1;
  }
  function isNaN_2(_this__u8e3s4) {
    var tmp$ret$1;
    // Inline function 'kotlin.text.lowercase' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    tmp$ret$1 = tmp$ret$0.toLowerCase();
    var tmp0_subject = tmp$ret$1;
    switch (tmp0_subject) {
      case 'nan':
      case '+nan':
      case '-nan':
        return true;
      default:
        return false;
    }
  }
  function toInt(_this__u8e3s4) {
    var tmp0_elvis_lhs = toIntOrNull(_this__u8e3s4);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toByte(_this__u8e3s4) {
    var tmp0_elvis_lhs = toByteOrNull(_this__u8e3s4);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toShort(_this__u8e3s4) {
    var tmp0_elvis_lhs = toShortOrNull(_this__u8e3s4);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toLong_0(_this__u8e3s4) {
    var tmp0_elvis_lhs = toLongOrNull(_this__u8e3s4);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      numberFormatError(_this__u8e3s4);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function toDoubleOrNull(_this__u8e3s4) {
    var tmp$ret$3;
    // Inline function 'kotlin.takeIf' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    var tmp0_unsafeCast = +tmp$ret$0;
    tmp$ret$1 = tmp0_unsafeCast;
    var tmp1_takeIf = tmp$ret$1;
    // Inline function 'kotlin.contracts.contract' call
    var tmp;
    var tmp$ret$2;
    // Inline function 'kotlin.text.toDoubleOrNull.<anonymous>' call
    tmp$ret$2 = !((isNaN_0(tmp1_takeIf) ? !isNaN_2(_this__u8e3s4) : false) ? true : tmp1_takeIf === 0.0 ? isBlank(_this__u8e3s4) : false);
    if (tmp$ret$2) {
      tmp = tmp1_takeIf;
    } else {
      tmp = null;
    }
    tmp$ret$3 = tmp;
    return tmp$ret$3;
  }
  function Regex_init_$Init$(pattern, $this) {
    Regex.call($this, pattern, emptySet());
    return $this;
  }
  function Regex_init_$Create$(pattern) {
    return Regex_init_$Init$(pattern, Object.create(Regex.prototype));
  }
  function Companion_10() {
    Companion_instance_10 = this;
    this.ef_1 = new RegExp('[\\\\^$*+?.()|[\\]{}]', 'g');
    this.ff_1 = new RegExp('[\\\\$]', 'g');
    this.gf_1 = new RegExp('\\$', 'g');
  }
  Companion_10.prototype.hf = function (literal) {
    var tmp$ret$1;
    // Inline function 'kotlin.text.nativeReplace' call
    var tmp0_nativeReplace = this.ef_1;
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = literal;
    tmp$ret$1 = tmp$ret$0.replace(tmp0_nativeReplace, '\\$&');
    return tmp$ret$1;
  };
  Companion_10.prototype.if = function (literal) {
    var tmp$ret$1;
    // Inline function 'kotlin.text.nativeReplace' call
    var tmp0_nativeReplace = this.gf_1;
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = literal;
    tmp$ret$1 = tmp$ret$0.replace(tmp0_nativeReplace, '$$$$');
    return tmp$ret$1;
  };
  Companion_10.$metadata$ = objectMeta('Companion');
  var Companion_instance_10;
  function Companion_getInstance_10() {
    if (Companion_instance_10 == null)
      new Companion_10();
    return Companion_instance_10;
  }
  function Regex(pattern, options) {
    Companion_getInstance_10();
    this.jf_1 = pattern;
    this.kf_1 = toSet_0(options);
    this.lf_1 = new RegExp(pattern, toFlags(options, 'gu'));
    this.mf_1 = null;
    this.nf_1 = null;
  }
  Regex.prototype.of = function (input, startIndex) {
    if (startIndex < 0 ? true : startIndex > charSequenceLength(input)) {
      throw IndexOutOfBoundsException_init_$Create$('Start index out of bounds: ' + startIndex + ', input length: ' + charSequenceLength(input));
    }
    return findNext(this.lf_1, toString_3(input), startIndex, this.lf_1);
  };
  Regex.prototype.toString = function () {
    return this.lf_1.toString();
  };
  Regex.$metadata$ = classMeta('Regex');
  function toFlags(_this__u8e3s4, prepend) {
    return joinToString$default_0(_this__u8e3s4, '', prepend, null, 0, null, toFlags$lambda, 28, null);
  }
  function findNext(_this__u8e3s4, input, from, nextPattern) {
    _this__u8e3s4.lastIndex = from;
    var match = _this__u8e3s4.exec(input);
    if (match == null)
      return null;
    var range = numberRangeToNumber(match.index, _this__u8e3s4.lastIndex - 1 | 0);
    return new findNext$1(range, match, nextPattern, input);
  }
  function MatchGroup(value) {
    this.pf_1 = value;
  }
  MatchGroup.prototype.toString = function () {
    return 'MatchGroup(value=' + this.pf_1 + ')';
  };
  MatchGroup.prototype.hashCode = function () {
    return getStringHashCode(this.pf_1);
  };
  MatchGroup.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MatchGroup))
      return false;
    var tmp0_other_with_cast = other instanceof MatchGroup ? other : THROW_CCE();
    if (!(this.pf_1 === tmp0_other_with_cast.pf_1))
      return false;
    return true;
  };
  MatchGroup.$metadata$ = classMeta('MatchGroup');
  function toFlags$lambda(it) {
    return it.sf_1;
  }
  function findNext$o$groups$o$iterator$lambda(this$0) {
    return function (it) {
      return this$0.l(it);
    };
  }
  function findNext$1$groups$1($match, this$0) {
    this.tf_1 = $match;
    this.uf_1 = this$0;
    AbstractCollection.call(this);
  }
  findNext$1$groups$1.prototype.i = function () {
    return this.tf_1.length;
  };
  findNext$1$groups$1.prototype.f = function () {
    var tmp = asSequence(get_indices_1(this));
    return map_2(tmp, findNext$o$groups$o$iterator$lambda(this)).f();
  };
  findNext$1$groups$1.prototype.l = function (index) {
    var tmp$ret$1;
    // Inline function 'kotlin.js.get' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = this.tf_1;
    tmp$ret$1 = tmp$ret$0[index];
    var tmp0_safe_receiver = tmp$ret$1;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$3;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$2;
      // Inline function 'kotlin.text.<no name provided>.get.<anonymous>' call
      tmp$ret$2 = new MatchGroup(tmp0_safe_receiver);
      tmp$ret$3 = tmp$ret$2;
      tmp = tmp$ret$3;
    }
    return tmp;
  };
  findNext$1$groups$1.$metadata$ = classMeta(undefined, [MatchNamedGroupCollection], undefined, undefined, undefined, AbstractCollection.prototype);
  function findNext$1($range, $match, $nextPattern, $input) {
    this.yf_1 = $range;
    this.zf_1 = $match;
    this.ag_1 = $nextPattern;
    this.bg_1 = $input;
    this.vf_1 = $range;
    var tmp = this;
    tmp.wf_1 = new findNext$1$groups$1($match, this);
    this.xf_1 = null;
  }
  findNext$1.prototype.y6 = function () {
    return this.vf_1;
  };
  findNext$1.$metadata$ = classMeta(undefined, [MatchResult]);
  var STRING_CASE_INSENSITIVE_ORDER;
  function nativeLastIndexOf(_this__u8e3s4, str, fromIndex) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    return tmp$ret$0.lastIndexOf(str, fromIndex);
  }
  function substring_2(_this__u8e3s4, startIndex, endIndex) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    return tmp$ret$0.substring(startIndex, endIndex);
  }
  function substring_3(_this__u8e3s4, startIndex) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    return tmp$ret$0.substring(startIndex);
  }
  function compareTo(_this__u8e3s4, other, ignoreCase) {
    init_properties_string_kt_z8k4s7();
    if (ignoreCase) {
      var n1 = _this__u8e3s4.length;
      var n2 = other.length;
      var tmp$ret$0;
      // Inline function 'kotlin.comparisons.minOf' call
      tmp$ret$0 = Math.min(n1, n2);
      var min = tmp$ret$0;
      if (min === 0)
        return n1 - n2 | 0;
      var inductionVariable = 0;
      if (inductionVariable < min)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var thisChar = charSequenceGet(_this__u8e3s4, index);
          var otherChar = charSequenceGet(other, index);
          if (!equals_1(new Char_0(thisChar), new Char_0(otherChar))) {
            thisChar = uppercaseChar(thisChar);
            otherChar = uppercaseChar(otherChar);
            if (!equals_1(new Char_0(thisChar), new Char_0(otherChar))) {
              var tmp$ret$4;
              // Inline function 'kotlin.text.lowercaseChar' call
              var tmp0_lowercaseChar = thisChar;
              var tmp$ret$3;
              // Inline function 'kotlin.text.lowercase' call
              var tmp$ret$2;
              // Inline function 'kotlin.js.unsafeCast' call
              var tmp$ret$1;
              // Inline function 'kotlin.js.asDynamic' call
              var tmp0_asDynamic = toString_1(tmp0_lowercaseChar);
              tmp$ret$1 = tmp0_asDynamic;
              var tmp1_unsafeCast = tmp$ret$1.toLowerCase();
              tmp$ret$2 = tmp1_unsafeCast;
              tmp$ret$3 = tmp$ret$2;
              tmp$ret$4 = charSequenceGet(tmp$ret$3, 0);
              thisChar = tmp$ret$4;
              var tmp$ret$8;
              // Inline function 'kotlin.text.lowercaseChar' call
              var tmp1_lowercaseChar = otherChar;
              var tmp$ret$7;
              // Inline function 'kotlin.text.lowercase' call
              var tmp$ret$6;
              // Inline function 'kotlin.js.unsafeCast' call
              var tmp$ret$5;
              // Inline function 'kotlin.js.asDynamic' call
              var tmp0_asDynamic_0 = toString_1(tmp1_lowercaseChar);
              tmp$ret$5 = tmp0_asDynamic_0;
              var tmp1_unsafeCast_0 = tmp$ret$5.toLowerCase();
              tmp$ret$6 = tmp1_unsafeCast_0;
              tmp$ret$7 = tmp$ret$6;
              tmp$ret$8 = charSequenceGet(tmp$ret$7, 0);
              otherChar = tmp$ret$8;
              if (!equals_1(new Char_0(thisChar), new Char_0(otherChar))) {
                return Char__compareTo_impl_ypi4mb(thisChar, otherChar);
              }
            }
          }
        }
         while (inductionVariable < min);
      return n1 - n2 | 0;
    } else {
      return compareTo_0(_this__u8e3s4, other);
    }
  }
  function toLowerCase(_this__u8e3s4) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    return tmp$ret$0.toLowerCase();
  }
  function concatToString(_this__u8e3s4, startIndex, endIndex) {
    init_properties_string_kt_z8k4s7();
    Companion_getInstance().t2(startIndex, endIndex, _this__u8e3s4.length);
    var result = '';
    var inductionVariable = startIndex;
    if (inductionVariable < endIndex)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        result = result + new Char_0(_this__u8e3s4[index]);
      }
       while (inductionVariable < endIndex);
    return result;
  }
  function nativeIndexOf(_this__u8e3s4, str, fromIndex) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    return tmp$ret$0.indexOf(str, fromIndex);
  }
  function lowercase_0(_this__u8e3s4) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    return tmp$ret$0.toLowerCase();
  }
  function nativeReplace(_this__u8e3s4, pattern, replacement) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    return tmp$ret$0.replace(pattern, replacement);
  }
  function nativeStartsWith(_this__u8e3s4, s, position) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    return tmp$ret$0.startsWith(s, position);
  }
  function uppercase_0(_this__u8e3s4) {
    init_properties_string_kt_z8k4s7();
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    return tmp$ret$0.toUpperCase();
  }
  function sam$kotlin_Comparator$0_2(function_0) {
    this.cg_1 = function_0;
  }
  sam$kotlin_Comparator$0_2.prototype.x = function (a, b) {
    return this.cg_1(a, b);
  };
  sam$kotlin_Comparator$0_2.prototype.compare = function (a, b) {
    return this.x(a, b);
  };
  sam$kotlin_Comparator$0_2.$metadata$ = classMeta('sam$kotlin_Comparator$0', [Comparator]);
  function STRING_CASE_INSENSITIVE_ORDER$lambda(a, b) {
    init_properties_string_kt_z8k4s7();
    return compareTo(a, b, true);
  }
  var properties_initialized_string_kt_4g1sj;
  function init_properties_string_kt_z8k4s7() {
    if (properties_initialized_string_kt_4g1sj) {
    } else {
      properties_initialized_string_kt_4g1sj = true;
      var tmp = STRING_CASE_INSENSITIVE_ORDER$lambda;
      STRING_CASE_INSENSITIVE_ORDER = new sam$kotlin_Comparator$0_2(tmp);
    }
  }
  function isBlank(_this__u8e3s4) {
    var tmp;
    if (charSequenceLength(_this__u8e3s4) === 0) {
      tmp = true;
    } else {
      var tmp$ret$0;
      $l$block_0: {
        // Inline function 'kotlin.collections.all' call
        var tmp0_all = get_indices_2(_this__u8e3s4);
        var tmp_0;
        if (isInterface(tmp0_all, Collection)) {
          tmp_0 = tmp0_all.p();
        } else {
          tmp_0 = false;
        }
        if (tmp_0) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
        var inductionVariable = tmp0_all.m1_1;
        var last = tmp0_all.n1_1;
        if (inductionVariable <= last)
          do {
            var element = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var tmp$ret$1;
            // Inline function 'kotlin.text.isBlank.<anonymous>' call
            tmp$ret$1 = isWhitespace(charSequenceGet(_this__u8e3s4, element));
            if (!tmp$ret$1) {
              tmp$ret$0 = false;
              break $l$block_0;
            }
          }
           while (!(element === last));
        tmp$ret$0 = true;
      }
      tmp = tmp$ret$0;
    }
    return tmp;
  }
  function nativeIndexOf_0(_this__u8e3s4, ch, fromIndex) {
    var tmp$ret$1;
    // Inline function 'kotlin.text.nativeIndexOf' call
    var tmp0_nativeIndexOf = toString_1(ch);
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    tmp$ret$1 = tmp$ret$0.indexOf(tmp0_nativeIndexOf, fromIndex);
    return tmp$ret$1;
  }
  function regionMatches(_this__u8e3s4, thisOffset, other, otherOffset, length, ignoreCase) {
    return regionMatchesImpl(_this__u8e3s4, thisOffset, other, otherOffset, length, ignoreCase);
  }
  function replace(_this__u8e3s4, oldValue, newValue, ignoreCase) {
    var tmp$ret$1;
    // Inline function 'kotlin.text.nativeReplace' call
    var tmp0_nativeReplace = new RegExp(Companion_getInstance_10().hf(oldValue), ignoreCase ? 'gui' : 'gu');
    var tmp1_nativeReplace = Companion_getInstance_10().if(newValue);
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    tmp$ret$1 = tmp$ret$0.replace(tmp0_nativeReplace, tmp1_nativeReplace);
    return tmp$ret$1;
  }
  function replace$default(_this__u8e3s4, oldValue, newValue, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return replace(_this__u8e3s4, oldValue, newValue, ignoreCase);
  }
  function replaceFirst(_this__u8e3s4, oldValue, newValue, ignoreCase) {
    var tmp$ret$1;
    // Inline function 'kotlin.text.nativeReplace' call
    var tmp0_nativeReplace = new RegExp(Companion_getInstance_10().hf(oldValue), ignoreCase ? 'ui' : 'u');
    var tmp1_nativeReplace = Companion_getInstance_10().if(newValue);
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    tmp$ret$1 = tmp$ret$0.replace(tmp0_nativeReplace, tmp1_nativeReplace);
    return tmp$ret$1;
  }
  function replaceFirst$default(_this__u8e3s4, oldValue, newValue, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return replaceFirst(_this__u8e3s4, oldValue, newValue, ignoreCase);
  }
  function equals_0(_this__u8e3s4, other, ignoreCase) {
    if (_this__u8e3s4 == null)
      return other == null;
    if (other == null)
      return false;
    if (!ignoreCase)
      return _this__u8e3s4 == other;
    if (!(_this__u8e3s4.length === other.length))
      return false;
    var inductionVariable = 0;
    var last = _this__u8e3s4.length;
    if (inductionVariable < last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var thisChar = charSequenceGet(_this__u8e3s4, index);
        var otherChar = charSequenceGet(other, index);
        if (!equals(thisChar, otherChar, ignoreCase)) {
          return false;
        }
      }
       while (inductionVariable < last);
    return true;
  }
  function startsWith_1(_this__u8e3s4, prefix, ignoreCase) {
    if (!ignoreCase) {
      var tmp$ret$1;
      // Inline function 'kotlin.text.nativeStartsWith' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = _this__u8e3s4;
      tmp$ret$1 = tmp$ret$0.startsWith(prefix, 0);
      return tmp$ret$1;
    } else
      return regionMatches(_this__u8e3s4, 0, prefix, 0, prefix.length, ignoreCase);
  }
  function startsWith$default_1(_this__u8e3s4, prefix, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignoreCase = false;
    return startsWith_1(_this__u8e3s4, prefix, ignoreCase);
  }
  function capitalize(_this__u8e3s4) {
    var tmp;
    var tmp$ret$0;
    // Inline function 'kotlin.text.isNotEmpty' call
    tmp$ret$0 = charSequenceLength(_this__u8e3s4) > 0;
    if (tmp$ret$0) {
      var tmp$ret$4;
      // Inline function 'kotlin.text.uppercase' call
      var tmp$ret$2;
      // Inline function 'kotlin.text.substring' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = _this__u8e3s4;
      tmp$ret$2 = tmp$ret$1.substring(0, 1);
      var tmp0_uppercase = tmp$ret$2;
      var tmp$ret$3;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$3 = tmp0_uppercase;
      tmp$ret$4 = tmp$ret$3.toUpperCase();
      var tmp_0 = tmp$ret$4;
      var tmp$ret$6;
      // Inline function 'kotlin.text.substring' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$5 = _this__u8e3s4;
      tmp$ret$6 = tmp$ret$5.substring(1);
      tmp = tmp_0 + tmp$ret$6;
    } else {
      tmp = _this__u8e3s4;
    }
    return tmp;
  }
  function startsWith_2(_this__u8e3s4, prefix, startIndex, ignoreCase) {
    if (!ignoreCase) {
      var tmp$ret$1;
      // Inline function 'kotlin.text.nativeStartsWith' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = _this__u8e3s4;
      tmp$ret$1 = tmp$ret$0.startsWith(prefix, startIndex);
      return tmp$ret$1;
    } else
      return regionMatches(_this__u8e3s4, startIndex, prefix, 0, prefix.length, ignoreCase);
  }
  function startsWith$default_2(_this__u8e3s4, prefix, startIndex, ignoreCase, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      ignoreCase = false;
    return startsWith_2(_this__u8e3s4, prefix, startIndex, ignoreCase);
  }
  function _Char___init__impl__6a9atx(value) {
    return value;
  }
  function _get_value__a43j40($this) {
    return $this;
  }
  function _Char___init__impl__6a9atx_0(code) {
    var tmp$ret$0;
    // Inline function 'kotlin.UShort.toInt' call
    tmp$ret$0 = _UShort___get_data__impl__g0245(code) & 65535;
    var tmp = _Char___init__impl__6a9atx(tmp$ret$0);
    return tmp;
  }
  function Char__compareTo_impl_ypi4mb($this, other) {
    return _get_value__a43j40($this) - _get_value__a43j40(other) | 0;
  }
  function Char__compareTo_impl_ypi4mb_0($this, other) {
    var tmp = $this.q1_1;
    return Char__compareTo_impl_ypi4mb(tmp, other instanceof Char_0 ? other.q1_1 : THROW_CCE());
  }
  function Char__minus_impl_a2frrh($this, other) {
    return _get_value__a43j40($this) - _get_value__a43j40(other) | 0;
  }
  function Char__minus_impl_a2frrh_0($this, other) {
    return numberToChar(_get_value__a43j40($this) - other | 0);
  }
  function Char__toInt_impl_vasixd($this) {
    return _get_value__a43j40($this);
  }
  function Char__equals_impl_x6719k($this, other) {
    if (!(other instanceof Char_0))
      return false;
    return _get_value__a43j40($this) === _get_value__a43j40(other.q1_1);
  }
  function Char__hashCode_impl_otmys($this) {
    return _get_value__a43j40($this);
  }
  function toString_1($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = String.fromCharCode(_get_value__a43j40($this));
    tmp$ret$0 = tmp0_unsafeCast;
    return tmp$ret$0;
  }
  function Companion_11() {
    Companion_instance_11 = this;
    this.dg_1 = _Char___init__impl__6a9atx(0);
    this.eg_1 = _Char___init__impl__6a9atx(65535);
    this.fg_1 = _Char___init__impl__6a9atx(55296);
    this.gg_1 = _Char___init__impl__6a9atx(56319);
    this.hg_1 = _Char___init__impl__6a9atx(56320);
    this.ig_1 = _Char___init__impl__6a9atx(57343);
    this.jg_1 = _Char___init__impl__6a9atx(55296);
    this.kg_1 = _Char___init__impl__6a9atx(57343);
    this.lg_1 = 2;
    this.mg_1 = 16;
  }
  Companion_11.$metadata$ = objectMeta('Companion');
  var Companion_instance_11;
  function Companion_getInstance_11() {
    if (Companion_instance_11 == null)
      new Companion_11();
    return Companion_instance_11;
  }
  function Char_0(value) {
    Companion_getInstance_11();
    this.q1_1 = value;
  }
  Char_0.prototype.ng = function (other) {
    return Char__compareTo_impl_ypi4mb(this.q1_1, other);
  };
  Char_0.prototype.o7 = function (other) {
    return Char__compareTo_impl_ypi4mb_0(this, other);
  };
  Char_0.prototype.equals = function (other) {
    return Char__equals_impl_x6719k(this.q1_1, other);
  };
  Char_0.prototype.hashCode = function () {
    return Char__hashCode_impl_otmys(this.q1_1);
  };
  Char_0.prototype.toString = function () {
    return toString_1(this.q1_1);
  };
  Char_0.$metadata$ = classMeta('Char', [Comparable]);
  function Iterable_0() {
  }
  Iterable_0.$metadata$ = interfaceMeta('Iterable');
  function List_0() {
  }
  List_0.$metadata$ = interfaceMeta('List', [Collection]);
  function MutableSet() {
  }
  MutableSet.$metadata$ = interfaceMeta('MutableSet', [Set, MutableCollection]);
  function Collection() {
  }
  Collection.$metadata$ = interfaceMeta('Collection', [Iterable_0]);
  function MutableList_0() {
  }
  MutableList_0.$metadata$ = interfaceMeta('MutableList', [List_0, MutableCollection]);
  function Entry() {
  }
  Entry.$metadata$ = interfaceMeta('Entry');
  function Map() {
  }
  Map.$metadata$ = interfaceMeta('Map');
  function Set() {
  }
  Set.$metadata$ = interfaceMeta('Set', [Collection]);
  function MutableEntry() {
  }
  MutableEntry.$metadata$ = interfaceMeta('MutableEntry', [Entry]);
  function MutableMap() {
  }
  MutableMap.$metadata$ = interfaceMeta('MutableMap', [Map]);
  function MutableCollection() {
  }
  MutableCollection.$metadata$ = interfaceMeta('MutableCollection', [Collection, MutableIterable]);
  function MutableIterable() {
  }
  MutableIterable.$metadata$ = interfaceMeta('MutableIterable', [Iterable_0]);
  function Companion_12() {
    Companion_instance_12 = this;
  }
  Companion_12.$metadata$ = objectMeta('Companion');
  var Companion_instance_12;
  function Companion_getInstance_12() {
    if (Companion_instance_12 == null)
      new Companion_12();
    return Companion_instance_12;
  }
  function Enum(name, ordinal) {
    Companion_getInstance_12();
    this.c2_1 = name;
    this.d2_1 = ordinal;
  }
  Enum.prototype.g2 = function (other) {
    return compareTo_0(this.d2_1, other.d2_1);
  };
  Enum.prototype.o7 = function (other) {
    return this.g2(other instanceof Enum ? other : THROW_CCE());
  };
  Enum.prototype.equals = function (other) {
    return this === other;
  };
  Enum.prototype.hashCode = function () {
    return identityHashCode(this);
  };
  Enum.prototype.toString = function () {
    return this.c2_1;
  };
  Enum.$metadata$ = classMeta('Enum', [Comparable]);
  function arrayOf(elements) {
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = elements;
    tmp$ret$1 = tmp$ret$0;
    return tmp$ret$1;
  }
  function longArrayOf(elements) {
    return elements;
  }
  function intArrayOf(elements) {
    return elements;
  }
  function doubleArrayOf(elements) {
    return elements;
  }
  function floatArrayOf(elements) {
    return elements;
  }
  function toString_2(_this__u8e3s4) {
    var tmp0_safe_receiver = _this__u8e3s4;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : toString_3(tmp0_safe_receiver);
    return tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs;
  }
  function charArrayOf(elements) {
    return elements;
  }
  function plus_1(_this__u8e3s4, other) {
    var tmp2_safe_receiver = _this__u8e3s4;
    var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : toString_3(tmp2_safe_receiver);
    var tmp = tmp3_elvis_lhs == null ? 'null' : tmp3_elvis_lhs;
    var tmp0_safe_receiver = other;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : toString_3(tmp0_safe_receiver);
    return tmp + (tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs);
  }
  function fillArrayVal(array, initValue) {
    var inductionVariable = 0;
    var last = array.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        array[i] = initValue;
      }
       while (!(i === last));
    return array;
  }
  function arrayIterator(array) {
    return new arrayIterator$1(array);
  }
  function booleanArray(size) {
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'withType' call
    var tmp0_withType = fillArrayVal(Array(size), false);
    tmp0_withType.$type$ = 'BooleanArray';
    tmp$ret$0 = tmp0_withType;
    var tmp1_unsafeCast = tmp$ret$0;
    tmp$ret$1 = tmp1_unsafeCast;
    return tmp$ret$1;
  }
  function charArray(size) {
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'withType' call
    var tmp0_withType = new Uint16Array(size);
    tmp0_withType.$type$ = 'CharArray';
    tmp$ret$0 = tmp0_withType;
    var tmp1_unsafeCast = tmp$ret$0;
    tmp$ret$1 = tmp1_unsafeCast;
    return tmp$ret$1;
  }
  function longArray(size) {
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'withType' call
    var tmp0_withType = fillArrayVal(Array(size), new Long(0, 0));
    tmp0_withType.$type$ = 'LongArray';
    tmp$ret$0 = tmp0_withType;
    var tmp1_unsafeCast = tmp$ret$0;
    tmp$ret$1 = tmp1_unsafeCast;
    return tmp$ret$1;
  }
  function charArrayOf_0(arr) {
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'withType' call
    var tmp0_withType = new Uint16Array(arr);
    tmp0_withType.$type$ = 'CharArray';
    tmp$ret$0 = tmp0_withType;
    var tmp1_unsafeCast = tmp$ret$0;
    tmp$ret$1 = tmp1_unsafeCast;
    return tmp$ret$1;
  }
  function longArrayOf_0(arr) {
    var tmp$ret$2;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$1;
    // Inline function 'withType' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = arr;
    var tmp0_withType = tmp$ret$0.slice();
    tmp0_withType.$type$ = 'LongArray';
    tmp$ret$1 = tmp0_withType;
    var tmp1_unsafeCast = tmp$ret$1;
    tmp$ret$2 = tmp1_unsafeCast;
    return tmp$ret$2;
  }
  function arrayIterator$1($array) {
    this.pg_1 = $array;
    this.og_1 = 0;
  }
  arrayIterator$1.prototype.g = function () {
    return !(this.og_1 === this.pg_1.length);
  };
  arrayIterator$1.prototype.h = function () {
    var tmp;
    if (!(this.og_1 === this.pg_1.length)) {
      var tmp0_this = this;
      var tmp1 = tmp0_this.og_1;
      tmp0_this.og_1 = tmp1 + 1 | 0;
      tmp = this.pg_1[tmp1];
    } else {
      throw NoSuchElementException_init_$Create$_0('' + this.og_1);
    }
    return tmp;
  };
  arrayIterator$1.$metadata$ = classMeta(undefined, [Iterator_1]);
  function get_buf() {
    init_properties_bitUtils_kt_cxtw9i();
    return buf;
  }
  var buf;
  function get_bufFloat64() {
    init_properties_bitUtils_kt_cxtw9i();
    return bufFloat64;
  }
  var bufFloat64;
  var bufFloat32;
  function get_bufInt32() {
    init_properties_bitUtils_kt_cxtw9i();
    return bufInt32;
  }
  var bufInt32;
  function get_lowIndex() {
    init_properties_bitUtils_kt_cxtw9i();
    return lowIndex;
  }
  var lowIndex;
  function get_highIndex() {
    init_properties_bitUtils_kt_cxtw9i();
    return highIndex;
  }
  var highIndex;
  function getNumberHashCode(obj) {
    init_properties_bitUtils_kt_cxtw9i();
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = jsBitwiseOr(obj, 0);
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_unsafeCast;
    tmp$ret$1 = tmp$ret$0;
    if (tmp$ret$1 === obj) {
      return numberToInt(obj);
    }
    get_bufFloat64()[0] = obj;
    return imul(get_bufInt32()[get_highIndex()], 31) + get_bufInt32()[get_lowIndex()] | 0;
  }
  var properties_initialized_bitUtils_kt_i2bo3e;
  function init_properties_bitUtils_kt_cxtw9i() {
    if (properties_initialized_bitUtils_kt_i2bo3e) {
    } else {
      properties_initialized_bitUtils_kt_i2bo3e = true;
      buf = new ArrayBuffer(8);
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = new Float64Array(get_buf());
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_unsafeCast;
      tmp$ret$1 = tmp$ret$0;
      bufFloat64 = tmp$ret$1;
      var tmp$ret$1_0;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast_0 = new Float32Array(get_buf());
      var tmp$ret$0_0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0_0 = tmp0_unsafeCast_0;
      tmp$ret$1_0 = tmp$ret$0_0;
      bufFloat32 = tmp$ret$1_0;
      var tmp$ret$1_1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast_1 = new Int32Array(get_buf());
      var tmp$ret$0_1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0_1 = tmp0_unsafeCast_1;
      tmp$ret$1_1 = tmp$ret$0_1;
      bufInt32 = tmp$ret$1_1;
      var tmp$ret$1_2;
      // Inline function 'kotlin.run' call
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0_2;
      // Inline function 'kotlin.js.lowIndex.<anonymous>' call
      get_bufFloat64()[0] = -1.0;
      tmp$ret$0_2 = !(get_bufInt32()[0] === 0) ? 1 : 0;
      tmp$ret$1_2 = tmp$ret$0_2;
      lowIndex = tmp$ret$1_2;
      highIndex = 1 - get_lowIndex() | 0;
    }
  }
  function charSequenceGet(a, index) {
    var tmp;
    if (isString(a)) {
      var tmp$ret$4;
      // Inline function 'kotlin.Char' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = a;
      var tmp0_unsafeCast = tmp$ret$0.charCodeAt(index);
      tmp$ret$1 = tmp0_unsafeCast;
      var tmp1_Char = tmp$ret$1;
      var tmp_0;
      var tmp$ret$2;
      // Inline function 'kotlin.code' call
      Companion_getInstance_11();
      var tmp0__get_code__88qj9g = _Char___init__impl__6a9atx(0);
      tmp$ret$2 = Char__toInt_impl_vasixd(tmp0__get_code__88qj9g);
      if (tmp1_Char < tmp$ret$2) {
        tmp_0 = true;
      } else {
        var tmp$ret$3;
        // Inline function 'kotlin.code' call
        Companion_getInstance_11();
        var tmp1__get_code__adl84j = _Char___init__impl__6a9atx(65535);
        tmp$ret$3 = Char__toInt_impl_vasixd(tmp1__get_code__adl84j);
        tmp_0 = tmp1_Char > tmp$ret$3;
      }
      if (tmp_0) {
        throw IllegalArgumentException_init_$Create$_0('Invalid Char code: ' + tmp1_Char);
      }
      tmp$ret$4 = numberToChar(tmp1_Char);
      tmp = tmp$ret$4;
    } else {
      tmp = a.w8(index);
    }
    return tmp;
  }
  function isString(a) {
    return typeof a === 'string';
  }
  function charSequenceLength(a) {
    var tmp;
    if (isString(a)) {
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = a;
      var tmp0_unsafeCast = tmp$ret$0.length;
      tmp$ret$1 = tmp0_unsafeCast;
      tmp = tmp$ret$1;
    } else {
      tmp = a.v8();
    }
    return tmp;
  }
  function charSequenceSubSequence(a, startIndex, endIndex) {
    var tmp;
    if (isString(a)) {
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = a;
      var tmp0_unsafeCast = tmp$ret$0.substring(startIndex, endIndex);
      tmp$ret$1 = tmp0_unsafeCast;
      tmp = tmp$ret$1;
    } else {
      tmp = a.x8(startIndex, endIndex);
    }
    return tmp;
  }
  function arrayToString(array) {
    return joinToString$default(array, ', ', '[', ']', 0, null, arrayToString$lambda, 24, null);
  }
  function contentEqualsInternal(_this__u8e3s4, other) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    var a = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$1 = other;
    var b = tmp$ret$1;
    if (a === b)
      return true;
    if (((a == null ? true : b == null) ? true : !isArrayish(b)) ? true : a.length != b.length)
      return false;
    var inductionVariable = 0;
    var last = a.length;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!equals_1(a[i], b[i])) {
          return false;
        }
      }
       while (inductionVariable < last);
    return true;
  }
  function contentHashCodeInternal(_this__u8e3s4) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    var a = tmp$ret$0;
    if (a == null)
      return 0;
    var result = 1;
    var inductionVariable = 0;
    var last = a.length;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        result = imul(result, 31) + hashCode_0(a[i]) | 0;
      }
       while (inductionVariable < last);
    return result;
  }
  function arrayToString$lambda(it) {
    return toString_3(it);
  }
  function compareTo_0(a, b) {
    var tmp0_subject = typeof a;
    var tmp;
    switch (tmp0_subject) {
      case 'number':
        var tmp_0;
        if (typeof b === 'number') {
          tmp_0 = doubleCompareTo(a, b);
        } else {
          if (b instanceof Long) {
            tmp_0 = doubleCompareTo(a, b.qg());
          } else {
            tmp_0 = primitiveCompareTo(a, b);
          }
        }

        tmp = tmp_0;
        break;
      case 'string':
      case 'boolean':
        tmp = primitiveCompareTo(a, b);
        break;
      default:
        tmp = compareToDoNotIntrinsicify(a, b);
        break;
    }
    return tmp;
  }
  function doubleCompareTo(a, b) {
    var tmp;
    if (a < b) {
      tmp = -1;
    } else if (a > b) {
      tmp = 1;
    } else if (a === b) {
      var tmp_0;
      if (a !== 0) {
        tmp_0 = 0;
      } else {
        var tmp$ret$0;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$0 = 1;
        var ia = tmp$ret$0 / a;
        var tmp_1;
        var tmp$ret$1;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$1 = 1;
        if (ia === tmp$ret$1 / b) {
          tmp_1 = 0;
        } else {
          if (ia < 0) {
            tmp_1 = -1;
          } else {
            tmp_1 = 1;
          }
        }
        tmp_0 = tmp_1;
      }
      tmp = tmp_0;
    } else if (a !== a) {
      tmp = b !== b ? 0 : 1;
    } else {
      tmp = -1;
    }
    return tmp;
  }
  function primitiveCompareTo(a, b) {
    return a < b ? -1 : a > b ? 1 : 0;
  }
  function compareToDoNotIntrinsicify(a, b) {
    return a.o7(b);
  }
  function identityHashCode(obj) {
    return getObjectHashCode(obj);
  }
  function getObjectHashCode(obj) {
    if (!jsIn('kotlinHashCodeValue$', obj)) {
      var hash = jsBitwiseOr(Math.random() * 4.294967296E9, 0);
      var descriptor = new Object();
      descriptor.value = hash;
      descriptor.enumerable = false;
      Object.defineProperty(obj, 'kotlinHashCodeValue$', descriptor);
    }
    var tmp$ret$0;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = obj['kotlinHashCodeValue$'];
    tmp$ret$0 = tmp0_unsafeCast;
    return tmp$ret$0;
  }
  function toString_3(o) {
    var tmp;
    if (o == null) {
      tmp = 'null';
    } else if (isArrayish(o)) {
      tmp = '[...]';
    } else {
      var tmp$ret$0;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = o.toString();
      tmp$ret$0 = tmp0_unsafeCast;
      tmp = tmp$ret$0;
    }
    return tmp;
  }
  function equals_1(obj1, obj2) {
    if (obj1 == null) {
      return obj2 == null;
    }
    if (obj2 == null) {
      return false;
    }
    if (typeof obj1 === 'object' ? typeof obj1.equals === 'function' : false) {
      return obj1.equals(obj2);
    }
    if (obj1 !== obj1) {
      return obj2 !== obj2;
    }
    if (typeof obj1 === 'number' ? typeof obj2 === 'number' : false) {
      var tmp;
      if (obj1 === obj2) {
        var tmp_0;
        if (obj1 !== 0) {
          tmp_0 = true;
        } else {
          var tmp$ret$0;
          // Inline function 'kotlin.js.asDynamic' call
          tmp$ret$0 = 1;
          var tmp_1 = tmp$ret$0 / obj1;
          var tmp$ret$1;
          // Inline function 'kotlin.js.asDynamic' call
          tmp$ret$1 = 1;
          tmp_0 = tmp_1 === tmp$ret$1 / obj2;
        }
        tmp = tmp_0;
      } else {
        tmp = false;
      }
      return tmp;
    }
    return obj1 === obj2;
  }
  function hashCode_0(obj) {
    if (obj == null)
      return 0;
    var tmp0_subject = typeof obj;
    var tmp;
    switch (tmp0_subject) {
      case 'object':
        tmp = 'function' === typeof obj.hashCode ? obj.hashCode() : getObjectHashCode(obj);
        break;
      case 'function':
        tmp = getObjectHashCode(obj);
        break;
      case 'number':
        tmp = getNumberHashCode(obj);
        break;
      case 'boolean':
        var tmp_0;
        var tmp$ret$0;
        // Inline function 'kotlin.js.unsafeCast' call
        tmp$ret$0 = obj;

        if (tmp$ret$0) {
          tmp_0 = 1;
        } else {
          tmp_0 = 0;
        }

        tmp = tmp_0;
        break;
      default:
        tmp = getStringHashCode(String(obj));
        break;
    }
    return tmp;
  }
  function getStringHashCode(str) {
    var hash = 0;
    var length = str.length;
    var inductionVariable = 0;
    var last = length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$0 = str;
        var code = tmp$ret$0.charCodeAt(i);
        hash = imul(hash, 31) + code | 0;
      }
       while (!(i === last));
    return hash;
  }
  function boxIntrinsic(x) {
    throw IllegalStateException_init_$Create$('Should be lowered');
  }
  function unboxIntrinsic(x) {
    throw IllegalStateException_init_$Create$('Should be lowered');
  }
  function captureStack(instance, constructorFunction) {
    if (Error.captureStackTrace != null) {
      Error.captureStackTrace(instance, constructorFunction);
    } else {
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = instance;
      tmp$ret$0.stack = (new Error()).stack;
    }
  }
  function extendThrowable(this_, message, cause) {
    Error.call(this_);
    setPropertiesToThrowableInstance(this_, message, cause);
  }
  function setPropertiesToThrowableInstance(this_, message, cause) {
    if (!hasOwnPrototypeProperty(this_, 'message')) {
      var tmp;
      if (message == null) {
        var tmp_0;
        if (!(message === null)) {
          var tmp0_safe_receiver = cause;
          var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.toString();
          tmp_0 = tmp1_elvis_lhs == null ? undefined : tmp1_elvis_lhs;
        } else {
          tmp_0 = undefined;
        }
        tmp = tmp_0;
      } else {
        tmp = message;
      }
      this_.message = tmp;
    }
    if (!hasOwnPrototypeProperty(this_, 'cause')) {
      this_.cause = cause;
    }
    this_.name = Object.getPrototypeOf(this_).constructor.name;
  }
  function hasOwnPrototypeProperty(o, name) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = Object.getPrototypeOf(o).hasOwnProperty(name);
    tmp$ret$0 = tmp0_unsafeCast;
    return tmp$ret$0;
  }
  function ensureNotNull(v) {
    var tmp;
    if (v == null) {
      THROW_NPE();
    } else {
      tmp = v;
    }
    return tmp;
  }
  function THROW_NPE() {
    throw NullPointerException_init_$Create$();
  }
  function noWhenBranchMatchedException() {
    throw NoWhenBranchMatchedException_init_$Create$();
  }
  function THROW_CCE() {
    throw ClassCastException_init_$Create$();
  }
  function throwUninitializedPropertyAccessException(name) {
    throw UninitializedPropertyAccessException_init_$Create$('lateinit property ' + name + ' has not been initialized');
  }
  function throwKotlinNothingValueException() {
    throw KotlinNothingValueException_init_$Create$();
  }
  function emptyArray() {
    return [];
  }
  function lazy(initializer) {
    return new UnsafeLazyImpl(initializer);
  }
  function fillFrom(src, dst) {
    var srcLen = src.length;
    var dstLen = dst.length;
    var index = 0;
    var tmp$ret$0;
    // Inline function 'kotlin.js.unsafeCast' call
    tmp$ret$0 = dst;
    var arr = tmp$ret$0;
    while (index < srcLen ? index < dstLen : false) {
      var tmp = index;
      var tmp0 = index;
      index = tmp0 + 1 | 0;
      arr[tmp] = src[tmp0];
    }
    return dst;
  }
  function arrayCopyResize(source, newSize, defaultValue) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = source.slice(0, newSize);
    tmp$ret$0 = tmp0_unsafeCast;
    var result = tmp$ret$0;
    // Inline function 'kotlin.copyArrayType' call
    if (source.$type$ !== undefined) {
      result.$type$ = source.$type$;
    }
    var index = source.length;
    if (newSize > index) {
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = result;
      tmp$ret$1.length = newSize;
      while (index < newSize) {
        var tmp0 = index;
        index = tmp0 + 1 | 0;
        result[tmp0] = defaultValue;
      }
    }
    return result;
  }
  function copyArrayType(from, to) {
    if (from.$type$ !== undefined) {
      to.$type$ = from.$type$;
    }
  }
  function Companion_13() {
    Companion_instance_13 = this;
    this.rg_1 = new Long(0, -2147483648);
    this.sg_1 = new Long(-1, 2147483647);
    this.tg_1 = 8;
    this.ug_1 = 64;
  }
  Companion_13.$metadata$ = objectMeta('Companion');
  var Companion_instance_13;
  function Companion_getInstance_13() {
    if (Companion_instance_13 == null)
      new Companion_13();
    return Companion_instance_13;
  }
  function Long(low, high) {
    Companion_getInstance_13();
    Number_0.call(this);
    this.y5_1 = low;
    this.z5_1 = high;
  }
  Long.prototype.vg = function (other) {
    return this.c6(toLong_1(other));
  };
  Long.prototype.c6 = function (other) {
    return compare(this, other);
  };
  Long.prototype.o7 = function (other) {
    return this.c6(other instanceof Long ? other : THROW_CCE());
  };
  Long.prototype.wg = function (other) {
    return this.e6(toLong_1(other));
  };
  Long.prototype.e6 = function (other) {
    return add(this, other);
  };
  Long.prototype.xg = function (other) {
    return this.f6(toLong_1(other));
  };
  Long.prototype.f6 = function (other) {
    return subtract(this, other);
  };
  Long.prototype.yg = function (other) {
    return this.d6(toLong_1(other));
  };
  Long.prototype.d6 = function (other) {
    return multiply(this, other);
  };
  Long.prototype.zg = function (other) {
    return this.b6(toLong_1(other));
  };
  Long.prototype.b6 = function (other) {
    return divide(this, other);
  };
  Long.prototype.ah = function (other) {
    return this.t8(toLong_1(other));
  };
  Long.prototype.t8 = function (other) {
    return modulo(this, other);
  };
  Long.prototype.bh = function () {
    return this.e6(new Long(1, 0));
  };
  Long.prototype.ch = function () {
    return this.f6(new Long(1, 0));
  };
  Long.prototype.a6 = function () {
    return this.dh().e6(new Long(1, 0));
  };
  Long.prototype.e8 = function (bitCount) {
    return shiftLeft(this, bitCount);
  };
  Long.prototype.f8 = function (bitCount) {
    return shiftRightUnsigned(this, bitCount);
  };
  Long.prototype.m7 = function (other) {
    return new Long(this.y5_1 & other.y5_1, this.z5_1 & other.z5_1);
  };
  Long.prototype.g8 = function (other) {
    return new Long(this.y5_1 | other.y5_1, this.z5_1 | other.z5_1);
  };
  Long.prototype.u8 = function (other) {
    return new Long(this.y5_1 ^ other.y5_1, this.z5_1 ^ other.z5_1);
  };
  Long.prototype.dh = function () {
    return new Long(~this.y5_1, ~this.z5_1);
  };
  Long.prototype.u7 = function () {
    return this.y5_1;
  };
  Long.prototype.qg = function () {
    return toNumber(this);
  };
  Long.prototype.valueOf = function () {
    return this.qg();
  };
  Long.prototype.equals = function (other) {
    var tmp;
    if (other instanceof Long) {
      tmp = equalsLong(this, other);
    } else {
      tmp = false;
    }
    return tmp;
  };
  Long.prototype.hashCode = function () {
    return hashCode_1(this);
  };
  Long.prototype.toString = function () {
    return toStringImpl(this, 10);
  };
  Long.$metadata$ = classMeta('Long', [Comparable], undefined, undefined, undefined, Number_0.prototype);
  function get_ZERO() {
    init_properties_longjs_kt_ttk8rv();
    return ZERO;
  }
  var ZERO;
  function get_ONE() {
    init_properties_longjs_kt_ttk8rv();
    return ONE;
  }
  var ONE;
  function get_NEG_ONE() {
    init_properties_longjs_kt_ttk8rv();
    return NEG_ONE;
  }
  var NEG_ONE;
  function get_MAX_VALUE() {
    init_properties_longjs_kt_ttk8rv();
    return MAX_VALUE;
  }
  var MAX_VALUE;
  function get_MIN_VALUE() {
    init_properties_longjs_kt_ttk8rv();
    return MIN_VALUE;
  }
  var MIN_VALUE;
  function get_TWO_PWR_24_() {
    init_properties_longjs_kt_ttk8rv();
    return TWO_PWR_24_;
  }
  var TWO_PWR_24_;
  function compare(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    if (equalsLong(_this__u8e3s4, other)) {
      return 0;
    }
    var thisNeg = isNegative(_this__u8e3s4);
    var otherNeg = isNegative(other);
    return (thisNeg ? !otherNeg : false) ? -1 : (!thisNeg ? otherNeg : false) ? 1 : isNegative(subtract(_this__u8e3s4, other)) ? -1 : 1;
  }
  function add(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    var a48 = _this__u8e3s4.z5_1 >>> 16 | 0;
    var a32 = _this__u8e3s4.z5_1 & 65535;
    var a16 = _this__u8e3s4.y5_1 >>> 16 | 0;
    var a00 = _this__u8e3s4.y5_1 & 65535;
    var b48 = other.z5_1 >>> 16 | 0;
    var b32 = other.z5_1 & 65535;
    var b16 = other.y5_1 >>> 16 | 0;
    var b00 = other.y5_1 & 65535;
    var c48 = 0;
    var c32 = 0;
    var c16 = 0;
    var c00 = 0;
    c00 = c00 + (a00 + b00 | 0) | 0;
    c16 = c16 + (c00 >>> 16 | 0) | 0;
    c00 = c00 & 65535;
    c16 = c16 + (a16 + b16 | 0) | 0;
    c32 = c32 + (c16 >>> 16 | 0) | 0;
    c16 = c16 & 65535;
    c32 = c32 + (a32 + b32 | 0) | 0;
    c48 = c48 + (c32 >>> 16 | 0) | 0;
    c32 = c32 & 65535;
    c48 = c48 + (a48 + b48 | 0) | 0;
    c48 = c48 & 65535;
    return new Long(c16 << 16 | c00, c48 << 16 | c32);
  }
  function subtract(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return add(_this__u8e3s4, other.a6());
  }
  function multiply(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    if (isZero(_this__u8e3s4)) {
      return get_ZERO();
    } else if (isZero(other)) {
      return get_ZERO();
    }
    if (equalsLong(_this__u8e3s4, get_MIN_VALUE())) {
      return isOdd(other) ? get_MIN_VALUE() : get_ZERO();
    } else if (equalsLong(other, get_MIN_VALUE())) {
      return isOdd(_this__u8e3s4) ? get_MIN_VALUE() : get_ZERO();
    }
    if (isNegative(_this__u8e3s4)) {
      var tmp;
      if (isNegative(other)) {
        tmp = multiply(negate(_this__u8e3s4), negate(other));
      } else {
        tmp = negate(multiply(negate(_this__u8e3s4), other));
      }
      return tmp;
    } else if (isNegative(other)) {
      return negate(multiply(_this__u8e3s4, negate(other)));
    }
    if (lessThan(_this__u8e3s4, get_TWO_PWR_24_()) ? lessThan(other, get_TWO_PWR_24_()) : false) {
      return fromNumber(toNumber(_this__u8e3s4) * toNumber(other));
    }
    var a48 = _this__u8e3s4.z5_1 >>> 16 | 0;
    var a32 = _this__u8e3s4.z5_1 & 65535;
    var a16 = _this__u8e3s4.y5_1 >>> 16 | 0;
    var a00 = _this__u8e3s4.y5_1 & 65535;
    var b48 = other.z5_1 >>> 16 | 0;
    var b32 = other.z5_1 & 65535;
    var b16 = other.y5_1 >>> 16 | 0;
    var b00 = other.y5_1 & 65535;
    var c48 = 0;
    var c32 = 0;
    var c16 = 0;
    var c00 = 0;
    c00 = c00 + imul(a00, b00) | 0;
    c16 = c16 + (c00 >>> 16 | 0) | 0;
    c00 = c00 & 65535;
    c16 = c16 + imul(a16, b00) | 0;
    c32 = c32 + (c16 >>> 16 | 0) | 0;
    c16 = c16 & 65535;
    c16 = c16 + imul(a00, b16) | 0;
    c32 = c32 + (c16 >>> 16 | 0) | 0;
    c16 = c16 & 65535;
    c32 = c32 + imul(a32, b00) | 0;
    c48 = c48 + (c32 >>> 16 | 0) | 0;
    c32 = c32 & 65535;
    c32 = c32 + imul(a16, b16) | 0;
    c48 = c48 + (c32 >>> 16 | 0) | 0;
    c32 = c32 & 65535;
    c32 = c32 + imul(a00, b32) | 0;
    c48 = c48 + (c32 >>> 16 | 0) | 0;
    c32 = c32 & 65535;
    c48 = c48 + (((imul(a48, b00) + imul(a32, b16) | 0) + imul(a16, b32) | 0) + imul(a00, b48) | 0) | 0;
    c48 = c48 & 65535;
    return new Long(c16 << 16 | c00, c48 << 16 | c32);
  }
  function divide(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    if (isZero(other)) {
      throw Exception_init_$Create$('division by zero');
    } else if (isZero(_this__u8e3s4)) {
      return get_ZERO();
    }
    if (equalsLong(_this__u8e3s4, get_MIN_VALUE())) {
      if (equalsLong(other, get_ONE()) ? true : equalsLong(other, get_NEG_ONE())) {
        return get_MIN_VALUE();
      } else if (equalsLong(other, get_MIN_VALUE())) {
        return get_ONE();
      } else {
        var halfThis = shiftRight(_this__u8e3s4, 1);
        var approx = shiftLeft(halfThis.b6(other), 1);
        if (equalsLong(approx, get_ZERO())) {
          return isNegative(other) ? get_ONE() : get_NEG_ONE();
        } else {
          var rem = subtract(_this__u8e3s4, multiply(other, approx));
          return add(approx, rem.b6(other));
        }
      }
    } else if (equalsLong(other, get_MIN_VALUE())) {
      return get_ZERO();
    }
    if (isNegative(_this__u8e3s4)) {
      var tmp;
      if (isNegative(other)) {
        tmp = negate(_this__u8e3s4).b6(negate(other));
      } else {
        tmp = negate(negate(_this__u8e3s4).b6(other));
      }
      return tmp;
    } else if (isNegative(other)) {
      return negate(_this__u8e3s4.b6(negate(other)));
    }
    var res = get_ZERO();
    var rem_0 = _this__u8e3s4;
    while (greaterThanOrEqual(rem_0, other)) {
      var approxDouble = toNumber(rem_0) / toNumber(other);
      var approx2 = Math.max(1.0, Math.floor(approxDouble));
      var log2 = Math.ceil(Math.log(approx2) / Math.LN2);
      var delta = log2 <= 48.0 ? 1.0 : Math.pow(2.0, log2 - 48);
      var approxRes = fromNumber(approx2);
      var approxRem = multiply(approxRes, other);
      while (isNegative(approxRem) ? true : greaterThan(approxRem, rem_0)) {
        approx2 = approx2 - delta;
        approxRes = fromNumber(approx2);
        approxRem = multiply(approxRes, other);
      }
      if (isZero(approxRes)) {
        approxRes = get_ONE();
      }
      res = add(res, approxRes);
      rem_0 = subtract(rem_0, approxRem);
    }
    return res;
  }
  function modulo(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return subtract(_this__u8e3s4, multiply(_this__u8e3s4.b6(other), other));
  }
  function shiftLeft(_this__u8e3s4, numBits) {
    init_properties_longjs_kt_ttk8rv();
    var numBits_0 = numBits & 63;
    if (numBits_0 === 0) {
      return _this__u8e3s4;
    } else {
      if (numBits_0 < 32) {
        return new Long(_this__u8e3s4.y5_1 << numBits_0, _this__u8e3s4.z5_1 << numBits_0 | (_this__u8e3s4.y5_1 >>> (32 - numBits_0 | 0) | 0));
      } else {
        return new Long(0, _this__u8e3s4.y5_1 << (numBits_0 - 32 | 0));
      }
    }
  }
  function shiftRight(_this__u8e3s4, numBits) {
    init_properties_longjs_kt_ttk8rv();
    var numBits_0 = numBits & 63;
    if (numBits_0 === 0) {
      return _this__u8e3s4;
    } else {
      if (numBits_0 < 32) {
        return new Long(_this__u8e3s4.y5_1 >>> numBits_0 | 0 | _this__u8e3s4.z5_1 << (32 - numBits_0 | 0), _this__u8e3s4.z5_1 >> numBits_0);
      } else {
        return new Long(_this__u8e3s4.z5_1 >> (numBits_0 - 32 | 0), _this__u8e3s4.z5_1 >= 0 ? 0 : -1);
      }
    }
  }
  function shiftRightUnsigned(_this__u8e3s4, numBits) {
    init_properties_longjs_kt_ttk8rv();
    var numBits_0 = numBits & 63;
    if (numBits_0 === 0) {
      return _this__u8e3s4;
    } else {
      if (numBits_0 < 32) {
        return new Long(_this__u8e3s4.y5_1 >>> numBits_0 | 0 | _this__u8e3s4.z5_1 << (32 - numBits_0 | 0), _this__u8e3s4.z5_1 >>> numBits_0 | 0);
      } else {
        var tmp;
        if (numBits_0 === 32) {
          tmp = new Long(_this__u8e3s4.z5_1, 0);
        } else {
          tmp = new Long(_this__u8e3s4.z5_1 >>> (numBits_0 - 32 | 0) | 0, 0);
        }
        return tmp;
      }
    }
  }
  function toNumber(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.z5_1 * 4.294967296E9 + getLowBitsUnsigned(_this__u8e3s4);
  }
  function equalsLong(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.z5_1 === other.z5_1 ? _this__u8e3s4.y5_1 === other.y5_1 : false;
  }
  function hashCode_1(l) {
    init_properties_longjs_kt_ttk8rv();
    return l.y5_1 ^ l.z5_1;
  }
  function toStringImpl(_this__u8e3s4, radix) {
    init_properties_longjs_kt_ttk8rv();
    if (radix < 2 ? true : 36 < radix) {
      throw Exception_init_$Create$('radix out of range: ' + radix);
    }
    if (isZero(_this__u8e3s4)) {
      return '0';
    }
    if (isNegative(_this__u8e3s4)) {
      if (equalsLong(_this__u8e3s4, get_MIN_VALUE())) {
        var radixLong = fromInt(radix);
        var div = _this__u8e3s4.b6(radixLong);
        var rem = subtract(multiply(div, radixLong), _this__u8e3s4).u7();
        var tmp = toStringImpl(div, radix);
        var tmp$ret$1;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp$ret$0;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$0 = rem;
        var tmp0_unsafeCast = tmp$ret$0.toString(radix);
        tmp$ret$1 = tmp0_unsafeCast;
        return tmp + tmp$ret$1;
      } else {
        return '-' + toStringImpl(negate(_this__u8e3s4), radix);
      }
    }
    var digitsPerTime = radix === 2 ? 31 : radix <= 10 ? 9 : radix <= 21 ? 7 : radix <= 35 ? 6 : 5;
    var radixToPower = fromNumber(Math.pow(radix, digitsPerTime));
    var rem_0 = _this__u8e3s4;
    var result = '';
    while (true) {
      var remDiv = rem_0.b6(radixToPower);
      var intval = subtract(rem_0, multiply(remDiv, radixToPower)).u7();
      var tmp$ret$3;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$2 = intval;
      var tmp1_unsafeCast = tmp$ret$2.toString(radix);
      tmp$ret$3 = tmp1_unsafeCast;
      var digits = tmp$ret$3;
      rem_0 = remDiv;
      if (isZero(rem_0)) {
        return digits + result;
      } else {
        while (digits.length < digitsPerTime) {
          digits = '0' + digits;
        }
        result = digits + result;
      }
    }
  }
  function fromInt(value) {
    init_properties_longjs_kt_ttk8rv();
    return new Long(value, value < 0 ? -1 : 0);
  }
  function isNegative(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.z5_1 < 0;
  }
  function isZero(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.z5_1 === 0 ? _this__u8e3s4.y5_1 === 0 : false;
  }
  function isOdd(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return (_this__u8e3s4.y5_1 & 1) === 1;
  }
  function negate(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.a6();
  }
  function lessThan(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return compare(_this__u8e3s4, other) < 0;
  }
  function fromNumber(value) {
    init_properties_longjs_kt_ttk8rv();
    if (isNaN_0(value)) {
      return get_ZERO();
    } else if (value <= -9.223372036854776E18) {
      return get_MIN_VALUE();
    } else if (value + 1 >= 9.223372036854776E18) {
      return get_MAX_VALUE();
    } else if (value < 0.0) {
      return negate(fromNumber(-value));
    } else {
      var twoPwr32 = 4.294967296E9;
      return new Long(jsBitwiseOr(value % twoPwr32, 0), jsBitwiseOr(value / twoPwr32, 0));
    }
  }
  function greaterThan(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return compare(_this__u8e3s4, other) > 0;
  }
  function greaterThanOrEqual(_this__u8e3s4, other) {
    init_properties_longjs_kt_ttk8rv();
    return compare(_this__u8e3s4, other) >= 0;
  }
  function getLowBitsUnsigned(_this__u8e3s4) {
    init_properties_longjs_kt_ttk8rv();
    return _this__u8e3s4.y5_1 >= 0 ? _this__u8e3s4.y5_1 : 4.294967296E9 + _this__u8e3s4.y5_1;
  }
  var properties_initialized_longjs_kt_5aju7t;
  function init_properties_longjs_kt_ttk8rv() {
    if (properties_initialized_longjs_kt_5aju7t) {
    } else {
      properties_initialized_longjs_kt_5aju7t = true;
      ZERO = fromInt(0);
      ONE = fromInt(1);
      NEG_ONE = fromInt(-1);
      MAX_VALUE = new Long(-1, 2147483647);
      MIN_VALUE = new Long(0, -2147483648);
      TWO_PWR_24_ = fromInt(16777216);
    }
  }
  function withType(type, array) {
    array.$type$ = type;
    return array;
  }
  function toByte_0(a) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = a << 24 >> 24;
    tmp$ret$0 = tmp0_unsafeCast;
    return tmp$ret$0;
  }
  function numberToInt(a) {
    var tmp;
    if (a instanceof Long) {
      tmp = a.u7();
    } else {
      tmp = doubleToInt(a);
    }
    return tmp;
  }
  function doubleToInt(a) {
    return a > 2.147483647E9 ? 2147483647 : a < -2.147483648E9 ? -2147483648 : jsBitwiseOr(a, 0);
  }
  function numberToDouble(a) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = +a;
    tmp$ret$0 = tmp0_unsafeCast;
    return tmp$ret$0;
  }
  function toShort_0(a) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = a << 16 >> 16;
    tmp$ret$0 = tmp0_unsafeCast;
    return tmp$ret$0;
  }
  function numberToLong(a) {
    var tmp;
    if (a instanceof Long) {
      tmp = a;
    } else {
      tmp = fromNumber(a);
    }
    return tmp;
  }
  function numberToChar(a) {
    var tmp$ret$0;
    // Inline function 'kotlin.toUShort' call
    var tmp0_toUShort = numberToInt(a);
    tmp$ret$0 = _UShort___init__impl__jigrne(toShort_0(tmp0_toUShort));
    return _Char___init__impl__6a9atx_0(tmp$ret$0);
  }
  function toLong_1(a) {
    return fromInt(a);
  }
  function numberRangeToNumber(start, endInclusive) {
    return new IntRange(start, endInclusive);
  }
  function get_propertyRefClassMetadataCache() {
    init_properties_reflectRuntime_kt_yf9l8h();
    return propertyRefClassMetadataCache;
  }
  var propertyRefClassMetadataCache;
  function metadataObject() {
    init_properties_reflectRuntime_kt_yf9l8h();
    var undef = undefined;
    return classMeta(undef, undef, undef, undef, undef, undef);
  }
  function getPropertyCallableRef(name, paramCount, type, getter, setter) {
    init_properties_reflectRuntime_kt_yf9l8h();
    getter.get = getter;
    getter.set = setter;
    getter.callableName = name;
    var tmp$ret$0;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = getPropertyRefClass(getter, getKPropMetadata(paramCount, setter, type));
    tmp$ret$0 = tmp0_unsafeCast;
    return tmp$ret$0;
  }
  function getPropertyRefClass(obj, metadata) {
    init_properties_reflectRuntime_kt_yf9l8h();
    obj.$metadata$ = metadata;
    obj.constructor = obj;
    return obj;
  }
  function getKPropMetadata(paramCount, setter, type) {
    init_properties_reflectRuntime_kt_yf9l8h();
    var mdata = get_propertyRefClassMetadataCache()[paramCount][setter == null ? 0 : 1];
    if (mdata.interfaces.length === 0) {
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      var tmp0_asDynamic = mdata.interfaces;
      tmp$ret$0 = tmp0_asDynamic;
      tmp$ret$0.push(type);
      if (mdata.interfacesCache == null) {
        mdata.interfacesCache = generateInterfaceCache();
      } else {
        ensureNotNull(mdata.interfacesCache).isComplete = false;
      }
      extendCacheWithSingle(ensureNotNull(mdata.interfacesCache), type);
    }
    return mdata;
  }
  var properties_initialized_reflectRuntime_kt_inkhwd;
  function init_properties_reflectRuntime_kt_yf9l8h() {
    if (properties_initialized_reflectRuntime_kt_inkhwd) {
    } else {
      properties_initialized_reflectRuntime_kt_inkhwd = true;
      var tmp$ret$11;
      // Inline function 'kotlin.arrayOf' call
      var tmp$ret$2;
      // Inline function 'kotlin.arrayOf' call
      var tmp0_arrayOf = [metadataObject(), metadataObject()];
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_arrayOf;
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      var tmp = tmp$ret$2;
      var tmp$ret$5;
      // Inline function 'kotlin.arrayOf' call
      var tmp1_arrayOf = [metadataObject(), metadataObject()];
      var tmp$ret$4;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$3;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$3 = tmp1_arrayOf;
      tmp$ret$4 = tmp$ret$3;
      tmp$ret$5 = tmp$ret$4;
      var tmp_0 = tmp$ret$5;
      var tmp$ret$8;
      // Inline function 'kotlin.arrayOf' call
      var tmp2_arrayOf = [metadataObject(), metadataObject()];
      var tmp$ret$7;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$6;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$6 = tmp2_arrayOf;
      tmp$ret$7 = tmp$ret$6;
      tmp$ret$8 = tmp$ret$7;
      var tmp3_arrayOf = [tmp, tmp_0, tmp$ret$8];
      var tmp$ret$10;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$9;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$9 = tmp3_arrayOf;
      tmp$ret$10 = tmp$ret$9;
      tmp$ret$11 = tmp$ret$10;
      propertyRefClassMetadataCache = tmp$ret$11;
    }
  }
  var interfacesCounter;
  function classMeta(name, interfaces, associatedObjectKey, associatedObjects, suspendArity, fastPrototype) {
    return createMetadata('class', name, interfaces, associatedObjectKey, associatedObjects, suspendArity, fastPrototype);
  }
  function createMetadata(kind, name, interfaces, associatedObjectKey, associatedObjects, suspendArity, fastPrototype) {
    return {kind: kind, simpleName: name, interfaceId: kind === 'interface' ? -1 : undefined, interfaces: interfaces || [], associatedObjectKey: associatedObjectKey, associatedObjects: associatedObjects, suspendArity: suspendArity, fastPrototype: fastPrototype, $kClass$: undefined, interfacesCache: {isComplete: fastPrototype === undefined && (interfaces === undefined || interfaces.length === 0), implementInterfaceMemo: {}}};
  }
  function isArrayish(o) {
    return isJsArray(o) ? true : isView(o);
  }
  function isJsArray(obj) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = Array.isArray(obj);
    tmp$ret$0 = tmp0_unsafeCast;
    return tmp$ret$0;
  }
  function isInterface(obj, iface) {
    var tmp0_elvis_lhs = obj.constructor;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var ctor = tmp;
    return isInterfaceImpl(ctor, iface);
  }
  function isInterfaceImpl(ctor, iface) {
    if (ctor === iface) {
      return true;
    }
    var metadata = ctor.$metadata$;
    if (!(metadata == null) ? metadata.interfacesCache == null : false) {
      metadata.interfacesCache = generateInterfaceCache();
    }
    var tmp0_safe_receiver = metadata;
    var interfacesCache = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.interfacesCache;
    var tmp;
    if (!(interfacesCache == null)) {
      if (!interfacesCache.isComplete) {
        completeInterfaceCache(ctor);
      }
      var tmp1_safe_receiver = iface.$metadata$;
      var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.interfaceId;
      var tmp_0;
      if (tmp2_elvis_lhs == null) {
        return false;
      } else {
        tmp_0 = tmp2_elvis_lhs;
      }
      var interfaceId = tmp_0;
      tmp = !!interfacesCache.implementInterfaceMemo[interfaceId];
    } else {
      var tmp3_safe_receiver = fastGetPrototype(ctor);
      var tmp4_elvis_lhs = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.constructor;
      var tmp_1;
      if (tmp4_elvis_lhs == null) {
        return false;
      } else {
        tmp_1 = tmp4_elvis_lhs;
      }
      var constructor = tmp_1;
      tmp = isInterfaceImpl(constructor, iface);
    }
    return tmp;
  }
  function generateInterfaceCache() {
    return {isComplete: false, implementInterfaceMemo: {}};
  }
  function completeInterfaceCache(ctor) {
    var metadata = ctor.$metadata$;
    if (!(metadata == null) ? metadata.interfacesCache == null : false) {
      metadata.interfacesCache = generateInterfaceCache();
    }
    var tmp0_safe_receiver = metadata;
    var interfacesCache = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.interfacesCache;
    if (!(interfacesCache == null)) {
      if (interfacesCache.isComplete === true) {
        return interfacesCache;
      }
      var indexedObject = metadata.interfaces;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var i = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        extendCacheWithSingle(interfacesCache, i);
        extendCacheWith(interfacesCache, completeInterfaceCache(i));
      }
    }
    var tmp2_safe_receiver = fastGetPrototype(ctor);
    var tmp3_safe_receiver = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.constructor;
    var tmp;
    if (tmp3_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$0;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      tmp$ret$0 = completeInterfaceCache(tmp3_safe_receiver);
      tmp = tmp$ret$0;
    }
    var parentInterfacesCache = tmp;
    var tmp4_safe_receiver = interfacesCache;
    var tmp_0;
    if (tmp4_safe_receiver == null) {
      tmp_0 = null;
    } else {
      var tmp$ret$1;
      // Inline function 'kotlin.apply' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlin.js.completeInterfaceCache.<anonymous>' call
      extendCacheWith(tmp4_safe_receiver, parentInterfacesCache);
      tmp4_safe_receiver.isComplete = true;
      tmp$ret$1 = tmp4_safe_receiver;
      tmp_0 = tmp$ret$1;
    }
    var tmp5_elvis_lhs = tmp_0;
    return tmp5_elvis_lhs == null ? parentInterfacesCache : tmp5_elvis_lhs;
  }
  function fastGetPrototype(ctor) {
    var tmp0_safe_receiver = ctor.$metadata$;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      // Inline function 'kotlin.run' call
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.fastGetPrototype.<anonymous>' call
      if (tmp0_safe_receiver.fastPrototype == null) {
        tmp0_safe_receiver.fastPrototype = getPrototype(ctor);
      }
      tmp$ret$0 = tmp0_safe_receiver.fastPrototype;
      tmp$ret$1 = tmp$ret$0;
      tmp = tmp$ret$1;
    }
    var tmp1_elvis_lhs = tmp;
    return tmp1_elvis_lhs == null ? getPrototype(ctor) : tmp1_elvis_lhs;
  }
  function extendCacheWithSingle(_this__u8e3s4, intr) {
    _this__u8e3s4.implementInterfaceMemo[getOrDefineInterfaceId(intr)] = true;
  }
  function extendCacheWith(_this__u8e3s4, cache) {
    var tmp0_safe_receiver = cache;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.implementInterfaceMemo;
    var tmp;
    if (tmp1_elvis_lhs == null) {
      return Unit_getInstance();
    } else {
      tmp = tmp1_elvis_lhs;
    }
    var anotherInterfaceMemo = tmp;
    Object.assign(_this__u8e3s4.implementInterfaceMemo, anotherInterfaceMemo);
  }
  function getPrototype(_this__u8e3s4) {
    var tmp0_safe_receiver = _this__u8e3s4.prototype;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$2;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.getPrototype.<anonymous>' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = Object.getPrototypeOf(tmp0_safe_receiver);
      tmp$ret$0 = tmp0_unsafeCast;
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      tmp = tmp$ret$2;
    }
    return tmp;
  }
  function getOrDefineInterfaceId(_this__u8e3s4) {
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = _this__u8e3s4.$metadata$;
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_unsafeCast;
    tmp$ret$1 = tmp$ret$0;
    var metadata = tmp$ret$1;
    var tmp0_elvis_lhs = metadata.interfaceId;
    var interfaceId = tmp0_elvis_lhs == null ? -1 : tmp0_elvis_lhs;
    var tmp;
    if (!equals_1(interfaceId, -1)) {
      tmp = interfaceId;
    } else {
      var tmp1 = interfacesCounter;
      interfacesCounter = tmp1 + 1 | 0;
      var result = tmp1;
      metadata.interfaceId = result;
      tmp = result;
    }
    return tmp;
  }
  function isArray(obj) {
    var tmp;
    if (isJsArray(obj)) {
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = obj;
      tmp = !tmp$ret$0.$type$;
    } else {
      tmp = false;
    }
    return tmp;
  }
  function isObject(obj) {
    var objTypeOf = typeof obj;
    var tmp0_subject = objTypeOf;
    switch (tmp0_subject) {
      case 'string':
        return true;
      case 'number':
        return true;
      case 'boolean':
        return true;
      case 'function':
        return true;
      default:
        return jsInstanceOf(obj, Object);
    }
  }
  function isNumber(a) {
    var tmp;
    if (typeof a === 'number') {
      tmp = true;
    } else {
      tmp = a instanceof Long;
    }
    return tmp;
  }
  function isComparable(value) {
    var type = typeof value;
    return ((type === 'string' ? true : type === 'boolean') ? true : isNumber(value)) ? true : isInterface(value, get_js(getKClass(Comparable)));
  }
  function isCharSequence(value) {
    return typeof value === 'string' ? true : isInterface(value, get_js(getKClass(CharSequence)));
  }
  function isBooleanArray(a) {
    return isJsArray(a) ? a.$type$ === 'BooleanArray' : false;
  }
  function isByteArray(a) {
    return jsInstanceOf(a, Int8Array);
  }
  function isShortArray(a) {
    return jsInstanceOf(a, Int16Array);
  }
  function isCharArray(a) {
    return jsInstanceOf(a, Uint16Array) ? a.$type$ === 'CharArray' : false;
  }
  function isIntArray(a) {
    return jsInstanceOf(a, Int32Array);
  }
  function isFloatArray(a) {
    return jsInstanceOf(a, Float32Array);
  }
  function isLongArray(a) {
    return isJsArray(a) ? a.$type$ === 'LongArray' : false;
  }
  function isDoubleArray(a) {
    return jsInstanceOf(a, Float64Array);
  }
  function interfaceMeta(name, interfaces, associatedObjectKey, associatedObjects, suspendArity) {
    return createMetadata('interface', name, interfaces, associatedObjectKey, associatedObjects, suspendArity, undefined);
  }
  function objectMeta(name, interfaces, associatedObjectKey, associatedObjects, suspendArity, fastPrototype) {
    return createMetadata('object', name, interfaces, associatedObjectKey, associatedObjects, suspendArity, fastPrototype);
  }
  function jsIsType(obj, jsClass) {
    if (jsClass === Object) {
      return isObject(obj);
    }
    if ((obj == null ? true : jsClass == null) ? true : !(typeof obj === 'object') ? !(typeof obj === 'function') : false) {
      return false;
    }
    if (typeof jsClass === 'function' ? jsInstanceOf(obj, jsClass) : false) {
      return true;
    }
    var proto = jsGetPrototypeOf(jsClass);
    var tmp0_safe_receiver = proto;
    var constructor = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.constructor;
    if (constructor != null ? jsIn('$metadata$', constructor) : false) {
      var metadata = constructor.$metadata$;
      if (metadata.kind === 'object') {
        return obj === jsClass;
      }
    }
    var klassMetadata = jsClass.$metadata$;
    if (klassMetadata == null) {
      return jsInstanceOf(obj, jsClass);
    }
    if (klassMetadata.kind === 'interface' ? obj.constructor != null : false) {
      return isInterfaceImpl(obj.constructor, jsClass);
    }
    return false;
  }
  function jsGetPrototypeOf(jsClass) {
    return Object.getPrototypeOf(jsClass);
  }
  function copyOf_0(_this__u8e3s4, newSize) {
    // Inline function 'kotlin.require' call
    var tmp0_require = newSize >= 0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlin.collections.copyOf.<anonymous>' call
      tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    var tmp$ret$1;
    // Inline function 'withType' call
    var tmp1_withType = fillFrom(_this__u8e3s4, charArray(newSize));
    tmp1_withType.$type$ = 'CharArray';
    tmp$ret$1 = tmp1_withType;
    return tmp$ret$1;
  }
  function copyOf_1(_this__u8e3s4, newSize) {
    // Inline function 'kotlin.require' call
    var tmp0_require = newSize >= 0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlin.collections.copyOf.<anonymous>' call
      tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    return fillFrom(_this__u8e3s4, new Float64Array(newSize));
  }
  function copyOf_2(_this__u8e3s4, newSize) {
    // Inline function 'kotlin.require' call
    var tmp0_require = newSize >= 0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlin.collections.copyOf.<anonymous>' call
      tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    return fillFrom(_this__u8e3s4, new Float32Array(newSize));
  }
  function copyOf_3(_this__u8e3s4, newSize) {
    // Inline function 'kotlin.require' call
    var tmp0_require = newSize >= 0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlin.collections.copyOf.<anonymous>' call
      tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    var tmp$ret$1;
    // Inline function 'withType' call
    var tmp1_withType = arrayCopyResize(_this__u8e3s4, newSize, new Long(0, 0));
    tmp1_withType.$type$ = 'LongArray';
    tmp$ret$1 = tmp1_withType;
    return tmp$ret$1;
  }
  function copyOf_4(_this__u8e3s4, newSize) {
    // Inline function 'kotlin.require' call
    var tmp0_require = newSize >= 0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlin.collections.copyOf.<anonymous>' call
      tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    return fillFrom(_this__u8e3s4, new Int32Array(newSize));
  }
  function copyOf_5(_this__u8e3s4, newSize) {
    // Inline function 'kotlin.require' call
    var tmp0_require = newSize >= 0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlin.collections.copyOf.<anonymous>' call
      tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    return fillFrom(_this__u8e3s4, new Int16Array(newSize));
  }
  function copyOf_6(_this__u8e3s4, newSize) {
    // Inline function 'kotlin.require' call
    var tmp0_require = newSize >= 0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlin.collections.copyOf.<anonymous>' call
      tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    return fillFrom(_this__u8e3s4, new Int8Array(newSize));
  }
  function copyOf_7(_this__u8e3s4, newSize) {
    // Inline function 'kotlin.require' call
    var tmp0_require = newSize >= 0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlin.collections.copyOf.<anonymous>' call
      tmp$ret$0 = 'Invalid new array size: ' + newSize + '.';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$_0(toString_3(message));
    }
    var tmp$ret$1;
    // Inline function 'withType' call
    var tmp1_withType = arrayCopyResize(_this__u8e3s4, newSize, false);
    tmp1_withType.$type$ = 'BooleanArray';
    tmp$ret$1 = tmp1_withType;
    return tmp$ret$1;
  }
  function contentEquals(_this__u8e3s4, other) {
    return contentEqualsInternal(_this__u8e3s4, other);
  }
  function contentHashCode(_this__u8e3s4) {
    return contentHashCodeInternal(_this__u8e3s4);
  }
  function plus_2(_this__u8e3s4, elements) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    return tmp$ret$0.concat(elements);
  }
  function asList(_this__u8e3s4) {
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    tmp$ret$1 = tmp$ret$0;
    return new ArrayList(tmp$ret$1);
  }
  function sort_0(_this__u8e3s4) {
    if (_this__u8e3s4.length > 1) {
      sortArray(_this__u8e3s4);
    }
  }
  function sortWith_0(_this__u8e3s4, comparator) {
    if (_this__u8e3s4.length > 1) {
      sortArrayWith(_this__u8e3s4, comparator);
    }
  }
  function copyOfRange_1(_this__u8e3s4, fromIndex, toIndex) {
    Companion_getInstance().k2(fromIndex, toIndex, _this__u8e3s4.length);
    var tmp$ret$1;
    // Inline function 'withType' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    var tmp0_withType = tmp$ret$0.slice(fromIndex, toIndex);
    tmp0_withType.$type$ = 'LongArray';
    tmp$ret$1 = tmp0_withType;
    return tmp$ret$1;
  }
  function copyInto_0(_this__u8e3s4, destination, destinationOffset, startIndex, endIndex) {
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    tmp$ret$1 = tmp$ret$0;
    var tmp = tmp$ret$1;
    var tmp$ret$3;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$2;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$2 = destination;
    tmp$ret$3 = tmp$ret$2;
    arrayCopy(tmp, tmp$ret$3, destinationOffset, startIndex, endIndex);
    return destination;
  }
  function copyOf_8(_this__u8e3s4) {
    var tmp$ret$1;
    // Inline function 'withType' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    var tmp0_withType = tmp$ret$0.slice();
    tmp0_withType.$type$ = 'LongArray';
    tmp$ret$1 = tmp0_withType;
    return tmp$ret$1;
  }
  function contentEquals_0(_this__u8e3s4, other) {
    return contentEqualsInternal(_this__u8e3s4, other);
  }
  function copyOfRange_2(_this__u8e3s4, fromIndex, toIndex) {
    Companion_getInstance().k2(fromIndex, toIndex, _this__u8e3s4.length);
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = _this__u8e3s4;
    return tmp$ret$0.slice(fromIndex, toIndex);
  }
  function contentHashCode_0(_this__u8e3s4) {
    return contentHashCodeInternal(_this__u8e3s4);
  }
  function getCategoryValue(_this__u8e3s4) {
    var tmp$ret$0;
    // Inline function 'kotlin.code' call
    tmp$ret$0 = Char__toInt_impl_vasixd(_this__u8e3s4);
    var ch = tmp$ret$0;
    var index = binarySearchRange(Category_getInstance().eh_1, ch);
    var start = Category_getInstance().eh_1[index];
    var code = Category_getInstance().fh_1[index];
    var value = categoryValueFrom(code, ch - start | 0);
    return value === 17 ? CharCategory_UNASSIGNED_getInstance().xe_1 : value;
  }
  function Category() {
    Category_instance = this;
    var toBase64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
    var fromBase64 = new Int32Array(128);
    var inductionVariable = 0;
    var last = charSequenceLength(toBase64) - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'kotlin.code' call
        var tmp0__get_code__88qj9g = charSequenceGet(toBase64, i);
        tmp$ret$0 = Char__toInt_impl_vasixd(tmp0__get_code__88qj9g);
        fromBase64[tmp$ret$0] = i;
      }
       while (inductionVariable <= last);
    var rangeStartDiff = 'gBCFEDCKCDCaDDaDBhBCEEDDDDDEDXBHYBH5BRwBGDCHDCIDFHDCHFDCDEIRTEE7BGHDDJlCBbSEMOFGERwDEDDDDECEFCRBJhBFDCYFFCCzBvBjBBFC3BOhDBmBDGpBDDCtBBJIbEECLGDFCLDCgBBKVKEDiDDHCFECECKCEODBebC5CLBOKhBJDDDDWEBHFCFCPBZDEL1BVBSLPBgBB2BDBDICFBHKCCKCPDBHEDWBHEDDDDEDEDIBDGDCKCCGDDDCGECCWBFMDDCDEDDCHDDHKDDBKDBHFCWBFGFDBDDFEDBPDDKCHBGDCHEDWBFGFDCEDEDBHDDGDCKCGJEGDBFDDFDDDDDMEFDBFDCGBOKDFDFDCGFCXBQDDDDDBEGEDFDDKHBHDDGFCXBKBFCEFCFCHCHECCKDNCCHFCoBEDECFDDDDHDCCKJBGDCSDYBJEHBFDDEBIGKDCMuBFHEBGBIBKCkBFBFBXEIFJDFDGCKCEgBBDPEDGKKGECIBkBEOBDFFLBkBBIBEFFEClBrBCEBEGDBKGGDDDDDCHDENDCFEKDDlBDDFrBCDpKBECGEECpBBEChBBECGEECPB5BBECjCCDJUDQKG2CCGDsTCRBaCDrCDDIHNBEDLSDCJSCMLFCCM0BDHGFLBFDDKGKGEFDDBKGjBB1BHFChBDFmCKfDDDDDDCGDCFDKeCFLsBEaGKBDiBXDDD1BDGDEIGJEKGKGHBGCMF/BEBvBCEDDFHEKHKJJDDeDDGDKsBFEDCIEkBIICCDFKDDKeGCJHrBCDIIDBNBHEBEFDBFsB/BNBiBlB6BBF1EIiDJIGCGCIIIIGCGCIIIIOCIIIIIIDFEDDBFEDDDDEBDIFDDFEDBLFGCEEICFBJCDEDCLDKBFBKCCGDDKDDNDgBQNEBDMPFFDEDEBFFHECEBEEDFBEDDQjBCEDEFFCCJHBeEEfsIIEUCHCxCBeZoBGlCZLV8BuCW3FBJB2BIvDB4HOesBFCfKQgIjEW/BEgBCiIwBVCGnBCgBBpDvBBuBEDBHEFGCCjDCGEDCFCFlBDDF4BHCOBXJHBHBHBHBHBHBHBHBgBCECGHGEDIFBKCEDMEtBaB5CM2GaMEDDCKCGFCJEDFDDDC2CDDDB6CDCFrBB+CDEKgBkBMQfBKeIBPgBKnBPgKguGgC9vUDVB3jBD3BJoBGCsIBDQKCUuBDDKCcCCmCKCGIXJCNC/BBHGKDECEVFBEMCEEBqBDDGDFDXDCEBDGEG0BEICyBQCICKGSGDEBKcICXLCLBdDDBvBDECCDNCKECFCJKFBpBFEDCJDBICCKCEQBGDDByBEDCEFBYDCLEDDCKGCGCGJHBHBrBBEJDEwCjBIDCKGk9KMXExBEggCgoGuLCqDmBHMFFCKBNBFBIsDQRrLCQgCC2BoBMCCQGEGQDCQDDDDFDGDECEEFBnEEBFEDCKCDCaDDaDBFCKBtBCfDGCGCFEDDDDCECKDC';
    var diff = decodeVarLenBase64(rangeStartDiff, fromBase64, 1342);
    var start = new Int32Array(diff.length + 1 | 0);
    var inductionVariable_0 = 0;
    var last_0 = diff.length - 1 | 0;
    if (inductionVariable_0 <= last_0)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        start[i_0 + 1 | 0] = start[i_0] + diff[i_0] | 0;
      }
       while (inductionVariable_0 <= last_0);
    this.eh_1 = start;
    var rangeCategory = 'PsY44a41W54UYJYZYB14W7XC15WZPsYa84bl9Zw8b85Lr7C44brlerrYBZBCZCiBiBiBhCiiBhChiBhiCBhhChiCihBhChCChiBhChiClBCFhjCiBiBihDhiBhCCihBiBBhCCFCEbEbEb7EbGhCk7BixRkiCi4BRbh4BhRhCBRBCiiBBCiBChiZBCBCiBcGHhChCiBRBxxEYC40Rx8c6RGUm4GRFRFYRQZ44acG4wRYFEFGJYllGFlYGwcGmkEmcGFJFl8cYxwFGFGRFGFRJFGkkcYkxRm6aFGEGmmEmEGRYRFGxxYFRFRFRGQGIFmIFIGIooGFGFGYJ4EFmoIRFlxRlxRFRFxlRxlFllRxmFIGxxIoxRomFRIRxlFlmGRJFaL86F4mRxmGoRFRFRFRFllRxGIGRxmGxmGmxRxGRFlRRJmmFllGYRmmIRFllRlRFRFllRFxxGFIGmmRoxImxRFRllGmxRJ4aRFGxmIoRFlxRlxRFRFllRFxxGlImoGmmRxoIxoIGRmmIRxlFlmGRJ8FLRxmFFRFllRllRxxFlRlxRxlFRFRFRooGRIooRomRxFRIRJLc8aRmoIoGFllRlRFRFRlmGmoIooRGRGRxmGFRllGmxRJRYL8lGooYFllRlRFRFRFRmlIIxGooRGRIRlxFGRJxlFRGIFllRlRFlmGIGxIooRomF8xRxxFllILFGRJLcFxmIoRFRFRFxlRFRxxGxxIooGmmRRIRJxxIoYRFllGGRaFEGYJYRxlFRFRFlRFllGGlxRFxEGRJRFRFcY84c8mGcJL8G1WIFRFRGIGmmYFGRGRcGc88RYcYRFIGIGmmIomGFJYFooGmlFllGmmFIFIFGFmoIGIomFJIm8cBhRRxxBC4ECFRFRFlRFRFRFRFRFRFlRFRFRFRFRFRGYLRFcRBRCxxUF8YFMF1WRFYKFRFRFGRFGYRFGRFllRlRGRFmmIGIooGGY44E46FmxRJRLRY44U44GmmQRJRFEFRFGFlGRFRFxmGmoIooGmoIoxRxxIoGIGRxxcx4YJFRFRFRFRJLRcFmmIomRx4YFoGGmRomIGIGmxRJRJRYEYRGmmHRGIFmIGmIIooGFRJYcGcRmmIFomGmmIomGmlFJFmoGooGGIRYFIGIGRYJRFJFEYCRBRBYRGYGIGFGFllGomGFRCECECEGRGhCCiBCBCRBRCBCBCRBRCxBCBCRCDCDCDCiiRBj7CbCiiRBj7b7iCiiRxiCBRbCBbxxCiiRBj7bRMQUY9+V9+VYtOQMY9eY43X44Z1WY54XYMQRQrERLZ12ELZ12RERaRGHGHGR88B88BihBhiChhC8hcZBc8BB8CBCFi8cihBZBC8Z8CLKhCKr8cRZcZc88ZcZc85Z8ZcZc1WcZc1WcZcZcZcRcRLcLcZcZcZcZc1WLcZ1WZ1WZcZ1WZ1WZ1WZcZcZcRcRcBRCixBBCiBBihCCEBhCCchCGhCRY44LCiRRxxCFRkYRGFRFRFRFRFRFRFRFRFRGY9eY49eY44U49e49e1WYEYUY04VY48cRcRcRcRcRs4Y48ElK1Wc1W12U2cKGooUE88KqqEl4c8RFxxGm7bkkFUF4kEkFRFRFx8cLcFcRFcRLcLcLcLcLcFcFRFEFRcRFEYFEYFJFRhClmHnnYG4EhCEGFKGYRbEbhCCiBECiBhCk7bhClBihCiBBCBhCRhiBhhCCRhiFkkCFlGllGllGFooGmIcGRL88aRFYRIFIGRYJRGFYl4FGJFGYFGIRYFRGIFmoIGIGIYxEJRYFmEFJFRFGmoImoIGRFGFmIRJRYFEFcloGIFmlGmlFGFlmGFRllEYFomGo4YlkEoGRFRFRFRFRFRCbECk7bRCFooG4oGRJRFRFRFRTSFRFRCRCRlGFZFRFRlxFFbRF2VRFRFRF6cRGY41WRG40UX1W44V24Y44X33Y44R44U1WY50Z5R46YRFRFxxQY44a41W54UYJYZYB14W7XC15WZ12YYFEFEFRFRFRFlxRllRxxa65b86axcZcRQcR';
    this.fh_1 = decodeVarLenBase64(rangeCategory, fromBase64, 1343);
  }
  Category.$metadata$ = objectMeta('Category');
  var Category_instance;
  function Category_getInstance() {
    if (Category_instance == null)
      new Category();
    return Category_instance;
  }
  function categoryValueFrom(code, ch) {
    var tmp;
    if (code < 32) {
      tmp = code;
    } else if (code < 1024) {
      tmp = (ch & 1) === 1 ? code >> 5 : code & 31;
    } else {
      var tmp0_subject = ch % 3 | 0;
      switch (tmp0_subject) {
        case 2:
          tmp = code >> 10;
          break;
        case 1:
          tmp = code >> 5 & 31;
          break;
        default:
          tmp = code & 31;
          break;
      }
    }
    return tmp;
  }
  function decodeVarLenBase64(base64, fromBase64, resultLength) {
    var result = new Int32Array(resultLength);
    var index = 0;
    var int = 0;
    var shift = 0;
    var indexedObject = base64;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var char = charSequenceGet(indexedObject, inductionVariable);
      inductionVariable = inductionVariable + 1 | 0;
      var tmp$ret$0;
      // Inline function 'kotlin.code' call
      tmp$ret$0 = Char__toInt_impl_vasixd(char);
      var sixBit = fromBase64[tmp$ret$0];
      int = int | (sixBit & 31) << shift;
      if (sixBit < 32) {
        var tmp1 = index;
        index = tmp1 + 1 | 0;
        result[tmp1] = int;
        int = 0;
        shift = 0;
      } else {
        shift = shift + 5 | 0;
      }
    }
    return result;
  }
  function minOf_0(a, b) {
    return Math.min(a, b);
  }
  function digitToIntImpl(_this__u8e3s4) {
    var tmp$ret$0;
    // Inline function 'kotlin.code' call
    tmp$ret$0 = Char__toInt_impl_vasixd(_this__u8e3s4);
    var ch = tmp$ret$0;
    var index = binarySearchRange(Digit_getInstance().gh_1, ch);
    var diff = ch - Digit_getInstance().gh_1[index] | 0;
    return diff < 10 ? diff : -1;
  }
  function binarySearchRange(array, needle) {
    var bottom = 0;
    var top = array.length - 1 | 0;
    var middle = -1;
    var value = 0;
    while (bottom <= top) {
      middle = (bottom + top | 0) / 2 | 0;
      value = array[middle];
      if (needle > value)
        bottom = middle + 1 | 0;
      else if (needle === value)
        return middle;
      else
        top = middle - 1 | 0;
    }
    return middle - (needle < value ? 1 : 0) | 0;
  }
  function Digit() {
    Digit_instance = this;
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.intArrayOf' call
    tmp$ret$0 = new Int32Array([48, 1632, 1776, 1984, 2406, 2534, 2662, 2790, 2918, 3046, 3174, 3302, 3430, 3558, 3664, 3792, 3872, 4160, 4240, 6112, 6160, 6470, 6608, 6784, 6800, 6992, 7088, 7232, 7248, 42528, 43216, 43264, 43472, 43504, 43600, 44016, 65296]);
    tmp.gh_1 = tmp$ret$0;
  }
  Digit.$metadata$ = objectMeta('Digit');
  var Digit_instance;
  function Digit_getInstance() {
    if (Digit_instance == null)
      new Digit();
    return Digit_instance;
  }
  function asList_0(_this__u8e3s4) {
    return new asList$1(_this__u8e3s4);
  }
  function asList$1($this_asList) {
    this.hh_1 = $this_asList;
    AbstractList.call(this);
  }
  asList$1.prototype.i = function () {
    return _ULongArray___get_size__impl__ju6dtr(this.hh_1);
  };
  asList$1.prototype.p = function () {
    return ULongArray__isEmpty_impl_c3yngu(this.hh_1);
  };
  asList$1.prototype.ih = function (element) {
    return ULongArray__contains_impl_v9bgai(this.hh_1, element);
  };
  asList$1.prototype.x1 = function (element) {
    if (!(element instanceof ULong))
      return false;
    return this.ih(element instanceof ULong ? element.t1_1 : THROW_CCE());
  };
  asList$1.prototype.jh = function (index) {
    Companion_getInstance().l2(index, this.i());
    return ULongArray__get_impl_pr71q9(this.hh_1, index);
  };
  asList$1.prototype.l = function (index) {
    return new ULong(this.jh(index));
  };
  asList$1.prototype.kh = function (element) {
    var tmp = isObject(new ULong(element)) ? new ULong(element) : THROW_CCE();
    if (!(tmp instanceof ULong))
      return -1;
    var tmp$ret$1;
    // Inline function 'kotlin.collections.indexOf' call
    var tmp_0 = _ULongArray___get_storage__impl__28e64j(this.hh_1);
    var tmp$ret$0;
    // Inline function 'kotlin.ULong.toLong' call
    tmp$ret$0 = _ULong___get_data__impl__fggpzb(element);
    tmp$ret$1 = indexOf_0(tmp_0, tmp$ret$0);
    return tmp$ret$1;
  };
  asList$1.prototype.m2 = function (element) {
    if (!(element instanceof ULong))
      return -1;
    return this.kh(element instanceof ULong ? element.t1_1 : THROW_CCE());
  };
  asList$1.$metadata$ = classMeta(undefined, [RandomAccess], undefined, undefined, undefined, AbstractList.prototype);
  function isWhitespaceImpl(_this__u8e3s4) {
    var tmp$ret$0;
    // Inline function 'kotlin.code' call
    tmp$ret$0 = Char__toInt_impl_vasixd(_this__u8e3s4);
    var ch = tmp$ret$0;
    return (((9 <= ch ? ch <= 13 : false) ? true : 28 <= ch ? ch <= 32 : false) ? true : ch === 160) ? true : ch > 4096 ? (((((ch === 5760 ? true : 8192 <= ch ? ch <= 8202 : false) ? true : ch === 8232) ? true : ch === 8233) ? true : ch === 8239) ? true : ch === 8287) ? true : ch === 12288 : false;
  }
  function Exception_init_$Init$($this) {
    extendThrowable($this, void 1, void 1);
    Exception.call($this);
    return $this;
  }
  function Exception_init_$Init$_0(message, $this) {
    extendThrowable($this, message, void 1);
    Exception.call($this);
    return $this;
  }
  function Exception_init_$Create$(message) {
    var tmp = Exception_init_$Init$_0(message, Object.create(Exception.prototype));
    captureStack(tmp, Exception_init_$Create$);
    return tmp;
  }
  function Exception_init_$Init$_1(message, cause, $this) {
    extendThrowable($this, message, cause);
    Exception.call($this);
    return $this;
  }
  function Exception() {
    captureStack(this, Exception);
  }
  Exception.$metadata$ = classMeta('Exception', undefined, undefined, undefined, undefined, Error.prototype);
  function Error_init_$Init$(message, $this) {
    extendThrowable($this, message, void 1);
    Error_0.call($this);
    return $this;
  }
  function Error_0() {
    captureStack(this, Error_0);
  }
  Error_0.$metadata$ = classMeta('Error', undefined, undefined, undefined, undefined, Error.prototype);
  function IllegalArgumentException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    IllegalArgumentException.call($this);
    return $this;
  }
  function IllegalArgumentException_init_$Create$() {
    var tmp = IllegalArgumentException_init_$Init$(Object.create(IllegalArgumentException.prototype));
    captureStack(tmp, IllegalArgumentException_init_$Create$);
    return tmp;
  }
  function IllegalArgumentException_init_$Init$_0(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    IllegalArgumentException.call($this);
    return $this;
  }
  function IllegalArgumentException_init_$Create$_0(message) {
    var tmp = IllegalArgumentException_init_$Init$_0(message, Object.create(IllegalArgumentException.prototype));
    captureStack(tmp, IllegalArgumentException_init_$Create$_0);
    return tmp;
  }
  function IllegalArgumentException_init_$Init$_1(message, cause, $this) {
    RuntimeException_init_$Init$_1(message, cause, $this);
    IllegalArgumentException.call($this);
    return $this;
  }
  function IllegalArgumentException() {
    captureStack(this, IllegalArgumentException);
  }
  IllegalArgumentException.$metadata$ = classMeta('IllegalArgumentException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function IllegalStateException_init_$Init$(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    IllegalStateException.call($this);
    return $this;
  }
  function IllegalStateException_init_$Create$(message) {
    var tmp = IllegalStateException_init_$Init$(message, Object.create(IllegalStateException.prototype));
    captureStack(tmp, IllegalStateException_init_$Create$);
    return tmp;
  }
  function IllegalStateException() {
    captureStack(this, IllegalStateException);
  }
  IllegalStateException.$metadata$ = classMeta('IllegalStateException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function NoSuchElementException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    NoSuchElementException.call($this);
    return $this;
  }
  function NoSuchElementException_init_$Create$() {
    var tmp = NoSuchElementException_init_$Init$(Object.create(NoSuchElementException.prototype));
    captureStack(tmp, NoSuchElementException_init_$Create$);
    return tmp;
  }
  function NoSuchElementException_init_$Init$_0(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    NoSuchElementException.call($this);
    return $this;
  }
  function NoSuchElementException_init_$Create$_0(message) {
    var tmp = NoSuchElementException_init_$Init$_0(message, Object.create(NoSuchElementException.prototype));
    captureStack(tmp, NoSuchElementException_init_$Create$_0);
    return tmp;
  }
  function NoSuchElementException() {
    captureStack(this, NoSuchElementException);
  }
  NoSuchElementException.$metadata$ = classMeta('NoSuchElementException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function RuntimeException_init_$Init$($this) {
    Exception_init_$Init$($this);
    RuntimeException.call($this);
    return $this;
  }
  function RuntimeException_init_$Init$_0(message, $this) {
    Exception_init_$Init$_0(message, $this);
    RuntimeException.call($this);
    return $this;
  }
  function RuntimeException_init_$Create$(message) {
    var tmp = RuntimeException_init_$Init$_0(message, Object.create(RuntimeException.prototype));
    captureStack(tmp, RuntimeException_init_$Create$);
    return tmp;
  }
  function RuntimeException_init_$Init$_1(message, cause, $this) {
    Exception_init_$Init$_1(message, cause, $this);
    RuntimeException.call($this);
    return $this;
  }
  function RuntimeException() {
    captureStack(this, RuntimeException);
  }
  RuntimeException.$metadata$ = classMeta('RuntimeException', undefined, undefined, undefined, undefined, Exception.prototype);
  function UnsupportedOperationException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    UnsupportedOperationException.call($this);
    return $this;
  }
  function UnsupportedOperationException_init_$Create$() {
    var tmp = UnsupportedOperationException_init_$Init$(Object.create(UnsupportedOperationException.prototype));
    captureStack(tmp, UnsupportedOperationException_init_$Create$);
    return tmp;
  }
  function UnsupportedOperationException_init_$Init$_0(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    UnsupportedOperationException.call($this);
    return $this;
  }
  function UnsupportedOperationException_init_$Create$_0(message) {
    var tmp = UnsupportedOperationException_init_$Init$_0(message, Object.create(UnsupportedOperationException.prototype));
    captureStack(tmp, UnsupportedOperationException_init_$Create$_0);
    return tmp;
  }
  function UnsupportedOperationException() {
    captureStack(this, UnsupportedOperationException);
  }
  UnsupportedOperationException.$metadata$ = classMeta('UnsupportedOperationException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function IndexOutOfBoundsException_init_$Init$(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    IndexOutOfBoundsException.call($this);
    return $this;
  }
  function IndexOutOfBoundsException_init_$Create$(message) {
    var tmp = IndexOutOfBoundsException_init_$Init$(message, Object.create(IndexOutOfBoundsException.prototype));
    captureStack(tmp, IndexOutOfBoundsException_init_$Create$);
    return tmp;
  }
  function IndexOutOfBoundsException() {
    captureStack(this, IndexOutOfBoundsException);
  }
  IndexOutOfBoundsException.$metadata$ = classMeta('IndexOutOfBoundsException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function NumberFormatException_init_$Init$(message, $this) {
    IllegalArgumentException_init_$Init$_0(message, $this);
    NumberFormatException.call($this);
    return $this;
  }
  function NumberFormatException_init_$Create$(message) {
    var tmp = NumberFormatException_init_$Init$(message, Object.create(NumberFormatException.prototype));
    captureStack(tmp, NumberFormatException_init_$Create$);
    return tmp;
  }
  function NumberFormatException() {
    captureStack(this, NumberFormatException);
  }
  NumberFormatException.$metadata$ = classMeta('NumberFormatException', undefined, undefined, undefined, undefined, IllegalArgumentException.prototype);
  function ArithmeticException_init_$Init$(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    ArithmeticException.call($this);
    return $this;
  }
  function ArithmeticException_init_$Create$(message) {
    var tmp = ArithmeticException_init_$Init$(message, Object.create(ArithmeticException.prototype));
    captureStack(tmp, ArithmeticException_init_$Create$);
    return tmp;
  }
  function ArithmeticException() {
    captureStack(this, ArithmeticException);
  }
  ArithmeticException.$metadata$ = classMeta('ArithmeticException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function NullPointerException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    NullPointerException.call($this);
    return $this;
  }
  function NullPointerException_init_$Create$() {
    var tmp = NullPointerException_init_$Init$(Object.create(NullPointerException.prototype));
    captureStack(tmp, NullPointerException_init_$Create$);
    return tmp;
  }
  function NullPointerException() {
    captureStack(this, NullPointerException);
  }
  NullPointerException.$metadata$ = classMeta('NullPointerException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function NoWhenBranchMatchedException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    NoWhenBranchMatchedException.call($this);
    return $this;
  }
  function NoWhenBranchMatchedException_init_$Create$() {
    var tmp = NoWhenBranchMatchedException_init_$Init$(Object.create(NoWhenBranchMatchedException.prototype));
    captureStack(tmp, NoWhenBranchMatchedException_init_$Create$);
    return tmp;
  }
  function NoWhenBranchMatchedException() {
    captureStack(this, NoWhenBranchMatchedException);
  }
  NoWhenBranchMatchedException.$metadata$ = classMeta('NoWhenBranchMatchedException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function ClassCastException_init_$Init$($this) {
    RuntimeException_init_$Init$($this);
    ClassCastException.call($this);
    return $this;
  }
  function ClassCastException_init_$Create$() {
    var tmp = ClassCastException_init_$Init$(Object.create(ClassCastException.prototype));
    captureStack(tmp, ClassCastException_init_$Create$);
    return tmp;
  }
  function ClassCastException() {
    captureStack(this, ClassCastException);
  }
  ClassCastException.$metadata$ = classMeta('ClassCastException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function UninitializedPropertyAccessException_init_$Init$(message, $this) {
    RuntimeException_init_$Init$_0(message, $this);
    UninitializedPropertyAccessException.call($this);
    return $this;
  }
  function UninitializedPropertyAccessException_init_$Create$(message) {
    var tmp = UninitializedPropertyAccessException_init_$Init$(message, Object.create(UninitializedPropertyAccessException.prototype));
    captureStack(tmp, UninitializedPropertyAccessException_init_$Create$);
    return tmp;
  }
  function UninitializedPropertyAccessException() {
    captureStack(this, UninitializedPropertyAccessException);
  }
  UninitializedPropertyAccessException.$metadata$ = classMeta('UninitializedPropertyAccessException', undefined, undefined, undefined, undefined, RuntimeException.prototype);
  function jsIn(lhs_hack, rhs_hack) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = lhs_hack in rhs_hack;
    tmp$ret$0 = tmp0_unsafeCast;
    return tmp$ret$0;
  }
  function jsBitwiseOr(lhs_hack, rhs_hack) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = lhs_hack | rhs_hack;
    tmp$ret$0 = tmp0_unsafeCast;
    return tmp$ret$0;
  }
  function jsTypeOf(value_hack) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = typeof value_hack;
    tmp$ret$0 = tmp0_unsafeCast;
    return tmp$ret$0;
  }
  function jsDeleteProperty(obj_hack, property_hack) {
    delete obj_hack[property_hack];
  }
  function jsInstanceOf(obj_hack, jsClass_hack) {
    var tmp$ret$0;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = obj_hack instanceof jsClass_hack;
    tmp$ret$0 = tmp0_unsafeCast;
    return tmp$ret$0;
  }
  function findAssociatedObject(_this__u8e3s4, annotationClass) {
    var tmp;
    var tmp_0;
    if (_this__u8e3s4 instanceof KClassImpl) {
      tmp_0 = annotationClass instanceof KClassImpl;
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      var tmp0_asDynamic = annotationClass.pc();
      tmp$ret$0 = tmp0_asDynamic;
      var tmp1_unsafeCast = tmp$ret$0;
      tmp$ret$1 = tmp1_unsafeCast;
      var tmp0_safe_receiver = tmp$ret$1.$metadata$;
      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.associatedObjectKey;
      var tmp_1;
      if (tmp1_safe_receiver == null) {
        tmp_1 = null;
      } else {
        var tmp$ret$3;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp$ret$2;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$2 = tmp1_safe_receiver;
        tmp$ret$3 = tmp$ret$2;
        tmp_1 = tmp$ret$3;
      }
      var tmp2_elvis_lhs = tmp_1;
      var tmp_2;
      if (tmp2_elvis_lhs == null) {
        return null;
      } else {
        tmp_2 = tmp2_elvis_lhs;
      }
      var key = tmp_2;
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      var tmp2_asDynamic = _this__u8e3s4.pc();
      tmp$ret$4 = tmp2_asDynamic;
      var tmp3_unsafeCast = tmp$ret$4;
      tmp$ret$5 = tmp3_unsafeCast;
      var tmp3_safe_receiver = tmp$ret$5.$metadata$;
      var tmp4_elvis_lhs = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.associatedObjects;
      var tmp_3;
      if (tmp4_elvis_lhs == null) {
        return null;
      } else {
        tmp_3 = tmp4_elvis_lhs;
      }
      var map = tmp_3;
      var tmp5_elvis_lhs = map[key];
      var tmp_4;
      if (tmp5_elvis_lhs == null) {
        return null;
      } else {
        tmp_4 = tmp5_elvis_lhs;
      }
      var factory = tmp_4;
      return factory();
    } else {
      tmp = null;
    }
    return tmp;
  }
  function toString_4(_this__u8e3s4, radix) {
    return toStringImpl(_this__u8e3s4, checkRadix(radix));
  }
  function Function1() {
  }
  Function1.$metadata$ = interfaceMeta('Function1');
  function Function0() {
  }
  Function0.$metadata$ = interfaceMeta('Function0');
  //region block: post-declaration
  InternalHashCodeMap.prototype.wb = createJsMap;
  //endregion
  //region block: init
  _stableSortingIsSupported = null;
  interfacesCounter = 0;
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = createInvariantKTypeProjection;
  _.$_$.b = createKType;
  _.$_$.c = findAssociatedObject;
  _.$_$.d = getKClassFromExpression;
  _.$_$.e = getKClass;
  _.$_$.f = CharCategory_CONNECTOR_PUNCTUATION_getInstance;
  _.$_$.g = CharCategory_DECIMAL_DIGIT_NUMBER_getInstance;
  _.$_$.h = CharCategory_LOWERCASE_LETTER_getInstance;
  _.$_$.i = CharCategory_OTHER_LETTER_getInstance;
  _.$_$.j = CharCategory_UPPERCASE_LETTER_getInstance;
  _.$_$.k = joinToString$default_0;
  _.$_$.l = contains$default;
  _.$_$.m = replaceFirst$default;
  _.$_$.n = replace$default;
  _.$_$.o = split$default;
  _.$_$.p = startsWith$default_0;
  _.$_$.q = ArrayList_init_$Create$_0;
  _.$_$.r = ArrayList_init_$Create$;
  _.$_$.s = ArrayList_init_$Create$_1;
  _.$_$.t = HashMap_init_$Create$;
  _.$_$.u = HashMap_init_$Create$_2;
  _.$_$.v = HashSet_init_$Create$_1;
  _.$_$.w = HashSet_init_$Create$;
  _.$_$.x = HashSet_init_$Create$_0;
  _.$_$.y = LinkedHashMap_init_$Create$_1;
  _.$_$.z = LinkedHashMap_init_$Create$;
  _.$_$.a1 = LinkedHashMap_init_$Create$_2;
  _.$_$.b1 = LinkedHashSet_init_$Create$;
  _.$_$.c1 = LinkedHashSet_init_$Create$_0;
  _.$_$.d1 = Regex_init_$Create$;
  _.$_$.e1 = StringBuilder_init_$Create$_1;
  _.$_$.f1 = ArithmeticException_init_$Create$;
  _.$_$.g1 = Exception_init_$Init$_0;
  _.$_$.h1 = Exception_init_$Create$;
  _.$_$.i1 = IllegalArgumentException_init_$Create$;
  _.$_$.j1 = IllegalArgumentException_init_$Init$_0;
  _.$_$.k1 = IllegalArgumentException_init_$Create$_0;
  _.$_$.l1 = IllegalArgumentException_init_$Init$_1;
  _.$_$.m1 = IllegalStateException_init_$Create$;
  _.$_$.n1 = IndexOutOfBoundsException_init_$Create$;
  _.$_$.o1 = NoSuchElementException_init_$Create$;
  _.$_$.p1 = NoSuchElementException_init_$Create$_0;
  _.$_$.q1 = NumberFormatException_init_$Create$;
  _.$_$.r1 = RuntimeException_init_$Init$_0;
  _.$_$.s1 = RuntimeException_init_$Create$;
  _.$_$.t1 = UnsupportedOperationException_init_$Create$_0;
  _.$_$.u1 = _Char___init__impl__6a9atx;
  _.$_$.v1 = Char__minus_impl_a2frrh;
  _.$_$.w1 = Char__minus_impl_a2frrh_0;
  _.$_$.x1 = Char__toInt_impl_vasixd;
  _.$_$.y1 = toString_1;
  _.$_$.z1 = _UByte___init__impl__g9hnc4;
  _.$_$.a2 = _UByte___get_data__impl__jof9qr;
  _.$_$.b2 = UByte__toString_impl_v72jg;
  _.$_$.c2 = _UInt___init__impl__l7qpdl;
  _.$_$.d2 = _UInt___get_data__impl__f0vqqw;
  _.$_$.e2 = UInt__toString_impl_dbgl21;
  _.$_$.f2 = _UIntArray___init__impl__ghjpc6_0;
  _.$_$.g2 = _UIntArray___init__impl__ghjpc6;
  _.$_$.h2 = UIntArray__get_impl_gp5kza;
  _.$_$.i2 = UIntArray__hashCode_impl_hr7ost;
  _.$_$.j2 = UIntArray__isEmpty_impl_vd8j4n;
  _.$_$.k2 = UIntArray__iterator_impl_tkdv7k;
  _.$_$.l2 = UIntArray__set_impl_7f2zu2;
  _.$_$.m2 = _UIntArray___get_size__impl__r6l8ci;
  _.$_$.n2 = _UIntArray___get_storage__impl__92a0v0;
  _.$_$.o2 = _ULong___init__impl__c78o9k;
  _.$_$.p2 = _ULong___get_data__impl__fggpzb;
  _.$_$.q2 = ULong__toString_impl_f9au7k;
  _.$_$.r2 = _ULongArray___init__impl__twm1l3_0;
  _.$_$.s2 = _ULongArray___init__impl__twm1l3;
  _.$_$.t2 = ULongArray__get_impl_pr71q9;
  _.$_$.u2 = ULongArray__hashCode_impl_aze4wa;
  _.$_$.v2 = ULongArray__isEmpty_impl_c3yngu;
  _.$_$.w2 = ULongArray__iterator_impl_cq4d2h;
  _.$_$.x2 = ULongArray__set_impl_z19mvh;
  _.$_$.y2 = _ULongArray___get_size__impl__ju6dtr;
  _.$_$.z2 = _ULongArray___get_storage__impl__28e64j;
  _.$_$.a3 = _UShort___init__impl__jigrne;
  _.$_$.b3 = _UShort___get_data__impl__g0245;
  _.$_$.c3 = UShort__toString_impl_edaoee;
  _.$_$.d3 = BooleanCompanionObject_getInstance;
  _.$_$.e3 = ByteCompanionObject_getInstance;
  _.$_$.f3 = DoubleCompanionObject_getInstance;
  _.$_$.g3 = FloatCompanionObject_getInstance;
  _.$_$.h3 = IntCompanionObject_getInstance;
  _.$_$.i3 = ShortCompanionObject_getInstance;
  _.$_$.j3 = StringCompanionObject_getInstance;
  _.$_$.k3 = PrimitiveClasses_getInstance;
  _.$_$.l3 = Companion_getInstance_11;
  _.$_$.m3 = Companion_getInstance_13;
  _.$_$.n3 = Companion_getInstance_5;
  _.$_$.o3 = Companion_getInstance_6;
  _.$_$.p3 = Companion_getInstance_7;
  _.$_$.q3 = Companion_getInstance_8;
  _.$_$.r3 = Unit_getInstance;
  _.$_$.s3 = AbstractIterator;
  _.$_$.t3 = ArrayList;
  _.$_$.u3 = Collection;
  _.$_$.v3 = Grouping;
  _.$_$.w3 = HashMap;
  _.$_$.x3 = HashSet;
  _.$_$.y3 = Iterable_0;
  _.$_$.z3 = Iterator_1;
  _.$_$.a4 = LinkedHashMap;
  _.$_$.b4 = LinkedHashSet;
  _.$_$.c4 = List_0;
  _.$_$.d4 = Entry;
  _.$_$.e4 = Map;
  _.$_$.f4 = MutableList_0;
  _.$_$.g4 = MutableMap;
  _.$_$.h4 = MutableSet;
  _.$_$.i4 = Set;
  _.$_$.j4 = addAll;
  _.$_$.k4 = any_1;
  _.$_$.l4 = arrayCopy;
  _.$_$.m4 = asList;
  _.$_$.n4 = checkIndexOverflow;
  _.$_$.o4 = collectionSizeOrDefault;
  _.$_$.p4 = contentEquals;
  _.$_$.q4 = contentEquals_0;
  _.$_$.r4 = contentHashCode_0;
  _.$_$.s4 = contentHashCode;
  _.$_$.t4 = copyOfRange_2;
  _.$_$.u4 = copyOfRange_1;
  _.$_$.v4 = copyOf_5;
  _.$_$.w4 = copyOf_3;
  _.$_$.x4 = copyOf_7;
  _.$_$.y4 = copyOf_8;
  _.$_$.z4 = copyOf_0;
  _.$_$.a5 = copyOf_6;
  _.$_$.b5 = copyOf_1;
  _.$_$.c5 = copyOf_2;
  _.$_$.d5 = copyOf_4;
  _.$_$.e5 = copyToArray;
  _.$_$.f5 = count;
  _.$_$.g5 = distinct;
  _.$_$.h5 = dropLast;
  _.$_$.i5 = drop;
  _.$_$.j5 = eachCount;
  _.$_$.k5 = emptyList;
  _.$_$.l5 = emptyMap;
  _.$_$.m5 = filterNotNull;
  _.$_$.n5 = first_0;
  _.$_$.o5 = first;
  _.$_$.p5 = flatten;
  _.$_$.q5 = getValue;
  _.$_$.r5 = get_indices_0;
  _.$_$.s5 = get_indices;
  _.$_$.t5 = get_indices_1;
  _.$_$.u5 = get_lastIndex_1;
  _.$_$.v5 = lastOrNull;
  _.$_$.w5 = last;
  _.$_$.x5 = listOf_1;
  _.$_$.y5 = listOf;
  _.$_$.z5 = mapCapacity;
  _.$_$.a6 = mapOf_1;
  _.$_$.b6 = mapOf;
  _.$_$.c6 = mutableListOf_0;
  _.$_$.d6 = plus_0;
  _.$_$.e6 = plus;
  _.$_$.f6 = setOf;
  _.$_$.g6 = slice;
  _.$_$.h6 = slice_0;
  _.$_$.i6 = sortedWith;
  _.$_$.j6 = sorted;
  _.$_$.k6 = sum;
  _.$_$.l6 = takeLast;
  _.$_$.m6 = take;
  _.$_$.n6 = toBooleanArray;
  _.$_$.o6 = toHashSet;
  _.$_$.p6 = toIntArray;
  _.$_$.q6 = toList_0;
  _.$_$.r6 = toList_2;
  _.$_$.s6 = toList_1;
  _.$_$.t6 = toList;
  _.$_$.u6 = toMap;
  _.$_$.v6 = toMutableMap;
  _.$_$.w6 = toULongArray;
  _.$_$.x6 = withIndex;
  _.$_$.y6 = withIndex_0;
  _.$_$.z6 = zip;
  _.$_$.a7 = compareValues;
  _.$_$.b7 = println;
  _.$_$.c7 = arrayIterator;
  _.$_$.d7 = booleanArray;
  _.$_$.e7 = captureStack;
  _.$_$.f7 = charArrayOf_0;
  _.$_$.g7 = charArray;
  _.$_$.h7 = charSequenceGet;
  _.$_$.i7 = charSequenceLength;
  _.$_$.j7 = charSequenceSubSequence;
  _.$_$.k7 = classMeta;
  _.$_$.l7 = compareTo_0;
  _.$_$.m7 = equals_1;
  _.$_$.n7 = fillArrayVal;
  _.$_$.o7 = getPropertyCallableRef;
  _.$_$.p7 = getStringHashCode;
  _.$_$.q7 = hashCode_0;
  _.$_$.r7 = interfaceMeta;
  _.$_$.s7 = isArray;
  _.$_$.t7 = isBooleanArray;
  _.$_$.u7 = isByteArray;
  _.$_$.v7 = isCharArray;
  _.$_$.w7 = isCharSequence;
  _.$_$.x7 = isDoubleArray;
  _.$_$.y7 = isFloatArray;
  _.$_$.z7 = isIntArray;
  _.$_$.a8 = isInterface;
  _.$_$.b8 = isLongArray;
  _.$_$.c8 = isNumber;
  _.$_$.d8 = isObject;
  _.$_$.e8 = isShortArray;
  _.$_$.f8 = get_js;
  _.$_$.g8 = longArrayOf_0;
  _.$_$.h8 = longArray;
  _.$_$.i8 = numberRangeToNumber;
  _.$_$.j8 = numberToChar;
  _.$_$.k8 = numberToDouble;
  _.$_$.l8 = numberToInt;
  _.$_$.m8 = numberToLong;
  _.$_$.n8 = objectMeta;
  _.$_$.o8 = toByte_0;
  _.$_$.p8 = toLong_1;
  _.$_$.q8 = toShort_0;
  _.$_$.r8 = toString_3;
  _.$_$.s8 = abs_0;
  _.$_$.t8 = abs;
  _.$_$.u8 = coerceAtLeast;
  _.$_$.v8 = coerceAtMost;
  _.$_$.w8 = step;
  _.$_$.x8 = until;
  _.$_$.y8 = KClass;
  _.$_$.z8 = KProperty0;
  _.$_$.a9 = KProperty1;
  _.$_$.b9 = Sequence;
  _.$_$.c9 = capitalize;
  _.$_$.d9 = get_category;
  _.$_$.e9 = concatToString;
  _.$_$.f9 = contains_3;
  _.$_$.g9 = dropLast_0;
  _.$_$.h9 = drop_0;
  _.$_$.i9 = equals_0;
  _.$_$.j9 = isBlank;
  _.$_$.k9 = get_lastIndex_2;
  _.$_$.l9 = prependIndent;
  _.$_$.m9 = removePrefix;
  _.$_$.n9 = reversed_0;
  _.$_$.o9 = single_2;
  _.$_$.p9 = substring;
  _.$_$.q9 = toByte;
  _.$_$.r9 = toDoubleOrNull;
  _.$_$.s9 = toDouble;
  _.$_$.t9 = toIntOrNull;
  _.$_$.u9 = toInt;
  _.$_$.v9 = toLongOrNull;
  _.$_$.w9 = toLong_0;
  _.$_$.x9 = toLong;
  _.$_$.y9 = toShort;
  _.$_$.z9 = toString_0;
  _.$_$.aa = toUByte_1;
  _.$_$.ba = toUInt_1;
  _.$_$.ca = toULongOrNull;
  _.$_$.da = toULong_1;
  _.$_$.ea = toUShort_1;
  _.$_$.fa = trimIndent;
  _.$_$.ga = Annotation;
  _.$_$.ha = Char_0;
  _.$_$.ia = Comparable;
  _.$_$.ja = Comparator;
  _.$_$.ka = Enum;
  _.$_$.la = Exception;
  _.$_$.ma = IllegalArgumentException;
  _.$_$.na = Long;
  _.$_$.oa = NotImplementedError;
  _.$_$.pa = Pair;
  _.$_$.qa = RuntimeException;
  _.$_$.ra = THROW_CCE;
  _.$_$.sa = Triple;
  _.$_$.ta = UByte;
  _.$_$.ua = UIntArray;
  _.$_$.va = UInt;
  _.$_$.wa = ULongArray;
  _.$_$.xa = ULong;
  _.$_$.ya = UShort;
  _.$_$.za = Unit;
  _.$_$.ab = arrayOf;
  _.$_$.bb = ensureNotNull;
  _.$_$.cb = isFinite_0;
  _.$_$.db = isFinite;
  _.$_$.eb = lazy;
  _.$_$.fb = noWhenBranchMatchedException;
  _.$_$.gb = throwUninitializedPropertyAccessException;
  _.$_$.hb = toString_2;
  _.$_$.ib = to;
  _.$_$.jb = uintCompare;
  _.$_$.kb = uintDivide;
  _.$_$.lb = uintRemainder;
  _.$_$.mb = ulongCompare;
  _.$_$.nb = ulongDivide;
  _.$_$.ob = ulongRemainder;
  //endregion
  return _;
}));

//# sourceMappingURL=kotlin-kotlin-stdlib-js-ir.js.map


/***/ }),

/***/ 639:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
  if (true)
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(72)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  else {}
}(this, function (_, kotlin_kotlin) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var get_indices = kotlin_kotlin.$_$.t5;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.r;
  var Unit_getInstance = kotlin_kotlin.$_$.r3;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.i1;
  var isInterface = kotlin_kotlin.$_$.a8;
  var emptyList = kotlin_kotlin.$_$.k5;
  var classMeta = kotlin_kotlin.$_$.k7;
  var noWhenBranchMatchedException = kotlin_kotlin.$_$.fb;
  var listOf = kotlin_kotlin.$_$.x5;
  var plus = kotlin_kotlin.$_$.e6;
  var toString = kotlin_kotlin.$_$.r8;
  var IllegalArgumentException_init_$Create$_0 = kotlin_kotlin.$_$.k1;
  var NoSuchElementException_init_$Create$ = kotlin_kotlin.$_$.o1;
  var first = kotlin_kotlin.$_$.n5;
  var LinkedHashSet_init_$Create$ = kotlin_kotlin.$_$.b1;
  var lazy = kotlin_kotlin.$_$.eb;
  var HashSet_init_$Create$ = kotlin_kotlin.$_$.w;
  var KProperty1 = kotlin_kotlin.$_$.a9;
  var getPropertyCallableRef = kotlin_kotlin.$_$.o7;
  var THROW_CCE = kotlin_kotlin.$_$.ra;
  var isCharSequence = kotlin_kotlin.$_$.w7;
  var charSequenceLength = kotlin_kotlin.$_$.i7;
  var get_lastIndex = kotlin_kotlin.$_$.k9;
  var charSequenceGet = kotlin_kotlin.$_$.h7;
  var Char = kotlin_kotlin.$_$.ha;
  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.u1;
  var equals = kotlin_kotlin.$_$.m7;
  var startsWith$default = kotlin_kotlin.$_$.p;
  var charSequenceSubSequence = kotlin_kotlin.$_$.j7;
  var hashCode = kotlin_kotlin.$_$.q7;
  var AbstractIterator = kotlin_kotlin.$_$.s3;
  var Sequence = kotlin_kotlin.$_$.b9;
  var interfaceMeta = kotlin_kotlin.$_$.r7;
  var getKClassFromExpression = kotlin_kotlin.$_$.d;
  var Exception = kotlin_kotlin.$_$.la;
  var Exception_init_$Init$ = kotlin_kotlin.$_$.g1;
  var captureStack = kotlin_kotlin.$_$.e7;
  //endregion
  //region block: pre-declaration
  CharToken.prototype = Object.create(Token.prototype);
  CharToken.prototype.constructor = CharToken;
  LiteralToken.prototype = Object.create(Token.prototype);
  LiteralToken.prototype.constructor = LiteralToken;
  noneMatched$1.prototype = Object.create(Token.prototype);
  noneMatched$1.prototype.constructor = noneMatched$1;
  Parsed.prototype = Object.create(ParseResult.prototype);
  Parsed.prototype.constructor = Parsed;
  TokenMatch.prototype = Object.create(Parsed.prototype);
  TokenMatch.prototype.constructor = TokenMatch;
  TokenMatchesSequence$iterator$1.prototype = Object.create(AbstractIterator.prototype);
  TokenMatchesSequence$iterator$1.prototype.constructor = TokenMatchesSequence$iterator$1;
  ErrorResult.prototype = Object.create(ParseResult.prototype);
  ErrorResult.prototype.constructor = ErrorResult;
  UnexpectedEof.prototype = Object.create(ErrorResult.prototype);
  UnexpectedEof.prototype.constructor = UnexpectedEof;
  NoMatchingToken.prototype = Object.create(ErrorResult.prototype);
  NoMatchingToken.prototype.constructor = NoMatchingToken;
  MismatchedToken.prototype = Object.create(ErrorResult.prototype);
  MismatchedToken.prototype.constructor = MismatchedToken;
  ParseException.prototype = Object.create(Exception.prototype);
  ParseException.prototype.constructor = ParseException;
  AlternativesFailure.prototype = Object.create(ErrorResult.prototype);
  AlternativesFailure.prototype.constructor = AlternativesFailure;
  UnparsedRemainder.prototype = Object.create(ErrorResult.prototype);
  UnparsedRemainder.prototype.constructor = UnparsedRemainder;
  ParsedValue.prototype = Object.create(Parsed.prototype);
  ParsedValue.prototype.constructor = ParsedValue;
  //endregion
  function AndCombinator(consumersImpl, transform) {
    this.w1f_1 = consumersImpl;
    this.x1f_1 = transform;
    var tmp = this;
    var tmp$ret$2;
    // Inline function 'kotlin.collections.filter' call
    var tmp0_filter = get_indices(this.w1f_1);
    var tmp$ret$1;
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo = ArrayList_init_$Create$();
    var inductionVariable = tmp0_filter.m1_1;
    var last = tmp0_filter.n1_1;
    if (inductionVariable <= last)
      do {
        var element = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'com.github.h0tk3y.betterParse.combinators.AndCombinator.nonSkippedIndices.<anonymous>' call
        var tmp_0 = this.w1f_1.l(element);
        tmp$ret$0 = !(tmp_0 instanceof SkipParser);
        if (tmp$ret$0) {
          tmp0_filterTo.a(element);
        }
      }
       while (!(element === last));
    tmp$ret$1 = tmp0_filterTo;
    tmp$ret$2 = tmp$ret$1;
    tmp.y1f_1 = tmp$ret$2;
  }
  AndCombinator.prototype.z1f = function () {
    return this.w1f_1;
  };
  AndCombinator.prototype.a1g = function (tokens, fromPosition) {
    var nextPosition = fromPosition;
    var results = null;
    var inductionVariable = 0;
    var last = this.w1f_1.i();
    if (inductionVariable < last)
      loop: do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var consumer = this.w1f_1.l(index);
        var tmp1_subject = consumer;
        if (isInterface(tmp1_subject, Parser)) {
          var result = consumer.a1g(tokens, nextPosition);
          var tmp2_subject = result;
          if (tmp2_subject instanceof ErrorResult)
            return result;
          else {
            if (tmp2_subject instanceof Parsed) {
              var tmp3_elvis_lhs = results;
              var tmp;
              if (tmp3_elvis_lhs == null) {
                var tmp$ret$0;
                // Inline function 'kotlin.also' call
                var tmp0_also = ArrayList_init_$Create$();
                // Inline function 'kotlin.contracts.contract' call
                // Inline function 'com.github.h0tk3y.betterParse.combinators.AndCombinator.tryParse.<anonymous>' call
                results = tmp0_also;
                tmp$ret$0 = tmp0_also;
                tmp = tmp$ret$0;
              } else {
                tmp = tmp3_elvis_lhs;
              }
              tmp.a(result.f1());
              nextPosition = result.c1g();
            }
          }
        } else {
          if (tmp1_subject instanceof SkipParser) {
            var result_0 = consumer.b1g_1.a1g(tokens, nextPosition);
            var tmp4_subject = result_0;
            if (tmp4_subject instanceof ErrorResult)
              return result_0;
            else {
              if (tmp4_subject instanceof Parsed)
                nextPosition = result_0.c1g();
            }
          } else {
            throw IllegalArgumentException_init_$Create$();
          }
        }
      }
       while (inductionVariable < last);
    var tmp5_elvis_lhs = results;
    return new ParsedValue(this.x1f_1(tmp5_elvis_lhs == null ? emptyList() : tmp5_elvis_lhs), nextPosition);
  };
  AndCombinator.$metadata$ = classMeta('AndCombinator', [Parser]);
  function use(_this__u8e3s4, transform) {
    return new MapCombinator(_this__u8e3s4, transform);
  }
  function map(_this__u8e3s4, transform) {
    return new MapCombinator(_this__u8e3s4, transform);
  }
  function MapCombinator(innerParser, transform) {
    this.d1g_1 = innerParser;
    this.e1g_1 = transform;
  }
  MapCombinator.prototype.a1g = function (tokens, fromPosition) {
    var innerResult = this.d1g_1.a1g(tokens, fromPosition);
    var tmp0_subject = innerResult;
    var tmp;
    if (tmp0_subject instanceof ErrorResult) {
      tmp = innerResult;
    } else {
      if (tmp0_subject instanceof Parsed) {
        tmp = new ParsedValue(this.e1g_1(innerResult.f1()), innerResult.c1g());
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp;
  };
  MapCombinator.$metadata$ = classMeta('MapCombinator', [Parser]);
  function or(_this__u8e3s4, other) {
    var tmp;
    if (_this__u8e3s4 instanceof OrCombinator) {
      tmp = _this__u8e3s4.f1g_1;
    } else {
      tmp = listOf(_this__u8e3s4);
    }
    var leftParsers = tmp;
    var tmp_0;
    if (other instanceof OrCombinator) {
      tmp_0 = other.f1g_1;
    } else {
      tmp_0 = listOf(other);
    }
    var rightParsers = tmp_0;
    return new OrCombinator(plus(leftParsers, rightParsers));
  }
  function OrCombinator(parsers) {
    this.f1g_1 = parsers;
  }
  OrCombinator.prototype.a1g = function (tokens, fromPosition) {
    var failures = null;
    var inductionVariable = 0;
    var last = this.f1g_1.i();
    if (inductionVariable < last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var result = this.f1g_1.l(index).a1g(tokens, fromPosition);
        var tmp1_subject = result;
        if (tmp1_subject instanceof Parsed)
          return result;
        else {
          if (tmp1_subject instanceof ErrorResult) {
            if (failures == null)
              failures = ArrayList_init_$Create$();
            failures.a(result);
          }
        }
      }
       while (inductionVariable < last);
    var tmp$ret$0;
    // Inline function 'kotlin.collections.orEmpty' call
    var tmp0_orEmpty = failures;
    var tmp0_elvis_lhs = tmp0_orEmpty;
    tmp$ret$0 = tmp0_elvis_lhs == null ? emptyList() : tmp0_elvis_lhs;
    return new AlternativesFailure(tmp$ret$0);
  };
  OrCombinator.$metadata$ = classMeta('OrCombinator', [Parser]);
  function Separated(terms, separators) {
    this.g1g_1 = terms;
    this.h1g_1 = separators;
    // Inline function 'kotlin.require' call
    var tmp0_require = this.g1g_1.i() === (this.h1g_1.i() + 1 | 0) ? true : this.g1g_1.p() ? this.h1g_1.p() : false;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlin.require.<anonymous>' call
      tmp$ret$0 = 'Failed requirement.';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$_0(toString(message));
    }
  }
  Separated.prototype.i1g = function (function_0) {
    if (this.g1g_1.p())
      throw NoSuchElementException_init_$Create$();
    var result = first(this.g1g_1);
    var inductionVariable = 0;
    var last = this.h1g_1.i() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        result = function_0(result, this.h1g_1.l(i), this.g1g_1.l(i + 1 | 0));
      }
       while (inductionVariable <= last);
    return result;
  };
  Separated.$metadata$ = classMeta('Separated');
  function SeparatedCombinator(termParser, separatorParser, acceptZero) {
    this.j1g_1 = termParser;
    this.k1g_1 = separatorParser;
    this.l1g_1 = acceptZero;
  }
  SeparatedCombinator.prototype.a1g = function (tokens, fromPosition) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp$ret$0 = ArrayList_init_$Create$();
    var termMatches = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp$ret$1 = ArrayList_init_$Create$();
    var separatorMatches = tmp$ret$1;
    var first = this.j1g_1.a1g(tokens, fromPosition);
    var tmp0_subject = first;
    var tmp;
    if (tmp0_subject instanceof ErrorResult) {
      tmp = this.l1g_1 ? new ParsedValue(new Separated(emptyList(), emptyList()), fromPosition) : first;
    } else {
      if (tmp0_subject instanceof Parsed) {
        termMatches.a(first.f1());
        var nextPosition = first.c1g();
        loop: while (true) {
          var separator = this.k1g_1.a1g(tokens, nextPosition);
          var tmp1_subject = separator;
          if (tmp1_subject instanceof ErrorResult)
            break loop;
          else {
            if (tmp1_subject instanceof Parsed) {
              var nextTerm = this.j1g_1.a1g(tokens, separator.c1g());
              var tmp2_subject = nextTerm;
              if (tmp2_subject instanceof ErrorResult)
                break loop;
              else {
                if (tmp2_subject instanceof Parsed) {
                  separatorMatches.a(separator.f1());
                  termMatches.a(nextTerm.f1());
                  nextPosition = nextTerm.c1g();
                }
              }
            }
          }
        }
        tmp = new ParsedValue(new Separated(termMatches, separatorMatches), nextPosition);
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp;
  };
  SeparatedCombinator.$metadata$ = classMeta('SeparatedCombinator', [Parser]);
  function SkipParser(innerParser) {
    this.b1g_1 = innerParser;
  }
  SkipParser.$metadata$ = classMeta('SkipParser');
  function skip(parser) {
    return new SkipParser(parser);
  }
  function parseToEnd(_this__u8e3s4, input) {
    return parseToEnd_0(_this__u8e3s4.p1g(), _this__u8e3s4.q1g().r1g(input));
  }
  function Grammar$tokenizer$delegate$lambda(this$0) {
    return function () {
      return new DefaultTokenizer(this$0.s1g());
    };
  }
  function Grammar() {
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.arrayListOf' call
    tmp$ret$0 = ArrayList_init_$Create$();
    tmp.m1g_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    // Inline function 'kotlin.collections.linkedSetOf' call
    tmp$ret$1 = LinkedHashSet_init_$Create$();
    tmp_0.n1g_1 = tmp$ret$1;
    var tmp_1 = this;
    tmp_1.o1g_1 = lazy(Grammar$tokenizer$delegate$lambda(this));
  }
  Grammar.prototype.s1g = function () {
    var tmp$ret$1;
    // Inline function 'kotlin.collections.distinctBy' call
    var tmp0_distinctBy = this.m1g_1;
    var set = HashSet_init_$Create$();
    var list = ArrayList_init_$Create$();
    var tmp0_iterator = tmp0_distinctBy.f();
    while (tmp0_iterator.g()) {
      var e = tmp0_iterator.h();
      var tmp$ret$0;
      // Inline function 'com.github.h0tk3y.betterParse.grammar.Grammar.<get-tokens>.<anonymous>' call
      var tmp0_elvis_lhs = e.t1g_1;
      tmp$ret$0 = tmp0_elvis_lhs == null ? e : tmp0_elvis_lhs;
      var key = tmp$ret$0;
      if (set.a(key)) {
        list.a(e);
      }
    }
    tmp$ret$1 = list;
    return tmp$ret$1;
  };
  Grammar.prototype.q1g = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = tokenizer$factory();
    tmp$ret$0 = this.o1g_1.f1();
    return tmp$ret$0;
  };
  Grammar.prototype.a1g = function (tokens, fromPosition) {
    return this.p1g().a1g(tokens, fromPosition);
  };
  Grammar.prototype.v1g = function (_this__u8e3s4, thisRef, property) {
    var tmp$ret$0;
    // Inline function 'kotlin.also' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.h0tk3y.betterParse.grammar.Grammar.provideDelegate.<anonymous>' call
    this.n1g_1.a(_this__u8e3s4);
    tmp$ret$0 = _this__u8e3s4;
    return tmp$ret$0;
  };
  Grammar.prototype.w1g = function (_this__u8e3s4, thisRef, property) {
    return _this__u8e3s4;
  };
  Grammar.prototype.x1g = function (_this__u8e3s4, thisRef, property) {
    var tmp$ret$0;
    // Inline function 'kotlin.also' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'com.github.h0tk3y.betterParse.grammar.Grammar.provideDelegate.<anonymous>' call
    if (_this__u8e3s4.t1g_1 == null) {
      _this__u8e3s4.t1g_1 = property.callableName;
    }
    this.m1g_1.a(_this__u8e3s4);
    tmp$ret$0 = _this__u8e3s4;
    return tmp$ret$0;
  };
  Grammar.prototype.y1g = function (_this__u8e3s4, thisRef, property) {
    return _this__u8e3s4;
  };
  Grammar.$metadata$ = classMeta('Grammar', [Parser]);
  function parser(block) {
    return new ParserReference(block);
  }
  function ParserReference(parserProvider) {
    this.z1g_1 = lazy(parserProvider);
  }
  ParserReference.prototype.a1h = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = parser$factory();
    tmp$ret$0 = this.z1g_1.f1();
    return tmp$ret$0;
  };
  ParserReference.prototype.a1g = function (tokens, fromPosition) {
    return this.a1h().a1g(tokens, fromPosition);
  };
  ParserReference.$metadata$ = classMeta('ParserReference', [Parser]);
  function tokenizer$factory() {
    return getPropertyCallableRef('tokenizer', 1, KProperty1, function (receiver) {
      return receiver.q1g();
    }, null);
  }
  function parser$factory() {
    return getPropertyCallableRef('parser', 1, KProperty1, function (receiver) {
      return receiver.a1h();
    }, null);
  }
  function DefaultTokenizer(tokens) {
    this.b1h_1 = tokens;
    // Inline function 'kotlin.require' call
    var tmp$ret$0;
    // Inline function 'kotlin.collections.isNotEmpty' call
    var tmp0_isNotEmpty = this.b1h_1;
    tmp$ret$0 = !tmp0_isNotEmpty.p();
    var tmp1_require = tmp$ret$0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp1_require) {
      var tmp$ret$1;
      // Inline function 'com.github.h0tk3y.betterParse.lexer.DefaultTokenizer.<anonymous>' call
      tmp$ret$1 = 'The tokens list should not be empty';
      var message = tmp$ret$1;
      throw IllegalArgumentException_init_$Create$_0(toString(message));
    }
  }
  DefaultTokenizer.prototype.r1g = function (input) {
    return this.c1h(isCharSequence(input) ? input : THROW_CCE());
  };
  DefaultTokenizer.prototype.c1h = function (input) {
    var tmp = new DefaultTokenProducer(this.b1h_1, input);
    return TokenMatchesSequence_init_$Create$(tmp, null, 2, null);
  };
  DefaultTokenizer.$metadata$ = classMeta('DefaultTokenizer', [Tokenizer]);
  function DefaultTokenProducer(tokens, input) {
    this.d1h_1 = tokens;
    this.e1h_1 = input;
    this.f1h_1 = charSequenceLength(this.e1h_1);
    this.g1h_1 = 0;
    this.h1h_1 = 0;
    this.i1h_1 = 1;
    this.j1h_1 = 1;
    this.k1h_1 = false;
  }
  DefaultTokenProducer.prototype.l1h = function () {
    if (this.h1h_1 > get_lastIndex(this.e1h_1) ? true : this.k1h_1) {
      return null;
    }
    var inductionVariable = 0;
    var last = this.d1h_1.i();
    if (inductionVariable < last)
      $l$loop: do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var token = this.d1h_1.l(index);
        var matchLength = token.m1h(this.e1h_1, this.h1h_1);
        if (matchLength === 0)
          continue $l$loop;
        var tmp1_this = this;
        var tmp2 = tmp1_this.g1h_1;
        tmp1_this.g1h_1 = tmp2 + 1 | 0;
        var result = new TokenMatch(token, tmp2, this.e1h_1, this.h1h_1, matchLength, this.i1h_1, this.j1h_1);
        var inductionVariable_0 = this.h1h_1;
        var last_0 = this.h1h_1 + matchLength | 0;
        if (inductionVariable_0 < last_0)
          do {
            var i = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            if (equals(new Char(charSequenceGet(this.e1h_1, i)), new Char(_Char___init__impl__6a9atx(10)))) {
              var tmp4_this = this;
              var tmp5 = tmp4_this.i1h_1;
              tmp4_this.i1h_1 = tmp5 + 1 | 0;
              this.j1h_1 = 1;
            } else {
              var tmp6_this = this;
              var tmp7 = tmp6_this.j1h_1;
              tmp6_this.j1h_1 = tmp7 + 1 | 0;
            }
          }
           while (inductionVariable_0 < last_0);
        var tmp8_this = this;
        tmp8_this.h1h_1 = tmp8_this.h1h_1 + matchLength | 0;
        return result;
      }
       while (inductionVariable < last);
    this.k1h_1 = true;
    var tmp = get_noneMatched();
    var tmp9_this = this;
    var tmp10 = tmp9_this.g1h_1;
    tmp9_this.g1h_1 = tmp10 + 1 | 0;
    return new TokenMatch(tmp, tmp10, this.e1h_1, this.h1h_1, this.f1h_1 - this.h1h_1 | 0, this.i1h_1, this.j1h_1);
  };
  DefaultTokenProducer.$metadata$ = classMeta('DefaultTokenProducer', [TokenProducer]);
  function literalToken(text, ignore) {
    if (text.length === 1)
      return new CharToken(null, charSequenceGet(text, 0), ignore);
    return new LiteralToken(null, text, ignore);
  }
  function literalToken$default(text, ignore, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      ignore = false;
    return literalToken(text, ignore);
  }
  function CharToken(name, text, ignored) {
    Token.call(this, name, ignored);
    this.p1h_1 = text;
  }
  CharToken.prototype.m1h = function (input, fromIndex) {
    var tmp;
    var tmp_0;
    var tmp$ret$0;
    // Inline function 'kotlin.text.isNotEmpty' call
    tmp$ret$0 = charSequenceLength(input) > 0;
    if (tmp$ret$0) {
      tmp_0 = equals(new Char(charSequenceGet(input, fromIndex)), new Char(this.p1h_1));
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = 1;
    } else {
      tmp = 0;
    }
    return tmp;
  };
  CharToken.prototype.toString = function () {
    var tmp0_elvis_lhs = this.t1g_1;
    return (tmp0_elvis_lhs == null ? '' : tmp0_elvis_lhs) + ' (' + new Char(this.p1h_1) + ')' + (this.u1g_1 ? ' [ignorable]' : '');
  };
  CharToken.$metadata$ = classMeta('CharToken', undefined, undefined, undefined, undefined, Token.prototype);
  function LiteralToken(name, text, ignored) {
    Token.call(this, name, ignored);
    this.t1h_1 = text;
  }
  LiteralToken.prototype.m1h = function (input, fromIndex) {
    var tmp;
    if (startsWith$default(input, this.t1h_1, fromIndex, false, 4, null)) {
      tmp = this.t1h_1.length;
    } else {
      tmp = 0;
    }
    return tmp;
  };
  LiteralToken.prototype.toString = function () {
    var tmp0_elvis_lhs = this.t1g_1;
    return (tmp0_elvis_lhs == null ? '' : tmp0_elvis_lhs) + ' (' + this.t1h_1 + ')' + (this.u1g_1 ? ' [ignorable]' : '');
  };
  LiteralToken.$metadata$ = classMeta('LiteralToken', undefined, undefined, undefined, undefined, Token.prototype);
  function get_noneMatched() {
    init_properties_Token_kt_kqa9y3();
    return noneMatched;
  }
  var noneMatched;
  function tryParseImpl($this, tokens, fromPosition) {
    var $this_0 = $this;
    var tokens_0 = tokens;
    var fromPosition_0 = fromPosition;
    $l$1: do {
      $l$0: do {
        var tmp0_elvis_lhs = tokens_0.l(fromPosition_0);
        var tmp;
        if (tmp0_elvis_lhs == null) {
          return new UnexpectedEof($this_0);
        } else {
          tmp = tmp0_elvis_lhs;
        }
        var tokenMatch = tmp;
        var tmp_0;
        if (equals(tokenMatch.w1h_1, $this_0)) {
          tmp_0 = tokenMatch;
        } else if (equals(tokenMatch.w1h_1, get_noneMatched())) {
          tmp_0 = new NoMatchingToken(tokenMatch);
        } else if (tokenMatch.w1h_1.u1g_1) {
          var tmp0 = $this_0;
          var tmp1 = tokens_0;
          var tmp2 = fromPosition_0 + 1 | 0;
          $this_0 = tmp0;
          tokens_0 = tmp1;
          fromPosition_0 = tmp2;
          continue $l$0;
        } else {
          tmp_0 = new MismatchedToken($this_0, tokenMatch);
        }
        return tmp_0;
      }
       while (false);
    }
     while (true);
  }
  function Token(name, ignored) {
    this.t1g_1 = name;
    this.u1g_1 = ignored;
  }
  Token.prototype.q1h = function (_set____db54di) {
    this.t1g_1 = _set____db54di;
  };
  Token.prototype.zc = function () {
    return this.t1g_1;
  };
  Token.prototype.a1g = function (tokens, fromPosition) {
    return tryParseImpl(this, tokens, fromPosition);
  };
  Token.$metadata$ = classMeta('Token', [Parser]);
  function noneMatched$1() {
    Token.call(this, 'no token matched', false);
  }
  noneMatched$1.prototype.m1h = function (input, fromIndex) {
    return 0;
  };
  noneMatched$1.prototype.toString = function () {
    return 'noneMatched!';
  };
  noneMatched$1.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, Token.prototype);
  var properties_initialized_Token_kt_3j5vlj;
  function init_properties_Token_kt_kqa9y3() {
    if (properties_initialized_Token_kt_3j5vlj) {
    } else {
      properties_initialized_Token_kt_3j5vlj = true;
      noneMatched = new noneMatched$1();
    }
  }
  function TokenMatch(type, tokenIndex, input, offset, length, row, column) {
    Parsed.call(this);
    this.w1h_1 = type;
    this.x1h_1 = tokenIndex;
    this.y1h_1 = input;
    this.z1h_1 = offset;
    this.a1i_1 = length;
    this.b1i_1 = row;
    this.c1i_1 = column;
  }
  TokenMatch.prototype.f1i = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.text.substring' call
    var tmp0_substring = this.y1h_1;
    var tmp1_substring = this.z1h_1;
    var tmp2_substring = this.z1h_1 + this.a1i_1 | 0;
    tmp$ret$0 = toString(charSequenceSubSequence(tmp0_substring, tmp1_substring, tmp2_substring));
    return tmp$ret$0;
  };
  TokenMatch.prototype.f1 = function () {
    return this;
  };
  TokenMatch.prototype.c1g = function () {
    return this.x1h_1 + 1 | 0;
  };
  TokenMatch.prototype.toString = function () {
    return '' + this.w1h_1.t1g_1 + '@' + this.c1g() + ' for "' + this.f1i() + '" at ' + this.z1h_1 + ' (' + this.b1i_1 + ':' + this.c1i_1 + ')';
  };
  TokenMatch.prototype.hashCode = function () {
    var result = hashCode(this.w1h_1);
    result = imul(result, 31) + this.x1h_1 | 0;
    result = imul(result, 31) + hashCode(this.y1h_1) | 0;
    result = imul(result, 31) + this.z1h_1 | 0;
    result = imul(result, 31) + this.a1i_1 | 0;
    result = imul(result, 31) + this.b1i_1 | 0;
    result = imul(result, 31) + this.c1i_1 | 0;
    return result;
  };
  TokenMatch.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof TokenMatch))
      return false;
    var tmp0_other_with_cast = other instanceof TokenMatch ? other : THROW_CCE();
    if (!equals(this.w1h_1, tmp0_other_with_cast.w1h_1))
      return false;
    if (!(this.x1h_1 === tmp0_other_with_cast.x1h_1))
      return false;
    if (!equals(this.y1h_1, tmp0_other_with_cast.y1h_1))
      return false;
    if (!(this.z1h_1 === tmp0_other_with_cast.z1h_1))
      return false;
    if (!(this.a1i_1 === tmp0_other_with_cast.a1i_1))
      return false;
    if (!(this.b1i_1 === tmp0_other_with_cast.b1i_1))
      return false;
    if (!(this.c1i_1 === tmp0_other_with_cast.c1i_1))
      return false;
    return true;
  };
  TokenMatch.$metadata$ = classMeta('TokenMatch', undefined, undefined, undefined, undefined, Parsed.prototype);
  function TokenMatchesSequence_init_$Init$(tokenProducer, matches, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0)) {
      var tmp$ret$0;
      var tmp$ret$0_0;
      // Inline function 'kotlin.collections.arrayListOf' call
      tmp$ret$0 = ArrayList_init_$Create$();
      tmp$ret$0_0 = Unit_getInstance();
      matches = tmp$ret$0;
    }
    TokenMatchesSequence.call($this, tokenProducer, matches);
    return $this;
  }
  function TokenMatchesSequence_init_$Create$(tokenProducer, matches, $mask0, $marker) {
    return TokenMatchesSequence_init_$Init$(tokenProducer, matches, $mask0, $marker, Object.create(TokenMatchesSequence.prototype));
  }
  function TokenMatchesSequence$iterator$1(this$0) {
    this.k1i_1 = this$0;
    AbstractIterator.call(this);
    this.i1i_1 = 0;
    this.j1i_1 = false;
  }
  TokenMatchesSequence$iterator$1.prototype.b2 = function () {
    if (this.j1i_1) {
      this.f2();
    }
    var tmp0_elvis_lhs = this.k1i_1.l(this.i1i_1);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$0;
      // Inline function 'kotlin.run' call
      // Inline function 'kotlin.contracts.contract' call
      this.f2();
      return Unit_getInstance();
      tmp = tmp$ret$0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var nextMatch = tmp;
    this.e2(nextMatch);
    if (equals(nextMatch.w1h_1, get_noneMatched())) {
      this.j1i_1 = true;
    }
    var tmp1_this = this;
    tmp1_this.i1i_1 = tmp1_this.i1i_1 + 1 | 0;
  };
  TokenMatchesSequence$iterator$1.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, AbstractIterator.prototype);
  function TokenMatchesSequence(tokenProducer, matches) {
    this.u1h_1 = tokenProducer;
    this.v1h_1 = matches;
  }
  TokenMatchesSequence.prototype.l = function (position) {
    var tmp$ret$0;
    $l$block: {
      // Inline function 'com.github.h0tk3y.betterParse.lexer.TokenMatchesSequence.ensureReadPosition' call
      while (position >= this.v1h_1.i()) {
        var tmp0_elvis_lhs = this.u1h_1.l1h();
        var tmp;
        if (tmp0_elvis_lhs == null) {
          tmp$ret$0 = false;
          break $l$block;
        } else {
          tmp = tmp0_elvis_lhs;
        }
        var next = tmp;
        this.v1h_1.a(next);
      }
      tmp$ret$0 = true;
    }
    if (!tmp$ret$0) {
      return null;
    }
    return this.v1h_1.l(position);
  };
  TokenMatchesSequence.prototype.l1i = function (position) {
    var tmp$ret$0;
    $l$block: {
      // Inline function 'com.github.h0tk3y.betterParse.lexer.TokenMatchesSequence.ensureReadPosition' call
      while (position >= this.v1h_1.i()) {
        var tmp0_elvis_lhs = this.u1h_1.l1h();
        var tmp;
        if (tmp0_elvis_lhs == null) {
          tmp$ret$0 = false;
          break $l$block;
        } else {
          tmp = tmp0_elvis_lhs;
        }
        var next = tmp;
        this.v1h_1.a(next);
      }
      tmp$ret$0 = true;
    }
    if (!tmp$ret$0) {
      return null;
    }
    var pos = position;
    while (true) {
      var tmp_0;
      if (pos < this.v1h_1.i()) {
        tmp_0 = this.v1h_1.l(pos);
      } else {
        var next_0 = this.u1h_1.l1h();
        var tmp_1;
        if (next_0 == null) {
          return null;
        } else {
          this.v1h_1.a(next_0);
          tmp_1 = next_0;
        }
        tmp_0 = tmp_1;
      }
      var value = tmp_0;
      if (!value.w1h_1.u1g_1)
        return value;
      var tmp0 = pos;
      pos = tmp0 + 1 | 0;
    }
  };
  TokenMatchesSequence.prototype.f = function () {
    return new TokenMatchesSequence$iterator$1(this);
  };
  TokenMatchesSequence.$metadata$ = classMeta('TokenMatchesSequence', [Sequence]);
  function TokenProducer() {
  }
  TokenProducer.$metadata$ = interfaceMeta('TokenProducer');
  function Tokenizer() {
  }
  Tokenizer.$metadata$ = interfaceMeta('Tokenizer');
  function Parser() {
  }
  Parser.$metadata$ = interfaceMeta('Parser');
  function ParseResult() {
  }
  ParseResult.$metadata$ = classMeta('ParseResult');
  function UnexpectedEof(expected) {
    ErrorResult.call(this);
    this.m1i_1 = expected;
  }
  UnexpectedEof.prototype.toString = function () {
    return 'UnexpectedEof(expected=' + this.m1i_1 + ')';
  };
  UnexpectedEof.prototype.hashCode = function () {
    return hashCode(this.m1i_1);
  };
  UnexpectedEof.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof UnexpectedEof))
      return false;
    var tmp0_other_with_cast = other instanceof UnexpectedEof ? other : THROW_CCE();
    if (!equals(this.m1i_1, tmp0_other_with_cast.m1i_1))
      return false;
    return true;
  };
  UnexpectedEof.$metadata$ = classMeta('UnexpectedEof', undefined, undefined, undefined, undefined, ErrorResult.prototype);
  function NoMatchingToken(tokenMismatch) {
    ErrorResult.call(this);
    this.n1i_1 = tokenMismatch;
  }
  NoMatchingToken.prototype.toString = function () {
    return 'NoMatchingToken(tokenMismatch=' + this.n1i_1 + ')';
  };
  NoMatchingToken.prototype.hashCode = function () {
    return this.n1i_1.hashCode();
  };
  NoMatchingToken.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof NoMatchingToken))
      return false;
    var tmp0_other_with_cast = other instanceof NoMatchingToken ? other : THROW_CCE();
    if (!this.n1i_1.equals(tmp0_other_with_cast.n1i_1))
      return false;
    return true;
  };
  NoMatchingToken.$metadata$ = classMeta('NoMatchingToken', undefined, undefined, undefined, undefined, ErrorResult.prototype);
  function MismatchedToken(expected, found) {
    ErrorResult.call(this);
    this.o1i_1 = expected;
    this.p1i_1 = found;
  }
  MismatchedToken.prototype.toString = function () {
    return 'MismatchedToken(expected=' + this.o1i_1 + ', found=' + this.p1i_1 + ')';
  };
  MismatchedToken.prototype.hashCode = function () {
    var result = hashCode(this.o1i_1);
    result = imul(result, 31) + this.p1i_1.hashCode() | 0;
    return result;
  };
  MismatchedToken.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MismatchedToken))
      return false;
    var tmp0_other_with_cast = other instanceof MismatchedToken ? other : THROW_CCE();
    if (!equals(this.o1i_1, tmp0_other_with_cast.o1i_1))
      return false;
    if (!this.p1i_1.equals(tmp0_other_with_cast.p1i_1))
      return false;
    return true;
  };
  MismatchedToken.$metadata$ = classMeta('MismatchedToken', undefined, undefined, undefined, undefined, ErrorResult.prototype);
  function Parsed() {
    ParseResult.call(this);
  }
  Parsed.prototype.toString = function () {
    return 'Parsed(' + this.f1() + ')';
  };
  Parsed.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof Parsed)
      other;
    else
      THROW_CCE();
    if (!equals(this.f1(), other.f1()))
      return false;
    if (!(this.c1g() === other.c1g()))
      return false;
    return true;
  };
  Parsed.prototype.hashCode = function () {
    var tmp0_safe_receiver = this.f1();
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
    var result = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    result = imul(31, result) + this.c1g() | 0;
    return result;
  };
  Parsed.$metadata$ = classMeta('Parsed', undefined, undefined, undefined, undefined, ParseResult.prototype);
  function ErrorResult() {
    ParseResult.call(this);
  }
  ErrorResult.prototype.toString = function () {
    return 'ErrorResult';
  };
  ErrorResult.$metadata$ = classMeta('ErrorResult', undefined, undefined, undefined, undefined, ParseResult.prototype);
  function ParseException(errorResult) {
    Exception_init_$Init$('Could not parse input: ' + errorResult, this);
    this.q1i_1 = errorResult;
    captureStack(this, ParseException);
  }
  ParseException.$metadata$ = classMeta('ParseException', undefined, undefined, undefined, undefined, Exception.prototype);
  function AlternativesFailure(errors) {
    ErrorResult.call(this);
    this.r1i_1 = errors;
  }
  AlternativesFailure.prototype.toString = function () {
    return 'AlternativesFailure(errors=' + this.r1i_1 + ')';
  };
  AlternativesFailure.prototype.hashCode = function () {
    return hashCode(this.r1i_1);
  };
  AlternativesFailure.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof AlternativesFailure))
      return false;
    var tmp0_other_with_cast = other instanceof AlternativesFailure ? other : THROW_CCE();
    if (!equals(this.r1i_1, tmp0_other_with_cast.r1i_1))
      return false;
    return true;
  };
  AlternativesFailure.$metadata$ = classMeta('AlternativesFailure', undefined, undefined, undefined, undefined, ErrorResult.prototype);
  function parseToEnd_0(_this__u8e3s4, tokens) {
    return toParsedOrThrow(tryParseToEnd(_this__u8e3s4, tokens, 0)).f1();
  }
  function toParsedOrThrow(_this__u8e3s4) {
    var tmp0_subject = _this__u8e3s4;
    var tmp;
    if (tmp0_subject instanceof Parsed) {
      tmp = _this__u8e3s4;
    } else {
      if (tmp0_subject instanceof ErrorResult) {
        throw new ParseException(_this__u8e3s4);
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp;
  }
  function tryParseToEnd(_this__u8e3s4, tokens, position) {
    var result = _this__u8e3s4.a1g(tokens, position);
    var tmp0_subject = result;
    var tmp;
    if (tmp0_subject instanceof ErrorResult) {
      tmp = result;
    } else {
      if (tmp0_subject instanceof Parsed) {
        var tmp1_safe_receiver = tokens.l1i(result.c1g());
        var tmp_0;
        if (tmp1_safe_receiver == null) {
          tmp_0 = null;
        } else {
          var tmp$ret$1;
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          var tmp$ret$0;
          // Inline function 'com.github.h0tk3y.betterParse.parser.tryParseToEnd.<anonymous>' call
          tmp$ret$0 = new UnparsedRemainder(tmp1_safe_receiver);
          tmp$ret$1 = tmp$ret$0;
          tmp_0 = tmp$ret$1;
        }
        var tmp2_elvis_lhs = tmp_0;
        tmp = tmp2_elvis_lhs == null ? result : tmp2_elvis_lhs;
      } else {
        noWhenBranchMatchedException();
      }
    }
    return tmp;
  }
  function UnparsedRemainder(startsWith) {
    ErrorResult.call(this);
    this.s1i_1 = startsWith;
  }
  UnparsedRemainder.prototype.toString = function () {
    return 'UnparsedRemainder(startsWith=' + this.s1i_1 + ')';
  };
  UnparsedRemainder.prototype.hashCode = function () {
    return this.s1i_1.hashCode();
  };
  UnparsedRemainder.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof UnparsedRemainder))
      return false;
    var tmp0_other_with_cast = other instanceof UnparsedRemainder ? other : THROW_CCE();
    if (!this.s1i_1.equals(tmp0_other_with_cast.s1i_1))
      return false;
    return true;
  };
  UnparsedRemainder.$metadata$ = classMeta('UnparsedRemainder', undefined, undefined, undefined, undefined, ErrorResult.prototype);
  function ParsedValue(value, nextPosition) {
    Parsed.call(this);
    this.t1i_1 = value;
    this.u1i_1 = nextPosition;
  }
  ParsedValue.prototype.f1 = function () {
    return this.t1i_1;
  };
  ParsedValue.prototype.c1g = function () {
    return this.u1i_1;
  };
  ParsedValue.$metadata$ = classMeta('ParsedValue', undefined, undefined, undefined, undefined, Parsed.prototype);
  function Tuple() {
  }
  Tuple.$metadata$ = interfaceMeta('Tuple');
  function Tuple2(t1, t2) {
    this.v1i_1 = t1;
    this.w1i_1 = t2;
  }
  Tuple2.prototype.a4 = function () {
    return this.v1i_1;
  };
  Tuple2.prototype.b4 = function () {
    return this.w1i_1;
  };
  Tuple2.prototype.toString = function () {
    return 'Tuple2(t1=' + this.v1i_1 + ', t2=' + this.w1i_1 + ')';
  };
  Tuple2.prototype.hashCode = function () {
    var result = this.v1i_1 == null ? 0 : hashCode(this.v1i_1);
    result = imul(result, 31) + (this.w1i_1 == null ? 0 : hashCode(this.w1i_1)) | 0;
    return result;
  };
  Tuple2.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Tuple2))
      return false;
    var tmp0_other_with_cast = other instanceof Tuple2 ? other : THROW_CCE();
    if (!equals(this.v1i_1, tmp0_other_with_cast.v1i_1))
      return false;
    if (!equals(this.w1i_1, tmp0_other_with_cast.w1i_1))
      return false;
    return true;
  };
  Tuple2.$metadata$ = classMeta('Tuple2', [Tuple]);
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = AndCombinator;
  _.$_$.b = SeparatedCombinator;
  _.$_$.c = map;
  _.$_$.d = or;
  _.$_$.e = skip;
  _.$_$.f = use;
  _.$_$.g = Grammar;
  _.$_$.h = parseToEnd;
  _.$_$.i = parser;
  _.$_$.j = TokenMatch;
  _.$_$.k = Token;
  _.$_$.l = AlternativesFailure;
  _.$_$.m = NoMatchingToken;
  _.$_$.n = ParseException;
  _.$_$.o = Tuple2;
  _.$_$.p = literalToken$default;
  //endregion
  return _;
}));

//# sourceMappingURL=kotlin_com_github_h0tk3y_betterParse_better_parse.js.map


/***/ }),

/***/ 474:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
  if (true)
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(72)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  else {}
}(this, function (_, kotlin_kotlin) {
  'use strict';
  //region block: imports
  var collectionSizeOrDefault = kotlin_kotlin.$_$.o4;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.q;
  var Unit_getInstance = kotlin_kotlin.$_$.r3;
  //endregion
  //region block: pre-declaration
  //endregion
  function pmap(_this__u8e3s4, transform) {
    var tmp$ret$1;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(_this__u8e3s4, 10));
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      tmp0_mapTo.a(transform(item));
    }
    tmp$ret$0 = tmp0_mapTo;
    tmp$ret$1 = tmp$ret$0;
    return tmp$ret$1;
  }
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = pmap;
  //endregion
  return _;
}));

//# sourceMappingURL=kotlin_com_github_shwaka_parautil_parautil_parallel.js.map


/***/ }),

/***/ 11:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
  if (true)
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(72)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  else {}
}(this, function (_, kotlin_kotlin) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var log10 = Math.log10;
  var interfaceMeta = kotlin_kotlin.$_$.r7;
  var Long = kotlin_kotlin.$_$.na;
  var Unit_getInstance = kotlin_kotlin.$_$.r3;
  var ArithmeticException_init_$Create$ = kotlin_kotlin.$_$.f1;
  var RuntimeException_init_$Create$ = kotlin_kotlin.$_$.s1;
  var toString = kotlin_kotlin.$_$.r8;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.m1;
  var ensureNotNull = kotlin_kotlin.$_$.bb;
  var DoubleCompanionObject_getInstance = kotlin_kotlin.$_$.f3;
  var FloatCompanionObject_getInstance = kotlin_kotlin.$_$.g3;
  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.u1;
  var contains = kotlin_kotlin.$_$.f9;
  var contains$default = kotlin_kotlin.$_$.l;
  var get_lastIndex = kotlin_kotlin.$_$.k9;
  var charSequenceGet = kotlin_kotlin.$_$.h7;
  var Char = kotlin_kotlin.$_$.ha;
  var equals = kotlin_kotlin.$_$.m7;
  var charSequenceLength = kotlin_kotlin.$_$.i7;
  var charArrayOf = kotlin_kotlin.$_$.f7;
  var split$default = kotlin_kotlin.$_$.o;
  var toLong = kotlin_kotlin.$_$.p8;
  var listOf = kotlin_kotlin.$_$.y5;
  var toLong_0 = kotlin_kotlin.$_$.x9;
  var numberToLong = kotlin_kotlin.$_$.m8;
  var objectMeta = kotlin_kotlin.$_$.n8;
  var Enum = kotlin_kotlin.$_$.ka;
  var classMeta = kotlin_kotlin.$_$.k7;
  var noWhenBranchMatchedException = kotlin_kotlin.$_$.fb;
  var Triple = kotlin_kotlin.$_$.sa;
  var numberToDouble = kotlin_kotlin.$_$.k8;
  var until = kotlin_kotlin.$_$.x8;
  var substring = kotlin_kotlin.$_$.p9;
  var THROW_CCE = kotlin_kotlin.$_$.ra;
  var abs = kotlin_kotlin.$_$.t8;
  var Pair = kotlin_kotlin.$_$.pa;
  var isNumber = kotlin_kotlin.$_$.c8;
  var getKClassFromExpression = kotlin_kotlin.$_$.d;
  var isObject = kotlin_kotlin.$_$.d8;
  var hashCode = kotlin_kotlin.$_$.q7;
  var IntCompanionObject_getInstance = kotlin_kotlin.$_$.h3;
  var abs_0 = kotlin_kotlin.$_$.s8;
  var StringBuilder_init_$Create$ = kotlin_kotlin.$_$.e1;
  var Comparable = kotlin_kotlin.$_$.ia;
  var getKClass = kotlin_kotlin.$_$.e;
  var PrimitiveClasses_getInstance = kotlin_kotlin.$_$.k3;
  var NumberFormatException_init_$Create$ = kotlin_kotlin.$_$.q1;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.k1;
  var _ULongArray___get_size__impl__ju6dtr = kotlin_kotlin.$_$.y2;
  var ULongArray = kotlin_kotlin.$_$.wa;
  var numberToInt = kotlin_kotlin.$_$.l8;
  var UByte = kotlin_kotlin.$_$.ta;
  var UShort = kotlin_kotlin.$_$.ya;
  var UInt = kotlin_kotlin.$_$.va;
  var ULong = kotlin_kotlin.$_$.xa;
  var ULongArray__hashCode_impl_aze4wa = kotlin_kotlin.$_$.u2;
  var UIntArray = kotlin_kotlin.$_$.ua;
  var UIntArray__hashCode_impl_hr7ost = kotlin_kotlin.$_$.i2;
  var _ULong___init__impl__c78o9k = kotlin_kotlin.$_$.o2;
  var _UInt___init__impl__l7qpdl = kotlin_kotlin.$_$.c2;
  var _UIntArray___init__impl__ghjpc6 = kotlin_kotlin.$_$.f2;
  var _UInt___get_data__impl__f0vqqw = kotlin_kotlin.$_$.d2;
  var _UIntArray___init__impl__ghjpc6_0 = kotlin_kotlin.$_$.g2;
  var UIntArray__isEmpty_impl_vd8j4n = kotlin_kotlin.$_$.j2;
  var _UIntArray___get_size__impl__r6l8ci = kotlin_kotlin.$_$.m2;
  var UIntArray__get_impl_gp5kza = kotlin_kotlin.$_$.h2;
  var _UIntArray___get_storage__impl__92a0v0 = kotlin_kotlin.$_$.n2;
  var copyOfRange = kotlin_kotlin.$_$.t4;
  var uintCompare = kotlin_kotlin.$_$.jb;
  var _ULong___get_data__impl__fggpzb = kotlin_kotlin.$_$.p2;
  var UIntArray__set_impl_7f2zu2 = kotlin_kotlin.$_$.l2;
  var println = kotlin_kotlin.$_$.b7;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.r;
  var UIntArray__iterator_impl_tkdv7k = kotlin_kotlin.$_$.k2;
  var uintDivide = kotlin_kotlin.$_$.kb;
  var uintRemainder = kotlin_kotlin.$_$.lb;
  var ulongDivide = kotlin_kotlin.$_$.nb;
  var ulongCompare = kotlin_kotlin.$_$.mb;
  var ULongArray__iterator_impl_cq4d2h = kotlin_kotlin.$_$.w2;
  var ULongArray__get_impl_pr71q9 = kotlin_kotlin.$_$.t2;
  var longArrayOf = kotlin_kotlin.$_$.g8;
  var _ULongArray___init__impl__twm1l3 = kotlin_kotlin.$_$.s2;
  var _ULongArray___get_storage__impl__28e64j = kotlin_kotlin.$_$.z2;
  var copyOfRange_0 = kotlin_kotlin.$_$.u4;
  var ULongArray__isEmpty_impl_c3yngu = kotlin_kotlin.$_$.v2;
  var longArray = kotlin_kotlin.$_$.h8;
  var arrayCopy = kotlin_kotlin.$_$.l4;
  var ULongArray__set_impl_z19mvh = kotlin_kotlin.$_$.x2;
  var plus = kotlin_kotlin.$_$.e6;
  var toULongArray = kotlin_kotlin.$_$.w6;
  var slice = kotlin_kotlin.$_$.h6;
  var _ULongArray___init__impl__twm1l3_0 = kotlin_kotlin.$_$.r2;
  var ulongRemainder = kotlin_kotlin.$_$.ob;
  var copyOf = kotlin_kotlin.$_$.y4;
  var toString_0 = kotlin_kotlin.$_$.z9;
  var isCharSequence = kotlin_kotlin.$_$.w7;
  var reversed = kotlin_kotlin.$_$.n9;
  var _UShort___get_data__impl__g0245 = kotlin_kotlin.$_$.b3;
  var _UByte___get_data__impl__jof9qr = kotlin_kotlin.$_$.a2;
  var Companion_getInstance = kotlin_kotlin.$_$.m3;
  var Char__minus_impl_a2frrh = kotlin_kotlin.$_$.v1;
  var Char__minus_impl_a2frrh_0 = kotlin_kotlin.$_$.w1;
  var Char__toInt_impl_vasixd = kotlin_kotlin.$_$.x1;
  //endregion
  //region block: pre-declaration
  function tryFromFloat$default(float, exactRequired, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      exactRequired = false;
    return $handler == null ? this.ph(float, exactRequired) : $handler(float, exactRequired);
  }
  function tryFromDouble$default(double, exactRequired, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      exactRequired = false;
    return $handler == null ? this.rh(double, exactRequired) : $handler(double, exactRequired);
  }
  function get_isNegative() {
    return this.yh() < 0;
  }
  function get_isPositive() {
    return this.yh() > 0;
  }
  function plus_0(other) {
    return this.ci().th(other);
  }
  function minus(other) {
    return this.ci().uh(other);
  }
  function times(other) {
    return this.ci().vh(other);
  }
  function div(other) {
    return this.ci().wh(other);
  }
  function rem(other) {
    return this.ci().xh(other);
  }
  function plus_1(int) {
    return this.ci().th(this.bi().oh(int));
  }
  function minus_0(int) {
    return this.ci().uh(this.bi().oh(int));
  }
  function div_0(int) {
    return this.ci().wh(this.bi().oh(int));
  }
  function div_1(long) {
    return this.ci().wh(this.bi().nh(long));
  }
  ScaleOps.prototype = Object.create(Enum.prototype);
  ScaleOps.prototype.constructor = ScaleOps;
  RoundingMode.prototype = Object.create(Enum.prototype);
  RoundingMode.prototype.constructor = RoundingMode;
  Sign.prototype = Object.create(Enum.prototype);
  Sign.prototype.constructor = Sign;
  //endregion
  function Creator() {
  }
  Creator.$metadata$ = interfaceMeta('Creator');
  function Util() {
  }
  Util.$metadata$ = interfaceMeta('Util');
  function BigNumber() {
  }
  BigNumber.$metadata$ = interfaceMeta('BigNumber');
  function CommonBigNumberOperations() {
  }
  CommonBigNumberOperations.$metadata$ = interfaceMeta('CommonBigNumberOperations');
  function NarrowingOperations() {
  }
  NarrowingOperations.$metadata$ = interfaceMeta('NarrowingOperations');
  function ByteArraySerializable() {
  }
  ByteArraySerializable.$metadata$ = interfaceMeta('ByteArraySerializable');
  function BitwiseCapable() {
  }
  BitwiseCapable.$metadata$ = interfaceMeta('BitwiseCapable');
  function ByteArrayDeserializable() {
  }
  ByteArrayDeserializable.$metadata$ = interfaceMeta('ByteArrayDeserializable');
  function roundOrDont($this, significand, exponent, decimalMode) {
    var tmp;
    if (decimalMode.li_1) {
      tmp = BigDecimal_init_$Create$(significand, exponent, null, 4, null);
    } else {
      tmp = roundSignificand($this, significand, exponent, decimalMode);
    }
    return tmp;
  }
  function roundDiscarded($this, significand, discarded, decimalMode) {
    var toDiscard = significand.ri().f6(decimalMode.ii_1);
    var tmp;
    if (toDiscard.c6(new Long(0, 0)) > 0) {
      tmp = significand.bj(Companion_getInstance_2().yi_1.aj(toDiscard)).si_1;
    } else {
      tmp = significand;
    }
    var result = tmp;
    var tmp_0;
    if (significand.equals(Companion_getInstance_2().vi_1)) {
      tmp_0 = discarded.oi_1;
    } else {
      tmp_0 = significand.oi_1;
    }
    var sign = tmp_0;
    var tmp_1;
    if (toDiscard.c6(new Long(0, 0)) > 0) {
      var tmp_2;
      if (discarded.equals(Companion_getInstance_2().vi_1)) {
        tmp_2 = Companion_getInstance_2().vi_1;
      } else {
        tmp_2 = discarded.b6(discarded.ri()).cj().di(significand.bj(Companion_getInstance_2().yi_1.aj(toDiscard)).ti_1.fi(Companion_getInstance_2().yi_1.aj(toDiscard)));
      }
      tmp_1 = tmp_2;
    } else {
      var tmp_3;
      if (discarded.equals(Companion_getInstance_2().vi_1)) {
        tmp_3 = Companion_getInstance_2().vi_1;
      } else {
        var tmp_4 = Companion_getInstance_2().yi_1;
        var tmp$ret$0;
        // Inline function 'kotlin.Long.minus' call
        var tmp0_minus = discarded.ri();
        tmp$ret$0 = tmp0_minus.f6(new Long(1, 0));
        tmp_3 = discarded.gi(tmp_4.aj(tmp$ret$0)).cj();
      }
      tmp_1 = tmp_3;
    }
    var significantRemainderDigit = tmp_1;
    if (significantRemainderDigit.dj()) {
      return result;
    }
    var tmp0_subject = decimalMode.ji_1;
    var tmp0 = tmp0_subject.d2_1;
    switch (tmp0) {
      case 2:
        if (sign.equals(Sign_POSITIVE_getInstance())) {
          var tmp1 = result;
          result = tmp1.bh();
        } else {
          var tmp2 = result;
          result = tmp2.ch();
        }

        break;
      case 3:
        ;
        break;
      case 1:
        if (sign.equals(Sign_POSITIVE_getInstance())) {
          var tmp3 = result;
          result = tmp3.bh();
        } else {
        }

        break;
      case 0:
        if (sign.equals(Sign_POSITIVE_getInstance())) {
        } else {
          var tmp4 = result;
          result = tmp4.ch();
        }

        break;
      case 5:
        var tmp5_subject = sign;
        var tmp0_0 = tmp5_subject.d2_1;
        switch (tmp0_0) {
          case 0:
            if (significantRemainderDigit.ej(5) >= 0) {
              var tmp6 = result;
              result = tmp6.bh();
            }

            break;
          case 1:
            if (significantRemainderDigit.ej(5) >= 0) {
              var tmp7 = result;
              result = tmp7.ch();
            }

            break;
          case 2:
            break;
        }

        break;
      case 6:
        var tmp8_subject = sign;
        var tmp0_1 = tmp8_subject.d2_1;
        switch (tmp0_1) {
          case 0:
            if (significantRemainderDigit.ej(5) > 0) {
              var tmp9 = result;
              result = tmp9.bh();
            }

            break;
          case 1:
            if (significantRemainderDigit.ej(5) > 0) {
              var tmp10 = result;
              result = tmp10.ch();
            }

            break;
          case 2:
            break;
        }

        break;
      case 7:
        var tmp11_subject = sign;
        var tmp0_2 = tmp11_subject.d2_1;
        switch (tmp0_2) {
          case 0:
            if (significantRemainderDigit.ej(5) >= 0) {
              var tmp12 = result;
              result = tmp12.bh();
            }

            break;
          case 1:
            if (significantRemainderDigit.ej(5) > 0) {
              var tmp13 = result;
              result = tmp13.ch();
            }

            break;
          case 2:
            break;
        }

        break;
      case 8:
        var tmp14_subject = sign;
        var tmp0_3 = tmp14_subject.d2_1;
        switch (tmp0_3) {
          case 0:
            if (significantRemainderDigit.ej(5) > 0) {
              var tmp15 = result;
              result = tmp15.bh();
            }

            break;
          case 1:
            if (significantRemainderDigit.ej(5) >= 0) {
              var tmp16 = result;
              result = tmp16.ch();
            }

            break;
          case 2:
            break;
        }

        break;
      case 4:
        throw ArithmeticException_init_$Create$('Non-terminating result of division operation. Specify decimalPrecision');
    }
    return result;
  }
  function roundSignificand($this, significand, exponent, decimalMode) {
    if (significand.equals(Companion_getInstance_2().vi_1)) {
      return new BigDecimal(Companion_getInstance_2().vi_1, exponent, decimalMode);
    }
    var significandDigits = significand.ri();
    var desiredPrecision = decimalMode.ii_1;
    var tmp;
    if (desiredPrecision.c6(significandDigits) > 0) {
      var extendedSignificand = significand.fi(Companion_getInstance_2().yi_1.aj(desiredPrecision.f6(significandDigits)));
      tmp = new BigDecimal(extendedSignificand, exponent, decimalMode);
    } else if (desiredPrecision.c6(significandDigits) < 0) {
      var divRem = significand.bj(Companion_getInstance_2().yi_1.aj(significandDigits.f6(desiredPrecision)));
      var tmp_0;
      if (divRem.ti_1.ri().c6(significandDigits.f6(desiredPrecision)) < 0) {
        tmp_0 = Companion_getInstance_2().vi_1;
      } else {
        tmp_0 = divRem.ti_1;
      }
      var resolvedRemainder = tmp_0;
      var newSignificand = roundDiscarded($this, divRem.si_1, resolvedRemainder, decimalMode);
      var exponentModifier = newSignificand.ri().f6(divRem.si_1.ri());
      tmp = new BigDecimal(newSignificand, exponent.e6(exponentModifier), decimalMode);
    } else {
      tmp = new BigDecimal(significand, exponent, decimalMode);
    }
    return tmp;
  }
  function applyScale($this, significand, exponent, decimalMode) {
    if (!decimalMode.mi_1) {
      return new BigDecimal(significand, exponent, decimalMode);
    }
    var tmp;
    if (exponent.c6(new Long(0, 0)) >= 0) {
      var tmp$ret$0;
      // Inline function 'kotlin.Long.plus' call
      var tmp0_plus = exponent.e6(decimalMode.ki_1);
      tmp$ret$0 = tmp0_plus.e6(new Long(1, 0));
      var tmp_0 = tmp$ret$0;
      tmp = DecimalMode_init_$Create$(tmp_0, decimalMode.ji_1, new Long(0, 0), 4, null);
    } else if (exponent.c6(new Long(0, 0)) < 0) {
      var tmp$ret$1;
      // Inline function 'kotlin.Long.plus' call
      var tmp1_plus = decimalMode.ki_1;
      tmp$ret$1 = tmp1_plus.e6(new Long(1, 0));
      var tmp_1 = tmp$ret$1;
      tmp = DecimalMode_init_$Create$(tmp_1, decimalMode.ji_1, new Long(0, 0), 4, null);
    } else {
      throw RuntimeException_init_$Create$('Unexpected state');
    }
    var workMode = tmp;
    if (decimalMode.ki_1.equals(new Long(0, 0))) {
      var digits = significand.ri();
      var tmp_2;
      if (exponent.c6(new Long(0, 0)) >= 0) {
        var tmp_3 = significand;
        $l$loop: while (true) {
          var tmp_4 = digits;
          var tmp$ret$2;
          // Inline function 'kotlin.Long.plus' call
          tmp$ret$2 = exponent.e6(new Long(1, 0));
          if (!(tmp_4.c6(tmp$ret$2) > 0)) {
            break $l$loop;
          }
          tmp_3 = tmp_3.zg(10);
          var tmp0 = digits;
          digits = tmp0.ch();
        }
        tmp_2 = tmp_3;
      } else if (exponent.c6(new Long(0, 0)) < 0) {
        tmp_2 = Companion_getInstance_2().vi_1;
      } else {
        throw IllegalStateException_init_$Create$('Should be impossible. Exponent: ' + toString(exponent));
      }
      var bigInteger = tmp_2;
      return $this.qj(bigInteger);
    }
    var tmp_5;
    if (exponent.c6(new Long(0, 0)) >= 0) {
      tmp_5 = roundSignificand($this, significand, exponent, workMode);
    } else {
      var temp = BigDecimal_init_$Create$(significand, exponent, null, 4, null).wg(significand.yh());
      tmp_5 = roundSignificand($this, temp.vj_1, temp.wj_1, workMode).xg(significand.yh());
    }
    return tmp_5;
  }
  function resolveDecimalMode($this, firstDecimalMode, secondDecimalMode, suppliedDecimalMode) {
    var tmp;
    if (!(suppliedDecimalMode == null)) {
      tmp = suppliedDecimalMode;
    } else {
      if (firstDecimalMode == null ? secondDecimalMode == null : false) {
        var tmp_0 = new Long(0, 0);
        return DecimalMode_init_$Create$(tmp_0, null, new Long(0, 0), 7, null);
      }
      if (firstDecimalMode == null ? !(secondDecimalMode == null) : false) {
        return secondDecimalMode;
      }
      if (secondDecimalMode == null ? !(firstDecimalMode == null) : false) {
        return firstDecimalMode;
      }
      if (!ensureNotNull(firstDecimalMode).ji_1.equals(ensureNotNull(secondDecimalMode).ji_1)) {
        throw ArithmeticException_init_$Create$('Different rounding modes! This: ' + firstDecimalMode.ji_1 + ' Other: ' + secondDecimalMode.ji_1);
      }
      var tmp_1;
      if (firstDecimalMode.ii_1.c6(secondDecimalMode.ii_1) >= 0) {
        tmp_1 = firstDecimalMode;
      } else {
        tmp_1 = secondDecimalMode;
      }
      var unifiedDecimalMode = tmp_1;
      tmp = unifiedDecimalMode;
    }
    return tmp;
  }
  var ScaleOps_Max_instance;
  var ScaleOps_Min_instance;
  var ScaleOps_Add_instance;
  var ScaleOps_entriesInitialized;
  function ScaleOps_initEntries() {
    if (ScaleOps_entriesInitialized)
      return Unit_getInstance();
    ScaleOps_entriesInitialized = true;
    ScaleOps_Max_instance = new ScaleOps('Max', 0);
    ScaleOps_Min_instance = new ScaleOps('Min', 1);
    ScaleOps_Add_instance = new ScaleOps('Add', 2);
  }
  function BigDecimal_init_$Init$(_significand, _exponent, decimalMode, $mask0, $marker, $this) {
    if (!(($mask0 & 2) === 0))
      _exponent = new Long(0, 0);
    if (!(($mask0 & 4) === 0))
      decimalMode = null;
    BigDecimal.call($this, _significand, _exponent, decimalMode);
    return $this;
  }
  function BigDecimal_init_$Create$(_significand, _exponent, decimalMode, $mask0, $marker) {
    return BigDecimal_init_$Init$(_significand, _exponent, decimalMode, $mask0, $marker, Object.create(BigDecimal.prototype));
  }
  function Companion() {
    Companion_instance = this;
    var tmp = this;
    var tmp_0 = Companion_getInstance_2().vi_1;
    var tmp_1 = new Long(0, 0);
    tmp.fj_1 = BigDecimal_init_$Create$(tmp_0, tmp_1, null, 6, null);
    var tmp_2 = this;
    var tmp_3 = Companion_getInstance_2().wi_1;
    var tmp_4 = new Long(0, 0);
    tmp_2.gj_1 = BigDecimal_init_$Create$(tmp_3, tmp_4, null, 6, null);
    var tmp_5 = this;
    var tmp_6 = Companion_getInstance_2().xi_1;
    var tmp_7 = new Long(0, 0);
    tmp_5.hj_1 = BigDecimal_init_$Create$(tmp_6, tmp_7, null, 6, null);
    var tmp_8 = this;
    var tmp_9 = Companion_getInstance_2().yi_1;
    var tmp_10 = new Long(1, 0);
    tmp_8.ij_1 = BigDecimal_init_$Create$(tmp_9, tmp_10, null, 4, null);
    this.jj_1 = false;
    var tmp_11 = this;
    var tmp$ret$0;
    // Inline function 'kotlin.doubleArrayOf' call
    tmp$ret$0 = new Float64Array([1.0, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, 1.0E7, 1.0E8, 1.0E9, 1.0E10, 1.0E11, 1.0E12, 1.0E13, 1.0E14, 1.0E15, 1.0E16, 1.0E17, 1.0E18, 1.0E19, 1.0E20, 1.0E21, 1.0E22]);
    tmp_11.kj_1 = tmp$ret$0;
    var tmp_12 = this;
    DoubleCompanionObject_getInstance();
    tmp_12.lj_1 = this.zj(1.7976931348623157E308, null, 2, null);
    var tmp_13 = this;
    DoubleCompanionObject_getInstance();
    tmp_13.mj_1 = this.zj(4.9E-324, null, 2, null);
    var tmp_14 = this;
    var tmp$ret$1;
    // Inline function 'kotlin.floatArrayOf' call
    tmp$ret$1 = new Float32Array([1.0, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, 1.0E7, 1.0E8, 1.0E9, 1.0E10]);
    tmp_14.nj_1 = tmp$ret$1;
    var tmp_15 = this;
    FloatCompanionObject_getInstance();
    tmp_15.oj_1 = this.ak(3.4028235E38, null, 2, null);
    var tmp_16 = this;
    FloatCompanionObject_getInstance();
    tmp_16.pj_1 = this.ak(1.4E-45, null, 2, null);
  }
  Companion.prototype.bk = function (bigInteger, decimalMode) {
    var tmp$ret$0;
    // Inline function 'kotlin.Long.minus' call
    var tmp0_minus = bigInteger.ri();
    tmp$ret$0 = tmp0_minus.f6(new Long(1, 0));
    return (new BigDecimal(bigInteger, tmp$ret$0, decimalMode)).ck(decimalMode);
  };
  Companion.prototype.dk = function (long, decimalMode) {
    var bigint = Companion_getInstance_2().nh(long);
    var tmp$ret$0;
    // Inline function 'kotlin.Long.minus' call
    var tmp0_minus = bigint.ri();
    tmp$ret$0 = tmp0_minus.f6(new Long(1, 0));
    return (new BigDecimal(bigint, tmp$ret$0, decimalMode)).ck(decimalMode);
  };
  Companion.prototype.ek = function (int, decimalMode) {
    var bigint = Companion_getInstance_2().oh(int);
    var tmp$ret$0;
    // Inline function 'kotlin.Long.minus' call
    var tmp0_minus = bigint.ri();
    tmp$ret$0 = tmp0_minus.f6(new Long(1, 0));
    return (new BigDecimal(bigint, tmp$ret$0, decimalMode)).ck(decimalMode);
  };
  Companion.prototype.fk = function (short, decimalMode) {
    var bigint = Companion_getInstance_2().gk(short);
    var tmp$ret$0;
    // Inline function 'kotlin.Long.minus' call
    var tmp0_minus = bigint.ri();
    tmp$ret$0 = tmp0_minus.f6(new Long(1, 0));
    return (new BigDecimal(bigint, tmp$ret$0, decimalMode)).ck(decimalMode);
  };
  Companion.prototype.hk = function (byte, decimalMode) {
    var bigint = Companion_getInstance_2().ik(byte);
    var tmp$ret$0;
    // Inline function 'kotlin.Long.minus' call
    var tmp0_minus = bigint.ri();
    tmp$ret$0 = tmp0_minus.f6(new Long(1, 0));
    return (new BigDecimal(bigint, tmp$ret$0, decimalMode)).ck(decimalMode);
  };
  Companion.prototype.jk = function (float, decimalMode) {
    var floatString = float.toString();
    var tmp;
    var tmp_0;
    var tmp_1 = _Char___init__impl__6a9atx(46);
    if (contains$default(floatString, tmp_1, false, 2, null)) {
      tmp_0 = !contains(floatString, _Char___init__impl__6a9atx(69), true);
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      var tmp$ret$3;
      $l$block: {
        // Inline function 'kotlin.text.dropLastWhile' call
        var inductionVariable = get_lastIndex(floatString);
        if (0 <= inductionVariable)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + -1 | 0;
            var tmp$ret$0;
            // Inline function 'com.ionspin.kotlin.bignum.decimal.Companion.fromFloat.<anonymous>' call
            var tmp0__anonymous__q1qw7t = charSequenceGet(floatString, index);
            tmp$ret$0 = equals(new Char(tmp0__anonymous__q1qw7t), new Char(_Char___init__impl__6a9atx(48)));
            if (!tmp$ret$0) {
              var tmp$ret$2;
              // Inline function 'kotlin.text.substring' call
              var tmp0_substring = index + 1 | 0;
              var tmp$ret$1;
              // Inline function 'kotlin.js.asDynamic' call
              tmp$ret$1 = floatString;
              tmp$ret$2 = tmp$ret$1.substring(0, tmp0_substring);
              tmp$ret$3 = tmp$ret$2;
              break $l$block;
            }
          }
           while (0 <= inductionVariable);
        tmp$ret$3 = '';
      }
      tmp = this.kk(tmp$ret$3, decimalMode);
    } else {
      tmp = this.kk(floatString, decimalMode);
    }
    return tmp;
  };
  Companion.prototype.ak = function (float, decimalMode, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      decimalMode = null;
    return this.jk(float, decimalMode);
  };
  Companion.prototype.lk = function (double, decimalMode) {
    var doubleString = double.toString();
    var tmp;
    var tmp_0;
    var tmp_1 = _Char___init__impl__6a9atx(46);
    if (contains$default(doubleString, tmp_1, false, 2, null)) {
      tmp_0 = !contains(doubleString, _Char___init__impl__6a9atx(69), true);
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      var tmp$ret$3;
      $l$block: {
        // Inline function 'kotlin.text.dropLastWhile' call
        var inductionVariable = get_lastIndex(doubleString);
        if (0 <= inductionVariable)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + -1 | 0;
            var tmp$ret$0;
            // Inline function 'com.ionspin.kotlin.bignum.decimal.Companion.fromDouble.<anonymous>' call
            var tmp0__anonymous__q1qw7t = charSequenceGet(doubleString, index);
            tmp$ret$0 = equals(new Char(tmp0__anonymous__q1qw7t), new Char(_Char___init__impl__6a9atx(48)));
            if (!tmp$ret$0) {
              var tmp$ret$2;
              // Inline function 'kotlin.text.substring' call
              var tmp0_substring = index + 1 | 0;
              var tmp$ret$1;
              // Inline function 'kotlin.js.asDynamic' call
              tmp$ret$1 = doubleString;
              tmp$ret$2 = tmp$ret$1.substring(0, tmp0_substring);
              tmp$ret$3 = tmp$ret$2;
              break $l$block;
            }
          }
           while (0 <= inductionVariable);
        tmp$ret$3 = '';
      }
      tmp = this.kk(tmp$ret$3, decimalMode);
    } else {
      tmp = this.kk(doubleString, decimalMode);
    }
    return tmp;
  };
  Companion.prototype.zj = function (double, decimalMode, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      decimalMode = null;
    return this.lk(double, decimalMode);
  };
  Companion.prototype.qj = function (bigInteger) {
    return this.bk(bigInteger, null);
  };
  Companion.prototype.nh = function (long) {
    return this.dk(long, null);
  };
  Companion.prototype.oh = function (int) {
    return this.ek(int, null);
  };
  Companion.prototype.gk = function (short) {
    return this.fk(short, null);
  };
  Companion.prototype.ik = function (byte) {
    return this.hk(byte, null);
  };
  Companion.prototype.ph = function (float, exactRequired) {
    return this.jk(float, null);
  };
  Companion.prototype.rh = function (double, exactRequired) {
    return this.lk(double, null);
  };
  Companion.prototype.mk = function (string) {
    return this.nk(string, null, 2, null);
  };
  Companion.prototype.kk = function (floatingPointString, decimalMode) {
    var tmp$ret$0;
    // Inline function 'kotlin.text.isEmpty' call
    tmp$ret$0 = charSequenceLength(floatingPointString) === 0;
    if (tmp$ret$0) {
      return this.fj_1;
    }
    if (contains(floatingPointString, _Char___init__impl__6a9atx(69), true)) {
      var tmp;
      var tmp_0 = _Char___init__impl__6a9atx(46);
      if (!contains$default(floatingPointString, tmp_0, false, 2, null)) {
        var tmp_1 = charArrayOf([_Char___init__impl__6a9atx(69), _Char___init__impl__6a9atx(101)]);
        var splitAroundE = split$default(floatingPointString, tmp_1, false, 0, 6, null);
        tmp = listOf([splitAroundE.l(0), '0E' + splitAroundE.l(1)]);
      } else {
        var tmp_2 = charArrayOf([_Char___init__impl__6a9atx(46)]);
        tmp = split$default(floatingPointString, tmp_2, false, 0, 6, null);
      }
      var split = tmp;
      var tmp0_subject = split.i();
      if (tmp0_subject === 2) {
        var signPresent = equals(new Char(charSequenceGet(floatingPointString, 0)), new Char(_Char___init__impl__6a9atx(45))) ? true : equals(new Char(charSequenceGet(floatingPointString, 0)), new Char(_Char___init__impl__6a9atx(43)));
        var tmp_3;
        if (signPresent) {
          tmp_3 = 1;
        } else {
          tmp_3 = 0;
        }
        var leftStart = tmp_3;
        var tmp_4;
        if (signPresent) {
          var tmp_5;
          if (equals(new Char(charSequenceGet(floatingPointString, 0)), new Char(_Char___init__impl__6a9atx(45)))) {
            tmp_5 = Sign_NEGATIVE_getInstance();
          } else {
            tmp_5 = Sign_POSITIVE_getInstance();
          }
          tmp_4 = tmp_5;
        } else {
          tmp_4 = Sign_POSITIVE_getInstance();
        }
        var sign = tmp_4;
        var tmp$ret$2;
        // Inline function 'kotlin.text.substring' call
        var tmp0_substring = split.l(0);
        var tmp$ret$1;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$1 = tmp0_substring;
        tmp$ret$2 = tmp$ret$1.substring(leftStart);
        var left = tmp$ret$2;
        var tmp_6 = split.l(1);
        var tmp_7 = charArrayOf([_Char___init__impl__6a9atx(69), _Char___init__impl__6a9atx(101)]);
        var rightSplit = split$default(tmp_6, tmp_7, false, 0, 6, null);
        var right = rightSplit.l(0);
        var exponentSplit = rightSplit.l(1);
        var exponentSignPresent = equals(new Char(charSequenceGet(exponentSplit, 0)), new Char(_Char___init__impl__6a9atx(45))) ? true : equals(new Char(charSequenceGet(exponentSplit, 0)), new Char(_Char___init__impl__6a9atx(43)));
        var tmp_8;
        if (equals(new Char(charSequenceGet(exponentSplit, 0)), new Char(_Char___init__impl__6a9atx(45)))) {
          tmp_8 = Sign_NEGATIVE_getInstance();
        } else {
          tmp_8 = Sign_POSITIVE_getInstance();
        }
        var exponentSign = tmp_8;
        var tmp_9;
        if (exponentSignPresent) {
          tmp_9 = 1;
        } else {
          tmp_9 = 0;
        }
        var skipSignIfPresent = tmp_9;
        var tmp$ret$4;
        // Inline function 'kotlin.text.substring' call
        var tmp$ret$3;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$3 = exponentSplit;
        tmp$ret$4 = tmp$ret$3.substring(skipSignIfPresent);
        var exponentString = tmp$ret$4;
        var tmp_10;
        if (exponentSign.equals(Sign_POSITIVE_getInstance())) {
          tmp_10 = toLong_0(exponentString, 10);
        } else {
          var tmp$ret$5;
          // Inline function 'kotlin.Long.times' call
          var tmp1_times = toLong_0(exponentString, 10);
          tmp$ret$5 = tmp1_times.d6(new Long(-1, -1));
          tmp_10 = tmp$ret$5;
        }
        var exponent = tmp_10;
        var tmp$ret$7;
        $l$block: {
          // Inline function 'kotlin.text.indexOfFirst' call
          var inductionVariable = 0;
          var last = charSequenceLength(left) - 1 | 0;
          if (inductionVariable <= last)
            do {
              var index = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              var tmp$ret$6;
              // Inline function 'com.ionspin.kotlin.bignum.decimal.Companion.parseStringWithMode.<anonymous>' call
              var tmp2__anonymous__z9zvc9 = charSequenceGet(left, index);
              tmp$ret$6 = !equals(new Char(tmp2__anonymous__z9zvc9), new Char(_Char___init__impl__6a9atx(48)));
              if (tmp$ret$6) {
                tmp$ret$7 = index;
                break $l$block;
              }
            }
             while (inductionVariable <= last);
          tmp$ret$7 = -1;
        }
        var leftFirstNonZero = tmp$ret$7;
        if (leftFirstNonZero === -1) {
          leftFirstNonZero = 0;
        }
        var tmp$ret$9;
        $l$block_0: {
          // Inline function 'kotlin.text.indexOfLast' call
          var inductionVariable_0 = charSequenceLength(right) - 1 | 0;
          if (0 <= inductionVariable_0)
            do {
              var index_0 = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + -1 | 0;
              var tmp$ret$8;
              // Inline function 'com.ionspin.kotlin.bignum.decimal.Companion.parseStringWithMode.<anonymous>' call
              var tmp3__anonymous__ufb84q = charSequenceGet(right, index_0);
              tmp$ret$8 = !equals(new Char(tmp3__anonymous__ufb84q), new Char(_Char___init__impl__6a9atx(48)));
              if (tmp$ret$8) {
                tmp$ret$9 = index_0;
                break $l$block_0;
              }
            }
             while (0 <= inductionVariable_0);
          tmp$ret$9 = -1;
        }
        var rightLastNonZero = tmp$ret$9;
        if (rightLastNonZero === -1) {
          rightLastNonZero = right.length - 1 | 0;
        }
        var tmp$ret$11;
        // Inline function 'kotlin.text.substring' call
        var tmp4_substring = leftFirstNonZero;
        var tmp5_substring = left.length;
        var tmp$ret$10;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$10 = left;
        tmp$ret$11 = tmp$ret$10.substring(tmp4_substring, tmp5_substring);
        var leftTruncated = tmp$ret$11;
        var tmp$ret$13;
        // Inline function 'kotlin.text.substring' call
        var tmp6_substring = rightLastNonZero + 1 | 0;
        var tmp$ret$12;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$12 = right;
        tmp$ret$13 = tmp$ret$12.substring(0, tmp6_substring);
        var rightTruncated = tmp$ret$13;
        var significand = Companion_getInstance_2().ok(leftTruncated + rightTruncated, 10);
        if (significand.equals(Companion_getInstance_2().vi_1)) {
          sign = Sign_ZERO_getInstance();
        }
        if (sign.equals(Sign_NEGATIVE_getInstance())) {
          significand = significand.pk();
        }
        var tmp_11;
        if (!(leftTruncated === '0')) {
          var tmp$ret$15;
          // Inline function 'kotlin.Long.minus' call
          var tmp$ret$14;
          // Inline function 'kotlin.Long.plus' call
          var tmp7_plus = leftTruncated.length;
          tmp$ret$14 = exponent.e6(toLong(tmp7_plus));
          var tmp8_minus = tmp$ret$14;
          tmp$ret$15 = tmp8_minus.f6(new Long(1, 0));
          tmp_11 = tmp$ret$15;
        } else {
          var tmp$ret$16;
          // Inline function 'kotlin.Long.minus' call
          var tmp9_minus = exponent.f6(numberToLong(rightTruncated.length).f6(significand.ri()));
          tmp$ret$16 = tmp9_minus.f6(new Long(1, 0));
          tmp_11 = tmp$ret$16;
        }
        var exponentModifiedByFloatingPointPosition = tmp_11;
        return new BigDecimal(significand, exponentModifiedByFloatingPointPosition, decimalMode);
      } else
        throw ArithmeticException_init_$Create$('Invalid (or unsupported) floating point number format: ' + floatingPointString);
    } else {
      var tmp_12 = _Char___init__impl__6a9atx(46);
      if (contains$default(floatingPointString, tmp_12, false, 2, null)) {
        var tmp_13 = charArrayOf([_Char___init__impl__6a9atx(46)]);
        var split_0 = split$default(floatingPointString, tmp_13, false, 0, 6, null);
        var tmp1_subject = split_0.i();
        if (tmp1_subject === 2) {
          var signPresent_0 = equals(new Char(charSequenceGet(floatingPointString, 0)), new Char(_Char___init__impl__6a9atx(45))) ? true : equals(new Char(charSequenceGet(floatingPointString, 0)), new Char(_Char___init__impl__6a9atx(43)));
          var tmp_14;
          if (signPresent_0) {
            tmp_14 = 1;
          } else {
            tmp_14 = 0;
          }
          var leftStart_0 = tmp_14;
          var tmp_15;
          if (signPresent_0) {
            var tmp_16;
            if (equals(new Char(charSequenceGet(floatingPointString, 0)), new Char(_Char___init__impl__6a9atx(45)))) {
              tmp_16 = Sign_NEGATIVE_getInstance();
            } else {
              tmp_16 = Sign_POSITIVE_getInstance();
            }
            tmp_15 = tmp_16;
          } else {
            tmp_15 = Sign_POSITIVE_getInstance();
          }
          var sign_0 = tmp_15;
          var tmp$ret$18;
          // Inline function 'kotlin.text.substring' call
          var tmp10_substring = split_0.l(0);
          var tmp$ret$17;
          // Inline function 'kotlin.js.asDynamic' call
          tmp$ret$17 = tmp10_substring;
          tmp$ret$18 = tmp$ret$17.substring(leftStart_0);
          var left_0 = tmp$ret$18;
          var right_0 = split_0.l(1);
          var tmp$ret$20;
          $l$block_1: {
            // Inline function 'kotlin.text.indexOfFirst' call
            var inductionVariable_1 = 0;
            var last_0 = charSequenceLength(left_0) - 1 | 0;
            if (inductionVariable_1 <= last_0)
              do {
                var index_1 = inductionVariable_1;
                inductionVariable_1 = inductionVariable_1 + 1 | 0;
                var tmp$ret$19;
                // Inline function 'com.ionspin.kotlin.bignum.decimal.Companion.parseStringWithMode.<anonymous>' call
                var tmp11__anonymous__tkubxh = charSequenceGet(left_0, index_1);
                tmp$ret$19 = !equals(new Char(tmp11__anonymous__tkubxh), new Char(_Char___init__impl__6a9atx(48)));
                if (tmp$ret$19) {
                  tmp$ret$20 = index_1;
                  break $l$block_1;
                }
              }
               while (inductionVariable_1 <= last_0);
            tmp$ret$20 = -1;
          }
          var leftFirstNonZero_0 = tmp$ret$20;
          if (leftFirstNonZero_0 === -1) {
            leftFirstNonZero_0 = 0;
          }
          var tmp$ret$22;
          $l$block_2: {
            // Inline function 'kotlin.text.indexOfLast' call
            var inductionVariable_2 = charSequenceLength(right_0) - 1 | 0;
            if (0 <= inductionVariable_2)
              do {
                var index_2 = inductionVariable_2;
                inductionVariable_2 = inductionVariable_2 + -1 | 0;
                var tmp$ret$21;
                // Inline function 'com.ionspin.kotlin.bignum.decimal.Companion.parseStringWithMode.<anonymous>' call
                var tmp12__anonymous__oq5opy = charSequenceGet(right_0, index_2);
                tmp$ret$21 = !equals(new Char(tmp12__anonymous__oq5opy), new Char(_Char___init__impl__6a9atx(48)));
                if (tmp$ret$21) {
                  tmp$ret$22 = index_2;
                  break $l$block_2;
                }
              }
               while (0 <= inductionVariable_2);
            tmp$ret$22 = -1;
          }
          var rightLastNonZero_0 = tmp$ret$22;
          if (rightLastNonZero_0 === -1) {
            rightLastNonZero_0 = right_0.length - 1 | 0;
          }
          var tmp$ret$24;
          // Inline function 'kotlin.text.substring' call
          var tmp13_substring = leftFirstNonZero_0;
          var tmp14_substring = left_0.length;
          var tmp$ret$23;
          // Inline function 'kotlin.js.asDynamic' call
          tmp$ret$23 = left_0;
          tmp$ret$24 = tmp$ret$23.substring(tmp13_substring, tmp14_substring);
          var leftTruncated_0 = tmp$ret$24;
          var tmp$ret$26;
          // Inline function 'kotlin.text.substring' call
          var tmp15_substring = rightLastNonZero_0 + 1 | 0;
          var tmp$ret$25;
          // Inline function 'kotlin.js.asDynamic' call
          tmp$ret$25 = right_0;
          tmp$ret$26 = tmp$ret$25.substring(0, tmp15_substring);
          var rightTruncated_0 = tmp$ret$26;
          var significand_0 = Companion_getInstance_2().ok(leftTruncated_0 + rightTruncated_0, 10);
          var tmp_17;
          var tmp_18;
          var tmp$ret$27;
          // Inline function 'kotlin.text.isNotEmpty' call
          tmp$ret$27 = charSequenceLength(leftTruncated_0) > 0;
          if (tmp$ret$27) {
            tmp_18 = !equals(new Char(charSequenceGet(leftTruncated_0, 0)), new Char(_Char___init__impl__6a9atx(48)));
          } else {
            tmp_18 = false;
          }
          if (tmp_18) {
            tmp_17 = leftTruncated_0.length - 1 | 0;
          } else {
            var tmp$ret$29;
            $l$block_3: {
              // Inline function 'kotlin.text.indexOfFirst' call
              var inductionVariable_3 = 0;
              var last_1 = charSequenceLength(rightTruncated_0) - 1 | 0;
              if (inductionVariable_3 <= last_1)
                do {
                  var index_3 = inductionVariable_3;
                  inductionVariable_3 = inductionVariable_3 + 1 | 0;
                  var tmp$ret$28;
                  // Inline function 'com.ionspin.kotlin.bignum.decimal.Companion.parseStringWithMode.<anonymous>' call
                  var tmp16__anonymous__5bf3vu = charSequenceGet(rightTruncated_0, index_3);
                  tmp$ret$28 = !equals(new Char(tmp16__anonymous__5bf3vu), new Char(_Char___init__impl__6a9atx(48)));
                  if (tmp$ret$28) {
                    tmp$ret$29 = index_3;
                    break $l$block_3;
                  }
                }
                 while (inductionVariable_3 <= last_1);
              tmp$ret$29 = -1;
            }
            tmp_17 = imul(tmp$ret$29 + 1 | 0, -1);
          }
          var exponent_0 = tmp_17;
          if (significand_0.equals(Companion_getInstance_2().vi_1)) {
            sign_0 = Sign_ZERO_getInstance();
          }
          if (sign_0.equals(Sign_NEGATIVE_getInstance())) {
            significand_0 = significand_0.pk();
          }
          return new BigDecimal(significand_0, toLong(exponent_0), decimalMode);
        } else
          throw ArithmeticException_init_$Create$('Invalid (or unsupported) floating point number format: ' + floatingPointString);
      } else {
        var significand_1 = Companion_getInstance_2().ok(floatingPointString, 10);
        var tmp$ret$30;
        // Inline function 'kotlin.Long.minus' call
        var tmp17_minus = significand_1.ri();
        tmp$ret$30 = tmp17_minus.f6(new Long(1, 0));
        return new BigDecimal(significand_1, tmp$ret$30, decimalMode);
      }
    }
  };
  Companion.prototype.nk = function (floatingPointString, decimalMode, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      decimalMode = null;
    return this.kk(floatingPointString, decimalMode);
  };
  Companion.$metadata$ = objectMeta('Companion', [Creator]);
  var Companion_instance;
  function Companion_getInstance_0() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function ScaleOps(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  ScaleOps.$metadata$ = classMeta('ScaleOps', undefined, undefined, undefined, undefined, Enum.prototype);
  function computeMode($this, other, op) {
    var tmp;
    if ((($this.rj_1 == null ? true : $this.rj_1.li_1) ? true : other.rj_1 == null) ? true : other.rj_1.li_1) {
      tmp = Companion_getInstance_1().qk_1;
    } else {
      var tmp$ret$0;
      // Inline function 'kotlin.math.max' call
      var tmp0_max = $this.rj_1.ii_1;
      var tmp1_max = other.rj_1.ii_1;
      tmp$ret$0 = tmp0_max.c6(tmp1_max) >= 0 ? tmp0_max : tmp1_max;
      var tmp_0 = tmp$ret$0;
      var tmp_1;
      if ($this.rj_1.mi_1 ? other.rj_1.mi_1 : false) {
        var tmp0_subject = op;
        var tmp0 = tmp0_subject.d2_1;
        var tmp_2;
        switch (tmp0) {
          case 0:
            var tmp$ret$1;
            // Inline function 'kotlin.math.max' call
            var tmp2_max = $this.rj_1.ki_1;
            var tmp3_max = other.rj_1.ki_1;
            tmp$ret$1 = tmp2_max.c6(tmp3_max) >= 0 ? tmp2_max : tmp3_max;

            tmp_2 = tmp$ret$1;
            break;
          case 1:
            var tmp$ret$2;
            // Inline function 'kotlin.math.min' call
            var tmp4_min = $this.rj_1.ki_1;
            var tmp5_min = other.rj_1.ki_1;
            tmp$ret$2 = tmp4_min.c6(tmp5_min) <= 0 ? tmp4_min : tmp5_min;

            tmp_2 = tmp$ret$2;
            break;
          case 2:
            tmp_2 = $this.rj_1.ki_1.e6(other.rj_1.ki_1);
            break;
          default:
            noWhenBranchMatchedException();
            break;
        }
        tmp_1 = tmp_2;
      } else {
        tmp_1 = new Long(-1, -1);
      }
      tmp = new DecimalMode(tmp_0, $this.rj_1.ji_1, tmp_1);
    }
    return tmp;
  }
  function getRidOfRadix($this, bigDecimal) {
    var precision = bigDecimal.vj_1.ri();
    var tmp$ret$0;
    // Inline function 'kotlin.Long.plus' call
    var tmp0_plus = bigDecimal.wj_1.f6(precision);
    tmp$ret$0 = tmp0_plus.e6(new Long(1, 0));
    var newExponent = tmp$ret$0;
    return BigDecimal_init_$Create$(bigDecimal.vj_1, newExponent, null, 4, null);
  }
  function bringSignificandToSameExponent($this, first, second) {
    var firstPrepared = getRidOfRadix($this, first);
    var secondPrepared = getRidOfRadix($this, second);
    var firstPreparedExponent = firstPrepared.wj_1;
    var secondPreparedExponent = secondPrepared.wj_1;
    var tmp;
    if (first.wj_1.c6(second.wj_1) > 0) {
      var moveFirstBy = firstPreparedExponent.f6(secondPreparedExponent);
      var tmp_0;
      if (moveFirstBy.c6(new Long(0, 0)) >= 0) {
        var movedFirst = firstPrepared.vj_1.fi(toBigInteger(10).aj(moveFirstBy));
        return new Triple(movedFirst, second.vj_1, secondPreparedExponent);
      } else {
        var tmp_1 = toBigInteger(10);
        var tmp$ret$0;
        // Inline function 'kotlin.Long.times' call
        tmp$ret$0 = moveFirstBy.d6(new Long(-1, -1));
        var movedSecond = secondPrepared.vj_1.fi(tmp_1.aj(tmp$ret$0));
        tmp_0 = new Triple(first.vj_1, movedSecond, firstPreparedExponent);
      }
      tmp = tmp_0;
    } else if (first.wj_1.c6(second.wj_1) < 0) {
      var moveSecondBy = secondPreparedExponent.f6(firstPreparedExponent);
      var tmp_2;
      if (moveSecondBy.c6(new Long(0, 0)) >= 0) {
        var movedSecond_0 = secondPrepared.vj_1.fi(toBigInteger(10).aj(moveSecondBy));
        tmp_2 = new Triple(first.vj_1, movedSecond_0, firstPreparedExponent);
      } else {
        var tmp_3 = toBigInteger(10);
        var tmp$ret$1;
        // Inline function 'kotlin.Long.times' call
        tmp$ret$1 = moveSecondBy.d6(new Long(-1, -1));
        var movedFirst_0 = firstPrepared.vj_1.fi(tmp_3.aj(tmp$ret$1));
        tmp_2 = new Triple(movedFirst_0, second.vj_1, firstPreparedExponent);
      }
      return tmp_2;
    } else if (first.wj_1.equals(second.wj_1)) {
      var delta = firstPreparedExponent.f6(secondPreparedExponent);
      var tmp_4;
      if (delta.c6(new Long(0, 0)) > 0) {
        var movedFirst_1 = first.vj_1.fi(toBigInteger(10).aj(delta));
        tmp_4 = new Triple(movedFirst_1, second.vj_1, firstPreparedExponent);
      } else {
        if (delta.c6(new Long(0, 0)) < 0) {
          var tmp_5 = toBigInteger(10);
          var tmp$ret$2;
          // Inline function 'kotlin.Long.times' call
          tmp$ret$2 = delta.d6(new Long(-1, -1));
          var movedSecond_1 = second.vj_1.fi(tmp_5.aj(tmp$ret$2));
          tmp_4 = new Triple(first.vj_1, movedSecond_1, firstPreparedExponent);
        } else {
          var tmp$ret$3;
          // Inline function 'kotlin.Long.compareTo' call
          tmp$ret$3 = delta.c6(new Long(0, 0));
          if (tmp$ret$3 === 0) {
            tmp_4 = new Triple(first.vj_1, second.vj_1, firstPreparedExponent);
          } else {
            throw RuntimeException_init_$Create$('Invalid delta: ' + toString(delta));
          }
        }
      }
      return tmp_4;
    } else {
      throw RuntimeException_init_$Create$('Invalid comparison state BigInteger: ' + toString(first.wj_1) + ', ' + toString(second.wj_1));
    }
    return tmp;
  }
  function javascriptNumberComparison($this, number) {
    var float = numberToDouble(number);
    var tmp;
    if (float % 1 === 0.0) {
      tmp = $this.sk(Companion_getInstance_0().nh(numberToLong(number)));
    } else {
      var tmp_0 = numberToDouble(number);
      tmp = $this.sk(toBigDecimal$default(tmp_0, null, 1, null));
    }
    return tmp;
  }
  function placeADotInStringExpanded($this, input, position) {
    var prefix = substring(input, until(0, input.length - position | 0));
    var tmp$ret$3;
    $l$block: {
      // Inline function 'kotlin.text.dropLastWhile' call
      var tmp0_dropLastWhile = substring(input, until(input.length - position | 0, input.length));
      var inductionVariable = get_lastIndex(tmp0_dropLastWhile);
      if (0 <= inductionVariable)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + -1 | 0;
          var tmp$ret$0;
          // Inline function 'com.ionspin.kotlin.bignum.decimal.BigDecimal.placeADotInStringExpanded.<anonymous>' call
          var tmp1__anonymous__uwfjfc = charSequenceGet(tmp0_dropLastWhile, index);
          tmp$ret$0 = equals(new Char(tmp1__anonymous__uwfjfc), new Char(_Char___init__impl__6a9atx(48)));
          if (!tmp$ret$0) {
            var tmp$ret$2;
            // Inline function 'kotlin.text.substring' call
            var tmp0_substring = index + 1 | 0;
            var tmp$ret$1;
            // Inline function 'kotlin.js.asDynamic' call
            tmp$ret$1 = tmp0_dropLastWhile;
            tmp$ret$2 = tmp$ret$1.substring(0, tmp0_substring);
            tmp$ret$3 = tmp$ret$2;
            break $l$block;
          }
        }
         while (0 <= inductionVariable);
      tmp$ret$3 = '';
    }
    var suffix = tmp$ret$3;
    var tmp;
    var tmp$ret$4;
    // Inline function 'kotlin.text.isNotEmpty' call
    tmp$ret$4 = charSequenceLength(suffix) > 0;
    if (tmp$ret$4) {
      tmp = prefix + '.' + suffix;
    } else {
      tmp = prefix;
    }
    return tmp;
  }
  function placeADotInString($this, input, position) {
    var prefix = substring(input, until(0, input.length - position | 0));
    var suffix = substring(input, until(input.length - position | 0, input.length));
    var prepared = prefix + '.' + suffix;
    var tmp$ret$3;
    $l$block: {
      // Inline function 'kotlin.text.dropLastWhile' call
      var inductionVariable = get_lastIndex(prepared);
      if (0 <= inductionVariable)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + -1 | 0;
          var tmp$ret$0;
          // Inline function 'com.ionspin.kotlin.bignum.decimal.BigDecimal.placeADotInString.<anonymous>' call
          var tmp0__anonymous__q1qw7t = charSequenceGet(prepared, index);
          tmp$ret$0 = equals(new Char(tmp0__anonymous__q1qw7t), new Char(_Char___init__impl__6a9atx(48)));
          if (!tmp$ret$0) {
            var tmp$ret$2;
            // Inline function 'kotlin.text.substring' call
            var tmp0_substring = index + 1 | 0;
            var tmp$ret$1;
            // Inline function 'kotlin.js.asDynamic' call
            tmp$ret$1 = prepared;
            tmp$ret$2 = tmp$ret$1.substring(0, tmp0_substring);
            tmp$ret$3 = tmp$ret$2;
            break $l$block;
          }
        }
         while (0 <= inductionVariable);
      tmp$ret$3 = '';
    }
    return tmp$ret$3;
  }
  function ScaleOps_Max_getInstance() {
    ScaleOps_initEntries();
    return ScaleOps_Max_instance;
  }
  function ScaleOps_Min_getInstance() {
    ScaleOps_initEntries();
    return ScaleOps_Min_instance;
  }
  function ScaleOps_Add_getInstance() {
    ScaleOps_initEntries();
    return ScaleOps_Add_instance;
  }
  function BigDecimal(_significand, _exponent, decimalMode) {
    Companion_getInstance_0();
    this.rj_1 = decimalMode;
    this.sj_1 = _significand.ri();
    var tmp = this;
    var tmp0_safe_receiver = this.rj_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.ii_1;
    tmp.tj_1 = tmp1_elvis_lhs == null ? new Long(0, 0) : tmp1_elvis_lhs;
    var tmp_0 = this;
    var tmp0_safe_receiver_0 = this.rj_1;
    var tmp1_elvis_lhs_0 = tmp0_safe_receiver_0 == null ? null : tmp0_safe_receiver_0.ji_1;
    tmp_0.uj_1 = tmp1_elvis_lhs_0 == null ? RoundingMode_NONE_getInstance() : tmp1_elvis_lhs_0;
    if (!(this.rj_1 == null) ? this.rj_1.mi_1 : false) {
      var wrk = applyScale(Companion_getInstance_0(), _significand, _exponent, this.rj_1);
      this.vj_1 = wrk.vj_1;
      this.wj_1 = wrk.wj_1;
    } else {
      this.vj_1 = _significand;
      this.wj_1 = _exponent;
    }
    var tmp_1 = this;
    var tmp0_safe_receiver_1 = this.rj_1;
    var tmp1_elvis_lhs_1 = tmp0_safe_receiver_1 == null ? null : tmp0_safe_receiver_1.ki_1;
    tmp_1.xj_1 = tmp1_elvis_lhs_1 == null ? new Long(-1, -1) : tmp1_elvis_lhs_1;
    this.yj_1 = this.xj_1.c6(new Long(0, 0)) >= 0;
  }
  BigDecimal.prototype.bi = function () {
    return Companion_getInstance_0();
  };
  BigDecimal.prototype.ci = function () {
    return this;
  };
  BigDecimal.prototype.tk = function (other) {
    return this.uk(other, computeMode(this, other, ScaleOps_Max_getInstance()));
  };
  BigDecimal.prototype.th = function (other) {
    return this.tk(other instanceof BigDecimal ? other : THROW_CCE());
  };
  BigDecimal.prototype.uk = function (other, decimalMode) {
    var resolvedDecimalMode = resolveDecimalMode(Companion_getInstance_0(), this.rj_1, other.rj_1, decimalMode);
    var tmp0_container = bringSignificandToSameExponent(this, this, other);
    var first = tmp0_container.a4();
    var second = tmp0_container.b4();
    var firstNumOfDigits = first.ri();
    var secondNumOfDigits = second.ri();
    var newSignificand = first.di(second);
    var newSignificandNumOfDigit = newSignificand.ri();
    var tmp;
    if (firstNumOfDigits.c6(secondNumOfDigits) > 0) {
      tmp = firstNumOfDigits;
    } else {
      tmp = secondNumOfDigits;
    }
    var largerOperand = tmp;
    var carryDetected = newSignificandNumOfDigit.f6(largerOperand);
    var tmp$ret$0;
    // Inline function 'kotlin.math.max' call
    var tmp0_max = this.wj_1;
    var tmp1_max = other.wj_1;
    tmp$ret$0 = tmp0_max.c6(tmp1_max) >= 0 ? tmp0_max : tmp1_max;
    var newExponent = tmp$ret$0.e6(carryDetected);
    return roundOrDont(Companion_getInstance_0(), newSignificand, newExponent, resolvedDecimalMode);
  };
  BigDecimal.prototype.vk = function (other) {
    return this.wk(other, computeMode(this, other, ScaleOps_Max_getInstance()));
  };
  BigDecimal.prototype.uh = function (other) {
    return this.vk(other instanceof BigDecimal ? other : THROW_CCE());
  };
  BigDecimal.prototype.wk = function (other, decimalMode) {
    var resolvedDecimalMode = resolveDecimalMode(Companion_getInstance_0(), this.rj_1, other.rj_1, decimalMode);
    var tmp0_container = bringSignificandToSameExponent(this, this, other);
    var first = tmp0_container.a4();
    var second = tmp0_container.b4();
    var firstNumOfDigits = first.ri();
    var secondNumOfDigits = second.ri();
    var newSignificand = first.ei(second);
    var newSignificandNumOfDigit = newSignificand.ri();
    var tmp;
    if (firstNumOfDigits.c6(secondNumOfDigits) > 0) {
      tmp = firstNumOfDigits;
    } else {
      tmp = secondNumOfDigits;
    }
    var largerOperand = tmp;
    var borrowDetected = newSignificandNumOfDigit.f6(largerOperand);
    var tmp$ret$0;
    // Inline function 'kotlin.math.max' call
    var tmp0_max = this.wj_1;
    var tmp1_max = other.wj_1;
    tmp$ret$0 = tmp0_max.c6(tmp1_max) >= 0 ? tmp0_max : tmp1_max;
    var newExponent = tmp$ret$0.e6(borrowDetected);
    return roundOrDont(Companion_getInstance_0(), newSignificand, newExponent, resolvedDecimalMode);
  };
  BigDecimal.prototype.xk = function (other) {
    return this.yk(other, computeMode(this, other, ScaleOps_Add_getInstance()));
  };
  BigDecimal.prototype.vh = function (other) {
    return this.xk(other instanceof BigDecimal ? other : THROW_CCE());
  };
  BigDecimal.prototype.yk = function (other, decimalMode) {
    var resolvedDecimalMode = resolveDecimalMode(Companion_getInstance_0(), this.rj_1, other.rj_1, decimalMode);
    var firstNumOfDigits = this.vj_1.ri();
    var secondNumOfDigits = other.vj_1.ri();
    var newSignificand = this.vj_1.fi(other.vj_1);
    var newSignificandNumOfDigit = newSignificand.ri();
    var moveExponent = newSignificandNumOfDigit.f6(firstNumOfDigits.e6(secondNumOfDigits));
    var tmp$ret$0;
    // Inline function 'kotlin.Long.plus' call
    var tmp0_plus = this.wj_1.e6(other.wj_1).e6(moveExponent);
    tmp$ret$0 = tmp0_plus.e6(new Long(1, 0));
    var newExponent = tmp$ret$0;
    return roundOrDont(Companion_getInstance_0(), newSignificand, newExponent, resolvedDecimalMode);
  };
  BigDecimal.prototype.zk = function (other) {
    return this.al(other, computeMode(this, other, ScaleOps_Min_getInstance()));
  };
  BigDecimal.prototype.wh = function (other) {
    return this.zk(other instanceof BigDecimal ? other : THROW_CCE());
  };
  BigDecimal.prototype.al = function (other, decimalMode) {
    var resolvedDecimalMode = resolveDecimalMode(Companion_getInstance_0(), this.rj_1, other.rj_1, decimalMode);
    if (resolvedDecimalMode.li_1) {
      var newExponent = this.wj_1.f6(other.wj_1);
      var tmp$ret$1;
      // Inline function 'kotlin.Long.plus' call
      var tmp$ret$0;
      // Inline function 'kotlin.Long.times' call
      var tmp0_times = other.sj_1;
      tmp$ret$0 = tmp0_times.d6(new Long(2, 0));
      var tmp1_plus = tmp$ret$0;
      tmp$ret$1 = tmp1_plus.e6(new Long(6, 0));
      var power = tmp$ret$1;
      var thisPrepared = this.vj_1.fi(Companion_getInstance_2().yi_1.aj(power));
      var divRem = thisPrepared.bj(other.vj_1);
      var result = divRem.si_1;
      var tmp$ret$2;
      // Inline function 'kotlin.Long.minus' call
      var tmp2_minus = other.sj_1;
      tmp$ret$2 = tmp2_minus.f6(new Long(1, 0));
      var expectedDiff = tmp$ret$2;
      var exponentModifier = expectedDiff.e6(result.ri().f6(thisPrepared.ri()));
      if (!divRem.ti_1.equals(Companion_getInstance_2().vi_1)) {
        throw ArithmeticException_init_$Create$('Non-terminating result of division operation (i.e. 1/3 = 0.3333... library needs to know when to stop and how to round up at that point). Specify decimalPrecision inside your decimal mode.');
      }
      return new BigDecimal(result, newExponent.e6(exponentModifier), resolvedDecimalMode);
    } else {
      var tmp$ret$3;
      // Inline function 'kotlin.Long.minus' call
      var tmp3_minus = this.wj_1.f6(other.wj_1);
      tmp$ret$3 = tmp3_minus.f6(new Long(1, 0));
      var newExponent_0 = tmp$ret$3;
      var desiredPrecision = resolvedDecimalMode.ii_1;
      var power_0 = desiredPrecision.f6(this.sj_1).e6(other.sj_1);
      var tmp;
      if (power_0.c6(new Long(0, 0)) > 0) {
        tmp = this.vj_1.fi(toBigInteger(10).aj(power_0));
      } else if (power_0.c6(new Long(0, 0)) < 0) {
        var tmp_0 = toBigInteger(10);
        var tmp$ret$4;
        // Inline function 'kotlin.math.absoluteValue' call
        tmp$ret$4 = abs(power_0);
        tmp = this.vj_1.gi(tmp_0.aj(tmp$ret$4));
      } else {
        tmp = this.vj_1;
      }
      var thisPrepared_0 = tmp;
      var divRem_0 = thisPrepared_0.bj(other.vj_1);
      var result_0 = divRem_0.si_1;
      if (result_0.equals(Companion_getInstance_2().vi_1)) {
        var tmp0 = newExponent_0;
        newExponent_0 = tmp0.ch();
      }
      var exponentModifier_0 = result_0.ri().f6(resolvedDecimalMode.ii_1);
      return new BigDecimal(roundDiscarded(Companion_getInstance_0(), result_0, divRem_0.ti_1, resolvedDecimalMode), newExponent_0.e6(exponentModifier_0), resolvedDecimalMode);
    }
  };
  BigDecimal.prototype.bl = function (other) {
    return this.cl(other).a5_1;
  };
  BigDecimal.prototype.xh = function (other) {
    return this.bl(other instanceof BigDecimal ? other : THROW_CCE());
  };
  BigDecimal.prototype.cl = function (other) {
    var tmp0_elvis_lhs = this.rj_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var tmp$ret$0;
      // Inline function 'kotlin.Long.plus' call
      var tmp0_plus = this.wj_1;
      tmp$ret$0 = tmp0_plus.e6(new Long(1, 0));
      var tmp_0 = tmp$ret$0;
      var tmp_1 = RoundingMode_FLOOR_getInstance();
      tmp = DecimalMode_init_$Create$(tmp_0, tmp_1, new Long(0, 0), 4, null);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var resolvedRoundingMode = tmp;
    var quotient = this.al(other, resolvedRoundingMode);
    var quotientInfinitePrecision = quotient.dl(null, new Long(0, 0), Companion_getInstance_1().qk_1, 3, null);
    var remainder = this.fl(quotientInfinitePrecision.el(other));
    return new Pair(quotient, remainder);
  };
  BigDecimal.prototype.gl = function (significand, exponent, decimalMode) {
    return new BigDecimal(significand, exponent, decimalMode);
  };
  BigDecimal.prototype.dl = function (significand, exponent, decimalMode, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      significand = this.vj_1;
    if (!(($mask0 & 2) === 0))
      exponent = this.wj_1;
    if (!(($mask0 & 4) === 0))
      decimalMode = this.rj_1;
    return this.gl(significand, exponent, decimalMode);
  };
  BigDecimal.prototype.hl = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.Long.plus' call
    var tmp0_plus = this.wj_1;
    tmp$ret$0 = tmp0_plus.e6(new Long(1, 0));
    var tmp = tmp$ret$0;
    var tmp_0 = RoundingMode_FLOOR_getInstance();
    return this.ck(DecimalMode_init_$Create$(tmp, tmp_0, new Long(0, 0), 4, null));
  };
  BigDecimal.prototype.il = function () {
    if (this.wj_1.c6(new Long(0, 0)) < 0) {
      return Companion_getInstance_2().vi_1;
    }
    var precisionExponentDiff = this.wj_1.f6(this.sj_1);
    var tmp;
    if (precisionExponentDiff.c6(new Long(0, 0)) > 0) {
      var tmp_0 = toBigInteger(10);
      var tmp$ret$0;
      // Inline function 'kotlin.Long.plus' call
      tmp$ret$0 = precisionExponentDiff.e6(new Long(1, 0));
      tmp = this.vj_1.fi(tmp_0.aj(tmp$ret$0));
    } else if (precisionExponentDiff.c6(new Long(0, 0)) < 0) {
      var tmp_1 = toBigInteger(10);
      var tmp$ret$2;
      // Inline function 'kotlin.Long.minus' call
      var tmp$ret$1;
      // Inline function 'kotlin.math.absoluteValue' call
      tmp$ret$1 = abs(precisionExponentDiff);
      var tmp0_minus = tmp$ret$1;
      tmp$ret$2 = tmp0_minus.f6(new Long(1, 0));
      tmp = this.vj_1.gi(tmp_1.aj(tmp$ret$2));
    } else {
      tmp = this.vj_1;
    }
    return tmp;
  };
  BigDecimal.prototype.fl = function (other) {
    return this.wk(other, computeMode(this, other, ScaleOps_Max_getInstance()));
  };
  BigDecimal.prototype.el = function (other) {
    return this.yk(other, computeMode(this, other, ScaleOps_Add_getInstance()));
  };
  BigDecimal.prototype.yh = function () {
    return this.vj_1.yh();
  };
  BigDecimal.prototype.ck = function (decimalMode) {
    if (decimalMode == null) {
      return this;
    }
    return roundSignificand(Companion_getInstance_0(), this.vj_1, this.wj_1, decimalMode);
  };
  BigDecimal.prototype.sk = function (other) {
    if (this.wj_1.equals(other.wj_1) ? this.sj_1.equals(other.sj_1) : false) {
      return this.vj_1.jl(other.vj_1);
    }
    var tmp0_container = bringSignificandToSameExponent(this, this, other);
    var preparedFirst = tmp0_container.a4();
    var preparedSecond = tmp0_container.b4();
    return preparedFirst.jl(preparedSecond);
  };
  BigDecimal.prototype.ej = function (other) {
    if (isNumber(other)) {
      if (ComparisonWorkaround_getInstance().kl(other)) {
        return javascriptNumberComparison(this, other);
      }
    }
    var tmp0_subject = other;
    var tmp;
    if (tmp0_subject instanceof BigDecimal) {
      tmp = this.sk(other);
    } else {
      if (tmp0_subject instanceof Long) {
        tmp = this.sk(Companion_getInstance_0().nh(other));
      } else {
        if (typeof tmp0_subject === 'number') {
          tmp = this.sk(Companion_getInstance_0().oh(other));
        } else {
          if (typeof tmp0_subject === 'number') {
            tmp = this.sk(Companion_getInstance_0().gk(other));
          } else {
            if (typeof tmp0_subject === 'number') {
              tmp = this.sk(Companion_getInstance_0().ik(other));
            } else {
              if (typeof tmp0_subject === 'number') {
                var tmp_0 = Companion_getInstance_0();
                tmp = this.sk(tmp_0.zj(other, null, 2, null));
              } else {
                if (typeof tmp0_subject === 'number') {
                  var tmp_1 = Companion_getInstance_0();
                  tmp = this.sk(tmp_1.ak(other, null, 2, null));
                } else {
                  throw RuntimeException_init_$Create$('Invalid comparison type for BigDecimal: ' + getKClassFromExpression(other).qc());
                }
              }
            }
          }
        }
      }
    }
    return tmp;
  };
  BigDecimal.prototype.o7 = function (other) {
    return this.ej(isObject(other) ? other : THROW_CCE());
  };
  BigDecimal.prototype.equals = function (other) {
    var tmp0_subject = other;
    var tmp;
    if (tmp0_subject instanceof BigDecimal) {
      tmp = this.sk(other);
    } else {
      if (tmp0_subject instanceof Long) {
        tmp = this.sk(Companion_getInstance_0().nh(other));
      } else {
        if (!(tmp0_subject == null) ? typeof tmp0_subject === 'number' : false) {
          tmp = this.sk(Companion_getInstance_0().oh(other));
        } else {
          if (!(tmp0_subject == null) ? typeof tmp0_subject === 'number' : false) {
            tmp = this.sk(Companion_getInstance_0().gk(other));
          } else {
            if (!(tmp0_subject == null) ? typeof tmp0_subject === 'number' : false) {
              tmp = this.sk(Companion_getInstance_0().ik(other));
            } else {
              if (!(tmp0_subject == null) ? typeof tmp0_subject === 'number' : false) {
                var tmp_0 = Companion_getInstance_0();
                tmp = this.sk(tmp_0.zj(other, null, 2, null));
              } else {
                if (!(tmp0_subject == null) ? typeof tmp0_subject === 'number' : false) {
                  var tmp_1 = Companion_getInstance_0();
                  tmp = this.sk(tmp_1.ak(other, null, 2, null));
                } else {
                  tmp = -1;
                }
              }
            }
          }
        }
      }
    }
    var comparison = tmp;
    return comparison === 0;
  };
  BigDecimal.prototype.hashCode = function () {
    var tmp = this.vj_1.hashCode() + this.wj_1.hashCode() | 0;
    var tmp$ret$0;
    // Inline function 'kotlin.hashCode' call
    var tmp0_hashCode = this.rj_1;
    var tmp0_safe_receiver = tmp0_hashCode;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
    tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    return tmp + tmp$ret$0 | 0;
  };
  BigDecimal.prototype.toString = function () {
    if (Companion_getInstance_0().jj_1) {
      return this.ll();
    }
    var significandString = this.vj_1.ml(10);
    var tmp;
    if (this.vj_1.ej(0) < 0) {
      tmp = 2;
    } else {
      tmp = 1;
    }
    var modifier = tmp;
    var tmp_0;
    var tmp$ret$3;
    $l$block: {
      // Inline function 'kotlin.text.dropLastWhile' call
      var tmp0_dropLastWhile = this.vj_1.toString();
      var inductionVariable = get_lastIndex(tmp0_dropLastWhile);
      if (0 <= inductionVariable)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + -1 | 0;
          var tmp$ret$0;
          // Inline function 'com.ionspin.kotlin.bignum.decimal.BigDecimal.toString.<anonymous>' call
          var tmp1__anonymous__uwfjfc = charSequenceGet(tmp0_dropLastWhile, index);
          tmp$ret$0 = equals(new Char(tmp1__anonymous__uwfjfc), new Char(_Char___init__impl__6a9atx(48)));
          if (!tmp$ret$0) {
            var tmp$ret$2;
            // Inline function 'kotlin.text.substring' call
            var tmp0_substring = index + 1 | 0;
            var tmp$ret$1;
            // Inline function 'kotlin.js.asDynamic' call
            tmp$ret$1 = tmp0_dropLastWhile;
            tmp$ret$2 = tmp$ret$1.substring(0, tmp0_substring);
            tmp$ret$3 = tmp$ret$2;
            break $l$block;
          }
        }
         while (0 <= inductionVariable);
      tmp$ret$3 = '';
    }
    if (tmp$ret$3.length <= 1) {
      tmp_0 = '0';
    } else {
      tmp_0 = '';
    }
    var expand = tmp_0;
    var tmp_1;
    if (this.wj_1.c6(new Long(0, 0)) > 0) {
      tmp_1 = placeADotInString(this, significandString, significandString.length - modifier | 0) + expand + 'E+' + toString(this.wj_1);
    } else if (this.wj_1.c6(new Long(0, 0)) < 0) {
      tmp_1 = placeADotInString(this, significandString, significandString.length - modifier | 0) + expand + 'E' + toString(this.wj_1);
    } else if (this.wj_1.equals(new Long(0, 0))) {
      tmp_1 = placeADotInString(this, significandString, significandString.length - modifier | 0) + expand;
    } else {
      throw RuntimeException_init_$Create$('Invalid state, please report a bug (Integer compareTo invalid)');
    }
    return tmp_1;
  };
  BigDecimal.prototype.ll = function () {
    if (this.equals(Companion_getInstance_0().fj_1)) {
      return '0';
    }
    var digits = this.vj_1.ri();
    if (this.wj_1.c6(toLong(IntCompanionObject_getInstance().i1_1)) > 0) {
      throw RuntimeException_init_$Create$('Invalid toStringExpanded request (exponent > Int.MAX_VALUE)');
    }
    var significandString = this.vj_1.nl(10);
    var tmp;
    if (this.vj_1.oi_1.equals(Sign_NEGATIVE_getInstance())) {
      tmp = '-';
    } else {
      tmp = '';
    }
    var sign = tmp;
    var tmp_0;
    if (this.wj_1.c6(new Long(0, 0)) > 0) {
      var tmp$ret$0;
      // Inline function 'kotlin.Long.plus' call
      var tmp0_plus = this.wj_1.f6(digits);
      tmp$ret$0 = tmp0_plus.e6(new Long(1, 0));
      var diffBigInt = tmp$ret$0;
      var tmp_1;
      if (diffBigInt.c6(new Long(0, 0)) > 0) {
        var expandZeros = this.ol(diffBigInt, _Char___init__impl__6a9atx(48));
        tmp_1 = significandString + expandZeros;
      } else {
        tmp_1 = placeADotInStringExpanded(this, significandString, (significandString.length - this.wj_1.u7() | 0) - 1 | 0);
      }
      tmp_0 = tmp_1;
    } else if (this.wj_1.c6(new Long(0, 0)) < 0) {
      var tmp$ret$1;
      // Inline function 'kotlin.math.absoluteValue' call
      var tmp1__get_absoluteValue__rcem8i = this.wj_1.u7();
      tmp$ret$1 = abs_0(tmp1__get_absoluteValue__rcem8i);
      var diffInt = tmp$ret$1;
      var tmp_2;
      if (diffInt > 0) {
        var tmp$ret$2;
        // Inline function 'kotlin.math.absoluteValue' call
        var tmp2__get_absoluteValue__uu8ln7 = this.wj_1;
        tmp$ret$2 = abs(tmp2__get_absoluteValue__uu8ln7);
        var expandZeros_0 = this.ol(tmp$ret$2, _Char___init__impl__6a9atx(48));
        tmp_2 = placeADotInStringExpanded(this, expandZeros_0 + significandString, (diffInt + significandString.length | 0) - 1 | 0);
      } else {
        tmp_2 = placeADotInStringExpanded(this, significandString, significandString.length - 1 | 0);
      }
      tmp_0 = tmp_2;
    } else if (this.wj_1.equals(new Long(0, 0))) {
      if (digits.equals(new Long(1, 0))) {
        return sign + significandString;
      }
      tmp_0 = placeADotInStringExpanded(this, significandString, significandString.length - 1 | 0);
    } else {
      throw RuntimeException_init_$Create$('Invalid state, please report a bug (Integer compareTo invalid)');
    }
    var adjusted = tmp_0;
    return sign + adjusted;
  };
  BigDecimal.prototype.ol = function (_this__u8e3s4, char) {
    if (_this__u8e3s4.c6(new Long(0, 0)) < 0) {
      throw RuntimeException_init_$Create$('Char cannot be multiplied with negative number');
    }
    var counter = _this__u8e3s4;
    var stringBuilder = StringBuilder_init_$Create$();
    while (counter.c6(new Long(0, 0)) > 0) {
      stringBuilder.x5(char);
      var tmp0 = counter;
      counter = tmp0.ch();
    }
    return stringBuilder.toString();
  };
  BigDecimal.$metadata$ = classMeta('BigDecimal', [BigNumber, CommonBigNumberOperations, NarrowingOperations, Comparable]);
  function toBigDecimal(_this__u8e3s4, decimalMode) {
    return Companion_getInstance_0().jk(_this__u8e3s4, decimalMode);
  }
  function toBigDecimal$default(_this__u8e3s4, decimalMode, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      decimalMode = null;
    return toBigDecimal(_this__u8e3s4, decimalMode);
  }
  function DecimalMode_init_$Init$(decimalPrecision, roundingMode, scale, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      decimalPrecision = new Long(0, 0);
    if (!(($mask0 & 2) === 0))
      roundingMode = RoundingMode_NONE_getInstance();
    if (!(($mask0 & 4) === 0))
      scale = new Long(-1, -1);
    DecimalMode.call($this, decimalPrecision, roundingMode, scale);
    return $this;
  }
  function DecimalMode_init_$Create$(decimalPrecision, roundingMode, scale, $mask0, $marker) {
    return DecimalMode_init_$Init$(decimalPrecision, roundingMode, scale, $mask0, $marker, Object.create(DecimalMode.prototype));
  }
  function Companion_0() {
    Companion_instance_0 = this;
    var tmp = this;
    var tmp_0 = new Long(0, 0);
    tmp.qk_1 = DecimalMode_init_$Create$(tmp_0, null, new Long(0, 0), 7, null);
    this.rk_1 = new DecimalMode(new Long(30, 0), RoundingMode_ROUND_HALF_AWAY_FROM_ZERO_getInstance(), new Long(2, 0));
  }
  Companion_0.$metadata$ = objectMeta('Companion');
  var Companion_instance_0;
  function Companion_getInstance_1() {
    if (Companion_instance_0 == null)
      new Companion_0();
    return Companion_instance_0;
  }
  function DecimalMode(decimalPrecision, roundingMode, scale) {
    Companion_getInstance_1();
    this.ii_1 = decimalPrecision;
    this.ji_1 = roundingMode;
    this.ki_1 = scale;
    this.li_1 = this.ii_1.equals(new Long(0, 0));
    this.mi_1 = this.ki_1.c6(new Long(0, 0)) >= 0;
    if (this.ii_1.equals(new Long(0, 0)) ? !this.ji_1.equals(RoundingMode_NONE_getInstance()) : false) {
      throw ArithmeticException_init_$Create$('Rounding mode with 0 digits precision.');
    }
    if (this.ki_1.c6(new Long(-1, -1)) < 0) {
      throw ArithmeticException_init_$Create$('Negative Scale is unsupported.');
    }
    if (this.mi_1 ? this.ji_1.equals(RoundingMode_NONE_getInstance()) : false) {
      throw ArithmeticException_init_$Create$('Scale of ' + toString(this.ki_1) + ' digits to the right of the decimal requires a RoundingMode that is not NONE.');
    }
    if (this.mi_1) {
      if (!this.li_1 ? this.ki_1.c6(this.ii_1) >= 0 : false) {
        throw ArithmeticException_init_$Create$('Scale of ' + toString(this.ki_1) + ' digits to the right of the decimal must be less than precision ' + toString(this.ii_1) + '.');
      }
    }
  }
  DecimalMode.prototype.toString = function () {
    return 'DecimalMode(decimalPrecision=' + toString(this.ii_1) + ', roundingMode=' + this.ji_1 + ', scale=' + toString(this.ki_1) + ')';
  };
  DecimalMode.prototype.hashCode = function () {
    var result = this.ii_1.hashCode();
    result = imul(result, 31) + this.ji_1.hashCode() | 0;
    result = imul(result, 31) + this.ki_1.hashCode() | 0;
    return result;
  };
  DecimalMode.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof DecimalMode))
      return false;
    var tmp0_other_with_cast = other instanceof DecimalMode ? other : THROW_CCE();
    if (!this.ii_1.equals(tmp0_other_with_cast.ii_1))
      return false;
    if (!this.ji_1.equals(tmp0_other_with_cast.ji_1))
      return false;
    if (!this.ki_1.equals(tmp0_other_with_cast.ki_1))
      return false;
    return true;
  };
  DecimalMode.$metadata$ = classMeta('DecimalMode');
  var RoundingMode_FLOOR_instance;
  var RoundingMode_CEILING_instance;
  var RoundingMode_AWAY_FROM_ZERO_instance;
  var RoundingMode_TOWARDS_ZERO_instance;
  var RoundingMode_NONE_instance;
  var RoundingMode_ROUND_HALF_AWAY_FROM_ZERO_instance;
  var RoundingMode_ROUND_HALF_TOWARDS_ZERO_instance;
  var RoundingMode_ROUND_HALF_CEILING_instance;
  var RoundingMode_ROUND_HALF_FLOOR_instance;
  var RoundingMode_entriesInitialized;
  function RoundingMode_initEntries() {
    if (RoundingMode_entriesInitialized)
      return Unit_getInstance();
    RoundingMode_entriesInitialized = true;
    RoundingMode_FLOOR_instance = new RoundingMode('FLOOR', 0);
    RoundingMode_CEILING_instance = new RoundingMode('CEILING', 1);
    RoundingMode_AWAY_FROM_ZERO_instance = new RoundingMode('AWAY_FROM_ZERO', 2);
    RoundingMode_TOWARDS_ZERO_instance = new RoundingMode('TOWARDS_ZERO', 3);
    RoundingMode_NONE_instance = new RoundingMode('NONE', 4);
    RoundingMode_ROUND_HALF_AWAY_FROM_ZERO_instance = new RoundingMode('ROUND_HALF_AWAY_FROM_ZERO', 5);
    RoundingMode_ROUND_HALF_TOWARDS_ZERO_instance = new RoundingMode('ROUND_HALF_TOWARDS_ZERO', 6);
    RoundingMode_ROUND_HALF_CEILING_instance = new RoundingMode('ROUND_HALF_CEILING', 7);
    RoundingMode_ROUND_HALF_FLOOR_instance = new RoundingMode('ROUND_HALF_FLOOR', 8);
  }
  function RoundingMode(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  RoundingMode.$metadata$ = classMeta('RoundingMode', undefined, undefined, undefined, undefined, Enum.prototype);
  function RoundingMode_FLOOR_getInstance() {
    RoundingMode_initEntries();
    return RoundingMode_FLOOR_instance;
  }
  function RoundingMode_NONE_getInstance() {
    RoundingMode_initEntries();
    return RoundingMode_NONE_instance;
  }
  function RoundingMode_ROUND_HALF_AWAY_FROM_ZERO_getInstance() {
    RoundingMode_initEntries();
    return RoundingMode_ROUND_HALF_AWAY_FROM_ZERO_instance;
  }
  function BigInteger_init_$Init$(long, $this) {
    var tmp = Companion_getInstance_2().ui_1.pl(long);
    var tmp$ret$0;
    // Inline function 'com.ionspin.kotlin.bignum.integer.Companion.determinSignFromNumber' call
    var tmp0_determinSignFromNumber = Companion_getInstance_2();
    var tmp0_subject = getKClass(Long);
    var tmp_0;
    if (tmp0_subject.equals(getKClass(Long))) {
      if (long instanceof Long)
        long;
      else
        THROW_CCE();
      tmp_0 = long.c6(new Long(0, 0)) < 0 ? Sign_NEGATIVE_getInstance() : long.c6(new Long(0, 0)) > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().ge())) {
      if (typeof long === 'number')
        long;
      else
        THROW_CCE();
      tmp_0 = long < 0 ? Sign_NEGATIVE_getInstance() : long > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().fe())) {
      if (typeof long === 'number')
        long;
      else
        THROW_CCE();
      tmp_0 = long < 0 ? Sign_NEGATIVE_getInstance() : long > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().ee())) {
      if (typeof long === 'number')
        long;
      else
        THROW_CCE();
      tmp_0 = long < 0 ? Sign_NEGATIVE_getInstance() : long > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else {
      throw RuntimeException_init_$Create$('Unsupported type ' + getKClass(Long));
    }
    tmp$ret$0 = tmp_0;
    BigInteger.call($this, tmp, tmp$ret$0);
    return $this;
  }
  function BigInteger_init_$Create$(long) {
    return BigInteger_init_$Init$(long, Object.create(BigInteger.prototype));
  }
  function BigInteger_init_$Init$_0(int, $this) {
    var tmp = Companion_getInstance_2().ui_1.ql(int);
    var tmp$ret$0;
    // Inline function 'com.ionspin.kotlin.bignum.integer.Companion.determinSignFromNumber' call
    var tmp0_determinSignFromNumber = Companion_getInstance_2();
    var tmp0_subject = PrimitiveClasses_getInstance().ge();
    var tmp_0;
    if (tmp0_subject.equals(getKClass(Long))) {
      if (int instanceof Long)
        int;
      else
        THROW_CCE();
      tmp_0 = int.c6(new Long(0, 0)) < 0 ? Sign_NEGATIVE_getInstance() : int.c6(new Long(0, 0)) > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().ge())) {
      if (typeof int === 'number')
        int;
      else
        THROW_CCE();
      tmp_0 = int < 0 ? Sign_NEGATIVE_getInstance() : int > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().fe())) {
      if (typeof int === 'number')
        int;
      else
        THROW_CCE();
      tmp_0 = int < 0 ? Sign_NEGATIVE_getInstance() : int > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().ee())) {
      if (typeof int === 'number')
        int;
      else
        THROW_CCE();
      tmp_0 = int < 0 ? Sign_NEGATIVE_getInstance() : int > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else {
      throw RuntimeException_init_$Create$('Unsupported type ' + PrimitiveClasses_getInstance().ge());
    }
    tmp$ret$0 = tmp_0;
    BigInteger.call($this, tmp, tmp$ret$0);
    return $this;
  }
  function BigInteger_init_$Create$_0(int) {
    return BigInteger_init_$Init$_0(int, Object.create(BigInteger.prototype));
  }
  function BigInteger_init_$Init$_1(short, $this) {
    var tmp = Companion_getInstance_2().ui_1.rl(short);
    var tmp$ret$0;
    // Inline function 'com.ionspin.kotlin.bignum.integer.Companion.determinSignFromNumber' call
    var tmp0_determinSignFromNumber = Companion_getInstance_2();
    var tmp0_subject = PrimitiveClasses_getInstance().fe();
    var tmp_0;
    if (tmp0_subject.equals(getKClass(Long))) {
      if (short instanceof Long)
        short;
      else
        THROW_CCE();
      tmp_0 = short.c6(new Long(0, 0)) < 0 ? Sign_NEGATIVE_getInstance() : short.c6(new Long(0, 0)) > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().ge())) {
      if (typeof short === 'number')
        short;
      else
        THROW_CCE();
      tmp_0 = short < 0 ? Sign_NEGATIVE_getInstance() : short > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().fe())) {
      if (typeof short === 'number')
        short;
      else
        THROW_CCE();
      tmp_0 = short < 0 ? Sign_NEGATIVE_getInstance() : short > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().ee())) {
      if (typeof short === 'number')
        short;
      else
        THROW_CCE();
      tmp_0 = short < 0 ? Sign_NEGATIVE_getInstance() : short > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else {
      throw RuntimeException_init_$Create$('Unsupported type ' + PrimitiveClasses_getInstance().fe());
    }
    tmp$ret$0 = tmp_0;
    BigInteger.call($this, tmp, tmp$ret$0);
    return $this;
  }
  function BigInteger_init_$Create$_1(short) {
    return BigInteger_init_$Init$_1(short, Object.create(BigInteger.prototype));
  }
  function BigInteger_init_$Init$_2(byte, $this) {
    var tmp = Companion_getInstance_2().ui_1.sl(byte);
    var tmp$ret$0;
    // Inline function 'com.ionspin.kotlin.bignum.integer.Companion.determinSignFromNumber' call
    var tmp0_determinSignFromNumber = Companion_getInstance_2();
    var tmp0_subject = PrimitiveClasses_getInstance().ee();
    var tmp_0;
    if (tmp0_subject.equals(getKClass(Long))) {
      if (byte instanceof Long)
        byte;
      else
        THROW_CCE();
      tmp_0 = byte.c6(new Long(0, 0)) < 0 ? Sign_NEGATIVE_getInstance() : byte.c6(new Long(0, 0)) > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().ge())) {
      if (typeof byte === 'number')
        byte;
      else
        THROW_CCE();
      tmp_0 = byte < 0 ? Sign_NEGATIVE_getInstance() : byte > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().fe())) {
      if (typeof byte === 'number')
        byte;
      else
        THROW_CCE();
      tmp_0 = byte < 0 ? Sign_NEGATIVE_getInstance() : byte > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else if (tmp0_subject.equals(PrimitiveClasses_getInstance().ee())) {
      if (typeof byte === 'number')
        byte;
      else
        THROW_CCE();
      tmp_0 = byte < 0 ? Sign_NEGATIVE_getInstance() : byte > 0 ? Sign_POSITIVE_getInstance() : Sign_ZERO_getInstance();
    } else {
      throw RuntimeException_init_$Create$('Unsupported type ' + PrimitiveClasses_getInstance().ee());
    }
    tmp$ret$0 = tmp_0;
    BigInteger.call($this, tmp, tmp$ret$0);
    return $this;
  }
  function BigInteger_init_$Create$_2(byte) {
    return BigInteger_init_$Init$_2(byte, Object.create(BigInteger.prototype));
  }
  function Companion_1() {
    Companion_instance_1 = this;
    this.ui_1 = get_chosenArithmetic();
    this.vi_1 = new BigInteger(this.ui_1.tl(), Sign_ZERO_getInstance());
    this.wi_1 = new BigInteger(this.ui_1.ul(), Sign_POSITIVE_getInstance());
    this.xi_1 = new BigInteger(this.ui_1.vl(), Sign_POSITIVE_getInstance());
    this.yi_1 = new BigInteger(this.ui_1.wl(), Sign_POSITIVE_getInstance());
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.math.log10' call
    tmp$ret$0 = log10(2.0);
    tmp.zi_1 = tmp$ret$0;
  }
  Companion_1.prototype.ok = function (string, base) {
    if (base < 2 ? true : base > 36) {
      throw NumberFormatException_init_$Create$('Unsupported base: ' + base + '. Supported base range is from 2 to 36');
    }
    var tmp = _Char___init__impl__6a9atx(46);
    var decimal = contains$default(string, tmp, false, 2, null);
    if (decimal) {
      var bigDecimal = Companion_getInstance_0().mk(string);
      var isActuallyDecimal = bigDecimal.fl(bigDecimal.hl()).ej(0) > 0;
      if (isActuallyDecimal) {
        throw NumberFormatException_init_$Create$('Supplied string is decimal, which cannot be converted to BigInteger without precision loss.');
      }
      return bigDecimal.il();
    }
    var signed = equals(new Char(charSequenceGet(string, 0)), new Char(_Char___init__impl__6a9atx(45))) ? true : equals(new Char(charSequenceGet(string, 0)), new Char(_Char___init__impl__6a9atx(43)));
    var tmp_0;
    if (signed) {
      if (string.length === 1) {
        throw NumberFormatException_init_$Create$('Invalid big integer: ' + string);
      }
      var tmp_1;
      if (equals(new Char(charSequenceGet(string, 0)), new Char(_Char___init__impl__6a9atx(45)))) {
        tmp_1 = Sign_NEGATIVE_getInstance();
      } else {
        tmp_1 = Sign_POSITIVE_getInstance();
      }
      var isNegative = tmp_1;
      if (string.length === 2 ? equals(new Char(charSequenceGet(string, 1)), new Char(_Char___init__impl__6a9atx(48))) : false) {
        return this.vi_1;
      }
      var tmp$ret$1;
      // Inline function 'kotlin.text.substring' call
      var tmp0_substring = string.length;
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = string;
      tmp$ret$1 = tmp$ret$0.substring(1, tmp0_substring);
      tmp_0 = new BigInteger(this.ui_1.xl(tmp$ret$1, base), isNegative);
    } else {
      if (string.length === 1 ? equals(new Char(charSequenceGet(string, 0)), new Char(_Char___init__impl__6a9atx(48))) : false) {
        return this.vi_1;
      }
      tmp_0 = new BigInteger(this.ui_1.xl(string, base), Sign_POSITIVE_getInstance());
    }
    return tmp_0;
  };
  Companion_1.prototype.yl = function (uLong) {
    return new BigInteger(this.ui_1.zl(uLong), Sign_POSITIVE_getInstance());
  };
  Companion_1.prototype.am = function (uInt) {
    return new BigInteger(this.ui_1.bm(uInt), Sign_POSITIVE_getInstance());
  };
  Companion_1.prototype.cm = function (uShort) {
    return new BigInteger(this.ui_1.dm(uShort), Sign_POSITIVE_getInstance());
  };
  Companion_1.prototype.em = function (uByte) {
    return new BigInteger(this.ui_1.fm(uByte), Sign_POSITIVE_getInstance());
  };
  Companion_1.prototype.nh = function (long) {
    return BigInteger_init_$Create$(long);
  };
  Companion_1.prototype.oh = function (int) {
    return BigInteger_init_$Create$_0(int);
  };
  Companion_1.prototype.gk = function (short) {
    return BigInteger_init_$Create$_1(short);
  };
  Companion_1.prototype.ik = function (byte) {
    return BigInteger_init_$Create$_2(byte);
  };
  Companion_1.prototype.ph = function (float, exactRequired) {
    var tmp$ret$0;
    // Inline function 'kotlin.math.floor' call
    tmp$ret$0 = Math.floor(float);
    var floatDecimalPart = float - tmp$ret$0;
    var tmp = Companion_getInstance_0();
    var tmp$ret$1;
    // Inline function 'kotlin.math.floor' call
    tmp$ret$1 = Math.floor(float);
    var bigDecimal = tmp.jk(tmp$ret$1, null);
    if (exactRequired) {
      if (floatDecimalPart > 0) {
        throw ArithmeticException_init_$Create$('Cant create BigInteger without precision loss, and exact  value was required');
      }
    }
    return bigDecimal.il();
  };
  Companion_1.prototype.rh = function (double, exactRequired) {
    var tmp$ret$0;
    // Inline function 'kotlin.math.floor' call
    tmp$ret$0 = Math.floor(double);
    var doubleDecimalPart = double - tmp$ret$0;
    var tmp = Companion_getInstance_0();
    var tmp$ret$1;
    // Inline function 'kotlin.math.floor' call
    tmp$ret$1 = Math.floor(double);
    var bigDecimal = tmp.lk(tmp$ret$1, null);
    if (exactRequired) {
      if (doubleDecimalPart > 0.0) {
        throw ArithmeticException_init_$Create$('Cant create BigInteger without precision loss, and exact  value was required');
      }
    }
    return bigDecimal.il();
  };
  Companion_1.$metadata$ = objectMeta('Companion', [Creator, Util, ByteArrayDeserializable]);
  var Companion_instance_1;
  function Companion_getInstance_2() {
    if (Companion_instance_1 == null)
      new Companion_1();
    return Companion_instance_1;
  }
  function isResultZero($this, resultMagnitude) {
    return Companion_getInstance_2().ui_1.gm(resultMagnitude, Companion_getInstance_2().ui_1.tl()) === 0;
  }
  function javascriptNumberComparison_0($this, number) {
    var float = numberToDouble(number);
    var tmp;
    if (float % 1 === 0.0) {
      tmp = $this.jl(Companion_getInstance_2().nh(numberToLong(number)));
    } else {
      var tmp_0 = numberToDouble(number);
      tmp = $this.hm(tmp_0, BigInteger$javascriptNumberComparison$lambda($this));
    }
    return tmp;
  }
  function QuotientAndRemainder(quotient, remainder) {
    this.si_1 = quotient;
    this.ti_1 = remainder;
  }
  QuotientAndRemainder.prototype.toString = function () {
    return 'QuotientAndRemainder(quotient=' + this.si_1 + ', remainder=' + this.ti_1 + ')';
  };
  QuotientAndRemainder.prototype.hashCode = function () {
    var result = this.si_1.hashCode();
    result = imul(result, 31) + this.ti_1.hashCode() | 0;
    return result;
  };
  QuotientAndRemainder.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof QuotientAndRemainder))
      return false;
    var tmp0_other_with_cast = other instanceof QuotientAndRemainder ? other : THROW_CCE();
    if (!this.si_1.equals(tmp0_other_with_cast.si_1))
      return false;
    if (!this.ti_1.equals(tmp0_other_with_cast.ti_1))
      return false;
    return true;
  };
  QuotientAndRemainder.$metadata$ = classMeta('QuotientAndRemainder');
  function BigInteger$compareTo$lambda(this$0) {
    return function (it) {
      return this$0.jl(it);
    };
  }
  function BigInteger$compareTo$lambda_0(this$0) {
    return function (it) {
      return this$0.jl(it);
    };
  }
  function BigInteger$javascriptNumberComparison$lambda(this$0) {
    return function (it) {
      return this$0.jl(it);
    };
  }
  function BigInteger(wordArray, requestedSign) {
    Companion_getInstance_2();
    if (requestedSign.equals(Sign_ZERO_getInstance())) {
      // Inline function 'kotlin.require' call
      var tmp0_require = isResultZero(this, wordArray);
      // Inline function 'kotlin.contracts.contract' call
      if (!tmp0_require) {
        var tmp$ret$0;
        // Inline function 'com.ionspin.kotlin.bignum.integer.BigInteger.<anonymous>' call
        tmp$ret$0 = 'sign should be Sign.ZERO iff magnitude has a value of 0';
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
    }
    this.ni_1 = BigInteger63Arithmetic_getInstance().an(wordArray);
    var tmp = this;
    var tmp_0;
    if (isResultZero(this, this.ni_1)) {
      tmp_0 = Sign_ZERO_getInstance();
    } else {
      tmp_0 = requestedSign;
    }
    tmp.oi_1 = tmp_0;
    this.pi_1 = _ULongArray___get_size__impl__ju6dtr(this.ni_1);
    this.qi_1 = null;
  }
  BigInteger.prototype.bi = function () {
    return Companion_getInstance_2();
  };
  BigInteger.prototype.ci = function () {
    return this;
  };
  BigInteger.prototype.bn = function (other) {
    var comparison = Companion_getInstance_2().ui_1.gm(this.ni_1, other.ni_1);
    var tmp;
    if (other.oi_1.equals(this.oi_1)) {
      return new BigInteger(Companion_getInstance_2().ui_1.dn(this.ni_1, other.ni_1), this.oi_1);
    } else {
      var tmp_0;
      if (comparison > 0) {
        tmp_0 = new BigInteger(Companion_getInstance_2().ui_1.cn(this.ni_1, other.ni_1), this.oi_1);
      } else if (comparison < 0) {
        tmp_0 = new BigInteger(Companion_getInstance_2().ui_1.cn(other.ni_1, this.ni_1), other.oi_1);
      } else {
        tmp_0 = Companion_getInstance_2().vi_1;
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  BigInteger.prototype.th = function (other) {
    return this.bn(other instanceof BigInteger ? other : THROW_CCE());
  };
  BigInteger.prototype.en = function (other) {
    var comparison = Companion_getInstance_2().ui_1.gm(this.ni_1, other.ni_1);
    if (this.equals(Companion_getInstance_2().vi_1)) {
      return other.pk();
    }
    if (other.equals(Companion_getInstance_2().vi_1)) {
      return this;
    }
    var tmp;
    if (other.oi_1.equals(this.oi_1)) {
      var tmp_0;
      if (comparison > 0) {
        tmp_0 = new BigInteger(Companion_getInstance_2().ui_1.cn(this.ni_1, other.ni_1), this.oi_1);
      } else if (comparison < 0) {
        tmp_0 = new BigInteger(Companion_getInstance_2().ui_1.cn(other.ni_1, this.ni_1), this.oi_1.hn());
      } else {
        tmp_0 = Companion_getInstance_2().vi_1;
      }
      tmp = tmp_0;
    } else {
      return new BigInteger(Companion_getInstance_2().ui_1.dn(this.ni_1, other.ni_1), this.oi_1);
    }
    return tmp;
  };
  BigInteger.prototype.uh = function (other) {
    return this.en(other instanceof BigInteger ? other : THROW_CCE());
  };
  BigInteger.prototype.in = function (other) {
    if (this.dj() ? true : other.dj()) {
      return Companion_getInstance_2().vi_1;
    }
    if (other.equals(Companion_getInstance_2().wi_1)) {
      return this;
    }
    var tmp;
    if (!this.oi_1.equals(other.oi_1)) {
      tmp = Sign_NEGATIVE_getInstance();
    } else {
      tmp = Sign_POSITIVE_getInstance();
    }
    var sign = tmp;
    var tmp_0;
    if (sign.equals(Sign_POSITIVE_getInstance())) {
      tmp_0 = new BigInteger(Companion_getInstance_2().ui_1.jn(this.ni_1, other.ni_1), sign);
    } else {
      tmp_0 = new BigInteger(Companion_getInstance_2().ui_1.jn(this.ni_1, other.ni_1), sign);
    }
    return tmp_0;
  };
  BigInteger.prototype.vh = function (other) {
    return this.in(other instanceof BigInteger ? other : THROW_CCE());
  };
  BigInteger.prototype.kn = function (other) {
    if (other.dj()) {
      throw ArithmeticException_init_$Create$('Division by zero! ' + this + ' / ' + other);
    }
    var result = Companion_getInstance_2().ui_1.ln(this.ni_1, other.ni_1).z4_1.l8_1;
    var tmp;
    if (equals(result, Companion_getInstance_2().ui_1.tl())) {
      tmp = Companion_getInstance_2().vi_1;
    } else {
      var tmp_0;
      if (!this.oi_1.equals(other.oi_1)) {
        tmp_0 = Sign_NEGATIVE_getInstance();
      } else {
        tmp_0 = Sign_POSITIVE_getInstance();
      }
      var sign = tmp_0;
      tmp = new BigInteger(result, sign);
    }
    return tmp;
  };
  BigInteger.prototype.wh = function (other) {
    return this.kn(other instanceof BigInteger ? other : THROW_CCE());
  };
  BigInteger.prototype.mn = function (other) {
    if (other.dj()) {
      throw ArithmeticException_init_$Create$('Division by zero! ' + this + ' / ' + other);
    }
    var tmp;
    if (!this.oi_1.equals(other.oi_1)) {
      tmp = Sign_NEGATIVE_getInstance();
    } else {
      tmp = Sign_POSITIVE_getInstance();
    }
    var sign = tmp;
    var result = Companion_getInstance_2().ui_1.ln(this.ni_1, other.ni_1).a5_1.l8_1;
    if (equals(result, Companion_getInstance_2().ui_1.tl())) {
      sign = Sign_ZERO_getInstance();
    }
    return new BigInteger(result, sign);
  };
  BigInteger.prototype.xh = function (other) {
    return this.mn(other instanceof BigInteger ? other : THROW_CCE());
  };
  BigInteger.prototype.nn = function (other) {
    if (other.dj()) {
      throw ArithmeticException_init_$Create$('Division by zero! ' + this + ' / ' + other);
    }
    var tmp;
    if (!this.oi_1.equals(other.oi_1)) {
      tmp = Sign_NEGATIVE_getInstance();
    } else {
      tmp = Sign_POSITIVE_getInstance();
    }
    var sign = tmp;
    var result = Companion_getInstance_2().ui_1.ln(this.ni_1, other.ni_1);
    var tmp_0;
    if (equals(result.z4_1, new ULongArray(Companion_getInstance_2().ui_1.tl()))) {
      tmp_0 = Companion_getInstance_2().vi_1;
    } else {
      tmp_0 = new BigInteger(result.z4_1.l8_1, sign);
    }
    var quotient = tmp_0;
    var tmp_1;
    if (equals(result.a5_1, new ULongArray(Companion_getInstance_2().ui_1.tl()))) {
      tmp_1 = Companion_getInstance_2().vi_1;
    } else {
      tmp_1 = new BigInteger(result.a5_1.l8_1, this.oi_1);
    }
    var remainder = tmp_1;
    return new Pair(quotient, remainder);
  };
  BigInteger.prototype.jl = function (other) {
    if (this.dj() ? other.dj() : false)
      return 0;
    if (other.dj() ? this.oi_1.equals(Sign_POSITIVE_getInstance()) : false)
      return 1;
    if (other.dj() ? this.oi_1.equals(Sign_NEGATIVE_getInstance()) : false)
      return -1;
    if (this.dj() ? other.oi_1.equals(Sign_POSITIVE_getInstance()) : false)
      return -1;
    if (this.dj() ? other.oi_1.equals(Sign_NEGATIVE_getInstance()) : false)
      return 1;
    if (!this.oi_1.equals(other.oi_1))
      return this.oi_1.equals(Sign_POSITIVE_getInstance()) ? 1 : -1;
    var result = Companion_getInstance_2().ui_1.gm(this.ni_1, other.ni_1);
    var tmp;
    if (this.oi_1.equals(Sign_NEGATIVE_getInstance()) ? other.oi_1.equals(Sign_NEGATIVE_getInstance()) : false) {
      tmp = imul(result, -1);
    } else {
      tmp = result;
    }
    return tmp;
  };
  BigInteger.prototype.dj = function () {
    return this.oi_1.equals(Sign_ZERO_getInstance()) ? true : get_chosenArithmetic().gm(this.ni_1, get_chosenArithmetic().tl()) === 0;
  };
  BigInteger.prototype.pk = function () {
    return new BigInteger(this.ni_1, this.oi_1.hn());
  };
  BigInteger.prototype.cj = function () {
    return new BigInteger(this.ni_1, Sign_POSITIVE_getInstance());
  };
  BigInteger.prototype.aj = function (exponent) {
    if (exponent.c6(new Long(0, 0)) < 0) {
      throw ArithmeticException_init_$Create$('Negative exponent not supported with BigInteger');
    }
    var tmp0_subject = this;
    var tmp;
    if (tmp0_subject.equals(Companion_getInstance_2().vi_1)) {
      tmp = Companion_getInstance_2().vi_1;
    } else if (tmp0_subject.equals(Companion_getInstance_2().wi_1)) {
      tmp = Companion_getInstance_2().wi_1;
    } else {
      var tmp_0;
      if (this.oi_1.equals(Sign_NEGATIVE_getInstance())) {
        var tmp_1;
        var tmp$ret$0;
        // Inline function 'kotlin.Long.rem' call
        tmp$ret$0 = exponent.t8(new Long(2, 0));
        if (tmp$ret$0.equals(new Long(0, 0))) {
          tmp_1 = Sign_POSITIVE_getInstance();
        } else {
          tmp_1 = Sign_NEGATIVE_getInstance();
        }
        tmp_0 = tmp_1;
      } else {
        tmp_0 = Sign_POSITIVE_getInstance();
      }
      var sign = tmp_0;
      tmp = new BigInteger(Companion_getInstance_2().ui_1.on(this.ni_1, exponent), sign);
    }
    return tmp;
  };
  BigInteger.prototype.pn = function (exponent) {
    return this.aj(toLong(exponent));
  };
  BigInteger.prototype.yh = function () {
    var tmp0_subject = this.oi_1;
    var tmp0 = tmp0_subject.d2_1;
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = 1;
        break;
      case 1:
        tmp = -1;
        break;
      case 2:
        tmp = 0;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  BigInteger.prototype.ri = function () {
    var bitLenght = Companion_getInstance_2().ui_1.qn(this.ni_1);
    var tmp$ret$0;
    // Inline function 'kotlin.math.ceil' call
    var tmp0_ceil = (bitLenght - 1 | 0) * Companion_getInstance_2().zi_1;
    tmp$ret$0 = Math.ceil(tmp0_ceil);
    var minDigit = tmp$ret$0;
    var tmp = this.gi(toBigInteger(10).pn(numberToInt(minDigit)));
    var counter = new Long(0, 0);
    while (!(tmp.ej(0) === 0)) {
      tmp = tmp.zg(10);
      var tmp0 = counter;
      counter = tmp0.bh();
    }
    var tmp$ret$1;
    // Inline function 'kotlin.Long.plus' call
    var tmp1_plus = counter;
    var tmp2_plus = numberToInt(minDigit);
    tmp$ret$1 = tmp1_plus.e6(toLong(tmp2_plus));
    return tmp$ret$1;
  };
  BigInteger.prototype.a6 = function () {
    return this.pk();
  };
  BigInteger.prototype.ch = function () {
    return this.ei(Companion_getInstance_2().wi_1);
  };
  BigInteger.prototype.bh = function () {
    return this.di(Companion_getInstance_2().wi_1);
  };
  BigInteger.prototype.bj = function (other) {
    var result = this.nn(other);
    return new QuotientAndRemainder(result.z4_1, result.a5_1);
  };
  BigInteger.prototype.ej = function (other) {
    if (isNumber(other)) {
      if (ComparisonWorkaround_getInstance().kl(other)) {
        return javascriptNumberComparison_0(this, other);
      }
    }
    var tmp0_subject = other;
    var tmp;
    if (tmp0_subject instanceof BigInteger) {
      tmp = this.jl(other);
    } else {
      if (tmp0_subject instanceof Long) {
        tmp = this.jl(Companion_getInstance_2().nh(other));
      } else {
        if (typeof tmp0_subject === 'number') {
          tmp = this.jl(Companion_getInstance_2().oh(other));
        } else {
          if (typeof tmp0_subject === 'number') {
            tmp = this.jl(Companion_getInstance_2().gk(other));
          } else {
            if (typeof tmp0_subject === 'number') {
              tmp = this.jl(Companion_getInstance_2().ik(other));
            } else {
              if (tmp0_subject instanceof ULong) {
                tmp = this.jl(Companion_getInstance_2().yl(other.t1_1));
              } else {
                if (tmp0_subject instanceof UInt) {
                  tmp = this.jl(Companion_getInstance_2().am(other.u1_1));
                } else {
                  if (tmp0_subject instanceof UShort) {
                    tmp = this.jl(Companion_getInstance_2().cm(other.r8_1));
                  } else {
                    if (tmp0_subject instanceof UByte) {
                      tmp = this.jl(Companion_getInstance_2().em(other.l7_1));
                    } else {
                      if (typeof tmp0_subject === 'number') {
                        tmp = this.hm(other, BigInteger$compareTo$lambda(this));
                      } else {
                        if (typeof tmp0_subject === 'number') {
                          tmp = this.rn(other, BigInteger$compareTo$lambda_0(this));
                        } else {
                          throw RuntimeException_init_$Create$('Invalid comparison type for BigInteger: ' + getKClassFromExpression(other));
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return tmp;
  };
  BigInteger.prototype.o7 = function (other) {
    return this.ej(isObject(other) ? other : THROW_CCE());
  };
  BigInteger.prototype.hm = function (float, comparisonBlock) {
    var tmp$ret$0;
    // Inline function 'kotlin.math.floor' call
    tmp$ret$0 = Math.floor(float);
    var withoutDecimalPart = tmp$ret$0;
    var hasDecimalPart = !(float % 1 === 0.0);
    var tmp;
    if (hasDecimalPart) {
      var tmp_0 = Companion_getInstance_2();
      var tmp_1 = withoutDecimalPart + 1;
      var comparisonResult = comparisonBlock(tmp_0.qh(tmp_1, false, 2, null));
      var tmp_2;
      if (comparisonResult === 0) {
        tmp_2 = 1;
      } else {
        tmp_2 = comparisonResult;
      }
      tmp = tmp_2;
    } else {
      var tmp_3 = Companion_getInstance_2();
      tmp = comparisonBlock(tmp_3.qh(withoutDecimalPart, false, 2, null));
    }
    return tmp;
  };
  BigInteger.prototype.rn = function (double, comparisonBlock) {
    var tmp$ret$0;
    // Inline function 'kotlin.math.floor' call
    tmp$ret$0 = Math.floor(double);
    var withoutDecimalPart = tmp$ret$0;
    var hasDecimalPart = !(double % 1 === 0.0);
    var tmp;
    if (hasDecimalPart) {
      var tmp_0 = Companion_getInstance_2();
      var tmp_1 = withoutDecimalPart + 1;
      var comparisonResult = comparisonBlock(tmp_0.sh(tmp_1, false, 2, null));
      var tmp_2;
      if (comparisonResult === 0) {
        tmp_2 = 1;
      } else {
        tmp_2 = comparisonResult;
      }
      tmp = tmp_2;
    } else {
      var tmp_3 = Companion_getInstance_2();
      tmp = comparisonBlock(tmp_3.sh(withoutDecimalPart, false, 2, null));
    }
    return tmp;
  };
  BigInteger.prototype.equals = function (other) {
    var tmp0_subject = other;
    var tmp;
    if (tmp0_subject instanceof BigInteger) {
      tmp = this.jl(other);
    } else {
      if (tmp0_subject instanceof Long) {
        tmp = this.jl(Companion_getInstance_2().nh(other));
      } else {
        if (!(tmp0_subject == null) ? typeof tmp0_subject === 'number' : false) {
          tmp = this.jl(Companion_getInstance_2().oh(other));
        } else {
          if (!(tmp0_subject == null) ? typeof tmp0_subject === 'number' : false) {
            tmp = this.jl(Companion_getInstance_2().gk(other));
          } else {
            if (!(tmp0_subject == null) ? typeof tmp0_subject === 'number' : false) {
              tmp = this.jl(Companion_getInstance_2().ik(other));
            } else {
              if (tmp0_subject instanceof ULong) {
                tmp = this.jl(Companion_getInstance_2().yl(other.t1_1));
              } else {
                if (tmp0_subject instanceof UInt) {
                  tmp = this.jl(Companion_getInstance_2().am(other.u1_1));
                } else {
                  if (tmp0_subject instanceof UShort) {
                    tmp = this.jl(Companion_getInstance_2().cm(other.r8_1));
                  } else {
                    if (tmp0_subject instanceof UByte) {
                      tmp = this.jl(Companion_getInstance_2().em(other.l7_1));
                    } else {
                      tmp = -1;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    var comparison = tmp;
    return comparison === 0;
  };
  BigInteger.prototype.hashCode = function () {
    return ULongArray__hashCode_impl_aze4wa(this.ni_1) + this.oi_1.hashCode() | 0;
  };
  BigInteger.prototype.toString = function () {
    return this.ml(10);
  };
  BigInteger.prototype.ml = function (base) {
    var tmp;
    if (this.oi_1.equals(Sign_NEGATIVE_getInstance())) {
      tmp = '-';
    } else {
      tmp = '';
    }
    var sign = tmp;
    return sign + this.nl(base);
  };
  BigInteger.prototype.nl = function (base) {
    return Companion_getInstance_2().ui_1.sn(this.ni_1, base);
  };
  BigInteger.$metadata$ = classMeta('BigInteger', [BigNumber, CommonBigNumberOperations, NarrowingOperations, BitwiseCapable, Comparable, ByteArraySerializable]);
  function BigInteger32ArithmeticInterface() {
  }
  BigInteger32ArithmeticInterface.$metadata$ = interfaceMeta('BigInteger32ArithmeticInterface');
  function BigIntegerArithmetic() {
  }
  BigIntegerArithmetic.$metadata$ = interfaceMeta('BigIntegerArithmetic');
  var Sign_POSITIVE_instance;
  var Sign_NEGATIVE_instance;
  var Sign_ZERO_instance;
  var Sign_entriesInitialized;
  function Sign_initEntries() {
    if (Sign_entriesInitialized)
      return Unit_getInstance();
    Sign_entriesInitialized = true;
    Sign_POSITIVE_instance = new Sign('POSITIVE', 0);
    Sign_NEGATIVE_instance = new Sign('NEGATIVE', 1);
    Sign_ZERO_instance = new Sign('ZERO', 2);
  }
  function Sign(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  Sign.prototype.hn = function () {
    var tmp0_subject = this;
    var tmp0 = tmp0_subject.d2_1;
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = Sign_NEGATIVE_getInstance();
        break;
      case 1:
        tmp = Sign_POSITIVE_getInstance();
        break;
      case 2:
        tmp = Sign_ZERO_getInstance();
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  Sign.$metadata$ = classMeta('Sign', undefined, undefined, undefined, undefined, Enum.prototype);
  function Sign_POSITIVE_getInstance() {
    Sign_initEntries();
    return Sign_POSITIVE_instance;
  }
  function Sign_NEGATIVE_getInstance() {
    Sign_initEntries();
    return Sign_NEGATIVE_instance;
  }
  function Sign_ZERO_getInstance() {
    Sign_initEntries();
    return Sign_ZERO_instance;
  }
  function toBigInteger(_this__u8e3s4) {
    return Companion_getInstance_2().oh(_this__u8e3s4);
  }
  function get_chosenArithmetic() {
    init_properties_Configuration_kt_li7kn6();
    return chosenArithmetic;
  }
  var chosenArithmetic;
  var properties_initialized_Configuration_kt_gex7mu;
  function init_properties_Configuration_kt_li7kn6() {
    if (properties_initialized_Configuration_kt_gex7mu) {
    } else {
      properties_initialized_Configuration_kt_gex7mu = true;
      chosenArithmetic = BigInteger63Arithmetic_getInstance();
    }
  }
  function Sextuple(a, b, c, d, e, f) {
    this.tn_1 = a;
    this.un_1 = b;
    this.vn_1 = c;
    this.wn_1 = d;
    this.xn_1 = e;
    this.yn_1 = f;
  }
  Sextuple.prototype.a4 = function () {
    return this.tn_1;
  };
  Sextuple.prototype.b4 = function () {
    return this.un_1;
  };
  Sextuple.prototype.g7 = function () {
    return this.vn_1;
  };
  Sextuple.prototype.zn = function () {
    return this.wn_1;
  };
  Sextuple.prototype.ao = function () {
    return this.xn_1;
  };
  Sextuple.prototype.bo = function () {
    return this.yn_1;
  };
  Sextuple.prototype.toString = function () {
    return 'Sextuple(a=' + this.tn_1 + ', b=' + this.un_1 + ', c=' + this.vn_1 + ', d=' + this.wn_1 + ', e=' + this.xn_1 + ', f=' + this.yn_1 + ')';
  };
  Sextuple.prototype.hashCode = function () {
    var result = this.tn_1 == null ? 0 : hashCode(this.tn_1);
    result = imul(result, 31) + (this.un_1 == null ? 0 : hashCode(this.un_1)) | 0;
    result = imul(result, 31) + (this.vn_1 == null ? 0 : hashCode(this.vn_1)) | 0;
    result = imul(result, 31) + (this.wn_1 == null ? 0 : hashCode(this.wn_1)) | 0;
    result = imul(result, 31) + (this.xn_1 == null ? 0 : hashCode(this.xn_1)) | 0;
    result = imul(result, 31) + (this.yn_1 == null ? 0 : hashCode(this.yn_1)) | 0;
    return result;
  };
  Sextuple.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Sextuple))
      return false;
    var tmp0_other_with_cast = other instanceof Sextuple ? other : THROW_CCE();
    if (!equals(this.tn_1, tmp0_other_with_cast.tn_1))
      return false;
    if (!equals(this.un_1, tmp0_other_with_cast.un_1))
      return false;
    if (!equals(this.vn_1, tmp0_other_with_cast.vn_1))
      return false;
    if (!equals(this.wn_1, tmp0_other_with_cast.wn_1))
      return false;
    if (!equals(this.xn_1, tmp0_other_with_cast.xn_1))
      return false;
    if (!equals(this.yn_1, tmp0_other_with_cast.yn_1))
      return false;
    return true;
  };
  Sextuple.$metadata$ = classMeta('Sextuple');
  function Quadruple(a, b, c, d) {
    this.co_1 = a;
    this.do_1 = b;
    this.eo_1 = c;
    this.fo_1 = d;
  }
  Quadruple.prototype.a4 = function () {
    return this.co_1;
  };
  Quadruple.prototype.b4 = function () {
    return this.do_1;
  };
  Quadruple.prototype.g7 = function () {
    return this.eo_1;
  };
  Quadruple.prototype.zn = function () {
    return this.fo_1;
  };
  Quadruple.prototype.toString = function () {
    return 'Quadruple(a=' + this.co_1 + ', b=' + this.do_1 + ', c=' + this.eo_1 + ', d=' + this.fo_1 + ')';
  };
  Quadruple.prototype.hashCode = function () {
    var result = this.co_1 == null ? 0 : hashCode(this.co_1);
    result = imul(result, 31) + (this.do_1 == null ? 0 : hashCode(this.do_1)) | 0;
    result = imul(result, 31) + (this.eo_1 == null ? 0 : hashCode(this.eo_1)) | 0;
    result = imul(result, 31) + (this.fo_1 == null ? 0 : hashCode(this.fo_1)) | 0;
    return result;
  };
  Quadruple.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Quadruple))
      return false;
    var tmp0_other_with_cast = other instanceof Quadruple ? other : THROW_CCE();
    if (!equals(this.co_1, tmp0_other_with_cast.co_1))
      return false;
    if (!equals(this.do_1, tmp0_other_with_cast.do_1))
      return false;
    if (!equals(this.eo_1, tmp0_other_with_cast.eo_1))
      return false;
    if (!equals(this.fo_1, tmp0_other_with_cast.fo_1))
      return false;
    return true;
  };
  Quadruple.$metadata$ = classMeta('Quadruple');
  function SignedUIntArray(unsignedValue, sign) {
    this.go_1 = unsignedValue;
    this.ho_1 = sign;
  }
  SignedUIntArray.prototype.toString = function () {
    return 'SignedUIntArray(unsignedValue=' + new UIntArray(this.go_1) + ', sign=' + this.ho_1 + ')';
  };
  SignedUIntArray.prototype.hashCode = function () {
    var result = UIntArray__hashCode_impl_hr7ost(this.go_1);
    result = imul(result, 31) + (this.ho_1 | 0) | 0;
    return result;
  };
  SignedUIntArray.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SignedUIntArray))
      return false;
    var tmp0_other_with_cast = other instanceof SignedUIntArray ? other : THROW_CCE();
    if (!equals(this.go_1, tmp0_other_with_cast.go_1))
      return false;
    if (!(this.ho_1 === tmp0_other_with_cast.ho_1))
      return false;
    return true;
  };
  SignedUIntArray.$metadata$ = classMeta('SignedUIntArray');
  function BigInteger32Arithmetic() {
    BigInteger32Arithmetic_instance = this;
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.intArrayOf' call
    tmp$ret$0 = new Int32Array([]);
    tmp.io_1 = tmp$ret$0;
    this.jo_1 = _ULong___init__impl__c78o9k(new Long(-1, 0));
    this.ko_1 = _UInt___init__impl__l7qpdl(-1);
    this.lo_1 = _ULong___init__impl__c78o9k(new Long(0, 1));
    this.mo_1 = _ULong___init__impl__c78o9k(new Long(65535, 0));
    this.no_1 = _UInt___init__impl__l7qpdl(-1);
    this.oo_1 = 32;
    this.po_1 = 32;
    this.qo_1 = _UIntArray___init__impl__ghjpc6(0);
    var tmp_0 = this;
    var tmp$ret$4;
    // Inline function 'kotlin.UIntArray' call
    var tmp_1 = 0;
    var tmp_2 = 1;
    var tmp_3 = new Int32Array(tmp_2);
    while (tmp_1 < tmp_2) {
      var tmp_4 = tmp_1;
      var tmp$ret$3;
      // Inline function 'kotlin.UIntArray.<anonymous>' call
      var tmp$ret$2;
      // Inline function 'kotlin.UInt.toInt' call
      var tmp$ret$1;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.ONE.<anonymous>' call
      tmp$ret$1 = _UInt___init__impl__l7qpdl(1);
      var tmp0_toInt = tmp$ret$1;
      tmp$ret$2 = _UInt___get_data__impl__f0vqqw(tmp0_toInt);
      tmp$ret$3 = tmp$ret$2;
      tmp_3[tmp_4] = tmp$ret$3;
      tmp_1 = tmp_1 + 1 | 0;
    }
    tmp$ret$4 = _UIntArray___init__impl__ghjpc6_0(tmp_3);
    tmp_0.ro_1 = tmp$ret$4;
    var tmp_5 = this;
    var tmp$ret$8;
    // Inline function 'kotlin.UIntArray' call
    var tmp_6 = 0;
    var tmp_7 = 1;
    var tmp_8 = new Int32Array(tmp_7);
    while (tmp_6 < tmp_7) {
      var tmp_9 = tmp_6;
      var tmp$ret$7;
      // Inline function 'kotlin.UIntArray.<anonymous>' call
      var tmp$ret$6;
      // Inline function 'kotlin.UInt.toInt' call
      var tmp$ret$5;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.TWO.<anonymous>' call
      tmp$ret$5 = _UInt___init__impl__l7qpdl(2);
      var tmp0_toInt_0 = tmp$ret$5;
      tmp$ret$6 = _UInt___get_data__impl__f0vqqw(tmp0_toInt_0);
      tmp$ret$7 = tmp$ret$6;
      tmp_8[tmp_9] = tmp$ret$7;
      tmp_6 = tmp_6 + 1 | 0;
    }
    tmp$ret$8 = _UIntArray___init__impl__ghjpc6_0(tmp_8);
    tmp_5.so_1 = tmp$ret$8;
    var tmp_10 = this;
    var tmp$ret$12;
    // Inline function 'kotlin.UIntArray' call
    var tmp_11 = 0;
    var tmp_12 = 1;
    var tmp_13 = new Int32Array(tmp_12);
    while (tmp_11 < tmp_12) {
      var tmp_14 = tmp_11;
      var tmp$ret$11;
      // Inline function 'kotlin.UIntArray.<anonymous>' call
      var tmp$ret$10;
      // Inline function 'kotlin.UInt.toInt' call
      var tmp$ret$9;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.TEN.<anonymous>' call
      tmp$ret$9 = _UInt___init__impl__l7qpdl(10);
      var tmp0_toInt_1 = tmp$ret$9;
      tmp$ret$10 = _UInt___get_data__impl__f0vqqw(tmp0_toInt_1);
      tmp$ret$11 = tmp$ret$10;
      tmp_13[tmp_14] = tmp$ret$11;
      tmp_11 = tmp_11 + 1 | 0;
    }
    tmp$ret$12 = _UIntArray___init__impl__ghjpc6_0(tmp_13);
    tmp_10.to_1 = tmp$ret$12;
    this.uo_1 = 60;
    this.vo_1 = 15000;
    this.wo_1 = new SignedUIntArray(this.so_1, true);
  }
  BigInteger32Arithmetic.prototype.xo = function () {
    return this.oo_1;
  };
  BigInteger32Arithmetic.prototype.yo = function (value) {
    var x = value;
    var y;
    var n = this.oo_1;
    var tmp$ret$0;
    // Inline function 'kotlin.UInt.shr' call
    var tmp0_shr = x;
    tmp$ret$0 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp0_shr) >>> 16 | 0);
    y = tmp$ret$0;
    if (!(y === _UInt___init__impl__l7qpdl(0))) {
      n = n - 16 | 0;
      x = y;
    }
    var tmp$ret$1;
    // Inline function 'kotlin.UInt.shr' call
    var tmp1_shr = x;
    tmp$ret$1 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp1_shr) >>> 8 | 0);
    y = tmp$ret$1;
    if (!(y === _UInt___init__impl__l7qpdl(0))) {
      n = n - 8 | 0;
      x = y;
    }
    var tmp$ret$2;
    // Inline function 'kotlin.UInt.shr' call
    var tmp2_shr = x;
    tmp$ret$2 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp2_shr) >>> 4 | 0);
    y = tmp$ret$2;
    if (!(y === _UInt___init__impl__l7qpdl(0))) {
      n = n - 4 | 0;
      x = y;
    }
    var tmp$ret$3;
    // Inline function 'kotlin.UInt.shr' call
    var tmp3_shr = x;
    tmp$ret$3 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp3_shr) >>> 2 | 0);
    y = tmp$ret$3;
    if (!(y === _UInt___init__impl__l7qpdl(0))) {
      n = n - 2 | 0;
      x = y;
    }
    var tmp$ret$4;
    // Inline function 'kotlin.UInt.shr' call
    var tmp4_shr = x;
    tmp$ret$4 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp4_shr) >>> 1 | 0);
    y = tmp$ret$4;
    if (!(y === _UInt___init__impl__l7qpdl(0))) {
      return n - 2 | 0;
    }
    var tmp = n;
    var tmp$ret$5;
    // Inline function 'kotlin.UInt.toInt' call
    var tmp5_toInt = x;
    tmp$ret$5 = _UInt___get_data__impl__f0vqqw(tmp5_toInt);
    return tmp - tmp$ret$5 | 0;
  };
  BigInteger32Arithmetic.prototype.zo = function (value) {
    if (UIntArray__isEmpty_impl_vd8j4n(value)) {
      return 0;
    }
    var mostSignificant = UIntArray__get_impl_gp5kza(value, _UIntArray___get_size__impl__r6l8ci(value) - 1 | 0);
    return this.ap(mostSignificant) + imul(_UIntArray___get_size__impl__r6l8ci(value) - 1 | 0, this.oo_1) | 0;
  };
  BigInteger32Arithmetic.prototype.ap = function (value) {
    return this.oo_1 - this.yo(value) | 0;
  };
  BigInteger32Arithmetic.prototype.bp = function (bigInteger) {
    var tmp$ret$4;
    // Inline function 'kotlin.collections.indexOfLast' call
    var tmp$ret$3;
    $l$block: {
      // Inline function 'kotlin.collections.indexOfLast' call
      var tmp0_indexOfLast = _UIntArray___get_storage__impl__92a0v0(bigInteger);
      var inductionVariable = tmp0_indexOfLast.length - 1 | 0;
      if (0 <= inductionVariable)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + -1 | 0;
          var tmp$ret$2;
          // Inline function 'kotlin.collections.indexOfLast.<anonymous>' call
          var tmp1__anonymous__uwfjfc = tmp0_indexOfLast[index];
          var tmp$ret$1;
          // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.removeLeadingZeros.<anonymous>' call
          var tmp$ret$0;
          // Inline function 'kotlin.toUInt' call
          tmp$ret$0 = _UInt___init__impl__l7qpdl(tmp1__anonymous__uwfjfc);
          var tmp0__anonymous__q1qw7t = tmp$ret$0;
          tmp$ret$1 = !(tmp0__anonymous__q1qw7t === _UInt___init__impl__l7qpdl(0));
          tmp$ret$2 = tmp$ret$1;
          if (tmp$ret$2) {
            tmp$ret$3 = index;
            break $l$block;
          }
        }
         while (0 <= inductionVariable);
      tmp$ret$3 = -1;
    }
    tmp$ret$4 = tmp$ret$3;
    var firstEmpty = tmp$ret$4 + 1 | 0;
    if (firstEmpty === -1 ? true : firstEmpty === 0) {
      return this.qo_1;
    }
    var tmp$ret$5;
    // Inline function 'kotlin.collections.copyOfRange' call
    tmp$ret$5 = _UIntArray___init__impl__ghjpc6_0(copyOfRange(_UIntArray___get_storage__impl__92a0v0(bigInteger), 0, firstEmpty));
    return tmp$ret$5;
  };
  BigInteger32Arithmetic.prototype.cp = function (bigInteger) {
    var lastNonEmptyIndex = _UIntArray___get_size__impl__r6l8ci(bigInteger) - 1 | 0;
    if (lastNonEmptyIndex <= 0) {
      return 0;
    }
    var element = UIntArray__get_impl_gp5kza(bigInteger, lastNonEmptyIndex);
    while (element === _UInt___init__impl__l7qpdl(0) ? lastNonEmptyIndex > 0 : false) {
      lastNonEmptyIndex = lastNonEmptyIndex - 1 | 0;
      element = UIntArray__get_impl_gp5kza(bigInteger, lastNonEmptyIndex);
    }
    if (UIntArray__get_impl_gp5kza(bigInteger, lastNonEmptyIndex) === _UInt___init__impl__l7qpdl(0)) {
      lastNonEmptyIndex = lastNonEmptyIndex - 1 | 0;
    }
    return (_UIntArray___get_size__impl__r6l8ci(bigInteger) - lastNonEmptyIndex | 0) - 1 | 0;
  };
  BigInteger32Arithmetic.prototype.dp = function (operand, places) {
    if (UIntArray__isEmpty_impl_vd8j4n(operand) ? true : places === 0) {
      return operand;
    }
    var originalSize = _UIntArray___get_size__impl__r6l8ci(operand);
    var leadingZeros = this.yo(UIntArray__get_impl_gp5kza(operand, _UIntArray___get_size__impl__r6l8ci(operand) - 1 | 0));
    var shiftWords = places / this.oo_1 | 0;
    var shiftBits = places % this.oo_1 | 0;
    var tmp;
    if (shiftBits > leadingZeros) {
      tmp = shiftWords + 1 | 0;
    } else {
      tmp = shiftWords;
    }
    var wordsNeeded = tmp;
    if (shiftBits === 0) {
      var tmp$ret$3;
      // Inline function 'kotlin.UIntArray' call
      var tmp0_UIntArray = _UIntArray___get_size__impl__r6l8ci(operand) + wordsNeeded | 0;
      var tmp_0 = 0;
      var tmp_1 = tmp0_UIntArray;
      var tmp_2 = new Int32Array(tmp_1);
      while (tmp_0 < tmp_1) {
        var tmp_3 = tmp_0;
        var tmp$ret$2;
        // Inline function 'kotlin.UIntArray.<anonymous>' call
        var tmp$ret$1;
        // Inline function 'kotlin.UInt.toInt' call
        var tmp$ret$0;
        // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.shiftLeft.<anonymous>' call
        var tmp0_subject = tmp_3;
        tmp$ret$0 = (0 <= tmp0_subject ? tmp0_subject < shiftWords : false) ? _UInt___init__impl__l7qpdl(0) : UIntArray__get_impl_gp5kza(operand, tmp_3 - shiftWords | 0);
        var tmp0_toInt = tmp$ret$0;
        tmp$ret$1 = _UInt___get_data__impl__f0vqqw(tmp0_toInt);
        tmp$ret$2 = tmp$ret$1;
        tmp_2[tmp_3] = tmp$ret$2;
        tmp_0 = tmp_0 + 1 | 0;
      }
      tmp$ret$3 = _UIntArray___init__impl__ghjpc6_0(tmp_2);
      return tmp$ret$3;
    }
    var tmp$ret$12;
    // Inline function 'kotlin.UIntArray' call
    var tmp1_UIntArray = _UIntArray___get_size__impl__r6l8ci(operand) + wordsNeeded | 0;
    var tmp_4 = 0;
    var tmp_5 = tmp1_UIntArray;
    var tmp_6 = new Int32Array(tmp_5);
    while (tmp_4 < tmp_5) {
      var tmp_7 = tmp_4;
      var tmp$ret$11;
      // Inline function 'kotlin.UIntArray.<anonymous>' call
      var tmp$ret$10;
      // Inline function 'kotlin.UInt.toInt' call
      var tmp$ret$9;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.shiftLeft.<anonymous>' call
      var tmp0_subject_0 = tmp_7;
      var tmp_8;
      if (0 <= tmp0_subject_0 ? tmp0_subject_0 < shiftWords : false) {
        tmp_8 = _UInt___init__impl__l7qpdl(0);
      } else {
        if (tmp0_subject_0 === shiftWords) {
          var tmp$ret$4;
          // Inline function 'kotlin.UInt.shl' call
          var tmp0_shl = UIntArray__get_impl_gp5kza(operand, tmp_7 - shiftWords | 0);
          tmp$ret$4 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp0_shl) << shiftBits);
          tmp_8 = tmp$ret$4;
        } else {
          var containsLower = shiftWords + 1 | 0;
          if (tmp0_subject_0 < (originalSize + shiftWords | 0) ? containsLower <= tmp0_subject_0 : false) {
            var tmp$ret$7;
            // Inline function 'kotlin.UInt.or' call
            var tmp$ret$5;
            // Inline function 'kotlin.UInt.shl' call
            var tmp1_shl = UIntArray__get_impl_gp5kza(operand, tmp_7 - shiftWords | 0);
            tmp$ret$5 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp1_shl) << shiftBits);
            var tmp4_or = tmp$ret$5;
            var tmp$ret$6;
            // Inline function 'kotlin.UInt.shr' call
            var tmp2_shr = UIntArray__get_impl_gp5kza(operand, (tmp_7 - shiftWords | 0) - 1 | 0);
            var tmp3_shr = BigInteger32Arithmetic_getInstance().oo_1 - shiftBits | 0;
            tmp$ret$6 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp2_shr) >>> tmp3_shr | 0);
            var tmp5_or = tmp$ret$6;
            tmp$ret$7 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp4_or) | _UInt___get_data__impl__f0vqqw(tmp5_or));
            tmp_8 = tmp$ret$7;
          } else {
            if (tmp0_subject_0 === ((originalSize + wordsNeeded | 0) - 1 | 0)) {
              var tmp$ret$8;
              // Inline function 'kotlin.UInt.shr' call
              var tmp6_shr = UIntArray__get_impl_gp5kza(operand, tmp_7 - wordsNeeded | 0);
              var tmp7_shr = BigInteger32Arithmetic_getInstance().oo_1 - shiftBits | 0;
              tmp$ret$8 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp6_shr) >>> tmp7_shr | 0);
              tmp_8 = tmp$ret$8;
            } else {
              throw RuntimeException_init_$Create$('Invalid case ' + tmp_7);
            }
          }
        }
      }
      tmp$ret$9 = tmp_8;
      var tmp0_toInt_0 = tmp$ret$9;
      tmp$ret$10 = _UInt___get_data__impl__f0vqqw(tmp0_toInt_0);
      tmp$ret$11 = tmp$ret$10;
      tmp_6[tmp_7] = tmp$ret$11;
      tmp_4 = tmp_4 + 1 | 0;
    }
    tmp$ret$12 = _UIntArray___init__impl__ghjpc6_0(tmp_6);
    return tmp$ret$12;
  };
  BigInteger32Arithmetic.prototype.ep = function (operand, places) {
    if (UIntArray__isEmpty_impl_vd8j4n(operand) ? true : places === 0) {
      return operand;
    }
    var shiftBits = places % this.oo_1 | 0;
    var wordsToDiscard = places / this.oo_1 | 0;
    if (wordsToDiscard >= _UIntArray___get_size__impl__r6l8ci(operand)) {
      return this.qo_1;
    }
    if (shiftBits === 0) {
      var tmp$ret$0;
      // Inline function 'kotlin.collections.copyOfRange' call
      var tmp0_copyOfRange = _UIntArray___get_size__impl__r6l8ci(operand);
      tmp$ret$0 = _UIntArray___init__impl__ghjpc6_0(copyOfRange(_UIntArray___get_storage__impl__92a0v0(operand), wordsToDiscard, tmp0_copyOfRange));
      return tmp$ret$0;
    }
    if (_UIntArray___get_size__impl__r6l8ci(operand) > 1 ? (_UIntArray___get_size__impl__r6l8ci(operand) - wordsToDiscard | 0) === 1 : false) {
      var tmp$ret$2;
      // Inline function 'kotlin.uintArrayOf' call
      var tmp$ret$1;
      // Inline function 'kotlin.UInt.shr' call
      var tmp1_shr = UIntArray__get_impl_gp5kza(operand, _UIntArray___get_size__impl__r6l8ci(operand) - 1 | 0);
      tmp$ret$1 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp1_shr) >>> shiftBits | 0);
      var tmp2_uintArrayOf = _UIntArray___init__impl__ghjpc6_0(new Int32Array([tmp$ret$1]));
      tmp$ret$2 = tmp2_uintArrayOf;
      return tmp$ret$2;
    }
    var tmp$ret$10;
    // Inline function 'kotlin.UIntArray' call
    var tmp3_UIntArray = _UIntArray___get_size__impl__r6l8ci(operand) - wordsToDiscard | 0;
    var tmp = 0;
    var tmp_0 = tmp3_UIntArray;
    var tmp_1 = new Int32Array(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$9;
      // Inline function 'kotlin.UIntArray.<anonymous>' call
      var tmp$ret$8;
      // Inline function 'kotlin.UInt.toInt' call
      var tmp$ret$7;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.shiftRight.<anonymous>' call
      var tmp0_subject = tmp_2;
      var tmp_3;
      if (0 <= tmp0_subject ? tmp0_subject < ((_UIntArray___get_size__impl__r6l8ci(operand) - 1 | 0) - wordsToDiscard | 0) : false) {
        var tmp$ret$5;
        // Inline function 'kotlin.UInt.or' call
        var tmp$ret$3;
        // Inline function 'kotlin.UInt.shr' call
        var tmp0_shr = UIntArray__get_impl_gp5kza(operand, tmp_2 + wordsToDiscard | 0);
        tmp$ret$3 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp0_shr) >>> shiftBits | 0);
        var tmp3_or = tmp$ret$3;
        var tmp$ret$4;
        // Inline function 'kotlin.UInt.shl' call
        var tmp1_shl = UIntArray__get_impl_gp5kza(operand, (tmp_2 + wordsToDiscard | 0) + 1 | 0);
        var tmp2_shl = BigInteger32Arithmetic_getInstance().oo_1 - shiftBits | 0;
        tmp$ret$4 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp1_shl) << tmp2_shl);
        var tmp4_or = tmp$ret$4;
        tmp$ret$5 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp3_or) | _UInt___get_data__impl__f0vqqw(tmp4_or));
        tmp_3 = tmp$ret$5;
      } else if (tmp0_subject === ((_UIntArray___get_size__impl__r6l8ci(operand) - 1 | 0) - wordsToDiscard | 0)) {
        var tmp$ret$6;
        // Inline function 'kotlin.UInt.shr' call
        var tmp5_shr = UIntArray__get_impl_gp5kza(operand, tmp_2 + wordsToDiscard | 0);
        tmp$ret$6 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp5_shr) >>> shiftBits | 0);
        tmp_3 = tmp$ret$6;
      } else {
        throw RuntimeException_init_$Create$('Invalid case ' + tmp_2);
      }
      tmp$ret$7 = tmp_3;
      var tmp0_toInt = tmp$ret$7;
      tmp$ret$8 = _UInt___get_data__impl__f0vqqw(tmp0_toInt);
      tmp$ret$9 = tmp$ret$8;
      tmp_1[tmp_2] = tmp$ret$9;
      tmp = tmp + 1 | 0;
    }
    tmp$ret$10 = _UIntArray___init__impl__ghjpc6_0(tmp_1);
    var result = tmp$ret$10;
    return this.bp(result);
  };
  BigInteger32Arithmetic.prototype.fp = function (dividend, divisor) {
    var divisorSize = _UIntArray___get_size__impl__r6l8ci(divisor);
    var normalizationShift = this.yo(UIntArray__get_impl_gp5kza(divisor, divisorSize - 1 | 0));
    var divisorNormalized = this.gp(divisor, normalizationShift);
    var dividendNormalized = this.gp(dividend, normalizationShift);
    return new Triple(new UIntArray(dividendNormalized), new UIntArray(divisorNormalized), normalizationShift);
  };
  BigInteger32Arithmetic.prototype.hp = function (remainderNormalized, normalizationShift) {
    var remainder = this.ip(remainderNormalized, normalizationShift);
    return remainder;
  };
  BigInteger32Arithmetic.prototype.jp = function (first, second) {
    var firstStart = _UIntArray___get_size__impl__r6l8ci(first) - this.cp(first) | 0;
    var secondStart = _UIntArray___get_size__impl__r6l8ci(second) - this.cp(second) | 0;
    if (firstStart > secondStart) {
      return 1;
    }
    if (secondStart > firstStart) {
      return -1;
    }
    var counter = firstStart - 1 | 0;
    var firstIsLarger = false;
    var bothAreEqual = true;
    $l$loop_0: while (counter >= 0) {
      var tmp$ret$0;
      // Inline function 'kotlin.UInt.compareTo' call
      var tmp0_compareTo = UIntArray__get_impl_gp5kza(first, counter);
      var tmp1_compareTo = UIntArray__get_impl_gp5kza(second, counter);
      tmp$ret$0 = uintCompare(_UInt___get_data__impl__f0vqqw(tmp0_compareTo), _UInt___get_data__impl__f0vqqw(tmp1_compareTo));
      if (tmp$ret$0 > 0) {
        firstIsLarger = true;
        bothAreEqual = false;
        break $l$loop_0;
      }
      var tmp$ret$1;
      // Inline function 'kotlin.UInt.compareTo' call
      var tmp2_compareTo = UIntArray__get_impl_gp5kza(first, counter);
      var tmp3_compareTo = UIntArray__get_impl_gp5kza(second, counter);
      tmp$ret$1 = uintCompare(_UInt___get_data__impl__f0vqqw(tmp2_compareTo), _UInt___get_data__impl__f0vqqw(tmp3_compareTo));
      if (tmp$ret$1 < 0) {
        firstIsLarger = false;
        bothAreEqual = false;
        break $l$loop_0;
      }
      var tmp0 = counter;
      counter = tmp0 - 1 | 0;
    }
    if (bothAreEqual) {
      return 0;
    }
    if (firstIsLarger) {
      return 1;
    } else {
      return -1;
    }
  };
  BigInteger32Arithmetic.prototype.kp = function (first, second) {
    if (_UIntArray___get_size__impl__r6l8ci(first) === 1 ? UIntArray__get_impl_gp5kza(first, 0) === _UInt___init__impl__l7qpdl(0) : false)
      return second;
    if (_UIntArray___get_size__impl__r6l8ci(second) === 1 ? UIntArray__get_impl_gp5kza(second, 0) === _UInt___init__impl__l7qpdl(0) : false)
      return first;
    var tmp;
    if (_UIntArray___get_size__impl__r6l8ci(first) > _UIntArray___get_size__impl__r6l8ci(second)) {
      tmp = new Quadruple(_UIntArray___get_size__impl__r6l8ci(first), _UIntArray___get_size__impl__r6l8ci(second), new UIntArray(first), new UIntArray(second));
    } else {
      tmp = new Quadruple(_UIntArray___get_size__impl__r6l8ci(second), _UIntArray___get_size__impl__r6l8ci(first), new UIntArray(second), new UIntArray(first));
    }
    var tmp0_container = tmp;
    var maxLength = tmp0_container.a4();
    var minLength = tmp0_container.b4();
    var largerData = tmp0_container.g7().y7_1;
    var smallerData = tmp0_container.zn().y7_1;
    var tmp$ret$3;
    // Inline function 'kotlin.UIntArray' call
    var tmp0_UIntArray = maxLength + 1 | 0;
    var tmp_0 = 0;
    var tmp_1 = tmp0_UIntArray;
    var tmp_2 = new Int32Array(tmp_1);
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$2;
      // Inline function 'kotlin.UIntArray.<anonymous>' call
      var tmp$ret$1;
      // Inline function 'kotlin.UInt.toInt' call
      var tmp$ret$0;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.add.<anonymous>' call
      tmp$ret$0 = _UInt___init__impl__l7qpdl(0);
      var tmp0_toInt = tmp$ret$0;
      tmp$ret$1 = _UInt___get_data__impl__f0vqqw(tmp0_toInt);
      tmp$ret$2 = tmp$ret$1;
      tmp_2[tmp_3] = tmp$ret$2;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp$ret$3 = _UIntArray___init__impl__ghjpc6_0(tmp_2);
    var result = tmp$ret$3;
    var i = 0;
    var sum = _ULong___init__impl__c78o9k(new Long(0, 0));
    while (i < minLength) {
      var tmp$ret$9;
      // Inline function 'kotlin.ULong.plus' call
      var tmp$ret$6;
      // Inline function 'kotlin.ULong.plus' call
      var tmp1_plus = sum;
      var tmp2_plus = UIntArray__get_impl_gp5kza(largerData, i);
      var tmp$ret$5;
      // Inline function 'kotlin.ULong.plus' call
      var tmp$ret$4;
      // Inline function 'kotlin.UInt.toULong' call
      tmp$ret$4 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp2_plus)).m7(new Long(-1, 0)));
      var tmp0_plus = tmp$ret$4;
      tmp$ret$5 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_plus).e6(_ULong___get_data__impl__fggpzb(tmp0_plus)));
      tmp$ret$6 = tmp$ret$5;
      var tmp3_plus = tmp$ret$6;
      var tmp4_plus = UIntArray__get_impl_gp5kza(smallerData, i);
      var tmp$ret$8;
      // Inline function 'kotlin.ULong.plus' call
      var tmp$ret$7;
      // Inline function 'kotlin.UInt.toULong' call
      tmp$ret$7 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp4_plus)).m7(new Long(-1, 0)));
      var tmp0_plus_0 = tmp$ret$7;
      tmp$ret$8 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp3_plus).e6(_ULong___get_data__impl__fggpzb(tmp0_plus_0)));
      tmp$ret$9 = tmp$ret$8;
      sum = tmp$ret$9;
      var tmp_4 = i;
      var tmp$ret$12;
      // Inline function 'kotlin.ULong.toUInt' call
      var tmp$ret$10;
      // Inline function 'kotlin.ULong.and' call
      var tmp5_and = sum;
      var tmp6_and = this.jo_1;
      tmp$ret$10 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp5_and).m7(_ULong___get_data__impl__fggpzb(tmp6_and)));
      var tmp7_toUInt = tmp$ret$10;
      var tmp$ret$11;
      // Inline function 'kotlin.toUInt' call
      var tmp0_toUInt = _ULong___get_data__impl__fggpzb(tmp7_toUInt);
      tmp$ret$11 = _UInt___init__impl__l7qpdl(tmp0_toUInt.u7());
      tmp$ret$12 = tmp$ret$11;
      UIntArray__set_impl_7f2zu2(result, tmp_4, tmp$ret$12);
      var tmp$ret$13;
      // Inline function 'kotlin.ULong.shr' call
      var tmp8_shr = sum;
      var tmp9_shr = this.oo_1;
      tmp$ret$13 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp8_shr).f8(tmp9_shr));
      sum = tmp$ret$13;
      var tmp1 = i;
      i = tmp1 + 1 | 0;
    }
    while (true) {
      if (equals(sum, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
        while (i < maxLength) {
          UIntArray__set_impl_7f2zu2(result, i, UIntArray__get_impl_gp5kza(largerData, i));
          var tmp2 = i;
          i = tmp2 + 1 | 0;
        }
        var tmp_5;
        if (UIntArray__get_impl_gp5kza(result, _UIntArray___get_size__impl__r6l8ci(result) - 1 | 0) === _UInt___init__impl__l7qpdl(0)) {
          var tmp$ret$14;
          // Inline function 'kotlin.collections.copyOfRange' call
          var tmp10_copyOfRange = _UIntArray___get_size__impl__r6l8ci(result) - 1 | 0;
          tmp$ret$14 = _UIntArray___init__impl__ghjpc6_0(copyOfRange(_UIntArray___get_storage__impl__92a0v0(result), 0, tmp10_copyOfRange));
          tmp_5 = tmp$ret$14;
        } else {
          tmp_5 = result;
        }
        return tmp_5;
      }
      if (i === maxLength) {
        var tmp$ret$16;
        // Inline function 'kotlin.ULong.toUInt' call
        var tmp11_toUInt = sum;
        var tmp$ret$15;
        // Inline function 'kotlin.toUInt' call
        var tmp0_toUInt_0 = _ULong___get_data__impl__fggpzb(tmp11_toUInt);
        tmp$ret$15 = _UInt___init__impl__l7qpdl(tmp0_toUInt_0.u7());
        tmp$ret$16 = tmp$ret$15;
        UIntArray__set_impl_7f2zu2(result, maxLength, tmp$ret$16);
        return result;
      }
      var tmp$ret$19;
      // Inline function 'kotlin.ULong.plus' call
      var tmp12_plus = sum;
      var tmp13_plus = UIntArray__get_impl_gp5kza(largerData, i);
      var tmp$ret$18;
      // Inline function 'kotlin.ULong.plus' call
      var tmp$ret$17;
      // Inline function 'kotlin.UInt.toULong' call
      tmp$ret$17 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp13_plus)).m7(new Long(-1, 0)));
      var tmp0_plus_1 = tmp$ret$17;
      tmp$ret$18 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp12_plus).e6(_ULong___get_data__impl__fggpzb(tmp0_plus_1)));
      tmp$ret$19 = tmp$ret$18;
      sum = tmp$ret$19;
      var tmp_6 = i;
      var tmp$ret$22;
      // Inline function 'kotlin.ULong.toUInt' call
      var tmp$ret$20;
      // Inline function 'kotlin.ULong.and' call
      var tmp14_and = sum;
      var tmp15_and = this.jo_1;
      tmp$ret$20 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp14_and).m7(_ULong___get_data__impl__fggpzb(tmp15_and)));
      var tmp16_toUInt = tmp$ret$20;
      var tmp$ret$21;
      // Inline function 'kotlin.toUInt' call
      var tmp0_toUInt_1 = _ULong___get_data__impl__fggpzb(tmp16_toUInt);
      tmp$ret$21 = _UInt___init__impl__l7qpdl(tmp0_toUInt_1.u7());
      tmp$ret$22 = tmp$ret$21;
      UIntArray__set_impl_7f2zu2(result, tmp_6, tmp$ret$22);
      var tmp$ret$23;
      // Inline function 'kotlin.ULong.shr' call
      var tmp17_shr = sum;
      var tmp18_shr = this.oo_1;
      tmp$ret$23 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp17_shr).f8(tmp18_shr));
      sum = tmp$ret$23;
      var tmp3 = i;
      i = tmp3 + 1 | 0;
    }
  };
  BigInteger32Arithmetic.prototype.lp = function (first, second) {
    var firstWithoutLeadingZeroes = this.bp(first);
    var secondWithoutLeadingZeroes = this.bp(second);
    var firstIsLarger = this.jp(firstWithoutLeadingZeroes, secondWithoutLeadingZeroes) === 1;
    var tmp;
    if (firstIsLarger) {
      tmp = new Quadruple(_UIntArray___get_size__impl__r6l8ci(firstWithoutLeadingZeroes), _UIntArray___get_size__impl__r6l8ci(secondWithoutLeadingZeroes), new UIntArray(firstWithoutLeadingZeroes), new UIntArray(secondWithoutLeadingZeroes));
    } else {
      tmp = new Quadruple(_UIntArray___get_size__impl__r6l8ci(secondWithoutLeadingZeroes), _UIntArray___get_size__impl__r6l8ci(firstWithoutLeadingZeroes), new UIntArray(secondWithoutLeadingZeroes), new UIntArray(firstWithoutLeadingZeroes));
    }
    var tmp0_container = tmp;
    var largerLength = tmp0_container.a4();
    var smallerLength = tmp0_container.b4();
    var largerData = tmp0_container.g7().y7_1;
    var smallerData = tmp0_container.zn().y7_1;
    var tmp$ret$3;
    // Inline function 'kotlin.UIntArray' call
    var tmp0_UIntArray = largerLength + 1 | 0;
    var tmp_0 = 0;
    var tmp_1 = tmp0_UIntArray;
    var tmp_2 = new Int32Array(tmp_1);
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$2;
      // Inline function 'kotlin.UIntArray.<anonymous>' call
      var tmp$ret$1;
      // Inline function 'kotlin.UInt.toInt' call
      var tmp$ret$0;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.subtract.<anonymous>' call
      tmp$ret$0 = _UInt___init__impl__l7qpdl(0);
      var tmp0_toInt = tmp$ret$0;
      tmp$ret$1 = _UInt___get_data__impl__f0vqqw(tmp0_toInt);
      tmp$ret$2 = tmp$ret$1;
      tmp_2[tmp_3] = tmp$ret$2;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp$ret$3 = _UIntArray___init__impl__ghjpc6_0(tmp_2);
    var result = tmp$ret$3;
    var i = 0;
    var diff = _ULong___init__impl__c78o9k(new Long(0, 0));
    while (i < smallerLength) {
      if (i >= _UIntArray___get_size__impl__r6l8ci(largerData)) {
        println('Breakpoint');
      }
      if (i >= _UIntArray___get_size__impl__r6l8ci(smallerData)) {
        println('Breakpoint');
      }
      var tmp$ret$8;
      // Inline function 'kotlin.ULong.minus' call
      var tmp$ret$7;
      // Inline function 'kotlin.ULong.minus' call
      var tmp$ret$4;
      // Inline function 'kotlin.UInt.toULong' call
      var tmp1_toULong = UIntArray__get_impl_gp5kza(largerData, i);
      tmp$ret$4 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp1_toULong)).m7(new Long(-1, 0)));
      var tmp2_minus = tmp$ret$4;
      var tmp3_minus = UIntArray__get_impl_gp5kza(smallerData, i);
      var tmp$ret$6;
      // Inline function 'kotlin.ULong.minus' call
      var tmp$ret$5;
      // Inline function 'kotlin.UInt.toULong' call
      tmp$ret$5 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp3_minus)).m7(new Long(-1, 0)));
      var tmp0_minus = tmp$ret$5;
      tmp$ret$6 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp2_minus).f6(_ULong___get_data__impl__fggpzb(tmp0_minus)));
      tmp$ret$7 = tmp$ret$6;
      var tmp4_minus = tmp$ret$7;
      var tmp5_minus = diff;
      tmp$ret$8 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_minus).f6(_ULong___get_data__impl__fggpzb(tmp5_minus)));
      diff = tmp$ret$8;
      var tmp_4 = i;
      var tmp$ret$10;
      // Inline function 'kotlin.ULong.toUInt' call
      var tmp6_toUInt = diff;
      var tmp$ret$9;
      // Inline function 'kotlin.toUInt' call
      var tmp0_toUInt = _ULong___get_data__impl__fggpzb(tmp6_toUInt);
      tmp$ret$9 = _UInt___init__impl__l7qpdl(tmp0_toUInt.u7());
      tmp$ret$10 = tmp$ret$9;
      UIntArray__set_impl_7f2zu2(result, tmp_4, tmp$ret$10);
      var tmp$ret$12;
      // Inline function 'kotlin.ULong.shr' call
      var tmp$ret$11;
      // Inline function 'kotlin.ULong.and' call
      var tmp7_and = diff;
      var tmp8_and = this.lo_1;
      tmp$ret$11 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp7_and).m7(_ULong___get_data__impl__fggpzb(tmp8_and)));
      var tmp9_shr = tmp$ret$11;
      var tmp10_shr = this.po_1;
      tmp$ret$12 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp9_shr).f8(tmp10_shr));
      diff = tmp$ret$12;
      var tmp1 = i;
      i = tmp1 + 1 | 0;
    }
    while (!equals(diff, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      var tmp$ret$15;
      // Inline function 'kotlin.UInt.minus' call
      var tmp11_minus = UIntArray__get_impl_gp5kza(largerData, i);
      var tmp12_minus = diff;
      var tmp$ret$14;
      // Inline function 'kotlin.ULong.minus' call
      var tmp$ret$13;
      // Inline function 'kotlin.UInt.toULong' call
      tmp$ret$13 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp11_minus)).m7(new Long(-1, 0)));
      var tmp0_minus_0 = tmp$ret$13;
      tmp$ret$14 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_minus_0).f6(_ULong___get_data__impl__fggpzb(tmp12_minus)));
      tmp$ret$15 = tmp$ret$14;
      diff = tmp$ret$15;
      var tmp_5 = i;
      var tmp$ret$18;
      // Inline function 'kotlin.UInt.and' call
      var tmp$ret$17;
      // Inline function 'kotlin.ULong.toUInt' call
      var tmp13_toUInt = diff;
      var tmp$ret$16;
      // Inline function 'kotlin.toUInt' call
      var tmp0_toUInt_0 = _ULong___get_data__impl__fggpzb(tmp13_toUInt);
      tmp$ret$16 = _UInt___init__impl__l7qpdl(tmp0_toUInt_0.u7());
      tmp$ret$17 = tmp$ret$16;
      var tmp14_and = tmp$ret$17;
      var tmp15_and = this.ko_1;
      tmp$ret$18 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp14_and) & _UInt___get_data__impl__f0vqqw(tmp15_and));
      UIntArray__set_impl_7f2zu2(result, tmp_5, tmp$ret$18);
      var tmp$ret$20;
      // Inline function 'kotlin.ULong.shr' call
      var tmp$ret$19;
      // Inline function 'kotlin.ULong.and' call
      var tmp16_and = diff;
      var tmp17_and = this.lo_1;
      tmp$ret$19 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp16_and).m7(_ULong___get_data__impl__fggpzb(tmp17_and)));
      var tmp18_shr = tmp$ret$19;
      var tmp19_shr = this.po_1;
      tmp$ret$20 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp18_shr).f8(tmp19_shr));
      diff = tmp$ret$20;
      var tmp2 = i;
      i = tmp2 + 1 | 0;
    }
    while (i < largerLength) {
      UIntArray__set_impl_7f2zu2(result, i, UIntArray__get_impl_gp5kza(largerData, i));
      var tmp3 = i;
      i = tmp3 + 1 | 0;
    }
    var tmp$ret$23;
    // Inline function 'kotlin.collections.filter' call
    var tmp$ret$22;
    // Inline function 'kotlin.collections.filterTo' call
    var tmp0_filterTo = ArrayList_init_$Create$();
    var tmp0_iterator = UIntArray__iterator_impl_tkdv7k(result);
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h().u1_1;
      var tmp$ret$21;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.subtract.<anonymous>' call
      tmp$ret$21 = element === _UInt___init__impl__l7qpdl(0);
      if (tmp$ret$21) {
        tmp0_filterTo.a(new UInt(element));
      }
    }
    tmp$ret$22 = tmp0_filterTo;
    tmp$ret$23 = tmp$ret$22;
    if (tmp$ret$23.p()) {
      return this.qo_1;
    }
    var tmp$ret$28;
    // Inline function 'kotlin.collections.indexOfLast' call
    var tmp$ret$27;
    $l$block: {
      // Inline function 'kotlin.collections.indexOfLast' call
      var tmp0_indexOfLast = _UIntArray___get_storage__impl__92a0v0(result);
      var inductionVariable = tmp0_indexOfLast.length - 1 | 0;
      if (0 <= inductionVariable)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + -1 | 0;
          var tmp$ret$26;
          // Inline function 'kotlin.collections.indexOfLast.<anonymous>' call
          var tmp1__anonymous__uwfjfc = tmp0_indexOfLast[index];
          var tmp$ret$25;
          // Inline function 'com.ionspin.kotlin.bignum.integer.base32.BigInteger32Arithmetic.subtract.<anonymous>' call
          var tmp$ret$24;
          // Inline function 'kotlin.toUInt' call
          tmp$ret$24 = _UInt___init__impl__l7qpdl(tmp1__anonymous__uwfjfc);
          var tmp20__anonymous__q2j3lv = tmp$ret$24;
          tmp$ret$25 = !(tmp20__anonymous__q2j3lv === _UInt___init__impl__l7qpdl(0));
          tmp$ret$26 = tmp$ret$25;
          if (tmp$ret$26) {
            tmp$ret$27 = index;
            break $l$block;
          }
        }
         while (0 <= inductionVariable);
      tmp$ret$27 = -1;
    }
    tmp$ret$28 = tmp$ret$27;
    var firstEmpty = tmp$ret$28 + 1 | 0;
    var tmp$ret$29;
    // Inline function 'kotlin.collections.copyOfRange' call
    tmp$ret$29 = _UIntArray___init__impl__ghjpc6_0(copyOfRange(_UIntArray___get_storage__impl__92a0v0(result), 0, firstEmpty));
    return tmp$ret$29;
  };
  BigInteger32Arithmetic.prototype.mp = function (first, second) {
    var result = _UIntArray___init__impl__ghjpc6(_UIntArray___get_size__impl__r6l8ci(first) + 1 | 0);
    var product;
    var sum;
    var inductionVariable = 0;
    var last = _UIntArray___get_size__impl__r6l8ci(first);
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$3;
        // Inline function 'kotlin.ULong.times' call
        var tmp$ret$0;
        // Inline function 'kotlin.UInt.toULong' call
        var tmp0_toULong = UIntArray__get_impl_gp5kza(first, i);
        tmp$ret$0 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp0_toULong)).m7(new Long(-1, 0)));
        var tmp1_times = tmp$ret$0;
        var tmp$ret$2;
        // Inline function 'kotlin.ULong.times' call
        var tmp$ret$1;
        // Inline function 'kotlin.UInt.toULong' call
        tmp$ret$1 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(second)).m7(new Long(-1, 0)));
        var tmp0_times = tmp$ret$1;
        tmp$ret$2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_times).d6(_ULong___get_data__impl__fggpzb(tmp0_times)));
        tmp$ret$3 = tmp$ret$2;
        product = tmp$ret$3;
        var tmp$ret$10;
        // Inline function 'kotlin.ULong.plus' call
        var tmp$ret$4;
        // Inline function 'kotlin.UInt.toULong' call
        var tmp2_toULong = UIntArray__get_impl_gp5kza(result, i);
        tmp$ret$4 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp2_toULong)).m7(new Long(-1, 0)));
        var tmp6_plus = tmp$ret$4;
        var tmp$ret$7;
        // Inline function 'kotlin.ULong.toUInt' call
        var tmp$ret$5;
        // Inline function 'kotlin.ULong.and' call
        var tmp3_and = product;
        var tmp4_and = this.jo_1;
        tmp$ret$5 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp3_and).m7(_ULong___get_data__impl__fggpzb(tmp4_and)));
        var tmp5_toUInt = tmp$ret$5;
        var tmp$ret$6;
        // Inline function 'kotlin.toUInt' call
        var tmp0_toUInt = _ULong___get_data__impl__fggpzb(tmp5_toUInt);
        tmp$ret$6 = _UInt___init__impl__l7qpdl(tmp0_toUInt.u7());
        tmp$ret$7 = tmp$ret$6;
        var tmp7_plus = tmp$ret$7;
        var tmp$ret$9;
        // Inline function 'kotlin.ULong.plus' call
        var tmp$ret$8;
        // Inline function 'kotlin.UInt.toULong' call
        tmp$ret$8 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp7_plus)).m7(new Long(-1, 0)));
        var tmp0_plus = tmp$ret$8;
        tmp$ret$9 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp6_plus).e6(_ULong___get_data__impl__fggpzb(tmp0_plus)));
        tmp$ret$10 = tmp$ret$9;
        sum = tmp$ret$10;
        var tmp$ret$13;
        // Inline function 'kotlin.ULong.toUInt' call
        var tmp$ret$11;
        // Inline function 'kotlin.ULong.and' call
        var tmp8_and = sum;
        var tmp9_and = this.jo_1;
        tmp$ret$11 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp8_and).m7(_ULong___get_data__impl__fggpzb(tmp9_and)));
        var tmp10_toUInt = tmp$ret$11;
        var tmp$ret$12;
        // Inline function 'kotlin.toUInt' call
        var tmp0_toUInt_0 = _ULong___get_data__impl__fggpzb(tmp10_toUInt);
        tmp$ret$12 = _UInt___init__impl__l7qpdl(tmp0_toUInt_0.u7());
        tmp$ret$13 = tmp$ret$12;
        UIntArray__set_impl_7f2zu2(result, i, tmp$ret$13);
        var tmp$ret$14;
        // Inline function 'kotlin.ULong.shr' call
        var tmp11_shr = sum;
        var tmp12_shr = this.oo_1;
        tmp$ret$14 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp11_shr).f8(tmp12_shr));
        sum = tmp$ret$14;
        var tmp = i + 1 | 0;
        var tmp$ret$20;
        // Inline function 'kotlin.UInt.plus' call
        var tmp$ret$17;
        // Inline function 'kotlin.ULong.toUInt' call
        var tmp$ret$15;
        // Inline function 'kotlin.ULong.shr' call
        var tmp13_shr = product;
        var tmp14_shr = this.oo_1;
        tmp$ret$15 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp13_shr).f8(tmp14_shr));
        var tmp15_toUInt = tmp$ret$15;
        var tmp$ret$16;
        // Inline function 'kotlin.toUInt' call
        var tmp0_toUInt_1 = _ULong___get_data__impl__fggpzb(tmp15_toUInt);
        tmp$ret$16 = _UInt___init__impl__l7qpdl(tmp0_toUInt_1.u7());
        tmp$ret$17 = tmp$ret$16;
        var tmp17_plus = tmp$ret$17;
        var tmp$ret$19;
        // Inline function 'kotlin.ULong.toUInt' call
        var tmp16_toUInt = sum;
        var tmp$ret$18;
        // Inline function 'kotlin.toUInt' call
        var tmp0_toUInt_2 = _ULong___get_data__impl__fggpzb(tmp16_toUInt);
        tmp$ret$18 = _UInt___init__impl__l7qpdl(tmp0_toUInt_2.u7());
        tmp$ret$19 = tmp$ret$18;
        var tmp18_plus = tmp$ret$19;
        tmp$ret$20 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp17_plus) + _UInt___get_data__impl__f0vqqw(tmp18_plus) | 0);
        UIntArray__set_impl_7f2zu2(result, tmp, tmp$ret$20);
      }
       while (inductionVariable < last);
    return this.bp(result);
  };
  BigInteger32Arithmetic.prototype.np = function (first, second) {
    return this.op(first, second);
  };
  BigInteger32Arithmetic.prototype.op = function (unnormalizedDividend, unnormalizedDivisor) {
    if (this.pp(unnormalizedDivisor, unnormalizedDividend) > 0) {
      return new Pair(new UIntArray(this.qo_1), new UIntArray(unnormalizedDividend));
    }
    if (_UIntArray___get_size__impl__r6l8ci(unnormalizedDivisor) === 1 ? _UIntArray___get_size__impl__r6l8ci(unnormalizedDividend) === 1 : false) {
      var tmp$ret$1;
      // Inline function 'kotlin.uintArrayOf' call
      var tmp$ret$0;
      // Inline function 'kotlin.UInt.div' call
      var tmp0_div = UIntArray__get_impl_gp5kza(unnormalizedDividend, 0);
      var tmp1_div = UIntArray__get_impl_gp5kza(unnormalizedDivisor, 0);
      tmp$ret$0 = uintDivide(tmp0_div, tmp1_div);
      var tmp2_uintArrayOf = _UIntArray___init__impl__ghjpc6_0(new Int32Array([tmp$ret$0]));
      tmp$ret$1 = tmp2_uintArrayOf;
      var tmp = new UIntArray(this.bp(tmp$ret$1));
      var tmp$ret$3;
      // Inline function 'kotlin.uintArrayOf' call
      var tmp$ret$2;
      // Inline function 'kotlin.UInt.rem' call
      var tmp3_rem = UIntArray__get_impl_gp5kza(unnormalizedDividend, 0);
      var tmp4_rem = UIntArray__get_impl_gp5kza(unnormalizedDivisor, 0);
      tmp$ret$2 = uintRemainder(tmp3_rem, tmp4_rem);
      var tmp5_uintArrayOf = _UIntArray___init__impl__ghjpc6_0(new Int32Array([tmp$ret$2]));
      tmp$ret$3 = tmp5_uintArrayOf;
      return new Pair(tmp, new UIntArray(this.bp(tmp$ret$3)));
    }
    var bitPrecision = this.zo(unnormalizedDividend) - this.zo(unnormalizedDivisor) | 0;
    if (bitPrecision === 0) {
      var tmp$ret$4;
      // Inline function 'kotlin.uintArrayOf' call
      tmp$ret$4 = _UIntArray___init__impl__ghjpc6_0(new Int32Array([_UInt___init__impl__l7qpdl(1)]));
      return new Pair(new UIntArray(tmp$ret$4), new UIntArray(this.qp(unnormalizedDividend, unnormalizedDivisor)));
    }
    var tmp0_container = this.fp(unnormalizedDividend, unnormalizedDivisor);
    var dividend = tmp0_container.a4().y7_1;
    var divisor = tmp0_container.b4().y7_1;
    var normalizationShift = tmp0_container.g7();
    var dividendSize = _UIntArray___get_size__impl__r6l8ci(dividend);
    var divisorSize = _UIntArray___get_size__impl__r6l8ci(divisor);
    var wordPrecision = dividendSize - divisorSize | 0;
    var qjhat;
    var reconstructedQuotient;
    var quotient = _UIntArray___init__impl__ghjpc6(wordPrecision);
    var divisorTimesBaseToPowerOfM = this.gp(divisor, imul(wordPrecision, this.oo_1));
    if (this.pp(dividend, divisorTimesBaseToPowerOfM) >= 0) {
      quotient = _UIntArray___init__impl__ghjpc6(wordPrecision + 1 | 0);
      UIntArray__set_impl_7f2zu2(quotient, wordPrecision, _UInt___init__impl__l7qpdl(1));
      dividend = this.qp(dividend, divisorTimesBaseToPowerOfM);
    }
    var inductionVariable = wordPrecision - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var j = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var tmp_0;
        if ((divisorSize + j | 0) < _UIntArray___get_size__impl__r6l8ci(dividend)) {
          var tmp$ret$12;
          // Inline function 'kotlin.ULong.div' call
          var tmp$ret$9;
          // Inline function 'kotlin.ULong.plus' call
          var tmp$ret$6;
          // Inline function 'kotlin.ULong.shl' call
          var tmp$ret$5;
          // Inline function 'kotlin.UInt.toULong' call
          var tmp6_toULong = UIntArray__get_impl_gp5kza(dividend, divisorSize + j | 0);
          tmp$ret$5 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp6_toULong)).m7(new Long(-1, 0)));
          var tmp7_shl = tmp$ret$5;
          var tmp8_shl = this.oo_1;
          tmp$ret$6 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp7_shl).e8(tmp8_shl));
          var tmp9_plus = tmp$ret$6;
          var tmp10_plus = UIntArray__get_impl_gp5kza(dividend, (divisorSize + j | 0) - 1 | 0);
          var tmp$ret$8;
          // Inline function 'kotlin.ULong.plus' call
          var tmp$ret$7;
          // Inline function 'kotlin.UInt.toULong' call
          tmp$ret$7 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp10_plus)).m7(new Long(-1, 0)));
          var tmp0_plus = tmp$ret$7;
          tmp$ret$8 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp9_plus).e6(_ULong___get_data__impl__fggpzb(tmp0_plus)));
          tmp$ret$9 = tmp$ret$8;
          var tmp11_div = tmp$ret$9;
          var tmp12_div = UIntArray__get_impl_gp5kza(divisor, divisorSize - 1 | 0);
          var tmp$ret$11;
          // Inline function 'kotlin.ULong.div' call
          var tmp$ret$10;
          // Inline function 'kotlin.UInt.toULong' call
          tmp$ret$10 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp12_div)).m7(new Long(-1, 0)));
          var tmp0_div_0 = tmp$ret$10;
          tmp$ret$11 = ulongDivide(tmp11_div, tmp0_div_0);
          tmp$ret$12 = tmp$ret$11;
          tmp_0 = tmp$ret$12;
        } else {
          var tmp_1;
          if ((divisorSize + j | 0) === _UIntArray___get_size__impl__r6l8ci(dividend)) {
            var tmp$ret$14;
            // Inline function 'kotlin.UInt.toULong' call
            var tmp$ret$13;
            // Inline function 'kotlin.UInt.div' call
            var tmp13_div = UIntArray__get_impl_gp5kza(dividend, (divisorSize + j | 0) - 1 | 0);
            var tmp14_div = UIntArray__get_impl_gp5kza(divisor, divisorSize - 1 | 0);
            tmp$ret$13 = uintDivide(tmp13_div, tmp14_div);
            var tmp15_toULong = tmp$ret$13;
            tmp$ret$14 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp15_toULong)).m7(new Long(-1, 0)));
            tmp_1 = tmp$ret$14;
          } else {
            tmp_1 = _ULong___init__impl__c78o9k(new Long(0, 0));
          }
          tmp_0 = tmp_1;
        }
        qjhat = tmp_0;
        var tmp_2 = quotient;
        var tmp_3;
        var tmp$ret$18;
        // Inline function 'kotlin.ULong.compareTo' call
        var tmp17_compareTo = qjhat;
        var tmp$ret$17;
        // Inline function 'kotlin.UInt.minus' call
        var tmp16_minus = this.no_1;
        var tmp$ret$16;
        // Inline function 'kotlin.ULong.minus' call
        var tmp$ret$15;
        // Inline function 'kotlin.UInt.toULong' call
        tmp$ret$15 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp16_minus)).m7(new Long(-1, 0)));
        var tmp0_minus = tmp$ret$15;
        tmp$ret$16 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_minus).f6(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(1, 0)))));
        tmp$ret$17 = tmp$ret$16;
        var tmp18_compareTo = tmp$ret$17;
        tmp$ret$18 = ulongCompare(_ULong___get_data__impl__fggpzb(tmp17_compareTo), _ULong___get_data__impl__fggpzb(tmp18_compareTo));
        if (tmp$ret$18 < 0) {
          var tmp$ret$20;
          // Inline function 'kotlin.ULong.toUInt' call
          var tmp19_toUInt = qjhat;
          var tmp$ret$19;
          // Inline function 'kotlin.toUInt' call
          var tmp0_toUInt = _ULong___get_data__impl__fggpzb(tmp19_toUInt);
          tmp$ret$19 = _UInt___init__impl__l7qpdl(tmp0_toUInt.u7());
          tmp$ret$20 = tmp$ret$19;
          tmp_3 = tmp$ret$20;
        } else {
          var tmp$ret$21;
          // Inline function 'kotlin.UInt.minus' call
          var tmp20_minus = this.no_1;
          tmp$ret$21 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp20_minus) - _UInt___get_data__impl__f0vqqw(_UInt___init__impl__l7qpdl(1)) | 0);
          tmp_3 = tmp$ret$21;
        }
        UIntArray__set_impl_7f2zu2(tmp_2, j, tmp_3);
        reconstructedQuotient = this.gp(this.rp(divisor, UIntArray__get_impl_gp5kza(quotient, j)), imul(j, this.oo_1));
        while (this.pp(reconstructedQuotient, dividend) > 0) {
          var tmp_4 = quotient;
          var tmp$ret$22;
          // Inline function 'kotlin.UInt.minus' call
          var tmp21_minus = UIntArray__get_impl_gp5kza(quotient, j);
          tmp$ret$22 = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(tmp21_minus) - _UInt___get_data__impl__f0vqqw(_UInt___init__impl__l7qpdl(1)) | 0);
          UIntArray__set_impl_7f2zu2(tmp_4, j, tmp$ret$22);
          reconstructedQuotient = this.gp(this.rp(divisor, UIntArray__get_impl_gp5kza(quotient, j)), imul(j, this.oo_1));
        }
        dividend = this.qp(dividend, reconstructedQuotient);
      }
       while (0 <= inductionVariable);
    while (this.pp(dividend, divisor) >= 0) {
      quotient = this.sp(quotient, _UInt___init__impl__l7qpdl(1));
      dividend = this.qp(dividend, divisor);
    }
    var denormRemainder = this.hp(dividend, normalizationShift);
    return new Pair(new UIntArray(this.bp(quotient)), new UIntArray(denormRemainder));
  };
  BigInteger32Arithmetic.prototype.gp = function (_this__u8e3s4, places) {
    return this.dp(_this__u8e3s4, places);
  };
  BigInteger32Arithmetic.prototype.ip = function (_this__u8e3s4, places) {
    return this.ep(_this__u8e3s4, places);
  };
  BigInteger32Arithmetic.prototype.qp = function (_this__u8e3s4, other) {
    return this.lp(_this__u8e3s4, other);
  };
  BigInteger32Arithmetic.prototype.sp = function (_this__u8e3s4, other) {
    var tmp$ret$0;
    // Inline function 'kotlin.uintArrayOf' call
    tmp$ret$0 = _UIntArray___init__impl__ghjpc6_0(new Int32Array([other]));
    return this.kp(_this__u8e3s4, tmp$ret$0);
  };
  BigInteger32Arithmetic.prototype.rp = function (_this__u8e3s4, other) {
    return this.mp(_this__u8e3s4, other);
  };
  BigInteger32Arithmetic.prototype.pp = function (_this__u8e3s4, other) {
    return this.jp(_this__u8e3s4, other);
  };
  BigInteger32Arithmetic.$metadata$ = objectMeta('BigInteger32Arithmetic', [BigInteger32ArithmeticInterface]);
  var BigInteger32Arithmetic_instance;
  function BigInteger32Arithmetic_getInstance() {
    if (BigInteger32Arithmetic_instance == null)
      new BigInteger32Arithmetic();
    return BigInteger32Arithmetic_instance;
  }
  function multiplyWithCorrectedSize($this, first, second, firstCorrectedSize, secondCorrectedSize) {
    if (isZero(first, $this) ? true : isZero(second, $this)) {
      return $this.jm_1;
    }
    if ((firstCorrectedSize >= 120 ? true : secondCorrectedSize >= 120) ? firstCorrectedSize <= 15000 ? true : secondCorrectedSize < 15000 : false) {
      return karatsubaMultiplyWithCorrectedSizes($this, first, second, firstCorrectedSize, secondCorrectedSize);
    }
    if (firstCorrectedSize >= 15000 ? secondCorrectedSize >= 15000 : false) {
      return $this.tp(first, second);
    }
    return basecaseMultiplyWithCorrectedSize($this, first, second, firstCorrectedSize, secondCorrectedSize);
  }
  function basecaseMultiplyWithCorrectedSize($this, first, second, firstCorrectedSizeStart, secondCorrectedSizeStart) {
    var resultArray = $this.jm_1;
    // Inline function 'kotlin.collections.forEachIndexed' call
    var index = 0;
    var tmp0_iterator = ULongArray__iterator_impl_cq4d2h(second);
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h().t1_1;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.basecaseMultiplyWithCorrectedSize.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      var tmp0__anonymous__q1qw7t = tmp1;
      if (tmp0__anonymous__q1qw7t > secondCorrectedSizeStart) {
      } else {
        resultArray = BigInteger63Arithmetic_getInstance().wp(resultArray, BigInteger63Arithmetic_getInstance().vp(BigInteger63Arithmetic_getInstance().up(first, item), imul(tmp0__anonymous__q1qw7t, BigInteger63Arithmetic_getInstance().om_1)));
      }
    }
    return resultArray;
  }
  function karatsubaMultiplyWithCorrectedSizes($this, firstUnsigned, secondUnsigned, firstCorrectedSize, secondCorrectedSize) {
    var first = new SignedULongArray(firstUnsigned, true);
    var second = new SignedULongArray(secondUnsigned, true);
    var tmp$ret$0;
    // Inline function 'kotlin.math.max' call
    tmp$ret$0 = Math.max(firstCorrectedSize, secondCorrectedSize);
    var halfLength = (tmp$ret$0 + 1 | 0) / 2 | 0;
    var mask = $this.xp($this.vp($this.km_1, imul(halfLength, $this.pm_1)), _ULong___init__impl__c78o9k(new Long(1, 0)));
    var firstLower = $this.yp(first, mask);
    var firstHigher = $this.zp(first, imul(halfLength, $this.pm_1));
    var secondLower = $this.yp(second, mask);
    var secondHigher = $this.zp(second, imul(halfLength, $this.pm_1));
    var higherProduct = $this.aq(firstHigher, secondHigher);
    var lowerProduct = $this.aq(firstLower, secondLower);
    var middleProduct = $this.aq($this.bq(firstHigher, firstLower), $this.bq(secondHigher, secondLower));
    var result = $this.bq($this.bq($this.cq(higherProduct, imul(imul(2, $this.pm_1), halfLength)), $this.cq($this.dq($this.dq(middleProduct, higherProduct), lowerProduct), imul($this.pm_1, halfLength))), lowerProduct);
    return result.eq_1;
  }
  function isZero(_this__u8e3s4, $this) {
    if (equals(_this__u8e3s4, $this.jm_1))
      return true;
    if (_ULongArray___get_size__impl__ju6dtr(_this__u8e3s4) === 1 ? equals(ULongArray__get_impl_pr71q9(_this__u8e3s4, 0), _ULong___init__impl__c78o9k(new Long(0, 0))) : false)
      return true;
    if ((_ULongArray___get_size__impl__ju6dtr(_this__u8e3s4) - $this.gq(_this__u8e3s4) | 0) === 0)
      return true;
    return false;
  }
  function SignedULongArray(unsignedValue, sign) {
    this.eq_1 = unsignedValue;
    this.fq_1 = sign;
  }
  SignedULongArray.prototype.hq = function (unsignedValue, sign) {
    return new SignedULongArray(unsignedValue, sign);
  };
  SignedULongArray.prototype.iq = function (unsignedValue, sign, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      unsignedValue = this.eq_1;
    if (!(($mask0 & 2) === 0))
      sign = this.fq_1;
    return this.hq(unsignedValue, sign);
  };
  SignedULongArray.prototype.toString = function () {
    return 'SignedULongArray(unsignedValue=' + new ULongArray(this.eq_1) + ', sign=' + this.fq_1 + ')';
  };
  SignedULongArray.prototype.hashCode = function () {
    var result = ULongArray__hashCode_impl_aze4wa(this.eq_1);
    result = imul(result, 31) + (this.fq_1 | 0) | 0;
    return result;
  };
  SignedULongArray.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SignedULongArray))
      return false;
    var tmp0_other_with_cast = other instanceof SignedULongArray ? other : THROW_CCE();
    if (!equals(this.eq_1, tmp0_other_with_cast.eq_1))
      return false;
    if (!(this.fq_1 === tmp0_other_with_cast.fq_1))
      return false;
    return true;
  };
  SignedULongArray.$metadata$ = classMeta('SignedULongArray');
  function signedAdd($this, first, second) {
    var tmp;
    if (!!(first.fq_1 ^ second.fq_1)) {
      var tmp_0;
      if ($this.kq(first.eq_1, second.eq_1) > 0) {
        tmp_0 = new SignedULongArray($this.jq(first.eq_1, second.eq_1), first.fq_1);
      } else {
        tmp_0 = new SignedULongArray($this.jq(second.eq_1, first.eq_1), second.fq_1);
      }
      tmp = tmp_0;
    } else {
      tmp = new SignedULongArray($this.wp(first.eq_1, second.eq_1), first.fq_1);
    }
    return tmp;
  }
  function signedSubtract($this, first, second) {
    return signedAdd($this, first, second.iq(null, !second.fq_1, 1, null));
  }
  function signedMultiply($this, first, second) {
    return new SignedULongArray($this.lq(first.eq_1, second.eq_1), !!!(first.fq_1 ^ second.fq_1));
  }
  function signedDivide($this, first, second) {
    return new SignedULongArray($this.mq(first.eq_1, second.eq_1), !!!(first.fq_1 ^ second.fq_1));
  }
  function BigInteger63Arithmetic() {
    BigInteger63Arithmetic_instance = this;
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.longArrayOf' call
    tmp$ret$0 = longArrayOf([]);
    tmp.im_1 = tmp$ret$0;
    var tmp_0 = this;
    var tmp$ret$1;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$1 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0))]));
    tmp_0.jm_1 = tmp$ret$1;
    var tmp_1 = this;
    var tmp$ret$2;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$2 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1, 0))]));
    tmp_1.km_1 = tmp$ret$2;
    var tmp_2 = this;
    var tmp$ret$3;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$3 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(2, 0))]));
    tmp_2.lm_1 = tmp$ret$3;
    var tmp_3 = this;
    var tmp$ret$4;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$4 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(10, 0))]));
    tmp_3.mm_1 = tmp$ret$4;
    var tmp_4 = this;
    var tmp$ret$5;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$5 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-1431655765, 715827882))]));
    tmp_4.nm_1 = tmp$ret$5;
    this.om_1 = 63;
    this.pm_1 = 63;
    this.qm_1 = _ULong___init__impl__c78o9k(new Long(-1, 2147483647));
    var tmp_5 = this;
    var tmp$ret$6;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$6 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-1, 2147483647))]));
    tmp_5.rm_1 = tmp$ret$6;
    this.sm_1 = _ULong___init__impl__c78o9k(new Long(-1, 0));
    this.tm_1 = _ULong___init__impl__c78o9k(new Long(0, 2147483647));
    this.um_1 = _ULong___init__impl__c78o9k(new Long(0, -2147483648));
    this.vm_1 = 120;
    this.wm_1 = 15000;
    this.xm_1 = true;
    this.ym_1 = new SignedULongArray(BigInteger63Arithmetic_getInstance().lm_1, true);
    var tmp_6 = this;
    var tmp$ret$110;
    // Inline function 'kotlin.arrayOf' call
    var tmp$ret$7;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$7 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1, 0))]));
    var tmp_7 = new ULongArray(tmp$ret$7);
    var tmp$ret$8;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$8 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(10, 0))]));
    var tmp_8 = new ULongArray(tmp$ret$8);
    var tmp$ret$9;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$9 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(100, 0))]));
    var tmp_9 = new ULongArray(tmp$ret$9);
    var tmp$ret$10;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$10 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1000, 0))]));
    var tmp_10 = new ULongArray(tmp$ret$10);
    var tmp$ret$11;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$11 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(10000, 0))]));
    var tmp_11 = new ULongArray(tmp$ret$11);
    var tmp$ret$12;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$12 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(100000, 0))]));
    var tmp_12 = new ULongArray(tmp$ret$12);
    var tmp$ret$13;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$13 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1000000, 0))]));
    var tmp_13 = new ULongArray(tmp$ret$13);
    var tmp$ret$14;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$14 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(10000000, 0))]));
    var tmp_14 = new ULongArray(tmp$ret$14);
    var tmp$ret$15;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$15 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(100000000, 0))]));
    var tmp_15 = new ULongArray(tmp$ret$15);
    var tmp$ret$16;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$16 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1000000000, 0))]));
    var tmp_16 = new ULongArray(tmp$ret$16);
    var tmp$ret$17;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$17 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1410065408, 2))]));
    var tmp_17 = new ULongArray(tmp$ret$17);
    var tmp$ret$18;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$18 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1215752192, 23))]));
    var tmp_18 = new ULongArray(tmp$ret$18);
    var tmp$ret$19;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$19 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-727379968, 232))]));
    var tmp_19 = new ULongArray(tmp$ret$19);
    var tmp$ret$20;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$20 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1316134912, 2328))]));
    var tmp_20 = new ULongArray(tmp$ret$20);
    var tmp$ret$21;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$21 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(276447232, 23283))]));
    var tmp_21 = new ULongArray(tmp$ret$21);
    var tmp$ret$22;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$22 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-1530494976, 232830))]));
    var tmp_22 = new ULongArray(tmp$ret$22);
    var tmp$ret$23;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$23 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1874919424, 2328306))]));
    var tmp_23 = new ULongArray(tmp$ret$23);
    var tmp$ret$24;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$24 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1569325056, 23283064))]));
    var tmp_24 = new ULongArray(tmp$ret$24);
    var tmp$ret$25;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$25 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-1486618624, 232830643))]));
    var tmp_25 = new ULongArray(tmp$ret$25);
    var tmp$ret$26;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$26 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-1981284352, 180822788)), _ULong___init__impl__c78o9k(new Long(1, 0))]));
    var tmp_26 = new ULongArray(tmp$ret$26);
    var tmp$ret$27;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$27 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1661992960, 1808227885)), _ULong___init__impl__c78o9k(new Long(10, 0))]));
    var tmp_27 = new ULongArray(tmp$ret$27);
    var tmp$ret$28;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$28 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-559939584, 902409669)), _ULong___init__impl__c78o9k(new Long(108, 0))]));
    var tmp_28 = new ULongArray(tmp$ret$28);
    var tmp$ret$29;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$29 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-1304428544, 434162106)), _ULong___init__impl__c78o9k(new Long(1084, 0))]));
    var tmp_29 = new ULongArray(tmp$ret$29);
    var tmp$ret$30;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$30 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-159383552, 46653770)), _ULong___init__impl__c78o9k(new Long(10842, 0))]));
    var tmp_30 = new ULongArray(tmp$ret$30);
    var tmp$ret$31;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$31 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-1593835520, 466537709)), _ULong___init__impl__c78o9k(new Long(108420, 0))]));
    var tmp_31 = new ULongArray(tmp$ret$31);
    var tmp$ret$32;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$32 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1241513984, 370409800)), _ULong___init__impl__c78o9k(new Long(1084202, 0))]));
    var tmp_32 = new ULongArray(tmp$ret$32);
    var tmp$ret$33;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$33 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-469762048, 1556614354)), _ULong___init__impl__c78o9k(new Long(10842021, 0))]));
    var tmp_33 = new ULongArray(tmp$ret$33);
    var tmp$ret$34;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$34 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-402653184, 533758012)), _ULong___init__impl__c78o9k(new Long(108420217, 0))]));
    var tmp_34 = new ULongArray(tmp$ret$34);
    var tmp$ret$35;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$35 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(268435456, 1042612833)), _ULong___init__impl__c78o9k(new Long(1084202172, 0))]));
    var tmp_35 = new ULongArray(tmp$ret$35);
    var tmp$ret$36;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$36 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-1610612736, 1836193738)), _ULong___init__impl__c78o9k(new Long(-2042880164, 2))]));
    var tmp_36 = new ULongArray(tmp$ret$36);
    var tmp$ret$37;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$37 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(1073741824, 1182068202)), _ULong___init__impl__c78o9k(new Long(1046034848, 25))]));
    var tmp_37 = new ULongArray(tmp$ret$37);
    var tmp$ret$38;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$38 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(-2147483648, 1083263782)), _ULong___init__impl__c78o9k(new Long(1870413893, 252))]));
    var tmp_38 = new ULongArray(tmp$ret$38);
    var tmp$ret$39;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$39 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 95219585)), _ULong___init__impl__c78o9k(new Long(1524269751, 2524))]));
    var tmp_39 = new ULongArray(tmp$ret$39);
    var tmp$ret$40;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$40 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 952195850)), _ULong___init__impl__c78o9k(new Long(-1937171674, 25243))]));
    var tmp_40 = new ULongArray(tmp$ret$40);
    var tmp$ret$41;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$41 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 932023908)), _ULong___init__impl__c78o9k(new Long(2103119744, 252435))]));
    var tmp_41 = new ULongArray(tmp$ret$41);
    var tmp$ret$42;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$42 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 730304488)), _ULong___init__impl__c78o9k(new Long(-443639036, 2524354))]));
    var tmp_42 = new ULongArray(tmp$ret$42);
    var tmp$ret$43;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$43 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 860593936)), _ULong___init__impl__c78o9k(new Long(-141423061, 25243548))]));
    var tmp_43 = new ULongArray(tmp$ret$43);
    var tmp$ret$44;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$44 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 16004768)), _ULong___init__impl__c78o9k(new Long(-1414230606, 252435489))]));
    var tmp_44 = new ULongArray(tmp$ret$44);
    var tmp$ret$45;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$45 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 160047680)), _ULong___init__impl__c78o9k(new Long(-1257404172, 376871248)), _ULong___init__impl__c78o9k(new Long(1, 0))]));
    var tmp_45 = new ULongArray(tmp$ret$45);
    var tmp$ret$46;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$46 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1600476800)), _ULong___init__impl__c78o9k(new Long(310860168, 1621228839)), _ULong___init__impl__c78o9k(new Long(11, 0))]));
    var tmp_46 = new ULongArray(tmp$ret$46);
    var tmp$ret$47;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$47 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 972382464)), _ULong___init__impl__c78o9k(new Long(-1186365609, 1179902854)), _ULong___init__impl__c78o9k(new Long(117, 0))]));
    var tmp_47 = new ULongArray(tmp$ret$47);
    var tmp$ret$48;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$48 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1133890048)), _ULong___init__impl__c78o9k(new Long(1021245802, 1061610307)), _ULong___init__impl__c78o9k(new Long(1175, 0))]));
    var tmp_48 = new ULongArray(tmp$ret$48);
    var tmp$ret$49;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$49 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 601482240)), _ULong___init__impl__c78o9k(new Long(1622523433, 2026168480)), _ULong___init__impl__c78o9k(new Long(11754, 0))]));
    var tmp_49 = new ULongArray(tmp$ret$49);
    var tmp$ret$50;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$50 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1719855104)), _ULong___init__impl__c78o9k(new Long(-954634852, 934331971)), _ULong___init__impl__c78o9k(new Long(117549, 0))]));
    var tmp_50 = new ULongArray(tmp$ret$50);
    var tmp$ret$51;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$51 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 18681856)), _ULong___init__impl__c78o9k(new Long(-956413920, 753385125)), _ULong___init__impl__c78o9k(new Long(1175494, 0))]));
    var tmp_51 = new ULongArray(tmp$ret$51);
    var tmp$ret$52;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$52 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 186818560)), _ULong___init__impl__c78o9k(new Long(-974204608, 1091400313)), _ULong___init__impl__c78o9k(new Long(11754943, 0))]));
    var tmp_52 = new ULongArray(tmp$ret$52);
    var tmp$ret$53;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$53 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1868185600)), _ULong___init__impl__c78o9k(new Long(-1152111488, 176584897)), _ULong___init__impl__c78o9k(new Long(117549435, 0))]));
    var tmp_53 = new ULongArray(tmp$ret$53);
    var tmp$ret$54;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$54 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1501986816)), _ULong___init__impl__c78o9k(new Long(1363787016, 1765848977)), _ULong___init__impl__c78o9k(new Long(1175494350, 0))]));
    var tmp_54 = new ULongArray(tmp$ret$54);
    var tmp$ret$55;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$55 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 2134966272)), _ULong___init__impl__c78o9k(new Long(752968278, 478620589)), _ULong___init__impl__c78o9k(new Long(-1129958380, 2))]));
    var tmp_55 = new ULongArray(tmp$ret$55);
    var tmp$ret$56;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$56 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 2022309888)), _ULong___init__impl__c78o9k(new Long(-1060251803, 491238595)), _ULong___init__impl__c78o9k(new Long(1585318090, 27))]));
    var tmp_56 = new ULongArray(tmp$ret$56);
    var tmp$ret$57;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$57 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 895746048)), _ULong___init__impl__c78o9k(new Long(-2012583429, 617418661)), _ULong___init__impl__c78o9k(new Long(-1326688282, 273))]));
    var tmp_57 = new ULongArray(tmp$ret$57);
    var tmp$ret$58;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$58 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 367525888)), _ULong___init__impl__c78o9k(new Long(1349002194, 1879219319)), _ULong___init__impl__c78o9k(new Long(-381980930, 2736))]));
    var tmp_58 = new ULongArray(tmp$ret$58);
    var tmp$ret$59;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$59 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1527775232)), _ULong___init__impl__c78o9k(new Long(605120053, 1612324009)), _ULong___init__impl__c78o9k(new Long(475158004, 27369))]));
    var tmp_59 = new ULongArray(tmp$ret$59);
    var tmp$ret$60;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$60 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 245366784)), _ULong___init__impl__c78o9k(new Long(1756233241, 1090854555)), _ULong___init__impl__c78o9k(new Long(456612751, 273691))]));
    var tmp_60 = new ULongArray(tmp$ret$60);
    var tmp$ret$61;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$61 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 306184192)), _ULong___init__impl__c78o9k(new Long(382463227, 171127314)), _ULong___init__impl__c78o9k(new Long(271160219, 2736911))]));
    var tmp_61 = new ULongArray(tmp$ret$61);
    var tmp$ret$62;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$62 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 914358272)), _ULong___init__impl__c78o9k(new Long(-470335025, 1711273140)), _ULong___init__impl__c78o9k(new Long(-1583365106, 27369110))]));
    var tmp_62 = new ULongArray(tmp$ret$62);
    var tmp$ret$63;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$63 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 553648128)), _ULong___init__impl__c78o9k(new Long(-408382950, 2080345872)), _ULong___init__impl__c78o9k(new Long(1346218131, 273691106))]));
    var tmp_63 = new ULongArray(tmp$ret$63);
    var tmp$ret$64;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$64 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1241513984)), _ULong___init__impl__c78o9k(new Long(211137798, 1476105897)), _ULong___init__impl__c78o9k(new Long(577279431, 589427415)), _ULong___init__impl__c78o9k(new Long(1, 0))]));
    var tmp_64 = new ULongArray(tmp$ret$64);
    var tmp$ret$65;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$65 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1677721600)), _ULong___init__impl__c78o9k(new Long(2111377985, 1876157082)), _ULong___init__impl__c78o9k(new Long(1477827020, 1599306855)), _ULong___init__impl__c78o9k(new Long(12, 0))]));
    var tmp_65 = new ULongArray(tmp$ret$65);
    var tmp$ret$66;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$66 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1744830464)), _ULong___init__impl__c78o9k(new Long(-361056623, 1581701640)), _ULong___init__impl__c78o9k(new Long(1893368320, 960683017)), _ULong___init__impl__c78o9k(new Long(127, 0))]));
    var tmp_66 = new ULongArray(tmp$ret$66);
    var tmp$ret$67;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$67 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 268435456)), _ULong___init__impl__c78o9k(new Long(684401074, 784630873)), _ULong___init__impl__c78o9k(new Long(1753814023, 1016895582)), _ULong___init__impl__c78o9k(new Long(1274, 0))]));
    var tmp_67 = new ULongArray(tmp$ret$67);
    var tmp$ret$68;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$68 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 536870912)), _ULong___init__impl__c78o9k(new Long(-1745923851, 1403857787)), _ULong___init__impl__c78o9k(new Long(358271049, 1579021232)), _ULong___init__impl__c78o9k(new Long(12744, 0))]));
    var tmp_68 = new ULongArray(tmp$ret$68);
    var tmp$ret$69;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$69 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 1073741824)), _ULong___init__impl__c78o9k(new Long(-279369324, 1153675987)), _ULong___init__impl__c78o9k(new Long(-712256800, 757826784)), _ULong___init__impl__c78o9k(new Long(127447, 0))]));
    var tmp_69 = new ULongArray(tmp$ret$69);
    var tmp$ret$70;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$70 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1501274061, 799341639)), _ULong___init__impl__c78o9k(new Long(1467366597, 1135816904)), _ULong___init__impl__c78o9k(new Long(1274473, 0))]));
    var tmp_70 = new ULongArray(tmp$ret$70);
    var tmp$ret$71;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$71 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(2127838722, 1550965449)), _ULong___init__impl__c78o9k(new Long(1788764085, 620750803)), _ULong___init__impl__c78o9k(new Long(12744735, 0))]));
    var tmp_71 = new ULongArray(tmp$ret$71);
    var tmp$ret$72;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$72 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-196449260, 477268958)), _ULong___init__impl__c78o9k(new Long(707771673, 1912540738)), _ULong___init__impl__c78o9k(new Long(127447352, 0))]));
    var tmp_72 = new ULongArray(tmp$ret$72);
    var tmp$ret$73;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$73 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-1964492600, 477722293)), _ULong___init__impl__c78o9k(new Long(-1512217860, 1945538197)), _ULong___init__impl__c78o9k(new Long(1274473528, 0))]));
    var tmp_73 = new ULongArray(tmp$ret$73);
    var tmp$ret$74;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$74 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1829910480, 482255639)), _ULong___init__impl__c78o9k(new Long(2057690586, 128029144)), _ULong___init__impl__c78o9k(new Long(-140166599, 2))]));
    var tmp_74 = new ULongArray(tmp$ret$74);
    var tmp$ret$75;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$75 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1119235616, 527589098)), _ULong___init__impl__c78o9k(new Long(-897930618, 1280291444)), _ULong___init__impl__c78o9k(new Long(-1401665990, 29))]));
    var tmp_75 = new ULongArray(tmp$ret$75);
    var tmp$ret$76;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$76 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-1692545728, 980923686)), _ULong___init__impl__c78o9k(new Long(-389371586, 2065496207)), _ULong___init__impl__c78o9k(new Long(-1131758007, 296))]));
    var tmp_76 = new ULongArray(tmp$ret$76);
    var tmp$ret$77;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$77 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(254411904, 1219302274)), _ULong___init__impl__c78o9k(new Long(401251440, 1327609247)), _ULong___init__impl__c78o9k(new Long(1567321827, 2967))]));
    var tmp_77 = new ULongArray(tmp$ret$77);
    var tmp$ret$78;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$78 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-1750848256, 1455604500)), _ULong___init__impl__c78o9k(new Long(-282452891, 391190582)), _ULong___init__impl__c78o9k(new Long(-1506650908, 29673))]));
    var tmp_78 = new ULongArray(tmp$ret$78);
    var tmp$ret$79;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$79 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-328613376, 1671143117)), _ULong___init__impl__c78o9k(new Long(1470438392, 1764422181)), _ULong___init__impl__c78o9k(new Long(2113360105, 296736))]));
    var tmp_79 = new ULongArray(tmp$ret$79);
    var tmp$ret$80;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$80 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1008833536, 1679045643)), _ULong___init__impl__c78o9k(new Long(1819482039, 464352629)), _ULong___init__impl__c78o9k(new Long(-341235422, 2967364))]));
    var tmp_80 = new ULongArray(tmp$ret$80);
    var tmp$ret$81;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$81 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1498400768, 1758070896)), _ULong___init__impl__c78o9k(new Long(1014951213, 348558998)), _ULong___init__impl__c78o9k(new Long(882613078, 29673649))]));
    var tmp_81 = new ULongArray(tmp$ret$81);
    var tmp$ret$82;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$82 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(2099105792, 400839779)), _ULong___init__impl__c78o9k(new Long(1559577546, 1338106334)), _ULong___init__impl__c78o9k(new Long(236196189, 296736492))]));
    var tmp_82 = new ULongArray(tmp$ret$82);
    var tmp$ret$83;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$83 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-483778560, 1860914146)), _ULong___init__impl__c78o9k(new Long(-1584093723, 496161455)), _ULong___init__impl__c78o9k(new Long(-1933005400, 819881272)), _ULong___init__impl__c78o9k(new Long(1, 0))]));
    var tmp_83 = new ULongArray(tmp$ret$83);
    var tmp$ret$84;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$84 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-542818304, 1429272284)), _ULong___init__impl__c78o9k(new Long(1338931962, 666647260)), _ULong___init__impl__c78o9k(new Long(2144782482, 1756361781)), _ULong___init__impl__c78o9k(new Long(13, 0))]));
    var tmp_84 = new ULongArray(tmp$ret$84);
    var tmp$ret$85;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$85 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-1133215744, 1407820960)), _ULong___init__impl__c78o9k(new Long(504417738, 224021659)), _ULong___init__impl__c78o9k(new Long(-27011657, 383748630)), _ULong___init__impl__c78o9k(new Long(138, 0))]));
    var tmp_85 = new ULongArray(tmp$ret$85);
    var tmp$ret$86;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$86 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1552744448, 1193307719)), _ULong___init__impl__c78o9k(new Long(749210090, 92732943)), _ULong___init__impl__c78o9k(new Long(-270116569, 1690002661)), _ULong___init__impl__c78o9k(new Long(1381, 0))]));
    var tmp_86 = new ULongArray(tmp$ret$86);
    var tmp$ret$87;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$87 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-1652424704, 1195658953)), _ULong___init__impl__c78o9k(new Long(-1097833687, 927329431)), _ULong___init__impl__c78o9k(new Long(1593801606, 1867641083)), _ULong___init__impl__c78o9k(new Long(13817, 0))]));
    var tmp_87 = new ULongArray(tmp$ret$87);
    var tmp$ret$88;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$88 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(655622144, 1219171296)), _ULong___init__impl__c78o9k(new Long(1906565023, 683359725)), _ULong___init__impl__c78o9k(new Long(-1241853120, 1496541649)), _ULong___init__impl__c78o9k(new Long(138178, 0))]));
    var tmp_88 = new ULongArray(tmp$ret$88);
    var tmp$ret$89;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$89 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-2033713152, 1454294721)), _ULong___init__impl__c78o9k(new Long(1885781051, 391146310)), _ULong___init__impl__c78o9k(new Long(466370691, 2080514609)), _ULong___init__impl__c78o9k(new Long(1381786, 0))]));
    var tmp_89 = new ULongArray(tmp$ret$89);
    var tmp$ret$90;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$90 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1137704960, 1658045327)), _ULong___init__impl__c78o9k(new Long(1677941332, 1763979456)), _ULong___init__impl__c78o9k(new Long(368739615, 1477793259)), _ULong___init__impl__c78o9k(new Long(13817869, 0))]));
    var tmp_90 = new ULongArray(tmp$ret$90);
    var tmp$ret$91;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$91 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-1507852288, 1548067736)), _ULong___init__impl__c78o9k(new Long(-400455857, 459925379)), _ULong___init__impl__c78o9k(new Long(-607571138, 1893030702)), _ULong___init__impl__c78o9k(new Long(138178696, 0))]));
    var tmp_91 = new ULongArray(tmp$ret$91);
    var tmp$ret$92;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$92 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(2101346304, 448291830)), _ULong___init__impl__c78o9k(new Long(290408733, 304286503)), _ULong___init__impl__c78o9k(new Long(-1780744082, 1750437844)), _ULong___init__impl__c78o9k(new Long(1381786968, 0))]));
    var tmp_92 = new ULongArray(tmp$ret$92);
    var tmp$ret$93;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$93 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-461373440, 187951008)), _ULong___init__impl__c78o9k(new Long(-1390879964, 895381382)), _ULong___init__impl__c78o9k(new Long(-627571635, 324509261)), _ULong___init__impl__c78o9k(new Long(932967800, 3))]));
    var tmp_93 = new ULongArray(tmp$ret$93);
    var tmp$ret$94;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$94 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-318767104, 1879510088)), _ULong___init__impl__c78o9k(new Long(-1023897752, 363879234)), _ULong___init__impl__c78o9k(new Long(-1980749050, 1097608970)), _ULong___init__impl__c78o9k(new Long(739743409, 32))]));
    var tmp_94 = new ULongArray(tmp$ret$94);
    var tmp$ret$95;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$95 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1107296256, 1615231705)), _ULong___init__impl__c78o9k(new Long(-1649042920, 1491308699)), _ULong___init__impl__c78o9k(new Long(1667345981, 238671465)), _ULong___init__impl__c78o9k(new Long(-1192500497, 321))]));
    var tmp_95 = new ULongArray(tmp$ret$95);
    var tmp$ret$96;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$96 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-1811939328, 1119931516)), _ULong___init__impl__c78o9k(new Long(689439991, 2028185108)), _ULong___init__impl__c78o9k(new Long(-506409368, 239231005)), _ULong___init__impl__c78o9k(new Long(959896919, 3217))]));
    var tmp_96 = new ULongArray(tmp$ret$96);
    var tmp$ret$97;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$97 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-939524096, 461896925)), _ULong___init__impl__c78o9k(new Long(-1695534677, 954498249)), _ULong___init__impl__c78o9k(new Long(-769126375, 244826410)), _ULong___init__impl__c78o9k(new Long(1009034599, 32172))]));
    var tmp_97 = new ULongArray(tmp$ret$97);
    var tmp$ret$98;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$98 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-805306368, 324001961)), _ULong___init__impl__c78o9k(new Long(224522416, 955047904)), _ULong___init__impl__c78o9k(new Long(898670846, 300780460)), _ULong___init__impl__c78o9k(new Long(1500411399, 321722))]));
    var tmp_98 = new ULongArray(tmp$ret$98);
    var tmp$ret$99;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$99 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(536870912, 1092535970)), _ULong___init__impl__c78o9k(new Long(-2049743135, 960544448)), _ULong___init__impl__c78o9k(new Long(396773872, 860320954)), _ULong___init__impl__c78o9k(new Long(2119212103, 3217223))]));
    var tmp_99 = new ULongArray(tmp$ret$99);
    var tmp$ret$100;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$100 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1073741824, 187941461)), _ULong___init__impl__c78o9k(new Long(977405135, 1015509893)), _ULong___init__impl__c78o9k(new Long(-327228572, 13274948)), _ULong___init__impl__c78o9k(new Long(-282715446, 32172234))]));
    var tmp_100 = new ULongArray(tmp$ret$100);
    var tmp$ret$101;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$101 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(-2147483648, 1879414612)), _ULong___init__impl__c78o9k(new Long(1184116758, 1565164340)), _ULong___init__impl__c78o9k(new Long(1022681580, 132749489)), _ULong___init__impl__c78o9k(new Long(1467812836, 321722349))]));
    var tmp_101 = new ULongArray(tmp$ret$101);
    var tmp$ret$102;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$102 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(0, 1614276941)), _ULong___init__impl__c78o9k(new Long(-1043734300, 619257866)), _ULong___init__impl__c78o9k(new Long(1636881215, 1327494892)), _ULong___init__impl__c78o9k(new Long(1793226472, 1069739845)), _ULong___init__impl__c78o9k(new Long(1, 0))]));
    var tmp_102 = new ULongArray(tmp$ret$102);
    var tmp$ret$103;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$103 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(0, 1110383874)), _ULong___init__impl__c78o9k(new Long(-1847408401, 1897611371)), _ULong___init__impl__c78o9k(new Long(-811057032, 390047035)), _ULong___init__impl__c78o9k(new Long(752395542, 2107463862)), _ULong___init__impl__c78o9k(new Long(14, 0))]));
    var tmp_103 = new ULongArray(tmp$ret$103);
    var tmp$ret$104;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$104 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(0, 366420500)), _ULong___init__impl__c78o9k(new Long(-1294214821, 1796244531)), _ULong___init__impl__c78o9k(new Long(479364280, 1752986710)), _ULong___init__impl__c78o9k(new Long(-1065979171, 1747285789)), _ULong___init__impl__c78o9k(new Long(149, 0))]));
    var tmp_104 = new ULongArray(tmp$ret$104);
    var tmp$ret$105;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$105 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(0, 1516721352)), _ULong___init__impl__c78o9k(new Long(-57246321, 782576132)), _ULong___init__impl__c78o9k(new Long(498675512, 349997917)), _ULong___init__impl__c78o9k(new Long(-2069857110, 292988713)), _ULong___init__impl__c78o9k(new Long(1498, 0))]));
    var tmp_105 = new ULongArray(tmp$ret$105);
    var tmp$ret$106;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$106 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(0, 134827984)), _ULong___init__impl__c78o9k(new Long(-572463203, 1383310385)), _ULong___init__impl__c78o9k(new Long(691787827, 1352495523)), _ULong___init__impl__c78o9k(new Long(776265381, 782403487)), _ULong___init__impl__c78o9k(new Long(14981, 0))]));
    var tmp_106 = new ULongArray(tmp$ret$106);
    var tmp$ret$107;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$107 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(0, 1348279840)), _ULong___init__impl__c78o9k(new Long(-1429664734, 948201970)), _ULong___init__impl__c78o9k(new Long(-1672056316, 640053343)), _ULong___init__impl__c78o9k(new Long(-827280776, 1381583927)), _ULong___init__impl__c78o9k(new Long(149813, 0))]));
    var tmp0_arrayOf = [tmp_7, tmp_8, tmp_9, tmp_10, tmp_11, tmp_12, tmp_13, tmp_14, tmp_15, tmp_16, tmp_17, tmp_18, tmp_19, tmp_20, tmp_21, tmp_22, tmp_23, tmp_24, tmp_25, tmp_26, tmp_27, tmp_28, tmp_29, tmp_30, tmp_31, tmp_32, tmp_33, tmp_34, tmp_35, tmp_36, tmp_37, tmp_38, tmp_39, tmp_40, tmp_41, tmp_42, tmp_43, tmp_44, tmp_45, tmp_46, tmp_47, tmp_48, tmp_49, tmp_50, tmp_51, tmp_52, tmp_53, tmp_54, tmp_55, tmp_56, tmp_57, tmp_58, tmp_59, tmp_60, tmp_61, tmp_62, tmp_63, tmp_64, tmp_65, tmp_66, tmp_67, tmp_68, tmp_69, tmp_70, tmp_71, tmp_72, tmp_73, tmp_74, tmp_75, tmp_76, tmp_77, tmp_78, tmp_79, tmp_80, tmp_81, tmp_82, tmp_83, tmp_84, tmp_85, tmp_86, tmp_87, tmp_88, tmp_89, tmp_90, tmp_91, tmp_92, tmp_93, tmp_94, tmp_95, tmp_96, tmp_97, tmp_98, tmp_99, tmp_100, tmp_101, tmp_102, tmp_103, tmp_104, tmp_105, tmp_106, new ULongArray(tmp$ret$107)];
    var tmp$ret$109;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$108;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$108 = tmp0_arrayOf;
    tmp$ret$109 = tmp$ret$108;
    tmp$ret$110 = tmp$ret$109;
    tmp_6.zm_1 = tmp$ret$110;
  }
  BigInteger63Arithmetic.prototype.tl = function () {
    return this.jm_1;
  };
  BigInteger63Arithmetic.prototype.ul = function () {
    return this.km_1;
  };
  BigInteger63Arithmetic.prototype.vl = function () {
    return this.lm_1;
  };
  BigInteger63Arithmetic.prototype.wl = function () {
    return this.mm_1;
  };
  BigInteger63Arithmetic.prototype.xo = function () {
    return this.om_1;
  };
  BigInteger63Arithmetic.prototype.nq = function () {
    return this.qm_1;
  };
  BigInteger63Arithmetic.prototype.oq = function (value) {
    var x = value;
    var y;
    var n = 63;
    var tmp$ret$0;
    // Inline function 'kotlin.ULong.shr' call
    var tmp0_shr = x;
    tmp$ret$0 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_shr).f8(32));
    y = tmp$ret$0;
    if (!equals(y, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      n = n - 32 | 0;
      x = y;
    }
    var tmp$ret$1;
    // Inline function 'kotlin.ULong.shr' call
    var tmp1_shr = x;
    tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_shr).f8(16));
    y = tmp$ret$1;
    if (!equals(y, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      n = n - 16 | 0;
      x = y;
    }
    var tmp$ret$2;
    // Inline function 'kotlin.ULong.shr' call
    var tmp2_shr = x;
    tmp$ret$2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp2_shr).f8(8));
    y = tmp$ret$2;
    if (!equals(y, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      n = n - 8 | 0;
      x = y;
    }
    var tmp$ret$3;
    // Inline function 'kotlin.ULong.shr' call
    var tmp3_shr = x;
    tmp$ret$3 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp3_shr).f8(4));
    y = tmp$ret$3;
    if (!equals(y, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      n = n - 4 | 0;
      x = y;
    }
    var tmp$ret$4;
    // Inline function 'kotlin.ULong.shr' call
    var tmp4_shr = x;
    tmp$ret$4 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_shr).f8(2));
    y = tmp$ret$4;
    if (!equals(y, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      n = n - 2 | 0;
      x = y;
    }
    var tmp$ret$5;
    // Inline function 'kotlin.ULong.shr' call
    var tmp5_shr = x;
    tmp$ret$5 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp5_shr).f8(1));
    y = tmp$ret$5;
    if (!equals(y, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      return n - 2 | 0;
    }
    var tmp = n;
    var tmp$ret$6;
    // Inline function 'kotlin.ULong.toInt' call
    var tmp6_toInt = x;
    tmp$ret$6 = _ULong___get_data__impl__fggpzb(tmp6_toInt).u7();
    return tmp - tmp$ret$6 | 0;
  };
  BigInteger63Arithmetic.prototype.qn = function (value) {
    if (isZero(value, this)) {
      return 0;
    }
    var start = (_ULongArray___get_size__impl__ju6dtr(value) - this.gq(value) | 0) - 1 | 0;
    var mostSignificant = ULongArray__get_impl_pr71q9(value, start);
    return this.pq(mostSignificant) + imul(start, 63) | 0;
  };
  BigInteger63Arithmetic.prototype.pq = function (value) {
    return 63 - this.oq(value) | 0;
  };
  BigInteger63Arithmetic.prototype.an = function (bigInteger) {
    var correctedSize = _ULongArray___get_size__impl__ju6dtr(bigInteger) - this.gq(bigInteger) | 0;
    if (correctedSize === 0) {
      return this.jm_1;
    }
    if (_ULongArray___get_size__impl__ju6dtr(bigInteger) === correctedSize) {
      return bigInteger;
    }
    if ((_ULongArray___get_size__impl__ju6dtr(bigInteger) - correctedSize | 0) > 1000) {
      println('RLZ original array : ' + _ULongArray___get_size__impl__ju6dtr(bigInteger) + ' contains: ' + ((_ULongArray___get_size__impl__ju6dtr(bigInteger) - correctedSize | 0) - 1 | 0) + ' zeros');
    }
    var tmp$ret$0;
    // Inline function 'kotlin.collections.copyOfRange' call
    tmp$ret$0 = _ULongArray___init__impl__twm1l3(copyOfRange_0(_ULongArray___get_storage__impl__28e64j(bigInteger), 0, correctedSize));
    return tmp$ret$0;
  };
  BigInteger63Arithmetic.prototype.gq = function (bigInteger) {
    var lastNonEmptyIndex = _ULongArray___get_size__impl__ju6dtr(bigInteger) - 1 | 0;
    if (lastNonEmptyIndex <= 0) {
      return 0;
    }
    var element = ULongArray__get_impl_pr71q9(bigInteger, lastNonEmptyIndex);
    while (equals(element, _ULong___init__impl__c78o9k(new Long(0, 0))) ? lastNonEmptyIndex > 0 : false) {
      lastNonEmptyIndex = lastNonEmptyIndex - 1 | 0;
      element = ULongArray__get_impl_pr71q9(bigInteger, lastNonEmptyIndex);
    }
    if (equals(ULongArray__get_impl_pr71q9(bigInteger, lastNonEmptyIndex), _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      lastNonEmptyIndex = lastNonEmptyIndex - 1 | 0;
    }
    return (_ULongArray___get_size__impl__ju6dtr(bigInteger) - lastNonEmptyIndex | 0) - 1 | 0;
  };
  BigInteger63Arithmetic.prototype.qq = function (operand, places) {
    if (isZero(operand, this)) {
      return operand;
    }
    if (places === 0) {
      return operand;
    }
    if (ULongArray__isEmpty_impl_c3yngu(operand)) {
      return this.jm_1;
    }
    var leadingZeroWords = this.gq(operand);
    if (_ULongArray___get_size__impl__ju6dtr(operand) === leadingZeroWords) {
      return this.jm_1;
    }
    var originalSize = _ULongArray___get_size__impl__ju6dtr(operand) - leadingZeroWords | 0;
    var leadingZeros = this.oq(ULongArray__get_impl_pr71q9(operand, originalSize - 1 | 0));
    var shiftWords = places / this.om_1 | 0;
    var shiftBits = places % this.om_1 | 0;
    var tmp;
    if (shiftBits > leadingZeros) {
      tmp = shiftWords + 1 | 0;
    } else {
      tmp = shiftWords;
    }
    var wordsNeeded = tmp;
    if (shiftBits === 0) {
      var tmp$ret$3;
      // Inline function 'kotlin.ULongArray' call
      var tmp0_ULongArray = originalSize + wordsNeeded | 0;
      var tmp_0 = 0;
      var tmp_1 = tmp0_ULongArray;
      var tmp_2 = longArray(tmp_1);
      while (tmp_0 < tmp_1) {
        var tmp_3 = tmp_0;
        var tmp$ret$2;
        // Inline function 'kotlin.ULongArray.<anonymous>' call
        var tmp$ret$1;
        // Inline function 'kotlin.ULong.toLong' call
        var tmp$ret$0;
        // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.shiftLeft.<anonymous>' call
        var tmp0_subject = tmp_3;
        tmp$ret$0 = (0 <= tmp0_subject ? tmp0_subject < shiftWords : false) ? _ULong___init__impl__c78o9k(new Long(0, 0)) : ULongArray__get_impl_pr71q9(operand, tmp_3 - shiftWords | 0);
        var tmp0_toLong = tmp$ret$0;
        tmp$ret$1 = _ULong___get_data__impl__fggpzb(tmp0_toLong);
        tmp$ret$2 = tmp$ret$1;
        tmp_2[tmp_3] = tmp$ret$2;
        tmp_0 = tmp_0 + 1 | 0;
      }
      tmp$ret$3 = _ULongArray___init__impl__twm1l3(tmp_2);
      return tmp$ret$3;
    }
    var tmp$ret$14;
    // Inline function 'kotlin.ULongArray' call
    var tmp1_ULongArray = originalSize + wordsNeeded | 0;
    var tmp_4 = 0;
    var tmp_5 = tmp1_ULongArray;
    var tmp_6 = longArray(tmp_5);
    while (tmp_4 < tmp_5) {
      var tmp_7 = tmp_4;
      var tmp$ret$13;
      // Inline function 'kotlin.ULongArray.<anonymous>' call
      var tmp$ret$12;
      // Inline function 'kotlin.ULong.toLong' call
      var tmp$ret$11;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.shiftLeft.<anonymous>' call
      var tmp0_subject_0 = tmp_7;
      var tmp_8;
      if (0 <= tmp0_subject_0 ? tmp0_subject_0 < shiftWords : false) {
        tmp_8 = _ULong___init__impl__c78o9k(new Long(0, 0));
      } else {
        if (tmp0_subject_0 === shiftWords) {
          var tmp$ret$5;
          // Inline function 'kotlin.ULong.and' call
          var tmp$ret$4;
          // Inline function 'kotlin.ULong.shl' call
          var tmp0_shl = ULongArray__get_impl_pr71q9(operand, tmp_7 - shiftWords | 0);
          tmp$ret$4 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_shl).e8(shiftBits));
          var tmp1_and = tmp$ret$4;
          var tmp2_and = BigInteger63Arithmetic_getInstance().qm_1;
          tmp$ret$5 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_and).m7(_ULong___get_data__impl__fggpzb(tmp2_and)));
          tmp_8 = tmp$ret$5;
        } else {
          var containsLower = shiftWords + 1 | 0;
          if (tmp0_subject_0 < (originalSize + shiftWords | 0) ? containsLower <= tmp0_subject_0 : false) {
            var tmp$ret$9;
            // Inline function 'kotlin.ULong.or' call
            var tmp$ret$7;
            // Inline function 'kotlin.ULong.and' call
            var tmp$ret$6;
            // Inline function 'kotlin.ULong.shl' call
            var tmp3_shl = ULongArray__get_impl_pr71q9(operand, tmp_7 - shiftWords | 0);
            tmp$ret$6 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp3_shl).e8(shiftBits));
            var tmp4_and = tmp$ret$6;
            var tmp5_and = BigInteger63Arithmetic_getInstance().qm_1;
            tmp$ret$7 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_and).m7(_ULong___get_data__impl__fggpzb(tmp5_and)));
            var tmp8_or = tmp$ret$7;
            var tmp$ret$8;
            // Inline function 'kotlin.ULong.shr' call
            var tmp6_shr = ULongArray__get_impl_pr71q9(operand, (tmp_7 - shiftWords | 0) - 1 | 0);
            var tmp7_shr = BigInteger63Arithmetic_getInstance().om_1 - shiftBits | 0;
            tmp$ret$8 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp6_shr).f8(tmp7_shr));
            var tmp9_or = tmp$ret$8;
            tmp$ret$9 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp8_or).g8(_ULong___get_data__impl__fggpzb(tmp9_or)));
            tmp_8 = tmp$ret$9;
          } else {
            if (tmp0_subject_0 === ((originalSize + wordsNeeded | 0) - 1 | 0)) {
              var tmp$ret$10;
              // Inline function 'kotlin.ULong.shr' call
              var tmp10_shr = ULongArray__get_impl_pr71q9(operand, tmp_7 - wordsNeeded | 0);
              var tmp11_shr = BigInteger63Arithmetic_getInstance().om_1 - shiftBits | 0;
              tmp$ret$10 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp10_shr).f8(tmp11_shr));
              tmp_8 = tmp$ret$10;
            } else {
              throw RuntimeException_init_$Create$('Invalid case ' + tmp_7);
            }
          }
        }
      }
      tmp$ret$11 = tmp_8;
      var tmp0_toLong_0 = tmp$ret$11;
      tmp$ret$12 = _ULong___get_data__impl__fggpzb(tmp0_toLong_0);
      tmp$ret$13 = tmp$ret$12;
      tmp_6[tmp_7] = tmp$ret$13;
      tmp_4 = tmp_4 + 1 | 0;
    }
    tmp$ret$14 = _ULongArray___init__impl__twm1l3(tmp_6);
    return tmp$ret$14;
  };
  BigInteger63Arithmetic.prototype.rq = function (operand, places) {
    if (ULongArray__isEmpty_impl_c3yngu(operand) ? true : places === 0) {
      return operand;
    }
    var leadingZeroWords = this.gq(operand);
    var realOperandSize = _ULongArray___get_size__impl__ju6dtr(operand) - leadingZeroWords | 0;
    var shiftBits = places % this.om_1 | 0;
    var wordsToDiscard = places / this.om_1 | 0;
    if (wordsToDiscard >= realOperandSize) {
      return this.jm_1;
    }
    if (shiftBits === 0) {
      var tmp$ret$0;
      // Inline function 'kotlin.collections.copyOfRange' call
      var tmp0_copyOfRange = realOperandSize - wordsToDiscard | 0;
      tmp$ret$0 = _ULongArray___init__impl__twm1l3(copyOfRange_0(_ULongArray___get_storage__impl__28e64j(operand), tmp0_copyOfRange, realOperandSize));
    }
    if (realOperandSize > 1 ? (realOperandSize - wordsToDiscard | 0) === 1 : false) {
      var tmp$ret$2;
      // Inline function 'kotlin.ulongArrayOf' call
      var tmp$ret$1;
      // Inline function 'kotlin.ULong.shr' call
      var tmp1_shr = ULongArray__get_impl_pr71q9(operand, realOperandSize - 1 | 0);
      tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_shr).f8(shiftBits));
      var tmp2_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$1]));
      tmp$ret$2 = tmp2_ulongArrayOf;
      return tmp$ret$2;
    }
    var newLength = realOperandSize - wordsToDiscard | 0;
    if (newLength === 0) {
      return this.jm_1;
    }
    var tmp$ret$11;
    // Inline function 'kotlin.ULongArray' call
    var tmp3_ULongArray = realOperandSize - wordsToDiscard | 0;
    var tmp = 0;
    var tmp_0 = tmp3_ULongArray;
    var tmp_1 = longArray(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$10;
      // Inline function 'kotlin.ULongArray.<anonymous>' call
      var tmp$ret$9;
      // Inline function 'kotlin.ULong.toLong' call
      var tmp$ret$8;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.shiftRight.<anonymous>' call
      var tmp0_subject = tmp_2;
      var tmp_3;
      if (0 <= tmp0_subject ? tmp0_subject < ((realOperandSize - 1 | 0) - wordsToDiscard | 0) : false) {
        var tmp$ret$6;
        // Inline function 'kotlin.ULong.or' call
        var tmp$ret$3;
        // Inline function 'kotlin.ULong.shr' call
        var tmp0_shr = ULongArray__get_impl_pr71q9(operand, tmp_2 + wordsToDiscard | 0);
        tmp$ret$3 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_shr).f8(shiftBits));
        var tmp5_or = tmp$ret$3;
        var tmp$ret$5;
        // Inline function 'kotlin.ULong.and' call
        var tmp$ret$4;
        // Inline function 'kotlin.ULong.shl' call
        var tmp1_shl = ULongArray__get_impl_pr71q9(operand, (tmp_2 + wordsToDiscard | 0) + 1 | 0);
        var tmp2_shl = BigInteger63Arithmetic_getInstance().om_1 - shiftBits | 0;
        tmp$ret$4 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_shl).e8(tmp2_shl));
        var tmp3_and = tmp$ret$4;
        var tmp4_and = BigInteger63Arithmetic_getInstance().qm_1;
        tmp$ret$5 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp3_and).m7(_ULong___get_data__impl__fggpzb(tmp4_and)));
        var tmp6_or = tmp$ret$5;
        tmp$ret$6 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp5_or).g8(_ULong___get_data__impl__fggpzb(tmp6_or)));
        tmp_3 = tmp$ret$6;
      } else if (tmp0_subject === ((realOperandSize - 1 | 0) - wordsToDiscard | 0)) {
        var tmp$ret$7;
        // Inline function 'kotlin.ULong.shr' call
        var tmp7_shr = ULongArray__get_impl_pr71q9(operand, tmp_2 + wordsToDiscard | 0);
        tmp$ret$7 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp7_shr).f8(shiftBits));
        tmp_3 = tmp$ret$7;
      } else {
        throw RuntimeException_init_$Create$('Invalid case ' + tmp_2);
      }
      tmp$ret$8 = tmp_3;
      var tmp0_toLong = tmp$ret$8;
      tmp$ret$9 = _ULong___get_data__impl__fggpzb(tmp0_toLong);
      tmp$ret$10 = tmp$ret$9;
      tmp_1[tmp_2] = tmp$ret$10;
      tmp = tmp + 1 | 0;
    }
    tmp$ret$11 = _ULongArray___init__impl__twm1l3(tmp_1);
    var result = tmp$ret$11;
    return result;
  };
  BigInteger63Arithmetic.prototype.sq = function (first, second, firstStart, secondStart) {
    if (firstStart > secondStart) {
      return 1;
    }
    if (secondStart > firstStart) {
      return -1;
    }
    var counter = firstStart - 1 | 0;
    var firstIsLarger = false;
    var bothAreEqual = true;
    $l$loop_0: while (counter >= 0) {
      var tmp$ret$0;
      // Inline function 'kotlin.ULong.compareTo' call
      var tmp0_compareTo = ULongArray__get_impl_pr71q9(first, counter);
      var tmp1_compareTo = ULongArray__get_impl_pr71q9(second, counter);
      tmp$ret$0 = ulongCompare(_ULong___get_data__impl__fggpzb(tmp0_compareTo), _ULong___get_data__impl__fggpzb(tmp1_compareTo));
      if (tmp$ret$0 > 0) {
        firstIsLarger = true;
        bothAreEqual = false;
        break $l$loop_0;
      }
      var tmp$ret$1;
      // Inline function 'kotlin.ULong.compareTo' call
      var tmp2_compareTo = ULongArray__get_impl_pr71q9(first, counter);
      var tmp3_compareTo = ULongArray__get_impl_pr71q9(second, counter);
      tmp$ret$1 = ulongCompare(_ULong___get_data__impl__fggpzb(tmp2_compareTo), _ULong___get_data__impl__fggpzb(tmp3_compareTo));
      if (tmp$ret$1 < 0) {
        firstIsLarger = false;
        bothAreEqual = false;
        break $l$loop_0;
      }
      var tmp0 = counter;
      counter = tmp0 - 1 | 0;
    }
    if (bothAreEqual) {
      return 0;
    }
    if (firstIsLarger) {
      return 1;
    } else {
      return -1;
    }
  };
  BigInteger63Arithmetic.prototype.gm = function (first, second) {
    var firstStart = _ULongArray___get_size__impl__ju6dtr(first) - this.gq(first) | 0;
    var secondStart = _ULongArray___get_size__impl__ju6dtr(second) - this.gq(second) | 0;
    return this.sq(first, second, firstStart, secondStart);
  };
  BigInteger63Arithmetic.prototype.tq = function (resultArray, resultArrayStart, first, second) {
    if (isZero(first, this)) {
      var tmp$ret$5;
      // Inline function 'kotlin.collections.copyInto' call
      var tmp0_copyInto = _ULongArray___get_size__impl__ju6dtr(first);
      var tmp$ret$4;
      // Inline function 'kotlin.collections.copyInto' call
      var tmp0_copyInto_0 = _ULongArray___get_storage__impl__28e64j(first);
      var tmp1_copyInto = _ULongArray___get_storage__impl__28e64j(resultArray);
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_copyInto_0;
      tmp$ret$1 = tmp$ret$0;
      var tmp = tmp$ret$1;
      var tmp$ret$3;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$2 = tmp1_copyInto;
      tmp$ret$3 = tmp$ret$2;
      arrayCopy(tmp, tmp$ret$3, resultArrayStart, 0, tmp0_copyInto);
      tmp$ret$4 = tmp1_copyInto;
      tmp$ret$5 = resultArray;
      return Unit_getInstance();
    }
    if (isZero(second, this)) {
      var tmp$ret$11;
      // Inline function 'kotlin.collections.copyInto' call
      var tmp1_copyInto_0 = _ULongArray___get_size__impl__ju6dtr(second);
      var tmp$ret$10;
      // Inline function 'kotlin.collections.copyInto' call
      var tmp0_copyInto_1 = _ULongArray___get_storage__impl__28e64j(second);
      var tmp1_copyInto_1 = _ULongArray___get_storage__impl__28e64j(resultArray);
      var tmp$ret$7;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$6;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$6 = tmp0_copyInto_1;
      tmp$ret$7 = tmp$ret$6;
      var tmp_0 = tmp$ret$7;
      var tmp$ret$9;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$8;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$8 = tmp1_copyInto_1;
      tmp$ret$9 = tmp$ret$8;
      arrayCopy(tmp_0, tmp$ret$9, resultArrayStart, 0, tmp1_copyInto_0);
      tmp$ret$10 = tmp1_copyInto_1;
      tmp$ret$11 = resultArray;
      return Unit_getInstance();
    }
    var firstStart = _ULongArray___get_size__impl__ju6dtr(first) - this.gq(first) | 0;
    var secondStart = _ULongArray___get_size__impl__ju6dtr(second) - this.gq(second) | 0;
    var tmp_1;
    if (firstStart > secondStart) {
      tmp_1 = new Sextuple(_ULongArray___get_size__impl__ju6dtr(first), _ULongArray___get_size__impl__ju6dtr(second), new ULongArray(first), new ULongArray(second), firstStart, secondStart);
    } else {
      tmp_1 = new Sextuple(_ULongArray___get_size__impl__ju6dtr(second), _ULongArray___get_size__impl__ju6dtr(first), new ULongArray(second), new ULongArray(first), secondStart, firstStart);
    }
    var tmp0_container = tmp_1;
    var largerLength = tmp0_container.a4();
    var smallerLength = tmp0_container.b4();
    var largerData = tmp0_container.g7().l8_1;
    var smallerData = tmp0_container.zn().l8_1;
    var largerStart = tmp0_container.ao();
    var smallerStart = tmp0_container.bo();
    var i = 0;
    var sum = _ULong___init__impl__c78o9k(new Long(0, 0));
    while (i < smallerStart) {
      var tmp$ret$13;
      // Inline function 'kotlin.ULong.plus' call
      var tmp$ret$12;
      // Inline function 'kotlin.ULong.plus' call
      var tmp2_plus = sum;
      var tmp3_plus = ULongArray__get_impl_pr71q9(largerData, i);
      tmp$ret$12 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp2_plus).e6(_ULong___get_data__impl__fggpzb(tmp3_plus)));
      var tmp4_plus = tmp$ret$12;
      var tmp5_plus = ULongArray__get_impl_pr71q9(smallerData, i);
      tmp$ret$13 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_plus).e6(_ULong___get_data__impl__fggpzb(tmp5_plus)));
      sum = tmp$ret$13;
      var tmp_2 = i + resultArrayStart | 0;
      var tmp$ret$14;
      // Inline function 'kotlin.ULong.and' call
      var tmp6_and = sum;
      var tmp7_and = this.qm_1;
      tmp$ret$14 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp6_and).m7(_ULong___get_data__impl__fggpzb(tmp7_and)));
      ULongArray__set_impl_z19mvh(resultArray, tmp_2, tmp$ret$14);
      var tmp$ret$15;
      // Inline function 'kotlin.ULong.shr' call
      var tmp8_shr = sum;
      tmp$ret$15 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp8_shr).f8(63));
      sum = tmp$ret$15;
      var tmp1 = i;
      i = tmp1 + 1 | 0;
    }
    while (true) {
      if (equals(sum, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
        while (i < largerStart) {
          ULongArray__set_impl_z19mvh(resultArray, i + resultArrayStart | 0, ULongArray__get_impl_pr71q9(largerData, i));
          var tmp2 = i;
          i = tmp2 + 1 | 0;
        }
        return Unit_getInstance();
      }
      if (i === largerLength) {
        ULongArray__set_impl_z19mvh(resultArray, largerLength + resultArrayStart | 0, sum);
        return Unit_getInstance();
      }
      var tmp$ret$16;
      // Inline function 'kotlin.ULong.plus' call
      var tmp9_plus = sum;
      var tmp10_plus = ULongArray__get_impl_pr71q9(largerData, i);
      tmp$ret$16 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp9_plus).e6(_ULong___get_data__impl__fggpzb(tmp10_plus)));
      sum = tmp$ret$16;
      var tmp_3 = i;
      var tmp$ret$17;
      // Inline function 'kotlin.ULong.and' call
      var tmp11_and = sum;
      var tmp12_and = this.qm_1;
      tmp$ret$17 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp11_and).m7(_ULong___get_data__impl__fggpzb(tmp12_and)));
      ULongArray__set_impl_z19mvh(resultArray, tmp_3, tmp$ret$17);
      var tmp$ret$18;
      // Inline function 'kotlin.ULong.shr' call
      var tmp13_shr = sum;
      tmp$ret$18 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp13_shr).f8(63));
      sum = tmp$ret$18;
      var tmp3 = i;
      i = tmp3 + 1 | 0;
    }
  };
  BigInteger63Arithmetic.prototype.dn = function (first, second) {
    if (isZero(first, this))
      return second;
    if (isZero(second, this))
      return first;
    var firstStart = _ULongArray___get_size__impl__ju6dtr(first) - this.gq(first) | 0;
    var secondStart = _ULongArray___get_size__impl__ju6dtr(second) - this.gq(second) | 0;
    var tmp;
    if (firstStart > secondStart) {
      tmp = new Sextuple(_ULongArray___get_size__impl__ju6dtr(first), _ULongArray___get_size__impl__ju6dtr(second), new ULongArray(first), new ULongArray(second), firstStart, secondStart);
    } else {
      tmp = new Sextuple(_ULongArray___get_size__impl__ju6dtr(second), _ULongArray___get_size__impl__ju6dtr(first), new ULongArray(second), new ULongArray(first), secondStart, firstStart);
    }
    var tmp0_container = tmp;
    var largerLength = tmp0_container.a4();
    var smallerLength = tmp0_container.b4();
    var largerData = tmp0_container.g7().l8_1;
    var smallerData = tmp0_container.zn().l8_1;
    var largerStart = tmp0_container.ao();
    var smallerStart = tmp0_container.bo();
    var tmp$ret$2;
    // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.possibleAdditionOverflow' call
    var firstMostSignificant = ULongArray__get_impl_pr71q9(largerData, largerStart - 1 | 0);
    var secondMostSignificant = ULongArray__get_impl_pr71q9(smallerData, smallerStart - 1 | 0);
    var tmp_0;
    var tmp$ret$0;
    // Inline function 'kotlin.ULong.and' call
    var tmp0_and = firstMostSignificant;
    tmp$ret$0 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_and).m7(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(0, 1610612736)))));
    if (!equals(tmp$ret$0, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      tmp_0 = true;
    } else {
      var tmp$ret$1;
      // Inline function 'kotlin.ULong.and' call
      var tmp1_and = secondMostSignificant;
      tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_and).m7(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(0, 1610612736)))));
      tmp_0 = !equals(tmp$ret$1, _ULong___init__impl__c78o9k(new Long(0, 0)));
    }
    var possibleOverflow = tmp_0;
    tmp$ret$2 = possibleOverflow;
    var possibleOverflow_0 = tmp$ret$2;
    var tmp_1;
    if (possibleOverflow_0) {
      var tmp$ret$6;
      // Inline function 'kotlin.ULongArray' call
      var tmp2_ULongArray = largerLength + 1 | 0;
      var tmp_2 = 0;
      var tmp_3 = tmp2_ULongArray;
      var tmp_4 = longArray(tmp_3);
      while (tmp_2 < tmp_3) {
        var tmp_5 = tmp_2;
        var tmp$ret$5;
        // Inline function 'kotlin.ULongArray.<anonymous>' call
        var tmp$ret$4;
        // Inline function 'kotlin.ULong.toLong' call
        var tmp$ret$3;
        // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.add.<anonymous>' call
        tmp$ret$3 = _ULong___init__impl__c78o9k(new Long(0, 0));
        var tmp0_toLong = tmp$ret$3;
        tmp$ret$4 = _ULong___get_data__impl__fggpzb(tmp0_toLong);
        tmp$ret$5 = tmp$ret$4;
        tmp_4[tmp_5] = tmp$ret$5;
        tmp_2 = tmp_2 + 1 | 0;
      }
      tmp$ret$6 = _ULongArray___init__impl__twm1l3(tmp_4);
      tmp_1 = tmp$ret$6;
    } else {
      var tmp$ret$10;
      // Inline function 'kotlin.ULongArray' call
      var tmp_6 = 0;
      var tmp_7 = largerLength;
      var tmp_8 = longArray(tmp_7);
      while (tmp_6 < tmp_7) {
        var tmp_9 = tmp_6;
        var tmp$ret$9;
        // Inline function 'kotlin.ULongArray.<anonymous>' call
        var tmp$ret$8;
        // Inline function 'kotlin.ULong.toLong' call
        var tmp$ret$7;
        // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.add.<anonymous>' call
        tmp$ret$7 = _ULong___init__impl__c78o9k(new Long(0, 0));
        var tmp0_toLong_0 = tmp$ret$7;
        tmp$ret$8 = _ULong___get_data__impl__fggpzb(tmp0_toLong_0);
        tmp$ret$9 = tmp$ret$8;
        tmp_8[tmp_9] = tmp$ret$9;
        tmp_6 = tmp_6 + 1 | 0;
      }
      tmp$ret$10 = _ULongArray___init__impl__twm1l3(tmp_8);
      tmp_1 = tmp$ret$10;
    }
    var result = tmp_1;
    this.tq(result, 0, first, second);
    var tmp_10;
    if (possibleOverflow_0) {
      tmp_10 = this.an(result);
    } else {
      tmp_10 = result;
    }
    return tmp_10;
  };
  BigInteger63Arithmetic.prototype.uq = function (first, second, firstStart, secondStart) {
    var comparison = this.sq(first, second, firstStart, secondStart);
    var firstSize = firstStart + 1 | 0;
    var secondSize = secondStart + 1 | 0;
    var firstIsLarger = comparison === 1;
    if (comparison === 0)
      return this.jm_1;
    if (secondSize === 1 ? equals(ULongArray__get_impl_pr71q9(second, 0), _ULong___init__impl__c78o9k(new Long(0, 0))) : false) {
      return first;
    }
    if (!firstIsLarger) {
      throw RuntimeException_init_$Create$('subtract result less than zero');
    }
    var tmp;
    if (firstIsLarger) {
      tmp = new Quadruple(new ULongArray(first), new ULongArray(second), firstStart, secondStart);
    } else {
      tmp = new Quadruple(new ULongArray(second), new ULongArray(first), secondStart, firstStart);
    }
    var tmp0_container = tmp;
    var largerData = tmp0_container.a4().l8_1;
    var smallerData = tmp0_container.b4().l8_1;
    var largerStart = tmp0_container.g7();
    var smallerStart = tmp0_container.zn();
    var tmp$ret$3;
    // Inline function 'kotlin.ULongArray' call
    var tmp_0 = 0;
    var tmp_1 = largerStart;
    var tmp_2 = longArray(tmp_1);
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$2;
      // Inline function 'kotlin.ULongArray.<anonymous>' call
      var tmp$ret$1;
      // Inline function 'kotlin.ULong.toLong' call
      var tmp$ret$0;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.subtractWithStartIndexes.<anonymous>' call
      tmp$ret$0 = _ULong___init__impl__c78o9k(new Long(0, 0));
      var tmp0_toLong = tmp$ret$0;
      tmp$ret$1 = _ULong___get_data__impl__fggpzb(tmp0_toLong);
      tmp$ret$2 = tmp$ret$1;
      tmp_2[tmp_3] = tmp$ret$2;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp$ret$3 = _ULongArray___init__impl__twm1l3(tmp_2);
    var result = tmp$ret$3;
    var i = 0;
    var diff = _ULong___init__impl__c78o9k(new Long(0, 0));
    while (i < smallerStart) {
      var tmp$ret$5;
      // Inline function 'kotlin.ULong.minus' call
      var tmp$ret$4;
      // Inline function 'kotlin.ULong.minus' call
      var tmp0_minus = ULongArray__get_impl_pr71q9(largerData, i);
      var tmp1_minus = ULongArray__get_impl_pr71q9(smallerData, i);
      tmp$ret$4 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_minus).f6(_ULong___get_data__impl__fggpzb(tmp1_minus)));
      var tmp2_minus = tmp$ret$4;
      var tmp3_minus = diff;
      tmp$ret$5 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp2_minus).f6(_ULong___get_data__impl__fggpzb(tmp3_minus)));
      diff = tmp$ret$5;
      var tmp_4 = i;
      var tmp$ret$6;
      // Inline function 'kotlin.ULong.and' call
      var tmp4_and = diff;
      var tmp5_and = this.qm_1;
      tmp$ret$6 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_and).m7(_ULong___get_data__impl__fggpzb(tmp5_and)));
      ULongArray__set_impl_z19mvh(result, tmp_4, tmp$ret$6);
      var tmp$ret$7;
      // Inline function 'kotlin.ULong.shr' call
      var tmp6_shr = diff;
      tmp$ret$7 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp6_shr).f8(63));
      diff = tmp$ret$7;
      var tmp1 = i;
      i = tmp1 + 1 | 0;
    }
    while (!equals(diff, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      var tmp$ret$8;
      // Inline function 'kotlin.ULong.minus' call
      var tmp7_minus = ULongArray__get_impl_pr71q9(largerData, i);
      var tmp8_minus = diff;
      tmp$ret$8 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp7_minus).f6(_ULong___get_data__impl__fggpzb(tmp8_minus)));
      diff = tmp$ret$8;
      var tmp_5 = i;
      var tmp$ret$9;
      // Inline function 'kotlin.ULong.and' call
      var tmp9_and = diff;
      var tmp10_and = this.qm_1;
      tmp$ret$9 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp9_and).m7(_ULong___get_data__impl__fggpzb(tmp10_and)));
      ULongArray__set_impl_z19mvh(result, tmp_5, tmp$ret$9);
      var tmp$ret$10;
      // Inline function 'kotlin.ULong.shr' call
      var tmp11_shr = diff;
      tmp$ret$10 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp11_shr).f8(63));
      diff = tmp$ret$10;
      var tmp2 = i;
      i = tmp2 + 1 | 0;
    }
    while (i < largerStart) {
      ULongArray__set_impl_z19mvh(result, i, ULongArray__get_impl_pr71q9(largerData, i));
      var tmp3 = i;
      i = tmp3 + 1 | 0;
    }
    if (this.gq(result) === (_ULongArray___get_size__impl__ju6dtr(result) - 1 | 0) ? equals(ULongArray__get_impl_pr71q9(result, 0), _ULong___init__impl__c78o9k(new Long(0, 0))) : false) {
      return this.jm_1;
    }
    return this.an(result);
  };
  BigInteger63Arithmetic.prototype.cn = function (first, second) {
    var firstStart = _ULongArray___get_size__impl__ju6dtr(first) - this.gq(first) | 0;
    var secondStart = _ULongArray___get_size__impl__ju6dtr(second) - this.gq(second) | 0;
    return this.uq(first, second, firstStart, secondStart);
  };
  BigInteger63Arithmetic.prototype.jn = function (first, second) {
    var firstCorrectedSize = _ULongArray___get_size__impl__ju6dtr(first) - this.gq(first) | 0;
    var secondCorrectedSize = _ULongArray___get_size__impl__ju6dtr(second) - this.gq(second) | 0;
    return multiplyWithCorrectedSize(this, first, second, firstCorrectedSize, secondCorrectedSize);
  };
  BigInteger63Arithmetic.prototype.vq = function (original, numberOfWords, value) {
    var tmp$ret$3;
    // Inline function 'kotlin.ULongArray' call
    var tmp0_ULongArray = _ULongArray___get_size__impl__ju6dtr(original) + numberOfWords | 0;
    var tmp = 0;
    var tmp_0 = tmp0_ULongArray;
    var tmp_1 = longArray(tmp_0);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var tmp$ret$2;
      // Inline function 'kotlin.ULongArray.<anonymous>' call
      var tmp$ret$1;
      // Inline function 'kotlin.ULong.toLong' call
      var tmp$ret$0;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.extendULongArray.<anonymous>' call
      tmp$ret$0 = tmp_2 < _ULongArray___get_size__impl__ju6dtr(original) ? ULongArray__get_impl_pr71q9(original, tmp_2) : value;
      var tmp0_toLong = tmp$ret$0;
      tmp$ret$1 = _ULong___get_data__impl__fggpzb(tmp0_toLong);
      tmp$ret$2 = tmp$ret$1;
      tmp_1[tmp_2] = tmp$ret$2;
      tmp = tmp + 1 | 0;
    }
    tmp$ret$3 = _ULongArray___init__impl__twm1l3(tmp_1);
    return tmp$ret$3;
  };
  BigInteger63Arithmetic.prototype.tp = function (firstUnchecked, secondUnchecked) {
    var tmp;
    if (!((_ULongArray___get_size__impl__ju6dtr(firstUnchecked) % 3 | 0) === 0)) {
      var tmp_0 = new ULongArray(firstUnchecked);
      var tmp$ret$4;
      // Inline function 'kotlin.collections.asIterable' call
      var tmp$ret$3;
      // Inline function 'kotlin.ULongArray' call
      var tmp0_ULongArray = imul((_ULongArray___get_size__impl__ju6dtr(firstUnchecked) + 2 | 0) / 3 | 0, 3) - _ULongArray___get_size__impl__ju6dtr(firstUnchecked) | 0;
      var tmp_1 = 0;
      var tmp_2 = tmp0_ULongArray;
      var tmp_3 = longArray(tmp_2);
      while (tmp_1 < tmp_2) {
        var tmp_4 = tmp_1;
        var tmp$ret$2;
        // Inline function 'kotlin.ULongArray.<anonymous>' call
        var tmp$ret$1;
        // Inline function 'kotlin.ULong.toLong' call
        var tmp$ret$0;
        // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.toomCook3Multiply.<anonymous>' call
        tmp$ret$0 = _ULong___init__impl__c78o9k(new Long(0, 0));
        var tmp0_toLong = tmp$ret$0;
        tmp$ret$1 = _ULong___get_data__impl__fggpzb(tmp0_toLong);
        tmp$ret$2 = tmp$ret$1;
        tmp_3[tmp_4] = tmp$ret$2;
        tmp_1 = tmp_1 + 1 | 0;
      }
      tmp$ret$3 = _ULongArray___init__impl__twm1l3(tmp_3);
      var tmp1_asIterable = tmp$ret$3;
      tmp$ret$4 = new ULongArray(tmp1_asIterable);
      tmp = plus(tmp_0, tmp$ret$4);
    } else {
      tmp = new ULongArray(firstUnchecked);
    }
    var first = toULongArray(tmp);
    var tmp_5;
    if (!((_ULongArray___get_size__impl__ju6dtr(secondUnchecked) % 3 | 0) === 0)) {
      var tmp_6 = new ULongArray(secondUnchecked);
      var tmp$ret$9;
      // Inline function 'kotlin.collections.asIterable' call
      var tmp$ret$8;
      // Inline function 'kotlin.ULongArray' call
      var tmp2_ULongArray = imul((_ULongArray___get_size__impl__ju6dtr(secondUnchecked) + 2 | 0) / 3 | 0, 3) - _ULongArray___get_size__impl__ju6dtr(secondUnchecked) | 0;
      var tmp_7 = 0;
      var tmp_8 = tmp2_ULongArray;
      var tmp_9 = longArray(tmp_8);
      while (tmp_7 < tmp_8) {
        var tmp_10 = tmp_7;
        var tmp$ret$7;
        // Inline function 'kotlin.ULongArray.<anonymous>' call
        var tmp$ret$6;
        // Inline function 'kotlin.ULong.toLong' call
        var tmp$ret$5;
        // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.toomCook3Multiply.<anonymous>' call
        tmp$ret$5 = _ULong___init__impl__c78o9k(new Long(0, 0));
        var tmp0_toLong_0 = tmp$ret$5;
        tmp$ret$6 = _ULong___get_data__impl__fggpzb(tmp0_toLong_0);
        tmp$ret$7 = tmp$ret$6;
        tmp_9[tmp_10] = tmp$ret$7;
        tmp_7 = tmp_7 + 1 | 0;
      }
      tmp$ret$8 = _ULongArray___init__impl__twm1l3(tmp_9);
      var tmp3_asIterable = tmp$ret$8;
      tmp$ret$9 = new ULongArray(tmp3_asIterable);
      tmp_5 = plus(tmp_6, tmp$ret$9);
    } else {
      tmp_5 = new ULongArray(secondUnchecked);
    }
    var second = toULongArray(tmp_5);
    var firstLength = _ULongArray___get_size__impl__ju6dtr(first);
    var secondLength = _ULongArray___get_size__impl__ju6dtr(second);
    var tmp_11;
    if (firstLength > secondLength) {
      var prepared = this.vq(second, firstLength - secondLength | 0, _ULong___init__impl__c78o9k(new Long(0, 0)));
      tmp_11 = new Pair(new ULongArray(first), new ULongArray(prepared));
    } else if (firstLength < secondLength) {
      var prepared_0 = this.vq(first, secondLength - firstLength | 0, _ULong___init__impl__c78o9k(new Long(0, 0)));
      tmp_11 = new Pair(new ULongArray(prepared_0), new ULongArray(second));
    } else {
      tmp_11 = new Pair(new ULongArray(first), new ULongArray(second));
    }
    var tmp0_container = tmp_11;
    var firstPrepared = tmp0_container.a4().l8_1;
    var secondPrepared = tmp0_container.b4().l8_1;
    var tmp$ret$10;
    // Inline function 'kotlin.math.max' call
    var tmp4_max = _ULongArray___get_size__impl__ju6dtr(first);
    var tmp5_max = _ULongArray___get_size__impl__ju6dtr(second);
    tmp$ret$10 = Math.max(tmp4_max, tmp5_max);
    var longestLength = tmp$ret$10;
    var extendedDigit = (longestLength + 2 | 0) / 3 | 0;
    var m0 = new SignedULongArray(toULongArray(slice(firstPrepared, until(0, extendedDigit))), true);
    var m1 = new SignedULongArray(toULongArray(slice(firstPrepared, until(extendedDigit, imul(extendedDigit, 2)))), true);
    var m2 = new SignedULongArray(toULongArray(slice(firstPrepared, until(imul(extendedDigit, 2), imul(extendedDigit, 3)))), true);
    var n0 = new SignedULongArray(toULongArray(slice(secondPrepared, until(0, extendedDigit))), true);
    var n1 = new SignedULongArray(toULongArray(slice(secondPrepared, until(extendedDigit, imul(extendedDigit, 2)))), true);
    var n2 = new SignedULongArray(toULongArray(slice(secondPrepared, until(imul(extendedDigit, 2), imul(extendedDigit, 3)))), true);
    var p0 = this.bq(m0, m2);
    var pe0 = m0;
    var pe1 = this.bq(p0, m1);
    var pem1 = this.dq(p0, m1);
    var doublePemM2 = this.aq(this.bq(pem1, m2), this.ym_1);
    var pem2 = this.dq(doublePemM2, m0);
    var pinf = m2;
    var q0 = this.bq(n0, n2);
    var qe0 = n0;
    var qe1 = this.bq(q0, n1);
    var qem1 = this.dq(q0, n1);
    var doubleQemN2 = this.aq(this.bq(qem1, n2), this.ym_1);
    var qem2 = this.dq(doubleQemN2, n0);
    var qinf = n2;
    var re0 = this.aq(pe0, qe0);
    var re1 = this.aq(pe1, qe1);
    var rem1 = this.aq(pem1, qem1);
    var rem2 = this.aq(pem2, qem2);
    var rinf = this.aq(pinf, qinf);
    var r0 = re0;
    var r4 = rinf;
    var rem2re1diff = this.dq(rem2, re1);
    var tmp$ret$11;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$11 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(3, 0))]));
    var r3 = this.wq(rem2re1diff, new SignedULongArray(tmp$ret$11, true));
    var r1 = this.zp(this.dq(re1, rem1), 1);
    var r2 = this.dq(rem1, r0);
    r3 = this.bq(this.zp(this.dq(r2, r3), 1), this.aq(this.ym_1, rinf));
    r2 = this.dq(this.bq(r2, r1), r4);
    r1 = this.dq(r1, r3);
    var bShiftAmount = imul(extendedDigit, 63);
    var rb0 = r0;
    var rb1 = this.cq(r1, bShiftAmount);
    var rb2 = this.cq(r2, imul(bShiftAmount, 2));
    var rb3 = this.cq(r3, imul(bShiftAmount, 3));
    var rb4 = this.cq(r4, imul(bShiftAmount, 4));
    var rb = this.bq(this.bq(this.bq(this.bq(rb0, rb1), rb2), rb3), rb4);
    return rb.eq_1;
  };
  BigInteger63Arithmetic.prototype.up = function (first, second) {
    var firstCorrectedSize = _ULongArray___get_size__impl__ju6dtr(first) - this.gq(first) | 0;
    return this.xq(first, second, firstCorrectedSize);
  };
  BigInteger63Arithmetic.prototype.xq = function (first, second, firstCorrectedSize) {
    var tmp$ret$0;
    // Inline function 'kotlin.ULong.and' call
    var tmp0_and = this.sm_1;
    tmp$ret$0 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(second).m7(_ULong___get_data__impl__fggpzb(tmp0_and)));
    var secondLow = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.ULong.shr' call
    tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(second).f8(32));
    var secondHigh = tmp$ret$1;
    var requiredBits = this.qn(first) + this.pq(second) | 0;
    var tmp;
    if (!((requiredBits % 63 | 0) === 0)) {
      tmp = (requiredBits / 63 | 0) + 1 | 0;
    } else {
      tmp = requiredBits / 63 | 0;
    }
    var requiredWords = tmp;
    var result = _ULongArray___init__impl__twm1l3_0(requiredWords);
    var carryIntoNextRound = _ULong___init__impl__c78o9k(new Long(0, 0));
    var i = 0;
    var j = 0;
    while (i < firstCorrectedSize) {
      var tmp$ret$2;
      // Inline function 'kotlin.ULong.and' call
      var tmp1_and = ULongArray__get_impl_pr71q9(first, i);
      var tmp2_and = this.sm_1;
      tmp$ret$2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_and).m7(_ULong___get_data__impl__fggpzb(tmp2_and)));
      var firstLow = tmp$ret$2;
      var tmp$ret$3;
      // Inline function 'kotlin.ULong.shr' call
      var tmp3_shr = ULongArray__get_impl_pr71q9(first, i);
      tmp$ret$3 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp3_shr).f8(32));
      var firstHigh = tmp$ret$3;
      var tmp0 = i;
      i = tmp0 + 1 | 0;
      var tmp$ret$4;
      // Inline function 'kotlin.ULong.times' call
      tmp$ret$4 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(firstLow).d6(_ULong___get_data__impl__fggpzb(secondLow)));
      var lowerProduct = tmp$ret$4;
      var tmp$ret$5;
      // Inline function 'kotlin.ULong.shr' call
      tmp$ret$5 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(lowerProduct).f8(63));
      var lowerCarry = tmp$ret$5;
      var tmp$ret$7;
      // Inline function 'kotlin.ULong.plus' call
      var tmp5_plus = carryIntoNextRound;
      var tmp$ret$6;
      // Inline function 'kotlin.ULong.and' call
      var tmp4_and = this.qm_1;
      tmp$ret$6 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(lowerProduct).m7(_ULong___get_data__impl__fggpzb(tmp4_and)));
      var tmp6_plus = tmp$ret$6;
      tmp$ret$7 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp5_plus).e6(_ULong___get_data__impl__fggpzb(tmp6_plus)));
      var lowResult = tmp$ret$7;
      var tmp$ret$9;
      // Inline function 'kotlin.ULong.plus' call
      var tmp8_plus = lowerCarry;
      var tmp$ret$8;
      // Inline function 'kotlin.ULong.shr' call
      var tmp7_shr = lowResult;
      tmp$ret$8 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp7_shr).f8(63));
      var tmp9_plus = tmp$ret$8;
      tmp$ret$9 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp8_plus).e6(_ULong___get_data__impl__fggpzb(tmp9_plus)));
      lowerCarry = tmp$ret$9;
      var tmp$ret$10;
      // Inline function 'kotlin.ULong.and' call
      var tmp10_and = lowResult;
      var tmp11_and = this.qm_1;
      tmp$ret$10 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp10_and).m7(_ULong___get_data__impl__fggpzb(tmp11_and)));
      lowResult = tmp$ret$10;
      var tmp$ret$13;
      // Inline function 'kotlin.ULong.plus' call
      var tmp$ret$11;
      // Inline function 'kotlin.ULong.times' call
      tmp$ret$11 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(firstLow).d6(_ULong___get_data__impl__fggpzb(secondHigh)));
      var tmp12_plus = tmp$ret$11;
      var tmp$ret$12;
      // Inline function 'kotlin.ULong.times' call
      tmp$ret$12 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(secondLow).d6(_ULong___get_data__impl__fggpzb(firstHigh)));
      var tmp13_plus = tmp$ret$12;
      tmp$ret$13 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp12_plus).e6(_ULong___get_data__impl__fggpzb(tmp13_plus)));
      var middleProduct = tmp$ret$13;
      var middleCarry = lowerCarry;
      var tmp$ret$15;
      // Inline function 'kotlin.ULong.plus' call
      var tmp14_plus = middleCarry;
      var tmp$ret$14;
      // Inline function 'kotlin.ULong.shr' call
      tmp$ret$14 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(middleProduct).f8(31));
      var tmp15_plus = tmp$ret$14;
      tmp$ret$15 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp14_plus).e6(_ULong___get_data__impl__fggpzb(tmp15_plus)));
      middleCarry = tmp$ret$15;
      var tmp$ret$18;
      // Inline function 'kotlin.ULong.plus' call
      var tmp18_plus = lowResult;
      var tmp$ret$17;
      // Inline function 'kotlin.ULong.and' call
      var tmp$ret$16;
      // Inline function 'kotlin.ULong.shl' call
      tmp$ret$16 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(middleProduct).e8(32));
      var tmp16_and = tmp$ret$16;
      var tmp17_and = this.qm_1;
      tmp$ret$17 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp16_and).m7(_ULong___get_data__impl__fggpzb(tmp17_and)));
      var tmp19_plus = tmp$ret$17;
      tmp$ret$18 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp18_plus).e6(_ULong___get_data__impl__fggpzb(tmp19_plus)));
      lowResult = tmp$ret$18;
      var tmp$ret$20;
      // Inline function 'kotlin.ULong.plus' call
      var tmp21_plus = middleCarry;
      var tmp$ret$19;
      // Inline function 'kotlin.ULong.shr' call
      var tmp20_shr = lowResult;
      tmp$ret$19 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp20_shr).f8(63));
      var tmp22_plus = tmp$ret$19;
      tmp$ret$20 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp21_plus).e6(_ULong___get_data__impl__fggpzb(tmp22_plus)));
      middleCarry = tmp$ret$20;
      var tmp_0 = j;
      var tmp$ret$21;
      // Inline function 'kotlin.ULong.and' call
      var tmp23_and = lowResult;
      var tmp24_and = this.qm_1;
      tmp$ret$21 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp23_and).m7(_ULong___get_data__impl__fggpzb(tmp24_and)));
      ULongArray__set_impl_z19mvh(result, tmp_0, tmp$ret$21);
      var highResult = middleCarry;
      var tmp$ret$23;
      // Inline function 'kotlin.ULong.shl' call
      var tmp$ret$22;
      // Inline function 'kotlin.ULong.times' call
      tmp$ret$22 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(firstHigh).d6(_ULong___get_data__impl__fggpzb(secondHigh)));
      var tmp25_shl = tmp$ret$22;
      tmp$ret$23 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp25_shl).e8(1));
      var higherProduct = tmp$ret$23;
      var tmp$ret$24;
      // Inline function 'kotlin.ULong.plus' call
      var tmp26_plus = highResult;
      tmp$ret$24 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp26_plus).e6(_ULong___get_data__impl__fggpzb(higherProduct)));
      highResult = tmp$ret$24;
      carryIntoNextRound = highResult;
      var tmp1 = j;
      j = tmp1 + 1 | 0;
    }
    if (!equals(carryIntoNextRound, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      ULongArray__set_impl_z19mvh(result, j, carryIntoNextRound);
    }
    return result;
  };
  BigInteger63Arithmetic.prototype.on = function (base, exponent) {
    if (exponent.equals(new Long(0, 0))) {
      return this.km_1;
    }
    if (exponent.equals(new Long(1, 0))) {
      return base;
    }
    if ((_ULongArray___get_size__impl__ju6dtr(base) === 1 ? equals(ULongArray__get_impl_pr71q9(base, 0), _ULong___init__impl__c78o9k(new Long(10, 0))) : false) ? exponent.c6(toLong(this.zm_1.length)) < 0 : false) {
      return this.zm_1[exponent.u7()].l8_1;
    }
    var firstCorrectedSize = _ULongArray___get_size__impl__ju6dtr(base) - this.gq(base) | 0;
    var helperVar = this.km_1;
    var exponentVar = exponent;
    var baseVar = base;
    while (exponentVar.c6(new Long(1, 0)) > 0) {
      var tmp$ret$0;
      // Inline function 'kotlin.Long.rem' call
      var tmp0_rem = exponentVar;
      tmp$ret$0 = tmp0_rem.t8(new Long(2, 0));
      if (tmp$ret$0.equals(new Long(0, 0))) {
        baseVar = this.lq(baseVar, baseVar);
        var tmp$ret$1;
        // Inline function 'kotlin.Long.div' call
        var tmp1_div = exponentVar;
        tmp$ret$1 = tmp1_div.b6(new Long(2, 0));
        exponentVar = tmp$ret$1;
      } else {
        helperVar = this.lq(baseVar, helperVar);
        baseVar = this.lq(baseVar, baseVar);
        var tmp$ret$3;
        // Inline function 'kotlin.Long.div' call
        var tmp$ret$2;
        // Inline function 'kotlin.Long.minus' call
        var tmp2_minus = exponentVar;
        tmp$ret$2 = tmp2_minus.f6(new Long(1, 0));
        var tmp3_div = tmp$ret$2;
        tmp$ret$3 = tmp3_div.b6(new Long(2, 0));
        exponentVar = tmp$ret$3;
      }
    }
    return this.lq(helperVar, baseVar);
  };
  BigInteger63Arithmetic.prototype.yq = function (dividend, divisor) {
    var divisorSize = _ULongArray___get_size__impl__ju6dtr(divisor);
    var normalizationShift = this.oq(ULongArray__get_impl_pr71q9(divisor, divisorSize - 1 | 0));
    var divisorNormalized = this.vp(divisor, normalizationShift);
    var dividendNormalized = this.vp(dividend, normalizationShift);
    return new Triple(new ULongArray(dividendNormalized), new ULongArray(divisorNormalized), normalizationShift);
  };
  BigInteger63Arithmetic.prototype.zq = function (remainderNormalized, normalizationShift) {
    var remainder = this.ar(remainderNormalized, normalizationShift);
    return remainder;
  };
  BigInteger63Arithmetic.prototype.br = function (unnormalizedDividend, unnormalizedDivisor) {
    if (this.kq(unnormalizedDivisor, unnormalizedDividend) > 0) {
      return new Pair(new ULongArray(this.jm_1), new ULongArray(unnormalizedDividend));
    }
    if (_ULongArray___get_size__impl__ju6dtr(unnormalizedDivisor) === 1 ? _ULongArray___get_size__impl__ju6dtr(unnormalizedDividend) === 1 : false) {
      var tmp$ret$1;
      // Inline function 'kotlin.ulongArrayOf' call
      var tmp$ret$0;
      // Inline function 'kotlin.ULong.div' call
      var tmp0_div = ULongArray__get_impl_pr71q9(unnormalizedDividend, 0);
      var tmp1_div = ULongArray__get_impl_pr71q9(unnormalizedDivisor, 0);
      tmp$ret$0 = ulongDivide(tmp0_div, tmp1_div);
      var tmp2_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$0]));
      tmp$ret$1 = tmp2_ulongArrayOf;
      var tmp = new ULongArray(this.an(tmp$ret$1));
      var tmp$ret$3;
      // Inline function 'kotlin.ulongArrayOf' call
      var tmp$ret$2;
      // Inline function 'kotlin.ULong.rem' call
      var tmp3_rem = ULongArray__get_impl_pr71q9(unnormalizedDividend, 0);
      var tmp4_rem = ULongArray__get_impl_pr71q9(unnormalizedDivisor, 0);
      tmp$ret$2 = ulongRemainder(tmp3_rem, tmp4_rem);
      var tmp5_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$2]));
      tmp$ret$3 = tmp5_ulongArrayOf;
      return new Pair(tmp, new ULongArray(this.an(tmp$ret$3)));
    }
    var bitPrecision = this.qn(unnormalizedDividend) - this.qn(unnormalizedDivisor) | 0;
    if (bitPrecision === 0) {
      return new Pair(new ULongArray(this.km_1), new ULongArray(this.jq(unnormalizedDividend, unnormalizedDivisor)));
    }
    var tmp0_container = this.yq(unnormalizedDividend, unnormalizedDivisor);
    var dividend = tmp0_container.a4().l8_1;
    var divisor = tmp0_container.b4().l8_1;
    var normalizationShift = tmp0_container.g7();
    var dividendSize = _ULongArray___get_size__impl__ju6dtr(dividend);
    var divisorSize = _ULongArray___get_size__impl__ju6dtr(divisor);
    var divisorCorrectedSize = _ULongArray___get_size__impl__ju6dtr(divisor) - this.gq(divisor) | 0;
    var wordPrecision = dividendSize - divisorSize | 0;
    var qjhat;
    var reconstructedQuotient;
    var quotient = _ULongArray___init__impl__twm1l3_0(wordPrecision);
    var divisorTimesBaseToPowerOfM = this.vp(divisor, imul(wordPrecision, this.om_1));
    if (this.kq(dividend, divisorTimesBaseToPowerOfM) >= 0) {
      quotient = _ULongArray___init__impl__twm1l3_0(wordPrecision + 1 | 0);
      ULongArray__set_impl_z19mvh(quotient, wordPrecision, _ULong___init__impl__c78o9k(new Long(1, 0)));
      dividend = this.jq(dividend, divisorTimesBaseToPowerOfM);
    }
    var inductionVariable = wordPrecision - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var j = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var tmp_0;
        if ((divisorSize + j | 0) < _ULongArray___get_size__impl__ju6dtr(dividend)) {
          var tmp$ret$4;
          // Inline function 'kotlin.ulongArrayOf' call
          var tmp6_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([ULongArray__get_impl_pr71q9(dividend, divisorSize + j | 0)]));
          tmp$ret$4 = tmp6_ulongArrayOf;
          tmp_0 = this.cr(this.vp(tmp$ret$4, this.om_1), ULongArray__get_impl_pr71q9(dividend, (divisorSize + j | 0) - 1 | 0));
        } else {
          var tmp_1;
          if ((divisorSize + j | 0) === _ULongArray___get_size__impl__ju6dtr(dividend)) {
            var tmp$ret$5;
            // Inline function 'kotlin.ulongArrayOf' call
            var tmp7_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([ULongArray__get_impl_pr71q9(dividend, (divisorSize + j | 0) - 1 | 0)]));
            tmp$ret$5 = tmp7_ulongArrayOf;
            tmp_1 = tmp$ret$5;
          } else {
            tmp_1 = this.jm_1;
          }
          tmp_0 = tmp_1;
        }
        var twoDigit = tmp_0;
        var tmp_2 = BigInteger32Arithmetic_getInstance();
        var tmp_3 = this.dr(twoDigit);
        var tmp$ret$6;
        // Inline function 'kotlin.ulongArrayOf' call
        var tmp8_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([ULongArray__get_impl_pr71q9(divisor, divisorSize - 1 | 0)]));
        tmp$ret$6 = tmp8_ulongArrayOf;
        var convertedResult = tmp_2.np(tmp_3, this.dr(tmp$ret$6));
        qjhat = this.er(convertedResult.z4_1.y7_1);
        var tmp_4 = quotient;
        var tmp_5;
        var tmp_6 = qjhat;
        var tmp$ret$7;
        // Inline function 'kotlin.ULong.minus' call
        var tmp9_minus = this.qm_1;
        tmp$ret$7 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp9_minus).f6(_ULong___get_data__impl__fggpzb(_ULong___init__impl__c78o9k(new Long(1, 0)))));
        if (this.fr(tmp_6, tmp$ret$7) < 0) {
          tmp_5 = ULongArray__get_impl_pr71q9(qjhat, 0);
        } else {
          tmp_5 = this.qm_1;
        }
        ULongArray__set_impl_z19mvh(tmp_4, j, tmp_5);
        reconstructedQuotient = this.vp(this.xq(divisor, ULongArray__get_impl_pr71q9(quotient, j), divisorCorrectedSize), imul(j, this.om_1));
        while (this.kq(reconstructedQuotient, dividend) > 0) {
          var tmp_7 = quotient;
          var tmp$ret$10;
          // Inline function 'kotlin.ULong.minus' call
          var tmp10_minus = ULongArray__get_impl_pr71q9(quotient, j);
          var tmp$ret$9;
          // Inline function 'kotlin.ULong.minus' call
          var tmp$ret$8;
          // Inline function 'kotlin.UInt.toULong' call
          tmp$ret$8 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(_UInt___init__impl__l7qpdl(1))).m7(new Long(-1, 0)));
          var tmp0_minus = tmp$ret$8;
          tmp$ret$9 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp10_minus).f6(_ULong___get_data__impl__fggpzb(tmp0_minus)));
          tmp$ret$10 = tmp$ret$9;
          ULongArray__set_impl_z19mvh(tmp_7, j, tmp$ret$10);
          reconstructedQuotient = this.vp(this.xq(divisor, ULongArray__get_impl_pr71q9(quotient, j), divisorCorrectedSize), imul(j, this.om_1));
        }
        dividend = this.jq(dividend, reconstructedQuotient);
      }
       while (0 <= inductionVariable);
    while (this.kq(dividend, divisor) >= 0) {
      quotient = this.cr(quotient, _ULong___init__impl__c78o9k(new Long(1, 0)));
      dividend = this.jq(dividend, divisor);
    }
    var denormRemainder = this.zq(dividend, normalizationShift);
    return new Pair(new ULongArray(this.an(quotient)), new ULongArray(denormRemainder));
  };
  BigInteger63Arithmetic.prototype.gr = function (operand) {
    if (isZero(operand, this))
      return this.jm_1;
    var length = this.qn(operand);
    var tmp;
    if ((length % 64 | 0) === 0) {
      tmp = length / 64 | 0;
    } else {
      tmp = (length / 64 | 0) + 1 | 0;
    }
    var requiredLength = tmp;
    var wordStep;
    var shiftAmount;
    var result = _ULongArray___init__impl__twm1l3_0(requiredLength);
    var inductionVariable = 0;
    if (inductionVariable < requiredLength)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        wordStep = i / 63 | 0;
        shiftAmount = i % 63 | 0;
        if (((i + wordStep | 0) + 1 | 0) < _ULongArray___get_size__impl__ju6dtr(operand)) {
          var tmp$ret$2;
          // Inline function 'kotlin.ULong.or' call
          var tmp$ret$0;
          // Inline function 'kotlin.ULong.shr' call
          var tmp0_shr = ULongArray__get_impl_pr71q9(operand, i + wordStep | 0);
          var tmp1_shr = shiftAmount;
          tmp$ret$0 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_shr).f8(tmp1_shr));
          var tmp4_or = tmp$ret$0;
          var tmp$ret$1;
          // Inline function 'kotlin.ULong.shl' call
          var tmp2_shl = ULongArray__get_impl_pr71q9(operand, (i + wordStep | 0) + 1 | 0);
          var tmp3_shl = 63 - shiftAmount | 0;
          tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp2_shl).e8(tmp3_shl));
          var tmp5_or = tmp$ret$1;
          tmp$ret$2 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_or).g8(_ULong___get_data__impl__fggpzb(tmp5_or)));
          ULongArray__set_impl_z19mvh(result, i, tmp$ret$2);
        } else {
          var tmp$ret$3;
          // Inline function 'kotlin.ULong.shr' call
          var tmp6_shr = ULongArray__get_impl_pr71q9(operand, i + wordStep | 0);
          var tmp7_shr = shiftAmount;
          tmp$ret$3 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp6_shr).f8(tmp7_shr));
          ULongArray__set_impl_z19mvh(result, i, tmp$ret$3);
        }
      }
       while (inductionVariable < requiredLength);
    return this.an(result);
  };
  BigInteger63Arithmetic.prototype.hr = function (operand) {
    var power64Representation = this.gr(operand);
    var result = _UIntArray___init__impl__ghjpc6(imul(_ULongArray___get_size__impl__ju6dtr(power64Representation), 2));
    var inductionVariable = 0;
    var last = _ULongArray___get_size__impl__ju6dtr(power64Representation);
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = imul(2, i);
        var tmp$ret$3;
        // Inline function 'kotlin.ULong.toUInt' call
        var tmp$ret$1;
        // Inline function 'kotlin.ULong.and' call
        var tmp1_and = ULongArray__get_impl_pr71q9(power64Representation, i);
        var tmp$ret$0;
        // Inline function 'kotlin.UInt.toULong' call
        var tmp0_toULong = BigInteger32Arithmetic_getInstance().no_1;
        tmp$ret$0 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp0_toULong)).m7(new Long(-1, 0)));
        var tmp2_and = tmp$ret$0;
        tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_and).m7(_ULong___get_data__impl__fggpzb(tmp2_and)));
        var tmp3_toUInt = tmp$ret$1;
        var tmp$ret$2;
        // Inline function 'kotlin.toUInt' call
        var tmp0_toUInt = _ULong___get_data__impl__fggpzb(tmp3_toUInt);
        tmp$ret$2 = _UInt___init__impl__l7qpdl(tmp0_toUInt.u7());
        tmp$ret$3 = tmp$ret$2;
        UIntArray__set_impl_7f2zu2(result, tmp, tmp$ret$3);
        var tmp_0 = imul(2, i) + 1 | 0;
        var tmp$ret$6;
        // Inline function 'kotlin.ULong.toUInt' call
        var tmp$ret$4;
        // Inline function 'kotlin.ULong.shr' call
        var tmp4_shr = ULongArray__get_impl_pr71q9(power64Representation, i);
        tmp$ret$4 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_shr).f8(32));
        var tmp5_toUInt = tmp$ret$4;
        var tmp$ret$5;
        // Inline function 'kotlin.toUInt' call
        var tmp0_toUInt_0 = _ULong___get_data__impl__fggpzb(tmp5_toUInt);
        tmp$ret$5 = _UInt___init__impl__l7qpdl(tmp0_toUInt_0.u7());
        tmp$ret$6 = tmp$ret$5;
        UIntArray__set_impl_7f2zu2(result, tmp_0, tmp$ret$6);
      }
       while (inductionVariable < last);
    return BigInteger32Arithmetic_getInstance().bp(result);
  };
  BigInteger63Arithmetic.prototype.ir = function (operand) {
    if (_UIntArray___get_size__impl__r6l8ci(operand) === 0) {
      return this.jm_1;
    }
    if (_UIntArray___get_size__impl__r6l8ci(operand) === 1) {
      var tmp$ret$1;
      // Inline function 'kotlin.ulongArrayOf' call
      var tmp$ret$0;
      // Inline function 'kotlin.UInt.toULong' call
      var tmp0_toULong = UIntArray__get_impl_gp5kza(operand, 0);
      tmp$ret$0 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp0_toULong)).m7(new Long(-1, 0)));
      var tmp1_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$0]));
      tmp$ret$1 = tmp1_ulongArrayOf;
      return tmp$ret$1;
    }
    var length = BigInteger32Arithmetic_getInstance().zo(operand);
    var tmp;
    if ((length % 63 | 0) === 0) {
      tmp = length / 63 | 0;
    } else {
      tmp = (length / 63 | 0) + 1 | 0;
    }
    var requiredLength = tmp;
    var result = _ULongArray___init__impl__twm1l3_0(requiredLength);
    var skipWordCount;
    var inductionVariable = 0;
    if (inductionVariable < requiredLength)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        skipWordCount = i / 32 | 0;
        var shiftAmount = i % 32 | 0;
        var position = imul(i, 2) - skipWordCount | 0;
        if (requiredLength === 2) {
          var tmp$ret$6;
          // Inline function 'kotlin.ULong.or' call
          var tmp$ret$2;
          // Inline function 'kotlin.UInt.toULong' call
          var tmp2_toULong = UIntArray__get_impl_gp5kza(operand, 0);
          tmp$ret$2 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp2_toULong)).m7(new Long(-1, 0)));
          var tmp7_or = tmp$ret$2;
          var tmp$ret$5;
          // Inline function 'kotlin.ULong.and' call
          var tmp$ret$4;
          // Inline function 'kotlin.ULong.shl' call
          var tmp$ret$3;
          // Inline function 'kotlin.UInt.toULong' call
          var tmp3_toULong = UIntArray__get_impl_gp5kza(operand, 1);
          tmp$ret$3 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp3_toULong)).m7(new Long(-1, 0)));
          var tmp4_shl = tmp$ret$3;
          tmp$ret$4 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp4_shl).e8(32));
          var tmp5_and = tmp$ret$4;
          var tmp6_and = this.tm_1;
          tmp$ret$5 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp5_and).m7(_ULong___get_data__impl__fggpzb(tmp6_and)));
          var tmp8_or = tmp$ret$5;
          tmp$ret$6 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp7_or).g8(_ULong___get_data__impl__fggpzb(tmp8_or)));
          ULongArray__set_impl_z19mvh(result, 0, tmp$ret$6);
          if (_UIntArray___get_size__impl__r6l8ci(operand) === 4) {
            var tmp$ret$14;
            // Inline function 'kotlin.ULong.or' call
            var tmp$ret$11;
            // Inline function 'kotlin.ULong.or' call
            var tmp$ret$8;
            // Inline function 'kotlin.ULong.shr' call
            var tmp$ret$7;
            // Inline function 'kotlin.UInt.toULong' call
            var tmp9_toULong = UIntArray__get_impl_gp5kza(operand, 1);
            tmp$ret$7 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp9_toULong)).m7(new Long(-1, 0)));
            var tmp10_shr = tmp$ret$7;
            tmp$ret$8 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp10_shr).f8(31));
            var tmp13_or = tmp$ret$8;
            var tmp$ret$10;
            // Inline function 'kotlin.ULong.shl' call
            var tmp$ret$9;
            // Inline function 'kotlin.UInt.toULong' call
            var tmp11_toULong = UIntArray__get_impl_gp5kza(operand, 2);
            tmp$ret$9 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp11_toULong)).m7(new Long(-1, 0)));
            var tmp12_shl = tmp$ret$9;
            tmp$ret$10 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp12_shl).e8(1));
            var tmp14_or = tmp$ret$10;
            tmp$ret$11 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp13_or).g8(_ULong___get_data__impl__fggpzb(tmp14_or)));
            var tmp17_or = tmp$ret$11;
            var tmp$ret$13;
            // Inline function 'kotlin.ULong.shl' call
            var tmp$ret$12;
            // Inline function 'kotlin.UInt.toULong' call
            var tmp15_toULong = UIntArray__get_impl_gp5kza(operand, 3);
            tmp$ret$12 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp15_toULong)).m7(new Long(-1, 0)));
            var tmp16_shl = tmp$ret$12;
            tmp$ret$13 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp16_shl).e8(33));
            var tmp18_or = tmp$ret$13;
            tmp$ret$14 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp17_or).g8(_ULong___get_data__impl__fggpzb(tmp18_or)));
            ULongArray__set_impl_z19mvh(result, 1, tmp$ret$14);
          } else {
            var tmp$ret$19;
            // Inline function 'kotlin.ULong.or' call
            var tmp$ret$16;
            // Inline function 'kotlin.ULong.shr' call
            var tmp$ret$15;
            // Inline function 'kotlin.UInt.toULong' call
            var tmp19_toULong = UIntArray__get_impl_gp5kza(operand, 1);
            tmp$ret$15 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp19_toULong)).m7(new Long(-1, 0)));
            var tmp20_shr = tmp$ret$15;
            tmp$ret$16 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp20_shr).f8(31));
            var tmp23_or = tmp$ret$16;
            var tmp$ret$18;
            // Inline function 'kotlin.ULong.shl' call
            var tmp$ret$17;
            // Inline function 'kotlin.UInt.toULong' call
            var tmp21_toULong = UIntArray__get_impl_gp5kza(operand, 2);
            tmp$ret$17 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp21_toULong)).m7(new Long(-1, 0)));
            var tmp22_shl = tmp$ret$17;
            tmp$ret$18 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp22_shl).e8(1));
            var tmp24_or = tmp$ret$18;
            tmp$ret$19 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp23_or).g8(_ULong___get_data__impl__fggpzb(tmp24_or)));
            ULongArray__set_impl_z19mvh(result, 1, tmp$ret$19);
          }
        } else {
          var tmp1_subject = i;
          if (tmp1_subject === 0) {
            var tmp$ret$24;
            // Inline function 'kotlin.ULong.or' call
            var tmp$ret$20;
            // Inline function 'kotlin.UInt.toULong' call
            var tmp25_toULong = UIntArray__get_impl_gp5kza(operand, 0);
            tmp$ret$20 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp25_toULong)).m7(new Long(-1, 0)));
            var tmp30_or = tmp$ret$20;
            var tmp$ret$23;
            // Inline function 'kotlin.ULong.and' call
            var tmp$ret$22;
            // Inline function 'kotlin.ULong.shl' call
            var tmp$ret$21;
            // Inline function 'kotlin.UInt.toULong' call
            var tmp26_toULong = UIntArray__get_impl_gp5kza(operand, 1);
            tmp$ret$21 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp26_toULong)).m7(new Long(-1, 0)));
            var tmp27_shl = tmp$ret$21;
            tmp$ret$22 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp27_shl).e8(32));
            var tmp28_and = tmp$ret$22;
            var tmp29_and = this.tm_1;
            tmp$ret$23 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp28_and).m7(_ULong___get_data__impl__fggpzb(tmp29_and)));
            var tmp31_or = tmp$ret$23;
            tmp$ret$24 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp30_or).g8(_ULong___get_data__impl__fggpzb(tmp31_or)));
            ULongArray__set_impl_z19mvh(result, i, tmp$ret$24);
          } else if (1 <= tmp1_subject ? tmp1_subject < (requiredLength - 1 | 0) : false) {
            var tmp$ret$33;
            // Inline function 'kotlin.ULong.or' call
            var tmp$ret$29;
            // Inline function 'kotlin.ULong.or' call
            var tmp$ret$26;
            // Inline function 'kotlin.ULong.shr' call
            var tmp$ret$25;
            // Inline function 'kotlin.UInt.toULong' call
            var tmp32_toULong = UIntArray__get_impl_gp5kza(operand, position - 1 | 0);
            tmp$ret$25 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp32_toULong)).m7(new Long(-1, 0)));
            var tmp33_shr = tmp$ret$25;
            var tmp34_shr = 32 - shiftAmount | 0;
            tmp$ret$26 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp33_shr).f8(tmp34_shr));
            var tmp37_or = tmp$ret$26;
            var tmp$ret$28;
            // Inline function 'kotlin.ULong.shl' call
            var tmp$ret$27;
            // Inline function 'kotlin.UInt.toULong' call
            var tmp35_toULong = UIntArray__get_impl_gp5kza(operand, position);
            tmp$ret$27 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp35_toULong)).m7(new Long(-1, 0)));
            var tmp36_shl = tmp$ret$27;
            tmp$ret$28 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp36_shl).e8(shiftAmount));
            var tmp38_or = tmp$ret$28;
            tmp$ret$29 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp37_or).g8(_ULong___get_data__impl__fggpzb(tmp38_or)));
            var tmp44_or = tmp$ret$29;
            var tmp$ret$32;
            // Inline function 'kotlin.ULong.and' call
            var tmp$ret$31;
            // Inline function 'kotlin.ULong.shl' call
            var tmp$ret$30;
            // Inline function 'kotlin.UInt.toULong' call
            var tmp39_toULong = UIntArray__get_impl_gp5kza(operand, position + 1 | 0);
            tmp$ret$30 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp39_toULong)).m7(new Long(-1, 0)));
            var tmp40_shl = tmp$ret$30;
            var tmp41_shl = 32 + shiftAmount | 0;
            tmp$ret$31 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp40_shl).e8(tmp41_shl));
            var tmp42_and = tmp$ret$31;
            var tmp43_and = this.tm_1;
            tmp$ret$32 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp42_and).m7(_ULong___get_data__impl__fggpzb(tmp43_and)));
            var tmp45_or = tmp$ret$32;
            tmp$ret$33 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp44_or).g8(_ULong___get_data__impl__fggpzb(tmp45_or)));
            ULongArray__set_impl_z19mvh(result, i, tmp$ret$33);
          } else if (tmp1_subject === (requiredLength - 1 | 0)) {
            if (position < _UIntArray___get_size__impl__r6l8ci(operand)) {
              var tmp$ret$38;
              // Inline function 'kotlin.ULong.or' call
              var tmp$ret$35;
              // Inline function 'kotlin.ULong.shr' call
              var tmp$ret$34;
              // Inline function 'kotlin.UInt.toULong' call
              var tmp46_toULong = UIntArray__get_impl_gp5kza(operand, position - 1 | 0);
              tmp$ret$34 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp46_toULong)).m7(new Long(-1, 0)));
              var tmp47_shr = tmp$ret$34;
              var tmp48_shr = 32 - shiftAmount | 0;
              tmp$ret$35 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp47_shr).f8(tmp48_shr));
              var tmp51_or = tmp$ret$35;
              var tmp$ret$37;
              // Inline function 'kotlin.ULong.shl' call
              var tmp$ret$36;
              // Inline function 'kotlin.UInt.toULong' call
              var tmp49_toULong = UIntArray__get_impl_gp5kza(operand, position);
              tmp$ret$36 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp49_toULong)).m7(new Long(-1, 0)));
              var tmp50_shl = tmp$ret$36;
              tmp$ret$37 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp50_shl).e8(shiftAmount));
              var tmp52_or = tmp$ret$37;
              tmp$ret$38 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp51_or).g8(_ULong___get_data__impl__fggpzb(tmp52_or)));
              ULongArray__set_impl_z19mvh(result, i, tmp$ret$38);
            } else {
              var tmp$ret$40;
              // Inline function 'kotlin.ULong.shr' call
              var tmp$ret$39;
              // Inline function 'kotlin.UInt.toULong' call
              var tmp53_toULong = UIntArray__get_impl_gp5kza(operand, position - 1 | 0);
              tmp$ret$39 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(tmp53_toULong)).m7(new Long(-1, 0)));
              var tmp54_shr = tmp$ret$39;
              var tmp55_shr = 32 - shiftAmount | 0;
              tmp$ret$40 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp54_shr).f8(tmp55_shr));
              ULongArray__set_impl_z19mvh(result, i, tmp$ret$40);
            }
          }
        }
      }
       while (inductionVariable < requiredLength);
    return result;
  };
  BigInteger63Arithmetic.prototype.ln = function (first, second) {
    return this.br(first, second);
  };
  BigInteger63Arithmetic.prototype.bq = function (_this__u8e3s4, other) {
    return signedAdd(this, _this__u8e3s4, other);
  };
  BigInteger63Arithmetic.prototype.dq = function (_this__u8e3s4, other) {
    return signedSubtract(this, _this__u8e3s4, other);
  };
  BigInteger63Arithmetic.prototype.aq = function (_this__u8e3s4, other) {
    return signedMultiply(this, _this__u8e3s4, other);
  };
  BigInteger63Arithmetic.prototype.wq = function (_this__u8e3s4, other) {
    return signedDivide(this, _this__u8e3s4, other);
  };
  BigInteger63Arithmetic.prototype.zp = function (_this__u8e3s4, places) {
    return new SignedULongArray(this.ar(_this__u8e3s4.eq_1, places), _this__u8e3s4.fq_1);
  };
  BigInteger63Arithmetic.prototype.cq = function (_this__u8e3s4, places) {
    return new SignedULongArray(this.vp(_this__u8e3s4.eq_1, places), _this__u8e3s4.fq_1);
  };
  BigInteger63Arithmetic.prototype.yp = function (_this__u8e3s4, operand) {
    return new SignedULongArray(this.jr(_this__u8e3s4.eq_1, operand), _this__u8e3s4.fq_1);
  };
  BigInteger63Arithmetic.prototype.xl = function (number, base) {
    var parsed = this.jm_1;
    // Inline function 'kotlin.text.forEach' call
    var tmp$ret$1;
    // Inline function 'kotlin.text.toLowerCase' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = number;
    tmp$ret$1 = tmp$ret$0.toLowerCase();
    var tmp0_forEach = tmp$ret$1;
    var indexedObject = tmp0_forEach;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var element = charSequenceGet(indexedObject, inductionVariable);
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.parseForBase.<anonymous>' call
      var tmp = BigInteger63Arithmetic_getInstance();
      var tmp_0 = BigInteger63Arithmetic_getInstance();
      var tmp_1 = parsed;
      var tmp$ret$2;
      // Inline function 'kotlin.toULong' call
      tmp$ret$2 = _ULong___init__impl__c78o9k(toLong(base));
      var tmp_2 = tmp_0.kr(tmp_1, tmp$ret$2);
      var tmp$ret$3;
      // Inline function 'kotlin.toULong' call
      var tmp0_toULong = toDigit(element, base);
      tmp$ret$3 = _ULong___init__impl__c78o9k(toLong(tmp0_toULong));
      parsed = tmp.cr(tmp_2, tmp$ret$3);
    }
    return this.an(parsed);
  };
  BigInteger63Arithmetic.prototype.sn = function (operand, base) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.copyOf' call
    tmp$ret$0 = _ULongArray___init__impl__twm1l3(copyOf(_ULongArray___get_storage__impl__28e64j(operand)));
    var copy = tmp$ret$0;
    var tmp$ret$2;
    // Inline function 'kotlin.ulongArrayOf' call
    var tmp$ret$1;
    // Inline function 'kotlin.toULong' call
    tmp$ret$1 = _ULong___init__impl__c78o9k(toLong(base));
    var tmp0_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$1]));
    tmp$ret$2 = tmp0_ulongArrayOf;
    var baseArray = tmp$ret$2;
    var stringBuilder = StringBuilder_init_$Create$();
    while (!equals(copy, this.jm_1)) {
      var divremResult = this.lr(copy, baseArray);
      if (ULongArray__isEmpty_impl_c3yngu(divremResult.a5_1.l8_1)) {
        stringBuilder.bf(0);
      } else {
        stringBuilder.df(toString_0(ULongArray__get_impl_pr71q9(divremResult.a5_1.l8_1, 0), base));
      }
      copy = divremResult.z4_1.l8_1;
    }
    var tmp$ret$3;
    // Inline function 'kotlin.text.reversed' call
    var tmp1_reversed = stringBuilder.toString();
    tmp$ret$3 = toString(reversed(isCharSequence(tmp1_reversed) ? tmp1_reversed : THROW_CCE()));
    return tmp$ret$3;
  };
  BigInteger63Arithmetic.prototype.jr = function (operand, mask) {
    var tmp;
    if (_ULongArray___get_size__impl__ju6dtr(operand) > _ULongArray___get_size__impl__ju6dtr(mask)) {
      tmp = new Pair(new ULongArray(operand), new ULongArray(mask));
    } else {
      tmp = new Pair(new ULongArray(mask), new ULongArray(operand));
    }
    var tmp0_container = tmp;
    var bigger = tmp0_container.a4().l8_1;
    var smaller = tmp0_container.b4().l8_1;
    var tmp$ret$4;
    // Inline function 'kotlin.ULongArray' call
    var tmp0_ULongArray = _ULongArray___get_size__impl__ju6dtr(smaller);
    var tmp_0 = 0;
    var tmp_1 = tmp0_ULongArray;
    var tmp_2 = longArray(tmp_1);
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$3;
      // Inline function 'kotlin.ULongArray.<anonymous>' call
      var tmp$ret$2;
      // Inline function 'kotlin.ULong.toLong' call
      var tmp$ret$1;
      // Inline function 'com.ionspin.kotlin.bignum.integer.base63.array.BigInteger63Arithmetic.and.<anonymous>' call
      var tmp$ret$0;
      // Inline function 'kotlin.ULong.and' call
      var tmp0_and = ULongArray__get_impl_pr71q9(operand, tmp_3);
      var tmp1_and = ULongArray__get_impl_pr71q9(mask, tmp_3);
      tmp$ret$0 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp0_and).m7(_ULong___get_data__impl__fggpzb(tmp1_and)));
      tmp$ret$1 = tmp$ret$0;
      var tmp0_toLong = tmp$ret$1;
      tmp$ret$2 = _ULong___get_data__impl__fggpzb(tmp0_toLong);
      tmp$ret$3 = tmp$ret$2;
      tmp_2[tmp_3] = tmp$ret$3;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp$ret$4 = _ULongArray___init__impl__twm1l3(tmp_2);
    return tmp$ret$4;
  };
  BigInteger63Arithmetic.prototype.vp = function (_this__u8e3s4, places) {
    return this.qq(_this__u8e3s4, places);
  };
  BigInteger63Arithmetic.prototype.ar = function (_this__u8e3s4, places) {
    return this.rq(_this__u8e3s4, places);
  };
  BigInteger63Arithmetic.prototype.wp = function (_this__u8e3s4, other) {
    return this.dn(_this__u8e3s4, other);
  };
  BigInteger63Arithmetic.prototype.jq = function (_this__u8e3s4, other) {
    return this.cn(_this__u8e3s4, other);
  };
  BigInteger63Arithmetic.prototype.lq = function (_this__u8e3s4, other) {
    return this.jn(_this__u8e3s4, other);
  };
  BigInteger63Arithmetic.prototype.cr = function (_this__u8e3s4, other) {
    var tmp$ret$0;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$0 = _ULongArray___init__impl__twm1l3(longArrayOf([other]));
    return this.dn(_this__u8e3s4, tmp$ret$0);
  };
  BigInteger63Arithmetic.prototype.xp = function (_this__u8e3s4, other) {
    var tmp$ret$0;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$0 = _ULongArray___init__impl__twm1l3(longArrayOf([other]));
    return this.cn(_this__u8e3s4, tmp$ret$0);
  };
  BigInteger63Arithmetic.prototype.kr = function (_this__u8e3s4, other) {
    return this.up(_this__u8e3s4, other);
  };
  BigInteger63Arithmetic.prototype.mq = function (_this__u8e3s4, other) {
    return this.ln(_this__u8e3s4, other).z4_1.l8_1;
  };
  BigInteger63Arithmetic.prototype.lr = function (_this__u8e3s4, other) {
    return this.ln(_this__u8e3s4, other);
  };
  BigInteger63Arithmetic.prototype.kq = function (_this__u8e3s4, other) {
    return this.gm(_this__u8e3s4, other);
  };
  BigInteger63Arithmetic.prototype.fr = function (_this__u8e3s4, other) {
    var tmp$ret$0;
    // Inline function 'kotlin.ulongArrayOf' call
    tmp$ret$0 = _ULongArray___init__impl__twm1l3(longArrayOf([other]));
    return this.gm(_this__u8e3s4, tmp$ret$0);
  };
  BigInteger63Arithmetic.prototype.dr = function (_this__u8e3s4) {
    return this.hr(_this__u8e3s4);
  };
  BigInteger63Arithmetic.prototype.er = function (_this__u8e3s4) {
    return this.ir(_this__u8e3s4);
  };
  BigInteger63Arithmetic.prototype.zl = function (uLong) {
    var tmp;
    var tmp$ret$0;
    // Inline function 'kotlin.ULong.and' call
    var tmp0_and = this.um_1;
    tmp$ret$0 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(uLong).m7(_ULong___get_data__impl__fggpzb(tmp0_and)));
    if (!equals(tmp$ret$0, _ULong___init__impl__c78o9k(new Long(0, 0)))) {
      var tmp$ret$2;
      // Inline function 'kotlin.ulongArrayOf' call
      var tmp$ret$1;
      // Inline function 'kotlin.ULong.and' call
      var tmp1_and = this.qm_1;
      tmp$ret$1 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(uLong).m7(_ULong___get_data__impl__fggpzb(tmp1_and)));
      var tmp2_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$1, _ULong___init__impl__c78o9k(new Long(1, 0))]));
      tmp$ret$2 = tmp2_ulongArrayOf;
      tmp = tmp$ret$2;
    } else {
      var tmp$ret$3;
      // Inline function 'kotlin.ulongArrayOf' call
      tmp$ret$3 = _ULongArray___init__impl__twm1l3(longArrayOf([uLong]));
      tmp = tmp$ret$3;
    }
    return tmp;
  };
  BigInteger63Arithmetic.prototype.bm = function (uInt) {
    var tmp$ret$1;
    // Inline function 'kotlin.ulongArrayOf' call
    var tmp$ret$0;
    // Inline function 'kotlin.UInt.toULong' call
    tmp$ret$0 = _ULong___init__impl__c78o9k(toLong(_UInt___get_data__impl__f0vqqw(uInt)).m7(new Long(-1, 0)));
    var tmp0_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$0]));
    tmp$ret$1 = tmp0_ulongArrayOf;
    return tmp$ret$1;
  };
  BigInteger63Arithmetic.prototype.dm = function (uShort) {
    var tmp$ret$1;
    // Inline function 'kotlin.ulongArrayOf' call
    var tmp$ret$0;
    // Inline function 'kotlin.UShort.toULong' call
    tmp$ret$0 = _ULong___init__impl__c78o9k(toLong(_UShort___get_data__impl__g0245(uShort)).m7(new Long(65535, 0)));
    var tmp0_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$0]));
    tmp$ret$1 = tmp0_ulongArrayOf;
    return tmp$ret$1;
  };
  BigInteger63Arithmetic.prototype.fm = function (uByte) {
    var tmp$ret$1;
    // Inline function 'kotlin.ulongArrayOf' call
    var tmp$ret$0;
    // Inline function 'kotlin.UByte.toULong' call
    tmp$ret$0 = _ULong___init__impl__c78o9k(toLong(_UByte___get_data__impl__jof9qr(uByte)).m7(new Long(255, 0)));
    var tmp0_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$0]));
    tmp$ret$1 = tmp0_ulongArrayOf;
    return tmp$ret$1;
  };
  BigInteger63Arithmetic.prototype.pl = function (long) {
    Companion_getInstance();
    if (long.equals(new Long(0, -2147483648))) {
      var tmp$ret$0;
      // Inline function 'kotlin.ulongArrayOf' call
      tmp$ret$0 = _ULongArray___init__impl__twm1l3(longArrayOf([_ULong___init__impl__c78o9k(new Long(0, 0)), _ULong___init__impl__c78o9k(new Long(1, 0))]));
      return tmp$ret$0;
    }
    var tmp$ret$4;
    // Inline function 'kotlin.ulongArrayOf' call
    var tmp$ret$3;
    // Inline function 'kotlin.ULong.and' call
    var tmp$ret$2;
    // Inline function 'kotlin.toULong' call
    var tmp$ret$1;
    // Inline function 'kotlin.math.absoluteValue' call
    tmp$ret$1 = abs(long);
    var tmp0_toULong = tmp$ret$1;
    tmp$ret$2 = _ULong___init__impl__c78o9k(tmp0_toULong);
    var tmp1_and = tmp$ret$2;
    var tmp2_and = this.qm_1;
    tmp$ret$3 = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(tmp1_and).m7(_ULong___get_data__impl__fggpzb(tmp2_and)));
    var tmp3_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$3]));
    tmp$ret$4 = tmp3_ulongArrayOf;
    return tmp$ret$4;
  };
  BigInteger63Arithmetic.prototype.ql = function (int) {
    var tmp$ret$2;
    // Inline function 'kotlin.ulongArrayOf' call
    var tmp$ret$1;
    // Inline function 'kotlin.toULong' call
    var tmp$ret$0;
    // Inline function 'kotlin.math.absoluteValue' call
    var tmp0__get_absoluteValue__nukmtt = toLong(int);
    tmp$ret$0 = abs(tmp0__get_absoluteValue__nukmtt);
    var tmp1_toULong = tmp$ret$0;
    tmp$ret$1 = _ULong___init__impl__c78o9k(tmp1_toULong);
    var tmp2_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$1]));
    tmp$ret$2 = tmp2_ulongArrayOf;
    return tmp$ret$2;
  };
  BigInteger63Arithmetic.prototype.rl = function (short) {
    var tmp$ret$2;
    // Inline function 'kotlin.ulongArrayOf' call
    var tmp$ret$1;
    // Inline function 'kotlin.toULong' call
    var tmp$ret$0;
    // Inline function 'kotlin.math.absoluteValue' call
    var tmp0__get_absoluteValue__nukmtt = short;
    tmp$ret$0 = abs_0(tmp0__get_absoluteValue__nukmtt);
    var tmp1_toULong = tmp$ret$0;
    tmp$ret$1 = _ULong___init__impl__c78o9k(toLong(tmp1_toULong));
    var tmp2_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$1]));
    tmp$ret$2 = tmp2_ulongArrayOf;
    return tmp$ret$2;
  };
  BigInteger63Arithmetic.prototype.sl = function (byte) {
    var tmp$ret$2;
    // Inline function 'kotlin.ulongArrayOf' call
    var tmp$ret$1;
    // Inline function 'kotlin.toULong' call
    var tmp$ret$0;
    // Inline function 'kotlin.math.absoluteValue' call
    var tmp0__get_absoluteValue__nukmtt = byte;
    tmp$ret$0 = abs_0(tmp0__get_absoluteValue__nukmtt);
    var tmp1_toULong = tmp$ret$0;
    tmp$ret$1 = _ULong___init__impl__c78o9k(toLong(tmp1_toULong));
    var tmp2_ulongArrayOf = _ULongArray___init__impl__twm1l3(longArrayOf([tmp$ret$1]));
    tmp$ret$2 = tmp2_ulongArrayOf;
    return tmp$ret$2;
  };
  BigInteger63Arithmetic.$metadata$ = objectMeta('BigInteger63Arithmetic', [BigIntegerArithmetic]);
  var BigInteger63Arithmetic_instance;
  function BigInteger63Arithmetic_getInstance() {
    if (BigInteger63Arithmetic_instance == null)
      new BigInteger63Arithmetic();
    return BigInteger63Arithmetic_instance;
  }
  function toDigit(_this__u8e3s4, base) {
    var tmp0_subject = _this__u8e3s4;
    var tmp;
    if (_Char___init__impl__6a9atx(48) <= tmp0_subject ? tmp0_subject <= _Char___init__impl__6a9atx(57) : false) {
      tmp = Char__toInt_impl_vasixd(Char__minus_impl_a2frrh_0(_this__u8e3s4, 48));
    } else if (_Char___init__impl__6a9atx(97) <= tmp0_subject ? tmp0_subject <= _Char___init__impl__6a9atx(122) : false) {
      tmp = Char__minus_impl_a2frrh(_this__u8e3s4, _Char___init__impl__6a9atx(97)) + 10 | 0;
    } else if (_Char___init__impl__6a9atx(65) <= tmp0_subject ? tmp0_subject <= _Char___init__impl__6a9atx(90) : false) {
      tmp = Char__minus_impl_a2frrh(_this__u8e3s4, _Char___init__impl__6a9atx(65)) + 10 | 0;
    } else if (_Char___init__impl__6a9atx(65313) <= tmp0_subject ? tmp0_subject <= _Char___init__impl__6a9atx(65338) : false) {
      tmp = Char__minus_impl_a2frrh(_this__u8e3s4, _Char___init__impl__6a9atx(65313)) - 10 | 0;
    } else if (_Char___init__impl__6a9atx(65345) <= tmp0_subject ? tmp0_subject <= _Char___init__impl__6a9atx(65370) : false) {
      tmp = Char__minus_impl_a2frrh(_this__u8e3s4, _Char___init__impl__6a9atx(65345)) - 10 | 0;
    } else if (equals(new Char(tmp0_subject), new Char(_Char___init__impl__6a9atx(46)))) {
      throw NumberFormatException_init_$Create$('Invalid digit for radix ' + new Char(_this__u8e3s4) + ' (Possibly a decimal value, which is not supported by BigInteger parser');
    } else {
      throw NumberFormatException_init_$Create$('Invalid digit for radix ' + new Char(_this__u8e3s4));
    }
    var digit = tmp;
    if (digit < 0 ? true : digit >= base) {
      throw NumberFormatException_init_$Create$('' + new Char(_this__u8e3s4) + ' is not a valid digit for number system with base ' + base);
    }
    return digit;
  }
  function ComparisonWorkaround() {
    ComparisonWorkaround_instance = this;
  }
  ComparisonWorkaround.prototype.kl = function (number) {
    return true;
  };
  ComparisonWorkaround.$metadata$ = objectMeta('ComparisonWorkaround');
  var ComparisonWorkaround_instance;
  function ComparisonWorkaround_getInstance() {
    if (ComparisonWorkaround_instance == null)
      new ComparisonWorkaround();
    return ComparisonWorkaround_instance;
  }
  //region block: post-declaration
  Companion.prototype.qh = tryFromFloat$default;
  Companion.prototype.sh = tryFromDouble$default;
  BigDecimal.prototype.wg = plus_1;
  BigDecimal.prototype.xg = minus_0;
  Companion_1.prototype.qh = tryFromFloat$default;
  Companion_1.prototype.sh = tryFromDouble$default;
  BigInteger.prototype.zh = get_isNegative;
  BigInteger.prototype.ai = get_isPositive;
  BigInteger.prototype.di = plus_0;
  BigInteger.prototype.ei = minus;
  BigInteger.prototype.fi = times;
  BigInteger.prototype.gi = div;
  BigInteger.prototype.zg = div_0;
  BigInteger.prototype.b6 = div_1;
  BigInteger.prototype.hi = rem;
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = BigInteger_init_$Create$_0;
  _.$_$.b = Companion_getInstance_2;
  //endregion
  return _;
}));

//# sourceMappingURL=kotlin_com_ionspin_kotlin_bignum.js.map


/***/ }),

/***/ 15:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
  if (true)
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(72)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  else {}
}(this, function (_, kotlin_kotlin) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var interfaceMeta = kotlin_kotlin.$_$.r7;
  var getKClassFromExpression = kotlin_kotlin.$_$.d;
  var classMeta = kotlin_kotlin.$_$.k7;
  var IllegalArgumentException_init_$Init$ = kotlin_kotlin.$_$.j1;
  var captureStack = kotlin_kotlin.$_$.e7;
  var IllegalArgumentException_init_$Init$_0 = kotlin_kotlin.$_$.l1;
  var IllegalArgumentException = kotlin_kotlin.$_$.ma;
  var collectionSizeOrDefault = kotlin_kotlin.$_$.o4;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.q;
  var Unit_getInstance = kotlin_kotlin.$_$.r3;
  var toString = kotlin_kotlin.$_$.r8;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.k1;
  var THROW_CCE = kotlin_kotlin.$_$.ra;
  var isInterface = kotlin_kotlin.$_$.a8;
  var KClass = kotlin_kotlin.$_$.y8;
  var copyToArray = kotlin_kotlin.$_$.e5;
  var Triple = kotlin_kotlin.$_$.sa;
  var getKClass = kotlin_kotlin.$_$.e;
  var Pair = kotlin_kotlin.$_$.pa;
  var Entry = kotlin_kotlin.$_$.d4;
  var LinkedHashMap = kotlin_kotlin.$_$.a4;
  var MutableMap = kotlin_kotlin.$_$.g4;
  var Map = kotlin_kotlin.$_$.e4;
  var HashMap = kotlin_kotlin.$_$.w3;
  var LinkedHashSet = kotlin_kotlin.$_$.b4;
  var MutableSet = kotlin_kotlin.$_$.h4;
  var Set = kotlin_kotlin.$_$.i4;
  var HashSet = kotlin_kotlin.$_$.x3;
  var ArrayList = kotlin_kotlin.$_$.t3;
  var MutableList = kotlin_kotlin.$_$.f4;
  var List = kotlin_kotlin.$_$.c4;
  var Collection = kotlin_kotlin.$_$.u3;
  var Iterator = kotlin_kotlin.$_$.z3;
  var Iterable = kotlin_kotlin.$_$.y3;
  var isBlank = kotlin_kotlin.$_$.j9;
  var equals = kotlin_kotlin.$_$.m7;
  var toList = kotlin_kotlin.$_$.t6;
  var emptyList = kotlin_kotlin.$_$.k5;
  var ArrayList_init_$Create$_0 = kotlin_kotlin.$_$.r;
  var HashSet_init_$Create$ = kotlin_kotlin.$_$.w;
  var toHashSet = kotlin_kotlin.$_$.o6;
  var toBooleanArray = kotlin_kotlin.$_$.n6;
  var withIndex = kotlin_kotlin.$_$.x6;
  var to = kotlin_kotlin.$_$.ib;
  var toMap = kotlin_kotlin.$_$.u6;
  var lazy = kotlin_kotlin.$_$.eb;
  var contentEquals = kotlin_kotlin.$_$.p4;
  var until = kotlin_kotlin.$_$.x8;
  var joinToString$default = kotlin_kotlin.$_$.k;
  var KProperty1 = kotlin_kotlin.$_$.a9;
  var getPropertyCallableRef = kotlin_kotlin.$_$.o7;
  var objectMeta = kotlin_kotlin.$_$.n8;
  var ensureNotNull = kotlin_kotlin.$_$.bb;
  var getStringHashCode = kotlin_kotlin.$_$.p7;
  var Long = kotlin_kotlin.$_$.na;
  var Char = kotlin_kotlin.$_$.ha;
  var toIntOrNull = kotlin_kotlin.$_$.t9;
  var hashCode = kotlin_kotlin.$_$.q7;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.m1;
  var isObject = kotlin_kotlin.$_$.d8;
  var ArrayList_init_$Create$_1 = kotlin_kotlin.$_$.s;
  var HashSet_init_$Create$_0 = kotlin_kotlin.$_$.x;
  var LinkedHashSet_init_$Create$ = kotlin_kotlin.$_$.b1;
  var LinkedHashSet_init_$Create$_0 = kotlin_kotlin.$_$.c1;
  var HashMap_init_$Create$ = kotlin_kotlin.$_$.t;
  var HashMap_init_$Create$_0 = kotlin_kotlin.$_$.u;
  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.z;
  var LinkedHashMap_init_$Create$_0 = kotlin_kotlin.$_$.a1;
  var isArray = kotlin_kotlin.$_$.s7;
  var arrayIterator = kotlin_kotlin.$_$.c7;
  var asList = kotlin_kotlin.$_$.m4;
  var step = kotlin_kotlin.$_$.w8;
  var getValue = kotlin_kotlin.$_$.q5;
  var IntCompanionObject_getInstance = kotlin_kotlin.$_$.h3;
  var _UInt___get_data__impl__f0vqqw = kotlin_kotlin.$_$.d2;
  var UInt = kotlin_kotlin.$_$.va;
  var _UInt___init__impl__l7qpdl = kotlin_kotlin.$_$.c2;
  var Companion_getInstance = kotlin_kotlin.$_$.m3;
  var _ULong___get_data__impl__fggpzb = kotlin_kotlin.$_$.p2;
  var ULong = kotlin_kotlin.$_$.xa;
  var _ULong___init__impl__c78o9k = kotlin_kotlin.$_$.o2;
  var ByteCompanionObject_getInstance = kotlin_kotlin.$_$.e3;
  var _UByte___get_data__impl__jof9qr = kotlin_kotlin.$_$.a2;
  var UByte = kotlin_kotlin.$_$.ta;
  var _UByte___init__impl__g9hnc4 = kotlin_kotlin.$_$.z1;
  var ShortCompanionObject_getInstance = kotlin_kotlin.$_$.i3;
  var _UShort___get_data__impl__g0245 = kotlin_kotlin.$_$.b3;
  var UShort = kotlin_kotlin.$_$.ya;
  var _UShort___init__impl__jigrne = kotlin_kotlin.$_$.a3;
  var HashSet_init_$Create$_1 = kotlin_kotlin.$_$.v;
  var contentHashCode = kotlin_kotlin.$_$.s4;
  var fillArrayVal = kotlin_kotlin.$_$.n7;
  var booleanArray = kotlin_kotlin.$_$.d7;
  var Companion_getInstance_0 = kotlin_kotlin.$_$.l3;
  var isCharArray = kotlin_kotlin.$_$.v7;
  var charArray = kotlin_kotlin.$_$.g7;
  var DoubleCompanionObject_getInstance = kotlin_kotlin.$_$.f3;
  var isDoubleArray = kotlin_kotlin.$_$.x7;
  var FloatCompanionObject_getInstance = kotlin_kotlin.$_$.g3;
  var isFloatArray = kotlin_kotlin.$_$.y7;
  var isLongArray = kotlin_kotlin.$_$.b8;
  var longArray = kotlin_kotlin.$_$.h8;
  var isIntArray = kotlin_kotlin.$_$.z7;
  var isShortArray = kotlin_kotlin.$_$.e8;
  var isByteArray = kotlin_kotlin.$_$.u7;
  var BooleanCompanionObject_getInstance = kotlin_kotlin.$_$.d3;
  var isBooleanArray = kotlin_kotlin.$_$.t7;
  var coerceAtLeast = kotlin_kotlin.$_$.u8;
  var copyOf = kotlin_kotlin.$_$.z4;
  var copyOf_0 = kotlin_kotlin.$_$.b5;
  var copyOf_1 = kotlin_kotlin.$_$.c5;
  var copyOf_2 = kotlin_kotlin.$_$.w4;
  var copyOf_3 = kotlin_kotlin.$_$.d5;
  var copyOf_4 = kotlin_kotlin.$_$.v4;
  var copyOf_5 = kotlin_kotlin.$_$.a5;
  var copyOf_6 = kotlin_kotlin.$_$.x4;
  var Unit = kotlin_kotlin.$_$.za;
  var capitalize = kotlin_kotlin.$_$.c9;
  var trimIndent = kotlin_kotlin.$_$.fa;
  var equals_0 = kotlin_kotlin.$_$.i9;
  var PrimitiveClasses_getInstance = kotlin_kotlin.$_$.k3;
  var StringCompanionObject_getInstance = kotlin_kotlin.$_$.j3;
  var mapOf = kotlin_kotlin.$_$.b6;
  var charSequenceLength = kotlin_kotlin.$_$.i7;
  var last = kotlin_kotlin.$_$.w5;
  var lastOrNull = kotlin_kotlin.$_$.v5;
  var get_lastIndex = kotlin_kotlin.$_$.u5;
  var emptyMap = kotlin_kotlin.$_$.l5;
  var Annotation = kotlin_kotlin.$_$.ga;
  var get_indices = kotlin_kotlin.$_$.s5;
  var IndexOutOfBoundsException_init_$Create$ = kotlin_kotlin.$_$.n1;
  var get_js = kotlin_kotlin.$_$.f8;
  var findAssociatedObject = kotlin_kotlin.$_$.c;
  //endregion
  //region block: pre-declaration
  SealedClassSerializer.prototype = Object.create(AbstractPolymorphicSerializer.prototype);
  SealedClassSerializer.prototype.constructor = SealedClassSerializer;
  SerializationException.prototype = Object.create(IllegalArgumentException.prototype);
  SerializationException.prototype.constructor = SerializationException;
  UnknownFieldException.prototype = Object.create(SerializationException.prototype);
  UnknownFieldException.prototype.constructor = UnknownFieldException;
  MissingFieldException.prototype = Object.create(SerializationException.prototype);
  MissingFieldException.prototype.constructor = MissingFieldException;
  function get_isNullable() {
    return false;
  }
  function get_isInline() {
    return false;
  }
  ENUM.prototype = Object.create(SerialKind.prototype);
  ENUM.prototype.constructor = ENUM;
  PrimitiveKind.prototype = Object.create(SerialKind.prototype);
  PrimitiveKind.prototype.constructor = PrimitiveKind;
  BOOLEAN.prototype = Object.create(PrimitiveKind.prototype);
  BOOLEAN.prototype.constructor = BOOLEAN;
  BYTE.prototype = Object.create(PrimitiveKind.prototype);
  BYTE.prototype.constructor = BYTE;
  CHAR.prototype = Object.create(PrimitiveKind.prototype);
  CHAR.prototype.constructor = CHAR;
  SHORT.prototype = Object.create(PrimitiveKind.prototype);
  SHORT.prototype.constructor = SHORT;
  INT.prototype = Object.create(PrimitiveKind.prototype);
  INT.prototype.constructor = INT;
  LONG.prototype = Object.create(PrimitiveKind.prototype);
  LONG.prototype.constructor = LONG;
  FLOAT.prototype = Object.create(PrimitiveKind.prototype);
  FLOAT.prototype.constructor = FLOAT;
  DOUBLE.prototype = Object.create(PrimitiveKind.prototype);
  DOUBLE.prototype.constructor = DOUBLE;
  STRING.prototype = Object.create(PrimitiveKind.prototype);
  STRING.prototype.constructor = STRING;
  StructureKind.prototype = Object.create(SerialKind.prototype);
  StructureKind.prototype.constructor = StructureKind;
  CLASS.prototype = Object.create(StructureKind.prototype);
  CLASS.prototype.constructor = CLASS;
  LIST.prototype = Object.create(StructureKind.prototype);
  LIST.prototype.constructor = LIST;
  MAP.prototype = Object.create(StructureKind.prototype);
  MAP.prototype.constructor = MAP;
  OBJECT.prototype = Object.create(StructureKind.prototype);
  OBJECT.prototype.constructor = OBJECT;
  PolymorphicKind.prototype = Object.create(SerialKind.prototype);
  PolymorphicKind.prototype.constructor = PolymorphicKind;
  SEALED.prototype = Object.create(PolymorphicKind.prototype);
  SEALED.prototype.constructor = SEALED;
  function decodeSerializableValue(deserializer) {
    return deserializer.or(this);
  }
  function decodeSequentially() {
    return false;
  }
  function decodeCollectionSize(descriptor) {
    return -1;
  }
  function decodeSerializableElement$default(descriptor, index, deserializer, previousValue, $mask0, $handler) {
    if (!(($mask0 & 8) === 0))
      previousValue = null;
    return $handler == null ? this.cu(descriptor, index, deserializer, previousValue) : $handler(descriptor, index, deserializer, previousValue);
  }
  function encodeNotNullMark() {
  }
  function beginCollection(descriptor, collectionSize) {
    return this.rt(descriptor);
  }
  function encodeSerializableValue(serializer, value) {
    serializer.nr(this, value);
  }
  PrimitiveArrayDescriptor.prototype = Object.create(ListLikeDescriptor.prototype);
  PrimitiveArrayDescriptor.prototype.constructor = PrimitiveArrayDescriptor;
  ArrayListClassDesc.prototype = Object.create(ListLikeDescriptor.prototype);
  ArrayListClassDesc.prototype.constructor = ArrayListClassDesc;
  HashSetClassDesc.prototype = Object.create(ListLikeDescriptor.prototype);
  HashSetClassDesc.prototype.constructor = HashSetClassDesc;
  LinkedHashSetClassDesc.prototype = Object.create(ListLikeDescriptor.prototype);
  LinkedHashSetClassDesc.prototype.constructor = LinkedHashSetClassDesc;
  HashMapClassDesc.prototype = Object.create(MapLikeDescriptor.prototype);
  HashMapClassDesc.prototype.constructor = HashMapClassDesc;
  LinkedHashMapClassDesc.prototype = Object.create(MapLikeDescriptor.prototype);
  LinkedHashMapClassDesc.prototype.constructor = LinkedHashMapClassDesc;
  ArrayClassDesc.prototype = Object.create(ListLikeDescriptor.prototype);
  ArrayClassDesc.prototype.constructor = ArrayClassDesc;
  ListLikeSerializer.prototype = Object.create(AbstractCollectionSerializer.prototype);
  ListLikeSerializer.prototype.constructor = ListLikeSerializer;
  PrimitiveArraySerializer.prototype = Object.create(ListLikeSerializer.prototype);
  PrimitiveArraySerializer.prototype.constructor = PrimitiveArraySerializer;
  ArrayListSerializer.prototype = Object.create(ListLikeSerializer.prototype);
  ArrayListSerializer.prototype.constructor = ArrayListSerializer;
  HashSetSerializer.prototype = Object.create(ListLikeSerializer.prototype);
  HashSetSerializer.prototype.constructor = HashSetSerializer;
  LinkedHashSetSerializer.prototype = Object.create(ListLikeSerializer.prototype);
  LinkedHashSetSerializer.prototype.constructor = LinkedHashSetSerializer;
  MapLikeSerializer.prototype = Object.create(AbstractCollectionSerializer.prototype);
  MapLikeSerializer.prototype.constructor = MapLikeSerializer;
  HashMapSerializer.prototype = Object.create(MapLikeSerializer.prototype);
  HashMapSerializer.prototype.constructor = HashMapSerializer;
  LinkedHashMapSerializer.prototype = Object.create(MapLikeSerializer.prototype);
  LinkedHashMapSerializer.prototype.constructor = LinkedHashMapSerializer;
  ReferenceArraySerializer.prototype = Object.create(ListLikeSerializer.prototype);
  ReferenceArraySerializer.prototype.constructor = ReferenceArraySerializer;
  InlineClassDescriptor.prototype = Object.create(PluginGeneratedSerialDescriptor.prototype);
  InlineClassDescriptor.prototype.constructor = InlineClassDescriptor;
  function typeParametersSerializers() {
    return get_EMPTY_SERIALIZER_ARRAY();
  }
  CharArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  CharArraySerializer_0.prototype.constructor = CharArraySerializer_0;
  DoubleArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  DoubleArraySerializer_0.prototype.constructor = DoubleArraySerializer_0;
  FloatArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  FloatArraySerializer_0.prototype.constructor = FloatArraySerializer_0;
  LongArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  LongArraySerializer_0.prototype.constructor = LongArraySerializer_0;
  IntArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  IntArraySerializer_0.prototype.constructor = IntArraySerializer_0;
  ShortArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  ShortArraySerializer_0.prototype.constructor = ShortArraySerializer_0;
  ByteArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  ByteArraySerializer_0.prototype.constructor = ByteArraySerializer_0;
  BooleanArraySerializer_0.prototype = Object.create(PrimitiveArraySerializer.prototype);
  BooleanArraySerializer_0.prototype.constructor = BooleanArraySerializer_0;
  CharArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  CharArrayBuilder.prototype.constructor = CharArrayBuilder;
  DoubleArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  DoubleArrayBuilder.prototype.constructor = DoubleArrayBuilder;
  FloatArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  FloatArrayBuilder.prototype.constructor = FloatArrayBuilder;
  LongArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  LongArrayBuilder.prototype.constructor = LongArrayBuilder;
  IntArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  IntArrayBuilder.prototype.constructor = IntArrayBuilder;
  ShortArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  ShortArrayBuilder.prototype.constructor = ShortArrayBuilder;
  ByteArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  ByteArrayBuilder.prototype.constructor = ByteArrayBuilder;
  BooleanArrayBuilder.prototype = Object.create(PrimitiveArrayBuilder.prototype);
  BooleanArrayBuilder.prototype.constructor = BooleanArrayBuilder;
  NamedValueEncoder.prototype = Object.create(TaggedEncoder.prototype);
  NamedValueEncoder.prototype.constructor = NamedValueEncoder;
  NamedValueDecoder.prototype = Object.create(TaggedDecoder.prototype);
  NamedValueDecoder.prototype.constructor = NamedValueDecoder;
  MapEntrySerializer_0.prototype = Object.create(KeyValueSerializer.prototype);
  MapEntrySerializer_0.prototype.constructor = MapEntrySerializer_0;
  PairSerializer_0.prototype = Object.create(KeyValueSerializer.prototype);
  PairSerializer_0.prototype.constructor = PairSerializer_0;
  SerialModuleImpl.prototype = Object.create(SerializersModule.prototype);
  SerialModuleImpl.prototype.constructor = SerialModuleImpl;
  //endregion
  function KSerializer() {
  }
  KSerializer.$metadata$ = interfaceMeta('KSerializer', [SerializationStrategy, DeserializationStrategy]);
  function DeserializationStrategy() {
  }
  DeserializationStrategy.$metadata$ = interfaceMeta('DeserializationStrategy');
  function SerializationStrategy() {
  }
  SerializationStrategy.$metadata$ = interfaceMeta('SerializationStrategy');
  function findPolymorphicSerializer(_this__u8e3s4, encoder, value) {
    var tmp0_elvis_lhs = _this__u8e3s4.pr(encoder, value);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throwSubtypeNotRegistered(getKClassFromExpression(value), _this__u8e3s4.qr());
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function SealedClassSerializer() {
  }
  SealedClassSerializer.$metadata$ = classMeta('SealedClassSerializer', undefined, undefined, undefined, undefined, AbstractPolymorphicSerializer.prototype);
  function StringFormat() {
  }
  StringFormat.$metadata$ = interfaceMeta('StringFormat', [SerialFormat]);
  function SerialFormat() {
  }
  SerialFormat.$metadata$ = interfaceMeta('SerialFormat');
  function SerializationException_init_$Init$(message, $this) {
    IllegalArgumentException_init_$Init$(message, $this);
    SerializationException.call($this);
    return $this;
  }
  function SerializationException_init_$Create$(message) {
    var tmp = SerializationException_init_$Init$(message, Object.create(SerializationException.prototype));
    captureStack(tmp, SerializationException_init_$Create$);
    return tmp;
  }
  function SerializationException_init_$Init$_0(message, cause, $this) {
    IllegalArgumentException_init_$Init$_0(message, cause, $this);
    SerializationException.call($this);
    return $this;
  }
  function SerializationException() {
    captureStack(this, SerializationException);
  }
  SerializationException.$metadata$ = classMeta('SerializationException', undefined, undefined, undefined, undefined, IllegalArgumentException.prototype);
  function UnknownFieldException_init_$Init$(index, $this) {
    UnknownFieldException.call($this, 'An unknown field for index ' + index);
    return $this;
  }
  function UnknownFieldException_init_$Create$(index) {
    var tmp = UnknownFieldException_init_$Init$(index, Object.create(UnknownFieldException.prototype));
    captureStack(tmp, UnknownFieldException_init_$Create$);
    return tmp;
  }
  function UnknownFieldException(message) {
    SerializationException_init_$Init$(message, this);
    captureStack(this, UnknownFieldException);
  }
  UnknownFieldException.$metadata$ = classMeta('UnknownFieldException', undefined, undefined, undefined, undefined, SerializationException.prototype);
  function MissingFieldException_init_$Init$(fieldNames, serialName, $this) {
    MissingFieldException.call($this, fieldNames.i() === 1 ? "Field '" + fieldNames.l(0) + "' is required for type with serial name '" + serialName + "', but it was missing" : 'Fields ' + fieldNames + " are required for type with serial name '" + serialName + "', but they were missing", null);
    return $this;
  }
  function MissingFieldException_init_$Create$(fieldNames, serialName) {
    var tmp = MissingFieldException_init_$Init$(fieldNames, serialName, Object.create(MissingFieldException.prototype));
    captureStack(tmp, MissingFieldException_init_$Create$);
    return tmp;
  }
  function MissingFieldException(message, cause) {
    SerializationException_init_$Init$_0(message, cause, this);
    captureStack(this, MissingFieldException);
  }
  MissingFieldException.$metadata$ = classMeta('MissingFieldException', undefined, undefined, undefined, undefined, SerializationException.prototype);
  function serializer(_this__u8e3s4, type) {
    var tmp0_elvis_lhs = serializerByKTypeImpl(_this__u8e3s4, type, true);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      platformSpecificSerializerNotRegistered(kclass(type));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function serializerByKTypeImpl(_this__u8e3s4, type, failOnMissingTypeArgSerializer) {
    var rootClass = kclass(type);
    var isNullable = type.cd();
    var tmp$ret$4;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = type.bd();
    var tmp$ret$3;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$2;
      // Inline function 'kotlinx.serialization.serializerByKTypeImpl.<anonymous>' call
      var tmp$ret$1;
      $l$block: {
        // Inline function 'kotlin.requireNotNull' call
        var tmp0_requireNotNull = item.u5_1;
        // Inline function 'kotlin.contracts.contract' call
        if (tmp0_requireNotNull == null) {
          var tmp$ret$0;
          // Inline function 'kotlinx.serialization.serializerByKTypeImpl.<anonymous>.<anonymous>' call
          tmp$ret$0 = 'Star projections in type arguments are not allowed, but had ' + type;
          var message = tmp$ret$0;
          throw IllegalArgumentException_init_$Create$(toString(message));
        } else {
          tmp$ret$1 = tmp0_requireNotNull;
          break $l$block;
        }
      }
      tmp$ret$2 = tmp$ret$1;
      tmp0_mapTo.a(tmp$ret$2);
    }
    tmp$ret$3 = tmp0_mapTo;
    tmp$ret$4 = tmp$ret$3;
    var typeArguments = tmp$ret$4;
    var tmp;
    if (typeArguments.p()) {
      var tmp0_elvis_lhs = serializerOrNull(rootClass);
      tmp = tmp0_elvis_lhs == null ? _this__u8e3s4.tr(rootClass) : tmp0_elvis_lhs;
    } else {
      tmp = builtinSerializer(_this__u8e3s4, typeArguments, rootClass, failOnMissingTypeArgSerializer);
    }
    var tmp1_safe_receiver = tmp;
    var tmp_0;
    if (tmp1_safe_receiver == null) {
      tmp_0 = null;
    } else {
      var tmp$ret$5;
      // Inline function 'kotlinx.serialization.internal.cast' call
      tmp$ret$5 = (!(tmp1_safe_receiver == null) ? isInterface(tmp1_safe_receiver, KSerializer) : false) ? tmp1_safe_receiver : THROW_CCE();
      tmp_0 = tmp$ret$5;
    }
    var result = tmp_0;
    var tmp2_safe_receiver = result;
    return tmp2_safe_receiver == null ? null : nullable(tmp2_safe_receiver, isNullable);
  }
  function serializerOrNull(_this__u8e3s4) {
    var tmp0_elvis_lhs = compiledSerializerImpl(_this__u8e3s4);
    return tmp0_elvis_lhs == null ? builtinSerializerOrNull(_this__u8e3s4) : tmp0_elvis_lhs;
  }
  function builtinSerializer(_this__u8e3s4, typeArguments, rootClass, failOnMissingTypeArgSerializer) {
    var tmp;
    if (failOnMissingTypeArgSerializer) {
      var tmp$ret$1;
      // Inline function 'kotlin.collections.map' call
      var tmp$ret$0;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(typeArguments, 10));
      var tmp0_iterator = typeArguments.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        tmp0_mapTo.a(serializer(_this__u8e3s4, item));
      }
      tmp$ret$0 = tmp0_mapTo;
      tmp$ret$1 = tmp$ret$0;
      tmp = tmp$ret$1;
    } else {
      var tmp$ret$4;
      // Inline function 'kotlin.collections.map' call
      var tmp$ret$3;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$(collectionSizeOrDefault(typeArguments, 10));
      var tmp0_iterator_0 = typeArguments.f();
      while (tmp0_iterator_0.g()) {
        var item_0 = tmp0_iterator_0.h();
        var tmp$ret$2;
        // Inline function 'kotlinx.serialization.builtinSerializer.<anonymous>' call
        var tmp0_elvis_lhs = serializerOrNull_0(_this__u8e3s4, item_0);
        var tmp_0;
        if (tmp0_elvis_lhs == null) {
          return null;
        } else {
          tmp_0 = tmp0_elvis_lhs;
        }
        tmp$ret$2 = tmp_0;
        tmp0_mapTo_0.a(tmp$ret$2);
      }
      tmp$ret$3 = tmp0_mapTo_0;
      tmp$ret$4 = tmp$ret$3;
      tmp = tmp$ret$4;
    }
    var serializers = tmp;
    var tmp0_subject = rootClass;
    var tmp_1;
    if (((tmp0_subject.equals(getKClass(Collection)) ? true : tmp0_subject.equals(getKClass(List))) ? true : tmp0_subject.equals(getKClass(MutableList))) ? true : tmp0_subject.equals(getKClass(ArrayList))) {
      tmp_1 = new ArrayListSerializer(serializers.l(0));
    } else if (tmp0_subject.equals(getKClass(HashSet))) {
      tmp_1 = new HashSetSerializer(serializers.l(0));
    } else if ((tmp0_subject.equals(getKClass(Set)) ? true : tmp0_subject.equals(getKClass(MutableSet))) ? true : tmp0_subject.equals(getKClass(LinkedHashSet))) {
      tmp_1 = new LinkedHashSetSerializer(serializers.l(0));
    } else if (tmp0_subject.equals(getKClass(HashMap))) {
      tmp_1 = new HashMapSerializer(serializers.l(0), serializers.l(1));
    } else if ((tmp0_subject.equals(getKClass(Map)) ? true : tmp0_subject.equals(getKClass(MutableMap))) ? true : tmp0_subject.equals(getKClass(LinkedHashMap))) {
      tmp_1 = new LinkedHashMapSerializer(serializers.l(0), serializers.l(1));
    } else if (tmp0_subject.equals(getKClass(Entry))) {
      tmp_1 = MapEntrySerializer(serializers.l(0), serializers.l(1));
    } else if (tmp0_subject.equals(getKClass(Pair))) {
      tmp_1 = PairSerializer(serializers.l(0), serializers.l(1));
    } else if (tmp0_subject.equals(getKClass(Triple))) {
      tmp_1 = TripleSerializer(serializers.l(0), serializers.l(1), serializers.l(2));
    } else {
      if (isReferenceArray(rootClass)) {
        var tmp$ret$5;
        // Inline function 'kotlinx.serialization.internal.cast' call
        var tmp_2 = typeArguments.l(0).ad();
        var tmp0_cast = ArraySerializer((!(tmp_2 == null) ? isInterface(tmp_2, KClass) : false) ? tmp_2 : THROW_CCE(), serializers.l(0));
        tmp$ret$5 = isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE();
        return tmp$ret$5;
      }
      var tmp$ret$6;
      // Inline function 'kotlin.collections.toTypedArray' call
      tmp$ret$6 = copyToArray(serializers);
      tmp_1 = constructSerializerForGivenTypeArgs(rootClass, tmp$ret$6.slice());
    }
    return tmp_1;
  }
  function nullable(_this__u8e3s4, shouldBeNullable) {
    if (shouldBeNullable)
      return get_nullable(_this__u8e3s4);
    return isInterface(_this__u8e3s4, KSerializer) ? _this__u8e3s4 : THROW_CCE();
  }
  function serializerOrNull_0(_this__u8e3s4, type) {
    return serializerByKTypeImpl(_this__u8e3s4, type, false);
  }
  function serializer_0(type) {
    return serializer(get_EmptySerializersModule(), type);
  }
  function serializer_1(_this__u8e3s4) {
    return StringSerializer_getInstance();
  }
  function serializer_2(_this__u8e3s4) {
    return CharSerializer_getInstance();
  }
  function CharArraySerializer() {
    return CharArraySerializer_getInstance();
  }
  function serializer_3(_this__u8e3s4) {
    return DoubleSerializer_getInstance();
  }
  function DoubleArraySerializer() {
    return DoubleArraySerializer_getInstance();
  }
  function serializer_4(_this__u8e3s4) {
    return FloatSerializer_getInstance();
  }
  function FloatArraySerializer() {
    return FloatArraySerializer_getInstance();
  }
  function serializer_5(_this__u8e3s4) {
    return LongSerializer_getInstance();
  }
  function LongArraySerializer() {
    return LongArraySerializer_getInstance();
  }
  function serializer_6(_this__u8e3s4) {
    return IntSerializer_getInstance();
  }
  function IntArraySerializer() {
    return IntArraySerializer_getInstance();
  }
  function serializer_7(_this__u8e3s4) {
    return ShortSerializer_getInstance();
  }
  function ShortArraySerializer() {
    return ShortArraySerializer_getInstance();
  }
  function serializer_8(_this__u8e3s4) {
    return ByteSerializer_getInstance();
  }
  function ByteArraySerializer() {
    return ByteArraySerializer_getInstance();
  }
  function serializer_9(_this__u8e3s4) {
    return BooleanSerializer_getInstance();
  }
  function BooleanArraySerializer() {
    return BooleanArraySerializer_getInstance();
  }
  function serializer_10(_this__u8e3s4) {
    return UnitSerializer_getInstance();
  }
  function serializer_11(_this__u8e3s4) {
    return UIntSerializer_getInstance();
  }
  function serializer_12(_this__u8e3s4) {
    return ULongSerializer_getInstance();
  }
  function serializer_13(_this__u8e3s4) {
    return UByteSerializer_getInstance();
  }
  function serializer_14(_this__u8e3s4) {
    return UShortSerializer_getInstance();
  }
  function MapEntrySerializer(keySerializer, valueSerializer) {
    return new MapEntrySerializer_0(keySerializer, valueSerializer);
  }
  function PairSerializer(keySerializer, valueSerializer) {
    return new PairSerializer_0(keySerializer, valueSerializer);
  }
  function TripleSerializer(aSerializer, bSerializer, cSerializer) {
    return new TripleSerializer_0(aSerializer, bSerializer, cSerializer);
  }
  function ArraySerializer(kClass, elementSerializer) {
    return new ReferenceArraySerializer(kClass, elementSerializer);
  }
  function get_nullable(_this__u8e3s4) {
    var tmp;
    if (_this__u8e3s4.mr().ur()) {
      tmp = isInterface(_this__u8e3s4, KSerializer) ? _this__u8e3s4 : THROW_CCE();
    } else {
      tmp = new NullableSerializer(_this__u8e3s4);
    }
    return tmp;
  }
  function ListSerializer(elementSerializer) {
    return new ArrayListSerializer(elementSerializer);
  }
  function MapSerializer(keySerializer, valueSerializer) {
    return new LinkedHashMapSerializer(keySerializer, valueSerializer);
  }
  function SerialDescriptor() {
  }
  SerialDescriptor.$metadata$ = interfaceMeta('SerialDescriptor');
  function get_elementDescriptors(_this__u8e3s4) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.Iterable' call
    tmp$ret$0 = new _no_name_provided__qut3iv(_this__u8e3s4);
    return tmp$ret$0;
  }
  function elementDescriptors$1$1($this_elementDescriptors) {
    this.ds_1 = $this_elementDescriptors;
    this.cs_1 = $this_elementDescriptors.yr();
  }
  elementDescriptors$1$1.prototype.g = function () {
    return this.cs_1 > 0;
  };
  elementDescriptors$1$1.prototype.h = function () {
    var tmp = this.ds_1.yr();
    var tmp0_this = this;
    var tmp1 = tmp0_this.cs_1;
    tmp0_this.cs_1 = tmp1 - 1 | 0;
    return this.ds_1.bs(tmp - tmp1 | 0);
  };
  elementDescriptors$1$1.$metadata$ = classMeta(undefined, [Iterator]);
  function _no_name_provided__qut3iv($this_elementDescriptors) {
    this.es_1 = $this_elementDescriptors;
  }
  _no_name_provided__qut3iv.prototype.f = function () {
    var tmp$ret$0;
    // Inline function 'kotlinx.serialization.descriptors.<get-elementDescriptors>.<anonymous>' call
    tmp$ret$0 = new elementDescriptors$1$1(this.es_1);
    return tmp$ret$0;
  };
  _no_name_provided__qut3iv.$metadata$ = classMeta(undefined, [Iterable]);
  function buildSerialDescriptor(serialName, kind, typeParameters, builder) {
    // Inline function 'kotlin.require' call
    var tmp$ret$0;
    // Inline function 'kotlin.text.isNotBlank' call
    tmp$ret$0 = !isBlank(serialName);
    var tmp0_require = tmp$ret$0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$1;
      // Inline function 'kotlinx.serialization.descriptors.buildSerialDescriptor.<anonymous>' call
      tmp$ret$1 = 'Blank serial names are prohibited';
      var message = tmp$ret$1;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.require' call
    var tmp1_require = !equals(kind, CLASS_getInstance());
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp1_require) {
      var tmp$ret$2;
      // Inline function 'kotlinx.serialization.descriptors.buildSerialDescriptor.<anonymous>' call
      tmp$ret$2 = "For StructureKind.CLASS please use 'buildClassSerialDescriptor' instead";
      var message_0 = tmp$ret$2;
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
    var sdBuilder = new ClassSerialDescriptorBuilder(serialName);
    builder(sdBuilder);
    return new SerialDescriptorImpl(serialName, kind, sdBuilder.is_1.i(), toList(typeParameters), sdBuilder);
  }
  function buildSerialDescriptor$default(serialName, kind, typeParameters, builder, $mask0, $handler) {
    if (!(($mask0 & 8) === 0)) {
      builder = buildSerialDescriptor$lambda;
    }
    return buildSerialDescriptor(serialName, kind, typeParameters, builder);
  }
  function ClassSerialDescriptorBuilder(serialName) {
    this.fs_1 = serialName;
    this.gs_1 = false;
    this.hs_1 = emptyList();
    this.is_1 = ArrayList_init_$Create$_0();
    this.js_1 = HashSet_init_$Create$();
    this.ks_1 = ArrayList_init_$Create$_0();
    this.ls_1 = ArrayList_init_$Create$_0();
    this.ms_1 = ArrayList_init_$Create$_0();
  }
  ClassSerialDescriptorBuilder.prototype.ns = function (elementName, descriptor, annotations, isOptional) {
    // Inline function 'kotlin.require' call
    var tmp0_require = this.js_1.a(elementName);
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlinx.serialization.descriptors.ClassSerialDescriptorBuilder.element.<anonymous>' call
      tmp$ret$0 = "Element with name '" + elementName + "' is already registered";
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    var tmp0_this = this;
    // Inline function 'kotlin.collections.plusAssign' call
    var tmp1_plusAssign = tmp0_this.is_1;
    tmp1_plusAssign.a(elementName);
    var tmp1_this = this;
    // Inline function 'kotlin.collections.plusAssign' call
    var tmp2_plusAssign = tmp1_this.ks_1;
    tmp2_plusAssign.a(descriptor);
    var tmp2_this = this;
    // Inline function 'kotlin.collections.plusAssign' call
    var tmp3_plusAssign = tmp2_this.ls_1;
    tmp3_plusAssign.a(annotations);
    var tmp3_this = this;
    // Inline function 'kotlin.collections.plusAssign' call
    var tmp4_plusAssign = tmp3_this.ms_1;
    tmp4_plusAssign.a(isOptional);
  };
  ClassSerialDescriptorBuilder.prototype.os = function (elementName, descriptor, annotations, isOptional, $mask0, $handler) {
    if (!(($mask0 & 4) === 0))
      annotations = emptyList();
    if (!(($mask0 & 8) === 0))
      isOptional = false;
    return this.ns(elementName, descriptor, annotations, isOptional);
  };
  ClassSerialDescriptorBuilder.$metadata$ = classMeta('ClassSerialDescriptorBuilder');
  function _get__hashCode__tgwhef($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = _hashCode$factory();
    tmp$ret$0 = $this.at_1.f1();
    return tmp$ret$0;
  }
  function SerialDescriptorImpl$_hashCode$delegate$lambda(this$0) {
    return function () {
      return hashCodeImpl(this$0, this$0.zs_1);
    };
  }
  function SerialDescriptorImpl$toString$lambda(this$0) {
    return function (it) {
      return this$0.zr(it) + ': ' + this$0.bs(it).vr();
    };
  }
  function SerialDescriptorImpl(serialName, kind, elementsCount, typeParameters, builder) {
    this.ps_1 = serialName;
    this.qs_1 = kind;
    this.rs_1 = elementsCount;
    this.ss_1 = builder.hs_1;
    this.ts_1 = toHashSet(builder.is_1);
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.toTypedArray' call
    var tmp0_toTypedArray = builder.is_1;
    tmp$ret$0 = copyToArray(tmp0_toTypedArray);
    tmp.us_1 = tmp$ret$0;
    this.vs_1 = compactArray(builder.ks_1);
    var tmp_0 = this;
    var tmp$ret$1;
    // Inline function 'kotlin.collections.toTypedArray' call
    var tmp0_toTypedArray_0 = builder.ls_1;
    tmp$ret$1 = copyToArray(tmp0_toTypedArray_0);
    tmp_0.ws_1 = tmp$ret$1;
    this.xs_1 = toBooleanArray(builder.ms_1);
    var tmp_1 = this;
    var tmp$ret$4;
    // Inline function 'kotlin.collections.map' call
    var tmp0_map = withIndex(this.us_1);
    var tmp$ret$3;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$(collectionSizeOrDefault(tmp0_map, 10));
    var tmp0_iterator = tmp0_map.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      var tmp$ret$2;
      // Inline function 'kotlinx.serialization.descriptors.SerialDescriptorImpl.name2Index.<anonymous>' call
      tmp$ret$2 = to(item.y3_1, item.x3_1);
      tmp0_mapTo.a(tmp$ret$2);
    }
    tmp$ret$3 = tmp0_mapTo;
    tmp$ret$4 = tmp$ret$3;
    tmp_1.ys_1 = toMap(tmp$ret$4);
    this.zs_1 = compactArray(typeParameters);
    var tmp_2 = this;
    tmp_2.at_1 = lazy(SerialDescriptorImpl$_hashCode$delegate$lambda(this));
  }
  SerialDescriptorImpl.prototype.vr = function () {
    return this.ps_1;
  };
  SerialDescriptorImpl.prototype.wr = function () {
    return this.qs_1;
  };
  SerialDescriptorImpl.prototype.yr = function () {
    return this.rs_1;
  };
  SerialDescriptorImpl.prototype.bt = function () {
    return this.ts_1;
  };
  SerialDescriptorImpl.prototype.zr = function (index) {
    return getChecked(this.us_1, index);
  };
  SerialDescriptorImpl.prototype.as = function (name) {
    var tmp0_elvis_lhs = this.ys_1.t(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      Companion_getInstance_1();
      tmp = -3;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  SerialDescriptorImpl.prototype.bs = function (index) {
    return getChecked(this.vs_1, index);
  };
  SerialDescriptorImpl.prototype.equals = function (other) {
    var tmp$ret$0;
    $l$block_5: {
      // Inline function 'kotlinx.serialization.internal.equalsImpl' call
      if (this === other) {
        tmp$ret$0 = true;
        break $l$block_5;
      }
      if (!(other instanceof SerialDescriptorImpl)) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.vr() === other.vr())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var tmp$ret$1;
      // Inline function 'kotlinx.serialization.descriptors.SerialDescriptorImpl.equals.<anonymous>' call
      var tmp0__anonymous__q1qw7t = other;
      tmp$ret$1 = contentEquals(this.zs_1, tmp0__anonymous__q1qw7t.zs_1);
      if (!tmp$ret$1) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.yr() === other.yr())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var inductionVariable = 0;
      var last = this.yr();
      if (inductionVariable < last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (!(this.bs(index).vr() === other.bs(index).vr())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
          if (!equals(this.bs(index).wr(), other.bs(index).wr())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
        }
         while (inductionVariable < last);
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  SerialDescriptorImpl.prototype.hashCode = function () {
    return _get__hashCode__tgwhef(this);
  };
  SerialDescriptorImpl.prototype.toString = function () {
    var tmp = until(0, this.rs_1);
    var tmp_0 = this.ps_1 + '(';
    return joinToString$default(tmp, ', ', tmp_0, ')', 0, null, SerialDescriptorImpl$toString$lambda(this), 24, null);
  };
  SerialDescriptorImpl.$metadata$ = classMeta('SerialDescriptorImpl', [SerialDescriptor, CachedNames]);
  function buildClassSerialDescriptor(serialName, typeParameters, builderAction) {
    // Inline function 'kotlin.require' call
    var tmp$ret$0;
    // Inline function 'kotlin.text.isNotBlank' call
    tmp$ret$0 = !isBlank(serialName);
    var tmp0_require = tmp$ret$0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$1;
      // Inline function 'kotlinx.serialization.descriptors.buildClassSerialDescriptor.<anonymous>' call
      tmp$ret$1 = 'Blank serial names are prohibited';
      var message = tmp$ret$1;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    var sdBuilder = new ClassSerialDescriptorBuilder(serialName);
    builderAction(sdBuilder);
    return new SerialDescriptorImpl(serialName, CLASS_getInstance(), sdBuilder.is_1.i(), toList(typeParameters), sdBuilder);
  }
  function buildClassSerialDescriptor$default(serialName, typeParameters, builderAction, $mask0, $handler) {
    if (!(($mask0 & 4) === 0)) {
      builderAction = buildClassSerialDescriptor$lambda;
    }
    return buildClassSerialDescriptor(serialName, typeParameters, builderAction);
  }
  function PrimitiveSerialDescriptor(serialName, kind) {
    // Inline function 'kotlin.require' call
    var tmp$ret$0;
    // Inline function 'kotlin.text.isNotBlank' call
    tmp$ret$0 = !isBlank(serialName);
    var tmp0_require = tmp$ret$0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$1;
      // Inline function 'kotlinx.serialization.descriptors.PrimitiveSerialDescriptor.<anonymous>' call
      tmp$ret$1 = 'Blank serial names are prohibited';
      var message = tmp$ret$1;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    return PrimitiveDescriptorSafe(serialName, kind);
  }
  function buildSerialDescriptor$lambda($this$null) {
    return Unit_getInstance();
  }
  function buildClassSerialDescriptor$lambda($this$null) {
    return Unit_getInstance();
  }
  function _hashCode$factory() {
    return getPropertyCallableRef('_hashCode', 1, KProperty1, function (receiver) {
      return _get__hashCode__tgwhef(receiver);
    }, null);
  }
  function ENUM() {
    ENUM_instance = this;
    SerialKind.call(this);
  }
  ENUM.$metadata$ = objectMeta('ENUM', undefined, undefined, undefined, undefined, SerialKind.prototype);
  var ENUM_instance;
  function ENUM_getInstance() {
    if (ENUM_instance == null)
      new ENUM();
    return ENUM_instance;
  }
  function SerialKind() {
  }
  SerialKind.prototype.toString = function () {
    return ensureNotNull(getKClassFromExpression(this).qc());
  };
  SerialKind.prototype.hashCode = function () {
    return getStringHashCode(this.toString());
  };
  SerialKind.$metadata$ = classMeta('SerialKind');
  function BOOLEAN() {
    BOOLEAN_instance = this;
    PrimitiveKind.call(this);
  }
  BOOLEAN.$metadata$ = objectMeta('BOOLEAN', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var BOOLEAN_instance;
  function BOOLEAN_getInstance() {
    if (BOOLEAN_instance == null)
      new BOOLEAN();
    return BOOLEAN_instance;
  }
  function BYTE() {
    BYTE_instance = this;
    PrimitiveKind.call(this);
  }
  BYTE.$metadata$ = objectMeta('BYTE', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var BYTE_instance;
  function BYTE_getInstance() {
    if (BYTE_instance == null)
      new BYTE();
    return BYTE_instance;
  }
  function CHAR() {
    CHAR_instance = this;
    PrimitiveKind.call(this);
  }
  CHAR.$metadata$ = objectMeta('CHAR', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var CHAR_instance;
  function CHAR_getInstance() {
    if (CHAR_instance == null)
      new CHAR();
    return CHAR_instance;
  }
  function SHORT() {
    SHORT_instance = this;
    PrimitiveKind.call(this);
  }
  SHORT.$metadata$ = objectMeta('SHORT', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var SHORT_instance;
  function SHORT_getInstance() {
    if (SHORT_instance == null)
      new SHORT();
    return SHORT_instance;
  }
  function INT() {
    INT_instance = this;
    PrimitiveKind.call(this);
  }
  INT.$metadata$ = objectMeta('INT', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var INT_instance;
  function INT_getInstance() {
    if (INT_instance == null)
      new INT();
    return INT_instance;
  }
  function LONG() {
    LONG_instance = this;
    PrimitiveKind.call(this);
  }
  LONG.$metadata$ = objectMeta('LONG', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var LONG_instance;
  function LONG_getInstance() {
    if (LONG_instance == null)
      new LONG();
    return LONG_instance;
  }
  function FLOAT() {
    FLOAT_instance = this;
    PrimitiveKind.call(this);
  }
  FLOAT.$metadata$ = objectMeta('FLOAT', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var FLOAT_instance;
  function FLOAT_getInstance() {
    if (FLOAT_instance == null)
      new FLOAT();
    return FLOAT_instance;
  }
  function DOUBLE() {
    DOUBLE_instance = this;
    PrimitiveKind.call(this);
  }
  DOUBLE.$metadata$ = objectMeta('DOUBLE', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var DOUBLE_instance;
  function DOUBLE_getInstance() {
    if (DOUBLE_instance == null)
      new DOUBLE();
    return DOUBLE_instance;
  }
  function STRING() {
    STRING_instance = this;
    PrimitiveKind.call(this);
  }
  STRING.$metadata$ = objectMeta('STRING', undefined, undefined, undefined, undefined, PrimitiveKind.prototype);
  var STRING_instance;
  function STRING_getInstance() {
    if (STRING_instance == null)
      new STRING();
    return STRING_instance;
  }
  function PrimitiveKind() {
    SerialKind.call(this);
  }
  PrimitiveKind.$metadata$ = classMeta('PrimitiveKind', undefined, undefined, undefined, undefined, SerialKind.prototype);
  function CLASS() {
    CLASS_instance = this;
    StructureKind.call(this);
  }
  CLASS.$metadata$ = objectMeta('CLASS', undefined, undefined, undefined, undefined, StructureKind.prototype);
  var CLASS_instance;
  function CLASS_getInstance() {
    if (CLASS_instance == null)
      new CLASS();
    return CLASS_instance;
  }
  function LIST() {
    LIST_instance = this;
    StructureKind.call(this);
  }
  LIST.$metadata$ = objectMeta('LIST', undefined, undefined, undefined, undefined, StructureKind.prototype);
  var LIST_instance;
  function LIST_getInstance() {
    if (LIST_instance == null)
      new LIST();
    return LIST_instance;
  }
  function MAP() {
    MAP_instance = this;
    StructureKind.call(this);
  }
  MAP.$metadata$ = objectMeta('MAP', undefined, undefined, undefined, undefined, StructureKind.prototype);
  var MAP_instance;
  function MAP_getInstance() {
    if (MAP_instance == null)
      new MAP();
    return MAP_instance;
  }
  function OBJECT() {
    OBJECT_instance = this;
    StructureKind.call(this);
  }
  OBJECT.$metadata$ = objectMeta('OBJECT', undefined, undefined, undefined, undefined, StructureKind.prototype);
  var OBJECT_instance;
  function OBJECT_getInstance() {
    if (OBJECT_instance == null)
      new OBJECT();
    return OBJECT_instance;
  }
  function StructureKind() {
    SerialKind.call(this);
  }
  StructureKind.$metadata$ = classMeta('StructureKind', undefined, undefined, undefined, undefined, SerialKind.prototype);
  function SEALED() {
    SEALED_instance = this;
    PolymorphicKind.call(this);
  }
  SEALED.$metadata$ = objectMeta('SEALED', undefined, undefined, undefined, undefined, PolymorphicKind.prototype);
  var SEALED_instance;
  function SEALED_getInstance() {
    if (SEALED_instance == null)
      new SEALED();
    return SEALED_instance;
  }
  function PolymorphicKind() {
    SerialKind.call(this);
  }
  PolymorphicKind.$metadata$ = classMeta('PolymorphicKind', undefined, undefined, undefined, undefined, SerialKind.prototype);
  function AbstractDecoder() {
  }
  AbstractDecoder.prototype.ct = function () {
    throw SerializationException_init_$Create$('' + getKClassFromExpression(this) + " can't retrieve untyped values");
  };
  AbstractDecoder.prototype.dt = function () {
    return true;
  };
  AbstractDecoder.prototype.et = function () {
    return null;
  };
  AbstractDecoder.prototype.ft = function () {
    var tmp = this.ct();
    return typeof tmp === 'boolean' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.gt = function () {
    var tmp = this.ct();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.ht = function () {
    var tmp = this.ct();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.it = function () {
    var tmp = this.ct();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.jt = function () {
    var tmp = this.ct();
    return tmp instanceof Long ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.kt = function () {
    var tmp = this.ct();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.lt = function () {
    var tmp = this.ct();
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.mt = function () {
    var tmp = this.ct();
    return tmp instanceof Char ? tmp.q1_1 : THROW_CCE();
  };
  AbstractDecoder.prototype.nt = function () {
    var tmp = this.ct();
    return typeof tmp === 'string' ? tmp : THROW_CCE();
  };
  AbstractDecoder.prototype.ot = function (inlineDescriptor) {
    return this;
  };
  AbstractDecoder.prototype.pt = function (deserializer, previousValue) {
    return this.qt(deserializer);
  };
  AbstractDecoder.prototype.rt = function (descriptor) {
    return this;
  };
  AbstractDecoder.prototype.st = function (descriptor) {
  };
  AbstractDecoder.prototype.tt = function (descriptor, index) {
    return this.ft();
  };
  AbstractDecoder.prototype.ut = function (descriptor, index) {
    return this.gt();
  };
  AbstractDecoder.prototype.vt = function (descriptor, index) {
    return this.ht();
  };
  AbstractDecoder.prototype.wt = function (descriptor, index) {
    return this.it();
  };
  AbstractDecoder.prototype.xt = function (descriptor, index) {
    return this.jt();
  };
  AbstractDecoder.prototype.yt = function (descriptor, index) {
    return this.kt();
  };
  AbstractDecoder.prototype.zt = function (descriptor, index) {
    return this.lt();
  };
  AbstractDecoder.prototype.au = function (descriptor, index) {
    return this.mt();
  };
  AbstractDecoder.prototype.bu = function (descriptor, index) {
    return this.nt();
  };
  AbstractDecoder.prototype.cu = function (descriptor, index, deserializer, previousValue) {
    return this.pt(deserializer, previousValue);
  };
  AbstractDecoder.$metadata$ = classMeta('AbstractDecoder', [Decoder, CompositeDecoder]);
  function AbstractEncoder() {
  }
  AbstractEncoder.prototype.rt = function (descriptor) {
    return this;
  };
  AbstractEncoder.prototype.st = function (descriptor) {
  };
  AbstractEncoder.prototype.hu = function (descriptor, index) {
    return true;
  };
  AbstractEncoder.prototype.iu = function (value) {
    throw SerializationException_init_$Create$('Non-serializable ' + getKClassFromExpression(value) + ' is not supported by ' + getKClassFromExpression(this) + ' encoder');
  };
  AbstractEncoder.prototype.ju = function () {
    throw SerializationException_init_$Create$("'null' is not supported by default");
  };
  AbstractEncoder.prototype.ku = function (value) {
    return this.iu(value);
  };
  AbstractEncoder.prototype.lu = function (value) {
    return this.iu(value);
  };
  AbstractEncoder.prototype.mu = function (value) {
    return this.iu(value);
  };
  AbstractEncoder.prototype.nu = function (value) {
    return this.iu(value);
  };
  AbstractEncoder.prototype.ou = function (value) {
    return this.iu(value);
  };
  AbstractEncoder.prototype.pu = function (value) {
    return this.iu(value);
  };
  AbstractEncoder.prototype.qu = function (value) {
    return this.iu(value);
  };
  AbstractEncoder.prototype.ru = function (value) {
    return this.iu(new Char(value));
  };
  AbstractEncoder.prototype.su = function (value) {
    return this.iu(value);
  };
  AbstractEncoder.prototype.tu = function (inlineDescriptor) {
    return this;
  };
  AbstractEncoder.prototype.uu = function (descriptor, index, value) {
    if (this.hu(descriptor, index)) {
      this.ku(value);
    }
  };
  AbstractEncoder.prototype.vu = function (descriptor, index, value) {
    if (this.hu(descriptor, index)) {
      this.lu(value);
    }
  };
  AbstractEncoder.prototype.wu = function (descriptor, index, value) {
    if (this.hu(descriptor, index)) {
      this.mu(value);
    }
  };
  AbstractEncoder.prototype.xu = function (descriptor, index, value) {
    if (this.hu(descriptor, index)) {
      this.nu(value);
    }
  };
  AbstractEncoder.prototype.yu = function (descriptor, index, value) {
    if (this.hu(descriptor, index)) {
      this.ou(value);
    }
  };
  AbstractEncoder.prototype.zu = function (descriptor, index, value) {
    if (this.hu(descriptor, index)) {
      this.pu(value);
    }
  };
  AbstractEncoder.prototype.av = function (descriptor, index, value) {
    if (this.hu(descriptor, index)) {
      this.qu(value);
    }
  };
  AbstractEncoder.prototype.bv = function (descriptor, index, value) {
    if (this.hu(descriptor, index)) {
      this.ru(value);
    }
  };
  AbstractEncoder.prototype.cv = function (descriptor, index, value) {
    if (this.hu(descriptor, index)) {
      this.su(value);
    }
  };
  AbstractEncoder.prototype.dv = function (descriptor, index, serializer, value) {
    if (this.hu(descriptor, index)) {
      this.ev(serializer, value);
    }
  };
  AbstractEncoder.$metadata$ = classMeta('AbstractEncoder', [Encoder, CompositeEncoder]);
  function Decoder() {
  }
  Decoder.$metadata$ = interfaceMeta('Decoder');
  function Companion() {
    Companion_instance = this;
    this.hv_1 = -1;
    this.iv_1 = -3;
  }
  Companion.$metadata$ = objectMeta('Companion');
  var Companion_instance;
  function Companion_getInstance_1() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function CompositeDecoder() {
  }
  CompositeDecoder.$metadata$ = interfaceMeta('CompositeDecoder');
  function Encoder() {
  }
  Encoder.$metadata$ = interfaceMeta('Encoder');
  function CompositeEncoder() {
  }
  CompositeEncoder.$metadata$ = interfaceMeta('CompositeEncoder');
  function AbstractPolymorphicSerializer() {
  }
  AbstractPolymorphicSerializer.prototype.jv = function (decoder, klassName) {
    return decoder.sr().kv(this.qr(), klassName);
  };
  AbstractPolymorphicSerializer.prototype.pr = function (encoder, value) {
    return encoder.sr().lv(this.qr(), value);
  };
  AbstractPolymorphicSerializer.$metadata$ = classMeta('AbstractPolymorphicSerializer', [KSerializer]);
  function throwSubtypeNotRegistered(subClass, baseClass) {
    var tmp0_elvis_lhs = subClass.qc();
    throwSubtypeNotRegistered_0(tmp0_elvis_lhs == null ? '' + subClass : tmp0_elvis_lhs, baseClass);
  }
  function throwSubtypeNotRegistered_0(subClassName, baseClass) {
    var scope = "in the scope of '" + baseClass.qc() + "'";
    throw SerializationException_init_$Create$(subClassName == null ? 'Class discriminator was missing and no default polymorphic serializers were registered ' + scope : "Class '" + subClassName + "' is not registered for polymorphic serialization " + scope + '.\n' + "Mark the base class as 'sealed' or register the serializer explicitly.");
  }
  function CachedNames() {
  }
  CachedNames.$metadata$ = interfaceMeta('CachedNames');
  function PrimitiveArrayDescriptor(primitive) {
    ListLikeDescriptor.call(this, primitive);
    this.ov_1 = primitive.vr() + 'Array';
  }
  PrimitiveArrayDescriptor.prototype.vr = function () {
    return this.ov_1;
  };
  PrimitiveArrayDescriptor.$metadata$ = classMeta('PrimitiveArrayDescriptor', undefined, undefined, undefined, undefined, ListLikeDescriptor.prototype);
  function ListLikeDescriptor(elementDescriptor) {
    this.pv_1 = elementDescriptor;
    this.qv_1 = 1;
  }
  ListLikeDescriptor.prototype.wr = function () {
    return LIST_getInstance();
  };
  ListLikeDescriptor.prototype.yr = function () {
    return this.qv_1;
  };
  ListLikeDescriptor.prototype.zr = function (index) {
    return index.toString();
  };
  ListLikeDescriptor.prototype.as = function (name) {
    var tmp0_elvis_lhs = toIntOrNull(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalArgumentException_init_$Create$(name + ' is not a valid list index');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  ListLikeDescriptor.prototype.bs = function (index) {
    // Inline function 'kotlin.require' call
    var tmp0_require = index >= 0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlinx.serialization.internal.ListLikeDescriptor.getElementDescriptor.<anonymous>' call
      tmp$ret$0 = 'Illegal index ' + index + ', ' + this.vr() + ' expects only non-negative indices';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    return this.pv_1;
  };
  ListLikeDescriptor.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof ListLikeDescriptor))
      return false;
    if (equals(this.pv_1, other.pv_1) ? this.vr() === other.vr() : false)
      return true;
    return false;
  };
  ListLikeDescriptor.prototype.hashCode = function () {
    return imul(hashCode(this.pv_1), 31) + getStringHashCode(this.vr()) | 0;
  };
  ListLikeDescriptor.prototype.toString = function () {
    return this.vr() + '(' + this.pv_1 + ')';
  };
  ListLikeDescriptor.$metadata$ = classMeta('ListLikeDescriptor', [SerialDescriptor]);
  function ArrayListClassDesc(elementDesc) {
    ListLikeDescriptor.call(this, elementDesc);
  }
  ArrayListClassDesc.prototype.vr = function () {
    return 'kotlin.collections.ArrayList';
  };
  ArrayListClassDesc.$metadata$ = classMeta('ArrayListClassDesc', undefined, undefined, undefined, undefined, ListLikeDescriptor.prototype);
  function HashSetClassDesc(elementDesc) {
    ListLikeDescriptor.call(this, elementDesc);
  }
  HashSetClassDesc.prototype.vr = function () {
    return 'kotlin.collections.HashSet';
  };
  HashSetClassDesc.$metadata$ = classMeta('HashSetClassDesc', undefined, undefined, undefined, undefined, ListLikeDescriptor.prototype);
  function LinkedHashSetClassDesc(elementDesc) {
    ListLikeDescriptor.call(this, elementDesc);
  }
  LinkedHashSetClassDesc.prototype.vr = function () {
    return 'kotlin.collections.LinkedHashSet';
  };
  LinkedHashSetClassDesc.$metadata$ = classMeta('LinkedHashSetClassDesc', undefined, undefined, undefined, undefined, ListLikeDescriptor.prototype);
  function HashMapClassDesc(keyDesc, valueDesc) {
    MapLikeDescriptor.call(this, 'kotlin.collections.HashMap', keyDesc, valueDesc);
  }
  HashMapClassDesc.$metadata$ = classMeta('HashMapClassDesc', undefined, undefined, undefined, undefined, MapLikeDescriptor.prototype);
  function LinkedHashMapClassDesc(keyDesc, valueDesc) {
    MapLikeDescriptor.call(this, 'kotlin.collections.LinkedHashMap', keyDesc, valueDesc);
  }
  LinkedHashMapClassDesc.$metadata$ = classMeta('LinkedHashMapClassDesc', undefined, undefined, undefined, undefined, MapLikeDescriptor.prototype);
  function ArrayClassDesc(elementDesc) {
    ListLikeDescriptor.call(this, elementDesc);
  }
  ArrayClassDesc.prototype.vr = function () {
    return 'kotlin.Array';
  };
  ArrayClassDesc.$metadata$ = classMeta('ArrayClassDesc', undefined, undefined, undefined, undefined, ListLikeDescriptor.prototype);
  function MapLikeDescriptor(serialName, keyDescriptor, valueDescriptor) {
    this.xv_1 = serialName;
    this.yv_1 = keyDescriptor;
    this.zv_1 = valueDescriptor;
    this.aw_1 = 2;
  }
  MapLikeDescriptor.prototype.vr = function () {
    return this.xv_1;
  };
  MapLikeDescriptor.prototype.wr = function () {
    return MAP_getInstance();
  };
  MapLikeDescriptor.prototype.yr = function () {
    return this.aw_1;
  };
  MapLikeDescriptor.prototype.zr = function (index) {
    return index.toString();
  };
  MapLikeDescriptor.prototype.as = function (name) {
    var tmp0_elvis_lhs = toIntOrNull(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalArgumentException_init_$Create$(name + ' is not a valid map index');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  MapLikeDescriptor.prototype.bs = function (index) {
    // Inline function 'kotlin.require' call
    var tmp0_require = index >= 0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlinx.serialization.internal.MapLikeDescriptor.getElementDescriptor.<anonymous>' call
      tmp$ret$0 = 'Illegal index ' + index + ', ' + this.vr() + ' expects only non-negative indices';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    var tmp0_subject = index % 2 | 0;
    var tmp;
    switch (tmp0_subject) {
      case 0:
        tmp = this.yv_1;
        break;
      case 1:
        tmp = this.zv_1;
        break;
      default:
        throw IllegalStateException_init_$Create$('Unreached');
    }
    return tmp;
  };
  MapLikeDescriptor.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MapLikeDescriptor))
      return false;
    if (!(this.vr() === other.vr()))
      return false;
    if (!equals(this.yv_1, other.yv_1))
      return false;
    if (!equals(this.zv_1, other.zv_1))
      return false;
    return true;
  };
  MapLikeDescriptor.prototype.hashCode = function () {
    var result = getStringHashCode(this.vr());
    result = imul(31, result) + hashCode(this.yv_1) | 0;
    result = imul(31, result) + hashCode(this.zv_1) | 0;
    return result;
  };
  MapLikeDescriptor.prototype.toString = function () {
    return this.vr() + '(' + this.yv_1 + ', ' + this.zv_1 + ')';
  };
  MapLikeDescriptor.$metadata$ = classMeta('MapLikeDescriptor', [SerialDescriptor]);
  function PrimitiveArraySerializer(primitiveSerializer) {
    ListLikeSerializer.call(this, primitiveSerializer);
    this.ew_1 = new PrimitiveArrayDescriptor(primitiveSerializer.mr());
  }
  PrimitiveArraySerializer.prototype.mr = function () {
    return this.ew_1;
  };
  PrimitiveArraySerializer.prototype.fw = function (_this__u8e3s4) {
    return _this__u8e3s4.gw();
  };
  PrimitiveArraySerializer.prototype.hw = function (_this__u8e3s4) {
    return _this__u8e3s4.iw();
  };
  PrimitiveArraySerializer.prototype.jw = function (_this__u8e3s4, size) {
    return _this__u8e3s4.wa(size);
  };
  PrimitiveArraySerializer.prototype.kw = function (_this__u8e3s4) {
    // Inline function 'kotlin.error' call
    throw IllegalStateException_init_$Create$('This method lead to boxing and must not be used, use writeContents instead');
  };
  PrimitiveArraySerializer.prototype.lw = function (_this__u8e3s4) {
    return this.kw((_this__u8e3s4 == null ? true : isObject(_this__u8e3s4)) ? _this__u8e3s4 : THROW_CCE());
  };
  PrimitiveArraySerializer.prototype.mw = function (_this__u8e3s4, index, element) {
    // Inline function 'kotlin.error' call
    throw IllegalStateException_init_$Create$('This method lead to boxing and must not be used, use Builder.append instead');
  };
  PrimitiveArraySerializer.prototype.nw = function () {
    return this.pw(this.ow());
  };
  PrimitiveArraySerializer.prototype.tw = function (encoder, value) {
    var size = this.uw(value);
    var composite = encoder.gv(this.ew_1, size);
    this.sw(composite, value, size);
    composite.st(this.ew_1);
  };
  PrimitiveArraySerializer.prototype.nr = function (encoder, value) {
    return this.tw(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  PrimitiveArraySerializer.prototype.vw = function (encoder, value) {
    return this.tw(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  PrimitiveArraySerializer.prototype.or = function (decoder) {
    return this.ww(decoder, null);
  };
  PrimitiveArraySerializer.$metadata$ = classMeta('PrimitiveArraySerializer', undefined, undefined, undefined, undefined, ListLikeSerializer.prototype);
  function PrimitiveArrayBuilder() {
  }
  PrimitiveArrayBuilder.prototype.zw = function (requiredCapacity, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      requiredCapacity = this.gw() + 1 | 0;
    var tmp;
    if ($handler == null) {
      this.wa(requiredCapacity);
      tmp = Unit_getInstance();
    } else {
      tmp = $handler(requiredCapacity);
    }
    return tmp;
  };
  PrimitiveArrayBuilder.$metadata$ = classMeta('PrimitiveArrayBuilder');
  function ListLikeSerializer(elementSerializer) {
    AbstractCollectionSerializer.call(this);
    this.xw_1 = elementSerializer;
  }
  ListLikeSerializer.prototype.vw = function (encoder, value) {
    var size = this.uw(value);
    var composite = encoder.gv(this.mr(), size);
    var iterator = this.lw(value);
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        composite.dv(this.mr(), index, this.xw_1, iterator.h());
      }
       while (inductionVariable < size);
    composite.st(this.mr());
  };
  ListLikeSerializer.prototype.nr = function (encoder, value) {
    return this.vw(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  ListLikeSerializer.prototype.yw = function (decoder, builder, startIndex, size) {
    // Inline function 'kotlin.require' call
    var tmp0_require = size >= 0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlinx.serialization.internal.ListLikeSerializer.readAll.<anonymous>' call
      tmp$ret$0 = 'Size must be known in advance when using READ_ALL';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.qw(decoder, startIndex + index | 0, builder, false);
      }
       while (inductionVariable < size);
  };
  ListLikeSerializer.prototype.qw = function (decoder, index, builder, checkIndex) {
    var tmp = this.mr();
    this.mw(builder, index, decoder.du(tmp, index, this.xw_1, null, 8, null));
  };
  ListLikeSerializer.$metadata$ = classMeta('ListLikeSerializer', undefined, undefined, undefined, undefined, AbstractCollectionSerializer.prototype);
  function readSize($this, decoder, builder) {
    var size = decoder.gu($this.mr());
    $this.jw(builder, size);
    return size;
  }
  function AbstractCollectionSerializer() {
  }
  AbstractCollectionSerializer.prototype.ww = function (decoder, previous) {
    var tmp0_safe_receiver = previous;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : this.pw(tmp0_safe_receiver);
    var builder = tmp1_elvis_lhs == null ? this.nw() : tmp1_elvis_lhs;
    var startIndex = this.fw(builder);
    var compositeDecoder = decoder.rt(this.mr());
    if (compositeDecoder.eu()) {
      this.yw(compositeDecoder, builder, startIndex, readSize(this, compositeDecoder, builder));
    } else {
      $l$loop: while (true) {
        var index = compositeDecoder.fu(this.mr());
        Companion_getInstance_1();
        if (index === -1)
          break $l$loop;
        var tmp = startIndex + index | 0;
        this.rw(compositeDecoder, tmp, builder, false, 8, null);
      }
    }
    compositeDecoder.st(this.mr());
    return this.hw(builder);
  };
  AbstractCollectionSerializer.prototype.or = function (decoder) {
    return this.ww(decoder, null);
  };
  AbstractCollectionSerializer.prototype.rw = function (decoder, index, builder, checkIndex, $mask0, $handler) {
    if (!(($mask0 & 8) === 0))
      checkIndex = true;
    var tmp;
    if ($handler == null) {
      this.qw(decoder, index, builder, checkIndex);
      tmp = Unit_getInstance();
    } else {
      tmp = $handler(decoder, index, builder, checkIndex);
    }
    return tmp;
  };
  AbstractCollectionSerializer.$metadata$ = classMeta('AbstractCollectionSerializer', [KSerializer]);
  function ArrayListSerializer(element) {
    ListLikeSerializer.call(this, element);
    this.bx_1 = new ArrayListClassDesc(element.mr());
  }
  ArrayListSerializer.prototype.mr = function () {
    return this.bx_1;
  };
  ArrayListSerializer.prototype.cx = function (_this__u8e3s4) {
    return _this__u8e3s4.i();
  };
  ArrayListSerializer.prototype.uw = function (_this__u8e3s4) {
    return this.cx((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, List) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ArrayListSerializer.prototype.dx = function (_this__u8e3s4) {
    return _this__u8e3s4.f();
  };
  ArrayListSerializer.prototype.lw = function (_this__u8e3s4) {
    return this.dx((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, List) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ArrayListSerializer.prototype.nw = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.arrayListOf' call
    tmp$ret$0 = ArrayList_init_$Create$_0();
    return tmp$ret$0;
  };
  ArrayListSerializer.prototype.ex = function (_this__u8e3s4) {
    return _this__u8e3s4.i();
  };
  ArrayListSerializer.prototype.fw = function (_this__u8e3s4) {
    return this.ex(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE());
  };
  ArrayListSerializer.prototype.fx = function (_this__u8e3s4) {
    return _this__u8e3s4;
  };
  ArrayListSerializer.prototype.hw = function (_this__u8e3s4) {
    return this.fx(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE());
  };
  ArrayListSerializer.prototype.gx = function (_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? ArrayList_init_$Create$_1(_this__u8e3s4) : tmp0_elvis_lhs;
  };
  ArrayListSerializer.prototype.pw = function (_this__u8e3s4) {
    return this.gx((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, List) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ArrayListSerializer.prototype.hx = function (_this__u8e3s4, size) {
    return _this__u8e3s4.wa(size);
  };
  ArrayListSerializer.prototype.jw = function (_this__u8e3s4, size) {
    return this.hx(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE(), size);
  };
  ArrayListSerializer.prototype.ix = function (_this__u8e3s4, index, element) {
    _this__u8e3s4.ka(index, element);
  };
  ArrayListSerializer.prototype.mw = function (_this__u8e3s4, index, element) {
    var tmp = _this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE();
    return this.ix(tmp, index, (element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  ArrayListSerializer.$metadata$ = classMeta('ArrayListSerializer', undefined, undefined, undefined, undefined, ListLikeSerializer.prototype);
  function HashSetSerializer(eSerializer) {
    ListLikeSerializer.call(this, eSerializer);
    this.kx_1 = new HashSetClassDesc(eSerializer.mr());
  }
  HashSetSerializer.prototype.mr = function () {
    return this.kx_1;
  };
  HashSetSerializer.prototype.lx = function (_this__u8e3s4) {
    return _this__u8e3s4.i();
  };
  HashSetSerializer.prototype.uw = function (_this__u8e3s4) {
    return this.lx((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Set) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  HashSetSerializer.prototype.mx = function (_this__u8e3s4) {
    return _this__u8e3s4.f();
  };
  HashSetSerializer.prototype.lw = function (_this__u8e3s4) {
    return this.mx((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Set) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  HashSetSerializer.prototype.nw = function () {
    return HashSet_init_$Create$();
  };
  HashSetSerializer.prototype.nx = function (_this__u8e3s4) {
    return _this__u8e3s4.i();
  };
  HashSetSerializer.prototype.fw = function (_this__u8e3s4) {
    return this.nx(_this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : THROW_CCE());
  };
  HashSetSerializer.prototype.ox = function (_this__u8e3s4) {
    return _this__u8e3s4;
  };
  HashSetSerializer.prototype.hw = function (_this__u8e3s4) {
    return this.ox(_this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : THROW_CCE());
  };
  HashSetSerializer.prototype.px = function (_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? HashSet_init_$Create$_0(_this__u8e3s4) : tmp0_elvis_lhs;
  };
  HashSetSerializer.prototype.pw = function (_this__u8e3s4) {
    return this.px((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Set) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  HashSetSerializer.prototype.qx = function (_this__u8e3s4, size) {
  };
  HashSetSerializer.prototype.jw = function (_this__u8e3s4, size) {
    return this.qx(_this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : THROW_CCE(), size);
  };
  HashSetSerializer.prototype.rx = function (_this__u8e3s4, index, element) {
    _this__u8e3s4.a(element);
  };
  HashSetSerializer.prototype.mw = function (_this__u8e3s4, index, element) {
    var tmp = _this__u8e3s4 instanceof HashSet ? _this__u8e3s4 : THROW_CCE();
    return this.rx(tmp, index, (element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  HashSetSerializer.$metadata$ = classMeta('HashSetSerializer', undefined, undefined, undefined, undefined, ListLikeSerializer.prototype);
  function LinkedHashSetSerializer(eSerializer) {
    ListLikeSerializer.call(this, eSerializer);
    this.tx_1 = new LinkedHashSetClassDesc(eSerializer.mr());
  }
  LinkedHashSetSerializer.prototype.mr = function () {
    return this.tx_1;
  };
  LinkedHashSetSerializer.prototype.lx = function (_this__u8e3s4) {
    return _this__u8e3s4.i();
  };
  LinkedHashSetSerializer.prototype.uw = function (_this__u8e3s4) {
    return this.lx((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Set) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashSetSerializer.prototype.mx = function (_this__u8e3s4) {
    return _this__u8e3s4.f();
  };
  LinkedHashSetSerializer.prototype.lw = function (_this__u8e3s4) {
    return this.mx((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Set) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashSetSerializer.prototype.nw = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.linkedSetOf' call
    tmp$ret$0 = LinkedHashSet_init_$Create$();
    return tmp$ret$0;
  };
  LinkedHashSetSerializer.prototype.ux = function (_this__u8e3s4) {
    return _this__u8e3s4.i();
  };
  LinkedHashSetSerializer.prototype.fw = function (_this__u8e3s4) {
    return this.ux(_this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashSetSerializer.prototype.vx = function (_this__u8e3s4) {
    return _this__u8e3s4;
  };
  LinkedHashSetSerializer.prototype.hw = function (_this__u8e3s4) {
    return this.vx(_this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashSetSerializer.prototype.px = function (_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? LinkedHashSet_init_$Create$_0(_this__u8e3s4) : tmp0_elvis_lhs;
  };
  LinkedHashSetSerializer.prototype.pw = function (_this__u8e3s4) {
    return this.px((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Set) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashSetSerializer.prototype.wx = function (_this__u8e3s4, size) {
  };
  LinkedHashSetSerializer.prototype.jw = function (_this__u8e3s4, size) {
    return this.wx(_this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : THROW_CCE(), size);
  };
  LinkedHashSetSerializer.prototype.xx = function (_this__u8e3s4, index, element) {
    _this__u8e3s4.a(element);
  };
  LinkedHashSetSerializer.prototype.mw = function (_this__u8e3s4, index, element) {
    var tmp = _this__u8e3s4 instanceof LinkedHashSet ? _this__u8e3s4 : THROW_CCE();
    return this.xx(tmp, index, (element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  LinkedHashSetSerializer.$metadata$ = classMeta('LinkedHashSetSerializer', undefined, undefined, undefined, undefined, ListLikeSerializer.prototype);
  function HashMapSerializer(kSerializer, vSerializer) {
    MapLikeSerializer.call(this, kSerializer, vSerializer);
    this.ay_1 = new HashMapClassDesc(kSerializer.mr(), vSerializer.mr());
  }
  HashMapSerializer.prototype.mr = function () {
    return this.ay_1;
  };
  HashMapSerializer.prototype.by = function (_this__u8e3s4) {
    return _this__u8e3s4.i();
  };
  HashMapSerializer.prototype.uw = function (_this__u8e3s4) {
    return this.by((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Map) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  HashMapSerializer.prototype.cy = function (_this__u8e3s4) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$0 = _this__u8e3s4.d1().f();
    return tmp$ret$0;
  };
  HashMapSerializer.prototype.lw = function (_this__u8e3s4) {
    return this.cy((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Map) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  HashMapSerializer.prototype.nw = function () {
    return HashMap_init_$Create$();
  };
  HashMapSerializer.prototype.dy = function (_this__u8e3s4) {
    return _this__u8e3s4.i();
  };
  HashMapSerializer.prototype.fw = function (_this__u8e3s4) {
    return this.dy(_this__u8e3s4 instanceof HashMap ? _this__u8e3s4 : THROW_CCE());
  };
  HashMapSerializer.prototype.ey = function (_this__u8e3s4) {
    return _this__u8e3s4;
  };
  HashMapSerializer.prototype.hw = function (_this__u8e3s4) {
    return this.ey(_this__u8e3s4 instanceof HashMap ? _this__u8e3s4 : THROW_CCE());
  };
  HashMapSerializer.prototype.fy = function (_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof HashMap ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? HashMap_init_$Create$_0(_this__u8e3s4) : tmp0_elvis_lhs;
  };
  HashMapSerializer.prototype.pw = function (_this__u8e3s4) {
    return this.fy((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Map) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  HashMapSerializer.prototype.gy = function (_this__u8e3s4, size) {
  };
  HashMapSerializer.prototype.jw = function (_this__u8e3s4, size) {
    return this.gy(_this__u8e3s4 instanceof HashMap ? _this__u8e3s4 : THROW_CCE(), size);
  };
  HashMapSerializer.$metadata$ = classMeta('HashMapSerializer', undefined, undefined, undefined, undefined, MapLikeSerializer.prototype);
  function LinkedHashMapSerializer(kSerializer, vSerializer) {
    MapLikeSerializer.call(this, kSerializer, vSerializer);
    this.ny_1 = new LinkedHashMapClassDesc(kSerializer.mr(), vSerializer.mr());
  }
  LinkedHashMapSerializer.prototype.mr = function () {
    return this.ny_1;
  };
  LinkedHashMapSerializer.prototype.by = function (_this__u8e3s4) {
    return _this__u8e3s4.i();
  };
  LinkedHashMapSerializer.prototype.uw = function (_this__u8e3s4) {
    return this.by((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Map) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashMapSerializer.prototype.cy = function (_this__u8e3s4) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$0 = _this__u8e3s4.d1().f();
    return tmp$ret$0;
  };
  LinkedHashMapSerializer.prototype.lw = function (_this__u8e3s4) {
    return this.cy((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Map) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashMapSerializer.prototype.nw = function () {
    return LinkedHashMap_init_$Create$();
  };
  LinkedHashMapSerializer.prototype.oy = function (_this__u8e3s4) {
    return _this__u8e3s4.i();
  };
  LinkedHashMapSerializer.prototype.fw = function (_this__u8e3s4) {
    return this.oy(_this__u8e3s4 instanceof LinkedHashMap ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashMapSerializer.prototype.py = function (_this__u8e3s4) {
    return _this__u8e3s4;
  };
  LinkedHashMapSerializer.prototype.hw = function (_this__u8e3s4) {
    return this.py(_this__u8e3s4 instanceof LinkedHashMap ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashMapSerializer.prototype.fy = function (_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof LinkedHashMap ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? LinkedHashMap_init_$Create$_0(_this__u8e3s4) : tmp0_elvis_lhs;
  };
  LinkedHashMapSerializer.prototype.pw = function (_this__u8e3s4) {
    return this.fy((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Map) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  LinkedHashMapSerializer.prototype.qy = function (_this__u8e3s4, size) {
  };
  LinkedHashMapSerializer.prototype.jw = function (_this__u8e3s4, size) {
    return this.qy(_this__u8e3s4 instanceof LinkedHashMap ? _this__u8e3s4 : THROW_CCE(), size);
  };
  LinkedHashMapSerializer.$metadata$ = classMeta('LinkedHashMapSerializer', undefined, undefined, undefined, undefined, MapLikeSerializer.prototype);
  function ReferenceArraySerializer(kClass, eSerializer) {
    ListLikeSerializer.call(this, eSerializer);
    this.sy_1 = kClass;
    this.ty_1 = new ArrayClassDesc(eSerializer.mr());
  }
  ReferenceArraySerializer.prototype.mr = function () {
    return this.ty_1;
  };
  ReferenceArraySerializer.prototype.uy = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  ReferenceArraySerializer.prototype.uw = function (_this__u8e3s4) {
    return this.uy((!(_this__u8e3s4 == null) ? isArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ReferenceArraySerializer.prototype.vy = function (_this__u8e3s4) {
    return arrayIterator(_this__u8e3s4);
  };
  ReferenceArraySerializer.prototype.lw = function (_this__u8e3s4) {
    return this.vy((!(_this__u8e3s4 == null) ? isArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ReferenceArraySerializer.prototype.nw = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.arrayListOf' call
    tmp$ret$0 = ArrayList_init_$Create$_0();
    return tmp$ret$0;
  };
  ReferenceArraySerializer.prototype.wy = function (_this__u8e3s4) {
    return _this__u8e3s4.i();
  };
  ReferenceArraySerializer.prototype.fw = function (_this__u8e3s4) {
    return this.wy(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE());
  };
  ReferenceArraySerializer.prototype.xy = function (_this__u8e3s4) {
    return toNativeArrayImpl(_this__u8e3s4, this.sy_1);
  };
  ReferenceArraySerializer.prototype.hw = function (_this__u8e3s4) {
    return this.xy(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE());
  };
  ReferenceArraySerializer.prototype.yy = function (_this__u8e3s4) {
    return ArrayList_init_$Create$_1(asList(_this__u8e3s4));
  };
  ReferenceArraySerializer.prototype.pw = function (_this__u8e3s4) {
    return this.yy((!(_this__u8e3s4 == null) ? isArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ReferenceArraySerializer.prototype.zy = function (_this__u8e3s4, size) {
    return _this__u8e3s4.wa(size);
  };
  ReferenceArraySerializer.prototype.jw = function (_this__u8e3s4, size) {
    return this.zy(_this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE(), size);
  };
  ReferenceArraySerializer.prototype.az = function (_this__u8e3s4, index, element) {
    _this__u8e3s4.ka(index, element);
  };
  ReferenceArraySerializer.prototype.mw = function (_this__u8e3s4, index, element) {
    var tmp = _this__u8e3s4 instanceof ArrayList ? _this__u8e3s4 : THROW_CCE();
    return this.az(tmp, index, (element == null ? true : isObject(element)) ? element : THROW_CCE());
  };
  ReferenceArraySerializer.$metadata$ = classMeta('ReferenceArraySerializer', undefined, undefined, undefined, undefined, ListLikeSerializer.prototype);
  function MapLikeSerializer(keySerializer, valueSerializer) {
    AbstractCollectionSerializer.call(this);
    this.hy_1 = keySerializer;
    this.iy_1 = valueSerializer;
  }
  MapLikeSerializer.prototype.jy = function () {
    return this.hy_1;
  };
  MapLikeSerializer.prototype.ky = function () {
    return this.iy_1;
  };
  MapLikeSerializer.prototype.yw = function (decoder, builder, startIndex, size) {
    // Inline function 'kotlin.require' call
    var tmp0_require = size >= 0;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlinx.serialization.internal.MapLikeSerializer.readAll.<anonymous>' call
      tmp$ret$0 = 'Size must be known in advance when using READ_ALL';
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    var progression = step(until(0, imul(size, 2)), 2);
    var inductionVariable = progression.m1_1;
    var last = progression.n1_1;
    var step_0 = progression.o1_1;
    if ((step_0 > 0 ? inductionVariable <= last : false) ? true : step_0 < 0 ? last <= inductionVariable : false)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + step_0 | 0;
        this.qw(decoder, startIndex + index | 0, builder, false);
      }
       while (!(index === last));
  };
  MapLikeSerializer.prototype.qw = function (decoder, index, builder, checkIndex) {
    var tmp = this.mr();
    var key = decoder.du(tmp, index, this.hy_1, null, 8, null);
    var tmp_0;
    if (checkIndex) {
      var tmp$ret$1;
      // Inline function 'kotlin.also' call
      var tmp0_also = decoder.fu(this.mr());
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlinx.serialization.internal.MapLikeSerializer.readElement.<anonymous>' call
      // Inline function 'kotlin.require' call
      var tmp0_require = tmp0_also === (index + 1 | 0);
      // Inline function 'kotlin.contracts.contract' call
      if (!tmp0_require) {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.internal.MapLikeSerializer.readElement.<anonymous>.<anonymous>' call
        tmp$ret$0 = 'Value must follow key in a map, index for key: ' + index + ', returned index for value: ' + tmp0_also;
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
      tmp$ret$1 = tmp0_also;
      tmp_0 = tmp$ret$1;
    } else {
      tmp_0 = index + 1 | 0;
    }
    var vIndex = tmp_0;
    var tmp_1;
    var tmp_2;
    if (builder.f3(key)) {
      var tmp_3 = this.iy_1.mr().wr();
      tmp_2 = !(tmp_3 instanceof PrimitiveKind);
    } else {
      tmp_2 = false;
    }
    if (tmp_2) {
      tmp_1 = decoder.cu(this.mr(), vIndex, this.iy_1, getValue(builder, key));
    } else {
      var tmp_4 = this.mr();
      tmp_1 = decoder.du(tmp_4, vIndex, this.iy_1, null, 8, null);
    }
    var value = tmp_1;
    // Inline function 'kotlin.collections.set' call
    builder.u(key, value);
  };
  MapLikeSerializer.prototype.vw = function (encoder, value) {
    var size = this.uw(value);
    var composite = encoder.gv(this.mr(), size);
    var iterator = this.lw(value);
    var index = 0;
    // Inline function 'kotlin.collections.forEach' call
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$0 = iterator;
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'kotlinx.serialization.internal.MapLikeSerializer.serialize.<anonymous>' call
      var tmp$ret$1;
      // Inline function 'kotlin.collections.component1' call
      tmp$ret$1 = element.e1();
      var k = tmp$ret$1;
      var tmp$ret$2;
      // Inline function 'kotlin.collections.component2' call
      tmp$ret$2 = element.f1();
      var v = tmp$ret$2;
      var tmp = this.mr();
      var tmp0 = index;
      index = tmp0 + 1 | 0;
      composite.dv(tmp, tmp0, this.hy_1, k);
      var tmp_0 = this.mr();
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      composite.dv(tmp_0, tmp1, this.iy_1, v);
    }
    composite.st(this.mr());
  };
  MapLikeSerializer.prototype.nr = function (encoder, value) {
    return this.vw(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  MapLikeSerializer.$metadata$ = classMeta('MapLikeSerializer', undefined, undefined, undefined, undefined, AbstractCollectionSerializer.prototype);
  function InlinePrimitiveDescriptor(name, primitiveSerializer) {
    return new InlineClassDescriptor(name, new InlinePrimitiveDescriptor$1(primitiveSerializer));
  }
  function InlineClassDescriptor(name, generatedSerializer) {
    PluginGeneratedSerialDescriptor.call(this, name, generatedSerializer, 1);
    this.nz_1 = true;
  }
  InlineClassDescriptor.prototype.xr = function () {
    return this.nz_1;
  };
  InlineClassDescriptor.prototype.hashCode = function () {
    return imul(PluginGeneratedSerialDescriptor.prototype.hashCode.call(this), 31);
  };
  InlineClassDescriptor.prototype.equals = function (other) {
    var tmp$ret$0;
    $l$block_5: {
      // Inline function 'kotlinx.serialization.internal.equalsImpl' call
      if (this === other) {
        tmp$ret$0 = true;
        break $l$block_5;
      }
      if (!(other instanceof InlineClassDescriptor)) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.vr() === other.vr())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var tmp$ret$1;
      // Inline function 'kotlinx.serialization.internal.InlineClassDescriptor.equals.<anonymous>' call
      var tmp0__anonymous__q1qw7t = other;
      tmp$ret$1 = tmp0__anonymous__q1qw7t.nz_1 ? contentEquals(this.a10(), tmp0__anonymous__q1qw7t.a10()) : false;
      if (!tmp$ret$1) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.yr() === other.yr())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var inductionVariable = 0;
      var last = this.yr();
      if (inductionVariable < last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (!(this.bs(index).vr() === other.bs(index).vr())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
          if (!equals(this.bs(index).wr(), other.bs(index).wr())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
        }
         while (inductionVariable < last);
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  InlineClassDescriptor.$metadata$ = classMeta('InlineClassDescriptor', undefined, undefined, undefined, undefined, PluginGeneratedSerialDescriptor.prototype);
  function InlinePrimitiveDescriptor$1($primitiveSerializer) {
    this.c10_1 = $primitiveSerializer;
  }
  InlinePrimitiveDescriptor$1.prototype.d10 = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = [this.c10_1];
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  InlinePrimitiveDescriptor$1.prototype.mr = function () {
    // Inline function 'kotlin.error' call
    throw IllegalStateException_init_$Create$('unsupported');
  };
  InlinePrimitiveDescriptor$1.prototype.nr = function (encoder, value) {
    // Inline function 'kotlin.error' call
    throw IllegalStateException_init_$Create$('unsupported');
  };
  InlinePrimitiveDescriptor$1.prototype.or = function (decoder) {
    // Inline function 'kotlin.error' call
    throw IllegalStateException_init_$Create$('unsupported');
  };
  InlinePrimitiveDescriptor$1.$metadata$ = classMeta(undefined, [GeneratedSerializer]);
  function UIntSerializer() {
    UIntSerializer_instance = this;
    this.f10_1 = InlinePrimitiveDescriptor('kotlin.UInt', serializer_6(IntCompanionObject_getInstance()));
  }
  UIntSerializer.prototype.mr = function () {
    return this.f10_1;
  };
  UIntSerializer.prototype.g10 = function (encoder, value) {
    var tmp0_safe_receiver = encoder.tu(this.f10_1);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      // Inline function 'kotlin.UInt.toInt' call
      tmp$ret$0 = _UInt___get_data__impl__f0vqqw(value);
      tmp0_safe_receiver.nu(tmp$ret$0);
    }
  };
  UIntSerializer.prototype.nr = function (encoder, value) {
    return this.g10(encoder, value instanceof UInt ? value.u1_1 : THROW_CCE());
  };
  UIntSerializer.prototype.h10 = function (decoder) {
    var tmp$ret$0;
    // Inline function 'kotlin.toUInt' call
    var tmp0_toUInt = decoder.ot(this.f10_1).it();
    tmp$ret$0 = _UInt___init__impl__l7qpdl(tmp0_toUInt);
    return tmp$ret$0;
  };
  UIntSerializer.prototype.or = function (decoder) {
    return new UInt(this.h10(decoder));
  };
  UIntSerializer.$metadata$ = objectMeta('UIntSerializer', [KSerializer]);
  var UIntSerializer_instance;
  function UIntSerializer_getInstance() {
    if (UIntSerializer_instance == null)
      new UIntSerializer();
    return UIntSerializer_instance;
  }
  function ULongSerializer() {
    ULongSerializer_instance = this;
    this.i10_1 = InlinePrimitiveDescriptor('kotlin.ULong', serializer_5(Companion_getInstance()));
  }
  ULongSerializer.prototype.mr = function () {
    return this.i10_1;
  };
  ULongSerializer.prototype.j10 = function (encoder, value) {
    var tmp0_safe_receiver = encoder.tu(this.i10_1);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      // Inline function 'kotlin.ULong.toLong' call
      tmp$ret$0 = _ULong___get_data__impl__fggpzb(value);
      tmp0_safe_receiver.ou(tmp$ret$0);
    }
  };
  ULongSerializer.prototype.nr = function (encoder, value) {
    return this.j10(encoder, value instanceof ULong ? value.t1_1 : THROW_CCE());
  };
  ULongSerializer.prototype.k10 = function (decoder) {
    var tmp$ret$0;
    // Inline function 'kotlin.toULong' call
    var tmp0_toULong = decoder.ot(this.i10_1).jt();
    tmp$ret$0 = _ULong___init__impl__c78o9k(tmp0_toULong);
    return tmp$ret$0;
  };
  ULongSerializer.prototype.or = function (decoder) {
    return new ULong(this.k10(decoder));
  };
  ULongSerializer.$metadata$ = objectMeta('ULongSerializer', [KSerializer]);
  var ULongSerializer_instance;
  function ULongSerializer_getInstance() {
    if (ULongSerializer_instance == null)
      new ULongSerializer();
    return ULongSerializer_instance;
  }
  function UByteSerializer() {
    UByteSerializer_instance = this;
    this.l10_1 = InlinePrimitiveDescriptor('kotlin.UByte', serializer_8(ByteCompanionObject_getInstance()));
  }
  UByteSerializer.prototype.mr = function () {
    return this.l10_1;
  };
  UByteSerializer.prototype.m10 = function (encoder, value) {
    var tmp0_safe_receiver = encoder.tu(this.l10_1);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      // Inline function 'kotlin.UByte.toByte' call
      tmp$ret$0 = _UByte___get_data__impl__jof9qr(value);
      tmp0_safe_receiver.lu(tmp$ret$0);
    }
  };
  UByteSerializer.prototype.nr = function (encoder, value) {
    return this.m10(encoder, value instanceof UByte ? value.l7_1 : THROW_CCE());
  };
  UByteSerializer.prototype.n10 = function (decoder) {
    var tmp$ret$0;
    // Inline function 'kotlin.toUByte' call
    var tmp0_toUByte = decoder.ot(this.l10_1).gt();
    tmp$ret$0 = _UByte___init__impl__g9hnc4(tmp0_toUByte);
    return tmp$ret$0;
  };
  UByteSerializer.prototype.or = function (decoder) {
    return new UByte(this.n10(decoder));
  };
  UByteSerializer.$metadata$ = objectMeta('UByteSerializer', [KSerializer]);
  var UByteSerializer_instance;
  function UByteSerializer_getInstance() {
    if (UByteSerializer_instance == null)
      new UByteSerializer();
    return UByteSerializer_instance;
  }
  function UShortSerializer() {
    UShortSerializer_instance = this;
    this.o10_1 = InlinePrimitiveDescriptor('kotlin.UShort', serializer_7(ShortCompanionObject_getInstance()));
  }
  UShortSerializer.prototype.mr = function () {
    return this.o10_1;
  };
  UShortSerializer.prototype.p10 = function (encoder, value) {
    var tmp0_safe_receiver = encoder.tu(this.o10_1);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      // Inline function 'kotlin.UShort.toShort' call
      tmp$ret$0 = _UShort___get_data__impl__g0245(value);
      tmp0_safe_receiver.mu(tmp$ret$0);
    }
  };
  UShortSerializer.prototype.nr = function (encoder, value) {
    return this.p10(encoder, value instanceof UShort ? value.r8_1 : THROW_CCE());
  };
  UShortSerializer.prototype.q10 = function (decoder) {
    var tmp$ret$0;
    // Inline function 'kotlin.toUShort' call
    var tmp0_toUShort = decoder.ot(this.o10_1).ht();
    tmp$ret$0 = _UShort___init__impl__jigrne(tmp0_toUShort);
    return tmp$ret$0;
  };
  UShortSerializer.prototype.or = function (decoder) {
    return new UShort(this.q10(decoder));
  };
  UShortSerializer.$metadata$ = objectMeta('UShortSerializer', [KSerializer]);
  var UShortSerializer_instance;
  function UShortSerializer_getInstance() {
    if (UShortSerializer_instance == null)
      new UShortSerializer();
    return UShortSerializer_instance;
  }
  function jsonCachedSerialNames(_this__u8e3s4) {
    return cachedSerialNames(_this__u8e3s4);
  }
  function NullableSerializer(serializer) {
    this.r10_1 = serializer;
    this.s10_1 = new SerialDescriptorForNullable(this.r10_1.mr());
  }
  NullableSerializer.prototype.mr = function () {
    return this.s10_1;
  };
  NullableSerializer.prototype.t10 = function (encoder, value) {
    if (!(value == null)) {
      encoder.fv();
      encoder.ev(this.r10_1, value);
    } else {
      encoder.ju();
    }
  };
  NullableSerializer.prototype.nr = function (encoder, value) {
    return this.t10(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  NullableSerializer.prototype.or = function (decoder) {
    return decoder.dt() ? decoder.qt(this.r10_1) : decoder.et();
  };
  NullableSerializer.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof NullableSerializer)
      other;
    else
      THROW_CCE();
    if (!equals(this.r10_1, other.r10_1))
      return false;
    return true;
  };
  NullableSerializer.prototype.hashCode = function () {
    return hashCode(this.r10_1);
  };
  NullableSerializer.$metadata$ = classMeta('NullableSerializer', [KSerializer]);
  function SerialDescriptorForNullable(original) {
    this.u10_1 = original;
    this.v10_1 = this.u10_1.vr() + '?';
    this.w10_1 = cachedSerialNames(this.u10_1);
  }
  SerialDescriptorForNullable.prototype.bs = function (index) {
    return this.u10_1.bs(index);
  };
  SerialDescriptorForNullable.prototype.as = function (name) {
    return this.u10_1.as(name);
  };
  SerialDescriptorForNullable.prototype.zr = function (index) {
    return this.u10_1.zr(index);
  };
  SerialDescriptorForNullable.prototype.yr = function () {
    return this.u10_1.yr();
  };
  SerialDescriptorForNullable.prototype.xr = function () {
    return this.u10_1.xr();
  };
  SerialDescriptorForNullable.prototype.wr = function () {
    return this.u10_1.wr();
  };
  SerialDescriptorForNullable.prototype.vr = function () {
    return this.v10_1;
  };
  SerialDescriptorForNullable.prototype.bt = function () {
    return this.w10_1;
  };
  SerialDescriptorForNullable.prototype.ur = function () {
    return true;
  };
  SerialDescriptorForNullable.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SerialDescriptorForNullable))
      return false;
    if (!equals(this.u10_1, other.u10_1))
      return false;
    return true;
  };
  SerialDescriptorForNullable.prototype.toString = function () {
    return '' + this.u10_1 + '?';
  };
  SerialDescriptorForNullable.prototype.hashCode = function () {
    return imul(hashCode(this.u10_1), 31);
  };
  SerialDescriptorForNullable.$metadata$ = classMeta('SerialDescriptorForNullable', [SerialDescriptor, CachedNames]);
  function ObjectSerializer(serialName, objectInstance) {
    this.x10_1 = objectInstance;
    var tmp = this;
    var tmp_0 = OBJECT_getInstance();
    tmp.y10_1 = buildSerialDescriptor$default(serialName, tmp_0, [], null, 12, null);
  }
  ObjectSerializer.prototype.mr = function () {
    return this.y10_1;
  };
  ObjectSerializer.prototype.nr = function (encoder, value) {
    encoder.rt(this.y10_1).st(this.y10_1);
  };
  ObjectSerializer.prototype.or = function (decoder) {
    decoder.rt(this.y10_1).st(this.y10_1);
    return this.x10_1;
  };
  ObjectSerializer.$metadata$ = classMeta('ObjectSerializer', [KSerializer]);
  function get_EMPTY_DESCRIPTOR_ARRAY() {
    init_properties_Platform_common_kt_9ujmfm();
    return EMPTY_DESCRIPTOR_ARRAY;
  }
  var EMPTY_DESCRIPTOR_ARRAY;
  function cast(_this__u8e3s4) {
    init_properties_Platform_common_kt_9ujmfm();
    return isInterface(_this__u8e3s4, KSerializer) ? _this__u8e3s4 : THROW_CCE();
  }
  function compactArray(_this__u8e3s4) {
    init_properties_Platform_common_kt_9ujmfm();
    var tmp$ret$2;
    // Inline function 'kotlin.takeUnless' call
    // Inline function 'kotlin.contracts.contract' call
    var tmp;
    var tmp$ret$1;
    // Inline function 'kotlinx.serialization.internal.compactArray.<anonymous>' call
    var tmp$ret$0;
    // Inline function 'kotlin.collections.isNullOrEmpty' call
    // Inline function 'kotlin.contracts.contract' call
    tmp$ret$0 = _this__u8e3s4 == null ? true : _this__u8e3s4.p();
    tmp$ret$1 = tmp$ret$0;
    if (!tmp$ret$1) {
      tmp = _this__u8e3s4;
    } else {
      tmp = null;
    }
    tmp$ret$2 = tmp;
    var tmp0_safe_receiver = tmp$ret$2;
    var tmp_0;
    if (tmp0_safe_receiver == null) {
      tmp_0 = null;
    } else {
      var tmp$ret$3;
      // Inline function 'kotlin.collections.toTypedArray' call
      tmp$ret$3 = copyToArray(tmp0_safe_receiver);
      tmp_0 = tmp$ret$3;
    }
    var tmp1_elvis_lhs = tmp_0;
    return tmp1_elvis_lhs == null ? get_EMPTY_DESCRIPTOR_ARRAY() : tmp1_elvis_lhs;
  }
  function elementsHashCodeBy(_this__u8e3s4, selector) {
    init_properties_Platform_common_kt_9ujmfm();
    var tmp$ret$2;
    // Inline function 'kotlin.collections.fold' call
    var accumulator = 1;
    var tmp0_iterator = _this__u8e3s4.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp$ret$1;
      // Inline function 'kotlinx.serialization.internal.elementsHashCodeBy.<anonymous>' call
      var tmp0__anonymous__q1qw7t = accumulator;
      var tmp = imul(31, tmp0__anonymous__q1qw7t);
      var tmp$ret$0;
      // Inline function 'kotlin.hashCode' call
      var tmp0_hashCode = selector(element);
      var tmp0_safe_receiver = tmp0_hashCode;
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
      tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
      tmp$ret$1 = tmp + tmp$ret$0 | 0;
      accumulator = tmp$ret$1;
    }
    tmp$ret$2 = accumulator;
    return tmp$ret$2;
  }
  function kclass(_this__u8e3s4) {
    init_properties_Platform_common_kt_9ujmfm();
    var t = _this__u8e3s4.ad();
    var tmp;
    if (!(t == null) ? isInterface(t, KClass) : false) {
      tmp = t;
    } else {
      var tmp0_error = 'Only KClass supported as classifier, got ' + t;
      throw IllegalStateException_init_$Create$(toString(tmp0_error));
    }
    var tmp_0 = tmp;
    return isInterface(tmp_0, KClass) ? tmp_0 : THROW_CCE();
  }
  function cachedSerialNames(_this__u8e3s4) {
    init_properties_Platform_common_kt_9ujmfm();
    if (isInterface(_this__u8e3s4, CachedNames))
      return _this__u8e3s4.bt();
    var result = HashSet_init_$Create$_1(_this__u8e3s4.yr());
    var inductionVariable = 0;
    var last = _this__u8e3s4.yr();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.collections.plusAssign' call
        var tmp0_plusAssign = _this__u8e3s4.zr(i);
        result.a(tmp0_plusAssign);
      }
       while (inductionVariable < last);
    return result;
  }
  var properties_initialized_Platform_common_kt_i7q4ty;
  function init_properties_Platform_common_kt_9ujmfm() {
    if (properties_initialized_Platform_common_kt_i7q4ty) {
    } else {
      properties_initialized_Platform_common_kt_i7q4ty = true;
      var tmp$ret$2;
      // Inline function 'kotlin.arrayOf' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = [];
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      EMPTY_DESCRIPTOR_ARRAY = tmp$ret$2;
    }
  }
  function throwMissingFieldException(seen, goldenMask, descriptor) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp$ret$0 = ArrayList_init_$Create$_0();
    var missingFields = tmp$ret$0;
    var missingFieldsBits = goldenMask & ~seen;
    var inductionVariable = 0;
    if (inductionVariable < 32)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!((missingFieldsBits & 1) === 0)) {
          // Inline function 'kotlin.collections.plusAssign' call
          var tmp0_plusAssign = descriptor.zr(i);
          missingFields.a(tmp0_plusAssign);
        }
        missingFieldsBits = missingFieldsBits >>> 1 | 0;
      }
       while (inductionVariable < 32);
    throw MissingFieldException_init_$Create$(missingFields, descriptor.vr());
  }
  function hashCodeImpl(_this__u8e3s4, typeParams) {
    var result = getStringHashCode(_this__u8e3s4.vr());
    result = imul(31, result) + contentHashCode(typeParams) | 0;
    var elementDescriptors = get_elementDescriptors(_this__u8e3s4);
    var tmp$ret$4;
    // Inline function 'kotlinx.serialization.internal.elementsHashCodeBy' call
    var tmp$ret$3;
    // Inline function 'kotlin.collections.fold' call
    var accumulator = 1;
    var tmp0_iterator = elementDescriptors.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      var tmp$ret$2;
      // Inline function 'kotlinx.serialization.internal.elementsHashCodeBy.<anonymous>' call
      var tmp0__anonymous__q1qw7t = accumulator;
      var tmp = imul(31, tmp0__anonymous__q1qw7t);
      var tmp$ret$1;
      // Inline function 'kotlin.hashCode' call
      var tmp$ret$0;
      // Inline function 'kotlinx.serialization.internal.hashCodeImpl.<anonymous>' call
      tmp$ret$0 = element.vr();
      var tmp0_hashCode = tmp$ret$0;
      var tmp0_safe_receiver = tmp0_hashCode;
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
      tmp$ret$1 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
      tmp$ret$2 = tmp + tmp$ret$1 | 0;
      accumulator = tmp$ret$2;
    }
    tmp$ret$3 = accumulator;
    tmp$ret$4 = tmp$ret$3;
    var namesHash = tmp$ret$4;
    var tmp$ret$9;
    // Inline function 'kotlinx.serialization.internal.elementsHashCodeBy' call
    var tmp$ret$8;
    // Inline function 'kotlin.collections.fold' call
    var accumulator_0 = 1;
    var tmp0_iterator_0 = elementDescriptors.f();
    while (tmp0_iterator_0.g()) {
      var element_0 = tmp0_iterator_0.h();
      var tmp$ret$7;
      // Inline function 'kotlinx.serialization.internal.elementsHashCodeBy.<anonymous>' call
      var tmp0__anonymous__q1qw7t_0 = accumulator_0;
      var tmp_0 = imul(31, tmp0__anonymous__q1qw7t_0);
      var tmp$ret$6;
      // Inline function 'kotlin.hashCode' call
      var tmp$ret$5;
      // Inline function 'kotlinx.serialization.internal.hashCodeImpl.<anonymous>' call
      tmp$ret$5 = element_0.wr();
      var tmp0_hashCode_0 = tmp$ret$5;
      var tmp0_safe_receiver_0 = tmp0_hashCode_0;
      var tmp1_elvis_lhs_0 = tmp0_safe_receiver_0 == null ? null : hashCode(tmp0_safe_receiver_0);
      tmp$ret$6 = tmp1_elvis_lhs_0 == null ? 0 : tmp1_elvis_lhs_0;
      tmp$ret$7 = tmp_0 + tmp$ret$6 | 0;
      accumulator_0 = tmp$ret$7;
    }
    tmp$ret$8 = accumulator_0;
    tmp$ret$9 = tmp$ret$8;
    var kindHash = tmp$ret$9;
    result = imul(31, result) + namesHash | 0;
    result = imul(31, result) + kindHash | 0;
    return result;
  }
  function _get_indices__xyiwmu($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = indices$factory();
    tmp$ret$0 = $this.wz_1.f1();
    return tmp$ret$0;
  }
  function _get_childSerializers__7vnyfa($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = childSerializers$factory();
    tmp$ret$0 = $this.xz_1.f1();
    return tmp$ret$0;
  }
  function _get__hashCode__tgwhef_0($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = _hashCode$factory_0();
    tmp$ret$0 = $this.zz_1.f1();
    return tmp$ret$0;
  }
  function buildIndices($this) {
    var indices = HashMap_init_$Create$();
    var inductionVariable = 0;
    var last = $this.sz_1.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.collections.set' call
        var tmp0_set = $this.sz_1[i];
        indices.u(tmp0_set, i);
      }
       while (inductionVariable <= last);
    return indices;
  }
  function PluginGeneratedSerialDescriptor$indices$delegate$lambda(this$0) {
    return function () {
      return buildIndices(this$0);
    };
  }
  function PluginGeneratedSerialDescriptor$childSerializers$delegate$lambda(this$0) {
    return function () {
      var tmp0_safe_receiver = this$0.pz_1;
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.d10();
      var tmp;
      if (tmp1_elvis_lhs == null) {
        var tmp$ret$0;
        // Inline function 'kotlin.emptyArray' call
        tmp$ret$0 = [];
        tmp = tmp$ret$0;
      } else {
        tmp = tmp1_elvis_lhs;
      }
      return tmp;
    };
  }
  function PluginGeneratedSerialDescriptor$typeParameterDescriptors$delegate$lambda(this$0) {
    return function () {
      var tmp0_safe_receiver = this$0.pz_1;
      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.e10();
      var tmp;
      if (tmp1_safe_receiver == null) {
        tmp = null;
      } else {
        var tmp$ret$2;
        // Inline function 'kotlin.collections.map' call
        var tmp$ret$1;
        // Inline function 'kotlin.collections.mapTo' call
        var tmp0_mapTo = ArrayList_init_$Create$(tmp1_safe_receiver.length);
        var tmp0_iterator = arrayIterator(tmp1_safe_receiver);
        while (tmp0_iterator.g()) {
          var item = tmp0_iterator.h();
          var tmp$ret$0;
          // Inline function 'kotlinx.serialization.internal.PluginGeneratedSerialDescriptor.typeParameterDescriptors$delegate.<anonymous>.<anonymous>' call
          tmp$ret$0 = item.mr();
          tmp0_mapTo.a(tmp$ret$0);
        }
        tmp$ret$1 = tmp0_mapTo;
        tmp$ret$2 = tmp$ret$1;
        tmp = tmp$ret$2;
      }
      return compactArray(tmp);
    };
  }
  function PluginGeneratedSerialDescriptor$_hashCode$delegate$lambda(this$0) {
    return function () {
      return hashCodeImpl(this$0, this$0.a10());
    };
  }
  function PluginGeneratedSerialDescriptor$toString$lambda(this$0) {
    return function (it) {
      return it.e1() + ': ' + this$0.bs(it.f1()).vr();
    };
  }
  function PluginGeneratedSerialDescriptor(serialName, generatedSerializer, elementsCount) {
    this.oz_1 = serialName;
    this.pz_1 = generatedSerializer;
    this.qz_1 = elementsCount;
    this.rz_1 = -1;
    var tmp = this;
    var tmp_0 = 0;
    var tmp_1 = this.qz_1;
    var tmp$ret$0;
    // Inline function 'kotlin.arrayOfNulls' call
    tmp$ret$0 = fillArrayVal(Array(tmp_1), null);
    var tmp_2 = tmp$ret$0;
    while (tmp_0 < tmp_1) {
      var tmp_3 = tmp_0;
      var tmp$ret$1;
      // Inline function 'kotlinx.serialization.internal.PluginGeneratedSerialDescriptor.names.<anonymous>' call
      tmp$ret$1 = '[UNINITIALIZED]';
      tmp_2[tmp_3] = tmp$ret$1;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp.sz_1 = tmp_2;
    var tmp_4 = this;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp0_arrayOfNulls = this.qz_1;
    tmp$ret$2 = fillArrayVal(Array(tmp0_arrayOfNulls), null);
    tmp_4.tz_1 = tmp$ret$2;
    this.uz_1 = null;
    this.vz_1 = booleanArray(this.qz_1);
    var tmp_5 = this;
    tmp_5.wz_1 = lazy(PluginGeneratedSerialDescriptor$indices$delegate$lambda(this));
    var tmp_6 = this;
    tmp_6.xz_1 = lazy(PluginGeneratedSerialDescriptor$childSerializers$delegate$lambda(this));
    var tmp_7 = this;
    tmp_7.yz_1 = lazy(PluginGeneratedSerialDescriptor$typeParameterDescriptors$delegate$lambda(this));
    var tmp_8 = this;
    tmp_8.zz_1 = lazy(PluginGeneratedSerialDescriptor$_hashCode$delegate$lambda(this));
  }
  PluginGeneratedSerialDescriptor.prototype.vr = function () {
    return this.oz_1;
  };
  PluginGeneratedSerialDescriptor.prototype.yr = function () {
    return this.qz_1;
  };
  PluginGeneratedSerialDescriptor.prototype.wr = function () {
    return CLASS_getInstance();
  };
  PluginGeneratedSerialDescriptor.prototype.bt = function () {
    return _get_indices__xyiwmu(this).l3();
  };
  PluginGeneratedSerialDescriptor.prototype.a10 = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = typeParameterDescriptors$factory();
    tmp$ret$0 = this.yz_1.f1();
    return tmp$ret$0;
  };
  PluginGeneratedSerialDescriptor.prototype.b10 = function (name, isOptional) {
    var tmp0_this = this;
    tmp0_this.rz_1 = tmp0_this.rz_1 + 1 | 0;
    this.sz_1[tmp0_this.rz_1] = name;
    this.vz_1[this.rz_1] = isOptional;
    this.tz_1[this.rz_1] = null;
  };
  PluginGeneratedSerialDescriptor.prototype.bs = function (index) {
    return getChecked(_get_childSerializers__7vnyfa(this), index).mr();
  };
  PluginGeneratedSerialDescriptor.prototype.zr = function (index) {
    return getChecked(this.sz_1, index);
  };
  PluginGeneratedSerialDescriptor.prototype.as = function (name) {
    var tmp0_elvis_lhs = _get_indices__xyiwmu(this).t(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      Companion_getInstance_1();
      tmp = -3;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  PluginGeneratedSerialDescriptor.prototype.equals = function (other) {
    var tmp$ret$0;
    $l$block_5: {
      // Inline function 'kotlinx.serialization.internal.equalsImpl' call
      if (this === other) {
        tmp$ret$0 = true;
        break $l$block_5;
      }
      if (!(other instanceof PluginGeneratedSerialDescriptor)) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.vr() === other.vr())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var tmp$ret$1;
      // Inline function 'kotlinx.serialization.internal.PluginGeneratedSerialDescriptor.equals.<anonymous>' call
      var tmp0__anonymous__q1qw7t = other;
      tmp$ret$1 = contentEquals(this.a10(), tmp0__anonymous__q1qw7t.a10());
      if (!tmp$ret$1) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.yr() === other.yr())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var inductionVariable = 0;
      var last = this.yr();
      if (inductionVariable < last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (!(this.bs(index).vr() === other.bs(index).vr())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
          if (!equals(this.bs(index).wr(), other.bs(index).wr())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
        }
         while (inductionVariable < last);
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  PluginGeneratedSerialDescriptor.prototype.hashCode = function () {
    return _get__hashCode__tgwhef_0(this);
  };
  PluginGeneratedSerialDescriptor.prototype.toString = function () {
    var tmp = _get_indices__xyiwmu(this).d1();
    var tmp_0 = this.vr() + '(';
    return joinToString$default(tmp, ', ', tmp_0, ')', 0, null, PluginGeneratedSerialDescriptor$toString$lambda(this), 24, null);
  };
  PluginGeneratedSerialDescriptor.$metadata$ = classMeta('PluginGeneratedSerialDescriptor', [SerialDescriptor, CachedNames]);
  function indices$factory() {
    return getPropertyCallableRef('indices', 1, KProperty1, function (receiver) {
      return _get_indices__xyiwmu(receiver);
    }, null);
  }
  function childSerializers$factory() {
    return getPropertyCallableRef('childSerializers', 1, KProperty1, function (receiver) {
      return _get_childSerializers__7vnyfa(receiver);
    }, null);
  }
  function typeParameterDescriptors$factory() {
    return getPropertyCallableRef('typeParameterDescriptors', 1, KProperty1, function (receiver) {
      return receiver.a10();
    }, null);
  }
  function _hashCode$factory_0() {
    return getPropertyCallableRef('_hashCode', 1, KProperty1, function (receiver) {
      return _get__hashCode__tgwhef_0(receiver);
    }, null);
  }
  function get_EMPTY_SERIALIZER_ARRAY() {
    init_properties_PluginHelperInterfaces_kt_tblf27();
    return EMPTY_SERIALIZER_ARRAY;
  }
  var EMPTY_SERIALIZER_ARRAY;
  function GeneratedSerializer() {
  }
  GeneratedSerializer.$metadata$ = interfaceMeta('GeneratedSerializer', [KSerializer]);
  function SerializerFactory() {
  }
  SerializerFactory.$metadata$ = interfaceMeta('SerializerFactory');
  var properties_initialized_PluginHelperInterfaces_kt_ap8in1;
  function init_properties_PluginHelperInterfaces_kt_tblf27() {
    if (properties_initialized_PluginHelperInterfaces_kt_ap8in1) {
    } else {
      properties_initialized_PluginHelperInterfaces_kt_ap8in1 = true;
      var tmp$ret$2;
      // Inline function 'kotlin.arrayOf' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = [];
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      EMPTY_SERIALIZER_ARRAY = tmp$ret$2;
    }
  }
  function CharArraySerializer_0() {
    CharArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_2(Companion_getInstance_0()));
  }
  CharArraySerializer_0.prototype.c11 = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  CharArraySerializer_0.prototype.uw = function (_this__u8e3s4) {
    return this.c11((!(_this__u8e3s4 == null) ? isCharArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  CharArraySerializer_0.prototype.d11 = function (_this__u8e3s4) {
    return new CharArrayBuilder(_this__u8e3s4);
  };
  CharArraySerializer_0.prototype.pw = function (_this__u8e3s4) {
    return this.d11((!(_this__u8e3s4 == null) ? isCharArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  CharArraySerializer_0.prototype.ow = function () {
    return charArray(0);
  };
  CharArraySerializer_0.prototype.e11 = function (decoder, index, builder, checkIndex) {
    builder.h11(decoder.au(this.ew_1, index));
  };
  CharArraySerializer_0.prototype.qw = function (decoder, index, builder, checkIndex) {
    return this.e11(decoder, index, builder instanceof CharArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  CharArraySerializer_0.prototype.i11 = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.bv(this.ew_1, i, content[i]);
      }
       while (inductionVariable < size);
  };
  CharArraySerializer_0.prototype.sw = function (encoder, content, size) {
    return this.i11(encoder, (!(content == null) ? isCharArray(content) : false) ? content : THROW_CCE(), size);
  };
  CharArraySerializer_0.$metadata$ = objectMeta('CharArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var CharArraySerializer_instance;
  function CharArraySerializer_getInstance() {
    if (CharArraySerializer_instance == null)
      new CharArraySerializer_0();
    return CharArraySerializer_instance;
  }
  function DoubleArraySerializer_0() {
    DoubleArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_3(DoubleCompanionObject_getInstance()));
  }
  DoubleArraySerializer_0.prototype.l11 = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  DoubleArraySerializer_0.prototype.uw = function (_this__u8e3s4) {
    return this.l11((!(_this__u8e3s4 == null) ? isDoubleArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  DoubleArraySerializer_0.prototype.m11 = function (_this__u8e3s4) {
    return new DoubleArrayBuilder(_this__u8e3s4);
  };
  DoubleArraySerializer_0.prototype.pw = function (_this__u8e3s4) {
    return this.m11((!(_this__u8e3s4 == null) ? isDoubleArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  DoubleArraySerializer_0.prototype.ow = function () {
    return new Float64Array(0);
  };
  DoubleArraySerializer_0.prototype.n11 = function (decoder, index, builder, checkIndex) {
    builder.q11(decoder.zt(this.ew_1, index));
  };
  DoubleArraySerializer_0.prototype.qw = function (decoder, index, builder, checkIndex) {
    return this.n11(decoder, index, builder instanceof DoubleArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  DoubleArraySerializer_0.prototype.r11 = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.av(this.ew_1, i, content[i]);
      }
       while (inductionVariable < size);
  };
  DoubleArraySerializer_0.prototype.sw = function (encoder, content, size) {
    return this.r11(encoder, (!(content == null) ? isDoubleArray(content) : false) ? content : THROW_CCE(), size);
  };
  DoubleArraySerializer_0.$metadata$ = objectMeta('DoubleArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var DoubleArraySerializer_instance;
  function DoubleArraySerializer_getInstance() {
    if (DoubleArraySerializer_instance == null)
      new DoubleArraySerializer_0();
    return DoubleArraySerializer_instance;
  }
  function FloatArraySerializer_0() {
    FloatArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_4(FloatCompanionObject_getInstance()));
  }
  FloatArraySerializer_0.prototype.u11 = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  FloatArraySerializer_0.prototype.uw = function (_this__u8e3s4) {
    return this.u11((!(_this__u8e3s4 == null) ? isFloatArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  FloatArraySerializer_0.prototype.v11 = function (_this__u8e3s4) {
    return new FloatArrayBuilder(_this__u8e3s4);
  };
  FloatArraySerializer_0.prototype.pw = function (_this__u8e3s4) {
    return this.v11((!(_this__u8e3s4 == null) ? isFloatArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  FloatArraySerializer_0.prototype.ow = function () {
    return new Float32Array(0);
  };
  FloatArraySerializer_0.prototype.w11 = function (decoder, index, builder, checkIndex) {
    builder.z11(decoder.yt(this.ew_1, index));
  };
  FloatArraySerializer_0.prototype.qw = function (decoder, index, builder, checkIndex) {
    return this.w11(decoder, index, builder instanceof FloatArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  FloatArraySerializer_0.prototype.a12 = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.zu(this.ew_1, i, content[i]);
      }
       while (inductionVariable < size);
  };
  FloatArraySerializer_0.prototype.sw = function (encoder, content, size) {
    return this.a12(encoder, (!(content == null) ? isFloatArray(content) : false) ? content : THROW_CCE(), size);
  };
  FloatArraySerializer_0.$metadata$ = objectMeta('FloatArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var FloatArraySerializer_instance;
  function FloatArraySerializer_getInstance() {
    if (FloatArraySerializer_instance == null)
      new FloatArraySerializer_0();
    return FloatArraySerializer_instance;
  }
  function LongArraySerializer_0() {
    LongArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_5(Companion_getInstance()));
  }
  LongArraySerializer_0.prototype.d12 = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  LongArraySerializer_0.prototype.uw = function (_this__u8e3s4) {
    return this.d12((!(_this__u8e3s4 == null) ? isLongArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  LongArraySerializer_0.prototype.e12 = function (_this__u8e3s4) {
    return new LongArrayBuilder(_this__u8e3s4);
  };
  LongArraySerializer_0.prototype.pw = function (_this__u8e3s4) {
    return this.e12((!(_this__u8e3s4 == null) ? isLongArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  LongArraySerializer_0.prototype.ow = function () {
    return longArray(0);
  };
  LongArraySerializer_0.prototype.f12 = function (decoder, index, builder, checkIndex) {
    builder.i12(decoder.xt(this.ew_1, index));
  };
  LongArraySerializer_0.prototype.qw = function (decoder, index, builder, checkIndex) {
    return this.f12(decoder, index, builder instanceof LongArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  LongArraySerializer_0.prototype.j12 = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.yu(this.ew_1, i, content[i]);
      }
       while (inductionVariable < size);
  };
  LongArraySerializer_0.prototype.sw = function (encoder, content, size) {
    return this.j12(encoder, (!(content == null) ? isLongArray(content) : false) ? content : THROW_CCE(), size);
  };
  LongArraySerializer_0.$metadata$ = objectMeta('LongArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var LongArraySerializer_instance;
  function LongArraySerializer_getInstance() {
    if (LongArraySerializer_instance == null)
      new LongArraySerializer_0();
    return LongArraySerializer_instance;
  }
  function IntArraySerializer_0() {
    IntArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_6(IntCompanionObject_getInstance()));
  }
  IntArraySerializer_0.prototype.m12 = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  IntArraySerializer_0.prototype.uw = function (_this__u8e3s4) {
    return this.m12((!(_this__u8e3s4 == null) ? isIntArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  IntArraySerializer_0.prototype.n12 = function (_this__u8e3s4) {
    return new IntArrayBuilder(_this__u8e3s4);
  };
  IntArraySerializer_0.prototype.pw = function (_this__u8e3s4) {
    return this.n12((!(_this__u8e3s4 == null) ? isIntArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  IntArraySerializer_0.prototype.ow = function () {
    return new Int32Array(0);
  };
  IntArraySerializer_0.prototype.o12 = function (decoder, index, builder, checkIndex) {
    builder.r12(decoder.wt(this.ew_1, index));
  };
  IntArraySerializer_0.prototype.qw = function (decoder, index, builder, checkIndex) {
    return this.o12(decoder, index, builder instanceof IntArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  IntArraySerializer_0.prototype.s12 = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.xu(this.ew_1, i, content[i]);
      }
       while (inductionVariable < size);
  };
  IntArraySerializer_0.prototype.sw = function (encoder, content, size) {
    return this.s12(encoder, (!(content == null) ? isIntArray(content) : false) ? content : THROW_CCE(), size);
  };
  IntArraySerializer_0.$metadata$ = objectMeta('IntArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var IntArraySerializer_instance;
  function IntArraySerializer_getInstance() {
    if (IntArraySerializer_instance == null)
      new IntArraySerializer_0();
    return IntArraySerializer_instance;
  }
  function ShortArraySerializer_0() {
    ShortArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_7(ShortCompanionObject_getInstance()));
  }
  ShortArraySerializer_0.prototype.v12 = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  ShortArraySerializer_0.prototype.uw = function (_this__u8e3s4) {
    return this.v12((!(_this__u8e3s4 == null) ? isShortArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ShortArraySerializer_0.prototype.w12 = function (_this__u8e3s4) {
    return new ShortArrayBuilder(_this__u8e3s4);
  };
  ShortArraySerializer_0.prototype.pw = function (_this__u8e3s4) {
    return this.w12((!(_this__u8e3s4 == null) ? isShortArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ShortArraySerializer_0.prototype.ow = function () {
    return new Int16Array(0);
  };
  ShortArraySerializer_0.prototype.x12 = function (decoder, index, builder, checkIndex) {
    builder.a13(decoder.vt(this.ew_1, index));
  };
  ShortArraySerializer_0.prototype.qw = function (decoder, index, builder, checkIndex) {
    return this.x12(decoder, index, builder instanceof ShortArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  ShortArraySerializer_0.prototype.b13 = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.wu(this.ew_1, i, content[i]);
      }
       while (inductionVariable < size);
  };
  ShortArraySerializer_0.prototype.sw = function (encoder, content, size) {
    return this.b13(encoder, (!(content == null) ? isShortArray(content) : false) ? content : THROW_CCE(), size);
  };
  ShortArraySerializer_0.$metadata$ = objectMeta('ShortArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var ShortArraySerializer_instance;
  function ShortArraySerializer_getInstance() {
    if (ShortArraySerializer_instance == null)
      new ShortArraySerializer_0();
    return ShortArraySerializer_instance;
  }
  function ByteArraySerializer_0() {
    ByteArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_8(ByteCompanionObject_getInstance()));
  }
  ByteArraySerializer_0.prototype.e13 = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  ByteArraySerializer_0.prototype.uw = function (_this__u8e3s4) {
    return this.e13((!(_this__u8e3s4 == null) ? isByteArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ByteArraySerializer_0.prototype.f13 = function (_this__u8e3s4) {
    return new ByteArrayBuilder(_this__u8e3s4);
  };
  ByteArraySerializer_0.prototype.pw = function (_this__u8e3s4) {
    return this.f13((!(_this__u8e3s4 == null) ? isByteArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  ByteArraySerializer_0.prototype.ow = function () {
    return new Int8Array(0);
  };
  ByteArraySerializer_0.prototype.g13 = function (decoder, index, builder, checkIndex) {
    builder.j13(decoder.ut(this.ew_1, index));
  };
  ByteArraySerializer_0.prototype.qw = function (decoder, index, builder, checkIndex) {
    return this.g13(decoder, index, builder instanceof ByteArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  ByteArraySerializer_0.prototype.k13 = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.vu(this.ew_1, i, content[i]);
      }
       while (inductionVariable < size);
  };
  ByteArraySerializer_0.prototype.sw = function (encoder, content, size) {
    return this.k13(encoder, (!(content == null) ? isByteArray(content) : false) ? content : THROW_CCE(), size);
  };
  ByteArraySerializer_0.$metadata$ = objectMeta('ByteArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var ByteArraySerializer_instance;
  function ByteArraySerializer_getInstance() {
    if (ByteArraySerializer_instance == null)
      new ByteArraySerializer_0();
    return ByteArraySerializer_instance;
  }
  function BooleanArraySerializer_0() {
    BooleanArraySerializer_instance = this;
    PrimitiveArraySerializer.call(this, serializer_9(BooleanCompanionObject_getInstance()));
  }
  BooleanArraySerializer_0.prototype.n13 = function (_this__u8e3s4) {
    return _this__u8e3s4.length;
  };
  BooleanArraySerializer_0.prototype.uw = function (_this__u8e3s4) {
    return this.n13((!(_this__u8e3s4 == null) ? isBooleanArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  BooleanArraySerializer_0.prototype.o13 = function (_this__u8e3s4) {
    return new BooleanArrayBuilder(_this__u8e3s4);
  };
  BooleanArraySerializer_0.prototype.pw = function (_this__u8e3s4) {
    return this.o13((!(_this__u8e3s4 == null) ? isBooleanArray(_this__u8e3s4) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  BooleanArraySerializer_0.prototype.ow = function () {
    return booleanArray(0);
  };
  BooleanArraySerializer_0.prototype.p13 = function (decoder, index, builder, checkIndex) {
    builder.s13(decoder.tt(this.ew_1, index));
  };
  BooleanArraySerializer_0.prototype.qw = function (decoder, index, builder, checkIndex) {
    return this.p13(decoder, index, builder instanceof BooleanArrayBuilder ? builder : THROW_CCE(), checkIndex);
  };
  BooleanArraySerializer_0.prototype.t13 = function (encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.uu(this.ew_1, i, content[i]);
      }
       while (inductionVariable < size);
  };
  BooleanArraySerializer_0.prototype.sw = function (encoder, content, size) {
    return this.t13(encoder, (!(content == null) ? isBooleanArray(content) : false) ? content : THROW_CCE(), size);
  };
  BooleanArraySerializer_0.$metadata$ = objectMeta('BooleanArraySerializer', [KSerializer], undefined, undefined, undefined, PrimitiveArraySerializer.prototype);
  var BooleanArraySerializer_instance;
  function BooleanArraySerializer_getInstance() {
    if (BooleanArraySerializer_instance == null)
      new BooleanArraySerializer_0();
    return BooleanArraySerializer_instance;
  }
  function CharArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.f11_1 = bufferWithData;
    this.g11_1 = bufferWithData.length;
    this.wa(10);
  }
  CharArrayBuilder.prototype.gw = function () {
    return this.g11_1;
  };
  CharArrayBuilder.prototype.wa = function (requiredCapacity) {
    if (this.f11_1.length < requiredCapacity)
      this.f11_1 = copyOf(this.f11_1, coerceAtLeast(requiredCapacity, imul(this.f11_1.length, 2)));
  };
  CharArrayBuilder.prototype.h11 = function (c) {
    this.zw(0, 1, null);
    var tmp = this.f11_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.g11_1;
    tmp0_this.g11_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  CharArrayBuilder.prototype.iw = function () {
    return copyOf(this.f11_1, this.g11_1);
  };
  CharArrayBuilder.$metadata$ = classMeta('CharArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function DoubleArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.o11_1 = bufferWithData;
    this.p11_1 = bufferWithData.length;
    this.wa(10);
  }
  DoubleArrayBuilder.prototype.gw = function () {
    return this.p11_1;
  };
  DoubleArrayBuilder.prototype.wa = function (requiredCapacity) {
    if (this.o11_1.length < requiredCapacity)
      this.o11_1 = copyOf_0(this.o11_1, coerceAtLeast(requiredCapacity, imul(this.o11_1.length, 2)));
  };
  DoubleArrayBuilder.prototype.q11 = function (c) {
    this.zw(0, 1, null);
    var tmp = this.o11_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.p11_1;
    tmp0_this.p11_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  DoubleArrayBuilder.prototype.iw = function () {
    return copyOf_0(this.o11_1, this.p11_1);
  };
  DoubleArrayBuilder.$metadata$ = classMeta('DoubleArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function FloatArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.x11_1 = bufferWithData;
    this.y11_1 = bufferWithData.length;
    this.wa(10);
  }
  FloatArrayBuilder.prototype.gw = function () {
    return this.y11_1;
  };
  FloatArrayBuilder.prototype.wa = function (requiredCapacity) {
    if (this.x11_1.length < requiredCapacity)
      this.x11_1 = copyOf_1(this.x11_1, coerceAtLeast(requiredCapacity, imul(this.x11_1.length, 2)));
  };
  FloatArrayBuilder.prototype.z11 = function (c) {
    this.zw(0, 1, null);
    var tmp = this.x11_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.y11_1;
    tmp0_this.y11_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  FloatArrayBuilder.prototype.iw = function () {
    return copyOf_1(this.x11_1, this.y11_1);
  };
  FloatArrayBuilder.$metadata$ = classMeta('FloatArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function LongArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.g12_1 = bufferWithData;
    this.h12_1 = bufferWithData.length;
    this.wa(10);
  }
  LongArrayBuilder.prototype.gw = function () {
    return this.h12_1;
  };
  LongArrayBuilder.prototype.wa = function (requiredCapacity) {
    if (this.g12_1.length < requiredCapacity)
      this.g12_1 = copyOf_2(this.g12_1, coerceAtLeast(requiredCapacity, imul(this.g12_1.length, 2)));
  };
  LongArrayBuilder.prototype.i12 = function (c) {
    this.zw(0, 1, null);
    var tmp = this.g12_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.h12_1;
    tmp0_this.h12_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  LongArrayBuilder.prototype.iw = function () {
    return copyOf_2(this.g12_1, this.h12_1);
  };
  LongArrayBuilder.$metadata$ = classMeta('LongArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function IntArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.p12_1 = bufferWithData;
    this.q12_1 = bufferWithData.length;
    this.wa(10);
  }
  IntArrayBuilder.prototype.gw = function () {
    return this.q12_1;
  };
  IntArrayBuilder.prototype.wa = function (requiredCapacity) {
    if (this.p12_1.length < requiredCapacity)
      this.p12_1 = copyOf_3(this.p12_1, coerceAtLeast(requiredCapacity, imul(this.p12_1.length, 2)));
  };
  IntArrayBuilder.prototype.r12 = function (c) {
    this.zw(0, 1, null);
    var tmp = this.p12_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.q12_1;
    tmp0_this.q12_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  IntArrayBuilder.prototype.iw = function () {
    return copyOf_3(this.p12_1, this.q12_1);
  };
  IntArrayBuilder.$metadata$ = classMeta('IntArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function ShortArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.y12_1 = bufferWithData;
    this.z12_1 = bufferWithData.length;
    this.wa(10);
  }
  ShortArrayBuilder.prototype.gw = function () {
    return this.z12_1;
  };
  ShortArrayBuilder.prototype.wa = function (requiredCapacity) {
    if (this.y12_1.length < requiredCapacity)
      this.y12_1 = copyOf_4(this.y12_1, coerceAtLeast(requiredCapacity, imul(this.y12_1.length, 2)));
  };
  ShortArrayBuilder.prototype.a13 = function (c) {
    this.zw(0, 1, null);
    var tmp = this.y12_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.z12_1;
    tmp0_this.z12_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  ShortArrayBuilder.prototype.iw = function () {
    return copyOf_4(this.y12_1, this.z12_1);
  };
  ShortArrayBuilder.$metadata$ = classMeta('ShortArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function ByteArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.h13_1 = bufferWithData;
    this.i13_1 = bufferWithData.length;
    this.wa(10);
  }
  ByteArrayBuilder.prototype.gw = function () {
    return this.i13_1;
  };
  ByteArrayBuilder.prototype.wa = function (requiredCapacity) {
    if (this.h13_1.length < requiredCapacity)
      this.h13_1 = copyOf_5(this.h13_1, coerceAtLeast(requiredCapacity, imul(this.h13_1.length, 2)));
  };
  ByteArrayBuilder.prototype.j13 = function (c) {
    this.zw(0, 1, null);
    var tmp = this.h13_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.i13_1;
    tmp0_this.i13_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  ByteArrayBuilder.prototype.iw = function () {
    return copyOf_5(this.h13_1, this.i13_1);
  };
  ByteArrayBuilder.$metadata$ = classMeta('ByteArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function BooleanArrayBuilder(bufferWithData) {
    PrimitiveArrayBuilder.call(this);
    this.q13_1 = bufferWithData;
    this.r13_1 = bufferWithData.length;
    this.wa(10);
  }
  BooleanArrayBuilder.prototype.gw = function () {
    return this.r13_1;
  };
  BooleanArrayBuilder.prototype.wa = function (requiredCapacity) {
    if (this.q13_1.length < requiredCapacity)
      this.q13_1 = copyOf_6(this.q13_1, coerceAtLeast(requiredCapacity, imul(this.q13_1.length, 2)));
  };
  BooleanArrayBuilder.prototype.s13 = function (c) {
    this.zw(0, 1, null);
    var tmp = this.q13_1;
    var tmp0_this = this;
    var tmp1 = tmp0_this.r13_1;
    tmp0_this.r13_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  };
  BooleanArrayBuilder.prototype.iw = function () {
    return copyOf_6(this.q13_1, this.r13_1);
  };
  BooleanArrayBuilder.$metadata$ = classMeta('BooleanArrayBuilder', undefined, undefined, undefined, undefined, PrimitiveArrayBuilder.prototype);
  function get_BUILTIN_SERIALIZERS() {
    init_properties_Primitives_kt_u7dn2q();
    return BUILTIN_SERIALIZERS;
  }
  var BUILTIN_SERIALIZERS;
  function StringSerializer() {
    StringSerializer_instance = this;
    this.u13_1 = new PrimitiveSerialDescriptor_0('kotlin.String', STRING_getInstance());
  }
  StringSerializer.prototype.mr = function () {
    return this.u13_1;
  };
  StringSerializer.prototype.v13 = function (encoder, value) {
    return encoder.su(value);
  };
  StringSerializer.prototype.nr = function (encoder, value) {
    return this.v13(encoder, (!(value == null) ? typeof value === 'string' : false) ? value : THROW_CCE());
  };
  StringSerializer.prototype.or = function (decoder) {
    return decoder.nt();
  };
  StringSerializer.$metadata$ = objectMeta('StringSerializer', [KSerializer]);
  var StringSerializer_instance;
  function StringSerializer_getInstance() {
    if (StringSerializer_instance == null)
      new StringSerializer();
    return StringSerializer_instance;
  }
  function CharSerializer() {
    CharSerializer_instance = this;
    this.w13_1 = new PrimitiveSerialDescriptor_0('kotlin.Char', CHAR_getInstance());
  }
  CharSerializer.prototype.mr = function () {
    return this.w13_1;
  };
  CharSerializer.prototype.x13 = function (encoder, value) {
    return encoder.ru(value);
  };
  CharSerializer.prototype.nr = function (encoder, value) {
    return this.x13(encoder, value instanceof Char ? value.q1_1 : THROW_CCE());
  };
  CharSerializer.prototype.y13 = function (decoder) {
    return decoder.mt();
  };
  CharSerializer.prototype.or = function (decoder) {
    return new Char(this.y13(decoder));
  };
  CharSerializer.$metadata$ = objectMeta('CharSerializer', [KSerializer]);
  var CharSerializer_instance;
  function CharSerializer_getInstance() {
    if (CharSerializer_instance == null)
      new CharSerializer();
    return CharSerializer_instance;
  }
  function DoubleSerializer() {
    DoubleSerializer_instance = this;
    this.z13_1 = new PrimitiveSerialDescriptor_0('kotlin.Double', DOUBLE_getInstance());
  }
  DoubleSerializer.prototype.mr = function () {
    return this.z13_1;
  };
  DoubleSerializer.prototype.a14 = function (encoder, value) {
    return encoder.qu(value);
  };
  DoubleSerializer.prototype.nr = function (encoder, value) {
    return this.a14(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
  };
  DoubleSerializer.prototype.or = function (decoder) {
    return decoder.lt();
  };
  DoubleSerializer.$metadata$ = objectMeta('DoubleSerializer', [KSerializer]);
  var DoubleSerializer_instance;
  function DoubleSerializer_getInstance() {
    if (DoubleSerializer_instance == null)
      new DoubleSerializer();
    return DoubleSerializer_instance;
  }
  function FloatSerializer() {
    FloatSerializer_instance = this;
    this.b14_1 = new PrimitiveSerialDescriptor_0('kotlin.Float', FLOAT_getInstance());
  }
  FloatSerializer.prototype.mr = function () {
    return this.b14_1;
  };
  FloatSerializer.prototype.c14 = function (encoder, value) {
    return encoder.pu(value);
  };
  FloatSerializer.prototype.nr = function (encoder, value) {
    return this.c14(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
  };
  FloatSerializer.prototype.or = function (decoder) {
    return decoder.kt();
  };
  FloatSerializer.$metadata$ = objectMeta('FloatSerializer', [KSerializer]);
  var FloatSerializer_instance;
  function FloatSerializer_getInstance() {
    if (FloatSerializer_instance == null)
      new FloatSerializer();
    return FloatSerializer_instance;
  }
  function LongSerializer() {
    LongSerializer_instance = this;
    this.d14_1 = new PrimitiveSerialDescriptor_0('kotlin.Long', LONG_getInstance());
  }
  LongSerializer.prototype.mr = function () {
    return this.d14_1;
  };
  LongSerializer.prototype.e14 = function (encoder, value) {
    return encoder.ou(value);
  };
  LongSerializer.prototype.nr = function (encoder, value) {
    return this.e14(encoder, value instanceof Long ? value : THROW_CCE());
  };
  LongSerializer.prototype.or = function (decoder) {
    return decoder.jt();
  };
  LongSerializer.$metadata$ = objectMeta('LongSerializer', [KSerializer]);
  var LongSerializer_instance;
  function LongSerializer_getInstance() {
    if (LongSerializer_instance == null)
      new LongSerializer();
    return LongSerializer_instance;
  }
  function IntSerializer() {
    IntSerializer_instance = this;
    this.f14_1 = new PrimitiveSerialDescriptor_0('kotlin.Int', INT_getInstance());
  }
  IntSerializer.prototype.mr = function () {
    return this.f14_1;
  };
  IntSerializer.prototype.g14 = function (encoder, value) {
    return encoder.nu(value);
  };
  IntSerializer.prototype.nr = function (encoder, value) {
    return this.g14(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
  };
  IntSerializer.prototype.or = function (decoder) {
    return decoder.it();
  };
  IntSerializer.$metadata$ = objectMeta('IntSerializer', [KSerializer]);
  var IntSerializer_instance;
  function IntSerializer_getInstance() {
    if (IntSerializer_instance == null)
      new IntSerializer();
    return IntSerializer_instance;
  }
  function ShortSerializer() {
    ShortSerializer_instance = this;
    this.h14_1 = new PrimitiveSerialDescriptor_0('kotlin.Short', SHORT_getInstance());
  }
  ShortSerializer.prototype.mr = function () {
    return this.h14_1;
  };
  ShortSerializer.prototype.i14 = function (encoder, value) {
    return encoder.mu(value);
  };
  ShortSerializer.prototype.nr = function (encoder, value) {
    return this.i14(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
  };
  ShortSerializer.prototype.or = function (decoder) {
    return decoder.ht();
  };
  ShortSerializer.$metadata$ = objectMeta('ShortSerializer', [KSerializer]);
  var ShortSerializer_instance;
  function ShortSerializer_getInstance() {
    if (ShortSerializer_instance == null)
      new ShortSerializer();
    return ShortSerializer_instance;
  }
  function ByteSerializer() {
    ByteSerializer_instance = this;
    this.j14_1 = new PrimitiveSerialDescriptor_0('kotlin.Byte', BYTE_getInstance());
  }
  ByteSerializer.prototype.mr = function () {
    return this.j14_1;
  };
  ByteSerializer.prototype.k14 = function (encoder, value) {
    return encoder.lu(value);
  };
  ByteSerializer.prototype.nr = function (encoder, value) {
    return this.k14(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : THROW_CCE());
  };
  ByteSerializer.prototype.or = function (decoder) {
    return decoder.gt();
  };
  ByteSerializer.$metadata$ = objectMeta('ByteSerializer', [KSerializer]);
  var ByteSerializer_instance;
  function ByteSerializer_getInstance() {
    if (ByteSerializer_instance == null)
      new ByteSerializer();
    return ByteSerializer_instance;
  }
  function BooleanSerializer() {
    BooleanSerializer_instance = this;
    this.l14_1 = new PrimitiveSerialDescriptor_0('kotlin.Boolean', BOOLEAN_getInstance());
  }
  BooleanSerializer.prototype.mr = function () {
    return this.l14_1;
  };
  BooleanSerializer.prototype.m14 = function (encoder, value) {
    return encoder.ku(value);
  };
  BooleanSerializer.prototype.nr = function (encoder, value) {
    return this.m14(encoder, (!(value == null) ? typeof value === 'boolean' : false) ? value : THROW_CCE());
  };
  BooleanSerializer.prototype.or = function (decoder) {
    return decoder.ft();
  };
  BooleanSerializer.$metadata$ = objectMeta('BooleanSerializer', [KSerializer]);
  var BooleanSerializer_instance;
  function BooleanSerializer_getInstance() {
    if (BooleanSerializer_instance == null)
      new BooleanSerializer();
    return BooleanSerializer_instance;
  }
  function UnitSerializer() {
    UnitSerializer_instance = this;
    this.n14_1 = new ObjectSerializer('kotlin.Unit', Unit_getInstance());
  }
  UnitSerializer.prototype.o14 = function (decoder) {
    this.n14_1.or(decoder);
  };
  UnitSerializer.prototype.or = function (decoder) {
    this.o14(decoder);
    return Unit_getInstance();
  };
  UnitSerializer.prototype.p14 = function (encoder, value) {
    this.n14_1.nr(encoder, Unit_getInstance());
  };
  UnitSerializer.prototype.nr = function (encoder, value) {
    return this.p14(encoder, value instanceof Unit ? value : THROW_CCE());
  };
  UnitSerializer.prototype.mr = function () {
    return this.n14_1.y10_1;
  };
  UnitSerializer.$metadata$ = objectMeta('UnitSerializer', [KSerializer]);
  var UnitSerializer_instance;
  function UnitSerializer_getInstance() {
    if (UnitSerializer_instance == null)
      new UnitSerializer();
    return UnitSerializer_instance;
  }
  function error($this) {
    throw IllegalStateException_init_$Create$('Primitive descriptor does not have elements');
  }
  function PrimitiveSerialDescriptor_0(serialName, kind) {
    this.q14_1 = serialName;
    this.r14_1 = kind;
  }
  PrimitiveSerialDescriptor_0.prototype.vr = function () {
    return this.q14_1;
  };
  PrimitiveSerialDescriptor_0.prototype.wr = function () {
    return this.r14_1;
  };
  PrimitiveSerialDescriptor_0.prototype.yr = function () {
    return 0;
  };
  PrimitiveSerialDescriptor_0.prototype.zr = function (index) {
    error(this);
  };
  PrimitiveSerialDescriptor_0.prototype.as = function (name) {
    error(this);
  };
  PrimitiveSerialDescriptor_0.prototype.bs = function (index) {
    error(this);
  };
  PrimitiveSerialDescriptor_0.prototype.toString = function () {
    return 'PrimitiveDescriptor(' + this.q14_1 + ')';
  };
  PrimitiveSerialDescriptor_0.$metadata$ = classMeta('PrimitiveSerialDescriptor', [SerialDescriptor]);
  function builtinSerializerOrNull(_this__u8e3s4) {
    init_properties_Primitives_kt_u7dn2q();
    var tmp = get_BUILTIN_SERIALIZERS().t(_this__u8e3s4);
    return (tmp == null ? true : isInterface(tmp, KSerializer)) ? tmp : THROW_CCE();
  }
  function PrimitiveDescriptorSafe(serialName, kind) {
    init_properties_Primitives_kt_u7dn2q();
    checkName(serialName);
    return new PrimitiveSerialDescriptor_0(serialName, kind);
  }
  function checkName(serialName) {
    init_properties_Primitives_kt_u7dn2q();
    var keys = get_BUILTIN_SERIALIZERS().l3();
    var tmp0_iterator = keys.f();
    while (tmp0_iterator.g()) {
      var primitive = tmp0_iterator.h();
      var simpleName = capitalize(ensureNotNull(primitive.qc()));
      var qualifiedName = 'kotlin.' + simpleName;
      if (equals_0(serialName, qualifiedName, true) ? true : equals_0(serialName, simpleName, true)) {
        throw IllegalArgumentException_init_$Create$(trimIndent('\n                The name of serial descriptor should uniquely identify associated serializer.\n                For serial name ' + serialName + ' there already exist ' + capitalize(simpleName) + 'Serializer.\n                Please refer to SerialDescriptor documentation for additional information.\n            '));
      }
    }
  }
  var properties_initialized_Primitives_kt_6dpii6;
  function init_properties_Primitives_kt_u7dn2q() {
    if (properties_initialized_Primitives_kt_6dpii6) {
    } else {
      properties_initialized_Primitives_kt_6dpii6 = true;
      BUILTIN_SERIALIZERS = mapOf([to(PrimitiveClasses_getInstance().ke(), serializer_1(StringCompanionObject_getInstance())), to(getKClass(Char), serializer_2(Companion_getInstance_0())), to(PrimitiveClasses_getInstance().ne(), CharArraySerializer()), to(PrimitiveClasses_getInstance().ie(), serializer_3(DoubleCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().te(), DoubleArraySerializer()), to(PrimitiveClasses_getInstance().he(), serializer_4(FloatCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().se(), FloatArraySerializer()), to(getKClass(Long), serializer_5(Companion_getInstance())), to(PrimitiveClasses_getInstance().re(), LongArraySerializer()), to(PrimitiveClasses_getInstance().ge(), serializer_6(IntCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().qe(), IntArraySerializer()), to(PrimitiveClasses_getInstance().fe(), serializer_7(ShortCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().pe(), ShortArraySerializer()), to(PrimitiveClasses_getInstance().ee(), serializer_8(ByteCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().oe(), ByteArraySerializer()), to(PrimitiveClasses_getInstance().de(), serializer_9(BooleanCompanionObject_getInstance())), to(PrimitiveClasses_getInstance().me(), BooleanArraySerializer()), to(getKClass(Unit), serializer_10(Unit_getInstance()))]);
    }
  }
  function NamedValueEncoder() {
    TaggedEncoder.call(this);
  }
  NamedValueEncoder.prototype.t14 = function (_this__u8e3s4, index) {
    return this.v14(this.u14(_this__u8e3s4, index));
  };
  NamedValueEncoder.prototype.v14 = function (nestedName) {
    var tmp0_elvis_lhs = this.x14();
    return this.y14(tmp0_elvis_lhs == null ? '' : tmp0_elvis_lhs, nestedName);
  };
  NamedValueEncoder.prototype.u14 = function (descriptor, index) {
    return descriptor.zr(index);
  };
  NamedValueEncoder.prototype.y14 = function (parentName, childName) {
    var tmp;
    var tmp$ret$0;
    // Inline function 'kotlin.text.isEmpty' call
    tmp$ret$0 = charSequenceLength(parentName) === 0;
    if (tmp$ret$0) {
      tmp = childName;
    } else {
      tmp = parentName + '.' + childName;
    }
    return tmp;
  };
  NamedValueEncoder.$metadata$ = classMeta('NamedValueEncoder', undefined, undefined, undefined, undefined, TaggedEncoder.prototype);
  function NamedValueDecoder() {
    TaggedDecoder.call(this);
  }
  NamedValueDecoder.prototype.t14 = function (_this__u8e3s4, index) {
    return this.v14(this.u14(_this__u8e3s4, index));
  };
  NamedValueDecoder.prototype.v14 = function (nestedName) {
    var tmp0_elvis_lhs = this.x14();
    return this.y14(tmp0_elvis_lhs == null ? '' : tmp0_elvis_lhs, nestedName);
  };
  NamedValueDecoder.prototype.u14 = function (desc, index) {
    return desc.zr(index);
  };
  NamedValueDecoder.prototype.y14 = function (parentName, childName) {
    var tmp;
    var tmp$ret$0;
    // Inline function 'kotlin.text.isEmpty' call
    tmp$ret$0 = charSequenceLength(parentName) === 0;
    if (tmp$ret$0) {
      tmp = childName;
    } else {
      tmp = parentName + '.' + childName;
    }
    return tmp;
  };
  NamedValueDecoder.$metadata$ = classMeta('NamedValueDecoder', undefined, undefined, undefined, undefined, TaggedDecoder.prototype);
  function encodeElement($this, desc, index) {
    var tag = $this.t14(desc, index);
    $this.m15(tag);
    return true;
  }
  function TaggedEncoder() {
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.arrayListOf' call
    tmp$ret$0 = ArrayList_init_$Create$_0();
    tmp.w14_1 = tmp$ret$0;
  }
  TaggedEncoder.prototype.sr = function () {
    return get_EmptySerializersModule();
  };
  TaggedEncoder.prototype.z14 = function (tag, value) {
    throw SerializationException_init_$Create$('Non-serializable ' + getKClassFromExpression(value) + ' is not supported by ' + getKClassFromExpression(this) + ' encoder');
  };
  TaggedEncoder.prototype.a15 = function (tag) {
    throw SerializationException_init_$Create$('null is not supported');
  };
  TaggedEncoder.prototype.b15 = function (tag, value) {
    return this.z14(tag, value);
  };
  TaggedEncoder.prototype.c15 = function (tag, value) {
    return this.z14(tag, value);
  };
  TaggedEncoder.prototype.d15 = function (tag, value) {
    return this.z14(tag, value);
  };
  TaggedEncoder.prototype.e15 = function (tag, value) {
    return this.z14(tag, value);
  };
  TaggedEncoder.prototype.f15 = function (tag, value) {
    return this.z14(tag, value);
  };
  TaggedEncoder.prototype.g15 = function (tag, value) {
    return this.z14(tag, value);
  };
  TaggedEncoder.prototype.h15 = function (tag, value) {
    return this.z14(tag, value);
  };
  TaggedEncoder.prototype.i15 = function (tag, value) {
    return this.z14(tag, new Char(value));
  };
  TaggedEncoder.prototype.j15 = function (tag, value) {
    return this.z14(tag, value);
  };
  TaggedEncoder.prototype.k15 = function (tag, inlineDescriptor) {
    var tmp$ret$0;
    // Inline function 'kotlin.apply' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlinx.serialization.internal.TaggedEncoder.encodeTaggedInline.<anonymous>' call
    this.m15(tag);
    tmp$ret$0 = this;
    return tmp$ret$0;
  };
  TaggedEncoder.prototype.tu = function (inlineDescriptor) {
    return this.k15(this.n15(), inlineDescriptor);
  };
  TaggedEncoder.prototype.fv = function () {
  };
  TaggedEncoder.prototype.ju = function () {
    return this.a15(this.n15());
  };
  TaggedEncoder.prototype.ku = function (value) {
    return this.h15(this.n15(), value);
  };
  TaggedEncoder.prototype.lu = function (value) {
    return this.c15(this.n15(), value);
  };
  TaggedEncoder.prototype.mu = function (value) {
    return this.d15(this.n15(), value);
  };
  TaggedEncoder.prototype.nu = function (value) {
    return this.b15(this.n15(), value);
  };
  TaggedEncoder.prototype.ou = function (value) {
    return this.e15(this.n15(), value);
  };
  TaggedEncoder.prototype.pu = function (value) {
    return this.f15(this.n15(), value);
  };
  TaggedEncoder.prototype.qu = function (value) {
    return this.g15(this.n15(), value);
  };
  TaggedEncoder.prototype.ru = function (value) {
    return this.i15(this.n15(), value);
  };
  TaggedEncoder.prototype.su = function (value) {
    return this.j15(this.n15(), value);
  };
  TaggedEncoder.prototype.rt = function (descriptor) {
    return this;
  };
  TaggedEncoder.prototype.st = function (descriptor) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.isNotEmpty' call
    var tmp0_isNotEmpty = this.w14_1;
    tmp$ret$0 = !tmp0_isNotEmpty.p();
    if (tmp$ret$0) {
      this.n15();
    }
    this.l15(descriptor);
  };
  TaggedEncoder.prototype.l15 = function (descriptor) {
  };
  TaggedEncoder.prototype.uu = function (descriptor, index, value) {
    return this.h15(this.t14(descriptor, index), value);
  };
  TaggedEncoder.prototype.vu = function (descriptor, index, value) {
    return this.c15(this.t14(descriptor, index), value);
  };
  TaggedEncoder.prototype.wu = function (descriptor, index, value) {
    return this.d15(this.t14(descriptor, index), value);
  };
  TaggedEncoder.prototype.xu = function (descriptor, index, value) {
    return this.b15(this.t14(descriptor, index), value);
  };
  TaggedEncoder.prototype.yu = function (descriptor, index, value) {
    return this.e15(this.t14(descriptor, index), value);
  };
  TaggedEncoder.prototype.zu = function (descriptor, index, value) {
    return this.f15(this.t14(descriptor, index), value);
  };
  TaggedEncoder.prototype.av = function (descriptor, index, value) {
    return this.g15(this.t14(descriptor, index), value);
  };
  TaggedEncoder.prototype.bv = function (descriptor, index, value) {
    return this.i15(this.t14(descriptor, index), value);
  };
  TaggedEncoder.prototype.cv = function (descriptor, index, value) {
    return this.j15(this.t14(descriptor, index), value);
  };
  TaggedEncoder.prototype.dv = function (descriptor, index, serializer, value) {
    if (encodeElement(this, descriptor, index)) {
      this.ev(serializer, value);
    }
  };
  TaggedEncoder.prototype.e16 = function () {
    return last(this.w14_1);
  };
  TaggedEncoder.prototype.x14 = function () {
    return lastOrNull(this.w14_1);
  };
  TaggedEncoder.prototype.m15 = function (name) {
    this.w14_1.a(name);
  };
  TaggedEncoder.prototype.n15 = function () {
    var tmp;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.isNotEmpty' call
    var tmp0_isNotEmpty = this.w14_1;
    tmp$ret$0 = !tmp0_isNotEmpty.p();
    if (tmp$ret$0) {
      tmp = this.w14_1.ba(get_lastIndex(this.w14_1));
    } else {
      throw SerializationException_init_$Create$('No tag in stack for requested element');
    }
    return tmp;
  };
  TaggedEncoder.$metadata$ = classMeta('TaggedEncoder', [Encoder, CompositeEncoder]);
  function tagBlock($this, tag, block) {
    $this.m15(tag);
    var r = block();
    if (!$this.r15_1) {
      $this.n15();
    }
    $this.r15_1 = false;
    return r;
  }
  function TaggedDecoder$decodeSerializableElement$lambda(this$0, $deserializer, $previousValue) {
    return function () {
      return this$0.pt($deserializer, $previousValue);
    };
  }
  function TaggedDecoder() {
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.arrayListOf' call
    tmp$ret$0 = ArrayList_init_$Create$_0();
    tmp.q15_1 = tmp$ret$0;
    this.r15_1 = false;
  }
  TaggedDecoder.prototype.sr = function () {
    return get_EmptySerializersModule();
  };
  TaggedDecoder.prototype.s15 = function (tag) {
    throw SerializationException_init_$Create$('' + getKClassFromExpression(this) + " can't retrieve untyped values");
  };
  TaggedDecoder.prototype.t15 = function (tag) {
    return true;
  };
  TaggedDecoder.prototype.u15 = function (tag) {
    var tmp = this.s15(tag);
    return typeof tmp === 'boolean' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.v15 = function (tag) {
    var tmp = this.s15(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.w15 = function (tag) {
    var tmp = this.s15(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.x15 = function (tag) {
    var tmp = this.s15(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.y15 = function (tag) {
    var tmp = this.s15(tag);
    return tmp instanceof Long ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.z15 = function (tag) {
    var tmp = this.s15(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.a16 = function (tag) {
    var tmp = this.s15(tag);
    return typeof tmp === 'number' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.b16 = function (tag) {
    var tmp = this.s15(tag);
    return tmp instanceof Char ? tmp.q1_1 : THROW_CCE();
  };
  TaggedDecoder.prototype.c16 = function (tag) {
    var tmp = this.s15(tag);
    return typeof tmp === 'string' ? tmp : THROW_CCE();
  };
  TaggedDecoder.prototype.d16 = function (tag, inlineDescriptor) {
    var tmp$ret$0;
    // Inline function 'kotlin.apply' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlinx.serialization.internal.TaggedDecoder.decodeTaggedInline.<anonymous>' call
    this.m15(tag);
    tmp$ret$0 = this;
    return tmp$ret$0;
  };
  TaggedDecoder.prototype.pt = function (deserializer, previousValue) {
    return this.qt(deserializer);
  };
  TaggedDecoder.prototype.ot = function (inlineDescriptor) {
    return this.d16(this.n15(), inlineDescriptor);
  };
  TaggedDecoder.prototype.dt = function () {
    var tmp0_elvis_lhs = this.x14();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var currentTag = tmp;
    return this.t15(currentTag);
  };
  TaggedDecoder.prototype.et = function () {
    return null;
  };
  TaggedDecoder.prototype.ft = function () {
    return this.u15(this.n15());
  };
  TaggedDecoder.prototype.gt = function () {
    return this.v15(this.n15());
  };
  TaggedDecoder.prototype.ht = function () {
    return this.w15(this.n15());
  };
  TaggedDecoder.prototype.it = function () {
    return this.x15(this.n15());
  };
  TaggedDecoder.prototype.jt = function () {
    return this.y15(this.n15());
  };
  TaggedDecoder.prototype.kt = function () {
    return this.z15(this.n15());
  };
  TaggedDecoder.prototype.lt = function () {
    return this.a16(this.n15());
  };
  TaggedDecoder.prototype.mt = function () {
    return this.b16(this.n15());
  };
  TaggedDecoder.prototype.nt = function () {
    return this.c16(this.n15());
  };
  TaggedDecoder.prototype.rt = function (descriptor) {
    return this;
  };
  TaggedDecoder.prototype.st = function (descriptor) {
  };
  TaggedDecoder.prototype.tt = function (descriptor, index) {
    return this.u15(this.t14(descriptor, index));
  };
  TaggedDecoder.prototype.ut = function (descriptor, index) {
    return this.v15(this.t14(descriptor, index));
  };
  TaggedDecoder.prototype.vt = function (descriptor, index) {
    return this.w15(this.t14(descriptor, index));
  };
  TaggedDecoder.prototype.wt = function (descriptor, index) {
    return this.x15(this.t14(descriptor, index));
  };
  TaggedDecoder.prototype.xt = function (descriptor, index) {
    return this.y15(this.t14(descriptor, index));
  };
  TaggedDecoder.prototype.yt = function (descriptor, index) {
    return this.z15(this.t14(descriptor, index));
  };
  TaggedDecoder.prototype.zt = function (descriptor, index) {
    return this.a16(this.t14(descriptor, index));
  };
  TaggedDecoder.prototype.au = function (descriptor, index) {
    return this.b16(this.t14(descriptor, index));
  };
  TaggedDecoder.prototype.bu = function (descriptor, index) {
    return this.c16(this.t14(descriptor, index));
  };
  TaggedDecoder.prototype.cu = function (descriptor, index, deserializer, previousValue) {
    var tmp = this.t14(descriptor, index);
    return tagBlock(this, tmp, TaggedDecoder$decodeSerializableElement$lambda(this, deserializer, previousValue));
  };
  TaggedDecoder.prototype.x14 = function () {
    return lastOrNull(this.q15_1);
  };
  TaggedDecoder.prototype.m15 = function (name) {
    this.q15_1.a(name);
  };
  TaggedDecoder.prototype.n15 = function () {
    var r = this.q15_1.ba(get_lastIndex(this.q15_1));
    this.r15_1 = true;
    return r;
  };
  TaggedDecoder.$metadata$ = classMeta('TaggedDecoder', [Decoder, CompositeDecoder]);
  function get_NULL() {
    init_properties_Tuples_kt_v8bvox();
    return NULL;
  }
  var NULL;
  function MapEntry(key, value) {
    this.f16_1 = key;
    this.g16_1 = value;
  }
  MapEntry.prototype.e1 = function () {
    return this.f16_1;
  };
  MapEntry.prototype.f1 = function () {
    return this.g16_1;
  };
  MapEntry.prototype.toString = function () {
    return 'MapEntry(key=' + this.f16_1 + ', value=' + this.g16_1 + ')';
  };
  MapEntry.prototype.hashCode = function () {
    var result = this.f16_1 == null ? 0 : hashCode(this.f16_1);
    result = imul(result, 31) + (this.g16_1 == null ? 0 : hashCode(this.g16_1)) | 0;
    return result;
  };
  MapEntry.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MapEntry))
      return false;
    var tmp0_other_with_cast = other instanceof MapEntry ? other : THROW_CCE();
    if (!equals(this.f16_1, tmp0_other_with_cast.f16_1))
      return false;
    if (!equals(this.g16_1, tmp0_other_with_cast.g16_1))
      return false;
    return true;
  };
  MapEntry.$metadata$ = classMeta('MapEntry', [Entry]);
  function MapEntrySerializer$descriptor$lambda($keySerializer, $valueSerializer) {
    return function ($this$buildSerialDescriptor) {
      var tmp = $keySerializer.mr();
      $this$buildSerialDescriptor.os('key', tmp, null, false, 12, null);
      var tmp_0 = $valueSerializer.mr();
      $this$buildSerialDescriptor.os('value', tmp_0, null, false, 12, null);
      return Unit_getInstance();
    };
  }
  function MapEntrySerializer_0(keySerializer, valueSerializer) {
    KeyValueSerializer.call(this, keySerializer, valueSerializer);
    var tmp = this;
    var tmp_0 = MAP_getInstance();
    tmp.j16_1 = buildSerialDescriptor$default('kotlin.collections.Map.Entry', tmp_0, [], MapEntrySerializer$descriptor$lambda(keySerializer, valueSerializer), 4, null);
  }
  MapEntrySerializer_0.prototype.mr = function () {
    return this.j16_1;
  };
  MapEntrySerializer_0.prototype.k16 = function (_this__u8e3s4) {
    return _this__u8e3s4.e1();
  };
  MapEntrySerializer_0.prototype.l16 = function (_this__u8e3s4) {
    return this.k16((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Entry) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  MapEntrySerializer_0.prototype.m16 = function (_this__u8e3s4) {
    return _this__u8e3s4.f1();
  };
  MapEntrySerializer_0.prototype.n16 = function (_this__u8e3s4) {
    return this.m16((!(_this__u8e3s4 == null) ? isInterface(_this__u8e3s4, Entry) : false) ? _this__u8e3s4 : THROW_CCE());
  };
  MapEntrySerializer_0.prototype.o16 = function (key, value) {
    return new MapEntry(key, value);
  };
  MapEntrySerializer_0.$metadata$ = classMeta('MapEntrySerializer', undefined, undefined, undefined, undefined, KeyValueSerializer.prototype);
  function PairSerializer$descriptor$lambda($keySerializer, $valueSerializer) {
    return function ($this$buildClassSerialDescriptor) {
      var tmp = $keySerializer.mr();
      $this$buildClassSerialDescriptor.os('first', tmp, null, false, 12, null);
      var tmp_0 = $valueSerializer.mr();
      $this$buildClassSerialDescriptor.os('second', tmp_0, null, false, 12, null);
      return Unit_getInstance();
    };
  }
  function PairSerializer_0(keySerializer, valueSerializer) {
    KeyValueSerializer.call(this, keySerializer, valueSerializer);
    var tmp = this;
    tmp.u16_1 = buildClassSerialDescriptor$default('kotlin.Pair', [], PairSerializer$descriptor$lambda(keySerializer, valueSerializer), 2, null);
  }
  PairSerializer_0.prototype.mr = function () {
    return this.u16_1;
  };
  PairSerializer_0.prototype.v16 = function (_this__u8e3s4) {
    return _this__u8e3s4.z4_1;
  };
  PairSerializer_0.prototype.l16 = function (_this__u8e3s4) {
    return this.v16(_this__u8e3s4 instanceof Pair ? _this__u8e3s4 : THROW_CCE());
  };
  PairSerializer_0.prototype.w16 = function (_this__u8e3s4) {
    return _this__u8e3s4.a5_1;
  };
  PairSerializer_0.prototype.n16 = function (_this__u8e3s4) {
    return this.w16(_this__u8e3s4 instanceof Pair ? _this__u8e3s4 : THROW_CCE());
  };
  PairSerializer_0.prototype.o16 = function (key, value) {
    return to(key, value);
  };
  PairSerializer_0.$metadata$ = classMeta('PairSerializer', undefined, undefined, undefined, undefined, KeyValueSerializer.prototype);
  function decodeSequentially_0($this, composite) {
    var a = composite.du($this.a17_1, 0, $this.x16_1, null, 8, null);
    var b = composite.du($this.a17_1, 1, $this.y16_1, null, 8, null);
    var c = composite.du($this.a17_1, 2, $this.z16_1, null, 8, null);
    composite.st($this.a17_1);
    return new Triple(a, b, c);
  }
  function decodeStructure($this, composite) {
    var a = get_NULL();
    var b = get_NULL();
    var c = get_NULL();
    mainLoop: while (true) {
      var index = composite.fu($this.a17_1);
      Companion_getInstance_1();
      if (index === -1) {
        break mainLoop;
      } else {
        if (index === 0) {
          a = composite.du($this.a17_1, 0, $this.x16_1, null, 8, null);
        } else {
          if (index === 1) {
            b = composite.du($this.a17_1, 1, $this.y16_1, null, 8, null);
          } else {
            if (index === 2) {
              c = composite.du($this.a17_1, 2, $this.z16_1, null, 8, null);
            } else {
              throw SerializationException_init_$Create$('Unexpected index ' + index);
            }
          }
        }
      }
    }
    composite.st($this.a17_1);
    if (a === get_NULL())
      throw SerializationException_init_$Create$("Element 'first' is missing");
    if (b === get_NULL())
      throw SerializationException_init_$Create$("Element 'second' is missing");
    if (c === get_NULL())
      throw SerializationException_init_$Create$("Element 'third' is missing");
    var tmp = (a == null ? true : isObject(a)) ? a : THROW_CCE();
    var tmp_0 = (b == null ? true : isObject(b)) ? b : THROW_CCE();
    return new Triple(tmp, tmp_0, (c == null ? true : isObject(c)) ? c : THROW_CCE());
  }
  function TripleSerializer$descriptor$lambda(this$0) {
    return function ($this$buildClassSerialDescriptor) {
      var tmp = this$0.x16_1.mr();
      $this$buildClassSerialDescriptor.os('first', tmp, null, false, 12, null);
      var tmp_0 = this$0.y16_1.mr();
      $this$buildClassSerialDescriptor.os('second', tmp_0, null, false, 12, null);
      var tmp_1 = this$0.z16_1.mr();
      $this$buildClassSerialDescriptor.os('third', tmp_1, null, false, 12, null);
      return Unit_getInstance();
    };
  }
  function TripleSerializer_0(aSerializer, bSerializer, cSerializer) {
    this.x16_1 = aSerializer;
    this.y16_1 = bSerializer;
    this.z16_1 = cSerializer;
    var tmp = this;
    tmp.a17_1 = buildClassSerialDescriptor$default('kotlin.Triple', [], TripleSerializer$descriptor$lambda(this), 2, null);
  }
  TripleSerializer_0.prototype.mr = function () {
    return this.a17_1;
  };
  TripleSerializer_0.prototype.b17 = function (encoder, value) {
    var structuredEncoder = encoder.rt(this.a17_1);
    structuredEncoder.dv(this.a17_1, 0, this.x16_1, value.d7_1);
    structuredEncoder.dv(this.a17_1, 1, this.y16_1, value.e7_1);
    structuredEncoder.dv(this.a17_1, 2, this.z16_1, value.f7_1);
    structuredEncoder.st(this.a17_1);
  };
  TripleSerializer_0.prototype.nr = function (encoder, value) {
    return this.b17(encoder, value instanceof Triple ? value : THROW_CCE());
  };
  TripleSerializer_0.prototype.or = function (decoder) {
    var composite = decoder.rt(this.a17_1);
    if (composite.eu()) {
      return decodeSequentially_0(this, composite);
    }
    return decodeStructure(this, composite);
  };
  TripleSerializer_0.$metadata$ = classMeta('TripleSerializer', [KSerializer]);
  function KeyValueSerializer(keySerializer, valueSerializer) {
    this.p16_1 = keySerializer;
    this.q16_1 = valueSerializer;
  }
  KeyValueSerializer.prototype.r16 = function (encoder, value) {
    var structuredEncoder = encoder.rt(this.mr());
    structuredEncoder.dv(this.mr(), 0, this.p16_1, this.l16(value));
    structuredEncoder.dv(this.mr(), 1, this.q16_1, this.n16(value));
    structuredEncoder.st(this.mr());
  };
  KeyValueSerializer.prototype.nr = function (encoder, value) {
    return this.r16(encoder, (value == null ? true : isObject(value)) ? value : THROW_CCE());
  };
  KeyValueSerializer.prototype.or = function (decoder) {
    var composite = decoder.rt(this.mr());
    if (composite.eu()) {
      var tmp = this.mr();
      var key = composite.du(tmp, 0, this.p16_1, null, 8, null);
      var tmp_0 = this.mr();
      var value = composite.du(tmp_0, 1, this.q16_1, null, 8, null);
      return this.o16(key, value);
    }
    var key_0 = get_NULL();
    var value_0 = get_NULL();
    mainLoop: while (true) {
      var idx = composite.fu(this.mr());
      Companion_getInstance_1();
      if (idx === -1) {
        break mainLoop;
      } else {
        if (idx === 0) {
          var tmp_1 = this.mr();
          key_0 = composite.du(tmp_1, 0, this.p16_1, null, 8, null);
        } else {
          if (idx === 1) {
            var tmp_2 = this.mr();
            value_0 = composite.du(tmp_2, 1, this.q16_1, null, 8, null);
          } else {
            throw SerializationException_init_$Create$('Invalid index: ' + idx);
          }
        }
      }
    }
    composite.st(this.mr());
    if (key_0 === get_NULL())
      throw SerializationException_init_$Create$("Element 'key' is missing");
    if (value_0 === get_NULL())
      throw SerializationException_init_$Create$("Element 'value' is missing");
    var tmp_3 = (key_0 == null ? true : isObject(key_0)) ? key_0 : THROW_CCE();
    return this.o16(tmp_3, (value_0 == null ? true : isObject(value_0)) ? value_0 : THROW_CCE());
  };
  KeyValueSerializer.$metadata$ = classMeta('KeyValueSerializer', [KSerializer]);
  var properties_initialized_Tuples_kt_3vs7ar;
  function init_properties_Tuples_kt_v8bvox() {
    if (properties_initialized_Tuples_kt_3vs7ar) {
    } else {
      properties_initialized_Tuples_kt_3vs7ar = true;
      NULL = new Object();
    }
  }
  function get_EmptySerializersModule() {
    init_properties_SerializersModule_kt_swldyf();
    return EmptySerializersModule;
  }
  var EmptySerializersModule;
  function SerializersModule() {
  }
  SerializersModule.$metadata$ = classMeta('SerializersModule');
  function SerialModuleImpl(class2Serializer, polyBase2Serializers, polyBase2NamedSerializers, polyBase2DefaultProvider) {
    SerializersModule.call(this);
    this.c17_1 = class2Serializer;
    this.d17_1 = polyBase2Serializers;
    this.e17_1 = polyBase2NamedSerializers;
    this.f17_1 = polyBase2DefaultProvider;
  }
  SerialModuleImpl.prototype.lv = function (baseClass, value) {
    if (!isInstanceOf(value, baseClass))
      return null;
    var tmp0_safe_receiver = this.d17_1.t(baseClass);
    var tmp = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.t(getKClassFromExpression(value));
    return (!(tmp == null) ? isInterface(tmp, SerializationStrategy) : false) ? tmp : null;
  };
  SerialModuleImpl.prototype.kv = function (baseClass, serializedClassName) {
    var tmp0_safe_receiver = this.e17_1.t(baseClass);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$0;
      // Inline function 'kotlin.collections.get' call
      tmp$ret$0 = ((!(tmp0_safe_receiver == null) ? isInterface(tmp0_safe_receiver, Map) : false) ? tmp0_safe_receiver : THROW_CCE()).t(serializedClassName);
      tmp = tmp$ret$0;
    }
    var tmp_0 = tmp;
    var registered = (!(tmp_0 == null) ? isInterface(tmp_0, KSerializer) : false) ? tmp_0 : null;
    if (!(registered == null))
      return registered;
    var tmp_1 = this.f17_1.t(baseClass);
    var tmp1_safe_receiver = (!(tmp_1 == null) ? typeof tmp_1 === 'function' : false) ? tmp_1 : null;
    return tmp1_safe_receiver == null ? null : tmp1_safe_receiver(serializedClassName);
  };
  SerialModuleImpl.prototype.tr = function (kclass) {
    var tmp = this.c17_1.t(kclass);
    return (!(tmp == null) ? isInterface(tmp, KSerializer) : false) ? tmp : null;
  };
  SerialModuleImpl.$metadata$ = classMeta('SerialModuleImpl', undefined, undefined, undefined, undefined, SerializersModule.prototype);
  var properties_initialized_SerializersModule_kt_fjigjn;
  function init_properties_SerializersModule_kt_swldyf() {
    if (properties_initialized_SerializersModule_kt_fjigjn) {
    } else {
      properties_initialized_SerializersModule_kt_fjigjn = true;
      EmptySerializersModule = new SerialModuleImpl(emptyMap(), emptyMap(), emptyMap(), emptyMap());
    }
  }
  function SerializableWith(serializer) {
    this.g17_1 = serializer;
  }
  SerializableWith.prototype.equals = function (other) {
    if (!(other instanceof SerializableWith))
      return false;
    var tmp0_other_with_cast = other instanceof SerializableWith ? other : THROW_CCE();
    if (!this.g17_1.equals(tmp0_other_with_cast.g17_1))
      return false;
    return true;
  };
  SerializableWith.prototype.hashCode = function () {
    return imul(getStringHashCode('serializer'), 127) ^ this.g17_1.hashCode();
  };
  SerializableWith.prototype.toString = function () {
    return '@kotlinx.serialization.SerializableWith(serializer=' + this.g17_1 + ')';
  };
  SerializableWith.$metadata$ = classMeta('SerializableWith', [Annotation], 0);
  function isInstanceOf(_this__u8e3s4, kclass) {
    return kclass.rc(_this__u8e3s4);
  }
  function getChecked(_this__u8e3s4, index) {
    if (!(0 <= index ? index <= (_this__u8e3s4.length - 1 | 0) : false))
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' out of bounds ' + get_indices(_this__u8e3s4));
    return _this__u8e3s4[index];
  }
  function platformSpecificSerializerNotRegistered(_this__u8e3s4) {
    throw SerializationException_init_$Create$("Serializer for class '" + _this__u8e3s4.qc() + "' is not found.\n" + 'Mark the class as @Serializable or provide the serializer explicitly.\n' + 'On Kotlin/JS explicitly declared serializer should be used for interfaces and enums without @Serializable annotation');
  }
  function compiledSerializerImpl(_this__u8e3s4) {
    var tmp1_elvis_lhs = constructSerializerForGivenTypeArgs(_this__u8e3s4, []);
    var tmp;
    if (tmp1_elvis_lhs == null) {
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      var tmp0_asDynamic = get_js(_this__u8e3s4);
      tmp$ret$0 = tmp0_asDynamic;
      var tmp0_safe_receiver = tmp$ret$0.Companion;
      var tmp_0 = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.serializer();
      tmp = (!(tmp_0 == null) ? isInterface(tmp_0, KSerializer) : false) ? tmp_0 : null;
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  }
  function isReferenceArray(rootClass) {
    return rootClass.equals(PrimitiveClasses_getInstance().je());
  }
  function constructSerializerForGivenTypeArgs(_this__u8e3s4, args) {
    var tmp;
    try {
      var tmp$ret$0;
      // Inline function 'kotlin.reflect.findAssociatedObject' call
      tmp$ret$0 = findAssociatedObject(_this__u8e3s4, getKClass(SerializableWith));
      var assocObject = tmp$ret$0;
      var tmp_0;
      if (!(assocObject == null) ? isInterface(assocObject, KSerializer) : false) {
        tmp_0 = (!(assocObject == null) ? isInterface(assocObject, KSerializer) : false) ? assocObject : THROW_CCE();
      } else {
        if (!(assocObject == null) ? isInterface(assocObject, SerializerFactory) : false) {
          var tmp_1 = assocObject.z10(args.slice());
          tmp_0 = isInterface(tmp_1, KSerializer) ? tmp_1 : THROW_CCE();
        } else {
          tmp_0 = null;
        }
      }
      tmp = tmp_0;
    } catch ($p) {
      var tmp_2;
      {
        tmp_2 = null;
      }
      tmp = tmp_2;
    }
    return tmp;
  }
  function toNativeArrayImpl(_this__u8e3s4, eClass) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.toTypedArray' call
    tmp$ret$0 = copyToArray(_this__u8e3s4);
    return tmp$ret$0;
  }
  //region block: post-declaration
  SerialDescriptorImpl.prototype.ur = get_isNullable;
  SerialDescriptorImpl.prototype.xr = get_isInline;
  AbstractDecoder.prototype.du = decodeSerializableElement$default;
  AbstractDecoder.prototype.qt = decodeSerializableValue;
  AbstractDecoder.prototype.eu = decodeSequentially;
  AbstractDecoder.prototype.gu = decodeCollectionSize;
  AbstractEncoder.prototype.fv = encodeNotNullMark;
  AbstractEncoder.prototype.gv = beginCollection;
  AbstractEncoder.prototype.ev = encodeSerializableValue;
  ListLikeDescriptor.prototype.ur = get_isNullable;
  ListLikeDescriptor.prototype.xr = get_isInline;
  PrimitiveArrayDescriptor.prototype.ur = get_isNullable;
  PrimitiveArrayDescriptor.prototype.xr = get_isInline;
  ArrayListClassDesc.prototype.ur = get_isNullable;
  ArrayListClassDesc.prototype.xr = get_isInline;
  HashSetClassDesc.prototype.ur = get_isNullable;
  HashSetClassDesc.prototype.xr = get_isInline;
  LinkedHashSetClassDesc.prototype.ur = get_isNullable;
  LinkedHashSetClassDesc.prototype.xr = get_isInline;
  MapLikeDescriptor.prototype.ur = get_isNullable;
  MapLikeDescriptor.prototype.xr = get_isInline;
  HashMapClassDesc.prototype.ur = get_isNullable;
  HashMapClassDesc.prototype.xr = get_isInline;
  LinkedHashMapClassDesc.prototype.ur = get_isNullable;
  LinkedHashMapClassDesc.prototype.xr = get_isInline;
  ArrayClassDesc.prototype.ur = get_isNullable;
  ArrayClassDesc.prototype.xr = get_isInline;
  PluginGeneratedSerialDescriptor.prototype.ur = get_isNullable;
  PluginGeneratedSerialDescriptor.prototype.xr = get_isInline;
  InlineClassDescriptor.prototype.ur = get_isNullable;
  InlinePrimitiveDescriptor$1.prototype.e10 = typeParametersSerializers;
  PrimitiveSerialDescriptor_0.prototype.ur = get_isNullable;
  PrimitiveSerialDescriptor_0.prototype.xr = get_isInline;
  TaggedEncoder.prototype.gv = beginCollection;
  TaggedEncoder.prototype.ev = encodeSerializableValue;
  NamedValueEncoder.prototype.gv = beginCollection;
  NamedValueEncoder.prototype.ev = encodeSerializableValue;
  TaggedDecoder.prototype.du = decodeSerializableElement$default;
  TaggedDecoder.prototype.qt = decodeSerializableValue;
  TaggedDecoder.prototype.eu = decodeSequentially;
  TaggedDecoder.prototype.gu = decodeCollectionSize;
  NamedValueDecoder.prototype.qt = decodeSerializableValue;
  NamedValueDecoder.prototype.du = decodeSerializableElement$default;
  NamedValueDecoder.prototype.eu = decodeSequentially;
  NamedValueDecoder.prototype.gu = decodeCollectionSize;
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = buildSerialDescriptor$default;
  _.$_$.b = decodeSerializableElement$default;
  _.$_$.c = SerializationException_init_$Init$;
  _.$_$.d = UnknownFieldException_init_$Create$;
  _.$_$.e = SEALED_getInstance;
  _.$_$.f = STRING_getInstance;
  _.$_$.g = ENUM_getInstance;
  _.$_$.h = LIST_getInstance;
  _.$_$.i = MAP_getInstance;
  _.$_$.j = Companion_getInstance_1;
  _.$_$.k = IntSerializer_getInstance;
  _.$_$.l = StringSerializer_getInstance;
  _.$_$.m = ListSerializer;
  _.$_$.n = MapSerializer;
  _.$_$.o = serializer_1;
  _.$_$.p = serializer_14;
  _.$_$.q = serializer_11;
  _.$_$.r = serializer_13;
  _.$_$.s = serializer_12;
  _.$_$.t = PolymorphicKind;
  _.$_$.u = PrimitiveKind;
  _.$_$.v = PrimitiveSerialDescriptor;
  _.$_$.w = get_isInline;
  _.$_$.x = get_isNullable;
  _.$_$.y = SerialDescriptor;
  _.$_$.z = ENUM;
  _.$_$.a1 = AbstractDecoder;
  _.$_$.b1 = AbstractEncoder;
  _.$_$.c1 = decodeCollectionSize;
  _.$_$.d1 = decodeSequentially;
  _.$_$.e1 = CompositeDecoder;
  _.$_$.f1 = CompositeEncoder;
  _.$_$.g1 = decodeSerializableValue;
  _.$_$.h1 = Decoder;
  _.$_$.i1 = beginCollection;
  _.$_$.j1 = encodeNotNullMark;
  _.$_$.k1 = encodeSerializableValue;
  _.$_$.l1 = Encoder;
  _.$_$.m1 = AbstractPolymorphicSerializer;
  _.$_$.n1 = typeParametersSerializers;
  _.$_$.o1 = GeneratedSerializer;
  _.$_$.p1 = NamedValueDecoder;
  _.$_$.q1 = NamedValueEncoder;
  _.$_$.r1 = PluginGeneratedSerialDescriptor;
  _.$_$.s1 = jsonCachedSerialNames;
  _.$_$.t1 = throwMissingFieldException;
  _.$_$.u1 = get_EmptySerializersModule;
  _.$_$.v1 = DeserializationStrategy;
  _.$_$.w1 = KSerializer;
  _.$_$.x1 = SealedClassSerializer;
  _.$_$.y1 = SerializationException;
  _.$_$.z1 = SerializationStrategy;
  _.$_$.a2 = StringFormat;
  _.$_$.b2 = findPolymorphicSerializer;
  _.$_$.c2 = serializer_0;
  _.$_$.d2 = serializer;
  //endregion
  return _;
}));

//# sourceMappingURL=kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.js.map


/***/ }),

/***/ 683:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
  if (true)
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(72), __webpack_require__(15)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  else {}
}(this, function (_, kotlin_kotlin, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var objectMeta = kotlin_kotlin.$_$.n8;
  var StringBuilder_init_$Create$ = kotlin_kotlin.$_$.e1;
  var fillArrayVal = kotlin_kotlin.$_$.n7;
  var Unit_getInstance = kotlin_kotlin.$_$.r3;
  var toString = kotlin_kotlin.$_$.r8;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.m1;
  var StringFormat = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.a2;
  var classMeta = kotlin_kotlin.$_$.k7;
  var Decoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.h1;
  var CompositeDecoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.e1;
  var interfaceMeta = kotlin_kotlin.$_$.r7;
  var THROW_CCE = kotlin_kotlin.$_$.ra;
  var equals = kotlin_kotlin.$_$.m7;
  var hashCode = kotlin_kotlin.$_$.q7;
  var joinToString$default = kotlin_kotlin.$_$.k;
  var List = kotlin_kotlin.$_$.c4;
  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.u1;
  var Map = kotlin_kotlin.$_$.e4;
  var getKClassFromExpression = kotlin_kotlin.$_$.d;
  var getStringHashCode = kotlin_kotlin.$_$.p7;
  var toInt = kotlin_kotlin.$_$.u9;
  var toLong = kotlin_kotlin.$_$.w9;
  var toDouble = kotlin_kotlin.$_$.s9;
  var toLongOrNull = kotlin_kotlin.$_$.v9;
  var toDoubleOrNull = kotlin_kotlin.$_$.r9;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.k1;
  var SEALED_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.e;
  var buildSerialDescriptor$default = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.a;
  var KSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.w1;
  var isInterface = kotlin_kotlin.$_$.a8;
  var getKClass = kotlin_kotlin.$_$.e;
  var arrayOf = kotlin_kotlin.$_$.ab;
  var createKType = kotlin_kotlin.$_$.b;
  var createInvariantKTypeProjection = kotlin_kotlin.$_$.a;
  var serializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.c2;
  var SerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.y;
  var ListSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.m;
  var HashMap = kotlin_kotlin.$_$.w3;
  var PrimitiveClasses_getInstance = kotlin_kotlin.$_$.k3;
  var StringCompanionObject_getInstance = kotlin_kotlin.$_$.j3;
  var serializer_0 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.o;
  var MapSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.n;
  var STRING_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.f;
  var ENUM_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.g;
  var PrimitiveSerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.v;
  var toULongOrNull = kotlin_kotlin.$_$.ca;
  var Companion_getInstance = kotlin_kotlin.$_$.p3;
  var serializer_1 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.s;
  var _ULong___get_data__impl__fggpzb = kotlin_kotlin.$_$.p2;
  var ULong = kotlin_kotlin.$_$.xa;
  var lazy = kotlin_kotlin.$_$.eb;
  var get_isNullable = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.x;
  var get_isInline = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.w;
  var KProperty1 = kotlin_kotlin.$_$.a9;
  var getPropertyCallableRef = kotlin_kotlin.$_$.o7;
  var Encoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.l1;
  var CompositeEncoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.f1;
  var get_EmptySerializersModule = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.u1;
  var captureStack = kotlin_kotlin.$_$.e7;
  var SerializationException = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.y1;
  var SerializationException_init_$Init$ = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.c;
  var coerceAtLeast = kotlin_kotlin.$_$.u8;
  var coerceAtMost = kotlin_kotlin.$_$.v8;
  var numberToChar = kotlin_kotlin.$_$.j8;
  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.z;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.r;
  var concatToString = kotlin_kotlin.$_$.e9;
  var copyOf = kotlin_kotlin.$_$.z4;
  var charSequenceGet = kotlin_kotlin.$_$.h7;
  var Char = kotlin_kotlin.$_$.ha;
  var Char__toInt_impl_vasixd = kotlin_kotlin.$_$.x1;
  var charArray = kotlin_kotlin.$_$.g7;
  var last = kotlin_kotlin.$_$.w5;
  var AbstractPolymorphicSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.m1;
  var SerializationStrategy = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.z1;
  var isObject = kotlin_kotlin.$_$.d8;
  var DeserializationStrategy = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.v1;
  var findPolymorphicSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.b2;
  var SealedClassSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.x1;
  var jsonCachedSerialNames = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.s1;
  var ENUM = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.z;
  var PrimitiveKind = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.u;
  var PolymorphicKind = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.t;
  var Companion_getInstance_0 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.j;
  var AbstractDecoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.a1;
  var toByte = kotlin_kotlin.$_$.q9;
  var IllegalArgumentException = kotlin_kotlin.$_$.ma;
  var toShort = kotlin_kotlin.$_$.y9;
  var isFinite = kotlin_kotlin.$_$.db;
  var isFinite_0 = kotlin_kotlin.$_$.cb;
  var single = kotlin_kotlin.$_$.o9;
  var decodeSequentially = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.d1;
  var decodeCollectionSize = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.c1;
  var decodeSerializableElement$default = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.b;
  var toUInt = kotlin_kotlin.$_$.ba;
  var _UInt___get_data__impl__f0vqqw = kotlin_kotlin.$_$.d2;
  var toULong = kotlin_kotlin.$_$.da;
  var toUByte = kotlin_kotlin.$_$.aa;
  var _UByte___get_data__impl__jof9qr = kotlin_kotlin.$_$.a2;
  var toUShort = kotlin_kotlin.$_$.ea;
  var _UShort___get_data__impl__g0245 = kotlin_kotlin.$_$.b3;
  var decodeSerializableValue = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.g1;
  var _UInt___init__impl__l7qpdl = kotlin_kotlin.$_$.c2;
  var UInt__toString_impl_dbgl21 = kotlin_kotlin.$_$.e2;
  var _ULong___init__impl__c78o9k = kotlin_kotlin.$_$.o2;
  var ULong__toString_impl_f9au7k = kotlin_kotlin.$_$.q2;
  var _UByte___init__impl__g9hnc4 = kotlin_kotlin.$_$.z1;
  var UByte__toString_impl_v72jg = kotlin_kotlin.$_$.b2;
  var _UShort___init__impl__jigrne = kotlin_kotlin.$_$.a3;
  var UShort__toString_impl_edaoee = kotlin_kotlin.$_$.c3;
  var AbstractEncoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.b1;
  var toString_0 = kotlin_kotlin.$_$.y1;
  var encodeNotNullMark = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.j1;
  var beginCollection = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.i1;
  var Companion_getInstance_1 = kotlin_kotlin.$_$.o3;
  var serializer_2 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.q;
  var Companion_getInstance_2 = kotlin_kotlin.$_$.n3;
  var serializer_3 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.r;
  var Companion_getInstance_3 = kotlin_kotlin.$_$.q3;
  var serializer_4 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.p;
  var setOf = kotlin_kotlin.$_$.f6;
  var equals_0 = kotlin_kotlin.$_$.i9;
  var noWhenBranchMatchedException = kotlin_kotlin.$_$.fb;
  var NamedValueDecoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.p1;
  var LIST_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.h;
  var MAP_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.i;
  var IllegalArgumentException_init_$Create$_0 = kotlin_kotlin.$_$.i1;
  var ByteCompanionObject_getInstance = kotlin_kotlin.$_$.e3;
  var toByte_0 = kotlin_kotlin.$_$.o8;
  var ShortCompanionObject_getInstance = kotlin_kotlin.$_$.i3;
  var toShort_0 = kotlin_kotlin.$_$.q8;
  var getValue = kotlin_kotlin.$_$.q5;
  var toList = kotlin_kotlin.$_$.s6;
  var throwUninitializedPropertyAccessException = kotlin_kotlin.$_$.gb;
  var encodeSerializableValue = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.k1;
  var NamedValueEncoder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.q1;
  var Enum = kotlin_kotlin.$_$.ka;
  //endregion
  //region block: pre-declaration
  Default.prototype = Object.create(Json.prototype);
  Default.prototype.constructor = Default;
  JsonArray.prototype = Object.create(JsonElement.prototype);
  JsonArray.prototype.constructor = JsonArray;
  JsonObject.prototype = Object.create(JsonElement.prototype);
  JsonObject.prototype.constructor = JsonObject;
  JsonPrimitive.prototype = Object.create(JsonElement.prototype);
  JsonPrimitive.prototype.constructor = JsonPrimitive;
  JsonNull.prototype = Object.create(JsonPrimitive.prototype);
  JsonNull.prototype.constructor = JsonNull;
  JsonLiteral.prototype = Object.create(JsonPrimitive.prototype);
  JsonLiteral.prototype.constructor = JsonLiteral;
  JsonException.prototype = Object.create(SerializationException.prototype);
  JsonException.prototype.constructor = JsonException;
  JsonEncodingException.prototype = Object.create(JsonException.prototype);
  JsonEncodingException.prototype.constructor = JsonEncodingException;
  JsonDecodingException.prototype = Object.create(JsonException.prototype);
  JsonDecodingException.prototype.constructor = JsonDecodingException;
  StreamingJsonDecoder.prototype = Object.create(AbstractDecoder.prototype);
  StreamingJsonDecoder.prototype.constructor = StreamingJsonDecoder;
  JsonDecoderForUnsignedTypes.prototype = Object.create(AbstractDecoder.prototype);
  JsonDecoderForUnsignedTypes.prototype.constructor = JsonDecoderForUnsignedTypes;
  ComposerForUnsignedNumbers.prototype = Object.create(Composer.prototype);
  ComposerForUnsignedNumbers.prototype.constructor = ComposerForUnsignedNumbers;
  StreamingJsonEncoder.prototype = Object.create(AbstractEncoder.prototype);
  StreamingJsonEncoder.prototype.constructor = StreamingJsonEncoder;
  AbstractJsonTreeDecoder.prototype = Object.create(NamedValueDecoder.prototype);
  AbstractJsonTreeDecoder.prototype.constructor = AbstractJsonTreeDecoder;
  JsonTreeDecoder.prototype = Object.create(AbstractJsonTreeDecoder.prototype);
  JsonTreeDecoder.prototype.constructor = JsonTreeDecoder;
  JsonTreeListDecoder.prototype = Object.create(AbstractJsonTreeDecoder.prototype);
  JsonTreeListDecoder.prototype.constructor = JsonTreeListDecoder;
  JsonPrimitiveDecoder.prototype = Object.create(AbstractJsonTreeDecoder.prototype);
  JsonPrimitiveDecoder.prototype.constructor = JsonPrimitiveDecoder;
  JsonTreeMapDecoder.prototype = Object.create(JsonTreeDecoder.prototype);
  JsonTreeMapDecoder.prototype.constructor = JsonTreeMapDecoder;
  AbstractJsonTreeEncoder.prototype = Object.create(NamedValueEncoder.prototype);
  AbstractJsonTreeEncoder.prototype.constructor = AbstractJsonTreeEncoder;
  JsonTreeEncoder.prototype = Object.create(AbstractJsonTreeEncoder.prototype);
  JsonTreeEncoder.prototype.constructor = JsonTreeEncoder;
  AbstractJsonTreeEncoder$encodeTaggedInline$1.prototype = Object.create(AbstractEncoder.prototype);
  AbstractJsonTreeEncoder$encodeTaggedInline$1.prototype.constructor = AbstractJsonTreeEncoder$encodeTaggedInline$1;
  JsonPrimitiveEncoder.prototype = Object.create(AbstractJsonTreeEncoder.prototype);
  JsonPrimitiveEncoder.prototype.constructor = JsonPrimitiveEncoder;
  JsonTreeListEncoder.prototype = Object.create(AbstractJsonTreeEncoder.prototype);
  JsonTreeListEncoder.prototype.constructor = JsonTreeListEncoder;
  JsonTreeMapEncoder.prototype = Object.create(JsonTreeEncoder.prototype);
  JsonTreeMapEncoder.prototype.constructor = JsonTreeMapEncoder;
  WriteMode.prototype = Object.create(Enum.prototype);
  WriteMode.prototype.constructor = WriteMode;
  //endregion
  function Default() {
    Default_instance = this;
    Json.call(this, JsonConf_init_$Create$(false, false, false, false, false, null, false, false, null, false, null, 2047, null));
  }
  Default.$metadata$ = objectMeta('Default', undefined, undefined, undefined, undefined, Json.prototype);
  var Default_instance;
  function Default_getInstance() {
    if (Default_instance == null)
      new Default();
    return Default_instance;
  }
  function Json(configuration) {
    Default_getInstance();
    this.h17_1 = configuration;
  }
  Json.prototype.i17 = function () {
    return this.h17_1;
  };
  Json.prototype.sr = function () {
    return this.h17_1.v17_1;
  };
  Json.prototype.j17 = function (serializer, value) {
    var result = StringBuilder_init_$Create$();
    var tmp = WriteMode_OBJ_getInstance();
    var tmp$ret$0;
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp0_arrayOfNulls = values().length;
    tmp$ret$0 = fillArrayVal(Array(tmp0_arrayOfNulls), null);
    var encoder = StreamingJsonEncoder_init_$Create$(result, this, tmp, tmp$ret$0);
    encoder.ev(serializer, value);
    return result.toString();
  };
  Json.prototype.rr = function (deserializer, string) {
    var reader = new JsonReader(string);
    var input = new StreamingJsonDecoder(this, WriteMode_OBJ_getInstance(), reader);
    var result = input.qt(deserializer);
    if (!reader.r18()) {
      // Inline function 'kotlin.error' call
      var tmp0_error = 'Reader has not consumed the whole input: ' + reader;
      throw IllegalStateException_init_$Create$(toString(tmp0_error));
    }
    return result;
  };
  Json.prototype.k17 = function (deserializer, element) {
    return readJson(this, element, deserializer);
  };
  Json.$metadata$ = classMeta('Json', [StringFormat]);
  function JsonDecoder() {
  }
  JsonDecoder.$metadata$ = interfaceMeta('JsonDecoder', [Decoder, CompositeDecoder]);
  function Companion() {
    Companion_instance = this;
  }
  Companion.$metadata$ = objectMeta('Companion');
  var Companion_instance;
  function Companion_getInstance_4() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function JsonElement() {
    Companion_getInstance_4();
  }
  JsonElement.$metadata$ = classMeta('JsonElement', undefined, undefined, {0: JsonElementSerializer_getInstance});
  function Companion_0() {
    Companion_instance_0 = this;
  }
  Companion_0.$metadata$ = objectMeta('Companion');
  var Companion_instance_0;
  function Companion_getInstance_5() {
    if (Companion_instance_0 == null)
      new Companion_0();
    return Companion_instance_0;
  }
  function JsonArray(content) {
    Companion_getInstance_5();
    JsonElement.call(this);
    this.u18_1 = content;
  }
  JsonArray.prototype.v18 = function (element) {
    return this.u18_1.x1(element);
  };
  JsonArray.prototype.x1 = function (element) {
    if (!(element instanceof JsonElement))
      return false;
    return this.v18(element instanceof JsonElement ? element : THROW_CCE());
  };
  JsonArray.prototype.w18 = function (elements) {
    return this.u18_1.y1(elements);
  };
  JsonArray.prototype.y1 = function (elements) {
    return this.w18(elements);
  };
  JsonArray.prototype.l = function (index) {
    return this.u18_1.l(index);
  };
  JsonArray.prototype.x18 = function (element) {
    return this.u18_1.m2(element);
  };
  JsonArray.prototype.m2 = function (element) {
    if (!(element instanceof JsonElement))
      return -1;
    return this.x18(element instanceof JsonElement ? element : THROW_CCE());
  };
  JsonArray.prototype.p = function () {
    return this.u18_1.p();
  };
  JsonArray.prototype.f = function () {
    return this.u18_1.f();
  };
  JsonArray.prototype.k = function (index) {
    return this.u18_1.k(index);
  };
  JsonArray.prototype.s = function (fromIndex, toIndex) {
    return this.u18_1.s(fromIndex, toIndex);
  };
  JsonArray.prototype.i = function () {
    return this.u18_1.i();
  };
  JsonArray.prototype.equals = function (other) {
    return equals(this.u18_1, other);
  };
  JsonArray.prototype.hashCode = function () {
    return hashCode(this.u18_1);
  };
  JsonArray.prototype.toString = function () {
    return joinToString$default(this.u18_1, ',', '[', ']', 0, null, null, 56, null);
  };
  JsonArray.$metadata$ = classMeta('JsonArray', [List], undefined, {0: JsonArraySerializer_getInstance}, undefined, JsonElement.prototype);
  function Companion_1() {
    Companion_instance_1 = this;
  }
  Companion_1.$metadata$ = objectMeta('Companion');
  var Companion_instance_1;
  function Companion_getInstance_6() {
    if (Companion_instance_1 == null)
      new Companion_1();
    return Companion_instance_1;
  }
  function JsonObject$toString$lambda(_name_for_destructuring_parameter_0__wldtmu) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.component1' call
    tmp$ret$0 = _name_for_destructuring_parameter_0__wldtmu.e1();
    var k = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'kotlin.collections.component2' call
    tmp$ret$1 = _name_for_destructuring_parameter_0__wldtmu.f1();
    var v = tmp$ret$1;
    var tmp$ret$3;
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    var tmp$ret$2;
    // Inline function 'kotlin.apply' call
    var tmp0_apply = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlinx.serialization.json.JsonObject.toString.<anonymous>.<anonymous>' call
    printQuoted(tmp0_apply, k);
    tmp0_apply.x5(_Char___init__impl__6a9atx(58));
    tmp0_apply.bf(v);
    tmp$ret$2 = tmp0_apply;
    tmp$ret$3 = tmp$ret$2.toString();
    return tmp$ret$3;
  }
  function JsonObject(content) {
    Companion_getInstance_6();
    JsonElement.call(this);
    this.y18_1 = content;
  }
  JsonObject.prototype.z18 = function (key) {
    return this.y18_1.f3(key);
  };
  JsonObject.prototype.f3 = function (key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return false;
    return this.z18((!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE());
  };
  JsonObject.prototype.a19 = function (key) {
    return this.y18_1.t(key);
  };
  JsonObject.prototype.t = function (key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return null;
    return this.a19((!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE());
  };
  JsonObject.prototype.p = function () {
    return this.y18_1.p();
  };
  JsonObject.prototype.d1 = function () {
    return this.y18_1.d1();
  };
  JsonObject.prototype.l3 = function () {
    return this.y18_1.l3();
  };
  JsonObject.prototype.i = function () {
    return this.y18_1.i();
  };
  JsonObject.prototype.m3 = function () {
    return this.y18_1.m3();
  };
  JsonObject.prototype.equals = function (other) {
    return equals(this.y18_1, other);
  };
  JsonObject.prototype.hashCode = function () {
    return hashCode(this.y18_1);
  };
  JsonObject.prototype.toString = function () {
    var tmp = this.y18_1.d1();
    return joinToString$default(tmp, ',', '{', '}', 0, null, JsonObject$toString$lambda, 24, null);
  };
  JsonObject.$metadata$ = classMeta('JsonObject', [Map], undefined, {0: JsonObjectSerializer_getInstance}, undefined, JsonElement.prototype);
  function JsonNull() {
    JsonNull_instance = this;
    JsonPrimitive.call(this);
    this.b19_1 = 'null';
  }
  JsonNull.prototype.c19 = function () {
    return this.b19_1;
  };
  JsonNull.$metadata$ = objectMeta('JsonNull', undefined, undefined, undefined, undefined, JsonPrimitive.prototype);
  var JsonNull_instance;
  function JsonNull_getInstance() {
    if (JsonNull_instance == null)
      new JsonNull();
    return JsonNull_instance;
  }
  function Companion_2() {
    Companion_instance_2 = this;
  }
  Companion_2.$metadata$ = objectMeta('Companion');
  var Companion_instance_2;
  function Companion_getInstance_7() {
    if (Companion_instance_2 == null)
      new Companion_2();
    return Companion_instance_2;
  }
  function JsonPrimitive() {
    Companion_getInstance_7();
    JsonElement.call(this);
  }
  JsonPrimitive.prototype.toString = function () {
    return this.c19();
  };
  JsonPrimitive.$metadata$ = classMeta('JsonPrimitive', undefined, undefined, {0: JsonPrimitiveSerializer_getInstance}, undefined, JsonElement.prototype);
  function JsonPrimitive_0(value) {
    if (value == null)
      return JsonNull_getInstance();
    return new JsonLiteral(value, false);
  }
  function JsonPrimitive_1(value) {
    if (value == null)
      return JsonNull_getInstance();
    return new JsonLiteral(value, false);
  }
  function JsonPrimitive_2(value) {
    if (value == null)
      return JsonNull_getInstance();
    return new JsonLiteral(value, true);
  }
  function JsonLiteral(body, isString) {
    JsonPrimitive.call(this);
    this.d19_1 = isString;
    this.e19_1 = toString(body);
  }
  JsonLiteral.prototype.c19 = function () {
    return this.e19_1;
  };
  JsonLiteral.prototype.toString = function () {
    var tmp;
    if (this.d19_1) {
      var tmp$ret$1;
      // Inline function 'kotlin.text.buildString' call
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'kotlin.apply' call
      var tmp0_apply = StringBuilder_init_$Create$();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlinx.serialization.json.JsonLiteral.toString.<anonymous>' call
      printQuoted(tmp0_apply, this.e19_1);
      tmp$ret$0 = tmp0_apply;
      tmp$ret$1 = tmp$ret$0.toString();
      tmp = tmp$ret$1;
    } else {
      tmp = this.e19_1;
    }
    return tmp;
  };
  JsonLiteral.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof JsonLiteral)
      other;
    else
      THROW_CCE();
    if (!(this.d19_1 === other.d19_1))
      return false;
    if (!(this.e19_1 === other.e19_1))
      return false;
    return true;
  };
  JsonLiteral.prototype.hashCode = function () {
    var result = this.d19_1 | 0;
    result = imul(31, result) + getStringHashCode(this.e19_1) | 0;
    return result;
  };
  JsonLiteral.$metadata$ = classMeta('JsonLiteral', undefined, undefined, undefined, undefined, JsonPrimitive.prototype);
  function get_booleanOrNull(_this__u8e3s4) {
    return toBooleanStrictOrNull(_this__u8e3s4.c19());
  }
  function get_int(_this__u8e3s4) {
    return toInt(_this__u8e3s4.c19());
  }
  function get_long(_this__u8e3s4) {
    return toLong(_this__u8e3s4.c19());
  }
  function get_float(_this__u8e3s4) {
    var tmp$ret$2;
    // Inline function 'kotlin.text.toFloat' call
    var tmp0_toFloat = _this__u8e3s4.c19();
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = toDouble(tmp0_toFloat);
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_unsafeCast;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function get_double(_this__u8e3s4) {
    return toDouble(_this__u8e3s4.c19());
  }
  function get_contentOrNull(_this__u8e3s4) {
    var tmp;
    if (_this__u8e3s4 instanceof JsonNull) {
      tmp = null;
    } else {
      tmp = _this__u8e3s4.c19();
    }
    return tmp;
  }
  function get_longOrNull(_this__u8e3s4) {
    return toLongOrNull(_this__u8e3s4.c19());
  }
  function get_doubleOrNull(_this__u8e3s4) {
    return toDoubleOrNull(_this__u8e3s4.c19());
  }
  function get_jsonPrimitive(_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof JsonPrimitive ? _this__u8e3s4 : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      error(_this__u8e3s4, 'JsonPrimitive');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function error(_this__u8e3s4, element) {
    throw IllegalArgumentException_init_$Create$('Element ' + getKClassFromExpression(_this__u8e3s4) + ' is not a ' + element);
  }
  function JsonElementSerializer$descriptor$lambda($this$buildSerialDescriptor) {
    var tmp = defer(JsonElementSerializer$descriptor$lambda$lambda);
    $this$buildSerialDescriptor.os('JsonPrimitive', tmp, null, false, 12, null);
    var tmp_0 = defer(JsonElementSerializer$descriptor$lambda$lambda_0);
    $this$buildSerialDescriptor.os('JsonNull', tmp_0, null, false, 12, null);
    var tmp_1 = defer(JsonElementSerializer$descriptor$lambda$lambda_1);
    $this$buildSerialDescriptor.os('JsonLiteral', tmp_1, null, false, 12, null);
    var tmp_2 = defer(JsonElementSerializer$descriptor$lambda$lambda_2);
    $this$buildSerialDescriptor.os('JsonObject', tmp_2, null, false, 12, null);
    var tmp_3 = defer(JsonElementSerializer$descriptor$lambda$lambda_3);
    $this$buildSerialDescriptor.os('JsonArray', tmp_3, null, false, 12, null);
    return Unit_getInstance();
  }
  function JsonElementSerializer$descriptor$lambda$lambda() {
    return JsonPrimitiveSerializer_getInstance().f19_1;
  }
  function JsonElementSerializer$descriptor$lambda$lambda_0() {
    return JsonNullSerializer_getInstance().g19_1;
  }
  function JsonElementSerializer$descriptor$lambda$lambda_1() {
    return JsonLiteralSerializer_getInstance().h19_1;
  }
  function JsonElementSerializer$descriptor$lambda$lambda_2() {
    return JsonObjectSerializer_getInstance().i19_1;
  }
  function JsonElementSerializer$descriptor$lambda$lambda_3() {
    return JsonArraySerializer_getInstance().j19_1;
  }
  function JsonElementSerializer() {
    JsonElementSerializer_instance = this;
    var tmp = this;
    var tmp_0 = SEALED_getInstance();
    tmp.k19_1 = buildSerialDescriptor$default('kotlinx.serialization.json.JsonElement', tmp_0, [], JsonElementSerializer$descriptor$lambda, 4, null);
  }
  JsonElementSerializer.prototype.mr = function () {
    return this.k19_1;
  };
  JsonElementSerializer.prototype.l19 = function (encoder, value) {
    verify(encoder);
    var tmp0_subject = value;
    if (tmp0_subject instanceof JsonPrimitive) {
      encoder.ev(JsonPrimitiveSerializer_getInstance(), value);
    } else {
      if (tmp0_subject instanceof JsonObject) {
        encoder.ev(JsonObjectSerializer_getInstance(), value);
      } else {
        if (tmp0_subject instanceof JsonArray) {
          encoder.ev(JsonArraySerializer_getInstance(), value);
        }
      }
    }
  };
  JsonElementSerializer.prototype.nr = function (encoder, value) {
    return this.l19(encoder, value instanceof JsonElement ? value : THROW_CCE());
  };
  JsonElementSerializer.prototype.or = function (decoder) {
    var input = asJsonDecoder(decoder);
    return input.t18();
  };
  JsonElementSerializer.$metadata$ = objectMeta('JsonElementSerializer', [KSerializer]);
  var JsonElementSerializer_instance;
  function JsonElementSerializer_getInstance() {
    if (JsonElementSerializer_instance == null)
      new JsonElementSerializer();
    return JsonElementSerializer_instance;
  }
  function asJsonEncoder(_this__u8e3s4) {
    var tmp0_elvis_lhs = isInterface(_this__u8e3s4, JsonEncoder) ? _this__u8e3s4 : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalStateException_init_$Create$('This serializer can be used only with Json format.' + ('Expected Encoder to be JsonEncoder, got ' + getKClassFromExpression(_this__u8e3s4)));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function asJsonDecoder(_this__u8e3s4) {
    var tmp0_elvis_lhs = isInterface(_this__u8e3s4, JsonDecoder) ? _this__u8e3s4 : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw IllegalStateException_init_$Create$('This serializer can be used only with Json format.' + ('Expected Decoder to be JsonDecoder, got ' + getKClassFromExpression(_this__u8e3s4)));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function JsonArrayDescriptor() {
    JsonArrayDescriptor_instance = this;
    var tmp = this;
    var tmp$ret$2;
    // Inline function 'kotlinx.serialization.descriptors.serialDescriptor' call
    var tmp$ret$1;
    // Inline function 'kotlinx.serialization.serializer' call
    var tmp$ret$0;
    // Inline function 'kotlinx.serialization.internal.cast' call
    var tmp0_cast = serializer(createKType(getKClass(List), arrayOf([createInvariantKTypeProjection(createKType(getKClass(JsonElement), arrayOf([]), false))]), false));
    tmp$ret$0 = isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE();
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1.mr();
    tmp.m19_1 = tmp$ret$2;
    this.n19_1 = 'kotlinx.serialization.json.JsonArray';
  }
  JsonArrayDescriptor.prototype.bs = function (index) {
    return this.m19_1.bs(index);
  };
  JsonArrayDescriptor.prototype.as = function (name) {
    return this.m19_1.as(name);
  };
  JsonArrayDescriptor.prototype.zr = function (index) {
    return this.m19_1.zr(index);
  };
  JsonArrayDescriptor.prototype.yr = function () {
    return this.m19_1.yr();
  };
  JsonArrayDescriptor.prototype.xr = function () {
    return this.m19_1.xr();
  };
  JsonArrayDescriptor.prototype.ur = function () {
    return this.m19_1.ur();
  };
  JsonArrayDescriptor.prototype.wr = function () {
    return this.m19_1.wr();
  };
  JsonArrayDescriptor.prototype.vr = function () {
    return this.n19_1;
  };
  JsonArrayDescriptor.$metadata$ = objectMeta('JsonArrayDescriptor', [SerialDescriptor]);
  var JsonArrayDescriptor_instance;
  function JsonArrayDescriptor_getInstance() {
    if (JsonArrayDescriptor_instance == null)
      new JsonArrayDescriptor();
    return JsonArrayDescriptor_instance;
  }
  function JsonArraySerializer() {
    JsonArraySerializer_instance = this;
    this.j19_1 = JsonArrayDescriptor_getInstance();
  }
  JsonArraySerializer.prototype.mr = function () {
    return this.j19_1;
  };
  JsonArraySerializer.prototype.o19 = function (encoder, value) {
    verify(encoder);
    ListSerializer(JsonElementSerializer_getInstance()).nr(encoder, value);
  };
  JsonArraySerializer.prototype.nr = function (encoder, value) {
    return this.o19(encoder, value instanceof JsonArray ? value : THROW_CCE());
  };
  JsonArraySerializer.prototype.or = function (decoder) {
    verify_0(decoder);
    return new JsonArray(ListSerializer(JsonElementSerializer_getInstance()).or(decoder));
  };
  JsonArraySerializer.$metadata$ = objectMeta('JsonArraySerializer', [KSerializer]);
  var JsonArraySerializer_instance;
  function JsonArraySerializer_getInstance() {
    if (JsonArraySerializer_instance == null)
      new JsonArraySerializer();
    return JsonArraySerializer_instance;
  }
  function JsonObjectDescriptor() {
    JsonObjectDescriptor_instance = this;
    var tmp = this;
    var tmp$ret$2;
    // Inline function 'kotlinx.serialization.descriptors.serialDescriptor' call
    var tmp$ret$1;
    // Inline function 'kotlinx.serialization.serializer' call
    var tmp$ret$0;
    // Inline function 'kotlinx.serialization.internal.cast' call
    var tmp0_cast = serializer(createKType(getKClass(HashMap), arrayOf([createInvariantKTypeProjection(createKType(PrimitiveClasses_getInstance().ke(), arrayOf([]), false)), createInvariantKTypeProjection(createKType(getKClass(JsonElement), arrayOf([]), false))]), false));
    tmp$ret$0 = isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE();
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1.mr();
    tmp.p19_1 = tmp$ret$2;
    this.q19_1 = 'kotlinx.serialization.json.JsonObject';
  }
  JsonObjectDescriptor.prototype.bs = function (index) {
    return this.p19_1.bs(index);
  };
  JsonObjectDescriptor.prototype.as = function (name) {
    return this.p19_1.as(name);
  };
  JsonObjectDescriptor.prototype.zr = function (index) {
    return this.p19_1.zr(index);
  };
  JsonObjectDescriptor.prototype.yr = function () {
    return this.p19_1.yr();
  };
  JsonObjectDescriptor.prototype.xr = function () {
    return this.p19_1.xr();
  };
  JsonObjectDescriptor.prototype.ur = function () {
    return this.p19_1.ur();
  };
  JsonObjectDescriptor.prototype.wr = function () {
    return this.p19_1.wr();
  };
  JsonObjectDescriptor.prototype.vr = function () {
    return this.q19_1;
  };
  JsonObjectDescriptor.$metadata$ = objectMeta('JsonObjectDescriptor', [SerialDescriptor]);
  var JsonObjectDescriptor_instance;
  function JsonObjectDescriptor_getInstance() {
    if (JsonObjectDescriptor_instance == null)
      new JsonObjectDescriptor();
    return JsonObjectDescriptor_instance;
  }
  function JsonObjectSerializer() {
    JsonObjectSerializer_instance = this;
    this.i19_1 = JsonObjectDescriptor_getInstance();
  }
  JsonObjectSerializer.prototype.mr = function () {
    return this.i19_1;
  };
  JsonObjectSerializer.prototype.r19 = function (encoder, value) {
    verify(encoder);
    MapSerializer(serializer_0(StringCompanionObject_getInstance()), JsonElementSerializer_getInstance()).nr(encoder, value);
  };
  JsonObjectSerializer.prototype.nr = function (encoder, value) {
    return this.r19(encoder, value instanceof JsonObject ? value : THROW_CCE());
  };
  JsonObjectSerializer.prototype.or = function (decoder) {
    verify_0(decoder);
    return new JsonObject(MapSerializer(serializer_0(StringCompanionObject_getInstance()), JsonElementSerializer_getInstance()).or(decoder));
  };
  JsonObjectSerializer.$metadata$ = objectMeta('JsonObjectSerializer', [KSerializer]);
  var JsonObjectSerializer_instance;
  function JsonObjectSerializer_getInstance() {
    if (JsonObjectSerializer_instance == null)
      new JsonObjectSerializer();
    return JsonObjectSerializer_instance;
  }
  function defer(deferred) {
    return new defer$1(deferred);
  }
  function JsonPrimitiveSerializer() {
    JsonPrimitiveSerializer_instance = this;
    var tmp = this;
    var tmp_0 = STRING_getInstance();
    tmp.f19_1 = buildSerialDescriptor$default('kotlinx.serialization.json.JsonPrimitive', tmp_0, [], null, 12, null);
  }
  JsonPrimitiveSerializer.prototype.mr = function () {
    return this.f19_1;
  };
  JsonPrimitiveSerializer.prototype.s19 = function (encoder, value) {
    verify(encoder);
    var tmp;
    if (value instanceof JsonNull) {
      encoder.ev(JsonNullSerializer_getInstance(), JsonNull_getInstance());
      tmp = Unit_getInstance();
    } else {
      var tmp_0 = JsonLiteralSerializer_getInstance();
      encoder.ev(tmp_0, value instanceof JsonLiteral ? value : THROW_CCE());
      tmp = Unit_getInstance();
    }
    return tmp;
  };
  JsonPrimitiveSerializer.prototype.nr = function (encoder, value) {
    return this.s19(encoder, value instanceof JsonPrimitive ? value : THROW_CCE());
  };
  JsonPrimitiveSerializer.prototype.or = function (decoder) {
    var result = asJsonDecoder(decoder).t18();
    if (!(result instanceof JsonPrimitive))
      throw JsonDecodingException_0(-1, 'Unexpected JSON element, expected JsonPrimitive, had ' + getKClassFromExpression(result), toString(result));
    return result;
  };
  JsonPrimitiveSerializer.$metadata$ = objectMeta('JsonPrimitiveSerializer', [KSerializer]);
  var JsonPrimitiveSerializer_instance;
  function JsonPrimitiveSerializer_getInstance() {
    if (JsonPrimitiveSerializer_instance == null)
      new JsonPrimitiveSerializer();
    return JsonPrimitiveSerializer_instance;
  }
  function JsonNullSerializer() {
    JsonNullSerializer_instance = this;
    var tmp = this;
    var tmp_0 = ENUM_getInstance();
    tmp.g19_1 = buildSerialDescriptor$default('kotlinx.serialization.json.JsonNull', tmp_0, [], null, 12, null);
  }
  JsonNullSerializer.prototype.mr = function () {
    return this.g19_1;
  };
  JsonNullSerializer.prototype.t19 = function (encoder, value) {
    verify(encoder);
    encoder.ju();
  };
  JsonNullSerializer.prototype.nr = function (encoder, value) {
    return this.t19(encoder, value instanceof JsonNull ? value : THROW_CCE());
  };
  JsonNullSerializer.prototype.or = function (decoder) {
    verify_0(decoder);
    decoder.et();
    return JsonNull_getInstance();
  };
  JsonNullSerializer.$metadata$ = objectMeta('JsonNullSerializer', [KSerializer]);
  var JsonNullSerializer_instance;
  function JsonNullSerializer_getInstance() {
    if (JsonNullSerializer_instance == null)
      new JsonNullSerializer();
    return JsonNullSerializer_instance;
  }
  function JsonLiteralSerializer() {
    JsonLiteralSerializer_instance = this;
    this.h19_1 = PrimitiveSerialDescriptor('kotlinx.serialization.json.JsonLiteral', STRING_getInstance());
  }
  JsonLiteralSerializer.prototype.mr = function () {
    return this.h19_1;
  };
  JsonLiteralSerializer.prototype.u19 = function (encoder, value) {
    verify(encoder);
    if (value.d19_1) {
      return encoder.su(value.e19_1);
    }
    var tmp0_safe_receiver = get_longOrNull(value);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return encoder.ou(tmp0_safe_receiver);
    }
    var tmp1_safe_receiver = toULongOrNull(value.e19_1);
    var tmp = tmp1_safe_receiver;
    if ((tmp == null ? null : new ULong(tmp)) == null)
      null;
    else {
      var tmp$ret$2;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      var tmp0_safe_receiver_0 = encoder.tu(serializer_1(Companion_getInstance()).mr());
      if (tmp0_safe_receiver_0 == null)
        null;
      else {
        var tmp$ret$1;
        // Inline function 'kotlin.ULong.toLong' call
        tmp$ret$1 = _ULong___get_data__impl__fggpzb(tmp1_safe_receiver);
        tmp0_safe_receiver_0.ou(tmp$ret$1);
      }
      return Unit_getInstance();
    }
    var tmp2_safe_receiver = get_doubleOrNull(value);
    if (tmp2_safe_receiver == null)
      null;
    else {
      var tmp$ret$3;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return encoder.qu(tmp2_safe_receiver);
    }
    var tmp3_safe_receiver = get_booleanOrNull(value);
    if (tmp3_safe_receiver == null)
      null;
    else {
      var tmp$ret$4;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return encoder.ku(tmp3_safe_receiver);
    }
    encoder.su(value.e19_1);
  };
  JsonLiteralSerializer.prototype.nr = function (encoder, value) {
    return this.u19(encoder, value instanceof JsonLiteral ? value : THROW_CCE());
  };
  JsonLiteralSerializer.prototype.or = function (decoder) {
    var result = asJsonDecoder(decoder).t18();
    if (!(result instanceof JsonLiteral))
      throw JsonDecodingException_0(-1, 'Unexpected JSON element, expected JsonLiteral, had ' + getKClassFromExpression(result), toString(result));
    return result;
  };
  JsonLiteralSerializer.$metadata$ = objectMeta('JsonLiteralSerializer', [KSerializer]);
  var JsonLiteralSerializer_instance;
  function JsonLiteralSerializer_getInstance() {
    if (JsonLiteralSerializer_instance == null)
      new JsonLiteralSerializer();
    return JsonLiteralSerializer_instance;
  }
  function verify(encoder) {
    asJsonEncoder(encoder);
  }
  function verify_0(decoder) {
    asJsonDecoder(decoder);
  }
  function _get_original__l7ku1m($this) {
    var tmp$ret$0;
    // Inline function 'kotlin.getValue' call
    var tmp0_getValue = original$factory();
    tmp$ret$0 = $this.v19_1.f1();
    return tmp$ret$0;
  }
  function defer$1($deferred) {
    this.v19_1 = lazy($deferred);
  }
  defer$1.prototype.vr = function () {
    return _get_original__l7ku1m(this).vr();
  };
  defer$1.prototype.wr = function () {
    return _get_original__l7ku1m(this).wr();
  };
  defer$1.prototype.yr = function () {
    return _get_original__l7ku1m(this).yr();
  };
  defer$1.prototype.zr = function (index) {
    return _get_original__l7ku1m(this).zr(index);
  };
  defer$1.prototype.as = function (name) {
    return _get_original__l7ku1m(this).as(name);
  };
  defer$1.prototype.bs = function (index) {
    return _get_original__l7ku1m(this).bs(index);
  };
  defer$1.$metadata$ = classMeta(undefined, [SerialDescriptor]);
  function original$factory() {
    return getPropertyCallableRef('original', 1, KProperty1, function (receiver) {
      return _get_original__l7ku1m(receiver);
    }, null);
  }
  function JsonEncoder() {
  }
  JsonEncoder.$metadata$ = interfaceMeta('JsonEncoder', [Encoder, CompositeEncoder]);
  function JsonTransformingSerializer(tSerializer) {
    this.x19_1 = tSerializer;
  }
  JsonTransformingSerializer.prototype.mr = function () {
    return this.x19_1.mr();
  };
  JsonTransformingSerializer.prototype.nr = function (encoder, value) {
    var output = asJsonEncoder(encoder);
    var element = writeJson(output.s18(), value, this.x19_1);
    element = this.y19(element);
    output.w19(element);
  };
  JsonTransformingSerializer.prototype.or = function (decoder) {
    var input = asJsonDecoder(decoder);
    var element = input.t18();
    return input.s18().k17(this.x19_1, this.z19(element));
  };
  JsonTransformingSerializer.prototype.z19 = function (element) {
    return element;
  };
  JsonTransformingSerializer.prototype.y19 = function (element) {
    return element;
  };
  JsonTransformingSerializer.$metadata$ = classMeta('JsonTransformingSerializer', [KSerializer]);
  function JsonConf_init_$Init$(encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, serializersModule, $mask0, $marker, $this) {
    if (!(($mask0 & 1) === 0))
      encodeDefaults = false;
    if (!(($mask0 & 2) === 0))
      ignoreUnknownKeys = false;
    if (!(($mask0 & 4) === 0))
      isLenient = false;
    if (!(($mask0 & 8) === 0))
      allowStructuredMapKeys = false;
    if (!(($mask0 & 16) === 0))
      prettyPrint = false;
    if (!(($mask0 & 32) === 0))
      prettyPrintIndent = '    ';
    if (!(($mask0 & 64) === 0))
      coerceInputValues = false;
    if (!(($mask0 & 128) === 0))
      useArrayPolymorphism = false;
    if (!(($mask0 & 256) === 0))
      classDiscriminator = 'type';
    if (!(($mask0 & 512) === 0))
      allowSpecialFloatingPointValues = false;
    if (!(($mask0 & 1024) === 0))
      serializersModule = get_EmptySerializersModule();
    JsonConf.call($this, encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, serializersModule);
    return $this;
  }
  function JsonConf_init_$Create$(encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, serializersModule, $mask0, $marker) {
    return JsonConf_init_$Init$(encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, serializersModule, $mask0, $marker, Object.create(JsonConf.prototype));
  }
  function JsonConf(encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, serializersModule) {
    this.l17_1 = encodeDefaults;
    this.m17_1 = ignoreUnknownKeys;
    this.n17_1 = isLenient;
    this.o17_1 = allowStructuredMapKeys;
    this.p17_1 = prettyPrint;
    this.q17_1 = prettyPrintIndent;
    this.r17_1 = coerceInputValues;
    this.s17_1 = useArrayPolymorphism;
    this.t17_1 = classDiscriminator;
    this.u17_1 = allowSpecialFloatingPointValues;
    this.v17_1 = serializersModule;
  }
  JsonConf.prototype.a1a = function () {
    return this.q17_1;
  };
  JsonConf.prototype.toString = function () {
    return 'JsonConf(encodeDefaults=' + this.l17_1 + ', ignoreUnknownKeys=' + this.m17_1 + ', isLenient=' + this.n17_1 + ', allowStructuredMapKeys=' + this.o17_1 + ', prettyPrint=' + this.p17_1 + ', prettyPrintIndent=' + this.q17_1 + ', coerceInputValues=' + this.r17_1 + ', useArrayPolymorphism=' + this.s17_1 + ', classDiscriminator=' + this.t17_1 + ', allowSpecialFloatingPointValues=' + this.u17_1 + ', serializersModule=' + this.v17_1 + ')';
  };
  JsonConf.prototype.hashCode = function () {
    var result = this.l17_1 | 0;
    result = imul(result, 31) + (this.m17_1 | 0) | 0;
    result = imul(result, 31) + (this.n17_1 | 0) | 0;
    result = imul(result, 31) + (this.o17_1 | 0) | 0;
    result = imul(result, 31) + (this.p17_1 | 0) | 0;
    result = imul(result, 31) + getStringHashCode(this.q17_1) | 0;
    result = imul(result, 31) + (this.r17_1 | 0) | 0;
    result = imul(result, 31) + (this.s17_1 | 0) | 0;
    result = imul(result, 31) + getStringHashCode(this.t17_1) | 0;
    result = imul(result, 31) + (this.u17_1 | 0) | 0;
    result = imul(result, 31) + hashCode(this.v17_1) | 0;
    return result;
  };
  JsonConf.prototype.equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof JsonConf))
      return false;
    var tmp0_other_with_cast = other instanceof JsonConf ? other : THROW_CCE();
    if (!(this.l17_1 === tmp0_other_with_cast.l17_1))
      return false;
    if (!(this.m17_1 === tmp0_other_with_cast.m17_1))
      return false;
    if (!(this.n17_1 === tmp0_other_with_cast.n17_1))
      return false;
    if (!(this.o17_1 === tmp0_other_with_cast.o17_1))
      return false;
    if (!(this.p17_1 === tmp0_other_with_cast.p17_1))
      return false;
    if (!(this.q17_1 === tmp0_other_with_cast.q17_1))
      return false;
    if (!(this.r17_1 === tmp0_other_with_cast.r17_1))
      return false;
    if (!(this.s17_1 === tmp0_other_with_cast.s17_1))
      return false;
    if (!(this.t17_1 === tmp0_other_with_cast.t17_1))
      return false;
    if (!(this.u17_1 === tmp0_other_with_cast.u17_1))
      return false;
    if (!equals(this.v17_1, tmp0_other_with_cast.v17_1))
      return false;
    return true;
  };
  JsonConf.$metadata$ = classMeta('JsonConf');
  function JsonEncodingException(message) {
    JsonException.call(this, message);
    captureStack(this, JsonEncodingException);
  }
  JsonEncodingException.$metadata$ = classMeta('JsonEncodingException', undefined, undefined, undefined, undefined, JsonException.prototype);
  function InvalidFloatingPointEncoded(value, output) {
    var tmp = 'Unexpected special floating-point value ' + toString(value) + '. By default, ' + 'non-finite floating point values are prohibited because they do not conform JSON specification. ' + (get_specialFlowingValuesHint() + '\n');
    return new JsonEncodingException(tmp + ('Current output: ' + minify$default(output, 0, 1, null)));
  }
  function InvalidKeyKindException(keyDescriptor) {
    return new JsonEncodingException("Value of type '" + keyDescriptor.vr() + "' can't be used in JSON as a key in the map. " + ("It should have either primitive or enum kind, but its kind is '" + keyDescriptor.wr() + "'.\n") + get_allowStructuredMapKeysHint());
  }
  function JsonDecodingException(message) {
    JsonException.call(this, message);
    captureStack(this, JsonDecodingException);
  }
  JsonDecodingException.$metadata$ = classMeta('JsonDecodingException', undefined, undefined, undefined, undefined, JsonException.prototype);
  function JsonDecodingException_0(offset, message, input) {
    return JsonDecodingException_1(offset, message + '\nJSON input: ' + minify(input, offset));
  }
  function throwInvalidFloatingPointDecoded(_this__u8e3s4, result) {
    var tmp = 'Unexpected special floating-point value ' + toString(result) + '. By default, ' + 'non-finite floating point values are prohibited because they do not conform JSON specification. ' + get_specialFlowingValuesHint();
    _this__u8e3s4.b1a(tmp, 0, 2, null);
  }
  function InvalidFloatingPointEncoded_0(value, key, output) {
    return new JsonEncodingException(unexpectedFpErrorMessage(value, key, output));
  }
  function InvalidFloatingPointDecoded(value, key, output) {
    return JsonDecodingException_1(-1, unexpectedFpErrorMessage(value, key, output));
  }
  function UnknownKeyException(key, input) {
    var tmp = "Encountered unknown key '" + key + "'.\n" + (get_ignoreUnknownKeysHint() + '\n');
    return JsonDecodingException_1(-1, tmp + ('Current input: ' + minify$default(input, 0, 1, null)));
  }
  function JsonException(message) {
    SerializationException_init_$Init$(message, this);
    captureStack(this, JsonException);
  }
  JsonException.$metadata$ = classMeta('JsonException', undefined, undefined, undefined, undefined, SerializationException.prototype);
  function minify(_this__u8e3s4, offset) {
    if (_this__u8e3s4.length < 200)
      return _this__u8e3s4;
    if (offset === -1) {
      var start = _this__u8e3s4.length - 60 | 0;
      if (start <= 0)
        return _this__u8e3s4;
      var tmp$ret$1;
      // Inline function 'kotlin.text.substring' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = _this__u8e3s4;
      tmp$ret$1 = tmp$ret$0.substring(start);
      return '.....' + tmp$ret$1;
    }
    var start_0 = offset - 30 | 0;
    var end = offset + 30 | 0;
    var prefix = start_0 <= 0 ? '' : '.....';
    var suffix = end >= _this__u8e3s4.length ? '' : '.....';
    var tmp$ret$3;
    // Inline function 'kotlin.text.substring' call
    var tmp0_substring = coerceAtLeast(start_0, 0);
    var tmp1_substring = coerceAtMost(end, _this__u8e3s4.length);
    var tmp$ret$2;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$2 = _this__u8e3s4;
    tmp$ret$3 = tmp$ret$2.substring(tmp0_substring, tmp1_substring);
    return prefix + tmp$ret$3 + suffix;
  }
  function minify$default(_this__u8e3s4, offset, $mask0, $handler) {
    if (!(($mask0 & 1) === 0))
      offset = -1;
    return minify(_this__u8e3s4, offset);
  }
  function JsonDecodingException_1(offset, message) {
    return new JsonDecodingException(offset >= 0 ? 'Unexpected JSON token at offset ' + offset + ': ' + message : message);
  }
  function unexpectedFpErrorMessage(value, key, output) {
    var tmp = 'Unexpected special floating-point value ' + toString(value) + ' with key ' + key + '. By default, ' + 'non-finite floating point values are prohibited because they do not conform JSON specification. ' + (get_specialFlowingValuesHint() + '\n');
    return tmp + ('Current output: ' + minify$default(output, 0, 1, null));
  }
  function readObject($this) {
    // Inline function 'kotlinx.serialization.json.internal.JsonReader.requireTokenClass' call
    var tmp0_requireTokenClass = $this.c1a_1;
    var tmp1_requireTokenClass = get_TC_BEGIN_OBJ();
    if (!(tmp0_requireTokenClass.m18_1 === tmp1_requireTokenClass)) {
      var tmp$ret$0;
      // Inline function 'kotlinx.serialization.json.internal.JsonParser.readObject.<anonymous>' call
      var tmp2__anonymous__z9zvc9 = numberToChar(tmp0_requireTokenClass.m18_1);
      tmp$ret$0 = 'Expected start of the object';
      tmp0_requireTokenClass.e1a(tmp$ret$0, tmp0_requireTokenClass.n18_1);
    }
    $this.c1a_1.f1a();
    // Inline function 'kotlinx.serialization.json.internal.JsonReader.require' call
    var tmp3_require = $this.c1a_1;
    var tmp4_require = !($this.c1a_1.m18_1 === get_TC_COMMA());
    var tmp5_require = $this.c1a_1.l18_1;
    if (!tmp4_require) {
      var tmp$ret$1;
      // Inline function 'kotlinx.serialization.json.internal.JsonParser.readObject.<anonymous>' call
      tmp$ret$1 = 'Unexpected leading comma';
      tmp3_require.e1a(tmp$ret$1, tmp5_require);
    }
    var tmp$ret$2;
    // Inline function 'kotlin.collections.linkedMapOf' call
    tmp$ret$2 = LinkedHashMap_init_$Create$();
    var result = tmp$ret$2;
    var valueExpected = false;
    while ($this.c1a_1.g1a()) {
      valueExpected = false;
      var key = $this.d1a_1 ? $this.c1a_1.i1a() : $this.c1a_1.h1a();
      // Inline function 'kotlinx.serialization.json.internal.JsonReader.requireTokenClass' call
      var tmp6_requireTokenClass = $this.c1a_1;
      var tmp7_requireTokenClass = get_TC_COLON();
      if (!(tmp6_requireTokenClass.m18_1 === tmp7_requireTokenClass)) {
        var tmp$ret$3;
        // Inline function 'kotlinx.serialization.json.internal.JsonParser.readObject.<anonymous>' call
        var tmp8__anonymous__65w033 = numberToChar(tmp6_requireTokenClass.m18_1);
        tmp$ret$3 = "Expected ':'";
        tmp6_requireTokenClass.e1a(tmp$ret$3, tmp6_requireTokenClass.n18_1);
      }
      $this.c1a_1.f1a();
      var element = $this.j1a();
      // Inline function 'kotlin.collections.set' call
      result.u(key, element);
      if (!($this.c1a_1.m18_1 === get_TC_COMMA())) {
        // Inline function 'kotlinx.serialization.json.internal.JsonReader.requireTokenClass' call
        var tmp9_requireTokenClass = $this.c1a_1;
        var tmp10_requireTokenClass = get_TC_END_OBJ();
        if (!(tmp9_requireTokenClass.m18_1 === tmp10_requireTokenClass)) {
          var tmp$ret$4;
          // Inline function 'kotlinx.serialization.json.internal.JsonParser.readObject.<anonymous>' call
          var tmp11__anonymous__tkubxh = numberToChar(tmp9_requireTokenClass.m18_1);
          tmp$ret$4 = 'Expected end of the object or comma';
          tmp9_requireTokenClass.e1a(tmp$ret$4, tmp9_requireTokenClass.n18_1);
        }
      } else {
        valueExpected = true;
        $this.c1a_1.f1a();
      }
    }
    // Inline function 'kotlinx.serialization.json.internal.JsonReader.require' call
    var tmp12_require = $this.c1a_1;
    var tmp13_require = !valueExpected ? $this.c1a_1.m18_1 === get_TC_END_OBJ() : false;
    var tmp14_require = $this.c1a_1.l18_1;
    if (!tmp13_require) {
      var tmp$ret$5;
      // Inline function 'kotlinx.serialization.json.internal.JsonParser.readObject.<anonymous>' call
      tmp$ret$5 = 'Expected end of the object';
      tmp12_require.e1a(tmp$ret$5, tmp14_require);
    }
    $this.c1a_1.f1a();
    return new JsonObject(result);
  }
  function readArray($this) {
    // Inline function 'kotlinx.serialization.json.internal.JsonReader.requireTokenClass' call
    var tmp0_requireTokenClass = $this.c1a_1;
    var tmp1_requireTokenClass = get_TC_BEGIN_LIST();
    if (!(tmp0_requireTokenClass.m18_1 === tmp1_requireTokenClass)) {
      var tmp$ret$0;
      // Inline function 'kotlinx.serialization.json.internal.JsonParser.readArray.<anonymous>' call
      var tmp2__anonymous__z9zvc9 = numberToChar(tmp0_requireTokenClass.m18_1);
      tmp$ret$0 = 'Expected start of the array';
      tmp0_requireTokenClass.e1a(tmp$ret$0, tmp0_requireTokenClass.n18_1);
    }
    $this.c1a_1.f1a();
    // Inline function 'kotlinx.serialization.json.internal.JsonReader.require' call
    var tmp3_require = $this.c1a_1;
    var tmp4_require = !($this.c1a_1.m18_1 === get_TC_COMMA());
    var tmp5_require = $this.c1a_1.l18_1;
    if (!tmp4_require) {
      var tmp$ret$1;
      // Inline function 'kotlinx.serialization.json.internal.JsonParser.readArray.<anonymous>' call
      tmp$ret$1 = 'Unexpected leading comma';
      tmp3_require.e1a(tmp$ret$1, tmp5_require);
    }
    var tmp$ret$2;
    // Inline function 'kotlin.collections.arrayListOf' call
    tmp$ret$2 = ArrayList_init_$Create$();
    var result = tmp$ret$2;
    var valueExpected = false;
    while ($this.c1a_1.g1a()) {
      valueExpected = false;
      var element = $this.j1a();
      result.a(element);
      if (!($this.c1a_1.m18_1 === get_TC_COMMA())) {
        // Inline function 'kotlinx.serialization.json.internal.JsonReader.requireTokenClass' call
        var tmp6_requireTokenClass = $this.c1a_1;
        var tmp7_requireTokenClass = get_TC_END_LIST();
        if (!(tmp6_requireTokenClass.m18_1 === tmp7_requireTokenClass)) {
          var tmp$ret$3;
          // Inline function 'kotlinx.serialization.json.internal.JsonParser.readArray.<anonymous>' call
          var tmp8__anonymous__65w033 = numberToChar(tmp6_requireTokenClass.m18_1);
          tmp$ret$3 = 'Expected end of the array or comma';
          tmp6_requireTokenClass.e1a(tmp$ret$3, tmp6_requireTokenClass.n18_1);
        }
      } else {
        valueExpected = true;
        $this.c1a_1.f1a();
      }
    }
    // Inline function 'kotlinx.serialization.json.internal.JsonReader.require' call
    var tmp9_require = $this.c1a_1;
    var tmp10_require = !valueExpected;
    var tmp11_require = $this.c1a_1.l18_1;
    if (!tmp10_require) {
      var tmp$ret$4;
      // Inline function 'kotlinx.serialization.json.internal.JsonParser.readArray.<anonymous>' call
      tmp$ret$4 = 'Unexpected trailing comma';
      tmp9_require.e1a(tmp$ret$4, tmp11_require);
    }
    $this.c1a_1.f1a();
    return new JsonArray(result);
  }
  function readValue($this, isString) {
    var tmp;
    if ($this.d1a_1) {
      tmp = $this.c1a_1.i1a();
    } else {
      tmp = isString ? $this.c1a_1.h1a() : $this.c1a_1.i1a();
    }
    var str = tmp;
    return new JsonLiteral(str, isString);
  }
  function JsonParser(configuration, reader) {
    this.c1a_1 = reader;
    this.d1a_1 = configuration.n17_1;
  }
  JsonParser.prototype.j1a = function () {
    if (!this.c1a_1.g1a()) {
      this.c1a_1.b1a("Can't begin reading value from here", 0, 2, null);
    }
    var tmp0_subject = this.c1a_1.m18_1;
    var tmp;
    if (tmp0_subject === get_TC_NULL()) {
      var tmp$ret$0;
      // Inline function 'kotlin.also' call
      var tmp0_also = JsonNull_getInstance();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlinx.serialization.json.internal.JsonParser.read.<anonymous>' call
      this.c1a_1.f1a();
      tmp$ret$0 = tmp0_also;
      tmp = tmp$ret$0;
    } else if (tmp0_subject === get_TC_STRING()) {
      tmp = readValue(this, true);
    } else if (tmp0_subject === get_TC_OTHER()) {
      tmp = readValue(this, false);
    } else if (tmp0_subject === get_TC_BEGIN_OBJ()) {
      tmp = readObject(this);
    } else if (tmp0_subject === get_TC_BEGIN_LIST()) {
      tmp = readArray(this);
    } else {
      this.c1a_1.b1a("Can't begin reading element, unexpected token", 0, 2, null);
    }
    return tmp;
  };
  JsonParser.$metadata$ = classMeta('JsonParser');
  function takeStringInternal($this, advance) {
    var tmp;
    if ($this.o18_1 < 0) {
      tmp = concatToString($this.q18_1, 0, 0 + $this.p18_1 | 0);
    } else {
      var tmp$ret$1;
      // Inline function 'kotlin.text.substring' call
      var tmp0_substring = $this.k18_1;
      var tmp1_substring = $this.o18_1;
      var tmp2_substring = $this.o18_1 + $this.p18_1 | 0;
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_substring;
      tmp$ret$1 = tmp$ret$0.substring(tmp1_substring, tmp2_substring);
      tmp = tmp$ret$1;
    }
    var prevStr = tmp;
    if (advance) {
      $this.f1a();
    }
    return prevStr;
  }
  function takeStringInternal$default($this, advance, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      advance = true;
    return takeStringInternal($this, advance);
  }
  function append($this, ch) {
    if ($this.p18_1 >= $this.q18_1.length)
      $this.q18_1 = copyOf($this.q18_1, imul(2, $this.q18_1.length));
    var tmp = $this.q18_1;
    var tmp0_this = $this;
    var tmp1 = tmp0_this.p18_1;
    tmp0_this.p18_1 = tmp1 + 1 | 0;
    tmp[tmp1] = ch;
  }
  function appendRange($this, source, fromIndex, toIndex) {
    var addLen = toIndex - fromIndex | 0;
    var oldLen = $this.p18_1;
    var newLen = oldLen + addLen | 0;
    if (newLen > $this.q18_1.length)
      $this.q18_1 = copyOf($this.q18_1, coerceAtLeast(newLen, imul(2, $this.q18_1.length)));
    var inductionVariable = 0;
    if (inductionVariable < addLen)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        $this.q18_1[oldLen + i | 0] = charSequenceGet(source, fromIndex + i | 0);
      }
       while (inductionVariable < addLen);
    var tmp1_this = $this;
    tmp1_this.p18_1 = tmp1_this.p18_1 + addLen | 0;
  }
  function nextLiteral($this, source, startPos) {
    $this.n18_1 = startPos;
    $this.o18_1 = startPos;
    var currentPosition = startPos;
    while (currentPosition < source.length ? charToTokenClass(charSequenceGet(source, currentPosition)) === 0 : false) {
      var tmp0 = currentPosition;
      currentPosition = tmp0 + 1 | 0;
    }
    $this.l18_1 = currentPosition;
    $this.p18_1 = currentPosition - $this.o18_1 | 0;
    $this.m18_1 = rangeEquals(source, $this.o18_1, $this.p18_1, 'null') ? 10 : 0;
  }
  function nextString($this, source, startPosition) {
    $this.n18_1 = startPosition;
    $this.p18_1 = 0;
    var currentPosition = startPosition + 1 | 0;
    if (currentPosition >= source.length) {
      $this.e1a('EOF', currentPosition);
    }
    var lastPosition = currentPosition;
    while (!equals(new Char(charSequenceGet(source, currentPosition)), new Char(_Char___init__impl__6a9atx(34)))) {
      if (equals(new Char(charSequenceGet(source, currentPosition)), new Char(_Char___init__impl__6a9atx(92)))) {
        appendRange($this, source, lastPosition, currentPosition);
        var newPosition = appendEsc($this, source, currentPosition + 1 | 0);
        currentPosition = newPosition;
        lastPosition = newPosition;
      } else {
        currentPosition = currentPosition + 1 | 0;
        if (currentPosition >= source.length) {
          $this.e1a('EOF', currentPosition);
        }
      }
    }
    if (lastPosition === (startPosition + 1 | 0)) {
      $this.o18_1 = lastPosition;
      $this.p18_1 = currentPosition - lastPosition | 0;
    } else {
      appendRange($this, source, lastPosition, currentPosition);
      $this.o18_1 = -1;
    }
    $this.l18_1 = currentPosition + 1 | 0;
    $this.m18_1 = 1;
  }
  function appendEsc($this, source, startPosition) {
    var currentPosition = startPosition;
    // Inline function 'kotlinx.serialization.json.internal.JsonReader.require' call
    var tmp0_require = currentPosition < source.length;
    var tmp1_require = currentPosition;
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlinx.serialization.json.internal.JsonReader.appendEsc.<anonymous>' call
      tmp$ret$0 = 'Unexpected EOF after escape character';
      $this.e1a(tmp$ret$0, tmp1_require);
    }
    var tmp0 = currentPosition;
    currentPosition = tmp0 + 1 | 0;
    var currentChar = charSequenceGet(source, tmp0);
    if (equals(new Char(currentChar), new Char(_Char___init__impl__6a9atx(117)))) {
      return appendHex($this, source, currentPosition);
    }
    var c = escapeToChar(Char__toInt_impl_vasixd(currentChar));
    // Inline function 'kotlinx.serialization.json.internal.JsonReader.require' call
    var tmp2_require = !equals(new Char(c), new Char(_Char___init__impl__6a9atx(0)));
    var tmp3_require = currentPosition;
    if (!tmp2_require) {
      var tmp$ret$1;
      // Inline function 'kotlinx.serialization.json.internal.JsonReader.appendEsc.<anonymous>' call
      tmp$ret$1 = "Invalid escaped char '" + new Char(currentChar) + "'";
      $this.e1a(tmp$ret$1, tmp3_require);
    }
    append($this, c);
    return currentPosition;
  }
  function appendHex($this, source, startPos) {
    var curPos = startPos;
    var tmp3 = curPos;
    curPos = tmp3 + 1 | 0;
    var tmp = fromHexChar($this, source, tmp3) << 12;
    var tmp2 = curPos;
    curPos = tmp2 + 1 | 0;
    var tmp_0 = tmp + (fromHexChar($this, source, tmp2) << 8) | 0;
    var tmp1 = curPos;
    curPos = tmp1 + 1 | 0;
    var tmp_1 = tmp_0 + (fromHexChar($this, source, tmp1) << 4) | 0;
    var tmp0 = curPos;
    curPos = tmp0 + 1 | 0;
    append($this, numberToChar(tmp_1 + fromHexChar($this, source, tmp0) | 0));
    return curPos;
  }
  function fromHexChar($this, source, currentPosition) {
    // Inline function 'kotlinx.serialization.json.internal.JsonReader.require' call
    var tmp0_require = currentPosition < source.length;
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlinx.serialization.json.internal.JsonReader.fromHexChar.<anonymous>' call
      tmp$ret$0 = 'Unexpected EOF during unicode escape';
      $this.e1a(tmp$ret$0, currentPosition);
    }
    var curChar = charSequenceGet(source, currentPosition);
    var tmp;
    if (_Char___init__impl__6a9atx(48) <= curChar ? curChar <= _Char___init__impl__6a9atx(57) : false) {
      tmp = Char__toInt_impl_vasixd(curChar) - 48 | 0;
    } else if (_Char___init__impl__6a9atx(97) <= curChar ? curChar <= _Char___init__impl__6a9atx(102) : false) {
      tmp = (Char__toInt_impl_vasixd(curChar) - 97 | 0) + 10 | 0;
    } else if (_Char___init__impl__6a9atx(65) <= curChar ? curChar <= _Char___init__impl__6a9atx(70) : false) {
      tmp = (Char__toInt_impl_vasixd(curChar) - 65 | 0) + 10 | 0;
    } else {
      var tmp_0 = "Invalid toHexChar char '" + new Char(curChar) + "' in unicode escape";
      $this.b1a(tmp_0, 0, 2, null);
    }
    return tmp;
  }
  function JsonReader(source) {
    this.k18_1 = source;
    this.l18_1 = 0;
    this.m18_1 = 12;
    this.n18_1 = 0;
    this.o18_1 = -1;
    this.p18_1 = 0;
    this.q18_1 = charArray(16);
    this.f1a();
  }
  JsonReader.prototype.r18 = function () {
    return this.m18_1 === 12;
  };
  JsonReader.prototype.g1a = function () {
    var tmp0_subject = this.m18_1;
    return ((((tmp0_subject === 8 ? true : tmp0_subject === 6) ? true : tmp0_subject === 0) ? true : tmp0_subject === 1) ? true : tmp0_subject === 10) ? true : false;
  };
  JsonReader.prototype.k1a = function (expected, errorMessage) {
    if (!(this.m18_1 === expected)) {
      this.e1a(errorMessage(new Char(numberToChar(this.m18_1))), this.n18_1);
    }
  };
  JsonReader.prototype.i1a = function () {
    if (!(this.m18_1 === 0) ? !(this.m18_1 === 1) : false) {
      this.e1a('Expected string or non-null literal', this.n18_1);
    }
    return takeStringInternal$default(this, false, 2, null);
  };
  JsonReader.prototype.l1a = function (isLenient) {
    return (!(this.m18_1 === 1) ? !isLenient ? true : !(this.m18_1 === 0) : false) ? null : takeStringInternal(this, false);
  };
  JsonReader.prototype.h1a = function () {
    var tmp0_subject = this.m18_1;
    if (tmp0_subject === 1) {
    } else if (tmp0_subject === 10) {
      this.e1a("Expected string literal but 'null' literal was found.\nUse 'coerceInputValues = true' in 'Json {}` builder to coerce nulls to default values.", this.n18_1);
    } else {
      this.e1a("Expected string literal with quotes.\nUse 'isLenient = true' in 'Json {}` builder to accept non-compliant JSON.", this.n18_1);
    }
    return takeStringInternal$default(this, false, 2, null);
  };
  JsonReader.prototype.m1a = function () {
    if (!(this.m18_1 === 0)) {
      this.e1a("Expected start of the unquoted boolean literal.\nUse 'isLenient = true' in 'Json {}` builder to accept non-compliant JSON.", this.n18_1);
    }
    return takeStringInternal$default(this, false, 2, null);
  };
  JsonReader.prototype.f1a = function () {
    var source = this.k18_1;
    var currentPosition = this.l18_1;
    while (currentPosition < source.length) {
      var ch = charSequenceGet(source, currentPosition);
      var tc = charToTokenClass(ch);
      if (tc === 3) {
        var tmp0 = currentPosition;
        currentPosition = tmp0 + 1 | 0;
      } else if (tc === 0) {
        nextLiteral(this, source, currentPosition);
        return Unit_getInstance();
      } else if (tc === 1) {
        nextString(this, source, currentPosition);
        return Unit_getInstance();
      } else {
        this.n18_1 = currentPosition;
        this.m18_1 = tc;
        this.l18_1 = currentPosition + 1 | 0;
        return Unit_getInstance();
      }
    }
    this.n18_1 = currentPosition;
    this.m18_1 = 12;
  };
  JsonReader.prototype.n1a = function () {
    if (!(this.m18_1 === 6) ? !(this.m18_1 === 8) : false) {
      this.f1a();
      return Unit_getInstance();
    }
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp$ret$0 = ArrayList_init_$Create$();
    var tokenStack = tmp$ret$0;
    $l$1: do {
      $l$0: do {
        var tmp0_subject = this.m18_1;
        if (tmp0_subject === 8 ? true : tmp0_subject === 6) {
          tokenStack.a(this.m18_1);
        } else if (tmp0_subject === 9) {
          if (!(last(tokenStack) === 8))
            throw JsonDecodingException_0(this.l18_1, 'found ] instead of }', this.k18_1);
          tokenStack.ba(tokenStack.i() - 1 | 0);
        } else if (tmp0_subject === 7) {
          if (!(last(tokenStack) === 6))
            throw JsonDecodingException_0(this.l18_1, 'found } instead of ]', this.k18_1);
          tokenStack.ba(tokenStack.i() - 1 | 0);
        }
        this.f1a();
      }
       while (false);
      var tmp$ret$1;
      // Inline function 'kotlin.collections.isNotEmpty' call
      tmp$ret$1 = !tokenStack.p();
    }
     while (tmp$ret$1);
  };
  JsonReader.prototype.toString = function () {
    return "JsonReader(source='" + this.k18_1 + "', currentPosition=" + this.l18_1 + ', tokenClass=' + this.m18_1 + ', tokenPosition=' + this.n18_1 + ', offset=' + this.o18_1 + ')';
  };
  JsonReader.prototype.e1a = function (message, position) {
    throw JsonDecodingException_0(position, message, this.k18_1);
  };
  JsonReader.prototype.b1a = function (message, position, $mask0, $handler) {
    if (!(($mask0 & 2) === 0))
      position = this.l18_1;
    return this.e1a(message, position);
  };
  JsonReader.prototype.o1a = function (condition, position, message) {
    if (!condition) {
      this.e1a(message(), position);
    }
  };
  JsonReader.$metadata$ = classMeta('JsonReader');
  function get_COLON() {
    return COLON;
  }
  var COLON;
  function get_INVALID() {
    return INVALID;
  }
  var INVALID;
  function get_COMMA() {
    return COMMA;
  }
  var COMMA;
  function get_NULL() {
    return NULL;
  }
  var NULL;
  function get_BEGIN_OBJ() {
    return BEGIN_OBJ;
  }
  var BEGIN_OBJ;
  function get_END_OBJ() {
    return END_OBJ;
  }
  var END_OBJ;
  function get_BEGIN_LIST() {
    return BEGIN_LIST;
  }
  var BEGIN_LIST;
  function get_END_LIST() {
    return END_LIST;
  }
  var END_LIST;
  function charToTokenClass(c) {
    return Char__toInt_impl_vasixd(c) < 126 ? CharMappings_getInstance().q1a_1[Char__toInt_impl_vasixd(c)] : 0;
  }
  function get_TC_BEGIN_LIST() {
    return TC_BEGIN_LIST;
  }
  var TC_BEGIN_LIST;
  function get_TC_BEGIN_OBJ() {
    return TC_BEGIN_OBJ;
  }
  var TC_BEGIN_OBJ;
  function get_TC_OTHER() {
    return TC_OTHER;
  }
  var TC_OTHER;
  function get_TC_STRING() {
    return TC_STRING;
  }
  var TC_STRING;
  function get_TC_NULL() {
    return TC_NULL;
  }
  var TC_NULL;
  function get_lenientHint() {
    return lenientHint;
  }
  var lenientHint;
  function rangeEquals(source, start, length, str) {
    var n = str.length;
    if (!(length === n))
      return false;
    var inductionVariable = 0;
    if (inductionVariable < n)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!equals(new Char(charSequenceGet(source, start + i | 0)), new Char(charSequenceGet(str, i))))
          return false;
      }
       while (inductionVariable < n);
    return true;
  }
  function get_STRING() {
    return STRING;
  }
  var STRING;
  function escapeToChar(c) {
    return c < 117 ? CharMappings_getInstance().p1a_1[c] : _Char___init__impl__6a9atx(0);
  }
  function get_TC_END_LIST() {
    return TC_END_LIST;
  }
  var TC_END_LIST;
  function get_TC_END_OBJ() {
    return TC_END_OBJ;
  }
  var TC_END_OBJ;
  function initEscape($this) {
    var inductionVariable = 0;
    if (inductionVariable <= 31)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        initC2ESC($this, i, _Char___init__impl__6a9atx(117));
      }
       while (inductionVariable <= 31);
    initC2ESC($this, 8, _Char___init__impl__6a9atx(98));
    initC2ESC($this, 9, _Char___init__impl__6a9atx(116));
    initC2ESC($this, 10, _Char___init__impl__6a9atx(110));
    initC2ESC($this, 12, _Char___init__impl__6a9atx(102));
    initC2ESC($this, 13, _Char___init__impl__6a9atx(114));
    initC2ESC_0($this, _Char___init__impl__6a9atx(47), _Char___init__impl__6a9atx(47));
    initC2ESC_0($this, _Char___init__impl__6a9atx(34), _Char___init__impl__6a9atx(34));
    initC2ESC_0($this, _Char___init__impl__6a9atx(92), _Char___init__impl__6a9atx(92));
  }
  function initCharToToken($this) {
    var inductionVariable = 0;
    if (inductionVariable <= 32)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        initC2TC($this, i, 11);
      }
       while (inductionVariable <= 32);
    initC2TC($this, 9, 3);
    initC2TC($this, 10, 3);
    initC2TC($this, 13, 3);
    initC2TC($this, 32, 3);
    initC2TC_0($this, _Char___init__impl__6a9atx(44), 4);
    initC2TC_0($this, _Char___init__impl__6a9atx(58), 5);
    initC2TC_0($this, _Char___init__impl__6a9atx(123), 6);
    initC2TC_0($this, _Char___init__impl__6a9atx(125), 7);
    initC2TC_0($this, _Char___init__impl__6a9atx(91), 8);
    initC2TC_0($this, _Char___init__impl__6a9atx(93), 9);
    initC2TC_0($this, _Char___init__impl__6a9atx(34), 1);
    initC2TC_0($this, _Char___init__impl__6a9atx(92), 2);
  }
  function initC2ESC($this, c, esc) {
    if (!equals(new Char(esc), new Char(_Char___init__impl__6a9atx(117)))) {
      $this.p1a_1[Char__toInt_impl_vasixd(esc)] = numberToChar(c);
    }
  }
  function initC2ESC_0($this, c, esc) {
    return initC2ESC($this, Char__toInt_impl_vasixd(c), esc);
  }
  function initC2TC($this, c, cl) {
    $this.q1a_1[c] = cl;
  }
  function initC2TC_0($this, c, cl) {
    return initC2TC($this, Char__toInt_impl_vasixd(c), cl);
  }
  function CharMappings() {
    CharMappings_instance = this;
    this.p1a_1 = charArray(117);
    this.q1a_1 = new Int8Array(126);
    initEscape(this);
    initCharToToken(this);
  }
  CharMappings.$metadata$ = objectMeta('CharMappings');
  var CharMappings_instance;
  function CharMappings_getInstance() {
    if (CharMappings_instance == null)
      new CharMappings();
    return CharMappings_instance;
  }
  function get_TC_COMMA() {
    return TC_COMMA;
  }
  var TC_COMMA;
  function get_TC_COLON() {
    return TC_COLON;
  }
  var TC_COLON;
  function get_ignoreUnknownKeysHint() {
    return ignoreUnknownKeysHint;
  }
  var ignoreUnknownKeysHint;
  function get_specialFlowingValuesHint() {
    return specialFlowingValuesHint;
  }
  var specialFlowingValuesHint;
  function get_allowStructuredMapKeysHint() {
    return allowStructuredMapKeysHint;
  }
  var allowStructuredMapKeysHint;
  function encodePolymorphically(_this__u8e3s4, serializer, value, ifPolymorphic) {
    var tmp;
    if (!(serializer instanceof AbstractPolymorphicSerializer)) {
      tmp = true;
    } else {
      tmp = _this__u8e3s4.s18().h17_1.s17_1;
    }
    if (tmp) {
      serializer.nr(_this__u8e3s4, value);
      return Unit_getInstance();
    }
    var tmp_0 = isInterface(serializer, SerializationStrategy) ? serializer : THROW_CCE();
    var actualSerializer = findActualSerializer$accessor$1ad0flx(_this__u8e3s4, tmp_0, isObject(value) ? value : THROW_CCE());
    ifPolymorphic();
    actualSerializer.nr(_this__u8e3s4, value);
  }
  function decodeSerializableValuePolymorphic(_this__u8e3s4, deserializer) {
    var tmp;
    if (!(deserializer instanceof AbstractPolymorphicSerializer)) {
      tmp = true;
    } else {
      tmp = _this__u8e3s4.s18().h17_1.s17_1;
    }
    if (tmp) {
      return deserializer.or(_this__u8e3s4);
    }
    var tmp$ret$0;
    // Inline function 'kotlinx.serialization.json.internal.cast' call
    var tmp0_cast = _this__u8e3s4.t18();
    var tmp1_cast = deserializer.mr();
    if (!(tmp0_cast instanceof JsonObject)) {
      throw JsonDecodingException_1(-1, 'Expected ' + getKClass(JsonObject) + ' as the serialized body of ' + tmp1_cast.vr() + ', but had ' + getKClassFromExpression(tmp0_cast));
    }
    tmp$ret$0 = tmp0_cast;
    var jsonTree = tmp$ret$0;
    var discriminator = _this__u8e3s4.s18().h17_1.t17_1;
    var tmp0_safe_receiver = jsonTree.a19(discriminator);
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : get_jsonPrimitive(tmp0_safe_receiver);
    var type = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.c19();
    var tmp2_elvis_lhs = deserializer.jv(_this__u8e3s4, type);
    var tmp_0;
    if (tmp2_elvis_lhs == null) {
      throwSerializerNotFound(type, jsonTree);
    } else {
      tmp_0 = tmp2_elvis_lhs;
    }
    var actualSerializer = tmp_0;
    var tmp_1 = _this__u8e3s4.s18();
    return readPolymorphicJson(tmp_1, discriminator, jsonTree, isInterface(actualSerializer, DeserializationStrategy) ? actualSerializer : THROW_CCE());
  }
  function findActualSerializer(_this__u8e3s4, serializer, value) {
    var casted = serializer instanceof AbstractPolymorphicSerializer ? serializer : THROW_CCE();
    var actualSerializer = findPolymorphicSerializer(casted, _this__u8e3s4, isObject(value) ? value : THROW_CCE());
    validateIfSealed(casted, actualSerializer, _this__u8e3s4.s18().h17_1.t17_1);
    var kind = actualSerializer.mr().wr();
    checkKind(kind);
    return actualSerializer;
  }
  function throwSerializerNotFound(type, jsonTree) {
    var suffix = type == null ? "missing class discriminator ('null')" : "class discriminator '" + type + "'";
    throw JsonDecodingException_0(-1, 'Polymorphic serializer was not found for ' + suffix, jsonTree.toString());
  }
  function validateIfSealed(serializer, actualSerializer, classDiscriminator) {
    if (!(serializer instanceof SealedClassSerializer))
      return Unit_getInstance();
    if (jsonCachedSerialNames(actualSerializer.mr()).x1(classDiscriminator)) {
      var baseName = serializer.mr().vr();
      var actualName = actualSerializer.mr().vr();
      // Inline function 'kotlin.error' call
      var tmp0_error = "Sealed class '" + actualName + "' cannot be serialized as base class '" + baseName + "' because" + (" it has property name that conflicts with JSON class discriminator '" + classDiscriminator + "'. ") + 'You can either change class discriminator in JsonConfiguration, ' + 'rename property with @SerialName annotation or fall back to array polymorphism';
      throw IllegalStateException_init_$Create$(toString(tmp0_error));
    }
  }
  function checkKind(kind) {
    if (kind instanceof ENUM) {
      // Inline function 'kotlin.error' call
      throw IllegalStateException_init_$Create$("Enums cannot be serialized polymorphically with 'type' parameter. You can use 'JsonBuilder.useArrayPolymorphism' instead");
    }
    if (kind instanceof PrimitiveKind) {
      // Inline function 'kotlin.error' call
      throw IllegalStateException_init_$Create$("Primitives cannot be serialized polymorphically with 'type' parameter. You can use 'JsonBuilder.useArrayPolymorphism' instead");
    }
    if (kind instanceof PolymorphicKind) {
      // Inline function 'kotlin.error' call
      throw IllegalStateException_init_$Create$('Actual serializer for polymorphic cannot be polymorphic itself');
    }
  }
  function findActualSerializer$accessor$1ad0flx(_this__u8e3s4, serializer, value) {
    return findActualSerializer(_this__u8e3s4, serializer, value);
  }
  function decodeMapIndex($this, tokenClass) {
    if (!(tokenClass === get_TC_COMMA()) ? ($this.i18_1 % 2 | 0) === 1 : false) {
      // Inline function 'kotlinx.serialization.json.internal.JsonReader.requireTokenClass' call
      var tmp0_requireTokenClass = $this.g18_1;
      var tmp1_requireTokenClass = get_TC_END_OBJ();
      if (!(tmp0_requireTokenClass.m18_1 === tmp1_requireTokenClass)) {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeMapIndex.<anonymous>' call
        var tmp2__anonymous__z9zvc9 = numberToChar(tmp0_requireTokenClass.m18_1);
        tmp$ret$0 = 'Expected end of the object or comma';
        tmp0_requireTokenClass.e1a(tmp$ret$0, tmp0_requireTokenClass.n18_1);
      }
    }
    if (($this.i18_1 % 2 | 0) === 0) {
      // Inline function 'kotlinx.serialization.json.internal.JsonReader.requireTokenClass' call
      var tmp3_requireTokenClass = $this.g18_1;
      var tmp4_requireTokenClass = get_TC_COLON();
      if (!(tmp3_requireTokenClass.m18_1 === tmp4_requireTokenClass)) {
        var tmp$ret$1;
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeMapIndex.<anonymous>' call
        var tmp5__anonymous__kpxxpo = numberToChar(tmp3_requireTokenClass.m18_1);
        tmp$ret$1 = "Expected ':' after the key";
        tmp3_requireTokenClass.e1a(tmp$ret$1, tmp3_requireTokenClass.n18_1);
      }
      $this.g18_1.f1a();
    }
    var tmp;
    if (!$this.g18_1.g1a()) {
      // Inline function 'kotlinx.serialization.json.internal.JsonReader.require' call
      var tmp6_require = $this.g18_1;
      var tmp7_require = !(tokenClass === get_TC_COMMA());
      var tmp8_require = tmp6_require.l18_1;
      if (!tmp7_require) {
        var tmp$ret$2;
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeMapIndex.<anonymous>' call
        tmp$ret$2 = 'Unexpected trailing comma';
        tmp6_require.e1a(tmp$ret$2, tmp8_require);
      }
      Companion_getInstance_0();
      tmp = -1;
    } else {
      var tmp0_this = $this;
      tmp0_this.i18_1 = tmp0_this.i18_1 + 1 | 0;
      tmp = tmp0_this.i18_1;
    }
    return tmp;
  }
  function coerceInputValue($this, descriptor, index) {
    var elementDescriptor = descriptor.bs(index);
    if ($this.g18_1.m18_1 === get_TC_NULL() ? !elementDescriptor.ur() : false)
      return true;
    if (equals(elementDescriptor.wr(), ENUM_getInstance())) {
      var tmp0_elvis_lhs = $this.g18_1.l1a($this.j18_1.n17_1);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return false;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var enumValue = tmp;
      var enumIndex = elementDescriptor.as(enumValue);
      Companion_getInstance_0();
      if (enumIndex === -3)
        return true;
    }
    return false;
  }
  function decodeObjectIndex($this, tokenClass, descriptor) {
    if (tokenClass === get_TC_COMMA() ? !$this.g18_1.g1a() : false) {
      $this.g18_1.b1a('Unexpected trailing comma', 0, 2, null);
    }
    while ($this.g18_1.g1a()) {
      var tmp0_this = $this;
      tmp0_this.i18_1 = tmp0_this.i18_1 + 1 | 0;
      var key = $this.nt();
      // Inline function 'kotlinx.serialization.json.internal.JsonReader.requireTokenClass' call
      var tmp0_requireTokenClass = $this.g18_1;
      var tmp1_requireTokenClass = get_TC_COLON();
      if (!(tmp0_requireTokenClass.m18_1 === tmp1_requireTokenClass)) {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeObjectIndex.<anonymous>' call
        var tmp2__anonymous__z9zvc9 = numberToChar(tmp0_requireTokenClass.m18_1);
        tmp$ret$0 = "Expected ':'";
        tmp0_requireTokenClass.e1a(tmp$ret$0, tmp0_requireTokenClass.n18_1);
      }
      $this.g18_1.f1a();
      var index = descriptor.as(key);
      var tmp;
      Companion_getInstance_0();
      if (!(index === -3)) {
        var tmp_0;
        if ($this.j18_1.r17_1 ? coerceInputValue($this, descriptor, index) : false) {
          tmp_0 = false;
        } else {
          return index;
        }
        tmp = tmp_0;
      } else {
        tmp = true;
      }
      var isUnknown = tmp;
      if (isUnknown ? !$this.j18_1.m17_1 : false) {
        var tmp_1 = "Encountered an unknown key '" + key + "'.\n" + get_ignoreUnknownKeysHint();
        $this.g18_1.b1a(tmp_1, 0, 2, null);
      } else {
        $this.g18_1.n1a();
      }
      if ($this.g18_1.m18_1 === get_TC_COMMA()) {
        $this.g18_1.f1a();
        // Inline function 'kotlinx.serialization.json.internal.JsonReader.require' call
        var tmp3_require = $this.g18_1;
        var tmp4_require = $this.g18_1.g1a();
        var tmp5_require = $this.g18_1.l18_1;
        if (!tmp4_require) {
          var tmp$ret$1;
          // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeObjectIndex.<anonymous>' call
          tmp$ret$1 = 'Unexpected trailing comma';
          tmp3_require.e1a(tmp$ret$1, tmp5_require);
        }
      }
    }
    Companion_getInstance_0();
    return -1;
  }
  function decodeListIndex($this, tokenClass) {
    if (!(tokenClass === get_TC_COMMA()) ? !($this.i18_1 === -1) : false) {
      // Inline function 'kotlinx.serialization.json.internal.JsonReader.requireTokenClass' call
      var tmp0_requireTokenClass = $this.g18_1;
      var tmp1_requireTokenClass = get_TC_END_LIST();
      if (!(tmp0_requireTokenClass.m18_1 === tmp1_requireTokenClass)) {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeListIndex.<anonymous>' call
        var tmp2__anonymous__z9zvc9 = numberToChar(tmp0_requireTokenClass.m18_1);
        tmp$ret$0 = 'Expected end of the array or comma';
        tmp0_requireTokenClass.e1a(tmp$ret$0, tmp0_requireTokenClass.n18_1);
      }
    }
    var tmp;
    if (!$this.g18_1.g1a()) {
      // Inline function 'kotlinx.serialization.json.internal.JsonReader.require' call
      var tmp3_require = $this.g18_1;
      var tmp4_require = !(tokenClass === get_TC_COMMA());
      var tmp5_require = tmp3_require.l18_1;
      if (!tmp4_require) {
        var tmp$ret$1;
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeListIndex.<anonymous>' call
        tmp$ret$1 = 'Unexpected trailing comma';
        tmp3_require.e1a(tmp$ret$1, tmp5_require);
      }
      Companion_getInstance_0();
      tmp = -1;
    } else {
      var tmp0_this = $this;
      tmp0_this.i18_1 = tmp0_this.i18_1 + 1 | 0;
      tmp = tmp0_this.i18_1;
    }
    return tmp;
  }
  function StreamingJsonDecoder(json, mode, reader) {
    AbstractDecoder.call(this);
    this.e18_1 = json;
    this.f18_1 = mode;
    this.g18_1 = reader;
    this.h18_1 = this.s18().sr();
    this.i18_1 = -1;
    this.j18_1 = this.s18().h17_1;
  }
  StreamingJsonDecoder.prototype.s18 = function () {
    return this.e18_1;
  };
  StreamingJsonDecoder.prototype.sr = function () {
    return this.h18_1;
  };
  StreamingJsonDecoder.prototype.t18 = function () {
    return (new JsonParser(this.s18().h17_1, this.g18_1)).j1a();
  };
  StreamingJsonDecoder.prototype.qt = function (deserializer) {
    return decodeSerializableValuePolymorphic(this, deserializer);
  };
  StreamingJsonDecoder.prototype.rt = function (descriptor) {
    var newMode = switchMode(this.s18(), descriptor);
    if (!equals(new Char(newMode.t1a_1), new Char(get_INVALID()))) {
      // Inline function 'kotlinx.serialization.json.internal.JsonReader.requireTokenClass' call
      var tmp0_requireTokenClass = this.g18_1;
      var tmp1_requireTokenClass = newMode.v1a_1;
      if (!(tmp0_requireTokenClass.m18_1 === tmp1_requireTokenClass)) {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.beginStructure.<anonymous>' call
        var tmp2__anonymous__z9zvc9 = numberToChar(tmp0_requireTokenClass.m18_1);
        tmp$ret$0 = "Expected '" + new Char(newMode.t1a_1) + ', kind: ' + descriptor.wr() + "'";
        tmp0_requireTokenClass.e1a(tmp$ret$0, tmp0_requireTokenClass.n18_1);
      }
      this.g18_1.f1a();
    }
    var tmp0_subject = newMode;
    var tmp0 = tmp0_subject.d2_1;
    switch (tmp0) {
      case 1:
      case 2:
      case 3:
        return new StreamingJsonDecoder(this.s18(), newMode, this.g18_1);
      default:
        return this.f18_1.equals(newMode) ? this : new StreamingJsonDecoder(this.s18(), newMode, this.g18_1);
    }
  };
  StreamingJsonDecoder.prototype.st = function (descriptor) {
    if (!equals(new Char(this.f18_1.u1a_1), new Char(get_INVALID()))) {
      // Inline function 'kotlinx.serialization.json.internal.JsonReader.requireTokenClass' call
      var tmp0_requireTokenClass = this.g18_1;
      var tmp1_requireTokenClass = this.f18_1.w1a_1;
      if (!(tmp0_requireTokenClass.m18_1 === tmp1_requireTokenClass)) {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.endStructure.<anonymous>' call
        var tmp2__anonymous__z9zvc9 = numberToChar(tmp0_requireTokenClass.m18_1);
        tmp$ret$0 = "Expected '" + new Char(this.f18_1.u1a_1) + "'";
        tmp0_requireTokenClass.e1a(tmp$ret$0, tmp0_requireTokenClass.n18_1);
      }
      this.g18_1.f1a();
    }
  };
  StreamingJsonDecoder.prototype.dt = function () {
    return !(this.g18_1.m18_1 === get_TC_NULL());
  };
  StreamingJsonDecoder.prototype.et = function () {
    // Inline function 'kotlinx.serialization.json.internal.JsonReader.requireTokenClass' call
    var tmp0_requireTokenClass = this.g18_1;
    var tmp1_requireTokenClass = get_TC_NULL();
    if (!(tmp0_requireTokenClass.m18_1 === tmp1_requireTokenClass)) {
      var tmp$ret$0;
      // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeNull.<anonymous>' call
      var tmp2__anonymous__z9zvc9 = numberToChar(tmp0_requireTokenClass.m18_1);
      tmp$ret$0 = "Expected 'null' literal";
      tmp0_requireTokenClass.e1a(tmp$ret$0, tmp0_requireTokenClass.n18_1);
    }
    this.g18_1.f1a();
    return null;
  };
  StreamingJsonDecoder.prototype.fu = function (descriptor) {
    var tokenClass = this.g18_1.m18_1;
    if (tokenClass === get_TC_COMMA()) {
      // Inline function 'kotlinx.serialization.json.internal.JsonReader.require' call
      var tmp0_require = this.g18_1;
      var tmp1_require = !(this.i18_1 === -1);
      var tmp2_require = this.g18_1.l18_1;
      if (!tmp1_require) {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeElementIndex.<anonymous>' call
        tmp$ret$0 = 'Unexpected leading comma';
        tmp0_require.e1a(tmp$ret$0, tmp2_require);
      }
      this.g18_1.f1a();
    }
    var tmp0_subject = this.f18_1;
    var tmp0 = tmp0_subject.d2_1;
    var tmp;
    switch (tmp0) {
      case 1:
        tmp = decodeListIndex(this, tokenClass);
        break;
      case 2:
        tmp = decodeMapIndex(this, tokenClass);
        break;
      case 3:
        var tmp1_this = this;
        tmp1_this.i18_1 = tmp1_this.i18_1 + 1 | 0;
        var tmp2_subject = tmp1_this.i18_1;
        var tmp_0;
        switch (tmp2_subject) {
          case 0:
            tmp_0 = 0;
            break;
          case 1:
            tmp_0 = 1;
            break;
          default:
            Companion_getInstance_0();
            tmp_0 = -1;
            break;
        }

        tmp = tmp_0;
        break;
      default:
        tmp = decodeObjectIndex(this, tokenClass, descriptor);
        break;
    }
    return tmp;
  };
  StreamingJsonDecoder.prototype.ft = function () {
    var tmp;
    if (this.j18_1.n17_1) {
      tmp = this.g18_1.i1a();
    } else {
      tmp = this.g18_1.m1a();
    }
    var string = tmp;
    var tmp0_safe_receiver = toBooleanStrictOrNull(string);
    if (tmp0_safe_receiver == null)
      null;
    else {
      var tmp$ret$0;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return tmp0_safe_receiver;
    }
    var tmp_0 = "Failed to parse type 'boolean' for input '" + string + "'";
    this.g18_1.b1a(tmp_0, 0, 2, null);
  };
  StreamingJsonDecoder.prototype.gt = function () {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var tmp0_parseString = this.g18_1;
      var input = tmp0_parseString.i1a();
      try {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeByte.<anonymous>' call
        tmp$ret$0 = toByte(input);
        tmp$ret$1 = tmp$ret$0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'byte' for input '" + input + "'";
          tmp0_parseString.b1a(tmp, 0, 2, null);
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  StreamingJsonDecoder.prototype.ht = function () {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var tmp0_parseString = this.g18_1;
      var input = tmp0_parseString.i1a();
      try {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeShort.<anonymous>' call
        tmp$ret$0 = toShort(input);
        tmp$ret$1 = tmp$ret$0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'short' for input '" + input + "'";
          tmp0_parseString.b1a(tmp, 0, 2, null);
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  StreamingJsonDecoder.prototype.it = function () {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var tmp0_parseString = this.g18_1;
      var input = tmp0_parseString.i1a();
      try {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeInt.<anonymous>' call
        tmp$ret$0 = toInt(input);
        tmp$ret$1 = tmp$ret$0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'int' for input '" + input + "'";
          tmp0_parseString.b1a(tmp, 0, 2, null);
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  StreamingJsonDecoder.prototype.jt = function () {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var tmp0_parseString = this.g18_1;
      var input = tmp0_parseString.i1a();
      try {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeLong.<anonymous>' call
        tmp$ret$0 = toLong(input);
        tmp$ret$1 = tmp$ret$0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'long' for input '" + input + "'";
          tmp0_parseString.b1a(tmp, 0, 2, null);
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  StreamingJsonDecoder.prototype.kt = function () {
    var tmp$ret$4;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var tmp0_parseString = this.g18_1;
      var input = tmp0_parseString.i1a();
      try {
        var tmp$ret$3;
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeFloat.<anonymous>' call
        var tmp$ret$2;
        // Inline function 'kotlin.text.toFloat' call
        var tmp$ret$1;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp0_unsafeCast = toDouble(input);
        var tmp$ret$0;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$0 = tmp0_unsafeCast;
        tmp$ret$1 = tmp$ret$0;
        tmp$ret$2 = tmp$ret$1;
        tmp$ret$3 = tmp$ret$2;
        tmp$ret$4 = tmp$ret$3;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'float' for input '" + input + "'";
          tmp0_parseString.b1a(tmp, 0, 2, null);
        } else {
          throw $p;
        }
      }
    }
    var result = tmp$ret$4;
    var specialFp = this.s18().h17_1.u17_1;
    if (specialFp ? true : isFinite(result))
      return result;
    throwInvalidFloatingPointDecoded(this.g18_1, result);
  };
  StreamingJsonDecoder.prototype.lt = function () {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var tmp0_parseString = this.g18_1;
      var input = tmp0_parseString.i1a();
      try {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeDouble.<anonymous>' call
        tmp$ret$0 = toDouble(input);
        tmp$ret$1 = tmp$ret$0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'double' for input '" + input + "'";
          tmp0_parseString.b1a(tmp, 0, 2, null);
        } else {
          throw $p;
        }
      }
    }
    var result = tmp$ret$1;
    var specialFp = this.s18().h17_1.u17_1;
    if (specialFp ? true : isFinite_0(result))
      return result;
    throwInvalidFloatingPointDecoded(this.g18_1, result);
  };
  StreamingJsonDecoder.prototype.mt = function () {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var tmp0_parseString = this.g18_1;
      var input = tmp0_parseString.i1a();
      try {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeChar.<anonymous>' call
        tmp$ret$0 = single(input);
        tmp$ret$1 = tmp$ret$0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'char' for input '" + input + "'";
          tmp0_parseString.b1a(tmp, 0, 2, null);
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  StreamingJsonDecoder.prototype.nt = function () {
    var tmp;
    if (this.j18_1.n17_1) {
      tmp = this.g18_1.i1a();
    } else {
      tmp = this.g18_1.h1a();
    }
    return tmp;
  };
  StreamingJsonDecoder.prototype.ot = function (inlineDescriptor) {
    return get_isUnsignedNumber(inlineDescriptor) ? new JsonDecoderForUnsignedTypes(this.g18_1, this.s18()) : this;
  };
  StreamingJsonDecoder.$metadata$ = classMeta('StreamingJsonDecoder', [JsonDecoder], undefined, undefined, undefined, AbstractDecoder.prototype);
  function parseString(_this__u8e3s4, expectedType, block) {
    var input = _this__u8e3s4.i1a();
    try {
      return block(input);
    } catch ($p) {
      if ($p instanceof IllegalArgumentException) {
        var tmp = "Failed to parse type '" + expectedType + "' for input '" + input + "'";
        _this__u8e3s4.b1a(tmp, 0, 2, null);
      } else {
        throw $p;
      }
    }
  }
  function JsonDecoderForUnsignedTypes(reader, json) {
    AbstractDecoder.call(this);
    this.x1a_1 = reader;
    this.y1a_1 = json.sr();
  }
  JsonDecoderForUnsignedTypes.prototype.sr = function () {
    return this.y1a_1;
  };
  JsonDecoderForUnsignedTypes.prototype.fu = function (descriptor) {
    // Inline function 'kotlin.error' call
    throw IllegalStateException_init_$Create$('unsupported');
  };
  JsonDecoderForUnsignedTypes.prototype.it = function () {
    var tmp$ret$2;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var tmp0_parseString = this.x1a_1;
      var input = tmp0_parseString.i1a();
      try {
        var tmp$ret$1;
        // Inline function 'kotlinx.serialization.json.internal.JsonDecoderForUnsignedTypes.decodeInt.<anonymous>' call
        var tmp$ret$0;
        // Inline function 'kotlin.UInt.toInt' call
        var tmp0_toInt = toUInt(input);
        tmp$ret$0 = _UInt___get_data__impl__f0vqqw(tmp0_toInt);
        tmp$ret$1 = tmp$ret$0;
        tmp$ret$2 = tmp$ret$1;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'UInt' for input '" + input + "'";
          tmp0_parseString.b1a(tmp, 0, 2, null);
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$2;
  };
  JsonDecoderForUnsignedTypes.prototype.jt = function () {
    var tmp$ret$2;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var tmp0_parseString = this.x1a_1;
      var input = tmp0_parseString.i1a();
      try {
        var tmp$ret$1;
        // Inline function 'kotlinx.serialization.json.internal.JsonDecoderForUnsignedTypes.decodeLong.<anonymous>' call
        var tmp$ret$0;
        // Inline function 'kotlin.ULong.toLong' call
        var tmp0_toLong = toULong(input);
        tmp$ret$0 = _ULong___get_data__impl__fggpzb(tmp0_toLong);
        tmp$ret$1 = tmp$ret$0;
        tmp$ret$2 = tmp$ret$1;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'ULong' for input '" + input + "'";
          tmp0_parseString.b1a(tmp, 0, 2, null);
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$2;
  };
  JsonDecoderForUnsignedTypes.prototype.gt = function () {
    var tmp$ret$2;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var tmp0_parseString = this.x1a_1;
      var input = tmp0_parseString.i1a();
      try {
        var tmp$ret$1;
        // Inline function 'kotlinx.serialization.json.internal.JsonDecoderForUnsignedTypes.decodeByte.<anonymous>' call
        var tmp$ret$0;
        // Inline function 'kotlin.UByte.toByte' call
        var tmp0_toByte = toUByte(input);
        tmp$ret$0 = _UByte___get_data__impl__jof9qr(tmp0_toByte);
        tmp$ret$1 = tmp$ret$0;
        tmp$ret$2 = tmp$ret$1;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'UByte' for input '" + input + "'";
          tmp0_parseString.b1a(tmp, 0, 2, null);
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$2;
  };
  JsonDecoderForUnsignedTypes.prototype.ht = function () {
    var tmp$ret$2;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var tmp0_parseString = this.x1a_1;
      var input = tmp0_parseString.i1a();
      try {
        var tmp$ret$1;
        // Inline function 'kotlinx.serialization.json.internal.JsonDecoderForUnsignedTypes.decodeShort.<anonymous>' call
        var tmp$ret$0;
        // Inline function 'kotlin.UShort.toShort' call
        var tmp0_toShort = toUShort(input);
        tmp$ret$0 = _UShort___get_data__impl__g0245(tmp0_toShort);
        tmp$ret$1 = tmp$ret$0;
        tmp$ret$2 = tmp$ret$1;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          var tmp = "Failed to parse type 'UShort' for input '" + input + "'";
          tmp0_parseString.b1a(tmp, 0, 2, null);
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$2;
  };
  JsonDecoderForUnsignedTypes.$metadata$ = classMeta('JsonDecoderForUnsignedTypes', undefined, undefined, undefined, undefined, AbstractDecoder.prototype);
  function get_unsignedNumberDescriptors() {
    init_properties_StreamingJsonEncoder_kt_qkpchk();
    return unsignedNumberDescriptors;
  }
  var unsignedNumberDescriptors;
  function StreamingJsonEncoder_init_$Init$(output, json, mode, modeReuseCache, $this) {
    StreamingJsonEncoder.call($this, new Composer(output, json), json, mode, modeReuseCache);
    return $this;
  }
  function StreamingJsonEncoder_init_$Create$(output, json, mode, modeReuseCache) {
    return StreamingJsonEncoder_init_$Init$(output, json, mode, modeReuseCache, Object.create(StreamingJsonEncoder.prototype));
  }
  function encodeTypeInfo($this, descriptor) {
    $this.w17_1.d1b();
    $this.su($this.b18_1.t17_1);
    $this.w17_1.e1b(get_COLON());
    $this.w17_1.f1b();
    $this.su(descriptor.vr());
  }
  function Composer(sb, json) {
    this.z1a_1 = sb;
    this.a1b_1 = json;
    this.b1b_1 = 0;
    this.c1b_1 = true;
  }
  Composer.prototype.s18 = function () {
    return this.a1b_1;
  };
  Composer.prototype.g1b = function () {
    this.c1b_1 = true;
    var tmp0_this = this;
    var tmp1 = tmp0_this.b1b_1;
    tmp0_this.b1b_1 = tmp1 + 1 | 0;
  };
  Composer.prototype.h1b = function () {
    var tmp0_this = this;
    var tmp1 = tmp0_this.b1b_1;
    tmp0_this.b1b_1 = tmp1 - 1 | 0;
  };
  Composer.prototype.d1b = function () {
    this.c1b_1 = false;
    if (this.a1b_1.h17_1.p17_1) {
      this.i1b('\n');
      // Inline function 'kotlin.repeat' call
      var tmp0_repeat = this.b1b_1;
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      if (inductionVariable < tmp0_repeat)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'kotlinx.serialization.json.internal.Composer.nextItem.<anonymous>' call
          this.i1b(this.a1b_1.h17_1.q17_1);
        }
         while (inductionVariable < tmp0_repeat);
    }
  };
  Composer.prototype.f1b = function () {
    if (this.a1b_1.h17_1.p17_1) {
      this.e1b(_Char___init__impl__6a9atx(32));
    }
  };
  Composer.prototype.e1b = function (v) {
    return this.z1a_1.x5(v);
  };
  Composer.prototype.i1b = function (v) {
    return this.z1a_1.df(v);
  };
  Composer.prototype.j1b = function (v) {
    return this.z1a_1.bf(v);
  };
  Composer.prototype.k1b = function (v) {
    return this.z1a_1.bf(v);
  };
  Composer.prototype.l1b = function (v) {
    return this.z1a_1.bf(v);
  };
  Composer.prototype.m1b = function (v) {
    return this.z1a_1.bf(v);
  };
  Composer.prototype.n1b = function (v) {
    return this.z1a_1.bf(v);
  };
  Composer.prototype.o1b = function (v) {
    return this.z1a_1.bf(v);
  };
  Composer.prototype.p1b = function (v) {
    return this.z1a_1.cf(v);
  };
  Composer.prototype.q1b = function (value) {
    return printQuoted(this.z1a_1, value);
  };
  Composer.$metadata$ = classMeta('Composer');
  function ComposerForUnsignedNumbers(sb, json) {
    Composer.call(this, sb, json);
  }
  ComposerForUnsignedNumbers.prototype.n1b = function (v) {
    var tmp$ret$0;
    // Inline function 'kotlin.toUInt' call
    tmp$ret$0 = _UInt___init__impl__l7qpdl(v);
    return Composer.prototype.i1b.call(this, UInt__toString_impl_dbgl21(tmp$ret$0));
  };
  ComposerForUnsignedNumbers.prototype.o1b = function (v) {
    var tmp$ret$0;
    // Inline function 'kotlin.toULong' call
    tmp$ret$0 = _ULong___init__impl__c78o9k(v);
    return Composer.prototype.i1b.call(this, ULong__toString_impl_f9au7k(tmp$ret$0));
  };
  ComposerForUnsignedNumbers.prototype.l1b = function (v) {
    var tmp$ret$0;
    // Inline function 'kotlin.toUByte' call
    tmp$ret$0 = _UByte___init__impl__g9hnc4(v);
    return Composer.prototype.i1b.call(this, UByte__toString_impl_v72jg(tmp$ret$0));
  };
  ComposerForUnsignedNumbers.prototype.m1b = function (v) {
    var tmp$ret$0;
    // Inline function 'kotlin.toUShort' call
    tmp$ret$0 = _UShort___init__impl__jigrne(v);
    return Composer.prototype.i1b.call(this, UShort__toString_impl_edaoee(tmp$ret$0));
  };
  ComposerForUnsignedNumbers.$metadata$ = classMeta('ComposerForUnsignedNumbers', undefined, undefined, undefined, undefined, Composer.prototype);
  function StreamingJsonEncoder(composer, json, mode, modeReuseCache) {
    AbstractEncoder.call(this);
    this.w17_1 = composer;
    this.x17_1 = json;
    this.y17_1 = mode;
    this.z17_1 = modeReuseCache;
    this.a18_1 = this.x17_1.sr();
    this.b18_1 = this.x17_1.h17_1;
    this.c18_1 = false;
    this.d18_1 = false;
    var i = this.y17_1.d2_1;
    if (!(this.z17_1 == null)) {
      if (!(this.z17_1[i] === null) ? true : !(this.z17_1[i] === this)) {
        this.z17_1[i] = this;
      }
    }
  }
  StreamingJsonEncoder.prototype.s18 = function () {
    return this.x17_1;
  };
  StreamingJsonEncoder.prototype.sr = function () {
    return this.a18_1;
  };
  StreamingJsonEncoder.prototype.w19 = function (element) {
    this.ev(JsonElementSerializer_getInstance(), element);
  };
  StreamingJsonEncoder.prototype.ev = function (serializer, value) {
    var tmp$ret$0;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.encodePolymorphically' call
      var tmp;
      if (!(serializer instanceof AbstractPolymorphicSerializer)) {
        tmp = true;
      } else {
        tmp = this.s18().h17_1.s17_1;
      }
      if (tmp) {
        serializer.nr(this, value);
        tmp$ret$0 = Unit_getInstance();
        break $l$block;
      }
      var tmp_0 = isInterface(serializer, SerializationStrategy) ? serializer : THROW_CCE();
      var actualSerializer = findActualSerializer$accessor$1ad0flx(this, tmp_0, isObject(value) ? value : THROW_CCE());
      // Inline function 'kotlinx.serialization.json.internal.StreamingJsonEncoder.encodeSerializableValue.<anonymous>' call
      this.d18_1 = true;
      actualSerializer.nr(this, value);
    }
  };
  StreamingJsonEncoder.prototype.rt = function (descriptor) {
    var newMode = switchMode(this.x17_1, descriptor);
    if (!equals(new Char(newMode.t1a_1), new Char(get_INVALID()))) {
      this.w17_1.e1b(newMode.t1a_1);
      this.w17_1.g1b();
    }
    if (this.d18_1) {
      this.d18_1 = false;
      encodeTypeInfo(this, descriptor);
    }
    if (this.y17_1.equals(newMode)) {
      return this;
    }
    var tmp0_safe_receiver = this.z17_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver[newMode.d2_1];
    return tmp1_elvis_lhs == null ? new StreamingJsonEncoder(this.w17_1, this.x17_1, newMode, this.z17_1) : tmp1_elvis_lhs;
  };
  StreamingJsonEncoder.prototype.st = function (descriptor) {
    if (!equals(new Char(this.y17_1.u1a_1), new Char(get_INVALID()))) {
      this.w17_1.h1b();
      this.w17_1.d1b();
      this.w17_1.e1b(this.y17_1.u1a_1);
    }
  };
  StreamingJsonEncoder.prototype.hu = function (descriptor, index) {
    var tmp0_subject = this.y17_1;
    var tmp0 = tmp0_subject.d2_1;
    switch (tmp0) {
      case 1:
        if (!this.w17_1.c1b_1) {
          this.w17_1.e1b(get_COMMA());
        }

        this.w17_1.d1b();
        ;
        break;
      case 2:
        if (!this.w17_1.c1b_1) {
          var tmp = this;
          var tmp_0;
          if ((index % 2 | 0) === 0) {
            this.w17_1.e1b(get_COMMA());
            this.w17_1.d1b();
            tmp_0 = true;
          } else {
            this.w17_1.e1b(get_COLON());
            this.w17_1.f1b();
            tmp_0 = false;
          }
          tmp.c18_1 = tmp_0;
        } else {
          this.c18_1 = true;
          this.w17_1.d1b();
        }

        break;
      case 3:
        if (index === 0)
          this.c18_1 = true;
        if (index === 1) {
          this.w17_1.e1b(get_COMMA());
          this.w17_1.f1b();
          this.c18_1 = false;
        }

        break;
      default:
        if (!this.w17_1.c1b_1) {
          this.w17_1.e1b(get_COMMA());
        }

        this.w17_1.d1b();
        this.su(descriptor.zr(index));
        this.w17_1.e1b(get_COLON());
        ;
        this.w17_1.f1b();
        ;
        break;
    }
    return true;
  };
  StreamingJsonEncoder.prototype.tu = function (inlineDescriptor) {
    return get_isUnsignedNumber(inlineDescriptor) ? new StreamingJsonEncoder(new ComposerForUnsignedNumbers(this.w17_1.z1a_1, this.w17_1.a1b_1), this.x17_1, this.y17_1, null) : this;
  };
  StreamingJsonEncoder.prototype.ju = function () {
    this.w17_1.i1b(get_NULL());
  };
  StreamingJsonEncoder.prototype.ku = function (value) {
    if (this.c18_1) {
      this.su(value.toString());
    } else {
      this.w17_1.p1b(value);
    }
  };
  StreamingJsonEncoder.prototype.lu = function (value) {
    if (this.c18_1) {
      this.su(value.toString());
    } else {
      this.w17_1.l1b(value);
    }
  };
  StreamingJsonEncoder.prototype.mu = function (value) {
    if (this.c18_1) {
      this.su(value.toString());
    } else {
      this.w17_1.m1b(value);
    }
  };
  StreamingJsonEncoder.prototype.nu = function (value) {
    if (this.c18_1) {
      this.su(value.toString());
    } else {
      this.w17_1.n1b(value);
    }
  };
  StreamingJsonEncoder.prototype.ou = function (value) {
    if (this.c18_1) {
      this.su(value.toString());
    } else {
      this.w17_1.o1b(value);
    }
  };
  StreamingJsonEncoder.prototype.pu = function (value) {
    if (this.c18_1) {
      this.su(value.toString());
    } else {
      this.w17_1.j1b(value);
    }
    if (!this.b18_1.u17_1 ? !isFinite(value) : false) {
      throw InvalidFloatingPointEncoded(value, this.w17_1.z1a_1.toString());
    }
  };
  StreamingJsonEncoder.prototype.qu = function (value) {
    if (this.c18_1) {
      this.su(value.toString());
    } else {
      this.w17_1.k1b(value);
    }
    if (!this.b18_1.u17_1 ? !isFinite_0(value) : false) {
      throw InvalidFloatingPointEncoded(value, this.w17_1.z1a_1.toString());
    }
  };
  StreamingJsonEncoder.prototype.ru = function (value) {
    this.su(toString_0(value));
  };
  StreamingJsonEncoder.prototype.su = function (value) {
    return this.w17_1.q1b(value);
  };
  StreamingJsonEncoder.$metadata$ = classMeta('StreamingJsonEncoder', [JsonEncoder], undefined, undefined, undefined, AbstractEncoder.prototype);
  function get_isUnsignedNumber(_this__u8e3s4) {
    init_properties_StreamingJsonEncoder_kt_qkpchk();
    return _this__u8e3s4.xr() ? get_unsignedNumberDescriptors().x1(_this__u8e3s4) : false;
  }
  var properties_initialized_StreamingJsonEncoder_kt_6ifwwk;
  function init_properties_StreamingJsonEncoder_kt_qkpchk() {
    if (properties_initialized_StreamingJsonEncoder_kt_6ifwwk) {
    } else {
      properties_initialized_StreamingJsonEncoder_kt_6ifwwk = true;
      unsignedNumberDescriptors = setOf([serializer_2(Companion_getInstance_1()).mr(), serializer_1(Companion_getInstance()).mr(), serializer_3(Companion_getInstance_2()).mr(), serializer_4(Companion_getInstance_3()).mr()]);
    }
  }
  function get_ESCAPE_CHARS() {
    init_properties_StringOps_kt_g67jhv();
    return ESCAPE_CHARS;
  }
  var ESCAPE_CHARS;
  function toHexChar(i) {
    init_properties_StringOps_kt_g67jhv();
    var d = i & 15;
    return d < 10 ? numberToChar(d + 48 | 0) : numberToChar((d - 10 | 0) + 97 | 0);
  }
  function printQuoted(_this__u8e3s4, value) {
    init_properties_StringOps_kt_g67jhv();
    _this__u8e3s4.x5(get_STRING());
    var lastPos = 0;
    var length = value.length;
    var inductionVariable = 0;
    if (inductionVariable < length)
      $l$loop_0: do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var c = Char__toInt_impl_vasixd(charSequenceGet(value, i));
        if (c >= get_ESCAPE_CHARS().length)
          continue $l$loop_0;
        var tmp1_elvis_lhs = get_ESCAPE_CHARS()[c];
        var tmp;
        if (tmp1_elvis_lhs == null) {
          continue $l$loop_0;
        } else {
          tmp = tmp1_elvis_lhs;
        }
        var esc = tmp;
        _this__u8e3s4.ze(value, lastPos, i);
        _this__u8e3s4.df(esc);
        lastPos = i + 1 | 0;
      }
       while (inductionVariable < length);
    _this__u8e3s4.ze(value, lastPos, length);
    _this__u8e3s4.x5(get_STRING());
  }
  function toBooleanStrictOrNull(_this__u8e3s4) {
    init_properties_StringOps_kt_g67jhv();
    return equals_0(_this__u8e3s4, 'true', true) ? true : equals_0(_this__u8e3s4, 'false', true) ? false : null;
  }
  var properties_initialized_StringOps_kt_wzaea7;
  function init_properties_StringOps_kt_g67jhv() {
    if (properties_initialized_StringOps_kt_wzaea7) {
    } else {
      properties_initialized_StringOps_kt_wzaea7 = true;
      var tmp$ret$1;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'kotlin.arrayOfNulls' call
      tmp$ret$0 = fillArrayVal(Array(128), null);
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlinx.serialization.json.internal.ESCAPE_CHARS.<anonymous>' call
      var inductionVariable = 0;
      if (inductionVariable <= 31)
        do {
          var c = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var c1 = toHexChar(c >> 12);
          var c2 = toHexChar(c >> 8);
          var c3 = toHexChar(c >> 4);
          var c4 = toHexChar(c);
          tmp0_apply[c] = '\\u' + new Char(c1) + new Char(c2) + new Char(c3) + new Char(c4);
        }
         while (inductionVariable <= 31);
      tmp0_apply[34] = '\\"';
      tmp0_apply[92] = '\\\\';
      tmp0_apply[9] = '\\t';
      tmp0_apply[8] = '\\b';
      tmp0_apply[10] = '\\n';
      tmp0_apply[13] = '\\r';
      tmp0_apply[12] = '\\f';
      tmp$ret$1 = tmp0_apply;
      ESCAPE_CHARS = tmp$ret$1;
    }
  }
  function readJson(_this__u8e3s4, element, deserializer) {
    var tmp0_subject = element;
    var tmp;
    if (tmp0_subject instanceof JsonObject) {
      tmp = JsonTreeDecoder_init_$Create$(_this__u8e3s4, element, null, null, 12, null);
    } else {
      if (tmp0_subject instanceof JsonArray) {
        tmp = new JsonTreeListDecoder(_this__u8e3s4, element);
      } else {
        var tmp_0;
        if (tmp0_subject instanceof JsonLiteral) {
          tmp_0 = true;
        } else {
          tmp_0 = equals(tmp0_subject, JsonNull_getInstance());
        }
        if (tmp_0) {
          tmp = new JsonPrimitiveDecoder(_this__u8e3s4, element instanceof JsonPrimitive ? element : THROW_CCE());
        } else {
          noWhenBranchMatchedException();
        }
      }
    }
    var input = tmp;
    return input.qt(deserializer);
  }
  function currentObject($this) {
    var tmp0_safe_receiver = $this.x14();
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      var tmp$ret$1;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      var tmp$ret$0;
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.currentObject.<anonymous>' call
      tmp$ret$0 = $this.a1c(tmp0_safe_receiver);
      tmp$ret$1 = tmp$ret$0;
      tmp = tmp$ret$1;
    }
    var tmp1_elvis_lhs = tmp;
    return tmp1_elvis_lhs == null ? $this.f1() : tmp1_elvis_lhs;
  }
  function unparsedPrimitive($this, primitive) {
    throw JsonDecodingException_0(-1, "Failed to parse '" + primitive + "'", toString(currentObject($this)));
  }
  function AbstractJsonTreeDecoder(json, value) {
    NamedValueDecoder.call(this);
    this.x1b_1 = json;
    this.y1b_1 = value;
    this.z1b_1 = this.s18().h17_1;
  }
  AbstractJsonTreeDecoder.prototype.s18 = function () {
    return this.x1b_1;
  };
  AbstractJsonTreeDecoder.prototype.f1 = function () {
    return this.y1b_1;
  };
  AbstractJsonTreeDecoder.prototype.sr = function () {
    return this.s18().sr();
  };
  AbstractJsonTreeDecoder.prototype.t18 = function () {
    return currentObject(this);
  };
  AbstractJsonTreeDecoder.prototype.qt = function (deserializer) {
    return decodeSerializableValuePolymorphic(this, deserializer);
  };
  AbstractJsonTreeDecoder.prototype.y14 = function (parentName, childName) {
    return childName;
  };
  AbstractJsonTreeDecoder.prototype.rt = function (descriptor) {
    var currentObject_0 = currentObject(this);
    var tmp0_subject = descriptor.wr();
    var tmp;
    var tmp_0;
    if (equals(tmp0_subject, LIST_getInstance())) {
      tmp_0 = true;
    } else {
      tmp_0 = tmp0_subject instanceof PolymorphicKind;
    }
    if (tmp_0) {
      var tmp_1 = this.s18();
      var tmp$ret$0;
      // Inline function 'kotlinx.serialization.json.internal.cast' call
      if (!(currentObject_0 instanceof JsonArray)) {
        throw JsonDecodingException_1(-1, 'Expected ' + getKClass(JsonArray) + ' as the serialized body of ' + descriptor.vr() + ', but had ' + getKClassFromExpression(currentObject_0));
      }
      tmp$ret$0 = currentObject_0;
      tmp = new JsonTreeListDecoder(tmp_1, tmp$ret$0);
    } else {
      if (equals(tmp0_subject, MAP_getInstance())) {
        var tmp$ret$5;
        // Inline function 'kotlinx.serialization.json.internal.selectMapMode' call
        var tmp0_selectMapMode = this.s18();
        var keyDescriptor = descriptor.bs(0);
        var keyKind = keyDescriptor.wr();
        var tmp_2;
        var tmp_3;
        if (keyKind instanceof PrimitiveKind) {
          tmp_3 = true;
        } else {
          tmp_3 = equals(keyKind, ENUM_getInstance());
        }
        if (tmp_3) {
          var tmp$ret$2;
          // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.beginStructure.<anonymous>' call
          var tmp_4 = this.s18();
          var tmp$ret$1;
          // Inline function 'kotlinx.serialization.json.internal.cast' call
          if (!(currentObject_0 instanceof JsonObject)) {
            throw JsonDecodingException_1(-1, 'Expected ' + getKClass(JsonObject) + ' as the serialized body of ' + descriptor.vr() + ', but had ' + getKClassFromExpression(currentObject_0));
          }
          tmp$ret$1 = currentObject_0;
          tmp$ret$2 = new JsonTreeMapDecoder(tmp_4, tmp$ret$1);
          tmp_2 = tmp$ret$2;
        } else {
          if (tmp0_selectMapMode.h17_1.o17_1) {
            var tmp$ret$4;
            // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.beginStructure.<anonymous>' call
            var tmp_5 = this.s18();
            var tmp$ret$3;
            // Inline function 'kotlinx.serialization.json.internal.cast' call
            if (!(currentObject_0 instanceof JsonArray)) {
              throw JsonDecodingException_1(-1, 'Expected ' + getKClass(JsonArray) + ' as the serialized body of ' + descriptor.vr() + ', but had ' + getKClassFromExpression(currentObject_0));
            }
            tmp$ret$3 = currentObject_0;
            tmp$ret$4 = new JsonTreeListDecoder(tmp_5, tmp$ret$3);
            tmp_2 = tmp$ret$4;
          } else {
            throw InvalidKeyKindException(keyDescriptor);
          }
        }
        tmp$ret$5 = tmp_2;
        tmp = tmp$ret$5;
      } else {
        var tmp_6 = this.s18();
        var tmp$ret$6;
        // Inline function 'kotlinx.serialization.json.internal.cast' call
        if (!(currentObject_0 instanceof JsonObject)) {
          throw JsonDecodingException_1(-1, 'Expected ' + getKClass(JsonObject) + ' as the serialized body of ' + descriptor.vr() + ', but had ' + getKClassFromExpression(currentObject_0));
        }
        tmp$ret$6 = currentObject_0;
        var tmp_7 = tmp$ret$6;
        tmp = JsonTreeDecoder_init_$Create$(tmp_6, tmp_7, null, null, 12, null);
      }
    }
    return tmp;
  };
  AbstractJsonTreeDecoder.prototype.st = function (descriptor) {
  };
  AbstractJsonTreeDecoder.prototype.dt = function () {
    var tmp = currentObject(this);
    return !(tmp instanceof JsonNull);
  };
  AbstractJsonTreeDecoder.prototype.b1c = function (tag) {
    var currentElement = this.a1c(tag);
    var tmp0_elvis_lhs = currentElement instanceof JsonPrimitive ? currentElement : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw JsonDecodingException_0(-1, 'Expected JsonPrimitive at ' + tag + ', found ' + currentElement, toString(currentObject(this)));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  AbstractJsonTreeDecoder.prototype.c1c = function (tag) {
    return !(this.a1c(tag) === JsonNull_getInstance());
  };
  AbstractJsonTreeDecoder.prototype.t15 = function (tag) {
    return this.c1c((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.d1c = function (tag) {
    var value = this.b1c(tag);
    if (!this.s18().h17_1.n17_1) {
      var literal = value instanceof JsonLiteral ? value : THROW_CCE();
      if (literal.d19_1)
        throw JsonDecodingException_0(-1, "Boolean literal for key '" + tag + "' should be unquoted.\n" + get_lenientHint(), toString(currentObject(this)));
    }
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
      try {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedBoolean.<anonymous>' call
        var tmp0_elvis_lhs = get_booleanOrNull(value);
        var tmp;
        if (tmp0_elvis_lhs == null) {
          throw IllegalArgumentException_init_$Create$_0();
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$0 = tmp;
        var tmp0_elvis_lhs_0 = tmp$ret$0;
        var tmp_0;
        if (tmp0_elvis_lhs_0 == null) {
          unparsedPrimitive(this, 'boolean');
        } else {
          tmp_0 = tmp0_elvis_lhs_0;
        }
        tmp$ret$1 = tmp_0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'boolean');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  AbstractJsonTreeDecoder.prototype.u15 = function (tag) {
    return this.d1c((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.e1c = function (tag) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
      var tmp0_primitive = this.b1c(tag);
      try {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedByte.<anonymous>' call
        var result = get_int(tmp0_primitive);
        var tmp;
        var containsLower = ByteCompanionObject_getInstance().g6_1;
        if (result <= ByteCompanionObject_getInstance().h6_1 ? containsLower <= result : false) {
          tmp = toByte_0(result);
        } else {
          tmp = null;
        }
        tmp$ret$0 = tmp;
        var tmp0_elvis_lhs = tmp$ret$0;
        var tmp_0;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'byte');
        } else {
          tmp_0 = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp_0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'byte');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  AbstractJsonTreeDecoder.prototype.v15 = function (tag) {
    return this.e1c((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.f1c = function (tag) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
      var tmp0_primitive = this.b1c(tag);
      try {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedShort.<anonymous>' call
        var result = get_int(tmp0_primitive);
        var tmp;
        var containsLower = ShortCompanionObject_getInstance().k6_1;
        if (result <= ShortCompanionObject_getInstance().l6_1 ? containsLower <= result : false) {
          tmp = toShort_0(result);
        } else {
          tmp = null;
        }
        tmp$ret$0 = tmp;
        var tmp0_elvis_lhs = tmp$ret$0;
        var tmp_0;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'short');
        } else {
          tmp_0 = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp_0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'short');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  AbstractJsonTreeDecoder.prototype.w15 = function (tag) {
    return this.f1c((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.g1c = function (tag) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
      var tmp0_primitive = this.b1c(tag);
      try {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedInt.<anonymous>' call
        tmp$ret$0 = get_int(tmp0_primitive);
        var tmp0_elvis_lhs = tmp$ret$0;
        var tmp;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'int');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'int');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  AbstractJsonTreeDecoder.prototype.x15 = function (tag) {
    return this.g1c((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.h1c = function (tag) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
      var tmp0_primitive = this.b1c(tag);
      try {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedLong.<anonymous>' call
        tmp$ret$0 = get_long(tmp0_primitive);
        var tmp0_elvis_lhs = tmp$ret$0;
        var tmp;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'long');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'long');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  AbstractJsonTreeDecoder.prototype.y15 = function (tag) {
    return this.h1c((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.i1c = function (tag) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
      var tmp0_primitive = this.b1c(tag);
      try {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedFloat.<anonymous>' call
        tmp$ret$0 = get_float(tmp0_primitive);
        var tmp0_elvis_lhs = tmp$ret$0;
        var tmp;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'float');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'float');
        } else {
          throw $p;
        }
      }
    }
    var result = tmp$ret$1;
    var specialFp = this.s18().h17_1.u17_1;
    if (specialFp ? true : isFinite(result))
      return result;
    throw InvalidFloatingPointDecoded(result, tag, toString(currentObject(this)));
  };
  AbstractJsonTreeDecoder.prototype.z15 = function (tag) {
    return this.i1c((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.j1c = function (tag) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
      var tmp0_primitive = this.b1c(tag);
      try {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedDouble.<anonymous>' call
        tmp$ret$0 = get_double(tmp0_primitive);
        var tmp0_elvis_lhs = tmp$ret$0;
        var tmp;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'double');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'double');
        } else {
          throw $p;
        }
      }
    }
    var result = tmp$ret$1;
    var specialFp = this.s18().h17_1.u17_1;
    if (specialFp ? true : isFinite_0(result))
      return result;
    throw InvalidFloatingPointDecoded(result, tag, toString(currentObject(this)));
  };
  AbstractJsonTreeDecoder.prototype.a16 = function (tag) {
    return this.j1c((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.k1c = function (tag) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
      var tmp0_primitive = this.b1c(tag);
      try {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedChar.<anonymous>' call
        tmp$ret$0 = single(tmp0_primitive.c19());
        var tmp0_elvis_lhs = tmp$ret$0;
        var tmp;
        var tmp_0 = tmp0_elvis_lhs;
        if ((tmp_0 == null ? null : new Char(tmp_0)) == null) {
          unparsedPrimitive(this, 'char');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof IllegalArgumentException) {
          unparsedPrimitive(this, 'char');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  };
  AbstractJsonTreeDecoder.prototype.b16 = function (tag) {
    return this.k1c((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.l1c = function (tag) {
    var value = this.b1c(tag);
    if (!this.s18().h17_1.n17_1) {
      var literal = value instanceof JsonLiteral ? value : THROW_CCE();
      if (!literal.d19_1)
        throw JsonDecodingException_0(-1, "String literal for key '" + tag + "' should be quoted.\n" + get_lenientHint(), toString(currentObject(this)));
    }
    return value.c19();
  };
  AbstractJsonTreeDecoder.prototype.c16 = function (tag) {
    return this.l1c((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeDecoder.prototype.m1c = function (tag, inlineDescriptor) {
    return new JsonDecoderForUnsignedTypes(new JsonReader(this.b1c(tag).c19()), this.s18());
  };
  AbstractJsonTreeDecoder.prototype.d16 = function (tag, inlineDescriptor) {
    return this.m1c((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), inlineDescriptor);
  };
  AbstractJsonTreeDecoder.$metadata$ = classMeta('AbstractJsonTreeDecoder', [JsonDecoder], undefined, undefined, undefined, NamedValueDecoder.prototype);
  function JsonTreeDecoder_init_$Init$(json, value, polyDiscriminator, polyDescriptor, $mask0, $marker, $this) {
    if (!(($mask0 & 4) === 0))
      polyDiscriminator = null;
    if (!(($mask0 & 8) === 0))
      polyDescriptor = null;
    JsonTreeDecoder.call($this, json, value, polyDiscriminator, polyDescriptor);
    return $this;
  }
  function JsonTreeDecoder_init_$Create$(json, value, polyDiscriminator, polyDescriptor, $mask0, $marker) {
    return JsonTreeDecoder_init_$Init$(json, value, polyDiscriminator, polyDescriptor, $mask0, $marker, Object.create(JsonTreeDecoder.prototype));
  }
  function coerceInputValue_0($this, descriptor, index, tag) {
    var elementDescriptor = descriptor.bs(index);
    var tmp;
    var tmp_0 = $this.a1c(tag);
    if (tmp_0 instanceof JsonNull) {
      tmp = !elementDescriptor.ur();
    } else {
      tmp = false;
    }
    if (tmp)
      return true;
    if (equals(elementDescriptor.wr(), ENUM_getInstance())) {
      var tmp_1 = $this.a1c(tag);
      var tmp0_safe_receiver = tmp_1 instanceof JsonPrimitive ? tmp_1 : null;
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : get_contentOrNull(tmp0_safe_receiver);
      var tmp_2;
      if (tmp1_elvis_lhs == null) {
        return false;
      } else {
        tmp_2 = tmp1_elvis_lhs;
      }
      var enumValue = tmp_2;
      var enumIndex = elementDescriptor.as(enumValue);
      Companion_getInstance_0();
      if (enumIndex === -3)
        return true;
    }
    return false;
  }
  function JsonTreeDecoder(json, value, polyDiscriminator, polyDescriptor) {
    AbstractJsonTreeDecoder.call(this, json, value);
    this.s1c_1 = value;
    this.t1c_1 = polyDiscriminator;
    this.u1c_1 = polyDescriptor;
    this.v1c_1 = 0;
  }
  JsonTreeDecoder.prototype.f1 = function () {
    return this.s1c_1;
  };
  JsonTreeDecoder.prototype.fu = function (descriptor) {
    while (this.v1c_1 < descriptor.yr()) {
      var tmp0_this = this;
      var tmp1 = tmp0_this.v1c_1;
      tmp0_this.v1c_1 = tmp1 + 1 | 0;
      var name = this.t14(descriptor, tmp1);
      var tmp;
      var tmp$ret$1;
      // Inline function 'kotlin.collections.contains' call
      var tmp0_contains = this.f1();
      var tmp$ret$0;
      // Inline function 'kotlin.collections.containsKey' call
      tmp$ret$0 = (isInterface(tmp0_contains, Map) ? tmp0_contains : THROW_CCE()).f3(name);
      tmp$ret$1 = tmp$ret$0;
      if (tmp$ret$1) {
        tmp = !this.z1b_1.r17_1 ? true : !coerceInputValue_0(this, descriptor, this.v1c_1 - 1 | 0, name);
      } else {
        tmp = false;
      }
      if (tmp) {
        return this.v1c_1 - 1 | 0;
      }
    }
    Companion_getInstance_0();
    return -1;
  };
  JsonTreeDecoder.prototype.a1c = function (tag) {
    return getValue(this.f1(), tag);
  };
  JsonTreeDecoder.prototype.rt = function (descriptor) {
    if (descriptor === this.u1c_1)
      return this;
    return AbstractJsonTreeDecoder.prototype.rt.call(this, descriptor);
  };
  JsonTreeDecoder.prototype.st = function (descriptor) {
    var tmp;
    if (this.z1b_1.m17_1) {
      tmp = true;
    } else {
      var tmp_0 = descriptor.wr();
      tmp = tmp_0 instanceof PolymorphicKind;
    }
    if (tmp)
      return Unit_getInstance();
    var names = jsonCachedSerialNames(descriptor);
    var tmp0_iterator = this.f1().l3().f();
    while (tmp0_iterator.g()) {
      var key = tmp0_iterator.h();
      if (!names.x1(key) ? !(key === this.t1c_1) : false) {
        throw UnknownKeyException(key, this.f1().toString());
      }
    }
  };
  JsonTreeDecoder.$metadata$ = classMeta('JsonTreeDecoder', undefined, undefined, undefined, undefined, AbstractJsonTreeDecoder.prototype);
  function JsonTreeListDecoder(json, value) {
    AbstractJsonTreeDecoder.call(this, json, value);
    this.b1d_1 = value;
    this.c1d_1 = this.b1d_1.i();
    this.d1d_1 = -1;
  }
  JsonTreeListDecoder.prototype.f1 = function () {
    return this.b1d_1;
  };
  JsonTreeListDecoder.prototype.u14 = function (desc, index) {
    return index.toString();
  };
  JsonTreeListDecoder.prototype.a1c = function (tag) {
    return this.b1d_1.l(toInt(tag));
  };
  JsonTreeListDecoder.prototype.fu = function (descriptor) {
    while (this.d1d_1 < (this.c1d_1 - 1 | 0)) {
      var tmp0_this = this;
      var tmp1 = tmp0_this.d1d_1;
      tmp0_this.d1d_1 = tmp1 + 1 | 0;
      return this.d1d_1;
    }
    Companion_getInstance_0();
    return -1;
  };
  JsonTreeListDecoder.$metadata$ = classMeta('JsonTreeListDecoder', undefined, undefined, undefined, undefined, AbstractJsonTreeDecoder.prototype);
  function JsonPrimitiveDecoder(json, value) {
    AbstractJsonTreeDecoder.call(this, json, value);
    this.j1d_1 = value;
    this.m15(get_PRIMITIVE_TAG());
  }
  JsonPrimitiveDecoder.prototype.f1 = function () {
    return this.j1d_1;
  };
  JsonPrimitiveDecoder.prototype.fu = function (descriptor) {
    return 0;
  };
  JsonPrimitiveDecoder.prototype.a1c = function (tag) {
    // Inline function 'kotlin.require' call
    var tmp0_require = tag === get_PRIMITIVE_TAG();
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlinx.serialization.json.internal.JsonPrimitiveDecoder.currentElement.<anonymous>' call
      tmp$ret$0 = "This input can only handle primitives with '" + get_PRIMITIVE_TAG() + "' tag";
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    return this.j1d_1;
  };
  JsonPrimitiveDecoder.$metadata$ = classMeta('JsonPrimitiveDecoder', undefined, undefined, undefined, undefined, AbstractJsonTreeDecoder.prototype);
  function JsonTreeMapDecoder(json, value) {
    JsonTreeDecoder_init_$Init$(json, value, null, null, 12, null, this);
    this.t1d_1 = value;
    this.u1d_1 = toList(this.t1d_1.l3());
    this.v1d_1 = imul(this.u1d_1.i(), 2);
    this.w1d_1 = -1;
  }
  JsonTreeMapDecoder.prototype.f1 = function () {
    return this.t1d_1;
  };
  JsonTreeMapDecoder.prototype.u14 = function (desc, index) {
    var i = index / 2 | 0;
    return this.u1d_1.l(i);
  };
  JsonTreeMapDecoder.prototype.fu = function (descriptor) {
    while (this.w1d_1 < (this.v1d_1 - 1 | 0)) {
      var tmp0_this = this;
      var tmp1 = tmp0_this.w1d_1;
      tmp0_this.w1d_1 = tmp1 + 1 | 0;
      return this.w1d_1;
    }
    Companion_getInstance_0();
    return -1;
  };
  JsonTreeMapDecoder.prototype.a1c = function (tag) {
    return (this.w1d_1 % 2 | 0) === 0 ? JsonPrimitive_2(tag) : getValue(this.t1d_1, tag);
  };
  JsonTreeMapDecoder.prototype.st = function (descriptor) {
  };
  JsonTreeMapDecoder.$metadata$ = classMeta('JsonTreeMapDecoder', undefined, undefined, undefined, undefined, JsonTreeDecoder.prototype);
  function readPolymorphicJson(_this__u8e3s4, discriminator, element, deserializer) {
    return (new JsonTreeDecoder(_this__u8e3s4, element, discriminator, deserializer.mr())).qt(deserializer);
  }
  function writeJson(_this__u8e3s4, value, serializer) {
    var result = {_v: null};
    var encoder = new JsonTreeEncoder(_this__u8e3s4, writeJson$lambda(result));
    encoder.ev(serializer, value);
    var tmp;
    if (result._v == null) {
      throwUninitializedPropertyAccessException('result');
    } else {
      tmp = result._v;
    }
    return tmp;
  }
  function JsonTreeEncoder(json, nodeConsumer) {
    AbstractJsonTreeEncoder.call(this, json, nodeConsumer);
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.linkedMapOf' call
    tmp$ret$0 = LinkedHashMap_init_$Create$();
    tmp.h1e_1 = tmp$ret$0;
  }
  JsonTreeEncoder.prototype.i1e = function (key, element) {
    // Inline function 'kotlin.collections.set' call
    var tmp0_set = this.h1e_1;
    tmp0_set.u(key, element);
  };
  JsonTreeEncoder.prototype.j1e = function () {
    return new JsonObject(this.h1e_1);
  };
  JsonTreeEncoder.$metadata$ = classMeta('JsonTreeEncoder', undefined, undefined, undefined, undefined, AbstractJsonTreeEncoder.prototype);
  function AbstractJsonTreeEncoder$encodeTaggedInline$1(this$0, $tag) {
    this.x1e_1 = this$0;
    this.y1e_1 = $tag;
    AbstractEncoder.call(this);
    this.w1e_1 = this$0.y1d_1.sr();
  }
  AbstractJsonTreeEncoder$encodeTaggedInline$1.prototype.sr = function () {
    return this.w1e_1;
  };
  AbstractJsonTreeEncoder$encodeTaggedInline$1.prototype.z1e = function (s) {
    return this.x1e_1.i1e(this.y1e_1, new JsonLiteral(s, false));
  };
  AbstractJsonTreeEncoder$encodeTaggedInline$1.prototype.nu = function (value) {
    var tmp$ret$0;
    // Inline function 'kotlin.toUInt' call
    tmp$ret$0 = _UInt___init__impl__l7qpdl(value);
    return this.z1e(UInt__toString_impl_dbgl21(tmp$ret$0));
  };
  AbstractJsonTreeEncoder$encodeTaggedInline$1.prototype.ou = function (value) {
    var tmp$ret$0;
    // Inline function 'kotlin.toULong' call
    tmp$ret$0 = _ULong___init__impl__c78o9k(value);
    return this.z1e(ULong__toString_impl_f9au7k(tmp$ret$0));
  };
  AbstractJsonTreeEncoder$encodeTaggedInline$1.prototype.lu = function (value) {
    var tmp$ret$0;
    // Inline function 'kotlin.toUByte' call
    tmp$ret$0 = _UByte___init__impl__g9hnc4(value);
    return this.z1e(UByte__toString_impl_v72jg(tmp$ret$0));
  };
  AbstractJsonTreeEncoder$encodeTaggedInline$1.prototype.mu = function (value) {
    var tmp$ret$0;
    // Inline function 'kotlin.toUShort' call
    tmp$ret$0 = _UShort___init__impl__jigrne(value);
    return this.z1e(UShort__toString_impl_edaoee(tmp$ret$0));
  };
  AbstractJsonTreeEncoder$encodeTaggedInline$1.$metadata$ = classMeta(undefined, undefined, undefined, undefined, undefined, AbstractEncoder.prototype);
  function AbstractJsonTreeEncoder$beginStructure$lambda(this$0) {
    return function (node) {
      this$0.i1e(this$0.e16(), node);
      return Unit_getInstance();
    };
  }
  function AbstractJsonTreeEncoder(json, nodeConsumer) {
    NamedValueEncoder.call(this);
    this.y1d_1 = json;
    this.z1d_1 = nodeConsumer;
    this.a1e_1 = this.y1d_1.h17_1;
    this.b1e_1 = false;
  }
  AbstractJsonTreeEncoder.prototype.s18 = function () {
    return this.y1d_1;
  };
  AbstractJsonTreeEncoder.prototype.sr = function () {
    return this.y1d_1.sr();
  };
  AbstractJsonTreeEncoder.prototype.w19 = function (element) {
    this.ev(JsonElementSerializer_getInstance(), element);
  };
  AbstractJsonTreeEncoder.prototype.y14 = function (parentName, childName) {
    return childName;
  };
  AbstractJsonTreeEncoder.prototype.ju = function () {
    var tmp0_elvis_lhs = this.x14();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return this.z1d_1(JsonNull_getInstance());
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var tag = tmp;
    this.k1e(tag);
  };
  AbstractJsonTreeEncoder.prototype.k1e = function (tag) {
    return this.i1e(tag, JsonNull_getInstance());
  };
  AbstractJsonTreeEncoder.prototype.a15 = function (tag) {
    return this.k1e((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE());
  };
  AbstractJsonTreeEncoder.prototype.l1e = function (tag, value) {
    return this.i1e(tag, JsonPrimitive_0(value));
  };
  AbstractJsonTreeEncoder.prototype.b15 = function (tag, value) {
    return this.l1e((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  AbstractJsonTreeEncoder.prototype.m1e = function (tag, value) {
    return this.i1e(tag, JsonPrimitive_0(value));
  };
  AbstractJsonTreeEncoder.prototype.c15 = function (tag, value) {
    return this.m1e((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  AbstractJsonTreeEncoder.prototype.n1e = function (tag, value) {
    return this.i1e(tag, JsonPrimitive_0(value));
  };
  AbstractJsonTreeEncoder.prototype.d15 = function (tag, value) {
    return this.n1e((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  AbstractJsonTreeEncoder.prototype.o1e = function (tag, value) {
    return this.i1e(tag, JsonPrimitive_0(value));
  };
  AbstractJsonTreeEncoder.prototype.e15 = function (tag, value) {
    return this.o1e((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  AbstractJsonTreeEncoder.prototype.p1e = function (tag, value) {
    this.i1e(tag, JsonPrimitive_0(value));
    if (!this.a1e_1.u17_1 ? !isFinite(value) : false) {
      throw InvalidFloatingPointEncoded_0(value, tag, toString(this.j1e()));
    }
  };
  AbstractJsonTreeEncoder.prototype.f15 = function (tag, value) {
    return this.p1e((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  AbstractJsonTreeEncoder.prototype.ev = function (serializer, value) {
    var tmp;
    if (!(this.x14() == null)) {
      tmp = true;
    } else {
      var tmp_0;
      var tmp_1 = serializer.mr().wr();
      if (!(tmp_1 instanceof PrimitiveKind)) {
        tmp_0 = !(serializer.mr().wr() === ENUM_getInstance());
      } else {
        tmp_0 = false;
      }
      tmp = tmp_0;
    }
    if (tmp) {
      var tmp$ret$0;
      $l$block: {
        // Inline function 'kotlinx.serialization.json.internal.encodePolymorphically' call
        var tmp_2;
        if (!(serializer instanceof AbstractPolymorphicSerializer)) {
          tmp_2 = true;
        } else {
          tmp_2 = this.s18().h17_1.s17_1;
        }
        if (tmp_2) {
          serializer.nr(this, value);
          tmp$ret$0 = Unit_getInstance();
          break $l$block;
        }
        var tmp_3 = isInterface(serializer, SerializationStrategy) ? serializer : THROW_CCE();
        var actualSerializer = findActualSerializer$accessor$1ad0flx(this, tmp_3, isObject(value) ? value : THROW_CCE());
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeEncoder.encodeSerializableValue.<anonymous>' call
        this.b1e_1 = true;
        actualSerializer.nr(this, value);
      }
    } else {
      var tmp$ret$1;
      // Inline function 'kotlin.apply' call
      var tmp0_apply = new JsonPrimitiveEncoder(this.y1d_1, this.z1d_1);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeEncoder.encodeSerializableValue.<anonymous>' call
      tmp0_apply.ev(serializer, value);
      tmp0_apply.l15(serializer.mr());
      tmp$ret$1 = tmp0_apply;
    }
  };
  AbstractJsonTreeEncoder.prototype.q1e = function (tag, value) {
    this.i1e(tag, JsonPrimitive_0(value));
    if (!this.a1e_1.u17_1 ? !isFinite_0(value) : false) {
      throw InvalidFloatingPointEncoded_0(value, tag, toString(this.j1e()));
    }
  };
  AbstractJsonTreeEncoder.prototype.g15 = function (tag, value) {
    return this.q1e((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  AbstractJsonTreeEncoder.prototype.r1e = function (tag, value) {
    return this.i1e(tag, JsonPrimitive_1(value));
  };
  AbstractJsonTreeEncoder.prototype.h15 = function (tag, value) {
    return this.r1e((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  AbstractJsonTreeEncoder.prototype.s1e = function (tag, value) {
    return this.i1e(tag, JsonPrimitive_2(toString_0(value)));
  };
  AbstractJsonTreeEncoder.prototype.i15 = function (tag, value) {
    return this.s1e((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  AbstractJsonTreeEncoder.prototype.t1e = function (tag, value) {
    return this.i1e(tag, JsonPrimitive_2(value));
  };
  AbstractJsonTreeEncoder.prototype.j15 = function (tag, value) {
    return this.t1e((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  AbstractJsonTreeEncoder.prototype.u1e = function (tag, value) {
    this.i1e(tag, JsonPrimitive_2(toString(value)));
  };
  AbstractJsonTreeEncoder.prototype.z14 = function (tag, value) {
    return this.u1e((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), value);
  };
  AbstractJsonTreeEncoder.prototype.v1e = function (tag, inlineDescriptor) {
    return new AbstractJsonTreeEncoder$encodeTaggedInline$1(this, tag);
  };
  AbstractJsonTreeEncoder.prototype.k15 = function (tag, inlineDescriptor) {
    return this.v1e((!(tag == null) ? typeof tag === 'string' : false) ? tag : THROW_CCE(), inlineDescriptor);
  };
  AbstractJsonTreeEncoder.prototype.rt = function (descriptor) {
    var tmp;
    if (this.x14() == null) {
      tmp = this.z1d_1;
    } else {
      tmp = AbstractJsonTreeEncoder$beginStructure$lambda(this);
    }
    var consumer = tmp;
    var tmp0_subject = descriptor.wr();
    var tmp_0;
    var tmp_1;
    if (equals(tmp0_subject, LIST_getInstance())) {
      tmp_1 = true;
    } else {
      tmp_1 = tmp0_subject instanceof PolymorphicKind;
    }
    if (tmp_1) {
      tmp_0 = new JsonTreeListEncoder(this.y1d_1, consumer);
    } else {
      if (equals(tmp0_subject, MAP_getInstance())) {
        var tmp$ret$2;
        // Inline function 'kotlinx.serialization.json.internal.selectMapMode' call
        var tmp0_selectMapMode = this.y1d_1;
        var keyDescriptor = descriptor.bs(0);
        var keyKind = keyDescriptor.wr();
        var tmp_2;
        var tmp_3;
        if (keyKind instanceof PrimitiveKind) {
          tmp_3 = true;
        } else {
          tmp_3 = equals(keyKind, ENUM_getInstance());
        }
        if (tmp_3) {
          var tmp$ret$0;
          // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeEncoder.beginStructure.<anonymous>' call
          tmp$ret$0 = new JsonTreeMapEncoder(this.y1d_1, consumer);
          tmp_2 = tmp$ret$0;
        } else {
          if (tmp0_selectMapMode.h17_1.o17_1) {
            var tmp$ret$1;
            // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeEncoder.beginStructure.<anonymous>' call
            tmp$ret$1 = new JsonTreeListEncoder(this.y1d_1, consumer);
            tmp_2 = tmp$ret$1;
          } else {
            throw InvalidKeyKindException(keyDescriptor);
          }
        }
        tmp$ret$2 = tmp_2;
        tmp_0 = tmp$ret$2;
      } else {
        tmp_0 = new JsonTreeEncoder(this.y1d_1, consumer);
      }
    }
    var encoder = tmp_0;
    if (this.b1e_1) {
      this.b1e_1 = false;
      encoder.i1e(this.a1e_1.t17_1, JsonPrimitive_2(descriptor.vr()));
    }
    return encoder;
  };
  AbstractJsonTreeEncoder.prototype.l15 = function (descriptor) {
    this.z1d_1(this.j1e());
  };
  AbstractJsonTreeEncoder.$metadata$ = classMeta('AbstractJsonTreeEncoder', [JsonEncoder], undefined, undefined, undefined, NamedValueEncoder.prototype);
  function JsonPrimitiveEncoder(json, nodeConsumer) {
    AbstractJsonTreeEncoder.call(this, json, nodeConsumer);
    this.f1f_1 = null;
    this.m15('primitive');
  }
  JsonPrimitiveEncoder.prototype.i1e = function (key, element) {
    // Inline function 'kotlin.require' call
    var tmp0_require = key === 'primitive';
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp0_require) {
      var tmp$ret$0;
      // Inline function 'kotlinx.serialization.json.internal.JsonPrimitiveEncoder.putElement.<anonymous>' call
      tmp$ret$0 = "This output can only consume primitives with 'primitive' tag";
      var message = tmp$ret$0;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.require' call
    var tmp1_require = this.f1f_1 == null;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp1_require) {
      var tmp$ret$1;
      // Inline function 'kotlinx.serialization.json.internal.JsonPrimitiveEncoder.putElement.<anonymous>' call
      tmp$ret$1 = 'Primitive element was already recorded. Does call to .encodeXxx happen more than once?';
      var message_0 = tmp$ret$1;
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
    this.f1f_1 = element;
  };
  JsonPrimitiveEncoder.prototype.j1e = function () {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.requireNotNull' call
      var tmp0_requireNotNull = this.f1f_1;
      // Inline function 'kotlin.contracts.contract' call
      if (tmp0_requireNotNull == null) {
        var tmp$ret$0;
        // Inline function 'kotlinx.serialization.json.internal.JsonPrimitiveEncoder.getCurrent.<anonymous>' call
        tmp$ret$0 = 'Primitive element has not been recorded. Is call to .encodeXxx is missing in serializer?';
        var message = tmp$ret$0;
        throw IllegalArgumentException_init_$Create$(toString(message));
      } else {
        tmp$ret$1 = tmp0_requireNotNull;
        break $l$block;
      }
    }
    return tmp$ret$1;
  };
  JsonPrimitiveEncoder.$metadata$ = classMeta('JsonPrimitiveEncoder', undefined, undefined, undefined, undefined, AbstractJsonTreeEncoder.prototype);
  function JsonTreeListEncoder(json, nodeConsumer) {
    AbstractJsonTreeEncoder.call(this, json, nodeConsumer);
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.arrayListOf' call
    tmp$ret$0 = ArrayList_init_$Create$();
    tmp.l1f_1 = tmp$ret$0;
  }
  JsonTreeListEncoder.prototype.u14 = function (descriptor, index) {
    return index.toString();
  };
  JsonTreeListEncoder.prototype.i1e = function (key, element) {
    var idx = toInt(key);
    this.l1f_1.ka(idx, element);
  };
  JsonTreeListEncoder.prototype.j1e = function () {
    return new JsonArray(this.l1f_1);
  };
  JsonTreeListEncoder.$metadata$ = classMeta('JsonTreeListEncoder', undefined, undefined, undefined, undefined, AbstractJsonTreeEncoder.prototype);
  function _get_tag__e6h4qf($this) {
    var tmp = $this.s1f_1;
    if (!(tmp == null))
      return tmp;
    else {
      throwUninitializedPropertyAccessException('tag');
    }
  }
  function JsonTreeMapEncoder(json, nodeConsumer) {
    JsonTreeEncoder.call(this, json, nodeConsumer);
    this.t1f_1 = true;
  }
  JsonTreeMapEncoder.prototype.i1e = function (key, element) {
    if (this.t1f_1) {
      var tmp = this;
      var tmp0_subject = element;
      var tmp_0;
      if (tmp0_subject instanceof JsonPrimitive) {
        tmp_0 = element.c19();
      } else {
        if (tmp0_subject instanceof JsonObject) {
          throw InvalidKeyKindException(JsonObjectSerializer_getInstance().i19_1);
        } else {
          if (tmp0_subject instanceof JsonArray) {
            throw InvalidKeyKindException(JsonArraySerializer_getInstance().j19_1);
          } else {
            noWhenBranchMatchedException();
          }
        }
      }
      tmp.s1f_1 = tmp_0;
      this.t1f_1 = false;
    } else {
      // Inline function 'kotlin.collections.set' call
      var tmp0_set = this.h1e_1;
      var tmp1_set = _get_tag__e6h4qf(this);
      tmp0_set.u(tmp1_set, element);
      this.t1f_1 = true;
    }
  };
  JsonTreeMapEncoder.prototype.j1e = function () {
    return new JsonObject(this.h1e_1);
  };
  JsonTreeMapEncoder.$metadata$ = classMeta('JsonTreeMapEncoder', undefined, undefined, undefined, undefined, JsonTreeEncoder.prototype);
  function get_PRIMITIVE_TAG() {
    return PRIMITIVE_TAG;
  }
  var PRIMITIVE_TAG;
  function writeJson$lambda($result) {
    return function (it) {
      $result._v = it;
      return Unit_getInstance();
    };
  }
  var WriteMode_OBJ_instance;
  var WriteMode_LIST_instance;
  var WriteMode_MAP_instance;
  var WriteMode_POLY_OBJ_instance;
  function values() {
    return [WriteMode_OBJ_getInstance(), WriteMode_LIST_getInstance(), WriteMode_MAP_getInstance(), WriteMode_POLY_OBJ_getInstance()];
  }
  var WriteMode_entriesInitialized;
  function WriteMode_initEntries() {
    if (WriteMode_entriesInitialized)
      return Unit_getInstance();
    WriteMode_entriesInitialized = true;
    WriteMode_OBJ_instance = new WriteMode('OBJ', 0, get_BEGIN_OBJ(), get_END_OBJ());
    WriteMode_LIST_instance = new WriteMode('LIST', 1, get_BEGIN_LIST(), get_END_LIST());
    WriteMode_MAP_instance = new WriteMode('MAP', 2, get_BEGIN_OBJ(), get_END_OBJ());
    WriteMode_POLY_OBJ_instance = new WriteMode('POLY_OBJ', 3, get_BEGIN_LIST(), get_END_LIST());
  }
  function WriteMode(name, ordinal, begin, end) {
    Enum.call(this, name, ordinal);
    this.t1a_1 = begin;
    this.u1a_1 = end;
    this.v1a_1 = charToTokenClass(this.t1a_1);
    this.w1a_1 = charToTokenClass(this.u1a_1);
  }
  WriteMode.prototype.u1f = function () {
    return this.t1a_1;
  };
  WriteMode.prototype.v1f = function () {
    return this.u1a_1;
  };
  WriteMode.$metadata$ = classMeta('WriteMode', undefined, undefined, undefined, undefined, Enum.prototype);
  function switchMode(_this__u8e3s4, desc) {
    var tmp0_subject = desc.wr();
    var tmp;
    if (tmp0_subject instanceof PolymorphicKind) {
      tmp = WriteMode_POLY_OBJ_getInstance();
    } else {
      if (equals(tmp0_subject, LIST_getInstance())) {
        tmp = WriteMode_LIST_getInstance();
      } else {
        if (equals(tmp0_subject, MAP_getInstance())) {
          var tmp$ret$2;
          // Inline function 'kotlinx.serialization.json.internal.selectMapMode' call
          var keyDescriptor = desc.bs(0);
          var keyKind = keyDescriptor.wr();
          var tmp_0;
          var tmp_1;
          if (keyKind instanceof PrimitiveKind) {
            tmp_1 = true;
          } else {
            tmp_1 = equals(keyKind, ENUM_getInstance());
          }
          if (tmp_1) {
            var tmp$ret$0;
            // Inline function 'kotlinx.serialization.json.internal.switchMode.<anonymous>' call
            tmp$ret$0 = WriteMode_MAP_getInstance();
            tmp_0 = tmp$ret$0;
          } else {
            if (_this__u8e3s4.h17_1.o17_1) {
              var tmp$ret$1;
              // Inline function 'kotlinx.serialization.json.internal.switchMode.<anonymous>' call
              tmp$ret$1 = WriteMode_LIST_getInstance();
              tmp_0 = tmp$ret$1;
            } else {
              throw InvalidKeyKindException(keyDescriptor);
            }
          }
          tmp$ret$2 = tmp_0;
          tmp = tmp$ret$2;
        } else {
          tmp = WriteMode_OBJ_getInstance();
        }
      }
    }
    return tmp;
  }
  function selectMapMode(_this__u8e3s4, mapDescriptor, ifMap, ifList) {
    var keyDescriptor = mapDescriptor.bs(0);
    var keyKind = keyDescriptor.wr();
    var tmp;
    var tmp_0;
    if (keyKind instanceof PrimitiveKind) {
      tmp_0 = true;
    } else {
      tmp_0 = equals(keyKind, ENUM_getInstance());
    }
    if (tmp_0) {
      tmp = ifMap();
    } else {
      if (_this__u8e3s4.h17_1.o17_1) {
        tmp = ifList();
      } else {
        throw InvalidKeyKindException(keyDescriptor);
      }
    }
    return tmp;
  }
  function WriteMode_OBJ_getInstance() {
    WriteMode_initEntries();
    return WriteMode_OBJ_instance;
  }
  function WriteMode_LIST_getInstance() {
    WriteMode_initEntries();
    return WriteMode_LIST_instance;
  }
  function WriteMode_MAP_getInstance() {
    WriteMode_initEntries();
    return WriteMode_MAP_instance;
  }
  function WriteMode_POLY_OBJ_getInstance() {
    WriteMode_initEntries();
    return WriteMode_POLY_OBJ_instance;
  }
  //region block: post-declaration
  defer$1.prototype.ur = get_isNullable;
  defer$1.prototype.xr = get_isInline;
  StreamingJsonDecoder.prototype.eu = decodeSequentially;
  StreamingJsonDecoder.prototype.gu = decodeCollectionSize;
  StreamingJsonDecoder.prototype.du = decodeSerializableElement$default;
  JsonDecoderForUnsignedTypes.prototype.qt = decodeSerializableValue;
  JsonDecoderForUnsignedTypes.prototype.du = decodeSerializableElement$default;
  JsonDecoderForUnsignedTypes.prototype.eu = decodeSequentially;
  JsonDecoderForUnsignedTypes.prototype.gu = decodeCollectionSize;
  StreamingJsonEncoder.prototype.fv = encodeNotNullMark;
  StreamingJsonEncoder.prototype.gv = beginCollection;
  AbstractJsonTreeDecoder.prototype.du = decodeSerializableElement$default;
  AbstractJsonTreeDecoder.prototype.eu = decodeSequentially;
  AbstractJsonTreeDecoder.prototype.gu = decodeCollectionSize;
  JsonTreeDecoder.prototype.du = decodeSerializableElement$default;
  JsonTreeDecoder.prototype.eu = decodeSequentially;
  JsonTreeDecoder.prototype.gu = decodeCollectionSize;
  JsonTreeListDecoder.prototype.du = decodeSerializableElement$default;
  JsonTreeListDecoder.prototype.eu = decodeSequentially;
  JsonTreeListDecoder.prototype.gu = decodeCollectionSize;
  JsonPrimitiveDecoder.prototype.du = decodeSerializableElement$default;
  JsonPrimitiveDecoder.prototype.eu = decodeSequentially;
  JsonPrimitiveDecoder.prototype.gu = decodeCollectionSize;
  JsonTreeMapDecoder.prototype.du = decodeSerializableElement$default;
  JsonTreeMapDecoder.prototype.eu = decodeSequentially;
  JsonTreeMapDecoder.prototype.gu = decodeCollectionSize;
  AbstractJsonTreeEncoder.prototype.gv = beginCollection;
  JsonTreeEncoder.prototype.gv = beginCollection;
  AbstractJsonTreeEncoder$encodeTaggedInline$1.prototype.fv = encodeNotNullMark;
  AbstractJsonTreeEncoder$encodeTaggedInline$1.prototype.gv = beginCollection;
  AbstractJsonTreeEncoder$encodeTaggedInline$1.prototype.ev = encodeSerializableValue;
  JsonPrimitiveEncoder.prototype.gv = beginCollection;
  JsonTreeListEncoder.prototype.gv = beginCollection;
  JsonTreeMapEncoder.prototype.gv = beginCollection;
  //endregion
  //region block: init
  COLON = _Char___init__impl__6a9atx(58);
  INVALID = _Char___init__impl__6a9atx(0);
  COMMA = _Char___init__impl__6a9atx(44);
  NULL = 'null';
  BEGIN_OBJ = _Char___init__impl__6a9atx(123);
  END_OBJ = _Char___init__impl__6a9atx(125);
  BEGIN_LIST = _Char___init__impl__6a9atx(91);
  END_LIST = _Char___init__impl__6a9atx(93);
  TC_BEGIN_LIST = 8;
  TC_BEGIN_OBJ = 6;
  TC_OTHER = 0;
  TC_STRING = 1;
  TC_NULL = 10;
  lenientHint = "Use 'isLenient = true' in 'Json {}` builder to accept non-compliant JSON.";
  STRING = _Char___init__impl__6a9atx(34);
  TC_END_LIST = 9;
  TC_END_OBJ = 7;
  TC_COMMA = 4;
  TC_COLON = 5;
  ignoreUnknownKeysHint = "Use 'ignoreUnknownKeys = true' in 'Json {}' builder to ignore unknown keys.";
  specialFlowingValuesHint = "It is possible to deserialize them using 'JsonBuilder.allowSpecialFloatingPointValues = true'";
  allowStructuredMapKeysHint = "Use 'allowStructuredMapKeys = true' in 'Json {}' builder to convert such maps to [key1, value1, key2, value2,...] arrays.";
  PRIMITIVE_TAG = 'primitive';
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = Default_getInstance;
  _.$_$.b = JsonArray;
  _.$_$.c = JsonObject;
  _.$_$.d = JsonTransformingSerializer;
  //endregion
  return _;
}));

//# sourceMappingURL=kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.js.map


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";

;// CONCATENATED MODULE: ./src/utils/ExhaustivityError.ts
class ExhaustivityError extends Error{// https://typescriptbook.jp/reference/statements/never#%E4%BE%8B%E5%A4%96%E3%81%AB%E3%82%88%E3%82%8B%E7%B6%B2%E7%BE%85%E6%80%A7%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF (例外による網羅性チェック)
constructor(value,message=`Unsupported type: ${value}`){super(message);}}
;// CONCATENATED MODULE: ./src/components/Calculator/WorkerContext/expose.ts
function expose(postMessage,getWorkerImpl){const postWorkerOutput=output=>{postMessage({type:"output",value:output});};const updateState=(...args)=>{// const [key, value] = args
const key=args[0];const value=args[1];const output={type:"updateState",key,value};postMessage(output);};const workerImpl=getWorkerImpl({postWorkerOutput,updateState});const call=input=>{const result=workerImpl.workerFunc[input.key](...input.args);const output={type:"funcResult",key:input.key,result:result,id:input.id};postMessage(output);};const onmessage=event=>{const input=event.data;switch(input.type){case"input":workerImpl.onWorkerInput(input.value);return;case"callFunc":call(input);return;default:throw new ExhaustivityError(input,"onmessage is not exhaustive!");}};return{onmessage};}
// EXTERNAL MODULE: ./node_modules/kohomology-js/kotlin/kohomology-js.js
var kohomology_js = __webpack_require__(617);
;// CONCATENATED MODULE: ./src/components/Calculator/styled/message.ts
const stringTypes=["text","math"];const messageTypes=["success","error"];function fromString(messageType,str){const styledString={stringType:"text",content:str};const options={dgaJson:null,plainString:str};return{messageType:messageType,strings:[styledString],plainString:str,options:options};}
;// CONCATENATED MODULE: ./src/components/Calculator/worker/styled.ts
function toStyledString(styledStringKt){const stringType=styledStringKt.stringType;if(!stringTypes.includes(stringType)){throw new Error(`Invalid stringType: ${stringType}`);}return{stringType:stringType,content:styledStringKt.content};}function toMessageOptions(messageOptionsKt){return{dgaJson:messageOptionsKt.dgaJson??null,plainString:messageOptionsKt.plainString};}function toStyledMessage(styledMessageKt){const messageType=styledMessageKt.messageType;if(!messageTypes.includes(messageType)){throw new Error(`Invalid messageType: ${messageType}`);}return{messageType:messageType,strings:styledMessageKt.strings.map(toStyledString),plainString:styledMessageKt.plainString,options:toMessageOptions(styledMessageKt.options)};}
;// CONCATENATED MODULE: ./src/components/Calculator/worker/KohomologyMessageHandler.ts
class KohomologyMessageHandler{dgaWrapper=null;constructor(postMessage,updateState,log,error){// this.onmessage = this.onmessage.bind(this)
this.log=log??((...messages)=>console.log(...messages));this.error=error??((...messages)=>console.error(...messages));this.postMessage=output=>{this.log("WorkerOutput",output);postMessage(output);};this.updateState=(...args)=>{this.log("updateState",...args);updateState(...args);};this.log("new KohomologyMessageHandler()");}onmessage(input){this.log("WorkerInput",input);this.notifyInfo({status:"computing",progress:null});try{switch(input.command){case"updateJson":this.updateJson(input.json);this.updateIdealJson("[]");this.showDgaInfo();this.showIdealInfo();break;case"updateIdealJson":this.updateIdealJson(input.idealJson);this.showIdealInfo();break;case"computeCohomology":this.computeCohomology(input.targetName,input.minDegree,input.maxDegree,input.showCohomology);break;case"computeCohomologyClass":this.computeCohomologyClass(input.targetName,input.cocycleString,input.showBasis);break;case"computeMinimalModel":this.computeMinimalModel(input.targetName,input.isomorphismUpTo);break;default:throw new ExhaustivityError(input,`Invalid command: ${input}`);}}catch(error){if(error instanceof Error){this.sendMessages(fromString("error",error.message));}this.error(error);}finally{this.notifyInfo({status:"idle"});}}updateJson(json){try{this.dgaWrapper=new kohomology_js.FreeDGAWrapper(json);this.updateState("json",json);}catch(error){this.dgaWrapper=null;throw error;}}updateIdealJson(idealJson){assertNotNull(this.dgaWrapper,"dgaWrapper is null");this.dgaWrapper.setIdeal(idealJson);this.updateState("idealJson",idealJson);}sendMessages(messages){if(messages instanceof Array){const output={command:"printMessages",messages:messages};this.postMessage(output);}else{const output={command:"printMessages",messages:[messages]};this.postMessage(output);}}notifyInfo(workerInfo){this.updateState("workerInfo",workerInfo);}computeCohomology(targetName,minDegree,maxDegree,showCohomology){assertNotNull(this.dgaWrapper,"dgaWrapper is null");this.sendMessages(toStyledMessage(this.dgaWrapper.computationHeader(targetName,minDegree,maxDegree)));this.notifyInfo({status:"computing",progress:0});let styledMessages=[];let previousTime=new Date().getTime();// in millisecond
for(let degree=minDegree;degree<=maxDegree;degree++){switch(showCohomology){// Don't send message immediately for performance reason.
// If styledMessages.push(...) is replaced with this.sendMessages(...),
// then the Calculator significantly slows down.
// This is because this.sendMessages(...) causes re-render of the component Calculator.
case"basis":styledMessages.push(toStyledMessage(this.dgaWrapper.computeCohomology(targetName,degree)));break;case"dim":styledMessages.push(toStyledMessage(this.dgaWrapper.computeCohomologyDim(targetName,degree)));break;}const currentTime=new Date().getTime();// in millisecond
if(currentTime-previousTime>500){previousTime=currentTime;this.sendMessages(styledMessages);const progress=(degree-minDegree+1)/(maxDegree-minDegree+1);this.notifyInfo({status:"computing",progress});styledMessages=[];}}this.sendMessages(styledMessages);}computeCohomologyClass(targetName,cocycleString,showBasis){assertNotNull(this.dgaWrapper,"dgaWrapper is null");this.notifyInfo({status:"computing",progress:null});this.sendMessages(toStyledMessage(this.dgaWrapper.computeCohomologyClass(targetName,cocycleString,showBasis)));}computeMinimalModel(targetName,isomorphismUpTo){assertNotNull(this.dgaWrapper,"dgaWrapper is null");this.notifyInfo({status:"computing",progress:null});const reportProgress=(currentIsomorphismUpTo,targetIsomorphismUpTo,currentNumberOfGenerators)=>{this.updateState("workerInfo",{status:"computing",progress:targetIsomorphismUpTo!==0?currentIsomorphismUpTo/targetIsomorphismUpTo:1,message:`Completed degree ${currentIsomorphismUpTo}/${targetIsomorphismUpTo}, `+`Generators: ${currentNumberOfGenerators}`});};this.sendMessages(this.dgaWrapper.computeMinimalModel(targetName,isomorphismUpTo,reportProgress).map(toStyledMessage));}showDgaInfo(){if(this.dgaWrapper===null){const message="[Error] Your DGA contains errors. Please fix them.";this.updateState("dgaInfo",[fromString("error",message)]);}else{this.updateState("dgaInfo",this.dgaWrapper.dgaInfo().map(toStyledMessage));}}showIdealInfo(){assertNotNull(this.dgaWrapper,"dgaWrapper is null");this.updateState("idealInfo",toStyledMessage(this.dgaWrapper.idealInfo()));}validateIdealGenerator(generator){assertNotNull(this.dgaWrapper,"dgaWrapper is null");const result=(0,kohomology_js.validateIdealGeneratorString)(this.dgaWrapper,generator);switch(result.type){case"success":return true;case"error":return result.message;default:throw new Error("This can't happen!");}}validateIdealGeneratorArray(generatorArray){assertNotNull(this.dgaWrapper,"dgaWrapper is null");const json=JSON.stringify(generatorArray);const result=(0,kohomology_js.validateIdealJson)(this.dgaWrapper,json);switch(result.type){case"success":return true;case"error":return result.message;default:throw new Error("This can't happen!");}}}function assertNotNull(value,errorMessage){if(value===null){throw new Error(errorMessage);}}
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./src/components/Calculator/worker/kohomology.worker.ts
// eslint-disable-next-line no-restricted-globals
const ctx=self;const exposed=expose(ctx.postMessage.bind(ctx),({postWorkerOutput,updateState})=>{const messageHandler=new KohomologyMessageHandler(postWorkerOutput,updateState);return{onWorkerInput:input=>messageHandler.onmessage(input),workerFunc:{validateIdealGenerator:generator=>messageHandler.validateIdealGenerator(generator),validateIdealGeneratorArray:generatorArray=>messageHandler.validateIdealGeneratorArray(generatorArray)}};});onmessage=exposed.onmessage;
})();

/******/ })()
;