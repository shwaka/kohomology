// Copied from index.html generated by github-action-benchmark

import { Bench, Benchmark, Commit, Tool } from "./BenchmarkData"

// Colors from https://github.com/github/linguist/blob/master/lib/linguist/languages.yml
const toolColors = {
  cargo: "#dea584",
  go: "#00add8",
  benchmarkjs: "#f1e05a",
  pytest: "#3572a5",
  googlecpp: "#f34b7d",
  catch2: "#f34b7d",
  customBiggerIsBetter: "#38ff38",
  customSmallerIsBetter: "#ff3838",
  _: "#333333"
}

interface BenchWithCommit {
  commit: Commit
  date: number
  tool: Tool
  bench: Bench
}

export function collectBenchesPerTestCase(entries: Benchmark[]): Map<string, BenchWithCommit[]> {
  const map: Map<string, BenchWithCommit[]> = new Map()
  for (const entry of entries) {
    const {commit, date, tool, benches} = entry
    for (const bench of benches) {
      const result: BenchWithCommit = { commit, date, tool, bench }
      const arr = map.get(bench.name)
      if (arr === undefined) {
        map.set(bench.name, [result])
      } else {
        arr.push(result)
      }
    }
  }
  return map
}

export function getChartArgument(name, dataset) {
  const color = toolColors[dataset.length > 0 ? dataset[0].tool : "_"]
  const data = {
    labels: dataset.map(d => d.commit.id.slice(0, 7)),
    datasets: [
      {
        label: name,
        data: dataset.map(d => d.bench.value),
        borderColor: color,
        backgroundColor: color + "60", // Add alpha for #rrggbbaa
      }
    ],
  }
  const options = {
    scales: {
      xAxes: [
        {
          scaleLabel: {
            display: true,
            labelString: "commit",
          },
        }
      ],
      yAxes: [
        {
          scaleLabel: {
            display: true,
            labelString: dataset.length > 0 ? dataset[0].bench.unit : "",
          },
          ticks: {
            beginAtZero: true,
          }
        }
      ],
    },
    tooltips: {
      callbacks: {
        afterTitle: items => {
          const {index} = items[0]
          const data = dataset[index]
          return "\n" + data.commit.message + "\n\n" + data.commit.timestamp + " committed by @" + data.commit.committer.username + "\n"
        },
        label: item => {
          let label = item.value
          const { range, unit } = dataset[item.index].bench
          label += " " + unit
          if (range) {
            label += " (" + range + ")"
          }
          return label
        },
        afterLabel: item => {
          const { extra } = dataset[item.index].bench
          return extra ? "\n" + extra : ""
        }
      }
    },
    onClick: (_mouseEvent, activeElems) => {
      if (activeElems.length === 0) {
        return
      }
      // XXX: Undocumented. How can we know the index?
      const index = activeElems[0]._index
      const url = dataset[index].commit.url
      window.open(url, "_blank")
    },
  }

  return {
    type: "line",
    data,
    options,
  }
}
